<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="3/21/2019 12:01:54 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="RND-RGAILEY"
  DTS:CreatorName="HAYESSOFT\rgailey"
  DTS:DTSID="{00152C66-B3D0-4060-940F-D7DDBAE31651}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.68"
  DTS:LocaleID="1033"
  DTS:ObjectName="Aspen_IM_Charges_Import"
  DTS:PackageType="5"
  DTS:ProtectionLevel="2"
  DTS:VersionBuild="619"
  DTS:VersionGUID="{E8C6733D-6D39-427D-BAB1-72BF2F34669E}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[ReportServer]"
      DTS:CreationName="HTTP"
      DTS:DTSID="{64EC1B79-00FD-42C7-8B31-E4BDE5EE1316}"
      DTS:ObjectName="ReportServer">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="http://hayessqlsvr/Reports/Pages/Report.aspx?ItemPath=%2fDataIntergration%2fIntegrationDefaultReportImport">
          <DTS:HttpConnection
            DTS:ServerURL="http://hayessqlsvr/Reports/Pages/Report.aspx?ItemPath=%2fDataIntergration%2fIntegrationDefaultReportImport"
            DTS:UseServerCredentials="True"
            DTS:ServerUserName="IntegerationReports"
            DTS:ServerDomain="hayessqlsvr"
            DTS:TimeOut="300"
            DTS:ChunkSize="50"
            DTS:ProxyUserName="RGailey">
            <EncryptedData
              Type="http://www.w3.org/2001/04/xmlenc#Element"
              Salt="HlwxN30xsg=="
              IV="4KllW+1naZw=" xmlns="http://www.w3.org/2001/04/xmlenc#">
              <EncryptionMethod
                Algorithm="http://www.w3.org/2001/04/xmlenc#tripledes-cbc" />
              <CipherData>
                <CipherValue>4KllW+1naZyVlt0OTTKUV+dV9ct5HXdEJD1KXrgqAvp7ZIj/I0RK2hGd5rcQf36hNUBU6pH5+sx4AiRFQjIW8SpIIO3C4xMNy0ltrTcNL6I5urKIFGXhagqZON77g/3N98Tj8a/118RRn3CXSszqtnnY0uHxZqPPVykRs6mjpARI/B/IhHHToQ==</CipherValue>
              </CipherData>
            </EncryptedData>
            <EncryptedData
              Type="http://www.w3.org/2001/04/xmlenc#Element"
              Salt="EL7uOl+Q/A=="
              IV="J9FyCAo9SzQ=" xmlns="http://www.w3.org/2001/04/xmlenc#">
              <EncryptionMethod
                Algorithm="http://www.w3.org/2001/04/xmlenc#tripledes-cbc" />
              <CipherData>
                <CipherValue>J9FyCAo9SzTxY2DqJxlSFLg1oFr+kVu/lSwodw0Y+z4t+8GiTLFWIYWMTlT4KbmNBFmFsfDrXd0/wTPd5Rbms3bWPPOcVdhEJJLB0rZJRnyzQBXQdaYAGvft5e7oGw/UBw0EwROYBxWam1uMp5wIbDOzLS/DMW3dd4A1/eYo9rg=</CipherValue>
              </CipherData>
            </EncryptedData>
          </DTS:HttpConnection>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Source - Excel Charges]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{844F6776-143F-4609-8DDD-82356DACCB8E}"
      DTS:ObjectName="Source - Excel Charges">
      <DTS:PropertyExpression
        DTS:Name="ExcelFilePath">@[User::RootPath] + @[User::FilePath] + @[User::FileName]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=E:\EZImportFiles\ChicagoPS_SFTP_User\Integration\Charges\Import\IM\Import\IM_Onetime_Charges_ImportExceptions.xls;Extended Properties=&quot;Excel 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Target - IntegrationMiddleWay]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{3B254E45-1603-4464-B6B4-A3EBA7FA80E1}"
      DTS:ObjectName="Target - IntegrationMiddleWay">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=RND-RGAILEY\MSSQL2014;Initial Catalog=IntegrationMiddleWay;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Target - IntergrationDashboard]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{B194E9DA-F23A-457A-A340-58E7ECEAB209}"
      DTS:ObjectName="Target - IntergrationDashboard">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=10.128.195.174;Initial Catalog=_IntegrationDashboard;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Target - TIPWeb]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{B29BBDD1-1400-4981-B92F-0054F8224CA9}"
      DTS:ObjectName="Target - TIPWeb">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=HSS-PROD-SQL-01;Initial Catalog=TipWebHostedChicagoPS;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C319AFFE-B45B-443C-B11A-4EB8B1E52696}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ApplicationUID">
      <DTS:VariableValue
        DTS:DataType="3">1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{95729AB0-89DC-42C3-85BE-FEB64E42044A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ArchiveFilePath">
      <DTS:VariableValue
        DTS:DataType="8">Archive\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D0125F64-A1DF-4BCB-8294-B18F755CD7A6}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Counter">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1025AFC2-A232-4AED-91C7-2426D978E3ED}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CustomerCode">
      <DTS:VariableValue
        DTS:DataType="8">CPS</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5FD68231-632F-40D5-8A42-49FBFF2F484D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CustomerFullName">
      <DTS:VariableValue
        DTS:DataType="8">Chicago Public Schools</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3FEE3E45-10B9-4A10-AB1E-7B43A0D0C97C}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="DaysToKeep">
      <DTS:VariableValue
        DTS:DataType="3">24</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{172F5189-A32D-4348-A5EC-2E7B10EEBB31}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Debug">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{004ED085-0921-44D7-8D2B-229DEDF4A2CD}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="EMailCC">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4E6E5429-8E71-4E43-B2E8-7A7E7FCF50B3}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="EmailSend">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B89E6B68-C183-4BEB-B165-07FFB6FD44CB}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="EmailTo">
      <DTS:VariableValue
        DTS:DataType="8">integration_results@hayessoft.com</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C66AB0E2-7BAC-4D25-B6E7-0C71721902A9}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ExcelFullFilePathName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{53DBD3C0-4C7B-43F0-A5AC-22804DFEC6CE}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="FileCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C2345A26-A12A-45C4-975D-126B93BCE732}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileExtension">
      <DTS:VariableValue
        DTS:DataType="8">xls</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1D799F55-268D-4CBE-850A-77B9560BFBDE}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileName">
      <DTS:VariableValue
        DTS:DataType="8">IM_Onetime_Charges_ImportExceptions.xls</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0BEB05FE-53AF-4D40-91B7-E3651EEDB20D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FilePath">
      <DTS:VariableValue
        DTS:DataType="8">Import\IM\Import\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{448F2C42-739C-44A2-A49B-30A6D4E05685}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileSize">
      <DTS:VariableValue
        DTS:DataType="8">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{96A70C42-7DF0-4003-859F-703EDAC7791A}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="FixedAssetsCreateInventory">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{70384901-40F8-4F06-B58A-B1B5A3055ADD}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="FixedAssetsCustomFields">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A231C4D7-0E79-42ED-9F13-239FA4DCA159}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="FixedAssetsDetails">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B0FECCD1-0D3E-456A-842C-554045B6664B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FixedAssetsHistory">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{32BBC876-1002-4AAD-B8AE-3F534367523C}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="FixedAssetsUpdateFundingSource">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5EDA667A-D71E-400C-BE9D-F8DA183E7E89}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="FixedAssetsUpdateProduct">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{62DA245F-3672-46D1-A9A2-FD0C85F79B97}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="FixedAssetsUpdateSerial">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4579ED83-57DE-4DF3-BC7D-9CBFBD9D6C02}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="FixedAssetsUpdateTag">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{320E5238-820E-4C33-9A70-92EED08FABDC}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Integration">
      <DTS:VariableValue
        DTS:DataType="8">OneTimeCharges</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9BD1B340-98D5-4A2B-9AB0-67F990DF5C30}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="IntegrationDataType">
      <DTS:VariableValue
        DTS:DataType="8">Charges</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{78D580AA-4E89-4D27-8BFA-34CBFE8ACE53}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="IntegrationType">
      <DTS:VariableValue
        DTS:DataType="8">Import</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FEFB834E-8085-48C6-AC86-9877F6E7D375}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="IntegrationUserID">
      <DTS:VariableValue
        DTS:DataType="3">-11</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B2C9006D-C741-4BBA-8A6B-B94E69049D63}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="JobName">
      <DTS:VariableValue
        DTS:DataType="8">int_CustomerCode_Integration_IntegerationType</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A7886FCE-1513-4FAC-BD41-05E86DBA6008}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="PurchaseOders">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8037FDA1-162A-46DA-83CF-70D94EB266C1}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="PurchaseOdersDetails">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D005A805-A541-462C-81F4-D4AB40D57793}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="PurchaseOdersDetailsUpdateAccountCode">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0D9D74AB-53FE-40E3-A082-D43CF8B560A6}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="PurchaseOdersDetailsUpdateAmount">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B6E84582-F629-4B18-8109-AF21B9B8E619}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="PurchaseOdersDetailsUpdateFundingSource">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{437E3D3F-8C4B-4635-87CD-F7782AC021AE}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="PurchaseOdersInventory">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B6D2BE54-BABA-4BA6-8DD4-780AE65D6005}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="PurchaseOdersShipments">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0A6D434E-60D6-4BBE-A54A-FA1880E9CAA7}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="PurchaseOrdersUpdateDate">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F07CF361-5F44-4281-83A4-2A5C62DC5688}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="PurchaseOrdersUpdateVendor">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{442C6FB1-0EE5-4E3E-906E-DFFF1AD9A376}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ReportHideExceptionColumnsInventory">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7C28D44D-0423-4E6A-B732-5224467D7660}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ReportHideExceptionColumnsPurchaseOrder">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3AD5BEEF-F16C-4F9A-88D5-D8867678395E}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ReportHideExceptionColumnsStatus">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DD6DAFAC-07DE-4697-801B-B37A4DDD45B7}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ReportsPath">
      <DTS:VariableValue
        DTS:DataType="8">E:\EZImportFiles\ChicagoPS_SFTP_User\Integration\Charges\Import\Reports\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3231EFA1-94DC-418A-82BE-118F7CBCE134}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="RootPath">
      <DTS:VariableValue
        DTS:DataType="8">E:\EZImportFiles\ChicagoPS_SFTP_User\Integration\Charges\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{97BEBC9C-59E3-4BEC-BF69-61B2725C42BD}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="RowCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{860EED27-AB72-4F74-9330-68D1D08EF10F}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Success">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A08A44D2-6194-465C-89BD-8E70F434181B}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="TotalExceptions">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Archieve Cleanup and Counter Set"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{004146e1-32cd-4fbc-a70a-f2af230ca05d}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Archieve Cleanup and Counter Set">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Archieve Cleanup and Counter Set\Number of Files"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{6c482007-e9fd-4694-8005-a6955340c0a6}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Number of Files"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_070ee2a76c6749188fdb48ecbd22184c"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::Debug,User::FileExtension,User::FilePath,User::RootPath"
              ReadWriteVariables="User::FileCount,User::Success">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_e9cfdc9bfb4549b991770c0c2c4e98f0")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_e9cfdc9bfb4549b991770c0c2c4e98f0")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Linq;
#endregion

namespace ST_e9cfdc9bfb4549b991770c0c2c4e98f0
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            //User::Debug,User::FileExtension,User::FilePath,User::RootPath
            //FileCount
            bool Debug = Convert.ToBoolean(Dts.Variables["Debug"].Value);
            string FilePath = Dts.Variables["FilePath"].Value.ToString();
            string RootPath = Dts.Variables["RootPath"].Value.ToString();
            string FileExt = Dts.Variables["FileExtension"].Value.ToString();
            int FileCount;

            if (RootPath.Substring(RootPath.Length - 1, 1) != "\\")
            {
                RootPath = RootPath + "\\";
            }

            if (Convert.ToBoolean(Dts.Variables["User::Debug"].Value) == true)
            {
                MessageBox.Show("RootPath: (" + RootPath + ")");
            }

            // Check to make sure "\" is at the end of File path
            if (FilePath.Substring(FilePath.Length - 1, 1) != "\\")
            {
                FilePath = FilePath + "\\";
            }

            if (Convert.ToBoolean(Dts.Variables["User::Debug"].Value) == true)
            {
                MessageBox.Show("FilePath: (" + FilePath + ")");
            }

            FileExt = "*." + FileExt;

            FileCount = (from file in System.IO.Directory.EnumerateFiles(RootPath + FilePath, FileExt)
                         select file).Count();

            Dts.Variables["FileCount"].Value = FileCount;

            if (Debug == true)
            {
                MessageBox.Show("Directory: " + RootPath + FilePath);
                MessageBox.Show("File Ext: " + FileExt);
                MessageBox.Show("Setting File Count: " + Dts.Variables["FileCount"].Value.ToString());
            }

            if (Debug == true)
            {
                MessageBox.Show("Setting File Parms");
            }

            if (FileCount == 0)
            {
                Dts.Variables["Success"].Value = false;
            }
            else
            {
                Dts.Variables["Success"].Value = true;
            }


            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="ST_070ee2a76c6749188fdb48ecbd22184c.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{6E5DC241-76DC-4CA2-9BF3-7FE307B4F8DB}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_e9cfdc9bfb4549b991770c0c2c4e98f0</RootNamespace><AssemblyName>ST_070ee2a76c6749188fdb48ecbd22184c</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" /><Host Name="ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST120</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_e9cfdc9bfb4549b991770c0c2c4e98f0</msb:CodeName>
		<msb:DisplayName>ST_e9cfdc9bfb4549b991770c0c2c4e98f0</msb:DisplayName>
		<msb:ProjectId>{A4C72C04-FE07-411A-B3A7-3DAC6D158757}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_070ee2a76c6749188fdb48ecbd22184c.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e9cfdc9bfb4549b991770c0c2c4e98f0.Properties.Settings.get_Default():ST_e9cfdc9bfb4549b991770c0c2c4e98f0.Properties.Sett" +
    "ings")]

namespace ST_e9cfdc9bfb4549b991770c0c2c4e98f0.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e9cfdc9bfb4549b991770c0c2c4e98f0.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e9cfdc9bfb4549b991770c0c2c4e98f0.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e9cfdc9bfb4549b991770c0c2c4e98f0.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_e9cfdc9bfb4549b991770c0c2c4e98f0.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_e9cfdc9bfb4549b991770c0c2c4e98f0.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_e9cfdc9bfb4549b991770c0c2c4e98f0.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDANDsql4AAAAAAAAAAOAAIiALATAAABQAAAAIAAAAAAAAnjMA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAEwzAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAApBMAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACA
MwAAAAAAAEgAAAACAAUAJCMAAHAPAAABAAAAAAAAAJQyAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwBABSAgAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKKBQAAAoCKBAAAApvEQAACnINAABwbxIAAApvEwAACm8VAAAKCgIoEAAACm8RAAAKch8AAHBv
EgAACm8TAAAKbxUAAAoLAigQAAAKbxEAAApyMQAAcG8SAAAKbxMAAApvFQAACgwHB28WAAAKF1kX
bxcAAApyTQAAcCgYAAAKLAwHck0AAHAoGQAACgsCKBAAAApvEQAACnJRAABwbxIAAApvEwAACigU
AAAKLBZyaQAAcAdygQAAcCgaAAAKKBsAAAomBgZvFgAAChdZF28XAAAKck0AAHAoGAAACiwMBnJN
AABwKBkAAAoKAigQAAAKbxEAAApyUQAAcG8SAAAKbxMAAAooFAAACiwWcoUAAHAGcoEAAHAoGgAA
CigbAAAKJnKdAABwCCgZAAAKDAcGKBkAAAoIKBwAAAp+CAAABCUtFyZ+BwAABP4GDAAABnMdAAAK
JYAIAAAEKAEAACsoAgAAKw0CKBAAAApvEQAACnKjAABwbxIAAAoJjCMAAAFvIAAACiUsUnK3AABw
BwYoGgAACigbAAAKJnLPAABwCCgZAAAKKBsAAAomcuUAAHACKBAAAApvEQAACnKjAABwbxIAAApv
EwAACm8VAAAKKBkAAAooGwAACiYsC3IPAQBwKBsAAAomCS0iAigQAAAKbxEAAApyNQEAcG8SAAAK
FowkAAABbyAAAAorIAIoEAAACm8RAAAKcjUBAHBvEgAACheMJAAAAW8gAAAKAigQAAAKFm8hAAAK
Kh4CKCIAAAoqHgIoIwAACiqufgEAAAQtHnJFAQBw0AMAAAIoJAAACm8lAAAKcyYAAAqAAQAABH4B
AAAEKhp+AgAABCoeAoACAAAEKhp+AwAABCoeAignAAAKKi5zCAAABoADAAAEKi5zCwAABoAHAAAE
KgoDKgBCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAADQBAAAI34AADwFAACABgAA
I1N0cmluZ3MAAAAAvAsAALgBAAAjVVMAdA0AABAAAAAjR1VJRAAAAIQNAADsAQAAI0Jsb2IAAAAA
AAAAAgAAAVcdogkJCwAAAPoBMwAWAAABAAAAJwAAAAYAAAAIAAAADAAAAAIAAAAnAAAAAgAAABEA
AAABAAAAAgAAAAMAAAAEAAAAAQAAAAEAAAAGAAAAAQAAAAIAAAACAAAAAAAOBAEAAAAAAAYAnwL0
BAYALgP0BAYA6wHhBA8AaAUAAAYAGAKWBAYAggKWBAYAYwKWBAYAFQOWBAYAvwKWBAYA2AKWBAYA
LwKWBAYASgJmAwoA8wK9AwoAagG9AwYARgQ/BAYAswH0BAYABgY/BAYATwA/BAYAzgHhBAYAxAQU
BQYAqASBBA4AngH4Aw4A/wH4Aw4AhgFsBAoA5gO9AxIAqgUJARIAzAAJAQYAQgY/BAYAggM/BBYA
TwbMBRYAIAbMBQYAZwZjAAYAOwChABoA1QC0BAYASQA/BAYAWQQ/BAYAKQE/BAYA4AA/BAYAXgaW
BAAAAABaAAAAAAABAAEAAQAQAGEEFwA5AAEAAQAAABAAGwV3BUUAAQADAAABEADDBXcFYQADAAcA
AwEAAPEFAAA9AAQACgADIRAAnQAAAEUABwAKABEASwThABEAWgHlABEAvADpAAYGjADtAFaA4QXw
AFaAOgHwADYAVgD0ABYAAQD4AFAgAAAAAIYAZwQGAAEAriIAAAAAhhjUBAYAAQC2IgAAAACDGNQE
BgABAL4iAAAAAJMIwAQAAQEA6iIAAAAAkwhCAQUBAQDxIgAAAACTCE4BCgEBAPkiAAAAAJYIFAYQ
AQIAACMAAAAAhhjUBAYAAgAIIwAAAACRGNoEFQECABQjAAAAAJEY2gQVAQIAtiIAAAAAhhjUBAYA
AgAgIwAAAACDAAoAGQECAAAAAQBgAwAAAQAEAQkA1AQBABEA1AQGABkA1AQKACkA1AQQADEA1AQQ
ADkA1AQQAEEA1AQQAEkA1AQQAFEA1AQQAFkA1AQQAGEA1AQQAGkA1AQGAIEA1AQGAJkA1AQGALkA
1AQVAHEA6QUiAMkApgUnANEANgQsANkATAMyAOEAVwQ2AIkAgAM7AOkAkwM/AOkAiQNDAOkAcQZJ
AOkA/wVPAOkA/wVVAPEASgZcAAEBtAViAAwA1AR0ABEBDQZ6ABEBPAaZANkAVgOpAMkALQYBAHEA
1AQGAIkA1AQGACkB8gCuACkBWga3AKEA1AS9AMEA1AQGAAgAFADXAAgAGADcACkAewBVAS4ACwAt
AS4AEwA2AS4AGwBVAS4AIwBeAS4AKwCHAS4AMwCHAS4AOwCHAS4AQwBeAS4ASwCNAS4AUwCHAS4A
WwCkAUMAYwDcAEkAewBVAWEAawDcAGMAcwDcAMMAawDcABsAAwABAAQAAwAAAMQEHgEAAGIBIwEA
ABgGKAECAAQAAwACAAUABQABAAYABQACAAcABwBtAASAAAABAAAAAR3ASAAAAAAAABcAAAAEAAAA
AAAAAAAAAADFAJQAAAAAAAwAAAAAAAAAAAAAAM4AngMAAAAABAAAAAAAAAAAAAAAxQA/BAAAAAAM
AAAAAAAAAAAAAADOAG0AAAAAAAQAAAAAAAAAAAAAAMUAzAUAAAAABAAAAAAAAAAAAAAAxQAuAQAA
AAAAAAAAAQAAACUFAAAFAAIABgACAD0AlAA/AKUAAAAAAAA8PjlfXzBfMAA8TWFpbj5iX18wXzAA
U1RfZTljZmRjOWJmYjQ1NDliOTkxNzcwYzBjMmM0ZTk4ZjAASUVudW1lcmFibGVgMQBJbnQzMgBG
dW5jYDIAPD45ADxNb2R1bGU+AFN5c3RlbS5JTwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWRE
VFMAdmFsdWVfXwBtc2NvcmxpYgA8PmMAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMAZGVmYXVs
dEluc3RhbmNlAFZhcmlhYmxlAEVudW1lcmFibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZy
b21IYW5kbGUAZmlsZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFR5cGUAU3lzdGVt
LkNvcmUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAVlNU
QVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJy
b3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNv
ZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUA
QXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRG
cmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5
RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3Nl
bWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1Njcmlw
dFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1l
Q29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRfVmFsdWUAc2V0X1ZhbHVlAHZhbHVlAFN5c3RlbS5S
dW50aW1lLlZlcnNpb25pbmcAVG9TdHJpbmcAU3Vic3RyaW5nAGdldF9MZW5ndGgATWljcm9zb2Z0
LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlw
dFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUX2U5Y2ZkYzli
ZmI0NTQ5Yjk5MTc3MGMwYzJjNGU5OGYwLmRsbABnZXRfSXRlbQBTeXN0ZW0ARW51bQByZXNvdXJj
ZU1hbgBUb0Jvb2xlYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xv
YmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBDdWx0dXJlSW5mbwBTeXN0ZW0uTGlucQBnZXRf
UmVzb3VyY2VNYW5hZ2VyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1
bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUX2U5Y2ZkYzliZmI0NTQ5
Yjk5MTc3MGMwYzJjNGU5OGYwLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dp
bmdNb2RlcwBTVF9lOWNmZGM5YmZiNDU0OWI5OTE3NzBjMGMyYzRlOThmMC5Qcm9wZXJ0aWVzAGdl
dF9WYXJpYWJsZXMARW51bWVyYXRlRmlsZXMAU2V0dGluZ3MAU3lzdGVtLldpbmRvd3MuRm9ybXMA
U3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAQ29uY2F0AE9iamVjdABTZWxlY3QAZ2V0X0Rl
ZmF1bHQARGlhbG9nUmVzdWx0AHNldF9UYXNrUmVzdWx0AENvdW50AENvbnZlcnQAU2hvdwBNZXNz
YWdlQm94AGdldF9Bc3NlbWJseQBEaXJlY3RvcnkAb3BfSW5lcXVhbGl0eQAAAAtEAGUAYgB1AGcA
ABFGAGkAbABlAFAAYQB0AGgAABFSAG8AbwB0AFAAYQB0AGgAABtGAGkAbABlAEUAeAB0AGUAbgBz
AGkAbwBuAAADXAAAF1UAcwBlAHIAOgA6AEQAZQBiAHUAZwAAF1IAbwBvAHQAUABhAHQAaAA6ACAA
KAAAAykAABdGAGkAbABlAFAAYQB0AGgAOgAgACgAAAUqAC4AABNGAGkAbABlAEMAbwB1AG4AdAAA
F0QAaQByAGUAYwB0AG8AcgB5ADoAIAAAFUYAaQBsAGUAIABFAHgAdAA6ACAAAClTAGUAdAB0AGkA
bgBnACAARgBpAGwAZQAgAEMAbwB1AG4AdAA6ACAAACVTAGUAdAB0AGkAbgBnACAARgBpAGwAZQAg
AFAAYQByAG0AcwAAD1MAdQBjAGMAZQBzAHMAAHFTAFQAXwBlADkAYwBmAGQAYwA5AGIAZgBiADQA
NQA0ADkAYgA5ADkAMQA3ADcAMABjADAAYwAyAGMANABlADkAOABmADAALgBQAHIAbwBwAGUAcgB0
AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAA2dLhKtXr/SK7wo+ZTCh91AAQgAQEIAyAAAQUg
AQEREQQgAQEOBSABARFZBgcEDg4OCAQgABJlBCAAEmkFIAESbRwDIAAcBAABAhwDIAAOAyAACAUg
Ag4ICAUAAgIODgUAAg4ODgYAAw4ODg4FAAERfQ4KAAIVEoCFAQ4ODgYVEkkCDg4FIAIBHBgZEAIC
FRKAhQEeARUSgIUBHgAVEkkCHgAeAQQKAg4OCxABAQgVEoCFAR4AAwoBDgQgAQEcCAABEoCVEYCZ
BSAAEoCdByACAQ4SgJ0It3pcVhk04IkIiYRdzYCAzJEEAAAAAAQBAAAAAwYSUQMGElUDBhIQAgYI
AwYRFAMGEhgHBhUSSQIODgQAABJRBAAAElUFAAEBElUEAAASEAMAAAEEIAEODgQIABJRBAgAElUE
CAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAj
U1RfZTljZmRjOWJmYjQ1NDliOTkxNzcwYzBjMmM0ZTk4ZjAAAAUBAAAAABYBABFDb3B5cmlnaHQg
QCAgMjAyMAAARwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNw
bGF5TmFtZRAuTkVUIEZyYW1ld29yayA0tAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2Vz
LlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRy
YWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50
aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAHQzAAAAAAAAAAAAAI4zAAAAIAAA
AAAAAAAAAAAAAAAAAAAAAAAAAACAMwAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxs
AAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAwEgBHQAAAQDASAEdPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAA
AABTAFQAXwBlADkAYwBmAGQAYwA5AGIAZgBiADQANQA0ADkAYgA5ADkAMQA3ADcAMABjADAAYwAy
AGMANABlADkAOABmADAAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
NwA0ADIANQAuADEAOAA2ADIANAAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABT
AFQAXwBlADkAYwBmAGQAYwA5AGIAZgBiADQANQA0ADkAYgA5ADkAMQA3ADcAMABjADAAYwAyAGMA
NABlADkAOABmADAALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAA
AEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADIAMAAAACoAAQABAEwAZQBnAGEAbABUAHIA
YQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBh
AG0AZQAAAFMAVABfAGUAOQBjAGYAZABjADkAYgBmAGIANAA1ADQAOQBiADkAOQAxADcANwAwAGMA
MABjADIAYwA0AGUAOQA4AGYAMAAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBl
AAAAAABTAFQAXwBlADkAYwBmAGQAYwA5AGIAZgBiADQANQA0ADkAYgA5ADkAMQA3ADcAMABjADAA
YwAyAGMANABlADkAOABmADAAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAx
AC4AMAAuADcANAAyADUALgAxADgANgAyADQAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYA
ZQByAHMAaQBvAG4AAAAxAC4AMAAuADcANAAyADUALgAxADgANgAyADQAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAoDMAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Failure - Dashbaord and Integration Reporting"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:Disabled="True"
      DTS:DTSID="{DD0C6FFA-C44E-49F1-A832-6EC48CE3B4A3}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Failure - Dashbaord and Integration Reporting">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Failure - Dashbaord and Integration Reporting\Create Report - Failure"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{18479843-64F7-437E-ADA2-E8E75FBE48E7}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create Report - Failure"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_edb9a9b5e2664cb39ba7567cabe61a41"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="VisualBasic"
              ReadOnlyVariables="User::CustomerCode,User::CustomerFullName,User::Debug,User::FileName,User::FileSize,User::Integration,User::IntegrationType,User::ReportHideExceptionColumnsInventory,User::ReportHideExceptionColumnsPurchaseOrder,User::ReportHideExceptionColumnsStatus,User::ReportsPath,User::RowCount">
              <ProjectItem
                Name="ScriptMain.vb"
                Encoding="UTF8"><![CDATA[#Region "Help:  Introduction to the script task"
'The Script Task allows you to perform virtually any operation that can be accomplished in
'a .Net application within the context of an Integration Services control flow. 

'Expand the other regions which have "Help" prefixes for examples of specific ways to use
'Integration Services features within this script task.
#End Region


#Region "Imports"
Imports System
Imports System.Data
Imports System.Math
Imports Microsoft.SqlServer.Dts.Runtime
#End Region

'ScriptMain is the entry point class of the script.  Do not change the name, attributes,
'or parent of this class.
<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute()> _
<System.CLSCompliantAttribute(False)> _
Partial Public Class ScriptMain
    Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

#Region "Help:  Using Integration Services variables and parameters in a script"
    'To use a variable in this script, first ensure that the variable has been added to 
    'either the list contained in the ReadOnlyVariables property or the list contained in 
    'the ReadWriteVariables property of this script task, according to whether or not your
    'code needs to write to the variable.  To add the variable, save this script, close this instance of
    'Visual Studio, and update the ReadOnlyVariables and 
    'ReadWriteVariables properties in the Script Transformation Editor window.
    'To use a parameter in this script, follow the same steps. Parameters are always read-only.

    'Example of reading from a variable:
    ' startTime = Dts.Variables("System::StartTime").Value

    'Example of writing to a variable:
    ' Dts.Variables("User::myStringVariable").Value = "new value"

    'Example of reading from a package parameter:
    ' batchId = Dts.Variables("$Package::batchId").Value

    'Example of reading from a project parameter:
    ' batchId = Dts.Variables("$Project::batchId").Value

    'Example of reading from a sensitive project parameter:
    ' batchId = Dts.Variables("$Project::batchId").GetSensitiveValue()
#End Region

#Region "Help:  Firing Integration Services events from a script"
    'This script task can fire events for logging purposes.

    'Example of firing an error event:
    ' Dts.Events.FireError(18, "Process Values", "Bad value", "", 0)

    'Example of firing an information event:
    ' Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, fireAgain)

    'Example of firing a warning event:
    ' Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0)
#End Region

#Region "Help:  Using Integration Services connection managers in a script"
    'Some types of connection managers can be used in this script task.  See the topic 
    '"Working with Connection Managers Programatically" for details.

    'Example of using an ADO.Net connection manager:
    ' Dim rawConnection As Object = Dts.Connections("Sales DB").AcquireConnection(Dts.Transaction)
    ' Dim myADONETConnection As SqlConnection = CType(rawConnection, SqlConnection)
    ' <Use the connection in some code here, then release the connection>
    ' Dts.Connections("Sales DB").ReleaseConnection(rawConnection)

    'Example of using a File connection manager
    ' Dim rawConnection As Object = Dts.Connections("Prices.zip").AcquireConnection(Dts.Transaction)
    ' Dim filePath As String = CType(rawConnection, String)
    ' <Use the connection in some code here, then release the connection>
    ' Dts.Connections("Prices.zip").ReleaseConnection(rawConnection)
#End Region

    'This method is called when this script task executes in the control flow.
    'Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
    'To open Help, press F1.

    Public Sub Main()
        Dim ReportPath As String = CType(Dts.Variables("ReportsPath").Value, String)
        Dim HideExceptionColumnsInventory As String = CType(Dts.Variables("ReportHideExceptionColumnsInventory").Value, String)
        Dim HideExceptionColumnsPurchaseOrder As String = CType(Dts.Variables("ReportHideExceptionColumnsPurchaseOrder").Value, String)
        Dim HideExceptionColumnsStatus As String = CType(Dts.Variables("ReportHideExceptionColumnsStatus").Value, String)
        Dim RowCount As String = CType(Dts.Variables("RowCount").Value, String)
        Dim CustomerCode As String = CType(Dts.Variables("CustomerCode").Value, String)
        Dim CustomerFullName As String = CType(Dts.Variables("CustomerFullName").Value, String)
        Dim Integration As String = CType(Dts.Variables("Integration").Value, String)
        Dim IntegrationType As String = CType(Dts.Variables("IntegrationType").Value, String)
        Dim FileNames As String = CType(Dts.Variables("FileName").Value, String)
        Dim FileSize As String = CType(Dts.Variables("FileSize").Value, String)
        Dim ReportDate As String = Today.ToShortDateString.ToString()

        Dim URL As String = "http://hayessqlsvr/ReportServer/Pages/ReportViewer.aspx?%2fDataIntergration%2fIntegrationDefaultReportImport&rs:Command=Render"

        'Parm 1
        URL = URL + "&RowCount=" + RowCount

        'Parm 2 
        URL = URL + "&IntegrationName=" + Integration

        'Parm 3
        URL = URL + "&IntegrationType=" + IntegrationType

        'Parm 4
        URL = URL + "&ReportDate=" + ReportDate

        'Parm 5
        URL = URL + "&FileNames=" + FileNames

        'Parm 6
        URL = URL + "&CustomerFullName=" + CustomerFullName

        'Parm 7
        URL = URL + "&CustomerCode=" + CustomerCode

        'Parm 8
        URL = URL + "&IntegrationStatus=Failure"

        'Parm 9
        URL = URL + "&DisplayExceptionColumnsStatus=" + HideExceptionColumnsStatus

        'Parm 10
        URL = URL + "&DisplayExceptionColumnsInventory=" + HideExceptionColumnsInventory

        'Parm 11
        URL = URL + "&DisplayExceptionColumnsPurchaseOrder=" + HideExceptionColumnsPurchaseOrder

        'Appending Export to Excel and Toolbar
        URL = URL + "&rs:Format=Excel&rc:Toolbar=False"

        'for Testing
        'MessageBox.Show(URL, "URL for Report", MessageBoxButtons.OK)

        Dim httpConn As ConnectionManager = Dts.Connections("ReportServer")
        Dim clientConn As HttpClientConnection = New HttpClientConnection(httpConn.AcquireConnection(Nothing))

        Dim ReportFileName As String = ReportPath + CustomerCode + "_" + Integration + "_" + IntegrationType + "_Report_" + Format(Now, "MMddyyyy") + "_" + Format(Now, "HHmm") + ".xls"

        clientConn.ServerURL = URL

        clientConn.DownloadFile(ReportFileName, True)

        Dts.TaskResult = ScriptResults.Success
    End Sub

#Region "ScriptResults declaration"
    'This enum provides a convenient shorthand within the scope of this class for setting the
    'result of the script.

    'This code was generated automatically.
    Enum ScriptResults
        Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
        Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
    End Enum

#End Region

End Class]]></ProjectItem>
              <ProjectItem
                Name="My Project\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="ST_edb9a9b5e2664cb39ba7567cabe61a41.vbproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{5F8123A6-B37B-45C0-A49E-367FFC845768}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>My Project</AppDesignerFolder>
    <RootNamespace>ST_8a64a78dc3a14df19e76c1106e01c2b8</RootNamespace>
    <AssemblyName>ST_edb9a9b5e2664cb39ba7567cabe61a41</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ScriptMain.vb">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="My Project\AssemblyInfo.vb"
                Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("ST_8a64a78dc3a14df19e76c1106e01c2b8")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("ST_8a64a78dc3a14df19e76c1106e01c2b8")> 
<Assembly: AssemblyCopyright("Copyright @  2019")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("ed9e13df-5893-4099-9b0a-40a2bc478d99")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
              <ProjectItem
                Name="My Project\Settings.Designer.vb"
                Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_edb9a9b5e2664cb39ba7567cabe61a41</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_edb9a9b5e2664cb39ba7567cabe61a41</msb:DisplayName>
		<msb:ProjectId>{D0CD380F-0317-49E9-B1D6-59522EF90F27}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_edb9a9b5e2664cb39ba7567cabe61a41.vbproj"/>
		<msb:File Include="My Project\AssemblyInfo.vb"/>
		<msb:File Include="ScriptMain.vb"/>
		<msb:File Include="My Project\Resources.resx"/>
		<msb:File Include="My Project\Resources.Designer.vb"/>
		<msb:File Include="My Project\Settings.settings"/>
		<msb:File Include="My Project\Settings.Designer.vb"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Resources.Designer.vb"
                Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
              <BinaryItem
                Name="ST_edb9a9b5e2664cb39ba7567cabe61a41.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDACzuZl0AAAAAAAAAAOAAIiALAVAAACIAAAAIAAAAAAAApkEA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAFRBAABPAAAAAGAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAArCEAAAAgAAAAIgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAYAAAAAYAAAAkAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAKgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACI
QQAAAAAAAEgAAAACAAUAKCUAAHQbAAABAAAAAAAAAJxAAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBgAAAoqHgIoGQAACiqmcxoAAAqAAQAABHMbAAAKgAIA
AARzHAAACoADAAAEcx0AAAqABAAABCoufgEAAARvHgAACioufgIAAARvHwAACioufgMAAARvIAAA
CioufgQAAARvIQAACioeAigiAAAKKq5+BQAABC0ecgEAAHDQBQAAAigjAAAKbyQAAApzJQAACoAF
AAAEfgUAAAQqGn4GAAAEKh4CgAYAAAQqQnMiAAAKKCYAAAqACAAABCoeAignAAAKKgAAGzABAD8A
AAAAAAAAfgcAAAQtMn4IAAAEKCYAAAooKAAACn4HAAAELRxzDQAABoAHAAAE3hB+CAAABCgmAAAK
KCkAAArcfgcAAAQqAAEQAAACAB0ADCkAEAAAAAAeAigqAAAKKhMwBQD/AgAAAQAAEQIoKwAACm8s
AAAKcjMAAHBvLQAACm8uAAAKKC8AAAoKAigrAAAKbywAAApySwAAcG8tAAAKby4AAAooLwAACgsC
KCsAAApvLAAACnKTAABwby0AAApvLgAACigvAAAKDAIoKwAACm8sAAAKcuMAAHBvLQAACm8uAAAK
KC8AAAoNAigrAAAKbywAAApyJQEAcG8tAAAKby4AAAooLwAAChMEAigrAAAKbywAAApyNwEAcG8t
AAAKby4AAAooLwAAChMFAigrAAAKbywAAApyUQEAcG8tAAAKby4AAAooLwAAChMGAigrAAAKbywA
AApycwEAcG8tAAAKby4AAAooLwAAChMHAigrAAAKbywAAApyiwEAcG8tAAAKby4AAAooLwAAChMI
AigrAAAKbywAAApyqwEAcG8tAAAKby4AAAooLwAAChMJAigrAAAKbywAAApyvQEAcG8tAAAKby4A
AAooLwAACiYoMAAAChMPEg8oMQAACm8yAAAKEwpyzwEAcBMLEQtyzgIAcBEEKDMAAAoTCxELcuQC
AHARBygzAAAKEwsRC3IIAwBwEQgoMwAAChMLEQtyLAMAcBEKKDMAAAoTCxELckYDAHARCSgzAAAK
EwsRC3JeAwBwEQYoMwAAChMLEQtyhAMAcBEFKDMAAAoTCxELcqIDAHAoNAAAChMLEQty2AMAcAko
MwAAChMLEQtyGAQAcAcoMwAAChMLEQtyXgQAcAgoMwAAChMLEQtyrAQAcCg0AAAKEwsCKCsAAApv
NQAACnLwBABwbzYAAAoTDBEMFG83AAAKKCYAAApzOAAAChMNHwuNMgAAASUWBqIlFxEFoiUYcgoF
AHCiJRkRB6IlGnIKBQBwoiUbEQiiJRxyDgUAcKIlHSg5AAAKjCcAAAFyIAUAcCg6AAAKoiUecgoF
AHCiJR8JKDkAAAqMJwAAAXIyBQBwKDoAAAqiJR8KcjwFAHCiKDsAAAoTDhENEQtvPAAAChENEQ4X
bz0AAAoCKCsAAAoWbz4AAAoqNgIDKCYAAAooPwAACioeAihAAAAKKi7QCAAAAigjAAAKKh4CKEEA
AAoqAAAAEzABABQAAAACAAARAowFAAAbLQgoAQAAKworAgIKBioiA/4VBQAAGyoAAAATMAIAKAAA
AAMAABECe0MAAApvRAAACgoGjAgAABstEigCAAArCgJ7QwAACgZvRQAACgYqSgIoIgAACgJzRgAA
Cn1DAAAKKgBCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAA0CAAAI34AAKAIAADI
CQAAI1N0cmluZ3MAAAAAaBIAAEgFAAAjVVMAsBcAABAAAAAjR1VJRAAAAMAXAAC0AwAAI0Jsb2IA
AAAAAAAAAgAAAVcdogkJDwAAAPoBMwAWAAABAAAANQAAAAoAAAAMAAAAGQAAAAQAAABGAAAAAgAA
ADcAAAADAAAABAAAAAgAAAAJAAAACAAAAAEAAAAFAAAAAQAAAAMAAAADAAAAAgAAAAAAfAUBAAAA
AAAGAKkDGQgGAE4EGQgGAIACWgcPAL8IAAAGAMECKQYGAIwDKQYGADUEKQYGAMkDKQYGAOIDKQYG
AAgDKQYGAP0DrQUGAK0C0wcGACkC0wcGAFQDKQYGACMDqAQKAEwC9AYKABQCZgUKAJQCZgUOAOwB
qQcOACoHbQcGADwDWgcOANgC8gcOAPAC4wAGAFMJrQUOABAHqQcOAHED4wAGAJ8BrQUOACUAKgUK
ADcCuQUGANIGOQgGAGIGFAYKAPwB/wUGAGMCWgcSABMEAQUSANABAQUGAN0ErQUWAOIGfAEWAE0G
fAEGAHMBrQUGALQFrQUGADYBrQUGAL8JKQYGABIJGQgGAFIHlwQSAFQFAQUWANIIfAEWAC0BfAEO
APYI8gcOAGcB4wAGANYErQUWAAYJfAEOANwI4wAGADsHrQUAAAAAcwAAAAAAAQABAAAAAADxBYoJ
TQABAAEAAAAAACgHiglRAAEAAgAAARAAWgmKCWEAAQADAAAAAAB7CEoIYQAFAAgAAAEQAOQITwCB
AAcADAABAAAA1gVPAI0ACQAPAAUBAACbBwAAYQAJABEABQEAADQAAABhAAkAGAACAQAAMQkAAKEA
CgAaADEAlwZOATEAbgZWATEAggZeATEAsAZmAREAMwduAREAxAFyAREAbAR2AREATQl6ASEAeAkM
AQYG0gB9AVaAIQmAAVaApAGAAVAgAAAAAAYYRQcGAAEAWCAAAAAABhhFBwYAAQBgIAAAAAARGEsH
hAEBAIogAAAAABMIGweIAQEAliAAAAAAEwjhBY0BAQCiIAAAAAATCAwHkgEBAK4gAAAAABMIiweX
AQEAuiAAAAAAAxhFBwYAAQDCIAAAAAAWCM4GnAEBAO4gAAAAABYIrAGhAQEA9SAAAAAAFgi4AaYB
AQD9IAAAAAARGEsHhAECAA4hAAAAAAYYRQcGAAIAGCEAAAAAFgh0BKwBAgB0IQAAAAAGGEUHBgAC
AHwhAAAAAAYA3AUGAAIAhyQAAAAAxgLvCOQAAgCVJAAAAADGAiEB6QADAJ0kAAAAAIMAnAGxAQMA
qSQAAAAAxgLUBKoAAwC0JAAAAAARAL8AtgEDANQkAAAAAAEAqwC+AQQAuiAAAAAABhhFBwYABQDg
JAAAAAADCAgBSgAFABQlAAAAAAYYRQcGAAUAAAABAJEEAAABAGwGAAABABgBAAABABgBCQBFBwEA
EQBFBwYAGQBFBwoAKQBFBxAAMQBFBxAAOQBFBxAAQQBFBxAASQBFBxAAUQBFBxAAWQBFBxUAYQBF
BxUAaQBFBxAAcQBFBxAAeQBFBxAAgQBFBxoAkQBFByAAqQBFBwYAsQBFBwYAuQBFBwYA0QBFByYA
6QBFBxAACQFFBwYAEQFFBwYAmQBFBwYAoQBFBwYADABFBwYAFABFBwYAHABFBwYAJABFBwYADAAI
AUoAFAAIAUoAHAAIAUoAJAAIAUoAwQBFBwYA2QBIAU8A2QC7CVcA8QBFB10AWQGIBGUAAQFFBwYA
YQEVB2oAYQFkCWoAGQFFBwYAGQEpCYgAaQHOCI4AcQGkBZQAeQF0BJsAgQHUBJ8AiQGxCaQAOQHC
BKoAkQHUBKoAkQE/Ca4AkQE/CbUAaQECCbsAmQGkBcEAKQE7BsgAMQFFB80AiQGCCaQAoQFGCdIA
kQE/CdgAMQF8ABAAMQFaAd4AaQFpCQEAwQDvCOQAwQAhAekAwQDUBKoAqQH5APUANAB4CQwBPAB0
BEoAPAB+BCMBPABFBwYACAAsAEQBCAAwAEkBKQCrAG4DLgALAO4BLgATAPcBLgAbABYCLgAjAB8C
LgArAEgCLgAzAEgCLgA7AB8CLgBDAE4CLgBLAEgCLgBTAGUCLgBbAEgCLgBjAGsCLgBrAJUCLgBz
AKICQACLAEkBQACDAOoCQwB7APMCQwCDAOoCSQCrAH8DYwB7APMCYwCDAOoCaQCrAJMDgACLAEkB
gwCTAEkBgwCbAEkBgwB7APMCiQCrAKADoACLAEkBqQCDABYCwACLAEkByQCDABYC4ACLAEkB4wC7
AEkB4wBTAEgC6QCzAEkBAwGDAOoCAwGjAAwDIwGDAOoCIwFbAEgCIAKDAOoCIAKLAEkBQAKDAOoC
QAKLAEkBYAKDAOoCYAKLAEkBgAKDAOoCgAKLAEkBoAKLAEkBwAKLAEkB4AKLAEkB4AKDAOoCAAOL
AEkBIAOLAEkBIAODAOoCbwDtAAABBAABAAUABQAGAAcACQAIAAAAKgfGAQAA8wXLAQAAEAfQAQAA
nQfVAQAA0gbaAQAAyAHfAQAAkQTkAQAADAHpAQIABAADAAIABQAFAAIABgAHAAIABwAJAAIACQAL
AAIACgANAAEACwANAAIADgAPAAIAGAARAC4ANQA8AEMA8gAFARQBGwEEgAAAAQAAAAAAAAAAAAAA
AAABAAAABAAAAAAAAAAAAAAAKQHaAAAAAAAEAAAAAAAAAAAAAAApAa0FAAAAAAoAAAAAAAAAAAAA
ADIB4wAAAAAADAAAAAAAAAAAAAAAOwHiBAAAAAAMAAAAAAAAAAAAAAA7AYoAAAAAAAAAAAABAAAA
hwgAAAgABAAJAAQACgAHAAAAEAASAKkAAAAQACsAqQAAAAAALQCpAIUA+wCFAB4BAAAAU1RfZWRi
OWE5YjVlMjY2NGNiMzliYTc1NjdjYWJlNjFhNDEAQ29udGV4dFZhbHVlYDEAVGhyZWFkU2FmZU9i
amVjdFByb3ZpZGVyYDEAU1RfOGE2NGE3OGRjM2ExNGRmMTllNzZjMTEwNmUwMWMyYjgAPE1vZHVs
ZT4Ac2V0X1NlcnZlclVSTABNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAVABEaXNwb3Nl
X19JbnN0YW5jZV9fAENyZWF0ZV9fSW5zdGFuY2VfXwB2YWx1ZV9fAG1zY29ybGliAE1pY3Jvc29m
dC5WaXN1YWxCYXNpYwBDcmVhdGVJbnN0YW5jZQBnZXRfR2V0SW5zdGFuY2UAaW5zdGFuY2UAR2V0
SGFzaENvZGUAVmFyaWFibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUARG93
bmxvYWRGaWxlAERhdGVBbmRUaW1lAERhdGVUaW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1
bnRpbWUAR2V0VHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAF9yZXNDdWx0dXJl
AFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvbkJhc2UAQXBwbGljYXRpb25T
ZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAR3VpZEF0dHJpYnV0ZQBIZWxwS2V5d29y
ZEF0dHJpYnV0ZQBHZW5lcmF0ZWRDb2RlQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRy
aWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQ29tVmlz
aWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAFN0YW5kYXJkTW9kdWxlQXR0cmli
dXRlAEhpZGVNb2R1bGVOYW1lQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRh
cmdldEZyYW1ld29ya0F0dHJpYnV0ZQBEZWJ1Z2dlckhpZGRlbkF0dHJpYnV0ZQBBc3NlbWJseUZp
bGVWZXJzaW9uQXR0cmlidXRlAE15R3JvdXBDb2xsZWN0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVz
Y3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJs
eVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQ0xTQ29tcGxpYW50
QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBh
bnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAbV9WYWx1ZQBnZXRfVmFs
dWUAc2V0X1ZhbHVlAEdldE9iamVjdFZhbHVlAFN5c3RlbS5UaHJlYWRpbmcAU3lzdGVtLlJ1bnRp
bWUuVmVyc2lvbmluZwBUb1Nob3J0RGF0ZVN0cmluZwBUb1N0cmluZwBNYXRoAE1pY3Jvc29mdC5T
cWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRU
YXNrAE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5NeVNlcnZpY2VzLkludGVybmFsAFNjcmlwdE9iamVj
dE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF9lZGI5YTliNWUyNjY0Y2IzOWJhNzU2N2Nh
YmU2MWE0MS5kbGwAZ2V0X0l0ZW0AU3lzdGVtAEVudW0AU3lzdGVtLkNvbXBvbmVudE1vZGVsLkRl
c2lnbgBTY3JpcHRNYWluAGdldF9BcHBsaWNhdGlvbgBNeUFwcGxpY2F0aW9uAFN5c3RlbS5Db25m
aWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEFjcXVpcmVD
b25uZWN0aW9uAEh0dHBDbGllbnRDb25uZWN0aW9uAEN1bHR1cmVJbmZvAG1fQXBwT2JqZWN0UHJv
dmlkZXIAbV9Vc2VyT2JqZWN0UHJvdmlkZXIAbV9Db21wdXRlck9iamVjdFByb3ZpZGVyAG1fTXlX
ZWJTZXJ2aWNlc09iamVjdFByb3ZpZGVyAGdldF9SZXNvdXJjZU1hbmFnZXIAQ29ubmVjdGlvbk1h
bmFnZXIAU3lzdGVtLkNvZGVEb20uQ29tcGlsZXIAZ2V0X1VzZXIARW50ZXIAZ2V0X0NvbXB1dGVy
AE15Q29tcHV0ZXIAX3Jlc01ncgBBY3RpdmF0b3IALmN0b3IALmNjdG9yAE1vbml0b3IAU3lzdGVt
LkRpYWdub3N0aWNzAE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5EZXZpY2VzAGdldF9XZWJTZXJ2aWNl
cwBNeVdlYlNlcnZpY2VzAE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5BcHBsaWNhdGlvblNlcnZpY2Vz
AFN5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcwBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuQ29t
cGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNv
dXJjZXMAU1RfOGE2NGE3OGRjM2ExNGRmMTllNzZjMTEwNmUwMWMyYjguTXkuUmVzb3VyY2VzAE15
UmVzb3VyY2VzAFNUXzhhNjRhNzhkYzNhMTRkZjE5ZTc2YzExMDZlMDFjMmI4LlJlc291cmNlcy5y
ZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAZ2V0X1ZhcmlhYmxlcwBTdHJpbmdzAE15U2V0dGluZ3MA
RXF1YWxzAENvbnZlcnNpb25zAGdldF9Db25uZWN0aW9ucwBSdW50aW1lSGVscGVycwBTdWNjZXNz
AGdldF9EdHMAU2NyaXB0UmVzdWx0cwBDb25jYXQARm9ybWF0AG1fU3luY09iamVjdABNeVByb2pl
Y3QARXhpdABzZXRfVGFza1Jlc3VsdABtX0NvbnRleHQAZ2V0X05vdwBTVF84YTY0YTc4ZGMzYTE0
ZGYxOWU3NmMxMTA2ZTAxYzJiOC5NeQBnZXRfVG9kYXkAZ2V0X0Fzc2VtYmx5AAAxTQB5AC4AUgBl
AHMAbwB1AHIAYwBlAHMALgBNAHkAUgBlAHMAbwB1AHIAYwBlAHMAABdSAGUAcABvAHIAdABzAFAA
YQB0AGgAAEdSAGUAcABvAHIAdABIAGkAZABlAEUAeABjAGUAcAB0AGkAbwBuAEMAbwBsAHUAbQBu
AHMASQBuAHYAZQBuAHQAbwByAHkAAE9SAGUAcABvAHIAdABIAGkAZABlAEUAeABjAGUAcAB0AGkA
bwBuAEMAbwBsAHUAbQBuAHMAUAB1AHIAYwBoAGEAcwBlAE8AcgBkAGUAcgAAQVIAZQBwAG8AcgB0
AEgAaQBkAGUARQB4AGMAZQBwAHQAaQBvAG4AQwBvAGwAdQBtAG4AcwBTAHQAYQB0AHUAcwAAEVIA
bwB3AEMAbwB1AG4AdAAAGUMAdQBzAHQAbwBtAGUAcgBDAG8AZABlAAAhQwB1AHMAdABvAG0AZQBy
AEYAdQBsAGwATgBhAG0AZQAAF0kAbgB0AGUAZwByAGEAdABpAG8AbgAAH0kAbgB0AGUAZwByAGEA
dABpAG8AbgBUAHkAcABlAAARRgBpAGwAZQBOAGEAbQBlAAARRgBpAGwAZQBTAGkAegBlAACA/WgA
dAB0AHAAOgAvAC8AaABhAHkAZQBzAHMAcQBsAHMAdgByAC8AUgBlAHAAbwByAHQAUwBlAHIAdgBl
AHIALwBQAGEAZwBlAHMALwBSAGUAcABvAHIAdABWAGkAZQB3AGUAcgAuAGEAcwBwAHgAPwAlADIA
ZgBEAGEAdABhAEkAbgB0AGUAcgBnAHIAYQB0AGkAbwBuACUAMgBmAEkAbgB0AGUAZwByAGEAdABp
AG8AbgBEAGUAZgBhAHUAbAB0AFIAZQBwAG8AcgB0AEkAbQBwAG8AcgB0ACYAcgBzADoAQwBvAG0A
bQBhAG4AZAA9AFIAZQBuAGQAZQByAAAVJgBSAG8AdwBDAG8AdQBuAHQAPQAAIyYASQBuAHQAZQBn
AHIAYQB0AGkAbwBuAE4AYQBtAGUAPQAAIyYASQBuAHQAZQBnAHIAYQB0AGkAbwBuAFQAeQBwAGUA
PQAAGSYAUgBlAHAAbwByAHQARABhAHQAZQA9AAAXJgBGAGkAbABlAE4AYQBtAGUAcwA9AAAlJgBD
AHUAcwB0AG8AbQBlAHIARgB1AGwAbABOAGEAbQBlAD0AAB0mAEMAdQBzAHQAbwBtAGUAcgBDAG8A
ZABlAD0AADUmAEkAbgB0AGUAZwByAGEAdABpAG8AbgBTAHQAYQB0AHUAcwA9AEYAYQBpAGwAdQBy
AGUAAD8mAEQAaQBzAHAAbABhAHkARQB4AGMAZQBwAHQAaQBvAG4AQwBvAGwAdQBtAG4AcwBTAHQA
YQB0AHUAcwA9AABFJgBEAGkAcwBwAGwAYQB5AEUAeABjAGUAcAB0AGkAbwBuAEMAbwBsAHUAbQBu
AHMASQBuAHYAZQBuAHQAbwByAHkAPQAATSYARABpAHMAcABsAGEAeQBFAHgAYwBlAHAAdABpAG8A
bgBDAG8AbAB1AG0AbgBzAFAAdQByAGMAaABhAHMAZQBPAHIAZABlAHIAPQAAQyYAcgBzADoARgBv
AHIAbQBhAHQAPQBFAHgAYwBlAGwAJgByAGMAOgBUAG8AbwBsAGIAYQByAD0ARgBhAGwAcwBlAAAZ
UgBlAHAAbwByAHQAUwBlAHIAdgBlAHIAAANfAAARXwBSAGUAcABvAHIAdABfAAARTQBNAGQAZAB5
AHkAeQB5AAAJSABIAG0AbQAACS4AeABsAHMAAAAAAHDIQTtepUSS8RtYv8YxLwAEIAEBCAMgAAEF
IAEBEREEIAEBDgQgAQECBSACAQ4OBSABARFFByAEAQ4ODg4GFRIkARIMBhUSJAESCAYVEiQBEmUG
FRIkARIgBCAAEwAHAAESbRGApQUgABKAqQcgAgEOEoCpBAABHBwEAAEBHBgHEA4ODg4ODg4ODg4O
DhKAlRKAmQ4RgJ0FIAASgLUFIAASgLkGIAESgL0cAyAAHAQAAQ4cBQAAEYCdAyAADgYAAw4ODg4F
AAIODg4FIAASgM0GIAESgJUcBCABHBwEIAEBHAUAAg4cDgUAAQ4dDgUgAgEOAgQgAQIcAyAACAQH
AR4AAh4ABRABAB4ABAoBHgAEBwETAAYVEiQBEwAHBhUScQETAAYVEnEBEwACEwAECgETAAUgAQET
AAi3elxWGTTgiQiwP19/EdUKOgiJhF3NgIDMkQQAAAAABAEAAAAHBhUSJAESDAcGFRIkARIIBwYV
EiQBEmUHBhUSJAESIAMGEnkDBhJ9AwYSGAIGHAIGCAMGESgDAAABBAAAEgwEAAASCAQAABJlBAAA
EiAEAAASeQQAABJ9BQABARJ9BAAAEhgEIAASbQcQAQEeAB4ABzABAQEQHgAECAASDAQIABIIBAgA
EmUECAASIAQIABJ5BAgAEn0ECAASGAQoABMACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0
aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF84YTY0YTc4ZGMzYTE0ZGYxOWU3NmMxMTA2ZTAxYzJi
OAAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDE5AAAFAQABAAApAQAkZWQ5ZTEzZGYtNTg5My00
MDk5LTliMGEtNDBhMmJjNDc4ZDk5AAAMAQAHMS4wLjAuMAAARwEAGi5ORVRGcmFtZXdvcmssVmVy
c2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0CAEAAQAA
AAAAGAEACk15VGVtcGxhdGUIMTEuMC4wLjAAAGEBADRTeXN0ZW0uV2ViLlNlcnZpY2VzLlByb3Rv
Y29scy5Tb2FwSHR0cENsaWVudFByb3RvY29sEkNyZWF0ZV9fSW5zdGFuY2VfXxNEaXNwb3NlX19J
bnN0YW5jZV9fAAAAEAEAC015LkNvbXB1dGVyAAATAQAOTXkuQXBwbGljYXRpb24AAAwBAAdNeS5V
c2VyAAATAQAOTXkuV2ViU2VydmljZXMAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNl
cy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0
cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVu
dGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAB8QQAAAAAAAAAAAACWQQAAACAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAiEEAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRs
bAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAA
AAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAA
AOwDAAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+
AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBh
AHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAA
sARMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAwADAANABi
ADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEA
bQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABf
ADgAYQA2ADQAYQA3ADgAZABjADMAYQAxADQAZABmADEAOQBlADcANgBjADEAMQAwADYAZQAwADEA
YwAyAGIAOAAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAA
AHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8AZQBkAGIAOQBhADkAYgA1AGUA
MgA2ADYANABjAGIAMwA5AGIAYQA3ADUANgA3AGMAYQBiAGUANgAxAGEANAAxAC4AZABsAGwAAABI
ABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAA
IAAgADIAMAAxADkAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAA
AHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAFQAXwBlAGQAYgA5AGEA
OQBiADUAZQAyADYANgA0AGMAYgAzADkAYgBhADcANQA2ADcAYwBhAGIAZQA2ADEAYQA0ADEALgBk
AGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBUAF8AOABhADYANABhADcA
OABkAGMAMwBhADEANABkAGYAMQA5AGUANwA2AGMAMQAxADAANgBlADAAMQBjADIAYgA4AAAANAAI
AAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgACAABAEEA
cwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAACoMQAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Failure - Dashbaord and Integration Reporting\Email Report"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{D42E5016-E1E8-4612-A847-ABE08F769BB3}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Email Report"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{B29BBDD1-1400-4981-B92F-0054F8224CA9}"
              SQLTask:SqlStatementSource="DECLARE @EmailCC&#x9;&#x9;VARCHAR(200) = ?&#xA;DECLARE @EmailTo&#x9;&#x9;VARCHAR(100) = ?&#xA;DECLARE @FilePath&#x9;&#x9;VARCHAR(200) = ?&#xA;DECLARE @CustomerCode&#x9;VARCHAR(50)  = ?&#xA;DECLARE @IntegrationType VARCHAR(200) = ?&#xA;DECLARE @Integration&#x9;VARCHAR(200) = ?&#xA;DECLARE @EmailSubject&#x9;VARCHAR(200)&#xA;&#xA;DECLARE @Body  VARCHAR(500) = 'Attached is your Hayes Software Systems Report for ' &#xA;DECLARE @FileName VARCHAR(200) &#xA;&#xA;&#xA;SELECT @Body = @Body + CAST(CAST(GETDATE() AS DATE) AS VARCHAR(50)),@FileName= @FilePath + @CustomerCode + '_' + @Integration + '_' + @IntegrationType + '_Report_' +&#xA;replicate('0', 2 - len(DATEPART(mm,GETDATE()))) + cast (DATEPART(mm,GETDATE()) as varchar) +&#xA;replicate('0', 2 - len(DATEPART(DD,GETDATE()))) + cast (DATEPART(DD,GETDATE()) as varchar) +&#xA;replicate('0', 4 - len(DATEPART(YYYY,GETDATE()))) + cast (DATEPART(YYYY,GETDATE()) as varchar) + '_' +&#xA;replicate('0', 2 - len(DATEPART(HH,GETDATE()))) + cast (DATEPART(HH,GETDATE()) as varchar) +&#xA;replicate('0', 2 - len(DATEPART(MI,GETDATE()))) + cast (DATEPART(MI,GETDATE()) as varchar) +&#xA;'.xls',@EmailSubject =  @CustomerCode + ' ' + @Integration + ' ' + @IntegrationType + ' Integration Report'&#xA;&#xA;IF @EmailCC IS NOT NULL&#xA;BEGIN&#xA; EXEC msdb.dbo.sp_send_dbmail @profile_name='TIPWEBIMEmail',&#xA; @recipients=@EmailTo,&#xA; @copy_recipients =@EmailCC,&#xA; @subject= @EmailSubject,&#xA; @file_attachments=@FileName,&#xA; @body=@Body&#xA;END &#xA;ELSE&#xA;BEGIN&#xA; EXEC msdb.dbo.sp_send_dbmail @profile_name='TIPWEBIMEmail',&#xA; @recipients=@EmailTo,&#xA; @copy_recipients =@EmailTo,&#xA; @subject=@EmailSubject,&#xA; @file_attachments=@FileName,&#xA; @body=@Body&#xA;END&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::EMailCC"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::EmailTo"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::ReportsPath"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="User::CustomerCode"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="User::IntegrationType"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="5"
                SQLTask:DtsVariableName="User::Integration"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Failure - Dashbaord and Integration Reporting\Insert File Details in Dashboard"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{A2B2979C-75F5-428A-9711-D61D6A9E2ABC}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Insert File Details in Dashboard"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{B194E9DA-F23A-457A-A340-58E7ECEAB209}"
              SQLTask:SqlStatementSource="&#xA;DECLARE @CustomerName   VARCHAR(100) = ?&#xA;DECLARE @JobName    VARCHAR(100) = ?&#xA;DECLARE @IntergrationType  VARCHAR(100) = ?&#xA;DECLARE @FileSize    INT = ?&#xA;DECLARE @RootPath    VARCHAR(200) = ?&#xA;DECLARE @ExportPath    VARCHAR(100) = ?&#xA;DECLARE @ArchivePath   VARCHAR(100) = ?&#xA;DECLARE @FileName    VARCHAR(100) = ?&#xA;DECLARE @TaskFailure   BIT = ?&#xA;DECLARE @JobID     INT &#xA;DECLARE @TaskErrorMessage  VARCHAR(MAX) = 'Error In Creating File'&#xA;DECLARE @TaskName    VARCHAR(100) = 'Export'&#xA;&#xA;SELECT @JobID=id FROM FileExist WHERE Job_Name=@JobName AND client=@CustomerName AND category=@IntergrationType&#xA;&#xA;IF (@JobID IS NULL)&#xA;BEGIN&#xA;&#xA;  IF @TaskFailure=0&#xA;  BEGIN&#xA;   INSERT INTO TaskOnError&#xA;   (Client,JobName,Error_ID,StartTime,EndTime,Message,TaskName,LastModifiedDate,Category)&#xA;   VALUES&#xA;   (@CustomerName,@JobName,1,GETDATE(),GETDATE(),@TaskErrorMessage,@TaskName,GETDATE(),@IntergrationType)&#xA;  END &#xA;&#xA; INSERT INTO FileExist&#xA; (Client,Job_Name,FileCheck,FileName,FileSize,File_Rcvd_Date,Check_Time,Category)&#xA; VALUES&#xA; (@CustomerName,@JobName,CASE WHEN @TaskFailure = 1 THEN 0 ELSE 1 END,&#xA; ISNULL(@RootPath + @ExportPath + @ArchivePath + @FileName,'No File Was Created'),&#xA; ISNULL(@FileSize,0),GETDATE(),GETDATE(),@IntergrationType)&#xA;&#xA;END&#xA;ELSE&#xA;BEGIN&#xA;&#xA;  IF @TaskFailure=0&#xA;  BEGIN&#xA;   INSERT INTO TaskOnError&#xA;   (Client,JobName,Error_ID,StartTime,EndTime,Message,TaskName,LastModifiedDate,Category)&#xA;   VALUES&#xA;   (@CustomerName,@JobName,1,GETDATE(),GETDATE(),@TaskErrorMessage,@TaskName,GETDATE(),@IntergrationType)&#xA;  END &#xA;&#xA;  UPDATE FileExist&#xA;  SET filesize = @FileSize,&#xA;      filename = ISNULL(@RootPath + @ExportPath + @ArchivePath + @FileName,'No File Was Created'),&#xA;   file_rcvd_date = GETDATE(),&#xA;   check_time = GETDATE(),&#xA;   filecheck = CASE WHEN @TaskFailure = 1 THEN 0 ELSE 1 END&#xA;  WHERE id = @JobID&#xA;&#xA;END" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::CustomerCode"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::JobName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::IntegrationDataType"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="User::FileSize"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="131"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="User::RootPath"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="5"
                SQLTask:DtsVariableName="User::FilePath"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="6"
                SQLTask:DtsVariableName="User::ArchiveFilePath"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="7"
                SQLTask:DtsVariableName="User::FileName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="8"
                SQLTask:DtsVariableName="User::Success"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="17"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Failure - Dashbaord and Integration Reporting.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{138D84D9-D67B-453B-8DFC-1D759E69F893}"
          DTS:From="Package\Failure - Dashbaord and Integration Reporting\Create Report - Failure"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Failure - Dashbaord and Integration Reporting\Insert File Details in Dashboard" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Failure - Dashbaord and Integration Reporting.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{A53D2A89-455F-49CF-B643-649F89A46EAF}"
          DTS:EvalOp="3"
          DTS:Expression="@EmailSend == True"
          DTS:From="Package\Failure - Dashbaord and Integration Reporting\Insert File Details in Dashboard"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Failure - Dashbaord and Integration Reporting\Email Report" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Import Files"
      DTS:AssignExpression="@Counter = @Counter + 1"
      DTS:CreationName="STOCK:FORLOOP"
      DTS:Description="For Loop Container"
      DTS:DTSID="{83E94296-E93A-4A3E-856C-957FAF8DDEBE}"
      DTS:EvalExpression="@Counter &lt;= @FileCount "
      DTS:ExecutableType="STOCK:FORLOOP"
      DTS:InitExpression="@Counter = 1"
      DTS:LocaleID="-1"
      DTS:MaxConcurrent="1"
      DTS:ObjectName="Import Files">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Import Files\Archive File Process"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{4295F227-5EE0-4401-891E-25E2DDE448E6}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Archive File Process">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Import Files\Archive File Process\Archive File"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:Description="Script Task"
              DTS:DTSID="{d889bf86-0965-4087-8901-0e3758a9afd9}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Archive File"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_09bd9d74cd5d4972a37278853bc19101"
                  VSTAMajorVersion="3"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="User::ArchiveFilePath,User::CustomerCode,User::DaysToKeep,User::Debug,User::FileName,User::FilePath,User::RootPath">
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="ST_09bd9d74cd5d4972a37278853bc19101.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{4BF8AAE1-8271-4806-833F-A82E91B722BF}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_ca442df88e994ae6b41dcdcf9629823a</RootNamespace><AssemblyName>ST_09bd9d74cd5d4972a37278853bc19101</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch><TargetFrameworkProfile></TargetFrameworkProfile></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" /><Host Name="ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST120</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
#endregion

namespace ST_ca442df88e994ae6b41dcdcf9629823a
{

	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		public void Main()
		{
            //User::ArchiveFilePath,User::CustomerCode,User::Debug,User::FilePath,User::KeepDays,User::RootPath
            string CustomerCode = Dts.Variables["User::CustomerCode"].Value.ToString();
            string RootPath = Dts.Variables["User::RootPath"].Value.ToString();
            string FilePath =Dts.Variables["User::FilePath"].Value.ToString();
            string FileName = Dts.Variables["User::FileName"].Value.ToString();
            string ArchivePath = Dts.Variables["User::ArchiveFilePath"].Value.ToString();
            Int32 FileRetentionDays = Convert.ToInt32(Dts.Variables["User::DaysToKeep"].Value) * -1;
            string FileNameCheck = FileName;
            string FileToBeMoved = "";
            string FileToExt = "";
            int n;

            FilePath = RootPath + FilePath;

            if (Convert.ToBoolean(Dts.Variables["User::Debug"].Value) == true)
            {
                MessageBox.Show("********    STARTING ARCHIVE SCRIPT    ********\r\n\r\n" +
                                "ArchivePath: " + ArchivePath + ")\r\n\r\n" +
                                "FilePath: " + FilePath + ")\r\n\r\n" +
                                "FileName: " + FileName + ")\r\n\r\n"
                                );
            }

            // Move File(s) to Arhive Folder
            //Test if Date is in File Name
            bool isNumeric = int.TryParse(FileNameCheck.Substring(FileNameCheck.Length - 12, 8), out n);

            if (isNumeric == true)
            {
                FileToBeMoved = FilePath + ArchivePath + FileName;
            }
            else
            {
                FileToBeMoved = FilePath + ArchivePath + FileName;
                FileToExt = FileToBeMoved.Substring(FileToBeMoved.Length - 4, 4);
                FileToBeMoved = FileToBeMoved.Replace(FileToExt, "") + "_" + DateTime.Now.ToString("MM") + DateTime.Now.ToString("dd") + DateTime.Now.ToString("yyyy") + FileToExt;

                if (Convert.ToBoolean(Dts.Variables["User::Debug"].Value) == true)
                {
                    MessageBox.Show("*** File Does NOT have Date in Name  ***\r\n\r\n" +
                                    "New File Name: (" + FileToBeMoved + ")\r\n");
                }

            }

            if (File.Exists(FileToBeMoved))
            {
                File.Delete(FileToBeMoved);
            }

            if (isNumeric == true)
            {
                File.Move(FilePath + FileName,FilePath + ArchivePath + FileName);
            }
            else
            {
                File.Move(FilePath + FileName, FileToBeMoved);
            }



            //    string[] Archivefiles = Directory.GetFiles(FilePath);
            //foreach (string file in Archivefiles)
            //{
            //    if (Convert.ToBoolean(Dts.Variables["User::Debug"].Value) == true)
            //    {
            //        MessageBox.Show("*** Sending to Archive Folder ***\r\n\r\n" +
            //            "File From: (" + file + ")\r\n\r\n" +
            //            "File To: (" + file.Replace(FilePath, FilePath + ArchivePath) + ")\r\n\r\n" +
            //          "File Size: (" + file.Length.ToString() + ")\r\n");
            //    }
            //    FileNameCheck = file.Replace(FilePath, "");

            //    if (Convert.ToBoolean(Dts.Variables["User::Debug"].Value) == true)
            //    {
            //        MessageBox.Show("*** FileName Check: " + FileNameCheck.Substring(FileNameCheck.Length - 12, 8));
            //    }

            //    //Test if Date is in File Name
            //    bool isNumeric = int.TryParse(FileNameCheck.Substring(FileNameCheck.Length - 12, 8), out n);

            //    if (isNumeric == true)
            //    {
            //        FileToBeMoved = file.Replace(FilePath, FilePath + ArchivePath);
            //    }
            //    else
            //    {
            //        FileToBeMoved = file.Replace(FilePath, FilePath + ArchivePath);
            //        FileToExt = FileToBeMoved.Substring(FileToBeMoved.Length - 4, 4);
            //        FileToBeMoved = FileToBeMoved.Replace(FileToExt, "") + "_" + DateTime.Now.ToString("MM") + DateTime.Now.ToString("dd") + DateTime.Now.ToString("yyyy") + FileToExt;

            //        if (Convert.ToBoolean(Dts.Variables["User::Debug"].Value) == true)
            //        {
            //            MessageBox.Show("*** File Does NOT have Date in Name  ***\r\n\r\n" +
            //                            "New File Name: (" + FileToBeMoved + ")\r\n");
            //        }

            //    }

            //    if (File.Exists(FileToBeMoved))
            //    {
            //        File.Delete(FileToBeMoved);
            //    }

            //    if (isNumeric == true)
            //    {
            //        File.Move(file, file.Replace(FilePath, FilePath + ArchivePath));
            //    }
            //    else
            //    {
            //        File.Move(file, FileToBeMoved);
            //    }
            //}


            // Archive folder cleanup of old files
            string[] Cleanupfiles = Directory.GetFiles(FilePath + ArchivePath);
            foreach (string file in Cleanupfiles)
            {
                FileInfo fi = new FileInfo(file);
                if (File.GetCreationTime(fi.ToString()) < DateTime.Now.AddDays(FileRetentionDays))
                {
                    if (Convert.ToBoolean(Dts.Variables["User::Debug"].Value) == true)
                    {
                        MessageBox.Show("*** Cleaning up Archive Folder ***\r\n" +
                            "Deleting File Name: (" + file + ")\r\n" +
                            "      To Directory: (" + RootPath + CustomerCode + "\\" + FilePath + ArchivePath + ")\r\n");
                    }

                    fi.Delete();
                }
                    
            }

            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_93e128b7ee7d4732806bbf62d9fc0f8a</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_93e128b7ee7d4732806bbf62d9fc0f8a</msb:DisplayName>
		<msb:ProjectId>{993292CA-8F0B-41CA-858A-D56C0BF3612C}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_09bd9d74cd5d4972a37278853bc19101.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ca442df88e994ae6b41dcdcf9629823a.Properties.Settings.get_Default():ST_ca442df88e994ae6b41dcdcf9629823a.Properties.Sett" +
    "ings")]

namespace ST_ca442df88e994ae6b41dcdcf9629823a.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_ca442df88e994ae6b41dcdcf9629823a")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_ca442df88e994ae6b41dcdcf9629823a")]
[assembly: AssemblyCopyright("Copyright @  2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ca442df88e994ae6b41dcdcf9629823a.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ca442df88e994ae6b41dcdcf9629823a.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ca442df88e994ae6b41dcdcf9629823a.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_ca442df88e994ae6b41dcdcf9629823a.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_ca442df88e994ae6b41dcdcf9629823a.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_21b8428d9fd549b79a2bacc135349c97.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAOL3ql4AAAAAAAAAAOAAIiALATAAABYAAAAIAAAAAAAA6jUA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAJg1AABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA8BUAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADM
NQAAAAAAAEgAAAACAAUABCQAANwQAAABAAAAAAAAAOA0AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwBgBAAwAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAAoKAigQAAAKbxEAAApyJwAAcG8SAAAKbxMAAApvFAAACgsCKBAAAApvEQAACnJFAABw
bxIAAApvEwAACm8UAAAKDAIoEAAACm8RAAAKcmMAAHBvEgAACm8TAAAKbxQAAAoNAigQAAAKbxEA
AApygQAAcG8SAAAKbxMAAApvFAAAChMEAigQAAAKbxEAAApyrQAAcG8SAAAKbxMAAAooFQAAChVa
EwUJEwZyzwAAcBMHcs8AAHATCAcIKBYAAAoMAigQAAAKbxEAAApy0QAAcG8SAAAKbxMAAAooFwAA
Ciw+HY0eAAABJRZy6QAAcKIlFxEEoiUYcmwBAHCiJRkIoiUacowBAHCiJRsJoiUccqwBAHCiKBgA
AAooGQAACiYRBhEGbxoAAAofDFkebxsAAAoSCSgcAAAKEwoRCiwQCBEECSgdAAAKEwc4wwAAAAgR
BAkoHQAAChMHEQcRB28aAAAKGlkabxsAAAoTCByNHgAAASUWEQcRCHLPAABwbx4AAAqiJRdyuAEA
cKIlGCgfAAAKEwsSC3K8AQBwKCAAAAqiJRkoHwAAChMLEgtywgEAcCggAAAKoiUaKB8AAAoTCxIL
csgBAHAoIAAACqIlGxEIoigYAAAKEwcCKBAAAApvEQAACnLRAABwbxIAAApvEwAACigXAAAKLBdy
0gEAcBEHckwCAHAoHQAACigZAAAKJhEHKCEAAAosBxEHKCIAAAoRCiwXCAkoFgAACggRBAkoHQAA
CigjAAAKKw4ICSgWAAAKEQcoIwAACggRBCgWAAAKKCQAAAoTDBYTDTiqAAAAEQwRDZoTDhEOcyUA
AAoTDxEPbxQAAAooJgAACigfAAAKEwsSCxEFbCgnAAAKKCgAAAoscAIoEAAACm8RAAAKctEAAHBv
EgAACm8TAAAKKBcAAAosSB8JjR4AAAElFnJUAgBwoiUXEQ6iJRhyyAIAcKIlGQeiJRoGoiUbcvoC
AHCiJRwIoiUdEQSiJR5yTAIAcKIoGAAACigZAAAKJhEPbykAAAoRDRdYEw0RDREMjmk/S////wIo
EAAAChZvKgAACioeAigrAAAKKh4CKCwAAAoqrn4BAAAELR5y/gIAcNADAAACKC0AAApvLgAACnMv
AAAKgAEAAAR+AQAABCoafgIAAAQqHgKAAgAABCoafgMAAAQqHgIoMAAACioucwgAAAaAAwAABCoA
AEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAIwEAAAjfgAA+AQAAHwGAAAjU3Ry
aW5ncwAAAAB0CwAAcAMAACNVUwDkDgAAEAAAACNHVUlEAAAA9A4AAOgBAAAjQmxvYgAAAAAAAAAC
AAABVx2iAQkDAAAA+gEzABYAAAEAAAAnAAAABQAAAAYAAAAJAAAAAQAAADAAAAACAAAAEAAAAAEA
AAACAAAAAwAAAAQAAAABAAAABQAAAAEAAAABAAAAAAD7AwEAAAAAAAYAkQL5BAYAIAP5BAYA3QHm
BA8AbQUAAAYACgKPBAYAdAKPBAYAVQKPBAYABwOPBAYAsQKPBAYAygKPBAYAIQKPBAYAPAJTAwoA
5QKqAwoATAGqAwYA3gAsBAYAoQQ2AAYAMwQsBAYAwAHmBAYAFAYsBAYAyQQZBQYAqgR6BA4AiQHl
Aw4A8QHlAw4AaAFlBAYApQH5BAoA0wOqAxIArwX3ABIArAD3AAYAQwYsBAYAbwMsBBYAWAbLBRYA
JwbLBQYAAwAsBAYA2QA2AAYAcAY2AAYAtgQ2AAYAFwEsBAYAtQAsBAYAZwaPBAAAAAAtAAAAAAAB
AAEAAQAQAFoEZwA5AAEAAQAAABAAIAV8BU0AAQADAAABEADCBXwFYQADAAcAAwEAAPAFAABFAAQA
CgARADgE6wARADwB7wARAJwA8wAGBl8A9wBWgOAF+gBWgBwB+gBQIAAAAACGAGAEBgABAJwjAAAA
AIYY2QQGAAEApCMAAAAAgxjZBAYAAQCsIwAAAACTCMUE/gABANgjAAAAAJMIJAEDAQEA3yMAAAAA
kwgwAQgBAQDnIwAAAACWCBsGDgECAO4jAAAAAIYY2QQGAAIA9iMAAAAAkRjfBBMBAgAAAAEASAMJ
ANkEAQARANkEBgAZANkECgApANkEEAAxANkEEAA5ANkEEABBANkEEABJANkEEABRANkEEABZANkE
EABhANkEEABpANkEBgCRANkEBgC5ANkEFQDJANkEBgBxAOgFMQDRAKsFNgDZACMEOwDhAD4DQQCZ
AG0DRQDpAAEASQDxAA0GTgDpAEQEVADxAA0GWQD5AFMGXwDxAIADZgDxAHYDagAJAYABcADxAA0G
dwDxAJQAfgB5AEsGhAB5AG0DiQARAf4FjgARAZ4BkwARAU4DmAAZAbkFngCBANkEEAARAecApAB5
AAUGqgB5AE4EsAAhAZ4BBgDRADQGAQBxANkEBgCZANkEBgApAccAuAApAWMGwQChANkExwDBANkE
BgAIABQA4QAIABgA5gApAHMATgEuAAsAJgEuABMALwEuABsATgEuACMAVwEuACsAgAEuADMAgAEu
ADsAgAEuAEMAVwEuAEsAhgEuAFMAgAEuAFsAnQFDAGMA5gBJAHMATgFhAHsA5gBjAGsA5gAbAAMA
AQAEAAMAAADJBBcBAABEARwBAAAfBiEBAgAEAAMAAgAFAAUAAQAGAAUAAgAHAAcABIAAAAEAAAAB
HUlOAAAAAAAACQAAAAQAAAAAAAAAAAAAAM8AiwAAAAAADAAAAAAAAAAAAAAA2ACLAwAAAAAEAAAA
AAAAAAAAAADPACwEAAAAAAwAAAAAAAAAAAAAANgAQAAAAAAABAAAAAAAAAAAAAAAzwDLBQAAAAAA
AAAAAQAAACoFAAAFAAIAAAAAAABUb0ludDMyAFNUXzIxYjg0MjhkOWZkNTQ5Yjc5YTJiYWNjMTM1
MzQ5Yzk3ADxNb2R1bGU+AFN5c3RlbS5JTwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMA
dmFsdWVfXwBTVF9jYTQ0MmRmODhlOTk0YWU2YjQxZGNkY2Y5NjI5ODIzYQBtc2NvcmxpYgBSZXBs
YWNlAGRlZmF1bHRJbnN0YW5jZQBWYXJpYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJv
bUhhbmRsZQBGaWxlAERhdGVUaW1lAEdldENyZWF0aW9uVGltZQBNaWNyb3NvZnQuU3FsU2VydmVy
LkR0cy5SdW50aW1lAFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJj
ZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NC
YXNlAFRyeVBhcnNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAERlbGV0ZQBDb21waWxlckdlbmVyYXRl
ZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1
dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1i
bHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29u
ZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0
aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5
Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3Nl
bWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAZ2V0X1Zh
bHVlAHZhbHVlAE1vdmUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBTdWJzdHJp
bmcAZ2V0X0xlbmd0aABNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNx
bFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29t
cG9uZW50TW9kZWwAU1RfMjFiODQyOGQ5ZmQ1NDliNzlhMmJhY2MxMzUzNDljOTcuZGxsAGdldF9J
dGVtAFN5c3RlbQBFbnVtAHJlc291cmNlTWFuAFRvQm9vbGVhbgBvcF9MZXNzVGhhbgBTY3JpcHRN
YWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZs
ZWN0aW9uAEZpbGVJbmZvAEN1bHR1cmVJbmZvAEZpbGVTeXN0ZW1JbmZvAGdldF9SZXNvdXJjZU1h
bmFnZXIALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21w
aWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfY2E0NDJkZjg4ZTk5NGFlNmI0MWRjZGNm
OTYyOTgyM2EuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNU
X2NhNDQyZGY4OGU5OTRhZTZiNDFkY2RjZjk2Mjk4MjNhLlByb3BlcnRpZXMAZ2V0X1ZhcmlhYmxl
cwBHZXRGaWxlcwBTZXR0aW5ncwBTeXN0ZW0uV2luZG93cy5Gb3JtcwBTdWNjZXNzAGdldF9EdHMA
U2NyaXB0UmVzdWx0cwBFeGlzdHMAQWRkRGF5cwBDb25jYXQAT2JqZWN0AGdldF9EZWZhdWx0AERp
YWxvZ1Jlc3VsdABzZXRfVGFza1Jlc3VsdABDb252ZXJ0AGdldF9Ob3cAU2hvdwBNZXNzYWdlQm94
AGdldF9Bc3NlbWJseQBEaXJlY3RvcnkAAAAAJVUAcwBlAHIAOgA6AEMAdQBzAHQAbwBtAGUAcgBD
AG8AZABlAAAdVQBzAGUAcgA6ADoAUgBvAG8AdABQAGEAdABoAAAdVQBzAGUAcgA6ADoARgBpAGwA
ZQBQAGEAdABoAAAdVQBzAGUAcgA6ADoARgBpAGwAZQBOAGEAbQBlAAArVQBzAGUAcgA6ADoAQQBy
AGMAaABpAHYAZQBGAGkAbABlAFAAYQB0AGgAACFVAHMAZQByADoAOgBEAGEAeQBzAFQAbwBLAGUA
ZQBwAAABABdVAHMAZQByADoAOgBEAGUAYgB1AGcAAICBKgAqACoAKgAqACoAKgAqACAAIAAgACAA
UwBUAEEAUgBUAEkATgBHACAAQQBSAEMASABJAFYARQAgAFMAQwBSAEkAUABUACAAIAAgACAAKgAq
ACoAKgAqACoAKgAqAA0ACgANAAoAQQByAGMAaABpAHYAZQBQAGEAdABoADoAIAAAHykADQAKAA0A
CgBGAGkAbABlAFAAYQB0AGgAOgAgAAAfKQANAAoADQAKAEYAaQBsAGUATgBhAG0AZQA6ACAAAAsp
AA0ACgANAAoAAANfAAAFTQBNAAAFZABkAAAJeQB5AHkAeQAAeSoAKgAqACAARgBpAGwAZQAgAEQA
bwBlAHMAIABOAE8AVAAgAGgAYQB2AGUAIABEAGEAdABlACAAaQBuACAATgBhAG0AZQAgACAAKgAq
ACoADQAKAA0ACgBOAGUAdwAgAEYAaQBsAGUAIABOAGEAbQBlADoAIAAoAAAHKQANAAoAAHMqACoA
KgAgAEMAbABlAGEAbgBpAG4AZwAgAHUAcAAgAEEAcgBjAGgAaQB2AGUAIABGAG8AbABkAGUAcgAg
ACoAKgAqAA0ACgBEAGUAbABlAHQAaQBuAGcAIABGAGkAbABlACAATgBhAG0AZQA6ACAAKAAAMSkA
DQAKACAAIAAgACAAIAAgAFQAbwAgAEQAaQByAGUAYwB0AG8AcgB5ADoAIAAoAAADXAAAcVMAVABf
AGMAYQA0ADQAMgBkAGYAOAA4AGUAOQA5ADQAYQBlADYAYgA0ADEAZABjAGQAYwBmADkANgAyADkA
OAAyADMAYQAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAA/tj3TPnX
TEieeFrvo+CNkwAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERWRUHEA4ODg4OCA4ODggCET0dDggO
EkEEIAASaQQgABJtBSABEnEcAyAAHAMgAA4EAAEIHAUAAg4ODgQAAQIcBQABDh0OBgABEYCBDgMg
AAgFIAIOCAgGAAICDhAIBgADDg4ODgUgAg4ODgQAABE9BCABDg4EAAECDgQAAQEOBQACAQ4OBQAB
HQ4OBQABET0OBSABET0NBwACAhE9ET0IAAESgJURgJkFIAASgJ0HIAIBDhKAnQi3elxWGTTgiQiJ
hF3NgIDMkQQAAAAABAEAAAADBhJRAwYSVQMGEhACBggDBhEUBAAAElEEAAASVQUAAQESVQQAABIQ
AwAAAQQIABJRBAgAElUECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93
cwEIAQACAAAAAAAoAQAjU1RfY2E0NDJkZjg4ZTk5NGFlNmI0MWRjZGNmOTYyOTgyM2EAAAUBAAAA
ABYBABFDb3B5cmlnaHQgQCAgMjAxOAAARwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBU
DhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0AAAAtAAAAM7K774BAAAAkQAA
AGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAu
MC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lz
dGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAMA1
AAAAAAAAAAAAANo1AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAADMNQAAAAAAAAAAAAAAAF9Db3JE
bGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQBJTgEdAAABAElOAR0/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAVABfAGMAYQA0ADQAMgBkAGYAOAA4AGUAOQA5ADQAYQBlADYAYgA0ADEAZABjAGQAYwBmADkA
NgAyADkAOAAyADMAYQAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA3
ADQAMgA1AC4AMgAwADAANAAxAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMA
VABfADIAMQBiADgANAAyADgAZAA5AGYAZAA1ADQAOQBiADcAOQBhADIAYgBhAGMAYwAxADMANQAz
ADQAOQBjADkANwAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAA
QwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA4AAAAKgABAAEATABlAGcAYQBsAFQAcgBh
AGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEA
bQBlAAAAUwBUAF8AMgAxAGIAOAA0ADIAOABkADkAZgBkADUANAA5AGIANwA5AGEAMgBiAGEAYwBj
ADEAMwA1ADMANAA5AGMAOQA3AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUA
AAAAAFMAVABfAGMAYQA0ADQAMgBkAGYAOAA4AGUAOQA5ADQAYQBlADYAYgA0ADEAZABjAGQAYwBm
ADkANgAyADkAOAAyADMAYQAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4ANwA0ADIANQAuADIAMAAwADQAMQAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4ANwA0ADIANQAuADIAMAAwADQAMQAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAADsNQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Import Files\Charges"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{E056E302-E7FC-48C7-8502-4FBFD58F75E7}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Charges">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Import Files\Charges\Exceptions"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:Description="Script Task"
              DTS:DTSID="{079EE7BB-2955-421A-842C-B2BA4DC97E90}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Exceptions"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_ca0b985fceaa422aa1ffde39e390adc0"
                  VSTAMajorVersion="3"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="User::FileName,User::TotalExceptions">
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ca0b985fceaa422aa1ffde39e390adc0.Properties.Settings.get_Default():ST_ca0b985fceaa422aa1ffde39e390adc0.Properties.Sett" +
    "ings")]

namespace ST_ca0b985fceaa422aa1ffde39e390adc0.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_ca0b985fceaa422aa1ffde39e390adc0
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            string TotalExceptions = Dts.Variables["TotalExceptions"].Value.ToString();
            string ImportFileName = Dts.Variables["FileName"].Value.ToString();

            MessageBox.Show
            (
             "************* THERE ARE EXCEPTIONS *************\r\n\r\n" +
                "Total Exceptions: " + TotalExceptions + "\r\n\r\n" +
                "        FileName: " + ImportFileName + "\r\n\r\n" +
                "       TableName: IntegrationMiddleWay.Onetime.StagingIMCharges\r\n\r\n" +
             "************************************************\r\n\r\n"
            );

            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="ST_ca0b985fceaa422aa1ffde39e390adc0.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{CEE32638-A1E8-443C-A269-5380B4D8B799}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_ca0b985fceaa422aa1ffde39e390adc0</RootNamespace>
    <AssemblyName>ST_ca0b985fceaa422aa1ffde39e390adc0</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_ca0b985fceaa422aa1ffde39e390adc0</msb:CodeName>
		<msb:DisplayName>ST_ca0b985fceaa422aa1ffde39e390adc0</msb:DisplayName>
		<msb:ProjectId>{A3FE14D5-BFBF-422F-BA71-2E7E6992D7D7}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_ca0b985fceaa422aa1ffde39e390adc0.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_ca0b985fceaa422aa1ffde39e390adc0")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_ca0b985fceaa422aa1ffde39e390adc0")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ca0b985fceaa422aa1ffde39e390adc0.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ca0b985fceaa422aa1ffde39e390adc0.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ca0b985fceaa422aa1ffde39e390adc0.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_ca0b985fceaa422aa1ffde39e390adc0.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_ca0b985fceaa422aa1ffde39e390adc0.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_ca0b985fceaa422aa1ffde39e390adc0.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDACjQOl8AAAAAAAAAAOAAIiALATAAABIAAAAIAAAAAAAAFjAA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAMQvAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAHBAAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAD4
LwAAAAAAAEgAAAACAAUAQCEAAMwNAAABAAAAAAAAAAwvAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwBAB+AAAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAAoKAigQAAAKbxEAAApyIQAAcG8SAAAKbxMAAApvFAAACgsbjRsAAAElFnIzAABwoiUX
BqIlGHLCAABwoiUZB6IlGnLwAABwoigVAAAKKBYAAAomAigQAAAKFm8XAAAKKh4CKBgAAAoqHgIo
GQAACiqufgEAAAQtHnLpAQBw0AMAAAIoGgAACm8bAAAKcxwAAAqAAQAABH4BAAAEKhp+AgAABCoe
AoACAAAEKhp+AwAABCoeAigdAAAKKi5zCAAABoADAAAEKkJTSkIBAAEAAAAAAAwAAAB2NC4wLjMw
MzE5AAAAAAUAbAAAAPADAAAjfgAAXAQAAJQFAAAjU3RyaW5ncwAAAADwCQAAXAIAACNVUwBMDAAA
EAAAACNHVUlEAAAAXAwAAHABAAAjQmxvYgAAAAAAAAACAAABVx2iAQkDAAAA+gEzABYAAAEAAAAg
AAAABQAAAAYAAAAJAAAAAQAAAB0AAAACAAAAEAAAAAEAAAACAAAAAwAAAAQAAAABAAAABQAAAAEA
AAABAAAAAAB1AwEAAAAAAAYAJQJFBAYAtAJFBAYAcQEyBA8AuQQAAAYAngHzAwYACALzAwYA6QHz
AwYAmwLzAwYARQLzAwYAXgLzAwYAtQHzAwYA0AHiAgoAeQIkAwoA8AAkAwYArQOmAwYAVAEyBAYA
SAWmAwYAFQRlBAYABQTeAw4AJAFfAw4AhQFfAw4ADAHJAwYAOQFFBAoATQMkAxIA+wSbABIAbgCb
AAYA/gKmAxYAfAUOBRYAWwUOBQYAuwCmAwYAdwCmAwYAiwXzAwAAAAAlAAAAAAABAAEAAQAQAL4D
AQA5AAEAAQAAABAAbATIBEUAAQADAAABEAAFBcgEWQADAAcAAwEAADMFAAA9AAQACgARALIDdQAR
AOAAeQARAF4AfQAGBk0AgQBWgCMFhABWgMAAhABQIAAAAACGAMQDBgABANogAAAAAIYYJQQGAAEA
4iAAAAAAgxglBAYAAQDqIAAAAACTCBEEiAABABYhAAAAAJMIyACNAAEAHSEAAAAAkwjUAJIAAQAl
IQAAAACWCE8FmAACACwhAAAAAIYYJQQGAAIANCEAAAAAkRgrBJ0AAgAAAAEA3AIJACUEAQARACUE
BgAZACUECgApACUEEAAxACUEEAA5ACUEEABBACUEEABJACUEEABRACUEEABZACUEEABhACUEEABp
ACUEBgCBACUEBgCpACUEFQC5ACUEBgBxACsFIADBAPcEJQDJAJ0DKgDRANICMACJAPwCNADZAEEF
OADhAHcFPgDBAGgFAQBxACUEBgCJACUEBgDxAIkARADxAIcFSwCRACUEUQCxACUEBgAIABQAawAI
ABgAcAApAHMA2AAuAAsAsAAuABMAuQAuABsA2AAuACMA4QAuACsACgEuADMACgEuADsACgEuAEMA
4QAuAEsAEAEuAFMACgEuAFsAJwFDAGMAcABJAHMA2ABhAHsAcABjAGsAcAAbAAMAAQAEAAMAAAAV
BKEAAADoAKYAAABTBasAAgAEAAMAAgAFAAUAAQAGAAUAAgAHAAcABIAAAAEAAABuHaxgAAAAAAAA
AQAAAAQAAAAAAAAAAAAAAFkAVQAAAAAADAAAAAAAAAAAAAAAYgAFAwAAAAAEAAAAAAAAAAAAAABZ
AKYDAAAAAAwAAAAAAAAAAAAAAGIALgAAAAAABAAAAAAAAAAAAAAAWQAOBQAAAAAAAAAAAQAAAHYE
AAAFAAIAAAAAAABTVF9jYTBiOTg1ZmNlYWE0MjJhYTFmZmRlMzllMzkwYWRjMAA8TW9kdWxlPgBN
aWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAdmFsdWVfXwBtc2NvcmxpYgBkZWZhdWx0SW5z
dGFuY2UAVmFyaWFibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUATWljcm9z
b2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1
bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNh
dGlvblNldHRpbmdzQmFzZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0
dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUA
RWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlU
cmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmln
dXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9u
UmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29w
eXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJs
eUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAZ2V0X1ZhbHVl
AHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVG9TdHJpbmcATWljcm9zb2Z0LlNxbFNl
cnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sA
U2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUX2NhMGI5ODVmY2VhYTQy
MmFhMWZmZGUzOWUzOTBhZGMwLmRsbABnZXRfSXRlbQBTeXN0ZW0ARW51bQByZXNvdXJjZU1hbgBT
Y3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3Rl
bS5SZWZsZWN0aW9uAEN1bHR1cmVJbmZvAGdldF9SZXNvdXJjZU1hbmFnZXIALmN0b3IALmNjdG9y
AFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3Rl
bS5SZXNvdXJjZXMAU1RfY2EwYjk4NWZjZWFhNDIyYWExZmZkZTM5ZTM5MGFkYzAuUHJvcGVydGll
cy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNUX2NhMGI5ODVmY2VhYTQyMmFh
MWZmZGUzOWUzOTBhZGMwLlByb3BlcnRpZXMAZ2V0X1ZhcmlhYmxlcwBTZXR0aW5ncwBTeXN0ZW0u
V2luZG93cy5Gb3JtcwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0cwBDb25jYXQAT2JqZWN0
AGdldF9EZWZhdWx0AERpYWxvZ1Jlc3VsdABzZXRfVGFza1Jlc3VsdABTaG93AE1lc3NhZ2VCb3gA
Z2V0X0Fzc2VtYmx5AAAfVABvAHQAYQBsAEUAeABjAGUAcAB0AGkAbwBuAHMAABFGAGkAbABlAE4A
YQBtAGUAAICNKgAqACoAKgAqACoAKgAqACoAKgAqACoAKgAgAFQASABFAFIARQAgAEEAUgBFACAA
RQBYAEMARQBQAFQASQBPAE4AUwAgACoAKgAqACoAKgAqACoAKgAqACoAKgAqACoADQAKAA0ACgBU
AG8AdABhAGwAIABFAHgAYwBlAHAAdABpAG8AbgBzADoAIAAALQ0ACgANAAoAIAAgACAAIAAgACAA
IAAgAEYAaQBsAGUATgBhAG0AZQA6ACAAAID3DQAKAA0ACgAgACAAIAAgACAAIAAgAFQAYQBiAGwA
ZQBOAGEAbQBlADoAIABJAG4AdABlAGcAcgBhAHQAaQBvAG4ATQBpAGQAZABsAGUAVwBhAHkALgBP
AG4AZQB0AGkAbQBlAC4AUwB0AGEAZwBpAG4AZwBJAE0AQwBoAGEAcgBnAGUAcwANAAoADQAKACoA
KgAqACoAKgAqACoAKgAqACoAKgAqACoAKgAqACoAKgAqACoAKgAqACoAKgAqACoAKgAqACoAKgAq
ACoAKgAqACoAKgAqACoAKgAqACoAKgAqACoAKgAqACoAKgAqAA0ACgANAAoAAHFTAFQAXwBjAGEA
MABiADkAOAA1AGYAYwBlAGEAYQA0ADIAMgBhAGEAMQBmAGYAZABlADMAOQBlADMAOQAwAGEAZABj
ADAALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAABpk194coAySaiv
S6W1y5GuAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFRBAcCDg4EIAASYQQgABJlBSABEmkcAyAA
HAMgAA4FAAEOHQ4FAAERdQ4GAAESeRF9BSAAEoCBByACAQ4SgIEIt3pcVhk04IkIiYRdzYCAzJEE
AAAAAAQBAAAAAwYSSQMGEk0DBhIQAgYIAwYRFAQAABJJBAAAEk0FAAEBEk0EAAASEAMAAAEECAAS
SQQIABJNBAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAA
AAAAKAEAI1NUX2NhMGI5ODVmY2VhYTQyMmFhMWZmZGUzOWUzOTBhZGMwAAAFAQAAAAAWAQARQ29w
eXJpZ2h0IEAgIDIwMjAAAEcBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3
b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5S
ZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1
cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3Vy
Y2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAA7C8AAAAAAAAAAAAA
BjAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPgvAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNj
b3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAKxgbh0AAAEArGBuHT8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAw
ADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEA
bgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAA
AAAAUwBUAF8AYwBhADAAYgA5ADgANQBmAGMAZQBhAGEANAAyADIAYQBhADEAZgBmAGQAZQAzADkA
ZQAzADkAMABhAGQAYwAwAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADcANQAzADQALgAyADQANwA0ADgAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAA
UwBUAF8AYwBhADAAYgA5ADgANQBmAGMAZQBhAGEANAAyADIAYQBhADEAZgBmAGQAZQAzADkAZQAz
ADkAMABhAGQAYwAwAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQA
AABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAyADAAAAAqAAEAAQBMAGUAZwBhAGwAVABy
AGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4A
YQBtAGUAAABTAFQAXwBjAGEAMABiADkAOAA1AGYAYwBlAGEAYQA0ADIAMgBhAGEAMQBmAGYAZABl
ADMAOQBlADMAOQAwAGEAZABjADAALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0A
ZQAAAAAAUwBUAF8AYwBhADAAYgA5ADgANQBmAGMAZQBhAGEANAAyADIAYQBhADEAZgBmAGQAZQAz
ADkAZQAzADkAMABhAGQAYwAwAAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAA
MQAuADAALgA3ADUAMwA0AC4AMgA0ADcANAA4AAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABW
AGUAcgBzAGkAbwBuAAAAMQAuADAALgA3ADUAMwA0AC4AMgA0ADcANAA4AAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAABgwAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Import Files\Charges\Insert Charges"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{0D3F7EEB-88D7-42C1-A975-B43D72665433}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Insert Charges"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\Import Files\Charges\Insert Charges\Charge Exists"
                      componentClassID="Microsoft.Lookup"
                      contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                      description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                      name="Charge Exists"
                      usesDispositions="true"
                      version="6">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the SQL statement that generates the lookup table."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[tblUnvCharges]</property>
                        <property
                          dataType="System.String"
                          description="Specifies a SQL statement that uses parameters to generate the lookup table."
                          expressionType="Notify"
                          name="SqlCommandParam"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[tblUnvCharges]) [refTable]
where [refTable].[ChargeAmount] = ? and [refTable].[CreatedDate] = ? and [refTable].[UniversalID] = ? and [refTable].[EntityUID] = ? and [refTable].[ItemUID] = ? and [refTable].[ItemTypeUID] = ? and [refTable].[CreatedByUserID] = ? and [refTable].[ApplicationUID] = ? and [refTable].[EntityTypeUID] = ?</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of connection used to access the reference dataset."
                          name="ConnectionType"
                          typeConverter="LookupConnectionType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the cache type of the lookup table."
                          name="CacheType"
                          typeConverter="CacheType">2</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                          name="NoMatchBehavior"
                          typeConverter="LookupNoMatchBehavior">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                          name="NoMatchCachePercentage">0</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                          name="MaxMemoryUsage">25</property>
                        <property
                          dataType="System.Int64"
                          description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                          name="MaxMemoryUsage64">25</property>
                        <property
                          dataType="System.String"
                          description="Indicates whether to reference metadata in an XML format."
                          name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ChargeUID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ChargeTypeUID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="EntityUID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="EntityTypeUID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ChargeSiteUID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ChargeAmount" dataType="DT_CY" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Void" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Description" dataType="DT_TEXT" length="0" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Notes" dataType="DT_TEXT" length="0" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="UniversalID" dataType="DT_STR" length="150" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="ItemUID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ItemTypeUID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="DateSatisfied" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ApplicationUID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="CreatedByUserID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="CreatedDate" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="LastModifiedByUserID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="LastModifiedDate" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                          name="ParameterMap">#{Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Output].Columns[Price]};#{Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Output].Columns[CreateDate]};#{Package\Import Files\Charges\Insert Charges\Data Conversion.Outputs[Data Conversion Output].Columns[DC.UniversalID]};#{Package\Import Files\Charges\Insert Charges\StudentID Exists.Outputs[Lookup Match Output].Columns[StudentsUID]};#{Package\Import Files\Charges\Insert Charges\Lookup ISBN.Outputs[Lookup Match Output].Columns[ItemUID]};#{Package\Import Files\Charges\Insert Charges\Defaults.Outputs[Derived Column Output].Columns[ItemTypeUID]};#{Package\Import Files\Charges\Insert Charges\Defaults.Outputs[Derived Column Output].Columns[CreatedbyUserID]};#{Package\Import Files\Charges\Insert Charges\Defaults.Outputs[Derived Column Output].Columns[ApplicationUID]};#{Package\Import Files\Charges\Insert Charges\Defaults.Outputs[Derived Column Output].Columns[EntityTypeUID]};</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                          name="TreatDuplicateKeysAsError">false</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Import Files\Charges\Insert Charges\Charge Exists.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[Target - TIPWeb]"
                          connectionManagerRefId="Package.ConnectionManagers[Target - TIPWeb]"
                          description="Connection manager used to access lookup data."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Import Files\Charges\Insert Charges\Charge Exists.Inputs[Lookup Input]"
                          name="Lookup Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Import Files\Charges\Insert Charges\Charge Exists.Inputs[Lookup Input].Columns[StudentsUID]"
                              cachedDataType="i4"
                              cachedName="StudentsUID"
                              lineageId="Package\Import Files\Charges\Insert Charges\StudentID Exists.Outputs[Lookup Match Output].Columns[StudentsUID]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table that a column joins."
                                  name="JoinToReferenceColumn">EntityUID</property>
                                <property
                                  dataType="System.Null"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn" />
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Import Files\Charges\Insert Charges\Charge Exists.Inputs[Lookup Input].Columns[EntityTypeUID]"
                              cachedDataType="i4"
                              cachedName="EntityTypeUID"
                              lineageId="Package\Import Files\Charges\Insert Charges\Defaults.Outputs[Derived Column Output].Columns[EntityTypeUID]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table that a column joins."
                                  name="JoinToReferenceColumn">EntityTypeUID</property>
                                <property
                                  dataType="System.Null"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn" />
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Import Files\Charges\Insert Charges\Charge Exists.Inputs[Lookup Input].Columns[ItemTypeUID]"
                              cachedDataType="i4"
                              cachedName="ItemTypeUID"
                              lineageId="Package\Import Files\Charges\Insert Charges\Defaults.Outputs[Derived Column Output].Columns[ItemTypeUID]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table that a column joins."
                                  name="JoinToReferenceColumn">ItemTypeUID</property>
                                <property
                                  dataType="System.Null"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn" />
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Import Files\Charges\Insert Charges\Charge Exists.Inputs[Lookup Input].Columns[ItemUID]"
                              cachedDataType="i4"
                              cachedName="ItemUID"
                              lineageId="Package\Import Files\Charges\Insert Charges\Lookup ISBN.Outputs[Lookup Match Output].Columns[ItemUID]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table that a column joins."
                                  name="JoinToReferenceColumn">ItemUID</property>
                                <property
                                  dataType="System.Null"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn" />
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Import Files\Charges\Insert Charges\Charge Exists.Inputs[Lookup Input].Columns[Price]"
                              cachedDataType="cy"
                              cachedName="Price"
                              lineageId="Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Output].Columns[Price]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table that a column joins."
                                  name="JoinToReferenceColumn">ChargeAmount</property>
                                <property
                                  dataType="System.Null"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn" />
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Import Files\Charges\Insert Charges\Charge Exists.Inputs[Lookup Input].Columns[CreateDate]"
                              cachedDataType="dbTimeStamp"
                              cachedName="CreateDate"
                              lineageId="Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Output].Columns[CreateDate]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table that a column joins."
                                  name="JoinToReferenceColumn">CreatedDate</property>
                                <property
                                  dataType="System.Null"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn" />
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Import Files\Charges\Insert Charges\Charge Exists.Inputs[Lookup Input].Columns[ApplicationUID]"
                              cachedDataType="i4"
                              cachedName="ApplicationUID"
                              lineageId="Package\Import Files\Charges\Insert Charges\Defaults.Outputs[Derived Column Output].Columns[ApplicationUID]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table that a column joins."
                                  name="JoinToReferenceColumn">ApplicationUID</property>
                                <property
                                  dataType="System.Null"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn" />
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Import Files\Charges\Insert Charges\Charge Exists.Inputs[Lookup Input].Columns[CreatedbyUserID]"
                              cachedDataType="i4"
                              cachedName="CreatedbyUserID"
                              lineageId="Package\Import Files\Charges\Insert Charges\Defaults.Outputs[Derived Column Output].Columns[CreatedbyUserID]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table that a column joins."
                                  name="JoinToReferenceColumn">CreatedByUserID</property>
                                <property
                                  dataType="System.Null"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn" />
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Import Files\Charges\Insert Charges\Charge Exists.Inputs[Lookup Input].Columns[DC.UniversalID]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="255"
                              cachedName="DC.UniversalID"
                              lineageId="Package\Import Files\Charges\Insert Charges\Data Conversion.Outputs[Data Conversion Output].Columns[DC.UniversalID]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table that a column joins."
                                  name="JoinToReferenceColumn">UniversalID</property>
                                <property
                                  dataType="System.Null"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn" />
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Import Files\Charges\Insert Charges\Charge Exists.Outputs[Lookup Match Output]"
                          errorOrTruncationOperation="Lookup"
                          exclusionGroup="1"
                          name="Lookup Match Output"
                          synchronousInputId="Package\Import Files\Charges\Insert Charges\Charge Exists.Inputs[Lookup Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Import Files\Charges\Insert Charges\Charge Exists.Outputs[Lookup No Match Output]"
                          description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                          exclusionGroup="1"
                          name="Lookup No Match Output"
                          synchronousInputId="Package\Import Files\Charges\Insert Charges\Charge Exists.Inputs[Lookup Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Import Files\Charges\Insert Charges\Charge Exists.Outputs[Lookup Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Lookup Error Output"
                          synchronousInputId="Package\Import Files\Charges\Insert Charges\Charge Exists.Inputs[Lookup Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Import Files\Charges\Insert Charges\Charge Exists.Outputs[Lookup Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Import Files\Charges\Insert Charges\Charge Exists.Outputs[Lookup Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Import Files\Charges\Insert Charges\Charge Exists.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Import Files\Charges\Insert Charges\Charge Exists.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Import Files\Charges\Insert Charges\Data Conversion"
                      componentClassID="Microsoft.DataConvert"
                      contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Data Conversion"
                      name="Data Conversion"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Import Files\Charges\Insert Charges\Data Conversion.Inputs[Data Conversion Input]"
                          name="Data Conversion Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Import Files\Charges\Insert Charges\Data Conversion.Inputs[Data Conversion Input].Columns[StudentID]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="StudentID"
                              lineageId="Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Output].Columns[StudentID]" />
                            <inputColumn
                              refId="Package\Import Files\Charges\Insert Charges\Data Conversion.Inputs[Data Conversion Input].Columns[ISBN]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="ISBN"
                              lineageId="Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Output].Columns[ISBN]" />
                            <inputColumn
                              refId="Package\Import Files\Charges\Insert Charges\Data Conversion.Inputs[Data Conversion Input].Columns[UniversalID]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="UniversalID"
                              lineageId="Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Output].Columns[UniversalID]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Import Files\Charges\Insert Charges\Data Conversion.Outputs[Data Conversion Output]"
                          exclusionGroup="1"
                          name="Data Conversion Output"
                          synchronousInputId="Package\Import Files\Charges\Insert Charges\Data Conversion.Inputs[Data Conversion Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Import Files\Charges\Insert Charges\Data Conversion.Outputs[Data Conversion Output].Columns[DC.StudentID]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              length="255"
                              lineageId="Package\Import Files\Charges\Insert Charges\Data Conversion.Outputs[Data Conversion Output].Columns[DC.StudentID]"
                              name="DC.StudentID"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Output].Columns[StudentID]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Import Files\Charges\Insert Charges\Data Conversion.Outputs[Data Conversion Output].Columns[DC.ISBN]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              length="255"
                              lineageId="Package\Import Files\Charges\Insert Charges\Data Conversion.Outputs[Data Conversion Output].Columns[DC.ISBN]"
                              name="DC.ISBN"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Output].Columns[ISBN]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Import Files\Charges\Insert Charges\Data Conversion.Outputs[Data Conversion Output].Columns[DC.UniversalID]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              length="255"
                              lineageId="Package\Import Files\Charges\Insert Charges\Data Conversion.Outputs[Data Conversion Output].Columns[DC.UniversalID]"
                              name="DC.UniversalID"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Output].Columns[UniversalID]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Import Files\Charges\Insert Charges\Data Conversion.Outputs[Data Conversion Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Data Conversion Error Output"
                          synchronousInputId="Package\Import Files\Charges\Insert Charges\Data Conversion.Inputs[Data Conversion Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Import Files\Charges\Insert Charges\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Import Files\Charges\Insert Charges\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Import Files\Charges\Insert Charges\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Import Files\Charges\Insert Charges\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Import Files\Charges\Insert Charges\Defaults"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Defaults"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Import Files\Charges\Insert Charges\Defaults.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Import Files\Charges\Insert Charges\Defaults.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\Import Files\Charges\Insert Charges\Defaults.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Import Files\Charges\Insert Charges\Defaults.Outputs[Derived Column Output].Columns[ItemTypeUID]"
                              dataType="i4"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Import Files\Charges\Insert Charges\Defaults.Outputs[Derived Column Output].Columns[ItemTypeUID]"
                              name="ItemTypeUID"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">0</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">0</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Import Files\Charges\Insert Charges\Defaults.Outputs[Derived Column Output].Columns[ChargeTypeUID]"
                              dataType="i4"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Import Files\Charges\Insert Charges\Defaults.Outputs[Derived Column Output].Columns[ChargeTypeUID]"
                              name="ChargeTypeUID"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">18</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">18</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Import Files\Charges\Insert Charges\Defaults.Outputs[Derived Column Output].Columns[CreatedbyUserID]"
                              dataType="i4"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Import Files\Charges\Insert Charges\Defaults.Outputs[Derived Column Output].Columns[CreatedbyUserID]"
                              name="CreatedbyUserID"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">@[User::IntegrationUserID]</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">@[User::IntegrationUserID]</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Import Files\Charges\Insert Charges\Defaults.Outputs[Derived Column Output].Columns[LastModfiedUserID]"
                              dataType="i4"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Import Files\Charges\Insert Charges\Defaults.Outputs[Derived Column Output].Columns[LastModfiedUserID]"
                              name="LastModfiedUserID"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">@[User::IntegrationUserID]</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">@[User::IntegrationUserID]</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Import Files\Charges\Insert Charges\Defaults.Outputs[Derived Column Output].Columns[ApplicationUID]"
                              dataType="i4"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Import Files\Charges\Insert Charges\Defaults.Outputs[Derived Column Output].Columns[ApplicationUID]"
                              name="ApplicationUID"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">@[User::ApplicationUID]</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">@[User::ApplicationUID]</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Import Files\Charges\Insert Charges\Defaults.Outputs[Derived Column Output].Columns[EntityTypeUID]"
                              dataType="i4"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Import Files\Charges\Insert Charges\Defaults.Outputs[Derived Column Output].Columns[EntityTypeUID]"
                              name="EntityTypeUID"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">4</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">4</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Import Files\Charges\Insert Charges\Defaults.Outputs[Derived Column Output].Columns[ChargeNotes]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="50"
                              lineageId="Package\Import Files\Charges\Insert Charges\Defaults.Outputs[Derived Column Output].Columns[ChargeNotes]"
                              name="ChargeNotes"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">"One time Import from School Excel Sheet"</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">"One time Import from School Excel Sheet"</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Import Files\Charges\Insert Charges\Defaults.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\Import Files\Charges\Insert Charges\Defaults.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Import Files\Charges\Insert Charges\Defaults.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Import Files\Charges\Insert Charges\Defaults.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Import Files\Charges\Insert Charges\Defaults.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Import Files\Charges\Insert Charges\Defaults.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Import Files\Charges\Insert Charges\Get Charges"
                      componentClassID="Microsoft.OLEDBSource"
                      contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                      description="OLE DB Source"
                      name="Get Charges"
                      usesDispositions="true"
                      version="7">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset"></property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT StudentID,Accession AS UniversalID,ISBN,CAST(Date AS DATETIME) AS CreateDate,Price,GETDATE() AS LastModifiedDate, ''  AS ChargeDesc,SiteID
FROM Onetime.StagingIMCharges
WHERE Exception = 0</property>
                        <property
                          dataType="System.String"
                          description="The variable that contains the SQL command to be executed."
                          name="SqlCommandVariable"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">2</property>
                        <property
                          dataType="System.String"
                          description="The mappings between the parameters in the SQL command and variables."
                          name="ParameterMapping"></property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Import Files\Charges\Insert Charges\Get Charges.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[Target - IntegrationMiddleWay]"
                          connectionManagerRefId="Package.ConnectionManagers[Target - IntegrationMiddleWay]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Output]"
                          name="OLE DB Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Output].Columns[StudentID]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Output].ExternalColumns[StudentID]"
                              length="255"
                              lineageId="Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Output].Columns[StudentID]"
                              name="StudentID"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Output].Columns[ISBN]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Output].ExternalColumns[ISBN]"
                              length="255"
                              lineageId="Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Output].Columns[ISBN]"
                              name="ISBN"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Output].Columns[Price]"
                              dataType="cy"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Output].ExternalColumns[Price]"
                              lineageId="Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Output].Columns[Price]"
                              name="Price"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Output].Columns[LastModifiedDate]"
                              dataType="dbTimeStamp"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Output].ExternalColumns[LastModifiedDate]"
                              lineageId="Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Output].Columns[LastModifiedDate]"
                              name="LastModifiedDate"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Output].Columns[CreateDate]"
                              dataType="dbTimeStamp"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Output].ExternalColumns[CreateDate]"
                              lineageId="Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Output].Columns[CreateDate]"
                              name="CreateDate"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Output].Columns[UniversalID]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Output].ExternalColumns[UniversalID]"
                              length="255"
                              lineageId="Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Output].Columns[UniversalID]"
                              name="UniversalID"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Output].Columns[ChargeDesc]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Output].ExternalColumns[ChargeDesc]"
                              length="1"
                              lineageId="Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Output].Columns[ChargeDesc]"
                              name="ChargeDesc"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Output].Columns[SiteID]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Output].ExternalColumns[SiteID]"
                              length="50"
                              lineageId="Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Output].Columns[SiteID]"
                              name="SiteID"
                              truncationRowDisposition="FailComponent" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Output].ExternalColumns[StudentID]"
                              dataType="wstr"
                              length="255"
                              name="StudentID" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Output].ExternalColumns[ISBN]"
                              dataType="wstr"
                              length="255"
                              name="ISBN" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Output].ExternalColumns[Price]"
                              dataType="cy"
                              name="Price" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Output].ExternalColumns[LastModifiedDate]"
                              dataType="dbTimeStamp"
                              name="LastModifiedDate" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Output].ExternalColumns[CreateDate]"
                              dataType="dbTimeStamp"
                              name="CreateDate" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Output].ExternalColumns[UniversalID]"
                              dataType="wstr"
                              length="255"
                              name="UniversalID" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Output].ExternalColumns[ChargeDesc]"
                              codePage="1252"
                              dataType="str"
                              length="1"
                              name="ChargeDesc" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Output].ExternalColumns[SiteID]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="SiteID" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Error Output]"
                          isErrorOut="true"
                          name="OLE DB Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Error Output].Columns[StudentID]"
                              dataType="wstr"
                              length="255"
                              lineageId="Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Error Output].Columns[StudentID]"
                              name="StudentID" />
                            <outputColumn
                              refId="Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Error Output].Columns[UniversalID]"
                              dataType="wstr"
                              length="255"
                              lineageId="Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Error Output].Columns[UniversalID]"
                              name="UniversalID" />
                            <outputColumn
                              refId="Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Error Output].Columns[ISBN]"
                              dataType="wstr"
                              length="255"
                              lineageId="Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Error Output].Columns[ISBN]"
                              name="ISBN" />
                            <outputColumn
                              refId="Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Error Output].Columns[CreateDate]"
                              dataType="dbTimeStamp"
                              lineageId="Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Error Output].Columns[CreateDate]"
                              name="CreateDate" />
                            <outputColumn
                              refId="Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Error Output].Columns[Price]"
                              dataType="cy"
                              lineageId="Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Error Output].Columns[Price]"
                              name="Price" />
                            <outputColumn
                              refId="Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Error Output].Columns[LastModifiedDate]"
                              dataType="dbTimeStamp"
                              lineageId="Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Error Output].Columns[LastModifiedDate]"
                              name="LastModifiedDate" />
                            <outputColumn
                              refId="Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Error Output].Columns[ChargeDesc]"
                              codePage="1252"
                              dataType="str"
                              length="1"
                              lineageId="Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Error Output].Columns[ChargeDesc]"
                              name="ChargeDesc" />
                            <outputColumn
                              refId="Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Error Output].Columns[SiteID]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Error Output].Columns[SiteID]"
                              name="SiteID" />
                            <outputColumn
                              refId="Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Import Files\Charges\Insert Charges\Insert Charge"
                      componentClassID="Microsoft.OLEDBDestination"
                      contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                      description="OLE DB Destination"
                      name="Insert Charge"
                      usesDispositions="true"
                      version="4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[dbo].[tblUnvCharges]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepIdentity">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                          name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                          name="FastLoadMaxInsertCommitSize">2147483647</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Import Files\Charges\Insert Charges\Insert Charge.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[Target - TIPWeb]"
                          connectionManagerRefId="Package.ConnectionManagers[Target - TIPWeb]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Import Files\Charges\Insert Charges\Insert Charge.Inputs[OLE DB Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Import Files\Charges\Insert Charges\Insert Charge.Inputs[OLE DB Destination Input].Columns[LastModifiedDate]"
                              cachedDataType="dbTimeStamp"
                              cachedName="LastModifiedDate"
                              externalMetadataColumnId="Package\Import Files\Charges\Insert Charges\Insert Charge.Inputs[OLE DB Destination Input].ExternalColumns[LastModifiedDate]"
                              lineageId="Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Output].Columns[LastModifiedDate]" />
                            <inputColumn
                              refId="Package\Import Files\Charges\Insert Charges\Insert Charge.Inputs[OLE DB Destination Input].Columns[ItemUID]"
                              cachedDataType="i4"
                              cachedName="ItemUID"
                              externalMetadataColumnId="Package\Import Files\Charges\Insert Charges\Insert Charge.Inputs[OLE DB Destination Input].ExternalColumns[ItemUID]"
                              lineageId="Package\Import Files\Charges\Insert Charges\Lookup ISBN.Outputs[Lookup Match Output].Columns[ItemUID]" />
                            <inputColumn
                              refId="Package\Import Files\Charges\Insert Charges\Insert Charge.Inputs[OLE DB Destination Input].Columns[ItemTypeUID]"
                              cachedDataType="i4"
                              cachedName="ItemTypeUID"
                              externalMetadataColumnId="Package\Import Files\Charges\Insert Charges\Insert Charge.Inputs[OLE DB Destination Input].ExternalColumns[ItemTypeUID]"
                              lineageId="Package\Import Files\Charges\Insert Charges\Defaults.Outputs[Derived Column Output].Columns[ItemTypeUID]" />
                            <inputColumn
                              refId="Package\Import Files\Charges\Insert Charges\Insert Charge.Inputs[OLE DB Destination Input].Columns[ChargeTypeUID]"
                              cachedDataType="i4"
                              cachedName="ChargeTypeUID"
                              externalMetadataColumnId="Package\Import Files\Charges\Insert Charges\Insert Charge.Inputs[OLE DB Destination Input].ExternalColumns[ChargeTypeUID]"
                              lineageId="Package\Import Files\Charges\Insert Charges\Defaults.Outputs[Derived Column Output].Columns[ChargeTypeUID]" />
                            <inputColumn
                              refId="Package\Import Files\Charges\Insert Charges\Insert Charge.Inputs[OLE DB Destination Input].Columns[CreatedbyUserID]"
                              cachedDataType="i4"
                              cachedName="CreatedbyUserID"
                              externalMetadataColumnId="Package\Import Files\Charges\Insert Charges\Insert Charge.Inputs[OLE DB Destination Input].ExternalColumns[CreatedByUserID]"
                              lineageId="Package\Import Files\Charges\Insert Charges\Defaults.Outputs[Derived Column Output].Columns[CreatedbyUserID]" />
                            <inputColumn
                              refId="Package\Import Files\Charges\Insert Charges\Insert Charge.Inputs[OLE DB Destination Input].Columns[ApplicationUID]"
                              cachedDataType="i4"
                              cachedName="ApplicationUID"
                              externalMetadataColumnId="Package\Import Files\Charges\Insert Charges\Insert Charge.Inputs[OLE DB Destination Input].ExternalColumns[ApplicationUID]"
                              lineageId="Package\Import Files\Charges\Insert Charges\Defaults.Outputs[Derived Column Output].Columns[ApplicationUID]" />
                            <inputColumn
                              refId="Package\Import Files\Charges\Insert Charges\Insert Charge.Inputs[OLE DB Destination Input].Columns[StudentsUID]"
                              cachedDataType="i4"
                              cachedName="StudentsUID"
                              externalMetadataColumnId="Package\Import Files\Charges\Insert Charges\Insert Charge.Inputs[OLE DB Destination Input].ExternalColumns[EntityUID]"
                              lineageId="Package\Import Files\Charges\Insert Charges\StudentID Exists.Outputs[Lookup Match Output].Columns[StudentsUID]" />
                            <inputColumn
                              refId="Package\Import Files\Charges\Insert Charges\Insert Charge.Inputs[OLE DB Destination Input].Columns[Price]"
                              cachedDataType="cy"
                              cachedName="Price"
                              externalMetadataColumnId="Package\Import Files\Charges\Insert Charges\Insert Charge.Inputs[OLE DB Destination Input].ExternalColumns[ChargeAmount]"
                              lineageId="Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Output].Columns[Price]" />
                            <inputColumn
                              refId="Package\Import Files\Charges\Insert Charges\Insert Charge.Inputs[OLE DB Destination Input].Columns[LastModfiedUserID]"
                              cachedDataType="i4"
                              cachedName="LastModfiedUserID"
                              externalMetadataColumnId="Package\Import Files\Charges\Insert Charges\Insert Charge.Inputs[OLE DB Destination Input].ExternalColumns[LastModifiedByUserID]"
                              lineageId="Package\Import Files\Charges\Insert Charges\Defaults.Outputs[Derived Column Output].Columns[LastModfiedUserID]" />
                            <inputColumn
                              refId="Package\Import Files\Charges\Insert Charges\Insert Charge.Inputs[OLE DB Destination Input].Columns[EntityTypeUID]"
                              cachedDataType="i4"
                              cachedName="EntityTypeUID"
                              externalMetadataColumnId="Package\Import Files\Charges\Insert Charges\Insert Charge.Inputs[OLE DB Destination Input].ExternalColumns[EntityTypeUID]"
                              lineageId="Package\Import Files\Charges\Insert Charges\Defaults.Outputs[Derived Column Output].Columns[EntityTypeUID]" />
                            <inputColumn
                              refId="Package\Import Files\Charges\Insert Charges\Insert Charge.Inputs[OLE DB Destination Input].Columns[CreateDate]"
                              cachedDataType="dbTimeStamp"
                              cachedName="CreateDate"
                              externalMetadataColumnId="Package\Import Files\Charges\Insert Charges\Insert Charge.Inputs[OLE DB Destination Input].ExternalColumns[CreatedDate]"
                              lineageId="Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Output].Columns[CreateDate]" />
                            <inputColumn
                              refId="Package\Import Files\Charges\Insert Charges\Insert Charge.Inputs[OLE DB Destination Input].Columns[DC.UniversalID]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="255"
                              cachedName="DC.UniversalID"
                              externalMetadataColumnId="Package\Import Files\Charges\Insert Charges\Insert Charge.Inputs[OLE DB Destination Input].ExternalColumns[UniversalID]"
                              lineageId="Package\Import Files\Charges\Insert Charges\Data Conversion.Outputs[Data Conversion Output].Columns[DC.UniversalID]" />
                            <inputColumn
                              refId="Package\Import Files\Charges\Insert Charges\Insert Charge.Inputs[OLE DB Destination Input].Columns[ChargeNotes]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="ChargeNotes"
                              externalMetadataColumnId="Package\Import Files\Charges\Insert Charges\Insert Charge.Inputs[OLE DB Destination Input].ExternalColumns[Notes]"
                              lineageId="Package\Import Files\Charges\Insert Charges\Defaults.Outputs[Derived Column Output].Columns[ChargeNotes]" />
                            <inputColumn
                              refId="Package\Import Files\Charges\Insert Charges\Insert Charge.Inputs[OLE DB Destination Input].Columns[ChargeDesc]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="1"
                              cachedName="ChargeDesc"
                              externalMetadataColumnId="Package\Import Files\Charges\Insert Charges\Insert Charge.Inputs[OLE DB Destination Input].ExternalColumns[Description]"
                              lineageId="Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Output].Columns[ChargeDesc]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Import Files\Charges\Insert Charges\Insert Charge.Inputs[OLE DB Destination Input].ExternalColumns[ChargeUID]"
                              dataType="i4"
                              name="ChargeUID" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Charges\Insert Charges\Insert Charge.Inputs[OLE DB Destination Input].ExternalColumns[ChargeTypeUID]"
                              dataType="i4"
                              name="ChargeTypeUID" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Charges\Insert Charges\Insert Charge.Inputs[OLE DB Destination Input].ExternalColumns[EntityUID]"
                              dataType="i4"
                              name="EntityUID" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Charges\Insert Charges\Insert Charge.Inputs[OLE DB Destination Input].ExternalColumns[EntityTypeUID]"
                              dataType="i4"
                              name="EntityTypeUID" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Charges\Insert Charges\Insert Charge.Inputs[OLE DB Destination Input].ExternalColumns[ChargeSiteUID]"
                              dataType="i4"
                              name="ChargeSiteUID" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Charges\Insert Charges\Insert Charge.Inputs[OLE DB Destination Input].ExternalColumns[ChargeAmount]"
                              dataType="cy"
                              name="ChargeAmount" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Charges\Insert Charges\Insert Charge.Inputs[OLE DB Destination Input].ExternalColumns[Void]"
                              dataType="bool"
                              name="Void" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Charges\Insert Charges\Insert Charge.Inputs[OLE DB Destination Input].ExternalColumns[Description]"
                              codePage="1252"
                              dataType="text"
                              name="Description" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Charges\Insert Charges\Insert Charge.Inputs[OLE DB Destination Input].ExternalColumns[Notes]"
                              codePage="1252"
                              dataType="text"
                              name="Notes" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Charges\Insert Charges\Insert Charge.Inputs[OLE DB Destination Input].ExternalColumns[UniversalID]"
                              codePage="1252"
                              dataType="str"
                              length="150"
                              name="UniversalID" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Charges\Insert Charges\Insert Charge.Inputs[OLE DB Destination Input].ExternalColumns[ItemUID]"
                              dataType="i4"
                              name="ItemUID" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Charges\Insert Charges\Insert Charge.Inputs[OLE DB Destination Input].ExternalColumns[ItemTypeUID]"
                              dataType="i4"
                              name="ItemTypeUID" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Charges\Insert Charges\Insert Charge.Inputs[OLE DB Destination Input].ExternalColumns[DateSatisfied]"
                              dataType="dbTimeStamp"
                              name="DateSatisfied" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Charges\Insert Charges\Insert Charge.Inputs[OLE DB Destination Input].ExternalColumns[ApplicationUID]"
                              dataType="i4"
                              name="ApplicationUID" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Charges\Insert Charges\Insert Charge.Inputs[OLE DB Destination Input].ExternalColumns[CreatedByUserID]"
                              dataType="i4"
                              name="CreatedByUserID" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Charges\Insert Charges\Insert Charge.Inputs[OLE DB Destination Input].ExternalColumns[CreatedDate]"
                              dataType="dbTimeStamp"
                              name="CreatedDate" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Charges\Insert Charges\Insert Charge.Inputs[OLE DB Destination Input].ExternalColumns[LastModifiedByUserID]"
                              dataType="i4"
                              name="LastModifiedByUserID" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Charges\Insert Charges\Insert Charge.Inputs[OLE DB Destination Input].ExternalColumns[LastModifiedDate]"
                              dataType="dbTimeStamp"
                              name="LastModifiedDate" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Import Files\Charges\Insert Charges\Insert Charge.Outputs[OLE DB Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Destination Error Output"
                          synchronousInputId="Package\Import Files\Charges\Insert Charges\Insert Charge.Inputs[OLE DB Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Import Files\Charges\Insert Charges\Insert Charge.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Import Files\Charges\Insert Charges\Insert Charge.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Import Files\Charges\Insert Charges\Insert Charge.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Import Files\Charges\Insert Charges\Insert Charge.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Import Files\Charges\Insert Charges\Lookup ISBN"
                      componentClassID="Microsoft.Lookup"
                      contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                      description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                      name="Lookup ISBN"
                      usesDispositions="true"
                      version="6">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the SQL statement that generates the lookup table."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[tblBookInventory]</property>
                        <property
                          dataType="System.String"
                          description="Specifies a SQL statement that uses parameters to generate the lookup table."
                          expressionType="Notify"
                          name="SqlCommandParam"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[tblBookInventory]) [refTable]
where [refTable].[ISBN] = ?</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of connection used to access the reference dataset."
                          name="ConnectionType"
                          typeConverter="LookupConnectionType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the cache type of the lookup table."
                          name="CacheType"
                          typeConverter="CacheType">2</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                          name="NoMatchBehavior"
                          typeConverter="LookupNoMatchBehavior">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                          name="NoMatchCachePercentage">0</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                          name="MaxMemoryUsage">25</property>
                        <property
                          dataType="System.Int64"
                          description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                          name="MaxMemoryUsage64">25</property>
                        <property
                          dataType="System.String"
                          description="Indicates whether to reference metadata in an XML format."
                          name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ISBN" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="SLC" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="GroupCode" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Title" dataType="DT_STR" length="1000" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Price" dataType="DT_CY" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Publisher" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Grade" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Adopt" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="DistReqCode" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Expire" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Copyright" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="SetISBN" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="BookSet" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="LeftInStorage" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="DistrictOnOrder" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="StateOnOrder" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="OnOrder" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ShowOnReports" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="BinID" dataType="DT_STR" length="100" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="UserID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ModifiedDate" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="CampusAdded" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Notes" dataType="DT_STR" length="6000" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="UDF" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Active" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="BookInventoryUID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="CreatedDate" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                          name="ParameterMap">#{Package\Import Files\Charges\Insert Charges\Data Conversion.Outputs[Data Conversion Output].Columns[DC.ISBN]};</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                          name="TreatDuplicateKeysAsError">false</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Import Files\Charges\Insert Charges\Lookup ISBN.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[Target - TIPWeb]"
                          connectionManagerRefId="Package.ConnectionManagers[Target - TIPWeb]"
                          description="Connection manager used to access lookup data."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Import Files\Charges\Insert Charges\Lookup ISBN.Inputs[Lookup Input]"
                          name="Lookup Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Import Files\Charges\Insert Charges\Lookup ISBN.Inputs[Lookup Input].Columns[DC.ISBN]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="255"
                              cachedName="DC.ISBN"
                              lineageId="Package\Import Files\Charges\Insert Charges\Data Conversion.Outputs[Data Conversion Output].Columns[DC.ISBN]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table that a column joins."
                                  name="JoinToReferenceColumn">ISBN</property>
                                <property
                                  dataType="System.Null"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn" />
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Import Files\Charges\Insert Charges\Lookup ISBN.Outputs[Lookup Match Output]"
                          errorOrTruncationOperation="Lookup"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="Lookup Match Output"
                          synchronousInputId="Package\Import Files\Charges\Insert Charges\Lookup ISBN.Inputs[Lookup Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Import Files\Charges\Insert Charges\Lookup ISBN.Outputs[Lookup Match Output].Columns[ItemUID]"
                              dataType="i4"
                              errorOrTruncationOperation="Copy Column"
                              lineageId="Package\Import Files\Charges\Insert Charges\Lookup ISBN.Outputs[Lookup Match Output].Columns[ItemUID]"
                              name="ItemUID"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn">BookInventoryUID</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Import Files\Charges\Insert Charges\Lookup ISBN.Outputs[Lookup No Match Output]"
                          description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                          exclusionGroup="1"
                          name="Lookup No Match Output"
                          synchronousInputId="Package\Import Files\Charges\Insert Charges\Lookup ISBN.Inputs[Lookup Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Import Files\Charges\Insert Charges\Lookup ISBN.Outputs[Lookup Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Lookup Error Output"
                          synchronousInputId="Package\Import Files\Charges\Insert Charges\Lookup ISBN.Inputs[Lookup Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Import Files\Charges\Insert Charges\Lookup ISBN.Outputs[Lookup Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Import Files\Charges\Insert Charges\Lookup ISBN.Outputs[Lookup Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Import Files\Charges\Insert Charges\Lookup ISBN.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Import Files\Charges\Insert Charges\Lookup ISBN.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Import Files\Charges\Insert Charges\StudentID Exists"
                      componentClassID="Microsoft.Lookup"
                      contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                      description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                      name="StudentID Exists"
                      usesDispositions="true"
                      version="6">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the SQL statement that generates the lookup table."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT StudentID
,StudentsUID,CampusID FROM tblStudents
WHERE Status = 1</property>
                        <property
                          dataType="System.String"
                          description="Specifies a SQL statement that uses parameters to generate the lookup table."
                          expressionType="Notify"
                          name="SqlCommandParam"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (SELECT StudentID
,StudentsUID,CampusID FROM tblStudents
WHERE Status = 1) [refTable]
where [refTable].[CampusID] = ? and [refTable].[StudentID] = ?</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of connection used to access the reference dataset."
                          name="ConnectionType"
                          typeConverter="LookupConnectionType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the cache type of the lookup table."
                          name="CacheType"
                          typeConverter="CacheType">2</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                          name="NoMatchBehavior"
                          typeConverter="LookupNoMatchBehavior">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                          name="NoMatchCachePercentage">0</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                          name="MaxMemoryUsage">25</property>
                        <property
                          dataType="System.Int64"
                          description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                          name="MaxMemoryUsage64">25</property>
                        <property
                          dataType="System.String"
                          description="Indicates whether to reference metadata in an XML format."
                          name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="StudentID" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="StudentsUID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="CampusID" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                          name="ParameterMap">#{Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Output].Columns[SiteID]};#{Package\Import Files\Charges\Insert Charges\Data Conversion.Outputs[Data Conversion Output].Columns[DC.StudentID]};</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                          name="TreatDuplicateKeysAsError">false</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Import Files\Charges\Insert Charges\StudentID Exists.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[Target - TIPWeb]"
                          connectionManagerRefId="Package.ConnectionManagers[Target - TIPWeb]"
                          description="Connection manager used to access lookup data."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Import Files\Charges\Insert Charges\StudentID Exists.Inputs[Lookup Input]"
                          name="Lookup Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Import Files\Charges\Insert Charges\StudentID Exists.Inputs[Lookup Input].Columns[DC.StudentID]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="255"
                              cachedName="DC.StudentID"
                              lineageId="Package\Import Files\Charges\Insert Charges\Data Conversion.Outputs[Data Conversion Output].Columns[DC.StudentID]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table that a column joins."
                                  name="JoinToReferenceColumn">StudentID</property>
                                <property
                                  dataType="System.Null"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn" />
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Import Files\Charges\Insert Charges\StudentID Exists.Inputs[Lookup Input].Columns[SiteID]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="SiteID"
                              lineageId="Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Output].Columns[SiteID]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table that a column joins."
                                  name="JoinToReferenceColumn">CampusID</property>
                                <property
                                  dataType="System.Null"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn" />
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Import Files\Charges\Insert Charges\StudentID Exists.Outputs[Lookup Match Output]"
                          errorOrTruncationOperation="Lookup"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="Lookup Match Output"
                          synchronousInputId="Package\Import Files\Charges\Insert Charges\StudentID Exists.Inputs[Lookup Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Import Files\Charges\Insert Charges\StudentID Exists.Outputs[Lookup Match Output].Columns[StudentsUID]"
                              dataType="i4"
                              errorOrTruncationOperation="Copy Column"
                              lineageId="Package\Import Files\Charges\Insert Charges\StudentID Exists.Outputs[Lookup Match Output].Columns[StudentsUID]"
                              name="StudentsUID"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn">StudentsUID</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Import Files\Charges\Insert Charges\StudentID Exists.Outputs[Lookup No Match Output]"
                          description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                          exclusionGroup="1"
                          name="Lookup No Match Output"
                          synchronousInputId="Package\Import Files\Charges\Insert Charges\StudentID Exists.Inputs[Lookup Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Import Files\Charges\Insert Charges\StudentID Exists.Outputs[Lookup Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Lookup Error Output"
                          synchronousInputId="Package\Import Files\Charges\Insert Charges\StudentID Exists.Inputs[Lookup Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Import Files\Charges\Insert Charges\StudentID Exists.Outputs[Lookup Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Import Files\Charges\Insert Charges\StudentID Exists.Outputs[Lookup Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Import Files\Charges\Insert Charges\StudentID Exists.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Import Files\Charges\Insert Charges\StudentID Exists.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Import Files\Charges\Insert Charges.Paths[Data Conversion Output]"
                      endId="Package\Import Files\Charges\Insert Charges\StudentID Exists.Inputs[Lookup Input]"
                      name="Data Conversion Output"
                      startId="Package\Import Files\Charges\Insert Charges\Data Conversion.Outputs[Data Conversion Output]" />
                    <path
                      refId="Package\Import Files\Charges\Insert Charges.Paths[Derived Column Output]"
                      endId="Package\Import Files\Charges\Insert Charges\Charge Exists.Inputs[Lookup Input]"
                      name="Derived Column Output"
                      startId="Package\Import Files\Charges\Insert Charges\Defaults.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\Import Files\Charges\Insert Charges.Paths[Lookup Match Output]"
                      endId="Package\Import Files\Charges\Insert Charges\Lookup ISBN.Inputs[Lookup Input]"
                      name="Lookup Match Output"
                      startId="Package\Import Files\Charges\Insert Charges\StudentID Exists.Outputs[Lookup Match Output]" />
                    <path
                      refId="Package\Import Files\Charges\Insert Charges.Paths[Lookup Match Output1]"
                      endId="Package\Import Files\Charges\Insert Charges\Defaults.Inputs[Derived Column Input]"
                      name="Lookup Match Output"
                      startId="Package\Import Files\Charges\Insert Charges\Lookup ISBN.Outputs[Lookup Match Output]" />
                    <path
                      refId="Package\Import Files\Charges\Insert Charges.Paths[Lookup No Match Output]"
                      endId="Package\Import Files\Charges\Insert Charges\Insert Charge.Inputs[OLE DB Destination Input]"
                      name="Lookup No Match Output"
                      startId="Package\Import Files\Charges\Insert Charges\Charge Exists.Outputs[Lookup No Match Output]" />
                    <path
                      refId="Package\Import Files\Charges\Insert Charges.Paths[OLE DB Source Output]"
                      endId="Package\Import Files\Charges\Insert Charges\Data Conversion.Inputs[Data Conversion Input]"
                      name="OLE DB Source Output"
                      startId="Package\Import Files\Charges\Insert Charges\Get Charges.Outputs[OLE DB Source Output]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Import Files\Charges\Total Exceptions"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{6386833C-B87B-46A5-86B8-E3BF393F0454}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Total Exceptions"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{3B254E45-1603-4464-B6B4-A3EBA7FA80E1}"
                  SQLTask:SqlStatementSource="SELECT COUNT(*) AS TotalExceptions&#xA;FROM Onetime.StagingIMCharges&#xA;WHERE Exception = 1"
                  SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ResultBinding
                    SQLTask:ResultName="TotalExceptions"
                    SQLTask:DtsVariableName="User::TotalExceptions" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Import Files\Charges.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{869B2756-63D1-469B-AEEC-8F9AD1A1BB97}"
              DTS:From="Package\Import Files\Charges\Insert Charges"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Import Files\Charges\Total Exceptions" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Import Files\Charges.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{EF27C55B-A896-4E41-8C8E-CDA5DFAFCE2C}"
              DTS:EvalOp="3"
              DTS:Expression="@[User::TotalExceptions] &gt; 0"
              DTS:From="Package\Import Files\Charges\Total Exceptions"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\Import Files\Charges\Exceptions" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Import Files\Exceptions"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{6F8232C9-DD83-49AE-AA89-034155697086}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Exceptions">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Import Files\Exceptions\AssessionID"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{b2772e80-ae57-42c3-ac1c-0851db26722e}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="AssessionID"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\Import Files\Exceptions\AssessionID\Accession"
                      componentClassID="Microsoft.OLEDBSource"
                      contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                      description="OLE DB Source"
                      name="Accession"
                      usesDispositions="true"
                      version="7">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset"></property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT DISTINCT CAST(Accession AS VARCHAR(50)) AS AccessionID, CAST(StudentID AS VARCHAR(50)) AS StudentID,SiteID
FROM OneTime.StagingIMCharges</property>
                        <property
                          dataType="System.String"
                          description="The variable that contains the SQL command to be executed."
                          name="SqlCommandVariable"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">2</property>
                        <property
                          dataType="System.String"
                          description="The mappings between the parameters in the SQL command and variables."
                          name="ParameterMapping"></property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Import Files\Exceptions\AssessionID\Accession.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[Target - IntegrationMiddleWay]"
                          connectionManagerRefId="Package.ConnectionManagers[Target - IntegrationMiddleWay]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Import Files\Exceptions\AssessionID\Accession.Outputs[OLE DB Source Output]"
                          name="OLE DB Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Import Files\Exceptions\AssessionID\Accession.Outputs[OLE DB Source Output].Columns[AccessionID]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Import Files\Exceptions\AssessionID\Accession.Outputs[OLE DB Source Output].ExternalColumns[AccessionID]"
                              length="50"
                              lineageId="Package\Import Files\Exceptions\AssessionID\Accession.Outputs[OLE DB Source Output].Columns[AccessionID]"
                              name="AccessionID"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Import Files\Exceptions\AssessionID\Accession.Outputs[OLE DB Source Output].Columns[StudentID]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Import Files\Exceptions\AssessionID\Accession.Outputs[OLE DB Source Output].ExternalColumns[StudentID]"
                              length="50"
                              lineageId="Package\Import Files\Exceptions\AssessionID\Accession.Outputs[OLE DB Source Output].Columns[StudentID]"
                              name="StudentID"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Import Files\Exceptions\AssessionID\Accession.Outputs[OLE DB Source Output].Columns[SiteID]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Import Files\Exceptions\AssessionID\Accession.Outputs[OLE DB Source Output].ExternalColumns[SiteID]"
                              length="50"
                              lineageId="Package\Import Files\Exceptions\AssessionID\Accession.Outputs[OLE DB Source Output].Columns[SiteID]"
                              name="SiteID"
                              truncationRowDisposition="FailComponent" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Import Files\Exceptions\AssessionID\Accession.Outputs[OLE DB Source Output].ExternalColumns[AccessionID]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="AccessionID" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Exceptions\AssessionID\Accession.Outputs[OLE DB Source Output].ExternalColumns[StudentID]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="StudentID" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Exceptions\AssessionID\Accession.Outputs[OLE DB Source Output].ExternalColumns[SiteID]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="SiteID" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Import Files\Exceptions\AssessionID\Accession.Outputs[OLE DB Source Error Output]"
                          isErrorOut="true"
                          name="OLE DB Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Import Files\Exceptions\AssessionID\Accession.Outputs[OLE DB Source Error Output].Columns[AccessionID]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Import Files\Exceptions\AssessionID\Accession.Outputs[OLE DB Source Error Output].Columns[AccessionID]"
                              name="AccessionID" />
                            <outputColumn
                              refId="Package\Import Files\Exceptions\AssessionID\Accession.Outputs[OLE DB Source Error Output].Columns[StudentID]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Import Files\Exceptions\AssessionID\Accession.Outputs[OLE DB Source Error Output].Columns[StudentID]"
                              name="StudentID" />
                            <outputColumn
                              refId="Package\Import Files\Exceptions\AssessionID\Accession.Outputs[OLE DB Source Error Output].Columns[SiteID]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Import Files\Exceptions\AssessionID\Accession.Outputs[OLE DB Source Error Output].Columns[SiteID]"
                              name="SiteID" />
                            <outputColumn
                              refId="Package\Import Files\Exceptions\AssessionID\Accession.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Import Files\Exceptions\AssessionID\Accession.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Import Files\Exceptions\AssessionID\Accession.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Import Files\Exceptions\AssessionID\Accession.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Import Files\Exceptions\AssessionID\Assession Exists"
                      componentClassID="Microsoft.Lookup"
                      contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                      description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                      name="Assession Exists"
                      usesDispositions="true"
                      version="6">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the SQL statement that generates the lookup table."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[tblStudentsDistribution]</property>
                        <property
                          dataType="System.String"
                          description="Specifies a SQL statement that uses parameters to generate the lookup table."
                          expressionType="Notify"
                          name="SqlCommandParam"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[tblStudentsDistribution]) [refTable]
where [refTable].[Accession] = ? and [refTable].[StudentsUID] = ?</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of connection used to access the reference dataset."
                          name="ConnectionType"
                          typeConverter="LookupConnectionType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the cache type of the lookup table."
                          name="CacheType"
                          typeConverter="CacheType">2</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                          name="NoMatchBehavior"
                          typeConverter="LookupNoMatchBehavior">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                          name="NoMatchCachePercentage">0</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                          name="MaxMemoryUsage">25</property>
                        <property
                          dataType="System.Int64"
                          description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                          name="MaxMemoryUsage64">25</property>
                        <property
                          dataType="System.String"
                          description="Indicates whether to reference metadata in an XML format."
                          name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="DistributionID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="StudentsUID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ISBN" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Accession" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Code" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="SourceType" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Source" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Amount" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Copies" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Notes" dataType="DT_STR" length="6000" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="UserID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ModifiedDate" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Reconciled" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Archived" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                          name="ParameterMap">#{Package\Import Files\Exceptions\AssessionID\Accession.Outputs[OLE DB Source Output].Columns[AccessionID]};#{Package\Import Files\Exceptions\AssessionID\StudentID Exists.Outputs[Lookup Match Output].Columns[StudentsUID]};</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                          name="TreatDuplicateKeysAsError">false</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Import Files\Exceptions\AssessionID\Assession Exists.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[Target - TIPWeb]"
                          connectionManagerRefId="Package.ConnectionManagers[Target - TIPWeb]"
                          description="Connection manager used to access lookup data."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Import Files\Exceptions\AssessionID\Assession Exists.Inputs[Lookup Input]"
                          name="Lookup Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Import Files\Exceptions\AssessionID\Assession Exists.Inputs[Lookup Input].Columns[AccessionID]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="AccessionID"
                              lineageId="Package\Import Files\Exceptions\AssessionID\Accession.Outputs[OLE DB Source Output].Columns[AccessionID]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table that a column joins."
                                  name="JoinToReferenceColumn">Accession</property>
                                <property
                                  dataType="System.Null"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn" />
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Import Files\Exceptions\AssessionID\Assession Exists.Inputs[Lookup Input].Columns[StudentsUID]"
                              cachedDataType="i4"
                              cachedName="StudentsUID"
                              lineageId="Package\Import Files\Exceptions\AssessionID\StudentID Exists.Outputs[Lookup Match Output].Columns[StudentsUID]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table that a column joins."
                                  name="JoinToReferenceColumn">StudentsUID</property>
                                <property
                                  dataType="System.Null"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn" />
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Import Files\Exceptions\AssessionID\Assession Exists.Outputs[Lookup Match Output]"
                          errorOrTruncationOperation="Lookup"
                          exclusionGroup="1"
                          name="Lookup Match Output"
                          synchronousInputId="Package\Import Files\Exceptions\AssessionID\Assession Exists.Inputs[Lookup Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Import Files\Exceptions\AssessionID\Assession Exists.Outputs[Lookup No Match Output]"
                          description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                          exclusionGroup="1"
                          name="Lookup No Match Output"
                          synchronousInputId="Package\Import Files\Exceptions\AssessionID\Assession Exists.Inputs[Lookup Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Import Files\Exceptions\AssessionID\Assession Exists.Outputs[Lookup Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Lookup Error Output"
                          synchronousInputId="Package\Import Files\Exceptions\AssessionID\Assession Exists.Inputs[Lookup Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Import Files\Exceptions\AssessionID\Assession Exists.Outputs[Lookup Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Import Files\Exceptions\AssessionID\Assession Exists.Outputs[Lookup Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Import Files\Exceptions\AssessionID\Assession Exists.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Import Files\Exceptions\AssessionID\Assession Exists.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Import Files\Exceptions\AssessionID\Data Conversion"
                      componentClassID="Microsoft.DataConvert"
                      contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Data Conversion"
                      name="Data Conversion"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Import Files\Exceptions\AssessionID\Data Conversion.Inputs[Data Conversion Input]"
                          name="Data Conversion Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Import Files\Exceptions\AssessionID\Data Conversion.Inputs[Data Conversion Input].Columns[ExceptionColumnName]"
                              cachedDataType="wstr"
                              cachedLength="9"
                              cachedName="ExceptionColumnName"
                              lineageId="Package\Import Files\Exceptions\AssessionID\Defaults.Outputs[Derived Column Output].Columns[ExceptionColumnName]" />
                            <inputColumn
                              refId="Package\Import Files\Exceptions\AssessionID\Data Conversion.Inputs[Data Conversion Input].Columns[CustomerCode]"
                              cachedDataType="wstr"
                              cachedLength="3"
                              cachedName="CustomerCode"
                              lineageId="Package\Import Files\Exceptions\AssessionID\Defaults.Outputs[Derived Column Output].Columns[CustomerCode]" />
                            <inputColumn
                              refId="Package\Import Files\Exceptions\AssessionID\Data Conversion.Inputs[Data Conversion Input].Columns[ExceptionRefColumnName]"
                              cachedDataType="wstr"
                              cachedLength="9"
                              cachedName="ExceptionRefColumnName"
                              lineageId="Package\Import Files\Exceptions\AssessionID\Defaults.Outputs[Derived Column Output].Columns[ExceptionRefColumnName]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Import Files\Exceptions\AssessionID\Data Conversion.Outputs[Data Conversion Output]"
                          exclusionGroup="1"
                          name="Data Conversion Output"
                          synchronousInputId="Package\Import Files\Exceptions\AssessionID\Data Conversion.Inputs[Data Conversion Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Import Files\Exceptions\AssessionID\Data Conversion.Outputs[Data Conversion Output].Columns[DC.ExceptionColumnName]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              length="50"
                              lineageId="Package\Import Files\Exceptions\AssessionID\Data Conversion.Outputs[Data Conversion Output].Columns[DC.ExceptionColumnName]"
                              name="DC.ExceptionColumnName"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Import Files\Exceptions\AssessionID\Defaults.Outputs[Derived Column Output].Columns[ExceptionColumnName]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Import Files\Exceptions\AssessionID\Data Conversion.Outputs[Data Conversion Output].Columns[DC.CustomerCode]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              length="50"
                              lineageId="Package\Import Files\Exceptions\AssessionID\Data Conversion.Outputs[Data Conversion Output].Columns[DC.CustomerCode]"
                              name="DC.CustomerCode"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Import Files\Exceptions\AssessionID\Defaults.Outputs[Derived Column Output].Columns[CustomerCode]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Import Files\Exceptions\AssessionID\Data Conversion.Outputs[Data Conversion Output].Columns[DC.ExceptionRefColumnName]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              length="50"
                              lineageId="Package\Import Files\Exceptions\AssessionID\Data Conversion.Outputs[Data Conversion Output].Columns[DC.ExceptionRefColumnName]"
                              name="DC.ExceptionRefColumnName"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Import Files\Exceptions\AssessionID\Defaults.Outputs[Derived Column Output].Columns[ExceptionRefColumnName]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Import Files\Exceptions\AssessionID\Data Conversion.Outputs[Data Conversion Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Data Conversion Error Output"
                          synchronousInputId="Package\Import Files\Exceptions\AssessionID\Data Conversion.Inputs[Data Conversion Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Import Files\Exceptions\AssessionID\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Import Files\Exceptions\AssessionID\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Import Files\Exceptions\AssessionID\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Import Files\Exceptions\AssessionID\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Import Files\Exceptions\AssessionID\Defaults"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Defaults"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Import Files\Exceptions\AssessionID\Defaults.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Import Files\Exceptions\AssessionID\Defaults.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\Import Files\Exceptions\AssessionID\Defaults.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Import Files\Exceptions\AssessionID\Defaults.Outputs[Derived Column Output].Columns[ExceptionColumnName]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="9"
                              lineageId="Package\Import Files\Exceptions\AssessionID\Defaults.Outputs[Derived Column Output].Columns[ExceptionColumnName]"
                              name="ExceptionColumnName"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">"Accession"</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">"Accession"</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Import Files\Exceptions\AssessionID\Defaults.Outputs[Derived Column Output].Columns[CustomerCode]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="3"
                              lineageId="Package\Import Files\Exceptions\AssessionID\Defaults.Outputs[Derived Column Output].Columns[CustomerCode]"
                              name="CustomerCode"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">@[User::CustomerCode]</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">@[User::CustomerCode]</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Import Files\Exceptions\AssessionID\Defaults.Outputs[Derived Column Output].Columns[ExceptionRefColumnName]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="9"
                              lineageId="Package\Import Files\Exceptions\AssessionID\Defaults.Outputs[Derived Column Output].Columns[ExceptionRefColumnName]"
                              name="ExceptionRefColumnName"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">"StudentID"</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">"StudentID"</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Import Files\Exceptions\AssessionID\Defaults.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\Import Files\Exceptions\AssessionID\Defaults.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Import Files\Exceptions\AssessionID\Defaults.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Import Files\Exceptions\AssessionID\Defaults.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Import Files\Exceptions\AssessionID\Defaults.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Import Files\Exceptions\AssessionID\Defaults.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Import Files\Exceptions\AssessionID\Insert Exceptions"
                      componentClassID="Microsoft.OLEDBDestination"
                      contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                      description="OLE DB Destination"
                      name="Insert Exceptions"
                      usesDispositions="true"
                      version="4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[OneTime].[StagingIMChargesExceptions]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepIdentity">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                          name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                          name="FastLoadMaxInsertCommitSize">2147483647</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Import Files\Exceptions\AssessionID\Insert Exceptions.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[Target - IntegrationMiddleWay]"
                          connectionManagerRefId="Package.ConnectionManagers[Target - IntegrationMiddleWay]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Import Files\Exceptions\AssessionID\Insert Exceptions.Inputs[OLE DB Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Import Files\Exceptions\AssessionID\Insert Exceptions.Inputs[OLE DB Destination Input].Columns[DC.ExceptionColumnName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="DC.ExceptionColumnName"
                              externalMetadataColumnId="Package\Import Files\Exceptions\AssessionID\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[ExceptionColumn]"
                              lineageId="Package\Import Files\Exceptions\AssessionID\Data Conversion.Outputs[Data Conversion Output].Columns[DC.ExceptionColumnName]" />
                            <inputColumn
                              refId="Package\Import Files\Exceptions\AssessionID\Insert Exceptions.Inputs[OLE DB Destination Input].Columns[DC.CustomerCode]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="DC.CustomerCode"
                              externalMetadataColumnId="Package\Import Files\Exceptions\AssessionID\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[CustomerCode]"
                              lineageId="Package\Import Files\Exceptions\AssessionID\Data Conversion.Outputs[Data Conversion Output].Columns[DC.CustomerCode]" />
                            <inputColumn
                              refId="Package\Import Files\Exceptions\AssessionID\Insert Exceptions.Inputs[OLE DB Destination Input].Columns[AccessionID]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="AccessionID"
                              externalMetadataColumnId="Package\Import Files\Exceptions\AssessionID\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[ExceptionValue]"
                              lineageId="Package\Import Files\Exceptions\AssessionID\Accession.Outputs[OLE DB Source Output].Columns[AccessionID]" />
                            <inputColumn
                              refId="Package\Import Files\Exceptions\AssessionID\Insert Exceptions.Inputs[OLE DB Destination Input].Columns[DC.ExceptionRefColumnName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="DC.ExceptionRefColumnName"
                              externalMetadataColumnId="Package\Import Files\Exceptions\AssessionID\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[ExceptionRefColumn]"
                              lineageId="Package\Import Files\Exceptions\AssessionID\Data Conversion.Outputs[Data Conversion Output].Columns[DC.ExceptionRefColumnName]" />
                            <inputColumn
                              refId="Package\Import Files\Exceptions\AssessionID\Insert Exceptions.Inputs[OLE DB Destination Input].Columns[StudentID]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="StudentID"
                              externalMetadataColumnId="Package\Import Files\Exceptions\AssessionID\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[ExceptionRefValue]"
                              lineageId="Package\Import Files\Exceptions\AssessionID\Accession.Outputs[OLE DB Source Output].Columns[StudentID]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Import Files\Exceptions\AssessionID\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[CustomerCode]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              name="CustomerCode" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Exceptions\AssessionID\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[ExceptionColumn]"
                              codePage="1252"
                              dataType="str"
                              length="255"
                              name="ExceptionColumn" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Exceptions\AssessionID\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[ExceptionRefColumn]"
                              codePage="1252"
                              dataType="str"
                              length="255"
                              name="ExceptionRefColumn" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Exceptions\AssessionID\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[ExceptionValue]"
                              codePage="1252"
                              dataType="str"
                              length="255"
                              name="ExceptionValue" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Exceptions\AssessionID\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[ExceptionRefValue]"
                              codePage="1252"
                              dataType="str"
                              length="255"
                              name="ExceptionRefValue" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Import Files\Exceptions\AssessionID\Insert Exceptions.Outputs[OLE DB Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Destination Error Output"
                          synchronousInputId="Package\Import Files\Exceptions\AssessionID\Insert Exceptions.Inputs[OLE DB Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Import Files\Exceptions\AssessionID\Insert Exceptions.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Import Files\Exceptions\AssessionID\Insert Exceptions.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Import Files\Exceptions\AssessionID\Insert Exceptions.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Import Files\Exceptions\AssessionID\Insert Exceptions.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Import Files\Exceptions\AssessionID\StudentID Exists"
                      componentClassID="Microsoft.Lookup"
                      contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                      description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                      name="StudentID Exists"
                      usesDispositions="true"
                      version="6">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the SQL statement that generates the lookup table."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT StudentID
,StudentsUID,CampusID FROM tblStudents
WHERE Status = 1</property>
                        <property
                          dataType="System.String"
                          description="Specifies a SQL statement that uses parameters to generate the lookup table."
                          expressionType="Notify"
                          name="SqlCommandParam"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (SELECT StudentID
,StudentsUID,CampusID FROM tblStudents
WHERE Status = 1) [refTable]
where [refTable].[StudentID] = ? and [refTable].[CampusID] = ?</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of connection used to access the reference dataset."
                          name="ConnectionType"
                          typeConverter="LookupConnectionType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the cache type of the lookup table."
                          name="CacheType"
                          typeConverter="CacheType">2</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                          name="NoMatchBehavior"
                          typeConverter="LookupNoMatchBehavior">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                          name="NoMatchCachePercentage">0</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                          name="MaxMemoryUsage">25</property>
                        <property
                          dataType="System.Int64"
                          description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                          name="MaxMemoryUsage64">25</property>
                        <property
                          dataType="System.String"
                          description="Indicates whether to reference metadata in an XML format."
                          name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="StudentID" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="StudentsUID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="CampusID" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                          name="ParameterMap">#{Package\Import Files\Exceptions\AssessionID\Accession.Outputs[OLE DB Source Output].Columns[StudentID]};#{Package\Import Files\Exceptions\AssessionID\Accession.Outputs[OLE DB Source Output].Columns[SiteID]};</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                          name="TreatDuplicateKeysAsError">false</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Import Files\Exceptions\AssessionID\StudentID Exists.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[Target - TIPWeb]"
                          connectionManagerRefId="Package.ConnectionManagers[Target - TIPWeb]"
                          description="Connection manager used to access lookup data."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Import Files\Exceptions\AssessionID\StudentID Exists.Inputs[Lookup Input]"
                          name="Lookup Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Import Files\Exceptions\AssessionID\StudentID Exists.Inputs[Lookup Input].Columns[StudentID]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="StudentID"
                              lineageId="Package\Import Files\Exceptions\AssessionID\Accession.Outputs[OLE DB Source Output].Columns[StudentID]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table that a column joins."
                                  name="JoinToReferenceColumn">StudentID</property>
                                <property
                                  dataType="System.Null"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn" />
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Import Files\Exceptions\AssessionID\StudentID Exists.Inputs[Lookup Input].Columns[SiteID]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="SiteID"
                              lineageId="Package\Import Files\Exceptions\AssessionID\Accession.Outputs[OLE DB Source Output].Columns[SiteID]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table that a column joins."
                                  name="JoinToReferenceColumn">CampusID</property>
                                <property
                                  dataType="System.Null"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn" />
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Import Files\Exceptions\AssessionID\StudentID Exists.Outputs[Lookup Match Output]"
                          errorOrTruncationOperation="Lookup"
                          exclusionGroup="1"
                          name="Lookup Match Output"
                          synchronousInputId="Package\Import Files\Exceptions\AssessionID\StudentID Exists.Inputs[Lookup Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Import Files\Exceptions\AssessionID\StudentID Exists.Outputs[Lookup Match Output].Columns[StudentsUID]"
                              dataType="i4"
                              errorOrTruncationOperation="Copy Column"
                              lineageId="Package\Import Files\Exceptions\AssessionID\StudentID Exists.Outputs[Lookup Match Output].Columns[StudentsUID]"
                              name="StudentsUID"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn">StudentsUID</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Import Files\Exceptions\AssessionID\StudentID Exists.Outputs[Lookup No Match Output]"
                          description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                          exclusionGroup="1"
                          name="Lookup No Match Output"
                          synchronousInputId="Package\Import Files\Exceptions\AssessionID\StudentID Exists.Inputs[Lookup Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Import Files\Exceptions\AssessionID\StudentID Exists.Outputs[Lookup Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Lookup Error Output"
                          synchronousInputId="Package\Import Files\Exceptions\AssessionID\StudentID Exists.Inputs[Lookup Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Import Files\Exceptions\AssessionID\StudentID Exists.Outputs[Lookup Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Import Files\Exceptions\AssessionID\StudentID Exists.Outputs[Lookup Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Import Files\Exceptions\AssessionID\StudentID Exists.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Import Files\Exceptions\AssessionID\StudentID Exists.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Import Files\Exceptions\AssessionID.Paths[Data Conversion Output]"
                      endId="Package\Import Files\Exceptions\AssessionID\Insert Exceptions.Inputs[OLE DB Destination Input]"
                      name="Data Conversion Output"
                      startId="Package\Import Files\Exceptions\AssessionID\Data Conversion.Outputs[Data Conversion Output]" />
                    <path
                      refId="Package\Import Files\Exceptions\AssessionID.Paths[Derived Column Output]"
                      endId="Package\Import Files\Exceptions\AssessionID\Data Conversion.Inputs[Data Conversion Input]"
                      name="Derived Column Output"
                      startId="Package\Import Files\Exceptions\AssessionID\Defaults.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\Import Files\Exceptions\AssessionID.Paths[Lookup Match Output]"
                      endId="Package\Import Files\Exceptions\AssessionID\Assession Exists.Inputs[Lookup Input]"
                      name="Lookup Match Output"
                      startId="Package\Import Files\Exceptions\AssessionID\StudentID Exists.Outputs[Lookup Match Output]" />
                    <path
                      refId="Package\Import Files\Exceptions\AssessionID.Paths[Lookup No Match Output]"
                      endId="Package\Import Files\Exceptions\AssessionID\Defaults.Inputs[Derived Column Input]"
                      name="Lookup No Match Output"
                      startId="Package\Import Files\Exceptions\AssessionID\Assession Exists.Outputs[Lookup No Match Output]" />
                    <path
                      refId="Package\Import Files\Exceptions\AssessionID.Paths[OLE DB Source Output]"
                      endId="Package\Import Files\Exceptions\AssessionID\StudentID Exists.Inputs[Lookup Input]"
                      name="OLE DB Source Output"
                      startId="Package\Import Files\Exceptions\AssessionID\Accession.Outputs[OLE DB Source Output]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Import Files\Exceptions\Checking Dates"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{FBE41C25-1A8D-4C15-9FEF-0697D0A93518}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Checking Dates"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\Import Files\Exceptions\Checking Dates\Bad Dates"
                      componentClassID="Microsoft.OLEDBSource"
                      contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                      description="OLE DB Source"
                      name="Bad Dates"
                      usesDispositions="true"
                      version="7">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset"></property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT CAST(Date AS VARCHAR(50)) AS ExceptionValue
FROM Onetime.StagingIMCharges
WHERE ISDATE(Date) = 0</property>
                        <property
                          dataType="System.String"
                          description="The variable that contains the SQL command to be executed."
                          name="SqlCommandVariable"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">2</property>
                        <property
                          dataType="System.String"
                          description="The mappings between the parameters in the SQL command and variables."
                          name="ParameterMapping"></property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Import Files\Exceptions\Checking Dates\Bad Dates.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[Target - IntegrationMiddleWay]"
                          connectionManagerRefId="Package.ConnectionManagers[Target - IntegrationMiddleWay]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Import Files\Exceptions\Checking Dates\Bad Dates.Outputs[OLE DB Source Output]"
                          name="OLE DB Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Import Files\Exceptions\Checking Dates\Bad Dates.Outputs[OLE DB Source Output].Columns[ExceptionValue]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Import Files\Exceptions\Checking Dates\Bad Dates.Outputs[OLE DB Source Output].ExternalColumns[ExceptionValue]"
                              length="50"
                              lineageId="Package\Import Files\Exceptions\Checking Dates\Bad Dates.Outputs[OLE DB Source Output].Columns[ExceptionValue]"
                              name="ExceptionValue"
                              truncationRowDisposition="FailComponent" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Import Files\Exceptions\Checking Dates\Bad Dates.Outputs[OLE DB Source Output].ExternalColumns[ExceptionValue]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="ExceptionValue" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Import Files\Exceptions\Checking Dates\Bad Dates.Outputs[OLE DB Source Error Output]"
                          isErrorOut="true"
                          name="OLE DB Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Import Files\Exceptions\Checking Dates\Bad Dates.Outputs[OLE DB Source Error Output].Columns[ExceptionValue]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Import Files\Exceptions\Checking Dates\Bad Dates.Outputs[OLE DB Source Error Output].Columns[ExceptionValue]"
                              name="ExceptionValue" />
                            <outputColumn
                              refId="Package\Import Files\Exceptions\Checking Dates\Bad Dates.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Import Files\Exceptions\Checking Dates\Bad Dates.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Import Files\Exceptions\Checking Dates\Bad Dates.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Import Files\Exceptions\Checking Dates\Bad Dates.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Import Files\Exceptions\Checking Dates\Data Conversion"
                      componentClassID="Microsoft.DataConvert"
                      contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Data Conversion"
                      name="Data Conversion"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Import Files\Exceptions\Checking Dates\Data Conversion.Inputs[Data Conversion Input]"
                          name="Data Conversion Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Import Files\Exceptions\Checking Dates\Data Conversion.Inputs[Data Conversion Input].Columns[Customer]"
                              cachedDataType="wstr"
                              cachedLength="50"
                              cachedName="Customer"
                              lineageId="Package\Import Files\Exceptions\Checking Dates\Set Defaults.Outputs[Derived Column Output].Columns[Customer]" />
                            <inputColumn
                              refId="Package\Import Files\Exceptions\Checking Dates\Data Conversion.Inputs[Data Conversion Input].Columns[ExceptionColumn]"
                              cachedDataType="wstr"
                              cachedLength="15"
                              cachedName="ExceptionColumn"
                              lineageId="Package\Import Files\Exceptions\Checking Dates\Set Defaults.Outputs[Derived Column Output].Columns[ExceptionColumn]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Import Files\Exceptions\Checking Dates\Data Conversion.Outputs[Data Conversion Output]"
                          exclusionGroup="1"
                          name="Data Conversion Output"
                          synchronousInputId="Package\Import Files\Exceptions\Checking Dates\Data Conversion.Inputs[Data Conversion Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Import Files\Exceptions\Checking Dates\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Customer]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              length="50"
                              lineageId="Package\Import Files\Exceptions\Checking Dates\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Customer]"
                              name="DC.Customer"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Import Files\Exceptions\Checking Dates\Set Defaults.Outputs[Derived Column Output].Columns[Customer]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Import Files\Exceptions\Checking Dates\Data Conversion.Outputs[Data Conversion Output].Columns[DC.ExceptionColumn]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              length="100"
                              lineageId="Package\Import Files\Exceptions\Checking Dates\Data Conversion.Outputs[Data Conversion Output].Columns[DC.ExceptionColumn]"
                              name="DC.ExceptionColumn"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Import Files\Exceptions\Checking Dates\Set Defaults.Outputs[Derived Column Output].Columns[ExceptionColumn]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Import Files\Exceptions\Checking Dates\Data Conversion.Outputs[Data Conversion Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Data Conversion Error Output"
                          synchronousInputId="Package\Import Files\Exceptions\Checking Dates\Data Conversion.Inputs[Data Conversion Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Import Files\Exceptions\Checking Dates\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Import Files\Exceptions\Checking Dates\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Import Files\Exceptions\Checking Dates\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Import Files\Exceptions\Checking Dates\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Import Files\Exceptions\Checking Dates\Insert Exceptions"
                      componentClassID="Microsoft.OLEDBDestination"
                      contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                      description="OLE DB Destination"
                      name="Insert Exceptions"
                      usesDispositions="true"
                      version="4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[OneTime].[StagingIMChargesExceptions]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepIdentity">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                          name="FastLoadOptions">CHECK_CONSTRAINTS,ROWS_PER_BATCH = 100</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                          name="FastLoadMaxInsertCommitSize">2147483647</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Import Files\Exceptions\Checking Dates\Insert Exceptions.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[Target - IntegrationMiddleWay]"
                          connectionManagerRefId="Package.ConnectionManagers[Target - IntegrationMiddleWay]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Import Files\Exceptions\Checking Dates\Insert Exceptions.Inputs[OLE DB Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Import Files\Exceptions\Checking Dates\Insert Exceptions.Inputs[OLE DB Destination Input].Columns[DC.ExceptionColumn]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="DC.ExceptionColumn"
                              externalMetadataColumnId="Package\Import Files\Exceptions\Checking Dates\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[ExceptionColumn]"
                              lineageId="Package\Import Files\Exceptions\Checking Dates\Data Conversion.Outputs[Data Conversion Output].Columns[DC.ExceptionColumn]" />
                            <inputColumn
                              refId="Package\Import Files\Exceptions\Checking Dates\Insert Exceptions.Inputs[OLE DB Destination Input].Columns[DC.Customer]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="DC.Customer"
                              externalMetadataColumnId="Package\Import Files\Exceptions\Checking Dates\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[CustomerCode]"
                              lineageId="Package\Import Files\Exceptions\Checking Dates\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Customer]" />
                            <inputColumn
                              refId="Package\Import Files\Exceptions\Checking Dates\Insert Exceptions.Inputs[OLE DB Destination Input].Columns[ExceptionValue]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="ExceptionValue"
                              externalMetadataColumnId="Package\Import Files\Exceptions\Checking Dates\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[ExceptionValue]"
                              lineageId="Package\Import Files\Exceptions\Checking Dates\Bad Dates.Outputs[OLE DB Source Output].Columns[ExceptionValue]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Import Files\Exceptions\Checking Dates\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[ExceptionColumn]"
                              codePage="1252"
                              dataType="str"
                              length="255"
                              name="ExceptionColumn" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Exceptions\Checking Dates\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[ExceptionRefColumn]"
                              codePage="1252"
                              dataType="str"
                              length="255"
                              name="ExceptionRefColumn" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Exceptions\Checking Dates\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[ExceptionValue]"
                              codePage="1252"
                              dataType="str"
                              length="255"
                              name="ExceptionValue" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Exceptions\Checking Dates\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[ExceptionRefValue]"
                              codePage="1252"
                              dataType="str"
                              length="255"
                              name="ExceptionRefValue" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Exceptions\Checking Dates\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[CustomerCode]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              name="CustomerCode" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Import Files\Exceptions\Checking Dates\Insert Exceptions.Outputs[OLE DB Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Destination Error Output"
                          synchronousInputId="Package\Import Files\Exceptions\Checking Dates\Insert Exceptions.Inputs[OLE DB Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Import Files\Exceptions\Checking Dates\Insert Exceptions.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Import Files\Exceptions\Checking Dates\Insert Exceptions.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Import Files\Exceptions\Checking Dates\Insert Exceptions.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Import Files\Exceptions\Checking Dates\Insert Exceptions.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Import Files\Exceptions\Checking Dates\Set Defaults"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Set Defaults"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Import Files\Exceptions\Checking Dates\Set Defaults.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Import Files\Exceptions\Checking Dates\Set Defaults.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\Import Files\Exceptions\Checking Dates\Set Defaults.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Import Files\Exceptions\Checking Dates\Set Defaults.Outputs[Derived Column Output].Columns[Customer]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="50"
                              lineageId="Package\Import Files\Exceptions\Checking Dates\Set Defaults.Outputs[Derived Column Output].Columns[Customer]"
                              name="Customer"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">@[User::CustomerCode]</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">@[User::CustomerCode]</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Import Files\Exceptions\Checking Dates\Set Defaults.Outputs[Derived Column Output].Columns[ExceptionColumn]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="15"
                              lineageId="Package\Import Files\Exceptions\Checking Dates\Set Defaults.Outputs[Derived Column Output].Columns[ExceptionColumn]"
                              name="ExceptionColumn"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">"TransactionDate"</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">"TransactionDate"</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Import Files\Exceptions\Checking Dates\Set Defaults.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\Import Files\Exceptions\Checking Dates\Set Defaults.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Import Files\Exceptions\Checking Dates\Set Defaults.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Import Files\Exceptions\Checking Dates\Set Defaults.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Import Files\Exceptions\Checking Dates\Set Defaults.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Import Files\Exceptions\Checking Dates\Set Defaults.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Import Files\Exceptions\Checking Dates.Paths[Data Conversion Output]"
                      endId="Package\Import Files\Exceptions\Checking Dates\Insert Exceptions.Inputs[OLE DB Destination Input]"
                      name="Data Conversion Output"
                      startId="Package\Import Files\Exceptions\Checking Dates\Data Conversion.Outputs[Data Conversion Output]" />
                    <path
                      refId="Package\Import Files\Exceptions\Checking Dates.Paths[Derived Column Output]"
                      endId="Package\Import Files\Exceptions\Checking Dates\Data Conversion.Inputs[Data Conversion Input]"
                      name="Derived Column Output"
                      startId="Package\Import Files\Exceptions\Checking Dates\Set Defaults.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\Import Files\Exceptions\Checking Dates.Paths[OLE DB Source Output]"
                      endId="Package\Import Files\Exceptions\Checking Dates\Set Defaults.Inputs[Derived Column Input]"
                      name="OLE DB Source Output"
                      startId="Package\Import Files\Exceptions\Checking Dates\Bad Dates.Outputs[OLE DB Source Output]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Import Files\Exceptions\ISBNs"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{454a5357-b991-4f67-9376-d7479614d938}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="ISBNs"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\Import Files\Exceptions\ISBNs\Data Conversion"
                      componentClassID="Microsoft.DataConvert"
                      contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Data Conversion"
                      name="Data Conversion"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Import Files\Exceptions\ISBNs\Data Conversion.Inputs[Data Conversion Input]"
                          name="Data Conversion Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Import Files\Exceptions\ISBNs\Data Conversion.Inputs[Data Conversion Input].Columns[Customer]"
                              cachedDataType="wstr"
                              cachedLength="3"
                              cachedName="Customer"
                              lineageId="Package\Import Files\Exceptions\ISBNs\Set Defaults.Outputs[Derived Column Output].Columns[Customer]" />
                            <inputColumn
                              refId="Package\Import Files\Exceptions\ISBNs\Data Conversion.Inputs[Data Conversion Input].Columns[ExceptionColumn]"
                              cachedDataType="wstr"
                              cachedLength="4"
                              cachedName="ExceptionColumn"
                              lineageId="Package\Import Files\Exceptions\ISBNs\Set Defaults.Outputs[Derived Column Output].Columns[ExceptionColumn]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Import Files\Exceptions\ISBNs\Data Conversion.Outputs[Data Conversion Output]"
                          exclusionGroup="1"
                          name="Data Conversion Output"
                          synchronousInputId="Package\Import Files\Exceptions\ISBNs\Data Conversion.Inputs[Data Conversion Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Import Files\Exceptions\ISBNs\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Customer]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              length="50"
                              lineageId="Package\Import Files\Exceptions\ISBNs\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Customer]"
                              name="DC.Customer"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Import Files\Exceptions\ISBNs\Set Defaults.Outputs[Derived Column Output].Columns[Customer]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Import Files\Exceptions\ISBNs\Data Conversion.Outputs[Data Conversion Output].Columns[DC.ExceptionColumn]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              length="100"
                              lineageId="Package\Import Files\Exceptions\ISBNs\Data Conversion.Outputs[Data Conversion Output].Columns[DC.ExceptionColumn]"
                              name="DC.ExceptionColumn"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Import Files\Exceptions\ISBNs\Set Defaults.Outputs[Derived Column Output].Columns[ExceptionColumn]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Import Files\Exceptions\ISBNs\Data Conversion.Outputs[Data Conversion Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Data Conversion Error Output"
                          synchronousInputId="Package\Import Files\Exceptions\ISBNs\Data Conversion.Inputs[Data Conversion Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Import Files\Exceptions\ISBNs\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Import Files\Exceptions\ISBNs\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Import Files\Exceptions\ISBNs\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Import Files\Exceptions\ISBNs\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Import Files\Exceptions\ISBNs\Insert Exceptions"
                      componentClassID="Microsoft.OLEDBDestination"
                      contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                      description="OLE DB Destination"
                      name="Insert Exceptions"
                      usesDispositions="true"
                      version="4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[OneTime].[StagingIMChargesExceptions]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepIdentity">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                          name="FastLoadOptions">CHECK_CONSTRAINTS,ROWS_PER_BATCH = 100</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                          name="FastLoadMaxInsertCommitSize">2147483647</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Import Files\Exceptions\ISBNs\Insert Exceptions.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[Target - IntegrationMiddleWay]"
                          connectionManagerRefId="Package.ConnectionManagers[Target - IntegrationMiddleWay]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Import Files\Exceptions\ISBNs\Insert Exceptions.Inputs[OLE DB Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Import Files\Exceptions\ISBNs\Insert Exceptions.Inputs[OLE DB Destination Input].Columns[DC.ExceptionColumn]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="DC.ExceptionColumn"
                              externalMetadataColumnId="Package\Import Files\Exceptions\ISBNs\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[ExceptionColumn]"
                              lineageId="Package\Import Files\Exceptions\ISBNs\Data Conversion.Outputs[Data Conversion Output].Columns[DC.ExceptionColumn]" />
                            <inputColumn
                              refId="Package\Import Files\Exceptions\ISBNs\Insert Exceptions.Inputs[OLE DB Destination Input].Columns[DC.Customer]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="DC.Customer"
                              externalMetadataColumnId="Package\Import Files\Exceptions\ISBNs\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[CustomerCode]"
                              lineageId="Package\Import Files\Exceptions\ISBNs\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Customer]" />
                            <inputColumn
                              refId="Package\Import Files\Exceptions\ISBNs\Insert Exceptions.Inputs[OLE DB Destination Input].Columns[ExceptionValue]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="ExceptionValue"
                              externalMetadataColumnId="Package\Import Files\Exceptions\ISBNs\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[ExceptionValue]"
                              lineageId="Package\Import Files\Exceptions\ISBNs\ISBNs.Outputs[OLE DB Source Output].Columns[ExceptionValue]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Import Files\Exceptions\ISBNs\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[ExceptionColumn]"
                              codePage="1252"
                              dataType="str"
                              length="255"
                              name="ExceptionColumn" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Exceptions\ISBNs\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[ExceptionRefColumn]"
                              codePage="1252"
                              dataType="str"
                              length="255"
                              name="ExceptionRefColumn" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Exceptions\ISBNs\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[ExceptionValue]"
                              codePage="1252"
                              dataType="str"
                              length="255"
                              name="ExceptionValue" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Exceptions\ISBNs\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[ExceptionRefValue]"
                              codePage="1252"
                              dataType="str"
                              length="255"
                              name="ExceptionRefValue" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Exceptions\ISBNs\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[CustomerCode]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              name="CustomerCode" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Import Files\Exceptions\ISBNs\Insert Exceptions.Outputs[OLE DB Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Destination Error Output"
                          synchronousInputId="Package\Import Files\Exceptions\ISBNs\Insert Exceptions.Inputs[OLE DB Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Import Files\Exceptions\ISBNs\Insert Exceptions.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Import Files\Exceptions\ISBNs\Insert Exceptions.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Import Files\Exceptions\ISBNs\Insert Exceptions.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Import Files\Exceptions\ISBNs\Insert Exceptions.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Import Files\Exceptions\ISBNs\ISBNs"
                      componentClassID="Microsoft.OLEDBSource"
                      contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                      description="OLE DB Source"
                      name="ISBNs"
                      usesDispositions="true"
                      version="7">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset"></property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT DISTINCT CAST(ISBN AS VARCHAR(255)) AS ExceptionValue
FROM Onetime.StagingIMCharges</property>
                        <property
                          dataType="System.String"
                          description="The variable that contains the SQL command to be executed."
                          name="SqlCommandVariable"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">2</property>
                        <property
                          dataType="System.String"
                          description="The mappings between the parameters in the SQL command and variables."
                          name="ParameterMapping"></property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Import Files\Exceptions\ISBNs\ISBNs.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[Target - IntegrationMiddleWay]"
                          connectionManagerRefId="Package.ConnectionManagers[Target - IntegrationMiddleWay]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Import Files\Exceptions\ISBNs\ISBNs.Outputs[OLE DB Source Output]"
                          name="OLE DB Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Import Files\Exceptions\ISBNs\ISBNs.Outputs[OLE DB Source Output].Columns[ExceptionValue]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Import Files\Exceptions\ISBNs\ISBNs.Outputs[OLE DB Source Output].ExternalColumns[ExceptionValue]"
                              length="50"
                              lineageId="Package\Import Files\Exceptions\ISBNs\ISBNs.Outputs[OLE DB Source Output].Columns[ExceptionValue]"
                              name="ExceptionValue"
                              truncationRowDisposition="FailComponent" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Import Files\Exceptions\ISBNs\ISBNs.Outputs[OLE DB Source Output].ExternalColumns[ExceptionValue]"
                              codePage="1252"
                              dataType="str"
                              length="255"
                              name="ExceptionValue" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Import Files\Exceptions\ISBNs\ISBNs.Outputs[OLE DB Source Error Output]"
                          isErrorOut="true"
                          name="OLE DB Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Import Files\Exceptions\ISBNs\ISBNs.Outputs[OLE DB Source Error Output].Columns[ExceptionValue]"
                              codePage="1252"
                              dataType="str"
                              length="255"
                              lineageId="Package\Import Files\Exceptions\ISBNs\ISBNs.Outputs[OLE DB Source Error Output].Columns[ExceptionValue]"
                              name="ExceptionValue" />
                            <outputColumn
                              refId="Package\Import Files\Exceptions\ISBNs\ISBNs.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Import Files\Exceptions\ISBNs\ISBNs.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Import Files\Exceptions\ISBNs\ISBNs.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Import Files\Exceptions\ISBNs\ISBNs.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Import Files\Exceptions\ISBNs\Lookup ISBN"
                      componentClassID="Microsoft.Lookup"
                      contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                      description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                      name="Lookup ISBN"
                      usesDispositions="true"
                      version="6">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the SQL statement that generates the lookup table."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[tblBookInventory]</property>
                        <property
                          dataType="System.String"
                          description="Specifies a SQL statement that uses parameters to generate the lookup table."
                          expressionType="Notify"
                          name="SqlCommandParam"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[tblBookInventory]) [refTable]
where [refTable].[ISBN] = ?</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of connection used to access the reference dataset."
                          name="ConnectionType"
                          typeConverter="LookupConnectionType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the cache type of the lookup table."
                          name="CacheType"
                          typeConverter="CacheType">2</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                          name="NoMatchBehavior"
                          typeConverter="LookupNoMatchBehavior">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                          name="NoMatchCachePercentage">0</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                          name="MaxMemoryUsage">25</property>
                        <property
                          dataType="System.Int64"
                          description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                          name="MaxMemoryUsage64">25</property>
                        <property
                          dataType="System.String"
                          description="Indicates whether to reference metadata in an XML format."
                          name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ISBN" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="SLC" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="GroupCode" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Title" dataType="DT_STR" length="1000" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Price" dataType="DT_CY" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Publisher" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Grade" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Adopt" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="DistReqCode" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Expire" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Copyright" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="SetISBN" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="BookSet" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="LeftInStorage" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="DistrictOnOrder" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="StateOnOrder" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="OnOrder" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ShowOnReports" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="BinID" dataType="DT_STR" length="100" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="UserID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ModifiedDate" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="CampusAdded" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Notes" dataType="DT_STR" length="6000" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="UDF" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Active" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="BookInventoryUID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="CreatedDate" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                          name="ParameterMap">#{Package\Import Files\Exceptions\ISBNs\ISBNs.Outputs[OLE DB Source Output].Columns[ExceptionValue]};</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                          name="TreatDuplicateKeysAsError">false</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Import Files\Exceptions\ISBNs\Lookup ISBN.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[Target - TIPWeb]"
                          connectionManagerRefId="Package.ConnectionManagers[Target - TIPWeb]"
                          description="Connection manager used to access lookup data."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Import Files\Exceptions\ISBNs\Lookup ISBN.Inputs[Lookup Input]"
                          name="Lookup Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Import Files\Exceptions\ISBNs\Lookup ISBN.Inputs[Lookup Input].Columns[ExceptionValue]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="ExceptionValue"
                              lineageId="Package\Import Files\Exceptions\ISBNs\ISBNs.Outputs[OLE DB Source Output].Columns[ExceptionValue]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table that a column joins."
                                  name="JoinToReferenceColumn">ISBN</property>
                                <property
                                  dataType="System.Null"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn" />
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Import Files\Exceptions\ISBNs\Lookup ISBN.Outputs[Lookup Match Output]"
                          errorOrTruncationOperation="Lookup"
                          exclusionGroup="1"
                          name="Lookup Match Output"
                          synchronousInputId="Package\Import Files\Exceptions\ISBNs\Lookup ISBN.Inputs[Lookup Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Import Files\Exceptions\ISBNs\Lookup ISBN.Outputs[Lookup No Match Output]"
                          description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                          exclusionGroup="1"
                          name="Lookup No Match Output"
                          synchronousInputId="Package\Import Files\Exceptions\ISBNs\Lookup ISBN.Inputs[Lookup Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Import Files\Exceptions\ISBNs\Lookup ISBN.Outputs[Lookup Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Lookup Error Output"
                          synchronousInputId="Package\Import Files\Exceptions\ISBNs\Lookup ISBN.Inputs[Lookup Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Import Files\Exceptions\ISBNs\Lookup ISBN.Outputs[Lookup Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Import Files\Exceptions\ISBNs\Lookup ISBN.Outputs[Lookup Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Import Files\Exceptions\ISBNs\Lookup ISBN.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Import Files\Exceptions\ISBNs\Lookup ISBN.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Import Files\Exceptions\ISBNs\Set Defaults"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Set Defaults"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Import Files\Exceptions\ISBNs\Set Defaults.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Import Files\Exceptions\ISBNs\Set Defaults.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\Import Files\Exceptions\ISBNs\Set Defaults.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Import Files\Exceptions\ISBNs\Set Defaults.Outputs[Derived Column Output].Columns[Customer]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="50"
                              lineageId="Package\Import Files\Exceptions\ISBNs\Set Defaults.Outputs[Derived Column Output].Columns[Customer]"
                              name="Customer"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">@[User::CustomerCode]</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">@[User::CustomerCode]</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Import Files\Exceptions\ISBNs\Set Defaults.Outputs[Derived Column Output].Columns[ExceptionColumn]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="4"
                              lineageId="Package\Import Files\Exceptions\ISBNs\Set Defaults.Outputs[Derived Column Output].Columns[ExceptionColumn]"
                              name="ExceptionColumn"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">"ISBN"</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">"ISBN"</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Import Files\Exceptions\ISBNs\Set Defaults.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\Import Files\Exceptions\ISBNs\Set Defaults.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Import Files\Exceptions\ISBNs\Set Defaults.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Import Files\Exceptions\ISBNs\Set Defaults.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Import Files\Exceptions\ISBNs\Set Defaults.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Import Files\Exceptions\ISBNs\Set Defaults.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Import Files\Exceptions\ISBNs.Paths[Data Conversion Output]"
                      endId="Package\Import Files\Exceptions\ISBNs\Insert Exceptions.Inputs[OLE DB Destination Input]"
                      name="Data Conversion Output"
                      startId="Package\Import Files\Exceptions\ISBNs\Data Conversion.Outputs[Data Conversion Output]" />
                    <path
                      refId="Package\Import Files\Exceptions\ISBNs.Paths[Derived Column Output]"
                      endId="Package\Import Files\Exceptions\ISBNs\Data Conversion.Inputs[Data Conversion Input]"
                      name="Derived Column Output"
                      startId="Package\Import Files\Exceptions\ISBNs\Set Defaults.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\Import Files\Exceptions\ISBNs.Paths[Lookup No Match Output]"
                      endId="Package\Import Files\Exceptions\ISBNs\Set Defaults.Inputs[Derived Column Input]"
                      name="Lookup No Match Output"
                      startId="Package\Import Files\Exceptions\ISBNs\Lookup ISBN.Outputs[Lookup No Match Output]" />
                    <path
                      refId="Package\Import Files\Exceptions\ISBNs.Paths[OLE DB Source Output]"
                      endId="Package\Import Files\Exceptions\ISBNs\Lookup ISBN.Inputs[Lookup Input]"
                      name="OLE DB Source Output"
                      startId="Package\Import Files\Exceptions\ISBNs\ISBNs.Outputs[OLE DB Source Output]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Import Files\Exceptions\Mark Exceptions"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{93BEFAFE-8E8A-4B9B-90ED-7B905B565AD8}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Mark Exceptions"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{3B254E45-1603-4464-B6B4-A3EBA7FA80E1}"
                  SQLTask:SqlStatementSource="&#xA;-- StudentID&#xA;UPDATE A&#xA;SET Exception=1,&#xA;    ExceptionReason=CASE WHEN ISNULL(ExceptionReason,'') = '' THEN 'StudentID does not exist' ELSE ExceptionReason + ',StudentID does not exist' END &#xA;FROM OneTime.StagingIMCharges AS A&#xA;INNER JOIN  OneTime.StagingIMChargesExceptions AS B&#xA;ON ISNULL(A.StudentID,'')=ISNULL(B.ExceptionValue,'') AND B.ExceptionColumn='StudentID' &#xA;AND A.CustomerCode=B.CustomerCode&#xA;&#xA;-- SiteID&#xA;--UPDATE A&#xA;--SET Exception=1,&#xA;--    ExceptionReason=CASE WHEN ISNULL(ExceptionReason,'') = '' THEN 'SchoolID does not exist' ELSE ExceptionReason + ',SchoolID does not exist' END &#xA;--FROM OneTime.StagingIMCharges AS A&#xA;--INNER JOIN  OneTime.StagingIMChargesExceptions AS B&#xA;--ON ISNULL(A.SISSchoolID,'')=ISNULL(B.ExceptionValue,'') AND B.ExceptionColumn='SiteID' &#xA;--AND A.CustomerCode=B.CustomerCode&#xA;&#xA;-- Amount&#xA;UPDATE OneTime.StagingIMCharges&#xA;SET Exception=1,&#xA;    ExceptionReason=CASE WHEN ISNULL(ExceptionReason,'') = '' THEN 'Amount is not valid' ELSE ExceptionReason + ',Amount is not valid' END &#xA;WHERE ISNUMERIC(Price) = 0 &#xA;OR Price &lt;= 0&#xA;&#xA;-- Transaction Date&#xA;UPDATE A&#xA;SET Exception=1,&#xA;    ExceptionReason=CASE WHEN ISNULL(ExceptionReason,'') = '' THEN 'TransactionDate is not a valid date' ELSE ExceptionReason + ',TransactionDate is not a valid date' END &#xA;FROM Aspen.Payments AS A&#xA;INNER JOIN  Aspen.PaymentsExceptions AS B&#xA;ON ISNULL(A.TransactionDate ,'')=ISNULL(B.ExceptionValue,'') AND B.ExceptionColumn='TransactionDate ' &#xA;AND A.CustomerCode=B.CustomerCode&#xA;&#xA;-- ISBN&#xA;UPDATE A&#xA;SET Exception=1,&#xA;    ExceptionReason=CASE WHEN ISNULL(ExceptionReason,'') = '' THEN 'ISBN does not exist' ELSE ExceptionReason + ',ISBN does not exist' END &#xA;FROM OneTime.StagingIMCharges AS A&#xA;INNER JOIN  OneTime.StagingIMChargesExceptions AS B&#xA;ON ISNULL(A.ISBN,'')=ISNULL(B.ExceptionValue,'') AND B.ExceptionColumn='ISBN' &#xA;AND A.CustomerCode=B.CustomerCode&#xA;&#xA;-- Accession&#xA;UPDATE A&#xA;SET Exception=1,&#xA;    ExceptionReason=CASE WHEN ISNULL(ExceptionReason,'') = '' THEN 'Accession does not exist' ELSE ExceptionReason + ',Accession does not exist' END &#xA;FROM OneTime.StagingIMCharges AS A&#xA;INNER JOIN  OneTime.StagingIMChargesExceptions AS B&#xA;ON (ISNULL(A.Accession,'')=ISNULL(B.ExceptionValue,'') AND B.ExceptionColumn='Accession')&#xA;AND (ISNULL(A.StudentID,'')=ISNULL(B.ExceptionRefValue,'') AND B.ExceptionRefColumn='StudentID')&#xA;AND A.CustomerCode=B.CustomerCode&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Import Files\Exceptions\StudentID"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{963F89E0-6A5B-439E-94BB-B8D5C9104BB3}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="StudentID"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\Import Files\Exceptions\StudentID\Data Conversion"
                      componentClassID="Microsoft.DataConvert"
                      contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Data Conversion"
                      name="Data Conversion"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Import Files\Exceptions\StudentID\Data Conversion.Inputs[Data Conversion Input]"
                          name="Data Conversion Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Import Files\Exceptions\StudentID\Data Conversion.Inputs[Data Conversion Input].Columns[ExceptionColumnName]"
                              cachedDataType="wstr"
                              cachedLength="9"
                              cachedName="ExceptionColumnName"
                              lineageId="Package\Import Files\Exceptions\StudentID\Defaults.Outputs[Derived Column Output].Columns[ExceptionColumnName]" />
                            <inputColumn
                              refId="Package\Import Files\Exceptions\StudentID\Data Conversion.Inputs[Data Conversion Input].Columns[CustomerCode]"
                              cachedDataType="wstr"
                              cachedLength="3"
                              cachedName="CustomerCode"
                              lineageId="Package\Import Files\Exceptions\StudentID\Defaults.Outputs[Derived Column Output].Columns[CustomerCode]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Import Files\Exceptions\StudentID\Data Conversion.Outputs[Data Conversion Output]"
                          exclusionGroup="1"
                          name="Data Conversion Output"
                          synchronousInputId="Package\Import Files\Exceptions\StudentID\Data Conversion.Inputs[Data Conversion Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Import Files\Exceptions\StudentID\Data Conversion.Outputs[Data Conversion Output].Columns[DC.ExceptionColumnName]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              length="50"
                              lineageId="Package\Import Files\Exceptions\StudentID\Data Conversion.Outputs[Data Conversion Output].Columns[DC.ExceptionColumnName]"
                              name="DC.ExceptionColumnName"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Import Files\Exceptions\StudentID\Defaults.Outputs[Derived Column Output].Columns[ExceptionColumnName]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Import Files\Exceptions\StudentID\Data Conversion.Outputs[Data Conversion Output].Columns[DC.CustomerCode]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              length="50"
                              lineageId="Package\Import Files\Exceptions\StudentID\Data Conversion.Outputs[Data Conversion Output].Columns[DC.CustomerCode]"
                              name="DC.CustomerCode"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Import Files\Exceptions\StudentID\Defaults.Outputs[Derived Column Output].Columns[CustomerCode]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Import Files\Exceptions\StudentID\Data Conversion.Outputs[Data Conversion Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Data Conversion Error Output"
                          synchronousInputId="Package\Import Files\Exceptions\StudentID\Data Conversion.Inputs[Data Conversion Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Import Files\Exceptions\StudentID\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Import Files\Exceptions\StudentID\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Import Files\Exceptions\StudentID\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Import Files\Exceptions\StudentID\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Import Files\Exceptions\StudentID\Defaults"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Defaults"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Import Files\Exceptions\StudentID\Defaults.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Import Files\Exceptions\StudentID\Defaults.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\Import Files\Exceptions\StudentID\Defaults.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Import Files\Exceptions\StudentID\Defaults.Outputs[Derived Column Output].Columns[ExceptionColumnName]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="9"
                              lineageId="Package\Import Files\Exceptions\StudentID\Defaults.Outputs[Derived Column Output].Columns[ExceptionColumnName]"
                              name="ExceptionColumnName"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">"StudentID"</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">"StudentID"</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Import Files\Exceptions\StudentID\Defaults.Outputs[Derived Column Output].Columns[CustomerCode]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="3"
                              lineageId="Package\Import Files\Exceptions\StudentID\Defaults.Outputs[Derived Column Output].Columns[CustomerCode]"
                              name="CustomerCode"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">@[User::CustomerCode]</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">@[User::CustomerCode]</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Import Files\Exceptions\StudentID\Defaults.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\Import Files\Exceptions\StudentID\Defaults.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Import Files\Exceptions\StudentID\Defaults.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Import Files\Exceptions\StudentID\Defaults.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Import Files\Exceptions\StudentID\Defaults.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Import Files\Exceptions\StudentID\Defaults.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Import Files\Exceptions\StudentID\Insert Exceptions"
                      componentClassID="Microsoft.OLEDBDestination"
                      contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                      description="OLE DB Destination"
                      name="Insert Exceptions"
                      usesDispositions="true"
                      version="4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[OneTime].[StagingIMChargesExceptions]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepIdentity">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                          name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                          name="FastLoadMaxInsertCommitSize">2147483647</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Import Files\Exceptions\StudentID\Insert Exceptions.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[Target - IntegrationMiddleWay]"
                          connectionManagerRefId="Package.ConnectionManagers[Target - IntegrationMiddleWay]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Import Files\Exceptions\StudentID\Insert Exceptions.Inputs[OLE DB Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Import Files\Exceptions\StudentID\Insert Exceptions.Inputs[OLE DB Destination Input].Columns[StudentID]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="StudentID"
                              externalMetadataColumnId="Package\Import Files\Exceptions\StudentID\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[ExceptionValue]"
                              lineageId="Package\Import Files\Exceptions\StudentID\StudentIDs.Outputs[OLE DB Source Output].Columns[StudentID]" />
                            <inputColumn
                              refId="Package\Import Files\Exceptions\StudentID\Insert Exceptions.Inputs[OLE DB Destination Input].Columns[DC.ExceptionColumnName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="DC.ExceptionColumnName"
                              externalMetadataColumnId="Package\Import Files\Exceptions\StudentID\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[ExceptionColumn]"
                              lineageId="Package\Import Files\Exceptions\StudentID\Data Conversion.Outputs[Data Conversion Output].Columns[DC.ExceptionColumnName]" />
                            <inputColumn
                              refId="Package\Import Files\Exceptions\StudentID\Insert Exceptions.Inputs[OLE DB Destination Input].Columns[DC.CustomerCode]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="DC.CustomerCode"
                              externalMetadataColumnId="Package\Import Files\Exceptions\StudentID\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[CustomerCode]"
                              lineageId="Package\Import Files\Exceptions\StudentID\Data Conversion.Outputs[Data Conversion Output].Columns[DC.CustomerCode]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Import Files\Exceptions\StudentID\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[CustomerCode]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              name="CustomerCode" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Exceptions\StudentID\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[ExceptionColumn]"
                              codePage="1252"
                              dataType="str"
                              length="255"
                              name="ExceptionColumn" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Exceptions\StudentID\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[ExceptionRefColumn]"
                              codePage="1252"
                              dataType="str"
                              length="255"
                              name="ExceptionRefColumn" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Exceptions\StudentID\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[ExceptionValue]"
                              codePage="1252"
                              dataType="str"
                              length="255"
                              name="ExceptionValue" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Exceptions\StudentID\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[ExceptionRefValue]"
                              codePage="1252"
                              dataType="str"
                              length="255"
                              name="ExceptionRefValue" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Import Files\Exceptions\StudentID\Insert Exceptions.Outputs[OLE DB Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Destination Error Output"
                          synchronousInputId="Package\Import Files\Exceptions\StudentID\Insert Exceptions.Inputs[OLE DB Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Import Files\Exceptions\StudentID\Insert Exceptions.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Import Files\Exceptions\StudentID\Insert Exceptions.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Import Files\Exceptions\StudentID\Insert Exceptions.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Import Files\Exceptions\StudentID\Insert Exceptions.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Import Files\Exceptions\StudentID\StudentID Exists"
                      componentClassID="Microsoft.Lookup"
                      contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                      description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                      name="StudentID Exists"
                      usesDispositions="true"
                      version="6">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the SQL statement that generates the lookup table."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT StudentID,CampusID 
FROM tblStudents
WHERE Status = 1</property>
                        <property
                          dataType="System.String"
                          description="Specifies a SQL statement that uses parameters to generate the lookup table."
                          expressionType="Notify"
                          name="SqlCommandParam"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (SELECT StudentID,CampusID 
FROM tblStudents
WHERE Status = 1) [refTable]
where [refTable].[StudentID] = ? and [refTable].[CampusID] = ?</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of connection used to access the reference dataset."
                          name="ConnectionType"
                          typeConverter="LookupConnectionType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the cache type of the lookup table."
                          name="CacheType"
                          typeConverter="CacheType">2</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                          name="NoMatchBehavior"
                          typeConverter="LookupNoMatchBehavior">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                          name="NoMatchCachePercentage">0</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                          name="MaxMemoryUsage">25</property>
                        <property
                          dataType="System.Int64"
                          description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                          name="MaxMemoryUsage64">25</property>
                        <property
                          dataType="System.String"
                          description="Indicates whether to reference metadata in an XML format."
                          name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="StudentID" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="CampusID" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                          name="ParameterMap">#{Package\Import Files\Exceptions\StudentID\StudentIDs.Outputs[OLE DB Source Output].Columns[StudentID]};#{Package\Import Files\Exceptions\StudentID\StudentIDs.Outputs[OLE DB Source Output].Columns[SiteID]};</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                          name="TreatDuplicateKeysAsError">false</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Import Files\Exceptions\StudentID\StudentID Exists.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[Target - TIPWeb]"
                          connectionManagerRefId="Package.ConnectionManagers[Target - TIPWeb]"
                          description="Connection manager used to access lookup data."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Import Files\Exceptions\StudentID\StudentID Exists.Inputs[Lookup Input]"
                          name="Lookup Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Import Files\Exceptions\StudentID\StudentID Exists.Inputs[Lookup Input].Columns[StudentID]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="StudentID"
                              lineageId="Package\Import Files\Exceptions\StudentID\StudentIDs.Outputs[OLE DB Source Output].Columns[StudentID]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table that a column joins."
                                  name="JoinToReferenceColumn">StudentID</property>
                                <property
                                  dataType="System.Null"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn" />
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Import Files\Exceptions\StudentID\StudentID Exists.Inputs[Lookup Input].Columns[SiteID]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="SiteID"
                              lineageId="Package\Import Files\Exceptions\StudentID\StudentIDs.Outputs[OLE DB Source Output].Columns[SiteID]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table that a column joins."
                                  name="JoinToReferenceColumn">CampusID</property>
                                <property
                                  dataType="System.Null"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn" />
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Import Files\Exceptions\StudentID\StudentID Exists.Outputs[Lookup Match Output]"
                          errorOrTruncationOperation="Lookup"
                          exclusionGroup="1"
                          name="Lookup Match Output"
                          synchronousInputId="Package\Import Files\Exceptions\StudentID\StudentID Exists.Inputs[Lookup Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Import Files\Exceptions\StudentID\StudentID Exists.Outputs[Lookup No Match Output]"
                          description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                          exclusionGroup="1"
                          name="Lookup No Match Output"
                          synchronousInputId="Package\Import Files\Exceptions\StudentID\StudentID Exists.Inputs[Lookup Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Import Files\Exceptions\StudentID\StudentID Exists.Outputs[Lookup Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Lookup Error Output"
                          synchronousInputId="Package\Import Files\Exceptions\StudentID\StudentID Exists.Inputs[Lookup Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Import Files\Exceptions\StudentID\StudentID Exists.Outputs[Lookup Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Import Files\Exceptions\StudentID\StudentID Exists.Outputs[Lookup Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Import Files\Exceptions\StudentID\StudentID Exists.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Import Files\Exceptions\StudentID\StudentID Exists.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Import Files\Exceptions\StudentID\StudentIDs"
                      componentClassID="Microsoft.OLEDBSource"
                      contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                      description="OLE DB Source"
                      name="StudentIDs"
                      usesDispositions="true"
                      version="7">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset"></property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT DISTINCT CAST(StudentID AS VARCHAR(50)) AS StudentID,SiteID
FROM OneTime.StagingIMCharges</property>
                        <property
                          dataType="System.String"
                          description="The variable that contains the SQL command to be executed."
                          name="SqlCommandVariable"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">2</property>
                        <property
                          dataType="System.String"
                          description="The mappings between the parameters in the SQL command and variables."
                          name="ParameterMapping"></property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Import Files\Exceptions\StudentID\StudentIDs.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[Target - IntegrationMiddleWay]"
                          connectionManagerRefId="Package.ConnectionManagers[Target - IntegrationMiddleWay]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Import Files\Exceptions\StudentID\StudentIDs.Outputs[OLE DB Source Output]"
                          name="OLE DB Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Import Files\Exceptions\StudentID\StudentIDs.Outputs[OLE DB Source Output].Columns[StudentID]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Import Files\Exceptions\StudentID\StudentIDs.Outputs[OLE DB Source Output].ExternalColumns[StudentID]"
                              length="50"
                              lineageId="Package\Import Files\Exceptions\StudentID\StudentIDs.Outputs[OLE DB Source Output].Columns[StudentID]"
                              name="StudentID"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Import Files\Exceptions\StudentID\StudentIDs.Outputs[OLE DB Source Output].Columns[SiteID]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Import Files\Exceptions\StudentID\StudentIDs.Outputs[OLE DB Source Output].ExternalColumns[SiteID]"
                              length="50"
                              lineageId="Package\Import Files\Exceptions\StudentID\StudentIDs.Outputs[OLE DB Source Output].Columns[SiteID]"
                              name="SiteID"
                              truncationRowDisposition="FailComponent" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Import Files\Exceptions\StudentID\StudentIDs.Outputs[OLE DB Source Output].ExternalColumns[StudentID]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="StudentID" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Exceptions\StudentID\StudentIDs.Outputs[OLE DB Source Output].ExternalColumns[SiteID]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="SiteID" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Import Files\Exceptions\StudentID\StudentIDs.Outputs[OLE DB Source Error Output]"
                          isErrorOut="true"
                          name="OLE DB Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Import Files\Exceptions\StudentID\StudentIDs.Outputs[OLE DB Source Error Output].Columns[StudentID]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Import Files\Exceptions\StudentID\StudentIDs.Outputs[OLE DB Source Error Output].Columns[StudentID]"
                              name="StudentID" />
                            <outputColumn
                              refId="Package\Import Files\Exceptions\StudentID\StudentIDs.Outputs[OLE DB Source Error Output].Columns[SiteID]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Import Files\Exceptions\StudentID\StudentIDs.Outputs[OLE DB Source Error Output].Columns[SiteID]"
                              name="SiteID" />
                            <outputColumn
                              refId="Package\Import Files\Exceptions\StudentID\StudentIDs.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Import Files\Exceptions\StudentID\StudentIDs.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Import Files\Exceptions\StudentID\StudentIDs.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Import Files\Exceptions\StudentID\StudentIDs.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Import Files\Exceptions\StudentID.Paths[Data Conversion Output]"
                      endId="Package\Import Files\Exceptions\StudentID\Insert Exceptions.Inputs[OLE DB Destination Input]"
                      name="Data Conversion Output"
                      startId="Package\Import Files\Exceptions\StudentID\Data Conversion.Outputs[Data Conversion Output]" />
                    <path
                      refId="Package\Import Files\Exceptions\StudentID.Paths[Derived Column Output]"
                      endId="Package\Import Files\Exceptions\StudentID\Data Conversion.Inputs[Data Conversion Input]"
                      name="Derived Column Output"
                      startId="Package\Import Files\Exceptions\StudentID\Defaults.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\Import Files\Exceptions\StudentID.Paths[Lookup No Match Output]"
                      endId="Package\Import Files\Exceptions\StudentID\Defaults.Inputs[Derived Column Input]"
                      name="Lookup No Match Output"
                      startId="Package\Import Files\Exceptions\StudentID\StudentID Exists.Outputs[Lookup No Match Output]" />
                    <path
                      refId="Package\Import Files\Exceptions\StudentID.Paths[OLE DB Source Output]"
                      endId="Package\Import Files\Exceptions\StudentID\StudentID Exists.Inputs[Lookup Input]"
                      name="OLE DB Source Output"
                      startId="Package\Import Files\Exceptions\StudentID\StudentIDs.Outputs[OLE DB Source Output]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Import Files\Exceptions.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{11B685A0-CA1C-4166-9EF4-50B05A2B2252}"
              DTS:From="Package\Import Files\Exceptions\StudentID"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Import Files\Exceptions\Mark Exceptions"
              DTS:Value="2" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Import Files\Exceptions.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{2534DBEC-A943-474F-8973-2FC8C870EC77}"
              DTS:From="Package\Import Files\Exceptions\ISBNs"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\Import Files\Exceptions\Mark Exceptions"
              DTS:Value="2" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Import Files\Exceptions.PrecedenceConstraints[Constraint 2]"
              DTS:CreationName=""
              DTS:DTSID="{FF101909-BAE7-4066-B73D-471C1D4E0571}"
              DTS:From="Package\Import Files\Exceptions\Checking Dates"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 2"
              DTS:To="Package\Import Files\Exceptions\Mark Exceptions"
              DTS:Value="2" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Import Files\Exceptions.PrecedenceConstraints[Constraint 3]"
              DTS:CreationName=""
              DTS:DTSID="{7C468DCC-E95A-437E-B5AA-B8B1B6021F2E}"
              DTS:From="Package\Import Files\Exceptions\AssessionID"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 3"
              DTS:To="Package\Import Files\Exceptions\Mark Exceptions"
              DTS:Value="2" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Import Files\General Data Cleanup"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{83A28F57-1093-4DEE-B992-3899DC664085}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="General Data Cleanup">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Import Files\General Data Cleanup\Data Cleanup"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{8C6465CB-EE53-4140-9DA2-1F9C7AC282DF}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Data Cleanup"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{3B254E45-1603-4464-B6B4-A3EBA7FA80E1}"
                  SQLTask:SqlStatementSource="&#xA;DELETE FROM Onetime.StagingIMCharges&#xA;WHERE StudentID IS NULL&#xA;AND Date IS NULL&#xA;AND Price IS NULL&#xA;AND Status IS NULL&#xA;&#xA;UPDATE Onetime.StagingIMCharges&#xA;SET ISBN = REPLACE(REPLACE(ISBN,CHAR(10),''),CHAR(13),'')" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Import Files\General Data Cleanup\R and L Trim"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{CF9CA4A1-14A5-4066-9D97-DBE6E77EC8FA}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="R and L Trim"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{3B254E45-1603-4464-B6B4-A3EBA7FA80E1}"
                  SQLTask:SqlStatementSource="UPDATE Aspen.Payments&#xA;SET&#x9;TransactionReference = LTRIM(RTRIM(TransactionReference)),&#xA;&#x9;ApplyToReference = LTRIM(RTRIM(ApplyToReference)),&#xA;&#x9;SISStudentID = LTRIM(RTRIM(SISStudentID)),&#xA;&#x9;SISSchoolID = LTRIM(RTRIM(SISSchoolID)),&#xA;&#x9;ItemCode = LTRIM(RTRIM(ItemCode)),&#xA;&#x9;ItemDescription = LTRIM(RTRIM(ItemDescription)),&#xA;&#x9;TransactionDate = LTRIM(RTRIM(TransactionDate)),&#xA;&#x9;Amount = LTRIM(RTRIM(Amount)),&#xA;&#x9;PaymentMethod = LTRIM(RTRIM(PaymentMethod)),&#xA;&#x9;Comment = LTRIM(RTRIM(Comment)),&#xA;&#x9;Voided = LTRIM(RTRIM(Voided))" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Import Files\General Data Cleanup.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{9C0747F2-FA74-47F2-8F42-511812BFB3C5}"
              DTS:From="Package\Import Files\General Data Cleanup\R and L Trim"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Import Files\General Data Cleanup\Data Cleanup" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Import Files\Get File Information"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{FF1F5CBC-8987-4CB1-BBB9-42EC63EC11D4}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Get File Information">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Import Files\Get File Information\Get File Name"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:Description="Script Task"
              DTS:DTSID="{FD431BE8-7451-4328-97F6-F438AD5628AB}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Get File Name"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_72ae857c5ac041bd913d8d044da544ab"
                  VSTAMajorVersion="3"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="User::CustomerCode,User::Debug,User::FileExtension,User::Integration,User::IntegrationType"
                  ReadWriteVariables="User::ArchiveFilePath,User::ExcelFullFilePathName,User::FileName,User::FilePath,User::FileSize,User::JobName,User::RootPath,User::Success">
                  <ProjectItem
                    Name="ST_72ae857c5ac041bd913d8d044da544ab.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{B6931281-CA95-422F-820D-4B6FA13F6D77}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_618e2f78b43a4604afe30f3f311921cd</RootNamespace>
    <AssemblyName>ST_72ae857c5ac041bd913d8d044da544ab</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_618e2f78b43a4604afe30f3f311921cd")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_618e2f78b43a4604afe30f3f311921cd")]
[assembly: AssemblyCopyright("Copyright @  2019")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.IO;
using System.Linq;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_618e2f78b43a4604afe30f3f311921cd
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
        {
            bool Debug = Convert.ToBoolean(Dts.Variables["Debug"].Value);
            string CustomerCode = Dts.Variables["CustomerCode"].Value.ToString();
            string FilePath = Dts.Variables["FilePath"].Value.ToString();
            string FileExtension = Dts.Variables["FileExtension"].Value.ToString();
            string RootPath = Dts.Variables["RootPath"].Value.ToString();
            string ArchivePath = Dts.Variables["ArchiveFilePath"].Value.ToString();
            string Integration = Dts.Variables["Integration"].Value.ToString();
            string IntegrationType = Dts.Variables["IntegrationType"].Value.ToString();
            string JobName = Dts.Variables["JobName"].Value.ToString();
            string FileName = "";
            string TargetFilePath = "";
            string ToGetFileSize = "";

            // Setting Job Name 
            Dts.Variables["JobName"].Value = JobName.Replace("Integration", Integration).Replace("IntegerationType", IntegrationType).Replace("CustomerCode", CustomerCode);

            // Check to make sure "\" is at the end of Root path
            if (RootPath.Substring(RootPath.Length - 1, 1) != "\\")
            {
                RootPath = RootPath + "\\";
                Dts.Variables["RootPath"].Value = RootPath;
            }

            if (Convert.ToBoolean(Dts.Variables["User::Debug"].Value) == true)
            {
                MessageBox.Show("RootPath: (" + RootPath + ")");
            }

            // Check to make sure "\" is at the end of File path
            if (FilePath.Substring(FilePath.Length - 1, 1) != "\\")
            {
                FilePath = FilePath + "\\";
                Dts.Variables["FilePath"].Value = FilePath;
            }

            if (Convert.ToBoolean(Dts.Variables["User::Debug"].Value) == true)
            {
                MessageBox.Show("FilePath: (" + FilePath + ")");
            }

            // Check to make sure "\" is at the end of Archive path
            if (ArchivePath.Substring(ArchivePath.Length - 1, 1) != "\\")
            {
                ArchivePath = ArchivePath + "\\";
                Dts.Variables["ArchiveFilePath"].Value = ArchivePath;
            }

            if (Convert.ToBoolean(Dts.Variables["User::Debug"].Value) == true)
            {
                MessageBox.Show("ArchiveFilePath: (" + ArchivePath + ")");
            }


            // Does Archive path exists?
            bool DirectoryExists = Directory.Exists(RootPath + FilePath + ArchivePath);

            // Create Directory if it does not exists
            if (!DirectoryExists)
            {
                Directory.CreateDirectory(RootPath + FilePath + ArchivePath);
            }


            if (Debug == true)
            {
                MessageBox.Show("File Path: " + RootPath + FilePath);
            }

            TargetFilePath = RootPath + FilePath;

             FileName = Directory.GetFiles(TargetFilePath, "*." + FileExtension)
                            .Where(f => f.Length > 0)
                            .OrderByDescending(f => new FileInfo(f).CreationTime)
                            .LastOrDefault();

            if (Debug == true)
            {
                MessageBox.Show("Setting File Parms");
            }

            if (FileName == null)
            {
                FileName = "NoFileExist";
                Dts.Variables["Success"].Value = false;
            }
            else
            {
                FileName = FileName.Replace(TargetFilePath, "");
                Dts.Variables["Success"].Value = true;
            }

            Dts.Variables["FileName"].Value = FileName;
            ToGetFileSize = TargetFilePath + FileName;
            Dts.Variables["ExcelFullFilePathName"].Value = RootPath + FilePath + FileName;


            if (Convert.ToBoolean(Dts.Variables["User::Debug"].Value) == true)
            {
                MessageBox.Show("File Name " + FileName);
                //MessageBox.Show("About to get file size for " + ToGetFileSize);
            }

            if (FileName != "NoFileExist")
            {
                Dts.Variables["User::FileSize"].Value = new FileInfo(ToGetFileSize).Length.ToString();
            }
            else
            {
                Dts.Variables["User::FileSize"].Value = "0";
            }

            if (Convert.ToBoolean(Dts.Variables["User::Debug"].Value) == true)
            {
                MessageBox.Show("FileSize Varable: " + Dts.Variables["User::FileSize"].Value.ToString());
            }

            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_72ae857c5ac041bd913d8d044da544ab</msb:CodeName>
		<msb:DisplayName>ST_72ae857c5ac041bd913d8d044da544ab</msb:DisplayName>
		<msb:ProjectId>{00D76919-28FD-42D0-8F49-81D98BB84750}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_72ae857c5ac041bd913d8d044da544ab.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_618e2f78b43a4604afe30f3f311921cd.Properties.Settings.get_Default():ST_618e2f78b43a4604afe30f3f311921cd.Properties.Sett" +
    "ings")]

namespace ST_618e2f78b43a4604afe30f3f311921cd.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_618e2f78b43a4604afe30f3f311921cd.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_618e2f78b43a4604afe30f3f311921cd.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_618e2f78b43a4604afe30f3f311921cd.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_618e2f78b43a4604afe30f3f311921cd.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_618e2f78b43a4604afe30f3f311921cd.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_72ae857c5ac041bd913d8d044da544ab.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAPkmcF0AAAAAAAAAAOAAIiALATAAABoAAAAIAAAAAAAAMjkA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAOA4AABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAOBkAAAAgAAAAGgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAcAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAU
OQAAAAAAAEgAAAACAAUAECYAABgSAAABAAAAAAAAACg4AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwBQAoBQAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKKBQAAAoCKBAAAApvEQAACnINAABwbxIAAApvEwAACm8VAAAKCgIoEAAACm8RAAAKcicAAHBv
EgAACm8TAAAKbxUAAAoLAigQAAAKbxEAAApyOQAAcG8SAAAKbxMAAApvFQAACgwCKBAAAApvEQAA
CnJVAABwbxIAAApvEwAACm8VAAAKDQIoEAAACm8RAAAKcmcAAHBvEgAACm8TAAAKbxUAAAoTBAIo
EAAACm8RAAAKcocAAHBvEgAACm8TAAAKbxUAAAoTBQIoEAAACm8RAAAKcp8AAHBvEgAACm8TAAAK
bxUAAAoTBgIoEAAACm8RAAAKcr8AAHBvEgAACm8TAAAKbxUAAAoTB3LPAABwEwhyzwAAcBMJcs8A
AHATCgIoEAAACm8RAAAKcr8AAHBvEgAAChEHcocAAHARBW8WAAAKctEAAHARBm8WAAAKcg0AAHAG
bxYAAApvFwAACgkJbxgAAAoXWRdvGQAACnLzAABwKBoAAAosJwly8wAAcCgbAAAKDQIoEAAACm8R
AAAKclUAAHBvEgAACglvFwAACgIoEAAACm8RAAAKcvcAAHBvEgAACm8TAAAKKBQAAAosFnIPAQBw
CXInAQBwKBwAAAooHQAACiYHB28YAAAKF1kXbxkAAApy8wAAcCgaAAAKLCcHcvMAAHAoGwAACgsC
KBAAAApvEQAACnInAABwbxIAAAoHbxcAAAoCKBAAAApvEQAACnL3AABwbxIAAApvEwAACigUAAAK
LBZyKwEAcAdyJwEAcCgcAAAKKB0AAAomEQQRBG8YAAAKF1kXbxkAAApy8wAAcCgaAAAKLCoRBHLz
AABwKBsAAAoTBAIoEAAACm8RAAAKcmcAAHBvEgAAChEEbxcAAAoCKBAAAApvEQAACnL3AABwbxIA
AApvEwAACigUAAAKLBdyQwEAcBEEcicBAHAoHAAACigdAAAKJgkHEQQoHAAACigeAAAKLQ8JBxEE
KBwAAAooHwAACiYlLBJyaQEAcAkHKBwAAAooHQAACiYJBygbAAAKEwkRCXKBAQBwCCgbAAAKKCAA
AAp+CAAABCUtFyZ+BwAABP4GDAAABnMhAAAKJYAIAAAEKAEAACt+CQAABCUtFyZ+BwAABP4GDQAA
BnMjAAAKJYAJAAAEKAIAACsoAwAAKxMILAtyhwEAcCgdAAAKJhEILSlyrQEAcBMIAigQAAAKbxEA
AApyxQEAcG8SAAAKFowmAAABbxcAAAorMBEIEQlyzwAAcG8WAAAKEwgCKBAAAApvEQAACnLFAQBw
bxIAAAoXjCYAAAFvFwAACgIoEAAACm8RAAAKctUBAHBvEgAAChEIbxcAAAoRCREIKBsAAAoTCgIo
EAAACm8RAAAKcucBAHBvEgAACgkHEQgoHAAACm8XAAAKAigQAAAKbxEAAApy9wAAcG8SAAAKbxMA
AAooFAAACiwSchMCAHARCCgbAAAKKB0AAAomEQhyrQEAcCgaAAAKLDECKBAAAApvEQAACnIpAgBw
bxIAAAoRCnMmAAAKKCcAAAoTCxILKCgAAApvFwAACisfAigQAAAKbxEAAApyKQIAcG8SAAAKckcC
AHBvFwAACgIoEAAACm8RAAAKcvcAAHBvEgAACm8TAAAKKBQAAAosL3JLAgBwAigQAAAKbxEAAApy
KQIAcG8SAAAKbxMAAApvFQAACigbAAAKKB0AAAomAigQAAAKFm8pAAAKKh4CKCoAAAoqHgIoKwAA
CiqufgEAAAQtHnJxAgBw0AMAAAIoLAAACm8tAAAKcy4AAAqAAQAABH4BAAAEKhp+AgAABCoeAoAC
AAAEKhp+AwAABCoeAigvAAAKKi5zCAAABoADAAAEKi5zCwAABoAHAAAEKioDbxgAAAoW/gIqMgNz
JgAACigwAAAKKgAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAARAUAACN+AACw
BQAANAcAACNTdHJpbmdzAAAAAOQMAADkAgAAI1VTAMgPAAAQAAAAI0dVSUQAAADYDwAAQAIAACNC
bG9iAAAAAAAAAAIAAAFXHaIJCQsAAAD6ATMAFgAAAQAAACwAAAAGAAAACQAAAA0AAAADAAAAMAAA
AAIAAAARAAAAAQAAAAIAAAADAAAABAAAAAIAAAABAAAABgAAAAEAAAACAAAAAwAAAAAAlAQBAAAA
AAAGABEDoAUGAKADoAUGAF0CjQUPABQGAAAGAIoCHAUGAPQCHAUGANUCHAUGAIcDHAUGADEDHAUG
AEoDHAUGAKECHAUGALwC7AMKAGUDQwQKANwBQwQGAMwExQQGACUCoAUGALMGxQQGAFAAxQQGAFsB
xQQGAEACjQUGAHAFwAUGADcFBwUOABACfgQOAHECfgQOAPgB8gQKAGwEQwQSAFYGdQESACMBdQEG
APAGxQQGAAgExQQWAP0GcgYWANQGcgYGABsHagAGAFIFagAaACwBYAUGAC0AzAAaADsAYAUGAN8E
xQQGAC4FagAGAFcAxQQGAJUBxQQGADcBxQQGAAwHHAUGAEMFagAAAAAAYQAAAAAAAQABAAEAEADn
BOcAOQABAAEAAAAQAMcFIwZFAAEAAwAAARAAaQYjBmUAAwAHAAMBAACXBgAAPQAEAAoAAyEQAMgA
AABFAAcACgARANEEJAERAMwBKAERABMBLAEGBpMAMAFWgIcGMwFWgKwBMwE2AF0ANwEWAAEAOwEW
ABcAQwFQIAAAAACGAO0EBgABAIQlAAAAAIYYgAUGAAEAjCUAAAAAgxiABQYAAQCUJQAAAACTCGwF
TAEBAMAlAAAAAJMItAFRAQEAxyUAAAAAkwjAAVYBAQDPJQAAAACWCLoGXAECANYlAAAAAIYYgAUG
AAIA3iUAAAAAkRiGBWEBAgDqJQAAAACRGIYFYQECAIwlAAAAAIYYgAUGAAIA9iUAAAAAgwAKAGUB
AgABJgAAAACDACAAagEDAAAAAQDSAwAAAQDYAwAAAQDYAwkAgAUBABEAgAUGABkAgAUKACkAgAUQ
ADEAgAUQADkAgAUQAEEAgAUQAEkAgAUQAFEAgAUQAFkAgAUQAGEAgAUQAGkAgAUGAIEAgAUGAKEA
gAUGAMEAgAUVAHEAjwYqANEAUgYvANkAvAQ0AOEAvgM6AOkA3QQ+AIkABgRDAPEACwFHAOEAyANN
APEAGQRSAPEADwRWAPEAJQdcAPEArAZiAPEArAZoAPkA+AZvAAkBpQZ2AAkBFQd7AAkBYAaCAAwA
gAWQABkBmgGWABQAgAWQABkB2gO7ABkBxgbbADkBgAUQADkBGQToAEEBBgRDANEA4QYBAHEAgAUG
AIkAgAUGAEkBSQHsAEkBCAf1AKkAgAX7AMkAgAUGAGEBZAEDAQgAFAAaAQgAGAAfASkAewCnAS4A
CwB/AS4AEwCIAS4AGwCnAS4AIwCwAS4AKwDZAS4AMwDZAS4AOwDZAS4AQwCwAS4ASwDfAS4AUwDZ
AS4AWwD2AUMAYwAfAUkAewCnAWEAawAfAWMAcwAfAcMAawAfARsAAwABAAQAAwAAAHAFcAEAANQB
dQEAAMwGegECAAQAAwACAAUABQABAAYABQACAAcABwCJALMABIAAAAEAAAASHBRxAAAAAAAAmwAA
AAQAAAAAAAAAAAAAAAgBvwAAAAAADAAAAAAAAAAAAAAAEQEkBAAAAAAEAAAAAAAAAAAAAAAIAcUE
AAAAAAwAAAAAAAAAAAAAABEBdAAAAAAABAAAAAAAAAAAAAAACAFyBgAAAAAEAAAAAAAAAAAAAAAI
AaABAAAAAAAAAAABAAAA0QUAAAUAAgAGAAIARQCvAEkA1QBLAK8AAAAAAAA8PjlfXzBfMAA8TWFp
bj5iX18wXzAAPD45X18wXzEAPE1haW4+Yl9fMF8xAElFbnVtZXJhYmxlYDEASU9yZGVyZWRFbnVt
ZXJhYmxlYDEARnVuY2AyAEludDY0ADw+OQA8TW9kdWxlPgBTeXN0ZW0uSU8ATWljcm9zb2Z0LlNx
bFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AU1RfNzJhZTg1N2M1YWMwNDFiZDkxM2Q4ZDA0NGRh
NTQ0YWIAbXNjb3JsaWIAPD5jAFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljAFNUXzYxOGUyZjc4
YjQzYTQ2MDRhZmUzMGYzZjMxMTkyMWNkAFJlcGxhY2UAZGVmYXVsdEluc3RhbmNlAFZhcmlhYmxl
AEVudW1lcmFibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUARGF0ZVRpbWUA
Z2V0X0NyZWF0aW9uVGltZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFR5cGUAV2hl
cmUAU3lzdGVtLkNvcmUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1
bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNl
AEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2Vy
Tm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVB
dHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0
ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRl
AEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJp
YnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUA
U1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0
ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRfVmFsdWUAc2V0X1ZhbHVlAHZhbHVl
AGYAT3JkZXJCeURlc2NlbmRpbmcAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBT
dWJzdHJpbmcAZ2V0X0xlbmd0aABNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9z
b2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBTY3JpcHRPYmplY3RNb2RlbABTeXN0
ZW0uQ29tcG9uZW50TW9kZWwAU1RfNzJhZTg1N2M1YWMwNDFiZDkxM2Q4ZDA0NGRhNTQ0YWIuZGxs
AGdldF9JdGVtAFN5c3RlbQBFbnVtAHJlc291cmNlTWFuAFRvQm9vbGVhbgBTY3JpcHRNYWluAFN5
c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9u
AEZpbGVJbmZvAEN1bHR1cmVJbmZvAEZpbGVTeXN0ZW1JbmZvAERpcmVjdG9yeUluZm8AU3lzdGVt
LkxpbnEAZ2V0X1Jlc291cmNlTWFuYWdlcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNz
AFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF82MThl
MmY3OGI0M2E0NjA0YWZlMzBmM2YzMTE5MjFjZC5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJj
ZXMARGVidWdnaW5nTW9kZXMAU1RfNjE4ZTJmNzhiNDNhNDYwNGFmZTMwZjNmMzExOTIxY2QuUHJv
cGVydGllcwBnZXRfVmFyaWFibGVzAEdldEZpbGVzAFNldHRpbmdzAFN5c3RlbS5XaW5kb3dzLkZv
cm1zAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAEV4aXN0cwBDb25jYXQAT2JqZWN0AGdl
dF9EZWZhdWx0AExhc3RPckRlZmF1bHQARGlhbG9nUmVzdWx0AHNldF9UYXNrUmVzdWx0AENvbnZl
cnQAU2hvdwBNZXNzYWdlQm94AGdldF9Bc3NlbWJseQBDcmVhdGVEaXJlY3RvcnkAb3BfSW5lcXVh
bGl0eQAAAAtEAGUAYgB1AGcAABlDAHUAcwB0AG8AbQBlAHIAQwBvAGQAZQAAEUYAaQBsAGUAUABh
AHQAaAAAG0YAaQBsAGUARQB4AHQAZQBuAHMAaQBvAG4AABFSAG8AbwB0AFAAYQB0AGgAAB9BAHIA
YwBoAGkAdgBlAEYAaQBsAGUAUABhAHQAaAAAF0kAbgB0AGUAZwByAGEAdABpAG8AbgAAH0kAbgB0
AGUAZwByAGEAdABpAG8AbgBUAHkAcABlAAAPSgBvAGIATgBhAG0AZQAAAQAhSQBuAHQAZQBnAGUA
cgBhAHQAaQBvAG4AVAB5AHAAZQAAA1wAABdVAHMAZQByADoAOgBEAGUAYgB1AGcAABdSAG8AbwB0
AFAAYQB0AGgAOgAgACgAAAMpAAAXRgBpAGwAZQBQAGEAdABoADoAIAAoAAAlQQByAGMAaABpAHYA
ZQBGAGkAbABlAFAAYQB0AGgAOgAgACgAABdGAGkAbABlACAAUABhAHQAaAA6ACAAAAUqAC4AACVT
AGUAdAB0AGkAbgBnACAARgBpAGwAZQAgAFAAYQByAG0AcwAAF04AbwBGAGkAbABlAEUAeABpAHMA
dAAAD1MAdQBjAGMAZQBzAHMAABFGAGkAbABlAE4AYQBtAGUAACtFAHgAYwBlAGwARgB1AGwAbABG
AGkAbABlAFAAYQB0AGgATgBhAG0AZQAAFUYAaQBsAGUAIABOAGEAbQBlACAAAB1VAHMAZQByADoA
OgBGAGkAbABlAFMAaQB6AGUAAAMwAAAlRgBpAGwAZQBTAGkAegBlACAAVgBhAHIAYQBiAGwAZQA6
ACAAAHFTAFQAXwA2ADEAOABlADIAZgA3ADgAYgA0ADMAYQA0ADYAMAA0AGEAZgBlADMAMABmADMA
ZgAzADEAMQA5ADIAMQBjAGQALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBl
AHMAAABp4fOMx1IAQ7mIV1+76N7OAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFdDgcMDg4ODg4O
Dg4ODg4KBCAAEmkEIAASbQUgARJxHAMgABwEAAECHAMgAA4FIAIODg4EIAEBHAMgAAgFIAIOCAgF
AAICDg4FAAIODg4GAAMODg4OBgABEYCBDgQAAQIOBgABEoCJDgYAAh0ODg4GFRJJAg4CBSACARwY
GBABAhUSgJEBHgAVEoCRAR4AFRJJAh4AAgMKAQ4HFRJJAg4RTRkQAgIVEoCVAR4AFRKAkQEeABUS
SQIeAB4BBQoCDhFNDBABAR4AFRKAkQEeAAMgAAoIAAESgKURgKkFIAASgK0HIAIBDhKArQQgABFN
CLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMGElUDBhJZAwYSEAIGCAMGERQDBhIYBwYVEkkC
DgIIBhUSSQIOEU0EAAASVQQAABJZBQABARJZBAAAEhADAAABBCABAg4FIAERTQ4ECAASVQQIABJZ
BAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEA
I1NUXzYxOGUyZjc4YjQzYTQ2MDRhZmUzMGYzZjMxMTkyMWNkAAAFAQAAAAAWAQARQ29weXJpZ2h0
IEAgIDIwMTkAAEcBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlz
cGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3Vy
Y2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5l
dXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5S
dW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAAg5AAAAAAAAAAAAACI5AAAA
IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUOQAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUu
ZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAA
AFhAAAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAA
vQTv/gAAAQAAAAEAFHESHAAAAQAUcRIcPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAAB
AFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAA
AAAAALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAAMAAw
ADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkA
TgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABT
AFQAXwA2ADEAOABlADIAZgA3ADgAYgA0ADMAYQA0ADYAMAA0AGEAZgBlADMAMABmADMAZgAzADEA
MQA5ADIAMQBjAGQAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANwAx
ADgANgAuADIAOAA5ADQAOAAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQA
XwA3ADIAYQBlADgANQA3AGMANQBhAGMAMAA0ADEAYgBkADkAMQAzAGQAOABkADAANAA0AGQAYQA1
ADQANABhAGIALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMA
bwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADEAOQAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBk
AGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0A
ZQAAAFMAVABfADcAMgBhAGUAOAA1ADcAYwA1AGEAYwAwADQAMQBiAGQAOQAxADMAZAA4AGQAMAA0
ADQAZABhADUANAA0AGEAYgAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAA
AABTAFQAXwA2ADEAOABlADIAZgA3ADgAYgA0ADMAYQA0ADYAMAA0AGEAZgBlADMAMABmADMAZgAz
ADEAMQA5ADIAMQBjAGQAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4A
MAAuADcAMQA4ADYALgAyADgAOQA0ADgAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQBy
AHMAaQBvAG4AAAAxAC4AMAAuADcAMQA4ADYALgAyADgAOQA0ADgAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAANDkAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Import Files\Get File Information\Set UserID"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{E9371701-75C5-46B2-B48E-ACFA6A203677}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Set UserID"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="2">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{B29BBDD1-1400-4981-B92F-0054F8224CA9}"
                  SQLTask:SqlStatementSource="&#xA;DECLARE @IntgUserName&#x9;VARCHAR(100) =  ?&#xA;DECLARE @UserID&#x9;&#x9;&#x9;INT&#xA;&#xA;IF NOT EXISTS (SELECT RealName FROM tblUser WHERE RealName = @IntgUserName)&#xA;BEGIN&#xA;&#xA;&#x9;SELECT @UserID=CASE WHEN ISNULL(MIN(UserID),-10) &lt;= -10 THEN ISNULL(MIN(UserID),-10) - 1 ELSE ISNULL(MIN(UserID),-10) END&#xA;&#x9;FROM tblUser&#xA;&#x9;WHERE UserID &lt; 0&#xA;&#xA;&#x9;SET IDENTITY_INSERT tblUser ON&#xA;&#xA;&#x9;INSERT INTO tblUser&#xA;&#x9;(UserID,ApplicationUID,UserRoleUID,SiteUID,GroupID,LoginName,Password,RealName,DistrictUser,CampusID,Email,Active,LDAPUser)&#xA;&#x9;VALUES&#xA;&#x9;(@UserID,2,2,1,0,@IntgUserName,'123454asdf',@IntgUserName,1,0,'support@hayessoft.com',1,0)&#xA;&#xA;&#x9;SET IDENTITY_INSERT tblUser OFF&#xA;&#xA;END&#xA;&#xA;SELECT UserID&#xA;FROM tblUser WHERE RealName = @IntgUserName&#xA;"
                  SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ResultBinding
                    SQLTask:ResultName="UserID"
                    SQLTask:DtsVariableName="User::IntegrationUserID" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="User::Integration"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Import Files\Get File Information\Truncate Staging"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{3140904A-8395-42A5-9653-D5FBD7116EEB}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Truncate Staging"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{3B254E45-1603-4464-B6B4-A3EBA7FA80E1}"
                  SQLTask:SqlStatementSource="TRUNCATE TABLE OneTime.StagingIMCharges&#xA;TRUNCATE TABLE OneTime.StagingIMChargesExceptions" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Import Files\Get File Information.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{7B64D0B9-7A02-4746-980B-851162065BDE}"
              DTS:From="Package\Import Files\Get File Information\Truncate Staging"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Import Files\Get File Information\Get File Name" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Import Files\Import &amp; Stage Data"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{AC54C79B-7F5E-4F54-BD1E-1E9831B6F071}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Import &amp; Stage Data">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:DelayValidation="True"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{5B391B75-4DC5-4E43-A88F-9048F858FBD0}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Import File - Staging"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Data Conversion"
                      componentClassID="Microsoft.DataConvert"
                      contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Data Conversion"
                      name="Data Conversion"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Data Conversion.Inputs[Data Conversion Input]"
                          name="Data Conversion Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Data Conversion.Inputs[Data Conversion Input].Columns[CustomerCode]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="CustomerCode"
                              lineageId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Derived Column.Outputs[Derived Column Output].Columns[CustomerCode]" />
                            <inputColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Data Conversion.Inputs[Data Conversion Input].Columns[ImportFileName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="ImportFileName"
                              lineageId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Derived Column.Outputs[Derived Column Output].Columns[ImportFileName]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Data Conversion.Outputs[Data Conversion Output]"
                          exclusionGroup="1"
                          name="Data Conversion Output"
                          synchronousInputId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Data Conversion.Inputs[Data Conversion Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Data Conversion.Outputs[Data Conversion Output].Columns[DC.CustomerCode]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              length="50"
                              lineageId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Data Conversion.Outputs[Data Conversion Output].Columns[DC.CustomerCode]"
                              name="DC.CustomerCode"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Import Files\Import &amp; Stage Data\Import File - Staging\Derived Column.Outputs[Derived Column Output].Columns[CustomerCode]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Data Conversion.Outputs[Data Conversion Output].Columns[DC.ImportFileName]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              length="100"
                              lineageId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Data Conversion.Outputs[Data Conversion Output].Columns[DC.ImportFileName]"
                              name="DC.ImportFileName"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Import Files\Import &amp; Stage Data\Import File - Staging\Derived Column.Outputs[Derived Column Output].Columns[ImportFileName]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Data Conversion.Outputs[Data Conversion Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Data Conversion Error Output"
                          synchronousInputId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Data Conversion.Inputs[Data Conversion Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Derived Column"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Derived Column"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Derived Column.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Derived Column.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Derived Column.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Derived Column.Outputs[Derived Column Output].Columns[CustomerCode]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="50"
                              lineageId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Derived Column.Outputs[Derived Column Output].Columns[CustomerCode]"
                              name="CustomerCode"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">@[User::CustomerCode]</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">@[User::CustomerCode]</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Derived Column.Outputs[Derived Column Output].Columns[ImportFileName]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="100"
                              lineageId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Derived Column.Outputs[Derived Column Output].Columns[ImportFileName]"
                              name="ImportFileName"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">@[User::FileName]</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">@[User::FileName]</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Derived Column.Outputs[Derived Column Output].Columns[Integration]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="100"
                              lineageId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Derived Column.Outputs[Derived Column Output].Columns[Integration]"
                              name="Integration"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">@[User::Integration]</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">@[User::Integration]</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Derived Column.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Derived Column.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source"
                      componentClassID="Microsoft.ExcelSource"
                      contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Excel Source"
                      name="Excel Source"
                      usesDispositions="true"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">Sheet1$</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="The variable that contains the SQL command to be executed."
                          name="SqlCommandVariable"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">0</property>
                        <property
                          dataType="System.String"
                          description="The mapping from parameters in the SQL command to variables."
                          name="ParameterMapping"></property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[Source - Excel Charges]"
                          connectionManagerRefId="Package.ConnectionManagers[Source - Excel Charges]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output]"
                          name="Excel Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output].Columns[Student ID]"
                              dataType="r8"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Student ID]"
                              lineageId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output].Columns[Student ID]"
                              name="Student ID"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output].Columns[First]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[First]"
                              length="255"
                              lineageId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output].Columns[First]"
                              name="First"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output].Columns[Middle]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Middle]"
                              length="255"
                              lineageId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output].Columns[Middle]"
                              name="Middle"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output].Columns[Last]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Last]"
                              length="255"
                              lineageId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output].Columns[Last]"
                              name="Last"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output].Columns[Grade]"
                              dataType="r8"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Grade]"
                              lineageId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output].Columns[Grade]"
                              name="Grade"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output].Columns[Home Room]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Home Room]"
                              length="255"
                              lineageId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output].Columns[Home Room]"
                              name="Home Room"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output].Columns[ISBN]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[ISBN]"
                              length="255"
                              lineageId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output].Columns[ISBN]"
                              name="ISBN"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output].Columns[Title]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Title]"
                              length="255"
                              lineageId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output].Columns[Title]"
                              name="Title"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output].Columns[Accession]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Accession]"
                              length="255"
                              lineageId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output].Columns[Accession]"
                              name="Accession"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output].Columns[Date]"
                              dataType="date"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Date]"
                              lineageId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output].Columns[Date]"
                              name="Date"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output].Columns[Price]"
                              dataType="r8"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Price]"
                              lineageId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output].Columns[Price]"
                              name="Price"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output].Columns[Status]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Status]"
                              length="255"
                              lineageId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output].Columns[Status]"
                              name="Status"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output].Columns[SiteID]"
                              dataType="r8"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[SiteID]"
                              lineageId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output].Columns[SiteID]"
                              name="SiteID"
                              truncationRowDisposition="FailComponent" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Student ID]"
                              dataType="r8"
                              name="Student ID" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[First]"
                              dataType="wstr"
                              length="255"
                              name="First" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Middle]"
                              dataType="wstr"
                              length="255"
                              name="Middle" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Last]"
                              dataType="wstr"
                              length="255"
                              name="Last" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Grade]"
                              dataType="r8"
                              name="Grade" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Home Room]"
                              dataType="wstr"
                              length="255"
                              name="Home Room" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[ISBN]"
                              dataType="wstr"
                              length="255"
                              name="ISBN" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Title]"
                              dataType="wstr"
                              length="255"
                              name="Title" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Accession]"
                              dataType="wstr"
                              length="255"
                              name="Accession" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Date]"
                              dataType="date"
                              name="Date" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Price]"
                              dataType="r8"
                              name="Price" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Status]"
                              dataType="wstr"
                              length="255"
                              name="Status" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[SiteID]"
                              dataType="r8"
                              name="SiteID" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Error Output]"
                          isErrorOut="true"
                          name="Excel Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Error Output].Columns[SiteID]"
                              dataType="r8"
                              lineageId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Error Output].Columns[SiteID]"
                              name="SiteID" />
                            <outputColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Student ID]"
                              dataType="r8"
                              lineageId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Student ID]"
                              name="Student ID" />
                            <outputColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Error Output].Columns[First]"
                              dataType="wstr"
                              length="255"
                              lineageId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Error Output].Columns[First]"
                              name="First" />
                            <outputColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Middle]"
                              dataType="wstr"
                              length="255"
                              lineageId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Middle]"
                              name="Middle" />
                            <outputColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Last]"
                              dataType="wstr"
                              length="255"
                              lineageId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Last]"
                              name="Last" />
                            <outputColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Grade]"
                              dataType="r8"
                              lineageId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Grade]"
                              name="Grade" />
                            <outputColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Home Room]"
                              dataType="wstr"
                              length="255"
                              lineageId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Home Room]"
                              name="Home Room" />
                            <outputColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Error Output].Columns[ISBN]"
                              dataType="wstr"
                              length="255"
                              lineageId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Error Output].Columns[ISBN]"
                              name="ISBN" />
                            <outputColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Title]"
                              dataType="wstr"
                              length="255"
                              lineageId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Title]"
                              name="Title" />
                            <outputColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Accession]"
                              dataType="wstr"
                              length="255"
                              lineageId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Accession]"
                              name="Accession" />
                            <outputColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Date]"
                              dataType="date"
                              lineageId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Date]"
                              name="Date" />
                            <outputColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Price]"
                              dataType="r8"
                              lineageId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Price]"
                              name="Price" />
                            <outputColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Status]"
                              dataType="wstr"
                              length="255"
                              lineageId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Status]"
                              name="Status" />
                            <outputColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Generate File Row Numbers"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;11"
                      description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                      name="Generate File Row Numbers"
                      version="9">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Stores the source code of the component"
                          isArray="true"
                          name="SourceCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="30">
                            <arrayElement
                              dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    int row = 1;
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        Row.FileRowID = row;
        row = row + 1;
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 FileRowID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool FileRowID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_fdb63209a9bf49859947062484c5dcdb.Properties.Settings.get_Default():SC_fdb63209a9bf49859947062484c5dcdb.Properties.Sett" +
    "ings")]

namespace SC_fdb63209a9bf49859947062484c5dcdb.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_fdb63209a9bf49859947062484c5dcdb.csproj]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{0A7EE898-4356-4939-831F-52FA6BB9ACF7}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_fdb63209a9bf49859947062484c5dcdb</RootNamespace>
    <AssemblyName>SC_fdb63209a9bf49859947062484c5dcdb</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Project]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_fdb63209a9bf49859947062484c5dcdb</msb:CodeName>
		<msb:DisplayName>SC_fdb63209a9bf49859947062484c5dcdb</msb:DisplayName>
		<msb:ProjectId>{21396DCB-C3E3-4922-9F05-70B901F95060}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_fdb63209a9bf49859947062484c5dcdb.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_fdb63209a9bf49859947062484c5dcdb")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_fdb63209a9bf49859947062484c5dcdb")]
[assembly: AssemblyCopyright("Copyright @  2019")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_fdb63209a9bf49859947062484c5dcdb.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_fdb63209a9bf49859947062484c5dcdb.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_fdb63209a9bf49859947062484c5dcdb.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_fdb63209a9bf49859947062484c5dcdb.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_fdb63209a9bf49859947062484c5dcdb.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Stores the binary representation of the component"
                          isArray="true"
                          name="BinaryCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="2">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_fdb63209a9bf49859947062484c5dcdb.dll]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDADHuZl0AAAAAAAAAAOAAIiALATAAABIAAAAIAAAAAAAAHjEA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAMwwAABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAJBEAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAA
MQAAAAAAAEgAAAACAAUApCEAAHAOAAABAAAAAAAAABQwAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACipuAwJ7AQAABG8GAAAGAgJ7AQAA
BBdYfQEAAAQqOgIXfQEAAAQCKAoAAAYqKgIDBAUoEgAACio6AhYDjBoAAAEoEwAACipaAywIAhYo
FAAACipyAQAAcHMVAAAKeh4CKBYAAAoqHgIoFwAACip+AigYAAAKAgJzDgAABn0CAAAEAgJzDwAA
Bn0DAAAEKpIEcp4AAHAabxkAAAosFQIFAgMoGgAACg4EcwUAAAZvDAAABipKKwcCA28NAAAGA28I
AAAGLfEqBio6AigbAAAKAgN9BAAABCo6AigbAAAKAgN9BQAABCoeAigbAAAKKq5+BgAABC0ecq4A
AHDQBwAAAigcAAAKbx0AAApzHgAACoAGAAAEfgYAAAQqGn4HAAAEKh4CgAcAAAQqGn4IAAAEKh4C
KB8AAAoqLnMVAAAGgAgAAAQqAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAAk
BQAAI34AAJAFAAAgBgAAI1N0cmluZ3MAAAAAsAsAACABAAAjVVMA0AwAABAAAAAjR1VJRAAAAOAM
AACQAQAAI0Jsb2IAAAAAAAAAAgAAAVcVoAEJAQAAAPoBMwAWAAABAAAAIAAAAAgAAAAIAAAAFgAA
AA8AAAAfAAAAEAAAAAMAAAAFAAAABgAAAAEAAAAEAAAAAQAAAAAA/gIBAAAAAAAGAPgBUgQGAIwC
UgQGAEQBPwQPAMYEAAAGAHEBlAMGANsBlAMGALwBlAMGAHMClAMGABgClAMGADEClAMGAIgBlAMG
AKMBxwIKAEwCkQAKABEEkQAOAAIEkQAKAN0DkQAKAIwFkQAGAE8FTAMGACcBPwQGACIEcgQGANED
fwMSAPcA6AISAFgB6AISAN8AagMGAAwBUgQGAAEATAMGAKYDTAMGAOECTAMGAMADTAMGALIATAMG
AGMATAMGABUGlAMAAAAABwAAAAAAAQABAAEAEABfAwAAEAABAAEAAQAQAPUDAAA5AAIABQABABAA
bgUAAEUAAgAKAAEAEABDBQAASQAEAA4AAQAQAAQFAABJAAUADwAAABAAeQTVBEkABgAQAAABEAAz
BdUEYQAIABQAAQANBmMABgBDBWYABgAEBWoAAQB8BW4AAQB8BW4AEQBTA3IAEQDPAHYAEQBTAHoA
UCAAAAAAxgCqAgYAAQBYIAAAAADGALUCBgABAGAgAAAAAMYA7gV+AAEAfCAAAAAAhhgyBAYAAgCL
IAAAAACGGDIEGwACAJYgAAAAAIYIGAABAAUApSAAAAAAhggmA4QABgC8IAAAAACGAAUGKwAHAMQg
AAAAAIYAVgUrAAcAzCAAAAAAhhgyBAYABwDsIAAAAADGAOEFiQAHABEhAAAAAMYB2gV+AAsAJCEA
AAAAxgHuBX4ADAAmIQAAAACGGDIEkwANADUhAAAAAIYYMgSTAA4ARCEAAAAAgxgyBAYADwBMIQAA
AACTCB4EmQAPAHghAAAAAJMItwCeAA8AfyEAAAAAkwjDAKMADwCHIQAAAACWCGIFqQAQAI4hAAAA
AIYYMgQGABAAliEAAAAAkRg4BK4AEAAAAAEACQYAAAEAFwQAAAIADgUAAAMA6wMAAAEAwQIAAAEA
wQIAAAEAEAAAAAIAhwAAAAMAFwQAAAQA6wMAAAEAFwQAAAEACQYAAAEAkgUAAAEAkgUAAAEAwQIJ
ADIEAQARADIEBgAZADIECgApADIEEAAxADIEEAA5ADIEEABBADIEEABJADIEEABRADIEEABZADIE
EABhADIEEABpADIEBgCZADIEBgC5ADIEFQDJADIEBgCJAKoCBgCJALUCBgBxADIEGwBxAEMDJQBx
ADsDAQDZADIEEABxAAUGKwBxAFYFKwCJADIEBgDhADwFLwCJACIFNgCRADIEBgDxAHUAPADxABEG
QwChADIESQDBADIEBgAuAAsAyQAuABMA0gAuABsA8QAuACMA+gAuACsAIwEuADMAIwEuADsAIwEu
AEMA+gAuAEsAKQEuAFMAIwEuAFsAQAFDAGMAigFpAHMA8QCJAHMA8QDjAGsAigEBAXsAigEDAAEA
BwADAAgABQAAABwAsgAAACoDtgAAACIEugAAANcAvwAAAGYFxAABAAYAAwABAAcABQACABEABwAC
ABIACQABABMACQACABQACwAEgAAAAQAAAAAAAAAAAAAAAAAmAAAABAAAAAAAAAAAAAAAUQBKAAAA
AAAMAAAAAAAAAAAAAABaAJwFAAAAAAwAAAAAAAAAAAAAAFoAuQUAAAAABAAAAAAAAAAAAAAAUQBM
AwAAAAAAAAAAAQAAAIMEAAAAAABJbnQzMgA8TW9kdWxlPgBJbnB1dElEAHNldF9GaWxlUm93SUQA
U0NfZmRiNjMyMDlhOWJmNDk4NTk5NDcwNjI0ODRjNWRjZGIAbXNjb3JsaWIAZGVmYXVsdEluc3Rh
bmNlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAElucHV0TmFtZQBNaWNyb3Nv
ZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBUeXBlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJl
c291cmNlQ3VsdHVyZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBFZGl0b3JCcm93c2FibGVTdGF0
ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRl
AERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0
bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0
cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9u
QXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0
QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21wb25lbnRF
bnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0
aWJpbGl0eUF0dHJpYnV0ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAHZhbHVlAFN5c3RlbS5SdW50
aW1lLlZlcnNpb25pbmcAU3RyaW5nAFN5c3RlbS5Db21wb25lbnRNb2RlbABTQ19mZGI2MzIwOWE5
YmY0OTg1OTk0NzA2MjQ4NGM1ZGNkYi5kbGwAc2V0X0ZpbGVSb3dJRF9Jc051bGwAU2V0TnVsbABz
ZXRfSXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlv
bgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBJbnZhbGlkT3BlcmF0aW9u
RXhjZXB0aW9uAFN0cmluZ0NvbXBhcmlzb24AQ3VsdHVyZUluZm8AT3V0cHV0TmFtZU1hcABPdXRw
dXRNYXAASW5wdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1ZmZlcgBnZXRfUmVzb3Vy
Y2VNYW5hZ2VyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUu
Q29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDX2ZkYjYzMjA5YTliZjQ5ODU5OTQ3
MDYyNDg0YzVkY2RiLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2Rl
cwBTQ19mZGI2MzIwOWE5YmY0OTg1OTk0NzA2MjQ4NGM1ZGNkYi5Qcm9wZXJ0aWVzAFZhcmlhYmxl
cwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbkluZGV4ZXMAU2V0dGluZ3MARXF1YWxzAENv
bm5lY3Rpb25zAE9iamVjdABFbmRPZlJvd3NldABnZXRfRGVmYXVsdABVc2VyQ29tcG9uZW50AFBh
cmVudENvbXBvbmVudABTY3JpcHRDb21wb25lbnQATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlw
dABNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABJbnB1dDBfUHJvY2Vzc0lucHV0AElu
cHV0MF9Qcm9jZXNzSW5wdXRSb3cATmV4dFJvdwByb3cAZ2V0X0Fzc2VtYmx5AAAAAICbSQBzAE4A
dQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0ACAAdABv
ACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8AIAB0AGgA
ZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAAAPSQBuAHAAdQB0ACAAMAAAcVMAQwBf
AGYAZABiADYAMwAyADAAOQBhADkAYgBmADQAOQA4ADUAOQA5ADQANwAwADYAMgA0ADgANABjADUA
ZABjAGQAYgAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAT1zJofx3
DUq0qKppCl+XCAAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERWQkgAwESPR0IEkEFIAIBCBwDIAAC
BiACAg4RdQUgAR0ICAYAARJ5EX0FIAASgIEHIAIBDhKAgQi3elxWGTTgiQiJhF3NgIDMkQIGCAMG
EhQDBhIYAwYSRQMGElEDBhJVAwYSIAUgAQESDAQgAQECCSAEAQgOEj0SQQUgAQESRQQAABJRBAAA
ElUFAAEBElUEAAASIAMAAAEDKAAIAygAAgQIABJRBAgAElUECAASIAgBAAgAAAAAAB4BAAEAVAIW
V3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU0NfZmRiNjMyMDlhOWJmNDk4NTk5
NDcwNjI0ODRjNWRjZGIAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxOQAASQEAGi5ORVRGcmFt
ZXdvcmssVmVyc2lvbj12NC41AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29y
ayA0LjUEAQAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFk
ZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5
VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNl
dAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAA9DAAAAAAAAAAAAAADjEAAAAgAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAxAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAA7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAw
ADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEA
bgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAA
AAAAUwBDAF8AZgBkAGIANgAzADIAMAA5AGEAOQBiAGYANAA5ADgANQA5ADkANAA3ADAANgAyADQA
OAA0AGMANQBkAGMAZABiAAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADAALgAwAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwBmAGQAYgA2ADMA
MgAwADkAYQA5AGIAZgA0ADkAOAA1ADkAOQA0ADcAMAA2ADIANAA4ADQAYwA1AGQAYwBkAGIALgBk
AGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcA
aAB0ACAAQAAgACAAMgAwADEAOQAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBz
AAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfAGYA
ZABiADYAMwAyADAAOQBhADkAYgBmADQAOQA4ADUAOQA5ADQANwAwADYAMgA0ADgANABjADUAZABj
AGQAYgAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwBmAGQA
YgA2ADMAMgAwADkAYQA5AGIAZgA0ADkAOAA1ADkAOQA0ADcAMAA2ADIANAA4ADQAYwA1AGQAYwBk
AGIAAAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAA
OAAIAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAACAxAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                          name="VSTAProjectName"
                          typeConverter="NOTBROWSABLE">SC_fdb63209a9bf49859947062484c5dcdb</property>
                        <property
                          dataType="System.String"
                          description="Specifies the programming language used by the script."
                          name="ScriptLanguage"
                          typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read-only variables."
                          name="ReadOnlyVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read/write variables."
                          name="ReadWriteVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                        <property
                          dataType="System.String"
                          description="List of breakpoints present on the script."
                          isArray="true"
                          name="BreakpointCollection"
                          typeConverter="NOTBROWSABLE">
                          <arrayElements
                            arrayElementCount="0" />
                        </property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataChecksum140"
                          typeConverter="NOTBROWSABLE">FD</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataShaChecksum"
                          typeConverter="NOTBROWSABLE">0be4c5100b56534077288e3b83d46e5822167b50</property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataChecksum"
                          typeConverter="NOTBROWSABLE">a2b7bea489908bb5703993c1aa8c3944</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Generate File Row Numbers.Inputs[Input 0]"
                          hasSideEffects="true"
                          name="Input 0">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Generate File Row Numbers.Outputs[Output 0]"
                          name="Output 0"
                          synchronousInputId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Generate File Row Numbers.Inputs[Input 0]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Generate File Row Numbers.Outputs[Output 0].Columns[FileRowID]"
                              dataType="i4"
                              lineageId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Generate File Row Numbers.Outputs[Output 0].Columns[FileRowID]"
                              name="FileRowID" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Insert into Staging"
                      componentClassID="Microsoft.OLEDBDestination"
                      contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                      description="OLE DB Destination"
                      name="Insert into Staging"
                      usesDispositions="true"
                      version="4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[OneTime].[StagingIMCharges]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepIdentity">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                          name="FastLoadOptions">TABLOCK,ROWS_PER_BATCH = 500</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                          name="FastLoadMaxInsertCommitSize">2147483647</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[Target - IntegrationMiddleWay]"
                          connectionManagerRefId="Package.ConnectionManagers[Target - IntegrationMiddleWay]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].Columns[First]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="First"
                              externalMetadataColumnId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[First]"
                              lineageId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output].Columns[First]" />
                            <inputColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].Columns[Middle]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="Middle"
                              externalMetadataColumnId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[Middle]"
                              lineageId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output].Columns[Middle]" />
                            <inputColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].Columns[Last]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="Last"
                              externalMetadataColumnId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[Last]"
                              lineageId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output].Columns[Last]" />
                            <inputColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].Columns[Grade]"
                              cachedDataType="r8"
                              cachedName="Grade"
                              externalMetadataColumnId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[Grade]"
                              lineageId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output].Columns[Grade]" />
                            <inputColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].Columns[ISBN]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="ISBN"
                              externalMetadataColumnId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[ISBN]"
                              lineageId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output].Columns[ISBN]" />
                            <inputColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].Columns[Title]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="Title"
                              externalMetadataColumnId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[Title]"
                              lineageId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output].Columns[Title]" />
                            <inputColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].Columns[Accession]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="Accession"
                              externalMetadataColumnId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[Accession]"
                              lineageId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output].Columns[Accession]" />
                            <inputColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].Columns[Date]"
                              cachedDataType="date"
                              cachedName="Date"
                              externalMetadataColumnId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[Date]"
                              lineageId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output].Columns[Date]" />
                            <inputColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].Columns[Price]"
                              cachedDataType="r8"
                              cachedName="Price"
                              externalMetadataColumnId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[Price]"
                              lineageId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output].Columns[Price]" />
                            <inputColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].Columns[Status]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="Status"
                              externalMetadataColumnId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[Status]"
                              lineageId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output].Columns[Status]" />
                            <inputColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].Columns[Student ID]"
                              cachedDataType="r8"
                              cachedName="Student ID"
                              externalMetadataColumnId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[StudentID]"
                              lineageId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output].Columns[Student ID]" />
                            <inputColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].Columns[Home Room]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="Home Room"
                              externalMetadataColumnId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[HomeRoom]"
                              lineageId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output].Columns[Home Room]" />
                            <inputColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].Columns[DC.ImportFileName]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="DC.ImportFileName"
                              externalMetadataColumnId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[ImportFileName]"
                              lineageId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Data Conversion.Outputs[Data Conversion Output].Columns[DC.ImportFileName]" />
                            <inputColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].Columns[DC.CustomerCode]"
                              cachedDataType="wstr"
                              cachedLength="50"
                              cachedName="DC.CustomerCode"
                              externalMetadataColumnId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[CustomerCode]"
                              lineageId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Data Conversion.Outputs[Data Conversion Output].Columns[DC.CustomerCode]" />
                            <inputColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].Columns[SiteID]"
                              cachedDataType="r8"
                              cachedName="SiteID"
                              externalMetadataColumnId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[SiteID]"
                              lineageId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output].Columns[SiteID]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[StudentID]"
                              dataType="wstr"
                              length="255"
                              name="StudentID" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[First]"
                              dataType="wstr"
                              length="255"
                              name="First" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[Middle]"
                              dataType="wstr"
                              length="255"
                              name="Middle" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[Last]"
                              dataType="wstr"
                              length="255"
                              name="Last" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[Grade]"
                              dataType="wstr"
                              length="255"
                              name="Grade" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[HomeRoom]"
                              dataType="wstr"
                              length="255"
                              name="HomeRoom" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[ISBN]"
                              dataType="wstr"
                              length="255"
                              name="ISBN" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[Title]"
                              dataType="wstr"
                              length="255"
                              name="Title" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[Accession]"
                              dataType="wstr"
                              length="255"
                              name="Accession" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[Date]"
                              dataType="wstr"
                              length="255"
                              name="Date" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[Price]"
                              dataType="cy"
                              name="Price" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[Status]"
                              dataType="wstr"
                              length="255"
                              name="Status" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[Exception]"
                              dataType="bool"
                              name="Exception" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[ExceptionReason]"
                              dataType="wstr"
                              length="255"
                              name="ExceptionReason" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[ImportFileName]"
                              dataType="wstr"
                              length="255"
                              name="ImportFileName" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[CustomerCode]"
                              dataType="wstr"
                              length="255"
                              name="CustomerCode" />
                            <externalMetadataColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[SiteID]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="SiteID" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Outputs[OLE DB Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Destination Error Output"
                          synchronousInputId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Row Count"
                      componentClassID="Microsoft.RowCount"
                      contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                      name="Row Count">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the variable to hold the row count."
                          name="VariableName">User::RowCount</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Row Count.Inputs[Row Count Input 1]"
                          hasSideEffects="true"
                          name="Row Count Input 1">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Row Count.Outputs[Row Count Output 1]"
                          name="Row Count Output 1"
                          synchronousInputId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Row Count.Inputs[Row Count Input 1]">
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging.Paths[Data Conversion Output]"
                      endId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Row Count.Inputs[Row Count Input 1]"
                      name="Data Conversion Output"
                      startId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Data Conversion.Outputs[Data Conversion Output]" />
                    <path
                      refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging.Paths[Derived Column Output]"
                      endId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Data Conversion.Inputs[Data Conversion Input]"
                      name="Derived Column Output"
                      startId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Derived Column.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging.Paths[Excel Source Output]"
                      endId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Derived Column.Inputs[Derived Column Input]"
                      name="Excel Source Output"
                      startId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source.Outputs[Excel Source Output]" />
                    <path
                      refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging.Paths[Output 0]"
                      endId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input]"
                      name="Output 0"
                      startId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Generate File Row Numbers.Outputs[Output 0]" />
                    <path
                      refId="Package\Import Files\Import &amp; Stage Data\Import File - Staging.Paths[Row Count Output 1]"
                      endId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Generate File Row Numbers.Inputs[Input 0]"
                      name="Row Count Output 1"
                      startId="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Row Count.Outputs[Row Count Output 1]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Import Files\Setting Defaults"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{0C88BFB6-D8B3-40D4-B0B1-53198FC0392B}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Setting Defaults">
          <DTS:Variables />
          <DTS:Executables />
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Import Files\Succuess - Dashbaord and Integration Reporting"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:Disabled="True"
          DTS:DTSID="{C863A370-CF02-47C3-AD29-4F38BA9D09BF}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Succuess - Dashbaord and Integration Reporting">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Import Files\Succuess - Dashbaord and Integration Reporting\Create Report - Successful"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:Description="Script Task"
              DTS:DTSID="{E5F56730-E0AD-4B61-AD4A-0854E9C7ED09}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Create Report - Successful"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_ff5ff8590cd148c0a13bba8a9acf59b9"
                  VSTAMajorVersion="3"
                  VSTAMinorVersion="0"
                  Language="VisualBasic"
                  ReadOnlyVariables="User::CustomerCode,User::CustomerFullName,User::Debug,User::FileName,User::Integration,User::IntegrationType,User::ReportHideExceptionColumnsInventory,User::ReportHideExceptionColumnsPurchaseOrder,User::ReportHideExceptionColumnsStatus,User::ReportsPath,User::RowCount">
                  <ProjectItem
                    Name="My Project\AssemblyInfo.vb"
                    Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("ST_8a64a78dc3a14df19e76c1106e01c2b8")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("ST_8a64a78dc3a14df19e76c1106e01c2b8")> 
<Assembly: AssemblyCopyright("Copyright @  2019")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("ed9e13df-5893-4099-9b0a-40a2bc478d99")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
                  <ProjectItem
                    Name="ST_ff5ff8590cd148c0a13bba8a9acf59b9.vbproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{5F8123A6-B37B-45C0-A49E-367FFC845768}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>My Project</AppDesignerFolder>
    <RootNamespace>ST_8a64a78dc3a14df19e76c1106e01c2b8</RootNamespace>
    <AssemblyName>ST_ff5ff8590cd148c0a13bba8a9acf59b9</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ScriptMain.vb">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="My Project\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="My Project\Settings.Designer.vb"
                    Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_ff5ff8590cd148c0a13bba8a9acf59b9</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_ff5ff8590cd148c0a13bba8a9acf59b9</msb:DisplayName>
		<msb:ProjectId>{B06BBCCD-C41B-46B3-B661-C8E1FD1AD4B2}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_ff5ff8590cd148c0a13bba8a9acf59b9.vbproj"/>
		<msb:File Include="My Project\AssemblyInfo.vb"/>
		<msb:File Include="ScriptMain.vb"/>
		<msb:File Include="My Project\Resources.resx"/>
		<msb:File Include="My Project\Resources.Designer.vb"/>
		<msb:File Include="My Project\Settings.settings"/>
		<msb:File Include="My Project\Settings.Designer.vb"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.vb"
                    Encoding="UTF8"><![CDATA[#Region "Help:  Introduction to the script task"
'The Script Task allows you to perform virtually any operation that can be accomplished in
'a .Net application within the context of an Integration Services control flow. 

'Expand the other regions which have "Help" prefixes for examples of specific ways to use
'Integration Services features within this script task.
#End Region


#Region "Imports"
Imports System
Imports System.Data
Imports System.Math
Imports Microsoft.SqlServer.Dts.Runtime
#End Region

'ScriptMain is the entry point class of the script.  Do not change the name, attributes,
'or parent of this class.
<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute()> _
<System.CLSCompliantAttribute(False)> _
Partial Public Class ScriptMain
    Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

#Region "Help:  Using Integration Services variables and parameters in a script"
    'To use a variable in this script, first ensure that the variable has been added to 
    'either the list contained in the ReadOnlyVariables property or the list contained in 
    'the ReadWriteVariables property of this script task, according to whether or not your
    'code needs to write to the variable.  To add the variable, save this script, close this instance of
    'Visual Studio, and update the ReadOnlyVariables and 
    'ReadWriteVariables properties in the Script Transformation Editor window.
    'To use a parameter in this script, follow the same steps. Parameters are always read-only.

    'Example of reading from a variable:
    ' startTime = Dts.Variables("System::StartTime").Value

    'Example of writing to a variable:
    ' Dts.Variables("User::myStringVariable").Value = "new value"

    'Example of reading from a package parameter:
    ' batchId = Dts.Variables("$Package::batchId").Value

    'Example of reading from a project parameter:
    ' batchId = Dts.Variables("$Project::batchId").Value

    'Example of reading from a sensitive project parameter:
    ' batchId = Dts.Variables("$Project::batchId").GetSensitiveValue()
#End Region

#Region "Help:  Firing Integration Services events from a script"
    'This script task can fire events for logging purposes.

    'Example of firing an error event:
    ' Dts.Events.FireError(18, "Process Values", "Bad value", "", 0)

    'Example of firing an information event:
    ' Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, fireAgain)

    'Example of firing a warning event:
    ' Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0)
#End Region

#Region "Help:  Using Integration Services connection managers in a script"
    'Some types of connection managers can be used in this script task.  See the topic 
    '"Working with Connection Managers Programatically" for details.

    'Example of using an ADO.Net connection manager:
    ' Dim rawConnection As Object = Dts.Connections("Sales DB").AcquireConnection(Dts.Transaction)
    ' Dim myADONETConnection As SqlConnection = CType(rawConnection, SqlConnection)
    ' <Use the connection in some code here, then release the connection>
    ' Dts.Connections("Sales DB").ReleaseConnection(rawConnection)

    'Example of using a File connection manager
    ' Dim rawConnection As Object = Dts.Connections("Prices.zip").AcquireConnection(Dts.Transaction)
    ' Dim filePath As String = CType(rawConnection, String)
    ' <Use the connection in some code here, then release the connection>
    ' Dts.Connections("Prices.zip").ReleaseConnection(rawConnection)
#End Region

    'This method is called when this script task executes in the control flow.
    'Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
    'To open Help, press F1.

    Public Sub Main()
        'User::CustomerCode,User::CustomerFullName,User::Debug,User::FileName,User::Integration,User::IntegrationType,
        'User:   ReportHideExceptionColumnsInventory, User: ReportHideExceptionColumnsPurchaseOrder, User: ReportHideExceptionColumnsStatus, User: ReportsPath, User: RowCount
        Dim ReportPath As String = CType(Dts.Variables("ReportsPath").Value, String)
        Dim HideExceptionColumnsInventory As String = CType(Dts.Variables("ReportHideExceptionColumnsInventory").Value, String)
        Dim HideExceptionColumnsPurchaseOrder As String = CType(Dts.Variables("ReportHideExceptionColumnsPurchaseOrder").Value, String)
        Dim HideExceptionColumnsStatus As String = CType(Dts.Variables("ReportHideExceptionColumnsStatus").Value, String)
        Dim RowCount As String = CType(Dts.Variables("RowCount").Value, String)
        Dim CustomerCode As String = CType(Dts.Variables("CustomerCode").Value, String)
        Dim CustomerFullName As String = CType(Dts.Variables("CustomerFullName").Value, String)
        Dim Integration As String = CType(Dts.Variables("Integration").Value, String)
        Dim IntegrationType As String = CType(Dts.Variables("IntegrationType").Value, String)
        Dim FileNames As String = CType(Dts.Variables("FileName").Value, String)
        Dim ReportDate As String = Today.ToShortDateString.ToString()

        Dim URL As String = "http://hayessqlsvr/ReportServer/Pages/ReportViewer.aspx?%2fDataIntergration%2fIntegrationDefaultReportImport&rs:Command=Render"

        'Parm 1
        URL = URL + "&RowCount=" + RowCount

        'Parm 2 
        URL = URL + "&IntegrationName=" + Integration

        'Parm 3
        URL = URL + "&IntegrationType=" + IntegrationType

        'Parm 4
        URL = URL + "&ReportDate=" + ReportDate

        'Parm 5
        URL = URL + "&FileNames=" + FileNames

        'Parm 6
        URL = URL + "&CustomerFullName=" + CustomerFullName

        'Parm 7
        URL = URL + "&CustomerCode=" + CustomerCode

        'Parm 8
        URL = URL + "&IntegrationStatus=Successful"

        'Parm 9
        URL = URL + "&DisplayExceptionColumnsStatus=" + HideExceptionColumnsStatus

        'Parm 10
        URL = URL + "&DisplayExceptionColumnsInventory=" + HideExceptionColumnsInventory

        'Parm 11
        URL = URL + "&DisplayExceptionColumnsPurchaseOrder=" + HideExceptionColumnsPurchaseOrder

        'Appending Export to Excel and Toolbar
        URL = URL + "&rs:Format=Excel&rc:Toolbar=False"

        'for Testing
        'MessageBox.Show(URL, "URL for Report", MessageBoxButtons.OK)

        Dim httpConn As ConnectionManager = Dts.Connections("ReportServer")
        Dim clientConn As HttpClientConnection = New HttpClientConnection(httpConn.AcquireConnection(Nothing))

        Dim ReportFileName As String = ReportPath + CustomerCode + "_" + Integration + "_" + IntegrationType + "_Report_" + Format(Now, "MMddyyyy") + "_" + Format(Now, "HHmm") + ".xls"

        clientConn.ServerURL = URL

        clientConn.DownloadFile(ReportFileName, True)

        Dts.TaskResult = ScriptResults.Success
    End Sub

#Region "ScriptResults declaration"
    'This enum provides a convenient shorthand within the scope of this class for setting the
    'result of the script.

    'This code was generated automatically.
    Enum ScriptResults
        Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
        Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
    End Enum

#End Region

End Class]]></ProjectItem>
                  <ProjectItem
                    Name="My Project\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="My Project\Resources.Designer.vb"
                    Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
                  <BinaryItem
                    Name="ST_ff5ff8590cd148c0a13bba8a9acf59b9.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDADTuZl0AAAAAAAAAAOAAIiALAVAAACIAAAAIAAAAAAAAekEA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAChBAABPAAAAAGAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAgCEAAAAgAAAAIgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAYAAAAAYAAAAkAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAKgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABc
QQAAAAAAAEgAAAACAAUACCUAAGgbAAABAAAAAAAAAHBAAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBgAAAoqHgIoGQAACiqmcxoAAAqAAQAABHMbAAAKgAIA
AARzHAAACoADAAAEcx0AAAqABAAABCoufgEAAARvHgAACioufgIAAARvHwAACioufgMAAARvIAAA
CioufgQAAARvIQAACioeAigiAAAKKq5+BQAABC0ecgEAAHDQBQAAAigjAAAKbyQAAApzJQAACoAF
AAAEfgUAAAQqGn4GAAAEKh4CgAYAAAQqQnMiAAAKKCYAAAqACAAABCoeAignAAAKKgAAGzABAD8A
AAAAAAAAfgcAAAQtMn4IAAAEKCYAAAooKAAACn4HAAAELRxzDQAABoAHAAAE3hB+CAAABCgmAAAK
KCkAAArcfgcAAAQqAAEQAAACAB0ADCkAEAAAAAAeAigqAAAKKhMwBQDfAgAAAQAAEQIoKwAACm8s
AAAKcjMAAHBvLQAACm8uAAAKKC8AAAoKAigrAAAKbywAAApySwAAcG8tAAAKby4AAAooLwAACgsC
KCsAAApvLAAACnKTAABwby0AAApvLgAACigvAAAKDAIoKwAACm8sAAAKcuMAAHBvLQAACm8uAAAK
KC8AAAoNAigrAAAKbywAAApyJQEAcG8tAAAKby4AAAooLwAAChMEAigrAAAKbywAAApyNwEAcG8t
AAAKby4AAAooLwAAChMFAigrAAAKbywAAApyUQEAcG8tAAAKby4AAAooLwAAChMGAigrAAAKbywA
AApycwEAcG8tAAAKby4AAAooLwAAChMHAigrAAAKbywAAApyiwEAcG8tAAAKby4AAAooLwAAChMI
AigrAAAKbywAAApyqwEAcG8tAAAKby4AAAooLwAAChMJKDAAAAoTDxIPKDEAAApvMgAAChMKcr0B
AHATCxELcrwCAHARBCgzAAAKEwsRC3LSAgBwEQcoMwAAChMLEQty9gIAcBEIKDMAAAoTCxELchoD
AHARCigzAAAKEwsRC3I0AwBwEQkoMwAAChMLEQtyTAMAcBEGKDMAAAoTCxELcnIDAHARBSgzAAAK
EwsRC3KQAwBwKDQAAAoTCxELcswDAHAJKDMAAAoTCxELcgwEAHAHKDMAAAoTCxELclIEAHAIKDMA
AAoTCxELcqAEAHAoNAAAChMLAigrAAAKbzUAAApy5AQAcG82AAAKEwwRDBRvNwAACigmAAAKczgA
AAoTDR8LjTIAAAElFgaiJRcRBaIlGHL+BABwoiUZEQeiJRpy/gQAcKIlGxEIoiUccgIFAHCiJR0o
OQAACownAAABchQFAHAoOgAACqIlHnL+BABwoiUfCSg5AAAKjCcAAAFyJgUAcCg6AAAKoiUfCnIw
BQBwoig7AAAKEw4RDRELbzwAAAoRDREOF289AAAKAigrAAAKFm8+AAAKKjYCAygmAAAKKD8AAAoq
HgIoQAAACiou0AgAAAIoIwAACioeAihBAAAKKgAAABMwAQAUAAAAAgAAEQKMBQAAGy0IKAEAACsK
KwICCgYqIgP+FQUAABsqAAAAEzACACgAAAADAAARAntDAAAKb0QAAAoKBowIAAAbLRIoAgAAKwoC
e0MAAAoGb0UAAAoGKkoCKCIAAAoCc0YAAAp9QwAACioAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAz
MTkAAAAABQBsAAAANAgAACN+AACgCAAAyAkAACNTdHJpbmdzAAAAAGgSAAA8BQAAI1VTAKQXAAAQ
AAAAI0dVSUQAAAC0FwAAtAMAACNCbG9iAAAAAAAAAAIAAAFXHaIJCQ8AAAD6ATMAFgAAAQAAADUA
AAAKAAAADAAAABkAAAAEAAAARgAAAAIAAAA3AAAAAwAAAAQAAAAIAAAACQAAAAgAAAABAAAABQAA
AAEAAAADAAAAAwAAAAIAAAAAAHwFAQAAAAAABgCpAxkIBgBOBBkIBgCAAloHDwC/CAAABgDBAikG
BgCMAykGBgA1BCkGBgDJAykGBgDiAykGBgAIAykGBgD9A60FBgCtAtMHBgApAtMHBgBUAykGBgAj
A6gECgBMAvQGCgAUAmYFCgCUAmYFDgDsAakHDgAqB20HBgA8A1oHDgDYAvIHDgDwAuMABgBTCa0F
DgAQB6kHDgBxA+MABgCfAa0FDgABACoFCgA3ArkFBgDSBjkIBgBiBhQGCgD8Af8FBgBjAloHEgAT
BAEFEgDQAQEFBgDdBK0FFgDiBnwBFgBNBnwBBgBzAa0FBgC0Ba0FBgA2Aa0FBgC/CSkGBgASCRkI
BgBSB5cEEgBUBQEFFgDSCHwBFgAtAXwBDgD2CPIHDgBnAeMABgDWBK0FFgAGCXwBDgDcCOMABgA7
B60FAAAAAHMAAAAAAAEAAQAAAAAA8QWKCU0AAQABAAAAAAAoB4oJUQABAAIAAAEQAFoJiglhAAEA
AwAAAAAAewhKCGEABQAIAAABEADkCCsAgQAHAAwAAQAAANYFKwCNAAkADwAFAQAAmwcAAGEACQAR
AAUBAAAQAAAAYQAJABgAAgEAADEJAAChAAoAGgAxAJcGTgExAG4GVgExAIIGXgExALAGZgERADMH
bgERAMQBcgERAGwEdgERAE0JegEhAHgJDAEGBtIAfQFWgCEJgAFWgKQBgAFQIAAAAAAGGEUHBgAB
AFggAAAAAAYYRQcGAAEAYCAAAAAAERhLB4QBAQCKIAAAAAATCBsHiAEBAJYgAAAAABMI4QWNAQEA
oiAAAAAAEwgMB5IBAQCuIAAAAAATCIsHlwEBALogAAAAAAMYRQcGAAEAwiAAAAAAFgjOBpwBAQDu
IAAAAAAWCKwBoQEBAPUgAAAAABYIuAGmAQEA/SAAAAAAERhLB4QBAgAOIQAAAAAGGEUHBgACABgh
AAAAABYIdASsAQIAdCEAAAAABhhFBwYAAgB8IQAAAAAGANwFBgACAGckAAAAAMYC7wjkAAIAdSQA
AAAAxgIhAekAAwB9JAAAAACDAJwBsQEDAIkkAAAAAMYC1ASqAAMAlCQAAAAAEQC/ALYBAwC0JAAA
AAABAKsAvgEEALogAAAAAAYYRQcGAAUAwCQAAAAAAwgIAUoABQD0JAAAAAAGGEUHBgAFAAAAAQCR
BAAAAQBsBgAAAQAYAQAAAQAYAQkARQcBABEARQcGABkARQcKACkARQcQADEARQcQADkARQcQAEEA
RQcQAEkARQcQAFEARQcQAFkARQcVAGEARQcVAGkARQcQAHEARQcQAHkARQcQAIEARQcaAJEARQcg
AKkARQcGALEARQcGALkARQcGANEARQcmAOkARQcQAAkBRQcGABEBRQcGAJkARQcGAKEARQcGAAwA
RQcGABQARQcGABwARQcGACQARQcGAAwACAFKABQACAFKABwACAFKACQACAFKAMEARQcGANkASAFP
ANkAuwlXAPEARQddAFkBiARlAAEBRQcGAGEBFQdqAGEBZAlqABkBRQcGABkBKQmIAGkBzgiOAHEB
pAWUAHkBdASbAIEB1ASfAIkBsQmkADkBwgSqAJEB1ASqAJEBPwmuAJEBPwm1AGkBAgm7AJkBpAXB
ACkBOwbIADEBRQfNAIkBggmkAKEBRgnSAJEBPwnYADEBfAAQADEBWgHeAGkBaQkBAMEA7wjkAMEA
IQHpAMEA1ASqAKkB+QD1ADQAeAkMATwAdARKADwAfgQjATwARQcGAAgALABEAQgAMABJASkAqwBu
Ay4ACwDuAS4AEwD3AS4AGwAWAi4AIwAfAi4AKwBIAi4AMwBIAi4AOwAfAi4AQwBOAi4ASwBIAi4A
UwBlAi4AWwBIAi4AYwBrAi4AawCVAi4AcwCiAkAAiwBJAUAAgwDqAkMAewDzAkMAgwDqAkkAqwB/
A2MAewDzAmMAgwDqAmkAqwCTA4AAiwBJAYMAkwBJAYMAmwBJAYMAewDzAokAqwCgA6AAiwBJAakA
gwAWAsAAiwBJAckAgwAWAuAAiwBJAeMAuwBJAeMAUwBIAukAswBJAQMBgwDqAgMBowAMAyMBgwDq
AiMBWwBIAiACgwDqAiACiwBJAUACgwDqAkACiwBJAWACgwDqAmACiwBJAYACgwDqAoACiwBJAaAC
iwBJAcACiwBJAeACiwBJAeACgwDqAgADiwBJASADiwBJASADgwDqAm8A7QAAAQQAAQAFAAUABgAH
AAkACAAAACoHxgEAAPMFywEAABAH0AEAAJ0H1QEAANIG2gEAAMgB3wEAAJEE5AEAAAwB6QECAAQA
AwACAAUABQACAAYABwACAAcACQACAAkACwACAAoADQABAAsADQACAA4ADwACABgAEQAuADUAPABD
APIABQEUARsBBIAAAAEAAAAAAAAAAAAAAAAATwAAAAQAAAAAAAAAAAAAACkB2gAAAAAABAAAAAAA
AAAAAAAAKQGtBQAAAAAKAAAAAAAAAAAAAAAyAeMAAAAAAAwAAAAAAAAAAAAAADsB4gQAAAAADAAA
AAAAAAAAAAAAOwGKAAAAAAAAAAAAAQAAAIcIAAAIAAQACQAEAAoABwAAABAAEgCpAAAAEAArAKkA
AAAAAC0AqQCFAPsAhQAeAQAAAENvbnRleHRWYWx1ZWAxAFRocmVhZFNhZmVPYmplY3RQcm92aWRl
cmAxAFNUXzhhNjRhNzhkYzNhMTRkZjE5ZTc2YzExMDZlMDFjMmI4AFNUX2ZmNWZmODU5MGNkMTQ4
YzBhMTNiYmE4YTlhY2Y1OWI5ADxNb2R1bGU+AHNldF9TZXJ2ZXJVUkwATWljcm9zb2Z0LlNxbFNl
cnZlci5NYW5hZ2VkRFRTAFQARGlzcG9zZV9fSW5zdGFuY2VfXwBDcmVhdGVfX0luc3RhbmNlX18A
dmFsdWVfXwBtc2NvcmxpYgBNaWNyb3NvZnQuVmlzdWFsQmFzaWMAQ3JlYXRlSW5zdGFuY2UAZ2V0
X0dldEluc3RhbmNlAGluc3RhbmNlAEdldEhhc2hDb2RlAFZhcmlhYmxlAFJ1bnRpbWVUeXBlSGFu
ZGxlAEdldFR5cGVGcm9tSGFuZGxlAERvd25sb2FkRmlsZQBEYXRlQW5kVGltZQBEYXRlVGltZQBN
aWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAEdldFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVy
ZQBzZXRfQ3VsdHVyZQBfcmVzQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBw
bGljYXRpb25CYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRl
AEd1aWRBdHRyaWJ1dGUASGVscEtleXdvcmRBdHRyaWJ1dGUAR2VuZXJhdGVkQ29kZUF0dHJpYnV0
ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9y
QnJvd3NhYmxlQXR0cmlidXRlAENvbVZpc2libGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJp
YnV0ZQBTdGFuZGFyZE1vZHVsZUF0dHJpYnV0ZQBIaWRlTW9kdWxlTmFtZUF0dHJpYnV0ZQBBc3Nl
bWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUARGVidWdnZXJI
aWRkZW5BdHRyaWJ1dGUAQXNzZW1ibHlGaWxlVmVyc2lvbkF0dHJpYnV0ZQBNeUdyb3VwQ29sbGVj
dGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVs
YXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJp
Z2h0QXR0cmlidXRlAENMU0NvbXBsaWFudEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9p
bnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5
QXR0cmlidXRlAG1fVmFsdWUAZ2V0X1ZhbHVlAHNldF9WYWx1ZQBHZXRPYmplY3RWYWx1ZQBTeXN0
ZW0uVGhyZWFkaW5nAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVG9TaG9ydERhdGVTdHJpbmcA
VG9TdHJpbmcATWF0aABNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNx
bFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuTXlTZXJ2
aWNlcy5JbnRlcm5hbABTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1Rf
ZmY1ZmY4NTkwY2QxNDhjMGExM2JiYThhOWFjZjU5YjkuZGxsAGdldF9JdGVtAFN5c3RlbQBFbnVt
AFN5c3RlbS5Db21wb25lbnRNb2RlbC5EZXNpZ24AU2NyaXB0TWFpbgBnZXRfQXBwbGljYXRpb24A
TXlBcHBsaWNhdGlvbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBT
eXN0ZW0uUmVmbGVjdGlvbgBBY3F1aXJlQ29ubmVjdGlvbgBIdHRwQ2xpZW50Q29ubmVjdGlvbgBD
dWx0dXJlSW5mbwBtX0FwcE9iamVjdFByb3ZpZGVyAG1fVXNlck9iamVjdFByb3ZpZGVyAG1fQ29t
cHV0ZXJPYmplY3RQcm92aWRlcgBtX015V2ViU2VydmljZXNPYmplY3RQcm92aWRlcgBnZXRfUmVz
b3VyY2VNYW5hZ2VyAENvbm5lY3Rpb25NYW5hZ2VyAFN5c3RlbS5Db2RlRG9tLkNvbXBpbGVyAGdl
dF9Vc2VyAEVudGVyAGdldF9Db21wdXRlcgBNeUNvbXB1dGVyAF9yZXNNZ3IAQWN0aXZhdG9yAC5j
dG9yAC5jY3RvcgBNb25pdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBNaWNyb3NvZnQuVmlzdWFsQmFz
aWMuRGV2aWNlcwBnZXRfV2ViU2VydmljZXMATXlXZWJTZXJ2aWNlcwBNaWNyb3NvZnQuVmlzdWFs
QmFzaWMuQXBwbGljYXRpb25TZXJ2aWNlcwBTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMA
TWljcm9zb2Z0LlZpc3VhbEJhc2ljLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJ1bnRpbWUuQ29t
cGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUXzhhNjRhNzhkYzNhMTRkZjE5ZTc2YzEx
MDZlMDFjMmI4Lk15LlJlc291cmNlcwBNeVJlc291cmNlcwBTVF84YTY0YTc4ZGMzYTE0ZGYxOWU3
NmMxMTA2ZTAxYzJiOC5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAGdldF9WYXJp
YWJsZXMAU3RyaW5ncwBNeVNldHRpbmdzAEVxdWFscwBDb252ZXJzaW9ucwBnZXRfQ29ubmVjdGlv
bnMAUnVudGltZUhlbHBlcnMAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAQ29uY2F0AEZv
cm1hdABtX1N5bmNPYmplY3QATXlQcm9qZWN0AEV4aXQAc2V0X1Rhc2tSZXN1bHQAbV9Db250ZXh0
AGdldF9Ob3cAU1RfOGE2NGE3OGRjM2ExNGRmMTllNzZjMTEwNmUwMWMyYjguTXkAZ2V0X1RvZGF5
AGdldF9Bc3NlbWJseQAAMU0AeQAuAFIAZQBzAG8AdQByAGMAZQBzAC4ATQB5AFIAZQBzAG8AdQBy
AGMAZQBzAAAXUgBlAHAAbwByAHQAcwBQAGEAdABoAABHUgBlAHAAbwByAHQASABpAGQAZQBFAHgA
YwBlAHAAdABpAG8AbgBDAG8AbAB1AG0AbgBzAEkAbgB2AGUAbgB0AG8AcgB5AABPUgBlAHAAbwBy
AHQASABpAGQAZQBFAHgAYwBlAHAAdABpAG8AbgBDAG8AbAB1AG0AbgBzAFAAdQByAGMAaABhAHMA
ZQBPAHIAZABlAHIAAEFSAGUAcABvAHIAdABIAGkAZABlAEUAeABjAGUAcAB0AGkAbwBuAEMAbwBs
AHUAbQBuAHMAUwB0AGEAdAB1AHMAABFSAG8AdwBDAG8AdQBuAHQAABlDAHUAcwB0AG8AbQBlAHIA
QwBvAGQAZQAAIUMAdQBzAHQAbwBtAGUAcgBGAHUAbABsAE4AYQBtAGUAABdJAG4AdABlAGcAcgBh
AHQAaQBvAG4AAB9JAG4AdABlAGcAcgBhAHQAaQBvAG4AVAB5AHAAZQAAEUYAaQBsAGUATgBhAG0A
ZQAAgP1oAHQAdABwADoALwAvAGgAYQB5AGUAcwBzAHEAbABzAHYAcgAvAFIAZQBwAG8AcgB0AFMA
ZQByAHYAZQByAC8AUABhAGcAZQBzAC8AUgBlAHAAbwByAHQAVgBpAGUAdwBlAHIALgBhAHMAcAB4
AD8AJQAyAGYARABhAHQAYQBJAG4AdABlAHIAZwByAGEAdABpAG8AbgAlADIAZgBJAG4AdABlAGcA
cgBhAHQAaQBvAG4ARABlAGYAYQB1AGwAdABSAGUAcABvAHIAdABJAG0AcABvAHIAdAAmAHIAcwA6
AEMAbwBtAG0AYQBuAGQAPQBSAGUAbgBkAGUAcgAAFSYAUgBvAHcAQwBvAHUAbgB0AD0AACMmAEkA
bgB0AGUAZwByAGEAdABpAG8AbgBOAGEAbQBlAD0AACMmAEkAbgB0AGUAZwByAGEAdABpAG8AbgBU
AHkAcABlAD0AABkmAFIAZQBwAG8AcgB0AEQAYQB0AGUAPQAAFyYARgBpAGwAZQBOAGEAbQBlAHMA
PQAAJSYAQwB1AHMAdABvAG0AZQByAEYAdQBsAGwATgBhAG0AZQA9AAAdJgBDAHUAcwB0AG8AbQBl
AHIAQwBvAGQAZQA9AAA7JgBJAG4AdABlAGcAcgBhAHQAaQBvAG4AUwB0AGEAdAB1AHMAPQBTAHUA
YwBjAGUAcwBzAGYAdQBsAAA/JgBEAGkAcwBwAGwAYQB5AEUAeABjAGUAcAB0AGkAbwBuAEMAbwBs
AHUAbQBuAHMAUwB0AGEAdAB1AHMAPQAARSYARABpAHMAcABsAGEAeQBFAHgAYwBlAHAAdABpAG8A
bgBDAG8AbAB1AG0AbgBzAEkAbgB2AGUAbgB0AG8AcgB5AD0AAE0mAEQAaQBzAHAAbABhAHkARQB4
AGMAZQBwAHQAaQBvAG4AQwBvAGwAdQBtAG4AcwBQAHUAcgBjAGgAYQBzAGUATwByAGQAZQByAD0A
AEMmAHIAcwA6AEYAbwByAG0AYQB0AD0ARQB4AGMAZQBsACYAcgBjADoAVABvAG8AbABiAGEAcgA9
AEYAYQBsAHMAZQAAGVIAZQBwAG8AcgB0AFMAZQByAHYAZQByAAADXwAAEV8AUgBlAHAAbwByAHQA
XwAAEU0ATQBkAGQAeQB5AHkAeQAACUgASABtAG0AAAkuAHgAbABzAAAAAFjF48GtMnRKgQ6AEV/r
d1MABCABAQgDIAABBSABARERBCABAQ4EIAEBAgUgAgEODgUgAQERRQcgBAEODg4OBhUSJAESDAYV
EiQBEggGFRIkARJlBhUSJAESIAQgABMABwABEm0RgKUFIAASgKkHIAIBDhKAqQQAARwcBAABARwY
BxAODg4ODg4ODg4ODg4SgJUSgJkOEYCdBSAAEoC1BSAAEoC5BiABEoC9HAMgABwEAAEOHAUAABGA
nQMgAA4GAAMODg4OBQACDg4OBSAAEoDNBiABEoCVHAQgARwcBCABARwFAAIOHA4FAAEOHQ4FIAIB
DgIEIAECHAMgAAgEBwEeAAIeAAUQAQAeAAQKAR4ABAcBEwAGFRIkARMABwYVEnEBEwAGFRJxARMA
AhMABAoBEwAFIAEBEwAIt3pcVhk04IkIsD9ffxHVCjoIiYRdzYCAzJEEAAAAAAQBAAAABwYVEiQB
EgwHBhUSJAESCAcGFRIkARJlBwYVEiQBEiADBhJ5AwYSfQMGEhgCBhwCBggDBhEoAwAAAQQAABIM
BAAAEggEAAASZQQAABIgBAAAEnkEAAASfQUAAQESfQQAABIYBCAAEm0HEAEBHgAeAAcwAQEBEB4A
BAgAEgwECAASCAQIABJlBAgAEiAECAASeQQIABJ9BAgAEhgEKAATAAgBAAgAAAAAAB4BAAEAVAIW
V3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfOGE2NGE3OGRjM2ExNGRmMTll
NzZjMTEwNmUwMWMyYjgAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxOQAABQEAAQAAKQEAJGVk
OWUxM2RmLTU4OTMtNDA5OS05YjBhLTQwYTJiYzQ3OGQ5OQAADAEABzEuMC4wLjAAAEcBABouTkVU
RnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFt
ZXdvcmsgNAgBAAEAAAAAABgBAApNeVRlbXBsYXRlCDExLjAuMC4wAABhAQA0U3lzdGVtLldlYi5T
ZXJ2aWNlcy5Qcm90b2NvbHMuU29hcEh0dHBDbGllbnRQcm90b2NvbBJDcmVhdGVfX0luc3RhbmNl
X18TRGlzcG9zZV9fSW5zdGFuY2VfXwAAABABAAtNeS5Db21wdXRlcgAAEwEADk15LkFwcGxpY2F0
aW9uAAAMAQAHTXkuVXNlcgAAEwEADk15LldlYlNlcnZpY2VzAAC0AAAAzsrvvgEAAACRAAAAbFN5
c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAs
IEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0u
UmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAUEEAAAAA
AAAAAAAAakEAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFxBAAAAAAAAAAAAAAAAX0NvckRsbE1h
aW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAA
AAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAA
AOwDAAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+
AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBh
AHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAA
sARMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAwADAANABi
ADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEA
bQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABf
ADgAYQA2ADQAYQA3ADgAZABjADMAYQAxADQAZABmADEAOQBlADcANgBjADEAMQAwADYAZQAwADEA
YwAyAGIAOAAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAA
AHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8AZgBmADUAZgBmADgANQA5ADAA
YwBkADEANAA4AGMAMABhADEAMwBiAGIAYQA4AGEAOQBhAGMAZgA1ADkAYgA5AC4AZABsAGwAAABI
ABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAA
IAAgADIAMAAxADkAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAA
AHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAFQAXwBmAGYANQBmAGYA
OAA1ADkAMABjAGQAMQA0ADgAYwAwAGEAMQAzAGIAYgBhADgAYQA5AGEAYwBmADUAOQBiADkALgBk
AGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBUAF8AOABhADYANABhADcA
OABkAGMAMwBhADEANABkAGYAMQA5AGUANwA2AGMAMQAxADAANgBlADAAMQBjADIAYgA4AAAANAAI
AAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgACAABAEEA
cwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAAB8MQAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Import Files\Succuess - Dashbaord and Integration Reporting\Email Report"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{7072A896-CFFD-4E7A-A093-FCA09BF8BDDC}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Email Report"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{B29BBDD1-1400-4981-B92F-0054F8224CA9}"
                  SQLTask:SqlStatementSource="DECLARE @EmailCC&#x9;&#x9;VARCHAR(200) = ?&#xA;DECLARE @EmailTo&#x9;&#x9;VARCHAR(100) = ?&#xA;DECLARE @FilePath&#x9;&#x9;VARCHAR(200) = ?&#xA;DECLARE @CustomerCode&#x9;VARCHAR(50)  = ?&#xA;DECLARE @IntegrationType VARCHAR(200) = ?&#xA;DECLARE @Integration&#x9;VARCHAR(200) = ?&#xA;DECLARE @EmailSubject&#x9;VARCHAR(200)&#xA;&#xA;DECLARE @Body  VARCHAR(500) = 'Attached is your Hayes Software Systems Report for ' &#xA;DECLARE @FileName VARCHAR(200) &#xA;&#xA;&#xA;SELECT @Body = @Body + CAST(CAST(GETDATE() AS DATE) AS VARCHAR(50)),@FileName= @FilePath + @CustomerCode + '_' + @Integration + '_' + @IntegrationType + '_Report_' +&#xA;replicate('0', 2 - len(DATEPART(mm,GETDATE()))) + cast (DATEPART(mm,GETDATE()) as varchar) +&#xA;replicate('0', 2 - len(DATEPART(DD,GETDATE()))) + cast (DATEPART(DD,GETDATE()) as varchar) +&#xA;replicate('0', 4 - len(DATEPART(YYYY,GETDATE()))) + cast (DATEPART(YYYY,GETDATE()) as varchar) + '_' +&#xA;replicate('0', 2 - len(DATEPART(HH,GETDATE()))) + cast (DATEPART(HH,GETDATE()) as varchar) +&#xA;replicate('0', 2 - len(DATEPART(MI,GETDATE()))) + cast (DATEPART(MI,GETDATE()) as varchar) +&#xA;'.xls',@EmailSubject =  @CustomerCode + ' ' + @Integration + ' ' + @IntegrationType + ' Integration Report'&#xA;&#xA;IF @EmailCC IS NOT NULL&#xA;BEGIN&#xA; EXEC msdb.dbo.sp_send_dbmail @profile_name='TIPWEBIMEmail',&#xA; @recipients=@EmailTo,&#xA; @copy_recipients =@EmailCC,&#xA; @subject= @EmailSubject,&#xA; @file_attachments=@FileName,&#xA; @body=@Body&#xA;END &#xA;ELSE&#xA;BEGIN&#xA; EXEC msdb.dbo.sp_send_dbmail @profile_name='TIPWEBIMEmail',&#xA; @recipients=@EmailTo,&#xA; @copy_recipients =@EmailTo,&#xA; @subject=@EmailSubject,&#xA; @file_attachments=@FileName,&#xA; @body=@Body&#xA;END&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="User::EMailCC"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="1"
                    SQLTask:DtsVariableName="User::EmailTo"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="2"
                    SQLTask:DtsVariableName="User::ReportsPath"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="3"
                    SQLTask:DtsVariableName="User::CustomerCode"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="4"
                    SQLTask:DtsVariableName="User::IntegrationType"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="5"
                    SQLTask:DtsVariableName="User::Integration"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Import Files\Succuess - Dashbaord and Integration Reporting\Insert File Details in Dashboard"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{5CB2A9CC-1952-4B90-BE9C-ED82782C6EE3}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Insert File Details in Dashboard"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{B194E9DA-F23A-457A-A340-58E7ECEAB209}"
                  SQLTask:SqlStatementSource="&#xA;DECLARE @CustomerName   VARCHAR(100) = ?&#xA;DECLARE @JobName    VARCHAR(100) = ?&#xA;DECLARE @IntergrationType  VARCHAR(100) = ?&#xA;DECLARE @FileSize    INT = ?&#xA;DECLARE @RootPath    VARCHAR(200) = ?&#xA;DECLARE @ExportPath    VARCHAR(100) = ?&#xA;DECLARE @ArchivePath   VARCHAR(100) = ?&#xA;DECLARE @FileName    VARCHAR(100) = ?&#xA;DECLARE @TaskFailure   BIT = ?&#xA;DECLARE @JobID     INT &#xA;DECLARE @TaskErrorMessage  VARCHAR(MAX) = 'Error In Creating File'&#xA;DECLARE @TaskName    VARCHAR(100) = 'Export'&#xA;&#xA;SELECT @JobID=id FROM FileExist WHERE Job_Name=@JobName AND client=@CustomerName AND category=@IntergrationType&#xA;&#xA;IF (@JobID IS NULL)&#xA;BEGIN&#xA;&#xA;  IF @TaskFailure=0&#xA;  BEGIN&#xA;   INSERT INTO TaskOnError&#xA;   (Client,JobName,Error_ID,StartTime,EndTime,Message,TaskName,LastModifiedDate,Category)&#xA;   VALUES&#xA;   (@CustomerName,@JobName,1,GETDATE(),GETDATE(),@TaskErrorMessage,@TaskName,GETDATE(),@IntergrationType)&#xA;  END &#xA;&#xA; INSERT INTO FileExist&#xA; (Client,Job_Name,FileCheck,FileName,FileSize,File_Rcvd_Date,Check_Time,Category)&#xA; VALUES&#xA; (@CustomerName,@JobName,CASE WHEN @TaskFailure = 1 THEN 0 ELSE 1 END,&#xA; ISNULL(@RootPath + @ExportPath + @ArchivePath + @FileName,'No File Was Created'),&#xA; ISNULL(@FileSize,0),GETDATE(),GETDATE(),@IntergrationType)&#xA;&#xA;END&#xA;ELSE&#xA;BEGIN&#xA;&#xA;  IF @TaskFailure=0&#xA;  BEGIN&#xA;   INSERT INTO TaskOnError&#xA;   (Client,JobName,Error_ID,StartTime,EndTime,Message,TaskName,LastModifiedDate,Category)&#xA;   VALUES&#xA;   (@CustomerName,@JobName,1,GETDATE(),GETDATE(),@TaskErrorMessage,@TaskName,GETDATE(),@IntergrationType)&#xA;  END &#xA;&#xA;  UPDATE FileExist&#xA;  SET filesize = @FileSize,&#xA;      filename = ISNULL(@RootPath + @ExportPath + @ArchivePath + @FileName,'No File Was Created'),&#xA;   file_rcvd_date = GETDATE(),&#xA;   check_time = GETDATE(),&#xA;   filecheck = CASE WHEN @TaskFailure = 1 THEN 0 ELSE 1 END&#xA;  WHERE id = @JobID&#xA;&#xA;END" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="User::CustomerCode"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="1"
                    SQLTask:DtsVariableName="User::JobName"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="2"
                    SQLTask:DtsVariableName="User::IntegrationDataType"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="3"
                    SQLTask:DtsVariableName="User::FileSize"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="131"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="4"
                    SQLTask:DtsVariableName="User::RootPath"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="5"
                    SQLTask:DtsVariableName="User::FilePath"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="6"
                    SQLTask:DtsVariableName="User::ArchiveFilePath"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="7"
                    SQLTask:DtsVariableName="User::FileName"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="8"
                    SQLTask:DtsVariableName="User::Success"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="17"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Import Files\Succuess - Dashbaord and Integration Reporting\Insert RowStats"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{FE06D488-CACD-40EC-804D-C306319B0286}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Insert RowStats"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{3B254E45-1603-4464-B6B4-A3EBA7FA80E1}"
                  SQLTask:SqlStatementSource="DECLARE @FileName VARCHAR(100) = ?&#xA;&#xA;INSERT INTO ETL.RawImportStats&#xA;(RawDataImportDate,FileName,TotalRowsInFile,TotalRowsImported,TotalRowsInETL)&#xA;&#xA;SELECT GETDATE() AS RawDataImportDate,@FileName AS FileName, MAX(RowID) AS TotalRowsInFile,COUNT(*) AS TotalRowsImported,MAX(RowID) AS TotalRowsInETL &#xA;FROM ETL.StagingInventories" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="User::FileName"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Import Files\Succuess - Dashbaord and Integration Reporting.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{362FF4D8-1304-4DEB-BEC1-C5A09C1950A2}"
              DTS:From="Package\Import Files\Succuess - Dashbaord and Integration Reporting\Create Report - Successful"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Import Files\Succuess - Dashbaord and Integration Reporting\Insert File Details in Dashboard" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Import Files\Succuess - Dashbaord and Integration Reporting.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{1EEC9707-6456-48D0-8152-FFC3AEDA7EAC}"
              DTS:EvalOp="3"
              DTS:Expression="@EmailSend == True"
              DTS:From="Package\Import Files\Succuess - Dashbaord and Integration Reporting\Insert RowStats"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\Import Files\Succuess - Dashbaord and Integration Reporting\Email Report" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Import Files\Succuess - Dashbaord and Integration Reporting.PrecedenceConstraints[Constraint 2]"
              DTS:CreationName=""
              DTS:DTSID="{06EB6F58-F06D-4220-9116-1AA1383EF01F}"
              DTS:From="Package\Import Files\Succuess - Dashbaord and Integration Reporting\Insert File Details in Dashboard"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 2"
              DTS:To="Package\Import Files\Succuess - Dashbaord and Integration Reporting\Insert RowStats" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Import Files.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{6F71827B-CE7B-4C0F-AA05-0940720C381E}"
          DTS:From="Package\Import Files\Import &amp; Stage Data"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Import Files\General Data Cleanup" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Import Files.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{A6241D9B-7491-4EF3-AFB2-DB15DD41EAF5}"
          DTS:From="Package\Import Files\General Data Cleanup"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Import Files\Setting Defaults" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Import Files.PrecedenceConstraints[Constraint 10]"
          DTS:CreationName=""
          DTS:DTSID="{AC6FAB4E-A3E9-458B-AEE9-FEE5B432EE23}"
          DTS:From="Package\Import Files\Setting Defaults"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 10"
          DTS:To="Package\Import Files\Exceptions" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Import Files.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{8E75D461-4D0A-493E-98E9-E949F0C0D8A4}"
          DTS:From="Package\Import Files\Exceptions"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Import Files\Charges" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Import Files.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{B5CA4643-FCE5-40B6-BEAF-8F5FA2B3D11F}"
          DTS:From="Package\Import Files\Succuess - Dashbaord and Integration Reporting"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\Import Files\Archive File Process" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Import Files.PrecedenceConstraints[Constraint 4]"
          DTS:CreationName=""
          DTS:DTSID="{D8826D42-F37A-4537-8EA0-3B87EAB73D50}"
          DTS:EvalOp="3"
          DTS:Expression="@Success == True"
          DTS:From="Package\Import Files\Get File Information"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 4"
          DTS:To="Package\Import Files\Import &amp; Stage Data" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Import Files.PrecedenceConstraints[Constraint 6]"
          DTS:CreationName=""
          DTS:DTSID="{4E313899-54D0-4595-BF36-82FC7D6F5BCB}"
          DTS:From="Package\Import Files\Charges"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 6"
          DTS:To="Package\Import Files\Succuess - Dashbaord and Integration Reporting" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{52591D79-7D7B-4453-A174-32C682C0DA31}"
      DTS:EvalOp="3"
      DTS:Expression="@[User::FileCount] &gt; 0"
      DTS:From="Package\Archieve Cleanup and Counter Set"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Import Files" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{71F395A0-84BD-4580-922A-27515117E468}"
      DTS:EvalOp="3"
      DTS:Expression="@[User::FileCount] == 0"
      DTS:From="Package\Archieve Cleanup and Counter Set"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Failure - Dashbaord and Integration Reporting" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql12">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="156,42"
          Id="Package\Archieve Cleanup and Counter Set\Number of Files"
          TopLeft="91,57" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="357,194"
          Size="357,237"
          Id="Package\Archieve Cleanup and Counter Set"
          TopLeft="640.869047619045,179" />
        <NodeLayout
          Size="191,42"
          Id="Package\Failure - Dashbaord and Integration Reporting\Create Report - Failure"
          TopLeft="59,20" />
        <NodeLayout
          Size="143,42"
          Id="Package\Failure - Dashbaord and Integration Reporting\Email Report"
          TopLeft="81,185" />
        <NodeLayout
          Size="232,42"
          Id="Package\Failure - Dashbaord and Integration Reporting\Insert File Details in Dashboard"
          TopLeft="42.8571428571429,93.571428571428" />
        <EdgeLayout
          Id="Package\Failure - Dashbaord and Integration Reporting.PrecedenceConstraints[Constraint]"
          TopLeft="156.678571428571,62">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31.571428571428"
              Start="0,0"
              End="0,24.071428571428">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.071428571428" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Failure - Dashbaord and Integration Reporting.PrecedenceConstraints[Constraint 1]"
          TopLeft="155.678571428571,135.571428571428">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,49.428571428572"
              Start="0,0"
              End="0,41.928571428572">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41.928571428572" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,12.964285714286,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="336,325"
          Size="336,368"
          Id="Package\Failure - Dashbaord and Integration Reporting"
          TopLeft="644.869047619045,558.464285714286" />
        <NodeLayout
          Size="137,42"
          Id="Package\Import Files\Archive File Process\Archive File"
          TopLeft="58.75,28.75" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="269,102"
          Size="269,145"
          Id="Package\Import Files\Archive File Process"
          TopLeft="356.781746031744,1037.15873015872" />
        <NodeLayout
          Size="133,42"
          Id="Package\Import Files\Charges\Exceptions"
          TopLeft="73,190" />
        <NodeLayout
          Size="151,42"
          Id="Package\Import Files\Charges\Insert Charges"
          TopLeft="190,33.25" />
        <NodeLayout
          Size="160,42"
          Id="Package\Import Files\Charges\Total Exceptions"
          TopLeft="189,112" />
        <EdgeLayout
          Id="Package\Import Files\Charges.PrecedenceConstraints[Constraint]"
          TopLeft="267.25,75.25">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,36.75"
              Start="0,0"
              End="0,29.25">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.25" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import Files\Charges.PrecedenceConstraints[Constraint 1]"
          TopLeft="269,154">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-129.5,36"
              Start="0,0"
              End="-129.5,28.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14"
                    Point2="0,18"
                    Point3="-4,18" />
                  <mssgle:LineSegment
                    End="-125.5,18" />
                  <mssgle:CubicBezierSegment
                    Point1="-125.5,18"
                    Point2="-129.5,18"
                    Point3="-129.5,22" />
                  <mssgle:LineSegment
                    End="-129.5,28.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-72.75,23,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="565,284"
          Size="565,327"
          Id="Package\Import Files\Charges"
          TopLeft="652.706349206348,478.166666666667" />
        <NodeLayout
          Size="140,42"
          Id="Package\Import Files\Exceptions\AssessionID"
          TopLeft="267.5,185.071428571426" />
        <NodeLayout
          Size="157,42"
          Id="Package\Import Files\Exceptions\Checking Dates"
          TopLeft="223.369047619048,16.7619047619047" />
        <NodeLayout
          Size="110,42"
          Id="Package\Import Files\Exceptions\ISBNs"
          TopLeft="37.25,178.5" />
        <NodeLayout
          Size="160,42"
          Id="Package\Import Files\Exceptions\Mark Exceptions"
          TopLeft="136.107142857143,106.642857142857" />
        <NodeLayout
          Size="128,42"
          Id="Package\Import Files\Exceptions\StudentID"
          TopLeft="23.5,22.25" />
        <EdgeLayout
          Id="Package\Import Files\Exceptions.PrecedenceConstraints[Constraint]"
          TopLeft="87.5,64.25">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="103.27380952381,42.392857142857"
              Start="0,0"
              End="103.27380952381,34.892857142857">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.1838755304101" />
                  <mssgle:CubicBezierSegment
                    Point1="0,21.1838755304101"
                    Point2="0,25.1838755304101"
                    Point3="4,25.1838755304101" />
                  <mssgle:LineSegment
                    End="99.2738095238098,25.1838755304101" />
                  <mssgle:CubicBezierSegment
                    Point1="99.2738095238098,25.1838755304101"
                    Point2="103.27380952381,25.1838755304101"
                    Point3="103.27380952381,29.1838755304101" />
                  <mssgle:LineSegment
                    End="103.27380952381,34.892857142857" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="26.3324516369049,30.1838755304101,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import Files\Exceptions.PrecedenceConstraints[Constraint 1]"
          TopLeft="92.25,178.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="123.857142857143,-29.857142857143"
              Start="0,0"
              End="123.857142857143,-22.357142857143">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-10.9285714285715" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-10.9285714285715"
                    Point2="0,-14.9285714285715"
                    Point3="4,-14.9285714285715" />
                  <mssgle:LineSegment
                    End="119.857142857143,-14.9285714285715" />
                  <mssgle:CubicBezierSegment
                    Point1="119.857142857143,-14.9285714285715"
                    Point2="123.857142857143,-14.9285714285715"
                    Point3="123.857142857143,-18.9285714285715" />
                  <mssgle:LineSegment
                    End="123.857142857143,-22.357142857143" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="36.6241183035716,-9.9285714285715,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import Files\Exceptions.PrecedenceConstraints[Constraint 2]"
          TopLeft="301.869047619048,58.7619047619047">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-60.4285714285716,47.8809523809523"
              Start="0,0"
              End="-60.4285714285716,40.3809523809523">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.4441301272984" />
                  <mssgle:CubicBezierSegment
                    Point1="0,24.4441301272984"
                    Point2="0,28.4441301272984"
                    Point3="-4,28.4441301272984" />
                  <mssgle:LineSegment
                    End="-56.4285714285716,28.4441301272984" />
                  <mssgle:CubicBezierSegment
                    Point1="-56.4285714285716,28.4441301272984"
                    Point2="-60.4285714285716,28.4441301272984"
                    Point3="-60.4285714285716,32.4441301272984" />
                  <mssgle:LineSegment
                    End="-60.4285714285716,40.3809523809523" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.5187388392858,33.4441301272984,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import Files\Exceptions.PrecedenceConstraints[Constraint 3]"
          TopLeft="337.5,185.071428571426">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-96.0595238095237,-36.4285714285692"
              Start="0,0"
              End="-96.0595238095237,-28.9285714285692">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-17.6407355021203" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-17.6407355021203"
                    Point2="0,-21.6407355021203"
                    Point3="-4,-21.6407355021203" />
                  <mssgle:LineSegment
                    End="-92.0595238095237,-21.6407355021203" />
                  <mssgle:CubicBezierSegment
                    Point1="-92.0595238095237,-21.6407355021203"
                    Point2="-96.0595238095237,-21.6407355021203"
                    Point3="-96.0595238095237,-25.6407355021203" />
                  <mssgle:LineSegment
                    End="-96.0595238095237,-28.9285714285692" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-73.3342150297619,-16.6407355021203,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="458,292"
          Size="458,335"
          Id="Package\Import Files\Exceptions"
          TopLeft="1399.27380952381,473.559523809524" />
        <NodeLayout
          Size="146,42"
          Id="Package\Import Files\General Data Cleanup\Data Cleanup"
          TopLeft="42,140.666666666667" />
        <NodeLayout
          Size="142,42"
          Id="Package\Import Files\General Data Cleanup\R and L Trim"
          TopLeft="43.4642857142858,67.7857142857143" />
        <EdgeLayout
          Id="Package\Import Files\General Data Cleanup.PrecedenceConstraints[Constraint]"
          TopLeft="114.732142857143,109.785714285714">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,30.8809523809524"
              Start="0,0"
              End="0,23.3809523809524">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.3809523809524" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="253,235"
          Size="253,278"
          Id="Package\Import Files\General Data Cleanup"
          TopLeft="985.369047619048,117.464285714285" />
        <NodeLayout
          Size="150,42"
          Id="Package\Import Files\Get File Information\Get File Name"
          TopLeft="36,86.1785714285714" />
        <NodeLayout
          Size="133,42"
          Id="Package\Import Files\Get File Information\Set UserID"
          TopLeft="225.035714285716,19.571428571428" />
        <NodeLayout
          Size="163,42"
          Id="Package\Import Files\Get File Information\Truncate Staging"
          TopLeft="35,18" />
        <EdgeLayout
          Id="Package\Import Files\Get File Information.PrecedenceConstraints[Constraint]"
          TopLeft="113.75,60">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,26.1785714285714"
              Start="0,0"
              End="0,18.6785714285714">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.6785714285714" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="370,222"
          Size="370,265"
          Id="Package\Import Files\Get File Information"
          TopLeft="5.5,133.892857142857" />
        <NodeLayout
          Size="178,42"
          Id="Package\Import Files\Import &amp; Stage Data\Import File - Staging"
          TopLeft="44.8571428571429,62.0000000000001" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="266,229"
          Size="266,272"
          Id="Package\Import Files\Import &amp; Stage Data"
          TopLeft="618.511904761908,125.333333333333" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="212,240"
          Size="212,283"
          Id="Package\Import Files\Setting Defaults"
          TopLeft="1520.64285714286,113.761904761905" />
        <NodeLayout
          Size="211,42"
          Id="Package\Import Files\Succuess - Dashbaord and Integration Reporting\Create Report - Successful"
          TopLeft="43,15" />
        <NodeLayout
          Size="143,42"
          Id="Package\Import Files\Succuess - Dashbaord and Integration Reporting\Email Report"
          TopLeft="88,237" />
        <NodeLayout
          Size="232,42"
          Id="Package\Import Files\Succuess - Dashbaord and Integration Reporting\Insert File Details in Dashboard"
          TopLeft="38.6785714285716,79.928571428572" />
        <NodeLayout
          Size="157,42"
          Id="Package\Import Files\Succuess - Dashbaord and Integration Reporting\Insert RowStats"
          TopLeft="78,156" />
        <EdgeLayout
          Id="Package\Import Files\Succuess - Dashbaord and Integration Reporting.PrecedenceConstraints[Constraint]"
          TopLeft="151.589285714286,57">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,22.928571428572"
              Start="0,0"
              End="0,15.428571428572">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,15.428571428572" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import Files\Succuess - Dashbaord and Integration Reporting.PrecedenceConstraints[Constraint 1]"
          TopLeft="158,198">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,39"
              Start="0,0"
              End="0,31.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,7.75,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import Files\Succuess - Dashbaord and Integration Reporting.PrecedenceConstraints[Constraint 2]"
          TopLeft="155.589285714286,121.928571428572">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,34.071428571428"
              Start="0,0"
              End="0,26.571428571428">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.571428571428" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="340,333"
          Size="340,376"
          Id="Package\Import Files\Succuess - Dashbaord and Integration Reporting"
          TopLeft="768.916666666668,915.071428571426" />
        <EdgeLayout
          Id="Package\Import Files.PrecedenceConstraints[Constraint]"
          TopLeft="884.511904761908,258.898809523809">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="100.85714285714,0"
              Start="0,0"
              End="93.3571428571404,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="93.3571428571404,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import Files.PrecedenceConstraints[Constraint 1]"
          TopLeft="1238.36904761905,255.863095238095">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="282.27380952381,0"
              Start="0,0"
              End="274.77380952381,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="274.77380952381,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import Files.PrecedenceConstraints[Constraint 10]"
          TopLeft="1627.45833333334,396.761904761905">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,76.7976190476191"
              Start="0,0"
              End="0,69.2976190476191">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,69.2976190476191" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import Files.PrecedenceConstraints[Constraint 2]"
          TopLeft="1399.27380952381,641.363095238096">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-181.567460317462,0"
              Start="0,0"
              End="-174.067460317462,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-174.067460317462,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import Files.PrecedenceConstraints[Constraint 3]"
          TopLeft="768.916666666668,1106.36507936507">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-143.134920634924,0"
              Start="0,0"
              End="-135.634920634924,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-135.634920634924,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import Files.PrecedenceConstraints[Constraint 4]"
          TopLeft="375.5,263.863095238095">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="243.011904761905,0"
              Start="0,0"
              End="235.511904761905,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="235.511904761905,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="109.755952380953,5,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import Files.PrecedenceConstraints[Constraint 6]"
          TopLeft="937.061507936508,805.166666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,109.904761904759"
              Start="0,0"
              End="0,102.404761904759">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,102.404761904759" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="1921,1448"
          Size="1921,1491"
          Id="Package\Import Files"
          TopLeft="1294,50" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="997.869047619045,297.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="296.130952380955,498"
              Start="0,0"
              End="288.630952380955,498">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="144.065476190478,0" />
                  <mssgle:CubicBezierSegment
                    Point1="144.065476190478,0"
                    Point2="148.065476190478,0"
                    Point3="148.065476190478,4" />
                  <mssgle:LineSegment
                    End="148.065476190478,494" />
                  <mssgle:CubicBezierSegment
                    Point1="148.065476190478,494"
                    Point2="148.065476190478,498"
                    Point3="152.065476190478,498" />
                  <mssgle:LineSegment
                    End="288.630952380955,498" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="140.065476190478,-22,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="816.119047619045,416">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,142.464285714286"
              Start="0,0"
              End="0,134.964285714286">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,134.964285714286" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,59.482142857143,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Import Files\Charges\Insert Charges">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="119,42"
          Id="Package\Import Files\Charges\Insert Charges\Defaults"
          TopLeft="438,454" />
        <NodeLayout
          Size="161,42"
          Id="Package\Import Files\Charges\Insert Charges\Data Conversion"
          TopLeft="426,226" />
        <NodeLayout
          Size="160,42"
          Id="Package\Import Files\Charges\Insert Charges\StudentID Exists"
          TopLeft="427,294" />
        <NodeLayout
          Size="141,42"
          Id="Package\Import Files\Charges\Insert Charges\Get Charges"
          TopLeft="436,150" />
        <NodeLayout
          Size="146,42"
          Id="Package\Import Files\Charges\Insert Charges\Insert Charge"
          TopLeft="644,615" />
        <NodeLayout
          Size="144,42"
          Id="Package\Import Files\Charges\Insert Charges\Lookup ISBN"
          TopLeft="431,378" />
        <NodeLayout
          Size="147,42"
          Id="Package\Import Files\Charges\Insert Charges\Charge Exists"
          TopLeft="422,541" />
        <EdgeLayout
          Id="Package\Import Files\Charges\Insert Charges.Paths[OLE DB Source Output]"
          TopLeft="506.5,192">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,34"
              Start="0,0"
              End="0,26.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import Files\Charges\Insert Charges.Paths[Lookup No Match Output]"
          TopLeft="495.5,583">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="221.5,32"
              Start="0,0"
              End="221.5,24.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12"
                    Point2="0,16"
                    Point3="4,16" />
                  <mssgle:LineSegment
                    End="217.5,16" />
                  <mssgle:CubicBezierSegment
                    Point1="217.5,16"
                    Point2="221.5,16"
                    Point3="221.5,20" />
                  <mssgle:LineSegment
                    End="221.5,24.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="54.94361328125,21,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import Files\Charges\Insert Charges.Paths[Lookup Match Output1]"
          TopLeft="500.25,420">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,34"
              Start="0,0"
              End="0,26.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,7.4453125,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import Files\Charges\Insert Charges.Paths[Lookup Match Output]"
          TopLeft="505,336">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,42"
              Start="0,0"
              End="0,34.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,11.4453125,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import Files\Charges\Insert Charges.Paths[Derived Column Output]"
          TopLeft="496.5,496">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,45"
              Start="0,0"
              End="0,37.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,37.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import Files\Charges\Insert Charges.Paths[Data Conversion Output]"
          TopLeft="506.75,268">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,26"
              Start="0,0"
              End="0,18.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Import Files\Charges\Insert Charges\StudentID Exists">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:boolean">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:int">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Import Files\Charges\Insert Charges\Get Charges">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Import Files\Charges\Insert Charges\Insert Charge">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Import Files\Charges\Insert Charges\Lookup ISBN">
    <Properties>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q2:string">[dbo].[tblBookInventory]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q3:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q4:string">false</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Import Files\Charges\Insert Charges\Charge Exists">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[tblUnvCharges]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Import Files\Exceptions\AssessionID">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="119,42"
          Id="Package\Import Files\Exceptions\AssessionID\Defaults"
          TopLeft="350,337" />
        <NodeLayout
          Size="161,42"
          Id="Package\Import Files\Exceptions\AssessionID\Data Conversion"
          TopLeft="327,409" />
        <NodeLayout
          Size="163,42"
          Id="Package\Import Files\Exceptions\AssessionID\Insert Exceptions"
          TopLeft="321,488" />
        <NodeLayout
          Size="160,42"
          Id="Package\Import Files\Exceptions\AssessionID\StudentID Exists"
          TopLeft="338,157" />
        <NodeLayout
          Size="162,42"
          Id="Package\Import Files\Exceptions\AssessionID\Assession Exists"
          TopLeft="331,252" />
        <NodeLayout
          Size="129,42"
          Id="Package\Import Files\Exceptions\AssessionID\Accession"
          TopLeft="349,71" />
        <EdgeLayout
          Id="Package\Import Files\Exceptions\AssessionID.Paths[Derived Column Output]"
          TopLeft="408.5,379">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,30"
              Start="0,0"
              End="0,22.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import Files\Exceptions\AssessionID.Paths[Data Conversion Output]"
          TopLeft="405,451">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,37"
              Start="0,0"
              End="0,29.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import Files\Exceptions\AssessionID.Paths[OLE DB Source Output]"
          TopLeft="415.75,113">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,44"
              Start="0,0"
              End="0,36.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import Files\Exceptions\AssessionID.Paths[Lookup No Match Output]"
          TopLeft="410.75,294">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,43"
              Start="0,0"
              End="0,35.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,35.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,11.9453125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import Files\Exceptions\AssessionID.Paths[Lookup Match Output]"
          TopLeft="415,199">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,53"
              Start="0,0"
              End="0,45.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,45.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,16.9453125,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Import Files\Exceptions\AssessionID\Insert Exceptions">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Import Files\Exceptions\AssessionID\StudentID Exists">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:boolean">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:int">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Import Files\Exceptions\AssessionID\Assession Exists">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[tblStudentsDistribution]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Import Files\Exceptions\AssessionID\Accession">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Import Files\Exceptions\Checking Dates">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="161,42"
          Id="Package\Import Files\Exceptions\Checking Dates\Data Conversion"
          TopLeft="309,259" />
        <NodeLayout
          Size="163,42"
          Id="Package\Import Files\Exceptions\Checking Dates\Insert Exceptions"
          TopLeft="303,332" />
        <NodeLayout
          Size="139,42"
          Id="Package\Import Files\Exceptions\Checking Dates\Set Defaults"
          TopLeft="319,187" />
        <NodeLayout
          Size="130,42"
          Id="Package\Import Files\Exceptions\Checking Dates\Bad Dates"
          TopLeft="325,103" />
        <EdgeLayout
          Id="Package\Import Files\Exceptions\Checking Dates.Paths[OLE DB Source Output]"
          TopLeft="389.25,145">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,42"
              Start="0,0"
              End="0,34.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import Files\Exceptions\Checking Dates.Paths[Derived Column Output]"
          TopLeft="389,229">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,30"
              Start="0,0"
              End="0,22.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import Files\Exceptions\Checking Dates.Paths[Data Conversion Output]"
          TopLeft="387,301">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31"
              Start="0,0"
              End="0,23.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Import Files\Exceptions\Checking Dates\Insert Exceptions">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Import Files\Exceptions\Checking Dates\Bad Dates">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Import Files\Exceptions\ISBNs">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="163,42"
          Id="Package\Import Files\Exceptions\ISBNs\Insert Exceptions"
          TopLeft="304,421" />
        <NodeLayout
          Size="139,42"
          Id="Package\Import Files\Exceptions\ISBNs\Set Defaults"
          TopLeft="320,276" />
        <NodeLayout
          Size="144,42"
          Id="Package\Import Files\Exceptions\ISBNs\Lookup ISBN"
          TopLeft="313,182" />
        <NodeLayout
          Size="110,42"
          Id="Package\Import Files\Exceptions\ISBNs\ISBNs"
          TopLeft="332,104" />
        <NodeLayout
          Size="161,42"
          Id="Package\Import Files\Exceptions\ISBNs\Data Conversion"
          TopLeft="310,348" />
        <EdgeLayout
          Id="Package\Import Files\Exceptions\ISBNs.Paths[OLE DB Source Output]"
          TopLeft="386,146">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,36"
              Start="0,0"
              End="0,28.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import Files\Exceptions\ISBNs.Paths[Lookup No Match Output]"
          TopLeft="387.25,224">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,52"
              Start="0,0"
              End="0,44.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,44.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,16.4453125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import Files\Exceptions\ISBNs.Paths[Derived Column Output]"
          TopLeft="390,318">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,30"
              Start="0,0"
              End="0,22.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import Files\Exceptions\ISBNs.Paths[Data Conversion Output]"
          TopLeft="388,390">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31"
              Start="0,0"
              End="0,23.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Import Files\Exceptions\ISBNs\ISBNs">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Import Files\Exceptions\ISBNs\Lookup ISBN">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[tblBookInventory]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Import Files\Exceptions\StudentID">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="119,42"
          Id="Package\Import Files\Exceptions\StudentID\Defaults"
          TopLeft="352,244" />
        <NodeLayout
          Size="160,42"
          Id="Package\Import Files\Exceptions\StudentID\StudentID Exists"
          TopLeft="333,152" />
        <NodeLayout
          Size="163,42"
          Id="Package\Import Files\Exceptions\StudentID\Insert Exceptions"
          TopLeft="323,395" />
        <NodeLayout
          Size="133,42"
          Id="Package\Import Files\Exceptions\StudentID\StudentIDs"
          TopLeft="349,71" />
        <NodeLayout
          Size="161,42"
          Id="Package\Import Files\Exceptions\StudentID\Data Conversion"
          TopLeft="329,316" />
        <EdgeLayout
          Id="Package\Import Files\Exceptions\StudentID.Paths[OLE DB Source Output]"
          TopLeft="414.25,113">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,39"
              Start="0,0"
              End="0,31.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import Files\Exceptions\StudentID.Paths[Lookup No Match Output]"
          TopLeft="412.25,194">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,50"
              Start="0,0"
              End="0,42.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,15.4453125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import Files\Exceptions\StudentID.Paths[Derived Column Output]"
          TopLeft="410.5,286">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,30"
              Start="0,0"
              End="0,22.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import Files\Exceptions\StudentID.Paths[Data Conversion Output]"
          TopLeft="407,358">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,37"
              Start="0,0"
              End="0,29.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Import Files\Exceptions\StudentID\StudentIDs">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Import Files\Exceptions\StudentID\StudentID Exists">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:boolean">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:int">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Import Files\Exceptions\StudentID\Insert Exceptions">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Import Files\Import &amp; Stage Data\Import File - Staging">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="158,42"
          Id="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Derived Column"
          TopLeft="438,148" />
        <NodeLayout
          Size="144,42"
          Id="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source"
          TopLeft="448,49" />
        <NodeLayout
          Size="218,42"
          Id="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Generate File Row Numbers"
          TopLeft="415,404" />
        <NodeLayout
          Size="168,42"
          Id="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Insert into Staging"
          TopLeft="435,487" />
        <NodeLayout
          Size="133,42"
          Id="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Row Count"
          TopLeft="455,327" />
        <NodeLayout
          Size="161,42"
          Id="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Data Conversion"
          TopLeft="442,228" />
        <EdgeLayout
          Id="Package\Import Files\Import &amp; Stage Data\Import File - Staging.Paths[Row Count Output 1]"
          TopLeft="522.75,369">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,35"
              Start="0,0"
              End="0,27.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import Files\Import &amp; Stage Data\Import File - Staging.Paths[Output 0]"
          TopLeft="521.5,446">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,41"
              Start="0,0"
              End="0,33.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import Files\Import &amp; Stage Data\Import File - Staging.Paths[Excel Source Output]"
          TopLeft="518.5,91">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,57"
              Start="0,0"
              End="0,49.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,49.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import Files\Import &amp; Stage Data\Import File - Staging.Paths[Derived Column Output]"
          TopLeft="519.75,190">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38"
              Start="0,0"
              End="0,30.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import Files\Import &amp; Stage Data\Import File - Staging.Paths[Data Conversion Output]"
          TopLeft="522,270">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,57"
              Start="0,0"
              End="0,49.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,49.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Import Files\Import &amp; Stage Data\Import File - Staging\Insert into Staging">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>