<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="9/26/2018 2:29:24 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="RND-RGAILEY"
  DTS:CreatorName="HAYESSOFT\rgailey"
  DTS:DTSID="{6D236802-54EF-445B-849D-641282B77D6D}"
  DTS:EnableConfig="True"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.1301.433"
  DTS:LocaleID="1033"
  DTS:ObjectName="RawFileImport"
  DTS:PackageType="5"
  DTS:VersionBuild="676"
  DTS:VersionGUID="{105D5D1E-7D94-4922-91D8-BA4B084AB95B}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Client Template]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{5E2459EE-E157-41DB-9700-349D7EF3B733}"
      DTS:ObjectName="Client Template">
      <DTS:PropertyExpression
        DTS:Name="ExcelFilePath">@[User::_LocalImportPathFileName]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=D:\RGailey\My Downloads\CorpusChristi_DataConversionTemplate.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[ReportServer]"
      DTS:CreationName="HTTP"
      DTS:DTSID="{3951084C-B016-4A11-BC67-EFCC5AA4450A}"
      DTS:ObjectName="ReportServer">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="http://hayessqlsvr/Reports/Pages/Report.aspx?ItemPath=%2fDataConversion%2fDataConversionPreliminary">
          <DTS:HttpConnection
            DTS:ServerURL="http://hayessqlsvr/Reports/Pages/Report.aspx?ItemPath=%2fDataConversion%2fDataConversionPreliminary"
            DTS:UseServerCredentials="True"
            DTS:ServerUserName="IntegerationReports"
            DTS:ServerDomain="hayessqlsvr"
            DTS:TimeOut="300"
            DTS:ChunkSize="50"
            DTS:ProxyUserName="RGailey">
            <DTS:Property
              DTS:Name="ServerPassword"
              Sensitive="1"
              Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAACaMopcI0fE+ap0qNxg8CZAAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAADIURVTcCwIRvtJO0xE6uhhAAAAAASAAACgAAAAEAAAAK9Ot3avZUgxXVCrmP5kpEUQAAAAIVKdxXIJSyqLF2KdgdTOcxQAAACh/v6cOfcmQxI1yf2BMipTECPcsg</DTS:Property>
            <DTS:Property
              DTS:Name="ProxyPassword"
              Sensitive="1"
              Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAACaMopcI0fE+ap0qNxg8CZAAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAADoaUVn5U/Gar94+R/7iXJlAAAAAASAAACgAAAAEAAAACkoFshr94r4MCUtAM7pO2MIAAAAgXJmZOV8vS0UAAAAb1sFf3umA2xxiN7GM7lrbRFjG3A</DTS:Property>
          </DTS:HttpConnection>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Source - OneColumn]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{F6623CE0-17B1-445D-89D4-5E0209DC0486}"
      DTS:ObjectName="Source - OneColumn">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::FilePathFull] +  @[User::FileName]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="RaggedRight"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter="_x000D__x000A_"
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="PascoCountyAssets.xlsx">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Column 0"
              DTS:DTSID="{C662A457-3445-4EAD-B987-B14ED1C9054C}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Target - CSV File (Comma Delimited)]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{198083F5-B126-47DC-A6B1-CC656B47A9B9}"
      DTS:ObjectName="Target - CSV File (Comma Delimited)">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::FilePath] + @[User::FileName]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x0022_"
          DTS:CodePage="1252"
          DTS:ConnectionString="Pasco\ImportPascoCountyAssets.xlsx">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Tag"
              DTS:DTSID="{44BF58C9-C413-4800-9DBE-5A1B4F7DE953}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Serial"
              DTS:DTSID="{BEAE1A68-574F-47C2-BBE6-50597DEA11DC}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="3000"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="InventoryNotes"
              DTS:DTSID="{7DDCE982-7B69-4D11-BEE9-2E8DA1373F2E}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Target - TIPWeb]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{B22F1E39-640F-4A2B-9405-2AA692906B69}"
      DTS:ObjectName="Target - TIPWeb">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[User::DatabaseName_ETL]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=HAYESCONVERSION;Initial Catalog=TIPWeb_ETL_TucsonUSD;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Target - TIPWebETL]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{41489ED5-061B-4D57-9EF3-08A4032B6A13}"
      DTS:ObjectName="Target - TIPWebETL">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[User::DatabaseName_ETL]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=HAYESConversion;Initial Catalog=TIPWeb_ETL_TucsonUSD;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Target- DataConversion]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{042B5364-0F0A-4FF5-A2B0-25049A4E93C6}"
      DTS:ObjectName="Target- DataConversion">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=HAYESCONVERSION;Initial Catalog=_DataConversion;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Configurations>
    <DTS:Configuration
      DTS:ConfigurationString="D:\RGailey\Visual Studio\VS 2017\Absolute Export\Absolute Export\AbsoluteExport.dtsConfig"
      DTS:ConfigurationType="1"
      DTS:CreationName=""
      DTS:DTSID="{B3246D14-A326-4935-B7BA-9FD76E3A8779}"
      DTS:ObjectName="Configuration 1" />
  </DTS:Configurations>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{21AEF86E-4EA1-4F17-AD21-CBBC3F223AC2}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ApprovedFileType">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4685303E-3783-4CED-928B-F4A419784AF2}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ArchiveKeepDays">
      <DTS:VariableValue
        DTS:DataType="3">30</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C6D31AAB-32C2-4EA0-92F2-856BB480F565}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ArchivePath">
      <DTS:VariableValue
        DTS:DataType="8">Archive</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{39C2A992-8C20-4C7A-998A-B48B642C4F26}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CustomerCode">
      <DTS:VariableValue
        DTS:DataType="8">DCPS</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{844B398A-4CCC-4824-AD72-2DE1F5977290}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CustomerName">
      <DTS:VariableValue
        DTS:DataType="8">District of Columbia Public Schools</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{08721E0F-BC4A-46CC-80A1-6F42F1A5BA3F}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DatabaseName_ETL">
      <DTS:VariableValue
        DTS:DataType="8">TIPWeb_ETL_TucsonUSD</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{ACB448F6-F882-42B6-8D87-BC07AD9268A4}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DatabaseName_Intergration">
      <DTS:VariableValue
        DTS:DataType="8">_IntegrationDashboard</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{917A5F2F-FFF7-46C2-A823-119943E13228}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DatabaseName_TIPWeb">
      <DTS:VariableValue
        DTS:DataType="8">TIPWeb_Staging_CatoosaPSD</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5E262733-1130-4607-94B8-2F7119A9A406}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DBServer_Intergration">
      <DTS:VariableValue
        DTS:DataType="8">HAYESConversion</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D7EE9955-FC26-4A29-B614-A8A8B087DB15}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DBServer_TIPWeb_IT">
      <DTS:VariableValue
        DTS:DataType="8">173.240.107.120</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A607DE9C-14A1-4495-B816-491E9490AF0C}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Debug">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{10FDDBDC-93A7-4CCC-9E18-0AFA22755C17}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DoesFileExists">
      <DTS:VariableValue
        DTS:DataType="8">False</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{ED76561A-8464-44EC-9227-7CED3A20E84B}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="EmailSend">
      <DTS:VariableValue
        DTS:DataType="11">-1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1568C058-D371-455F-99EE-AF2E1EB7A599}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="EmailSendInternal">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{99025725-D6EB-4FEB-ABA2-6DA98B450267}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="EMailSubject">
      <DTS:VariableValue
        DTS:DataType="8">Hayes Integration CustomerName IntergrationType Export - </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{33996B77-76EF-45D2-8453-316ED6652B67}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="EMailTo">
      <DTS:VariableValue
        DTS:DataType="8">rgailey@hayessoft.com</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0C8EE2D4-0135-4E28-A0A6-98CF8B737DF9}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ExcelSheetName">
      <DTS:VariableValue
        DTS:DataType="8">Sheet1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2DC651F6-E562-4959-9F34-E775DC453C27}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="FileExists">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DAA79A1F-E25E-4082-9D46-4120E4E7C4D7}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="FileFormatVersion">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E4E5A38D-4484-444B-915C-122861CA6D30}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileName">
      <DTS:VariableValue
        DTS:DataType="8">PascoCountyAssets.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A96379BF-3186-48A8-9728-6BEE987D4F4E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileNamingConvention">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{72234E1C-3C25-4E68-85FB-16EC9B48E856}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FilePath">
      <DTS:VariableValue
        DTS:DataType="8">Pasco\Import</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{60989D09-5310-4711-B2A2-EFD7D6E192B3}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FilePathFull">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B3BB36D5-8F04-46C0-88F9-EC43EFB951DD}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileSize">
      <DTS:VariableValue
        DTS:DataType="14">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{15E1C48A-4A8B-45F6-9641-0A7727D7871F}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileTransportMethod">
      <DTS:VariableValue
        DTS:DataType="8">SFTP</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8163B4F1-62BE-4FFD-A239-D9B967143A26}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="FileTypeCheck">
      <DTS:VariableValue
        DTS:DataType="11">-1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9143BDF3-B2EE-4263-8F23-5AC1EE5F7EA8}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ImportFileDelimiter">
      <DTS:VariableValue
        DTS:DataType="8">,</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{88BED1F5-2E43-4187-A88D-FD4C4524E9CD}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ImportFileType">
      <DTS:VariableValue
        DTS:DataType="8">NA</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4CAE6AF8-73FB-4002-952C-91E80D029BDD}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ImportRawTable">
      <DTS:VariableValue
        DTS:DataType="8">RawDataImport</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C6C63C01-734E-4539-9DD9-BEF9C52F02F2}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="IntergrationType">
      <DTS:VariableValue
        DTS:DataType="8">Absolute</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D9043E41-E3C2-41F8-B2E1-509008672D35}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="JobName">
      <DTS:VariableValue
        DTS:DataType="8">int_DCPS_Abolute_Export</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BD847836-BF52-429B-AE51-A0054829C8D7}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="MoveFile">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A8C5E550-136E-4CBA-BAF6-7BE10DCF6C8B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ReportPath">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D9FF92FB-3319-4AEC-8054-4C082EBEBA88}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="RootPath">
      <DTS:VariableValue
        DTS:DataType="8">D:\Integrations\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{AC0EF933-EB67-4F3D-AE75-709F18F91D24}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SFTPCertKeyPassphrase">
      <DTS:VariableValue
        DTS:DataType="8">G7ABcgpnqwal7mdS8X</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7D0A6ECA-2AAB-4BF7-8B85-F7F499E1C0F0}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SFTPErrorMessage">
      <DTS:VariableValue
        DTS:DataType="8">This is a test message</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{38C2887B-DF57-4B19-A571-F2DA580781F9}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SFTPPath_bat">
      <DTS:VariableValue
        DTS:DataType="8">D:\Temp\Putty\Bat</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DA46601C-E124-40A9-8F06-ECF2BE4B5336}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SFTPPath_cert">
      <DTS:VariableValue
        DTS:DataType="8">D:\Temp\Putty\Certs\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EC8F5257-EFB5-4A81-9E62-559B9792EB25}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SFTPPath_exe">
      <DTS:VariableValue
        DTS:DataType="8">D:\Temp\Putty\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CAA6E9E7-B6FD-44E5-B068-AE9FCE0E985A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SFTPPath_sc">
      <DTS:VariableValue
        DTS:DataType="8">D:\Temp\Putty\Scripts\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0DE539A0-9915-4675-85EA-DB4E5BA092A6}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SFTPServer">
      <DTS:VariableValue
        DTS:DataType="8">test.absolute.com</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D9B716C7-133A-456A-B22F-EF1723A0D557}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SFTPUserName">
      <DTS:VariableValue
        DTS:DataType="8">18130</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{AD21D2B0-8333-4491-A9FF-564A06B75ECF}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SFTPUserPassword">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FC98E66C-FB66-4A98-A49E-80C14A81C72B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SFTP_bat">
      <DTS:VariableValue
        DTS:DataType="8">HayesSFTPIntegration.bat</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1D02D2B6-A7C7-4A5F-8810-912A6CE7B78A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SFTP_cert">
      <DTS:VariableValue
        DTS:DataType="8">DCPS_Absolute_Key.pem</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{105D460D-D918-4DC0-8ED3-6BAC616CC5BD}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SFTP_exe">
      <DTS:VariableValue
        DTS:DataType="8">Plink.exe</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{647885A2-0801-4126-81F8-BB2AF9B12F62}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SFTP_sc">
      <DTS:VariableValue
        DTS:DataType="8">PuttyScript.sc</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A35948BF-3DBF-4D29-B4CF-132B8EEB75A4}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="TaskEventErrorMessage">
      <DTS:VariableValue
        DTS:DataType="8">Default Error Message</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4119B372-2A93-4090-BBD4-C942E180E4A7}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="TaskEventFailure">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9644434E-1178-4603-8D48-C11532462ED3}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="TaskEventName">
      <DTS:VariableValue
        DTS:DataType="8">Default Event Name</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BE29E337-52BB-4B4E-B582-9C31455F583F}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="TotalRows">
      <DTS:VariableValue
        DTS:DataType="20">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{87D900D2-42AD-4F88-AE3D-39F36CE65CC1}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="_AccessoryMetaDataImport">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EE3DF300-891A-40F9-BF47-8A5C1FF89AB5}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="_CustomFieldsMetaDataImport">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F56C502C-A072-4BEB-B9DC-9EA10799AEAB}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="_LocalImportPathFileName">
      <DTS:VariableValue
        DTS:DataType="8">D:\RGailey\My Downloads\CorpusChristi_DataConversionTemplate.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{09A871B4-6D55-4DCA-8B3E-50226D31FFA7}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="_SSISKeyID">
      <DTS:VariableValue
        DTS:DataType="3">6137</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Import Accessories Meta Data"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{b4a15e6a-c9af-449e-99f1-822a81512747}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Import Accessories Meta Data">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Import Accessories Meta Data\Import Accessories Meta Data"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:DelayValidation="True"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{de370c2f-0336-4e1d-b38a-c10802dc5db1}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Import Accessories Meta Data"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source"
                  componentClassID="Microsoft.ExcelSource"
                  contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Excel Source"
                  name="Excel Source"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">'ProductAccessory - Data$'</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.String"
                      description="The mapping from parameters in the SQL command to variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Client Template]"
                      connectionManagerRefId="Package.ConnectionManagers[Client Template]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output]"
                      name="Excel Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output].Columns[ProductName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[ProductName]"
                          length="255"
                          lineageId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output].Columns[ProductName]"
                          name="ProductName"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output].Columns[Accessory1Name]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[Accessory1Name]"
                          length="255"
                          lineageId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output].Columns[Accessory1Name]"
                          name="Accessory1Name"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output].Columns[Accessory1Price]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[Accessory1Price]"
                          length="255"
                          lineageId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output].Columns[Accessory1Price]"
                          name="Accessory1Price"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output].Columns[Accessory1Quantity]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[Accessory1Quantity]"
                          length="255"
                          lineageId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output].Columns[Accessory1Quantity]"
                          name="Accessory1Quantity"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output].Columns[Accessory1Consumable]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[Accessory1Consumable]"
                          length="255"
                          lineageId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output].Columns[Accessory1Consumable]"
                          name="Accessory1Consumable"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output].Columns[Accessory2Name]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[Accessory2Name]"
                          length="255"
                          lineageId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output].Columns[Accessory2Name]"
                          name="Accessory2Name"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output].Columns[Accessory2Price]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[Accessory2Price]"
                          length="255"
                          lineageId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output].Columns[Accessory2Price]"
                          name="Accessory2Price"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output].Columns[Accessory2Quantity]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[Accessory2Quantity]"
                          length="255"
                          lineageId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output].Columns[Accessory2Quantity]"
                          name="Accessory2Quantity"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output].Columns[Accessory2Consumable]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[Accessory2Consumable]"
                          length="255"
                          lineageId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output].Columns[Accessory2Consumable]"
                          name="Accessory2Consumable"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output].Columns[Accessory3Name]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[Accessory3Name]"
                          length="255"
                          lineageId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output].Columns[Accessory3Name]"
                          name="Accessory3Name"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output].Columns[Accessory3Price]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[Accessory3Price]"
                          length="255"
                          lineageId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output].Columns[Accessory3Price]"
                          name="Accessory3Price"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output].Columns[Accessory3Quantity]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[Accessory3Quantity]"
                          length="255"
                          lineageId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output].Columns[Accessory3Quantity]"
                          name="Accessory3Quantity"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output].Columns[Accessory3Consumable ]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[Accessory3Consumable ]"
                          length="255"
                          lineageId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output].Columns[Accessory3Consumable ]"
                          name="Accessory3Consumable "
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[ProductName]"
                          dataType="wstr"
                          length="255"
                          name="ProductName" />
                        <externalMetadataColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[Accessory1Name]"
                          dataType="wstr"
                          length="255"
                          name="Accessory1Name" />
                        <externalMetadataColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[Accessory1Price]"
                          dataType="wstr"
                          length="255"
                          name="Accessory1Price" />
                        <externalMetadataColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[Accessory1Quantity]"
                          dataType="wstr"
                          length="255"
                          name="Accessory1Quantity" />
                        <externalMetadataColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[Accessory1Consumable]"
                          dataType="wstr"
                          length="255"
                          name="Accessory1Consumable" />
                        <externalMetadataColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[Accessory2Name]"
                          dataType="wstr"
                          length="255"
                          name="Accessory2Name" />
                        <externalMetadataColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[Accessory2Price]"
                          dataType="wstr"
                          length="255"
                          name="Accessory2Price" />
                        <externalMetadataColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[Accessory2Quantity]"
                          dataType="wstr"
                          length="255"
                          name="Accessory2Quantity" />
                        <externalMetadataColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[Accessory2Consumable]"
                          dataType="wstr"
                          length="255"
                          name="Accessory2Consumable" />
                        <externalMetadataColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[Accessory3Name]"
                          dataType="wstr"
                          length="255"
                          name="Accessory3Name" />
                        <externalMetadataColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[Accessory3Price]"
                          dataType="wstr"
                          length="255"
                          name="Accessory3Price" />
                        <externalMetadataColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[Accessory3Quantity]"
                          dataType="wstr"
                          length="255"
                          name="Accessory3Quantity" />
                        <externalMetadataColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[Accessory3Consumable ]"
                          dataType="wstr"
                          length="255"
                          name="Accessory3Consumable " />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Error Output]"
                      isErrorOut="true"
                      name="Excel Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Error Output].Columns[ProductName]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Error Output].Columns[ProductName]"
                          name="ProductName" />
                        <outputColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Error Output].Columns[Accessory1Name]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Error Output].Columns[Accessory1Name]"
                          name="Accessory1Name" />
                        <outputColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Error Output].Columns[Accessory1Price]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Error Output].Columns[Accessory1Price]"
                          name="Accessory1Price" />
                        <outputColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Error Output].Columns[Accessory1Quantity]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Error Output].Columns[Accessory1Quantity]"
                          name="Accessory1Quantity" />
                        <outputColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Error Output].Columns[Accessory1Consumable]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Error Output].Columns[Accessory1Consumable]"
                          name="Accessory1Consumable" />
                        <outputColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Error Output].Columns[Accessory2Name]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Error Output].Columns[Accessory2Name]"
                          name="Accessory2Name" />
                        <outputColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Error Output].Columns[Accessory2Price]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Error Output].Columns[Accessory2Price]"
                          name="Accessory2Price" />
                        <outputColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Error Output].Columns[Accessory2Quantity]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Error Output].Columns[Accessory2Quantity]"
                          name="Accessory2Quantity" />
                        <outputColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Error Output].Columns[Accessory2Consumable]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Error Output].Columns[Accessory2Consumable]"
                          name="Accessory2Consumable" />
                        <outputColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Error Output].Columns[Accessory3Name]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Error Output].Columns[Accessory3Name]"
                          name="Accessory3Name" />
                        <outputColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Error Output].Columns[Accessory3Price]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Error Output].Columns[Accessory3Price]"
                          name="Accessory3Price" />
                        <outputColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Error Output].Columns[Accessory3Quantity]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Error Output].Columns[Accessory3Quantity]"
                          name="Accessory3Quantity" />
                        <outputColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Error Output].Columns[Accessory3Consumable ]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Error Output].Columns[Accessory3Consumable ]"
                          name="Accessory3Consumable " />
                        <outputColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Insert Accessories"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="Insert Accessories"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[Clients_ETL_Accessories]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Insert Accessories.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Target - TIPWebETL]"
                      connectionManagerRefId="Package.ConnectionManagers[Target - TIPWebETL]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Insert Accessories.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Insert Accessories.Inputs[OLE DB Destination Input].Columns[ProductName]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="ProductName"
                          externalMetadataColumnId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Insert Accessories.Inputs[OLE DB Destination Input].ExternalColumns[ProductName]"
                          lineageId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output].Columns[ProductName]" />
                        <inputColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Insert Accessories.Inputs[OLE DB Destination Input].Columns[Accessory1Name]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Accessory1Name"
                          externalMetadataColumnId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Insert Accessories.Inputs[OLE DB Destination Input].ExternalColumns[Accessory1Name]"
                          lineageId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output].Columns[Accessory1Name]" />
                        <inputColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Insert Accessories.Inputs[OLE DB Destination Input].Columns[Accessory1Price]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Accessory1Price"
                          externalMetadataColumnId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Insert Accessories.Inputs[OLE DB Destination Input].ExternalColumns[Accessory1Price]"
                          lineageId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output].Columns[Accessory1Price]" />
                        <inputColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Insert Accessories.Inputs[OLE DB Destination Input].Columns[Accessory1Quantity]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Accessory1Quantity"
                          externalMetadataColumnId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Insert Accessories.Inputs[OLE DB Destination Input].ExternalColumns[Accessory1Quantity]"
                          lineageId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output].Columns[Accessory1Quantity]" />
                        <inputColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Insert Accessories.Inputs[OLE DB Destination Input].Columns[Accessory1Consumable]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Accessory1Consumable"
                          externalMetadataColumnId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Insert Accessories.Inputs[OLE DB Destination Input].ExternalColumns[Accessory1Consumable]"
                          lineageId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output].Columns[Accessory1Consumable]" />
                        <inputColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Insert Accessories.Inputs[OLE DB Destination Input].Columns[Accessory2Name]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Accessory2Name"
                          externalMetadataColumnId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Insert Accessories.Inputs[OLE DB Destination Input].ExternalColumns[Accessory2Name]"
                          lineageId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output].Columns[Accessory2Name]" />
                        <inputColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Insert Accessories.Inputs[OLE DB Destination Input].Columns[Accessory2Price]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Accessory2Price"
                          externalMetadataColumnId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Insert Accessories.Inputs[OLE DB Destination Input].ExternalColumns[Accessory2Price]"
                          lineageId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output].Columns[Accessory2Price]" />
                        <inputColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Insert Accessories.Inputs[OLE DB Destination Input].Columns[Accessory2Quantity]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Accessory2Quantity"
                          externalMetadataColumnId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Insert Accessories.Inputs[OLE DB Destination Input].ExternalColumns[Accessory2Quantity]"
                          lineageId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output].Columns[Accessory2Quantity]" />
                        <inputColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Insert Accessories.Inputs[OLE DB Destination Input].Columns[Accessory2Consumable]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Accessory2Consumable"
                          externalMetadataColumnId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Insert Accessories.Inputs[OLE DB Destination Input].ExternalColumns[Accessory2Consumable]"
                          lineageId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output].Columns[Accessory2Consumable]" />
                        <inputColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Insert Accessories.Inputs[OLE DB Destination Input].Columns[Accessory3Name]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Accessory3Name"
                          externalMetadataColumnId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Insert Accessories.Inputs[OLE DB Destination Input].ExternalColumns[Accessory3Name]"
                          lineageId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output].Columns[Accessory3Name]" />
                        <inputColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Insert Accessories.Inputs[OLE DB Destination Input].Columns[Accessory3Price]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Accessory3Price"
                          externalMetadataColumnId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Insert Accessories.Inputs[OLE DB Destination Input].ExternalColumns[Accessory3Price]"
                          lineageId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output].Columns[Accessory3Price]" />
                        <inputColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Insert Accessories.Inputs[OLE DB Destination Input].Columns[Accessory3Quantity]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Accessory3Quantity"
                          externalMetadataColumnId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Insert Accessories.Inputs[OLE DB Destination Input].ExternalColumns[Accessory3Quantity]"
                          lineageId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output].Columns[Accessory3Quantity]" />
                        <inputColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Insert Accessories.Inputs[OLE DB Destination Input].Columns[Accessory3Consumable ]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Accessory3Consumable "
                          externalMetadataColumnId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Insert Accessories.Inputs[OLE DB Destination Input].ExternalColumns[Accessory3Consumable ]"
                          lineageId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output].Columns[Accessory3Consumable ]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Insert Accessories.Inputs[OLE DB Destination Input].ExternalColumns[ProductName]"
                          dataType="wstr"
                          length="255"
                          name="ProductName" />
                        <externalMetadataColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Insert Accessories.Inputs[OLE DB Destination Input].ExternalColumns[Accessory1Name]"
                          dataType="wstr"
                          length="255"
                          name="Accessory1Name" />
                        <externalMetadataColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Insert Accessories.Inputs[OLE DB Destination Input].ExternalColumns[Accessory1Price]"
                          dataType="r8"
                          name="Accessory1Price" />
                        <externalMetadataColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Insert Accessories.Inputs[OLE DB Destination Input].ExternalColumns[Accessory1Quantity]"
                          dataType="r8"
                          name="Accessory1Quantity" />
                        <externalMetadataColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Insert Accessories.Inputs[OLE DB Destination Input].ExternalColumns[Accessory1Consumable]"
                          dataType="wstr"
                          length="255"
                          name="Accessory1Consumable" />
                        <externalMetadataColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Insert Accessories.Inputs[OLE DB Destination Input].ExternalColumns[Accessory2Name]"
                          dataType="wstr"
                          length="255"
                          name="Accessory2Name" />
                        <externalMetadataColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Insert Accessories.Inputs[OLE DB Destination Input].ExternalColumns[Accessory2Price]"
                          dataType="r8"
                          name="Accessory2Price" />
                        <externalMetadataColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Insert Accessories.Inputs[OLE DB Destination Input].ExternalColumns[Accessory2Quantity]"
                          dataType="r8"
                          name="Accessory2Quantity" />
                        <externalMetadataColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Insert Accessories.Inputs[OLE DB Destination Input].ExternalColumns[Accessory2Consumable]"
                          dataType="wstr"
                          length="255"
                          name="Accessory2Consumable" />
                        <externalMetadataColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Insert Accessories.Inputs[OLE DB Destination Input].ExternalColumns[Accessory3Name]"
                          dataType="wstr"
                          length="255"
                          name="Accessory3Name" />
                        <externalMetadataColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Insert Accessories.Inputs[OLE DB Destination Input].ExternalColumns[Accessory3Price]"
                          dataType="r8"
                          name="Accessory3Price" />
                        <externalMetadataColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Insert Accessories.Inputs[OLE DB Destination Input].ExternalColumns[Accessory3Quantity]"
                          dataType="r8"
                          name="Accessory3Quantity" />
                        <externalMetadataColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Insert Accessories.Inputs[OLE DB Destination Input].ExternalColumns[Accessory3Consumable ]"
                          dataType="wstr"
                          length="255"
                          name="Accessory3Consumable " />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Insert Accessories.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Insert Accessories.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Insert Accessories.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Insert Accessories.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Insert Accessories.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Insert Accessories.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Import Accessories Meta Data\Import Accessories Meta Data.Paths[Excel Source Output]"
                  endId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Insert Accessories.Inputs[OLE DB Destination Input]"
                  name="Excel Source Output"
                  startId="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source.Outputs[Excel Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Import Accessories Meta Data\Truncate ETL Tables"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{29924fbc-6b17-4524-9ad7-1d2e6772f8c4}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Truncate ETL Tables"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{41489ED5-061B-4D57-9EF3-08A4032B6A13}"
              SQLTask:SqlStatementSource="&#xA;TRUNCATE TABLE Clients_ETL_Accessories" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Import Accessories Meta Data.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{ed5c4861-7f76-464e-89d6-17eee42088dc}"
          DTS:From="Package\Import Accessories Meta Data\Truncate ETL Tables"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Import Accessories Meta Data\Import Accessories Meta Data" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Import Custom Fields Meta Data"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{CC2B8104-A940-4B71-9252-E5944A73696E}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Import Custom Fields Meta Data">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:DelayValidation="True"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{532aba0e-95da-45cd-a88d-17c92e40078c}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Import Custom Fields Meta Data"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source"
                  componentClassID="Microsoft.ExcelSource"
                  contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Excel Source"
                  name="Excel Source"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">'CustomFields - Data$'</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.String"
                      description="The mapping from parameters in the SQL command to variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Client Template]"
                      connectionManagerRefId="Package.ConnectionManagers[Client Template]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output]"
                      name="Excel Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output].Columns[ProductType]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[ProductType]"
                          length="255"
                          lineageId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output].Columns[ProductType]"
                          name="ProductType"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output].Columns[CustomField1Name]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[CustomField1Name]"
                          length="255"
                          lineageId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output].Columns[CustomField1Name]"
                          name="CustomField1Name"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output].Columns[CustomField1DataType]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[CustomField1DataType]"
                          length="255"
                          lineageId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output].Columns[CustomField1DataType]"
                          name="CustomField1DataType"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output].Columns[CustomField1Required]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[CustomField1Required]"
                          length="255"
                          lineageId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output].Columns[CustomField1Required]"
                          name="CustomField1Required"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output].Columns[CustomField2Name]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[CustomField2Name]"
                          length="255"
                          lineageId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output].Columns[CustomField2Name]"
                          name="CustomField2Name"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output].Columns[CustomField2DataType]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[CustomField2DataType]"
                          length="255"
                          lineageId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output].Columns[CustomField2DataType]"
                          name="CustomField2DataType"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output].Columns[CustomField2Required]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[CustomField2Required]"
                          length="255"
                          lineageId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output].Columns[CustomField2Required]"
                          name="CustomField2Required"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output].Columns[CustomField3Name]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[CustomField3Name]"
                          length="255"
                          lineageId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output].Columns[CustomField3Name]"
                          name="CustomField3Name"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output].Columns[CustomField3DataType]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[CustomField3DataType]"
                          length="255"
                          lineageId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output].Columns[CustomField3DataType]"
                          name="CustomField3DataType"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output].Columns[CustomField3Required]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[CustomField3Required]"
                          length="255"
                          lineageId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output].Columns[CustomField3Required]"
                          name="CustomField3Required"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output].Columns[CustomField4Name]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[CustomField4Name]"
                          length="255"
                          lineageId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output].Columns[CustomField4Name]"
                          name="CustomField4Name"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output].Columns[CustomField4DataType]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[CustomField4DataType]"
                          length="255"
                          lineageId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output].Columns[CustomField4DataType]"
                          name="CustomField4DataType"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output].Columns[CustomField4Required]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[CustomField4Required]"
                          length="255"
                          lineageId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output].Columns[CustomField4Required]"
                          name="CustomField4Required"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[ProductType]"
                          dataType="wstr"
                          length="255"
                          name="ProductType" />
                        <externalMetadataColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[CustomField1Name]"
                          dataType="wstr"
                          length="255"
                          name="CustomField1Name" />
                        <externalMetadataColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[CustomField1DataType]"
                          dataType="wstr"
                          length="255"
                          name="CustomField1DataType" />
                        <externalMetadataColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[CustomField1Required]"
                          dataType="wstr"
                          length="255"
                          name="CustomField1Required" />
                        <externalMetadataColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[CustomField2Name]"
                          dataType="wstr"
                          length="255"
                          name="CustomField2Name" />
                        <externalMetadataColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[CustomField2DataType]"
                          dataType="wstr"
                          length="255"
                          name="CustomField2DataType" />
                        <externalMetadataColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[CustomField2Required]"
                          dataType="wstr"
                          length="255"
                          name="CustomField2Required" />
                        <externalMetadataColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[CustomField3Name]"
                          dataType="wstr"
                          length="255"
                          name="CustomField3Name" />
                        <externalMetadataColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[CustomField3DataType]"
                          dataType="wstr"
                          length="255"
                          name="CustomField3DataType" />
                        <externalMetadataColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[CustomField3Required]"
                          dataType="wstr"
                          length="255"
                          name="CustomField3Required" />
                        <externalMetadataColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[CustomField4Name]"
                          dataType="wstr"
                          length="255"
                          name="CustomField4Name" />
                        <externalMetadataColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[CustomField4DataType]"
                          dataType="wstr"
                          length="255"
                          name="CustomField4DataType" />
                        <externalMetadataColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[CustomField4Required]"
                          dataType="wstr"
                          length="255"
                          name="CustomField4Required" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Error Output]"
                      isErrorOut="true"
                      name="Excel Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Error Output].Columns[ProductType]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Error Output].Columns[ProductType]"
                          name="ProductType" />
                        <outputColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Error Output].Columns[CustomField1Name]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Error Output].Columns[CustomField1Name]"
                          name="CustomField1Name" />
                        <outputColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Error Output].Columns[CustomField1DataType]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Error Output].Columns[CustomField1DataType]"
                          name="CustomField1DataType" />
                        <outputColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Error Output].Columns[CustomField1Required]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Error Output].Columns[CustomField1Required]"
                          name="CustomField1Required" />
                        <outputColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Error Output].Columns[CustomField2Name]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Error Output].Columns[CustomField2Name]"
                          name="CustomField2Name" />
                        <outputColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Error Output].Columns[CustomField2DataType]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Error Output].Columns[CustomField2DataType]"
                          name="CustomField2DataType" />
                        <outputColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Error Output].Columns[CustomField2Required]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Error Output].Columns[CustomField2Required]"
                          name="CustomField2Required" />
                        <outputColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Error Output].Columns[CustomField3Name]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Error Output].Columns[CustomField3Name]"
                          name="CustomField3Name" />
                        <outputColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Error Output].Columns[CustomField3DataType]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Error Output].Columns[CustomField3DataType]"
                          name="CustomField3DataType" />
                        <outputColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Error Output].Columns[CustomField3Required]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Error Output].Columns[CustomField3Required]"
                          name="CustomField3Required" />
                        <outputColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Error Output].Columns[CustomField4Name]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Error Output].Columns[CustomField4Name]"
                          name="CustomField4Name" />
                        <outputColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Error Output].Columns[CustomField4DataType]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Error Output].Columns[CustomField4DataType]"
                          name="CustomField4DataType" />
                        <outputColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Error Output].Columns[CustomField4Required]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Error Output].Columns[CustomField4Required]"
                          name="CustomField4Required" />
                        <outputColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Insert Custom Fields"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="Insert Custom Fields"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[Clients_ETL_CustomFields]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">ROWS_PER_BATCH = 500</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Insert Custom Fields.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Target - TIPWebETL]"
                      connectionManagerRefId="Package.ConnectionManagers[Target - TIPWebETL]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Insert Custom Fields.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Insert Custom Fields.Inputs[OLE DB Destination Input].Columns[ProductType]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="ProductType"
                          externalMetadataColumnId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Insert Custom Fields.Inputs[OLE DB Destination Input].ExternalColumns[ProductType]"
                          lineageId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output].Columns[ProductType]" />
                        <inputColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Insert Custom Fields.Inputs[OLE DB Destination Input].Columns[CustomField1Name]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="CustomField1Name"
                          externalMetadataColumnId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Insert Custom Fields.Inputs[OLE DB Destination Input].ExternalColumns[CustomField1Name]"
                          lineageId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output].Columns[CustomField1Name]" />
                        <inputColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Insert Custom Fields.Inputs[OLE DB Destination Input].Columns[CustomField1DataType]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="CustomField1DataType"
                          externalMetadataColumnId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Insert Custom Fields.Inputs[OLE DB Destination Input].ExternalColumns[CustomField1DataType]"
                          lineageId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output].Columns[CustomField1DataType]" />
                        <inputColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Insert Custom Fields.Inputs[OLE DB Destination Input].Columns[CustomField1Required]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="CustomField1Required"
                          externalMetadataColumnId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Insert Custom Fields.Inputs[OLE DB Destination Input].ExternalColumns[CustomField1Required]"
                          lineageId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output].Columns[CustomField1Required]" />
                        <inputColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Insert Custom Fields.Inputs[OLE DB Destination Input].Columns[CustomField2Name]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="CustomField2Name"
                          externalMetadataColumnId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Insert Custom Fields.Inputs[OLE DB Destination Input].ExternalColumns[CustomField2Name]"
                          lineageId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output].Columns[CustomField2Name]" />
                        <inputColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Insert Custom Fields.Inputs[OLE DB Destination Input].Columns[CustomField2DataType]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="CustomField2DataType"
                          externalMetadataColumnId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Insert Custom Fields.Inputs[OLE DB Destination Input].ExternalColumns[CustomField2DataType]"
                          lineageId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output].Columns[CustomField2DataType]" />
                        <inputColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Insert Custom Fields.Inputs[OLE DB Destination Input].Columns[CustomField2Required]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="CustomField2Required"
                          externalMetadataColumnId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Insert Custom Fields.Inputs[OLE DB Destination Input].ExternalColumns[CustomField2Required]"
                          lineageId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output].Columns[CustomField2Required]" />
                        <inputColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Insert Custom Fields.Inputs[OLE DB Destination Input].Columns[CustomField3Name]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="CustomField3Name"
                          externalMetadataColumnId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Insert Custom Fields.Inputs[OLE DB Destination Input].ExternalColumns[CustomField3Name]"
                          lineageId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output].Columns[CustomField3Name]" />
                        <inputColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Insert Custom Fields.Inputs[OLE DB Destination Input].Columns[CustomField3DataType]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="CustomField3DataType"
                          externalMetadataColumnId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Insert Custom Fields.Inputs[OLE DB Destination Input].ExternalColumns[CustomField3DataType]"
                          lineageId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output].Columns[CustomField3DataType]" />
                        <inputColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Insert Custom Fields.Inputs[OLE DB Destination Input].Columns[CustomField3Required]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="CustomField3Required"
                          externalMetadataColumnId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Insert Custom Fields.Inputs[OLE DB Destination Input].ExternalColumns[CustomField3Required]"
                          lineageId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output].Columns[CustomField3Required]" />
                        <inputColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Insert Custom Fields.Inputs[OLE DB Destination Input].Columns[CustomField4Name]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="CustomField4Name"
                          externalMetadataColumnId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Insert Custom Fields.Inputs[OLE DB Destination Input].ExternalColumns[CustomField4Name]"
                          lineageId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output].Columns[CustomField4Name]" />
                        <inputColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Insert Custom Fields.Inputs[OLE DB Destination Input].Columns[CustomField4DataType]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="CustomField4DataType"
                          externalMetadataColumnId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Insert Custom Fields.Inputs[OLE DB Destination Input].ExternalColumns[CustomField4DataType]"
                          lineageId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output].Columns[CustomField4DataType]" />
                        <inputColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Insert Custom Fields.Inputs[OLE DB Destination Input].Columns[CustomField4Required]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="CustomField4Required"
                          externalMetadataColumnId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Insert Custom Fields.Inputs[OLE DB Destination Input].ExternalColumns[CustomField4Required]"
                          lineageId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output].Columns[CustomField4Required]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Insert Custom Fields.Inputs[OLE DB Destination Input].ExternalColumns[ProductType]"
                          dataType="wstr"
                          length="255"
                          name="ProductType" />
                        <externalMetadataColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Insert Custom Fields.Inputs[OLE DB Destination Input].ExternalColumns[CustomField1Name]"
                          dataType="wstr"
                          length="255"
                          name="CustomField1Name" />
                        <externalMetadataColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Insert Custom Fields.Inputs[OLE DB Destination Input].ExternalColumns[CustomField1DataType]"
                          dataType="wstr"
                          length="255"
                          name="CustomField1DataType" />
                        <externalMetadataColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Insert Custom Fields.Inputs[OLE DB Destination Input].ExternalColumns[CustomField1Required]"
                          dataType="wstr"
                          length="255"
                          name="CustomField1Required" />
                        <externalMetadataColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Insert Custom Fields.Inputs[OLE DB Destination Input].ExternalColumns[CustomField2Name]"
                          dataType="wstr"
                          length="255"
                          name="CustomField2Name" />
                        <externalMetadataColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Insert Custom Fields.Inputs[OLE DB Destination Input].ExternalColumns[CustomField2DataType]"
                          dataType="wstr"
                          length="255"
                          name="CustomField2DataType" />
                        <externalMetadataColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Insert Custom Fields.Inputs[OLE DB Destination Input].ExternalColumns[CustomField2Required]"
                          dataType="wstr"
                          length="255"
                          name="CustomField2Required" />
                        <externalMetadataColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Insert Custom Fields.Inputs[OLE DB Destination Input].ExternalColumns[CustomField3Name]"
                          dataType="wstr"
                          length="255"
                          name="CustomField3Name" />
                        <externalMetadataColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Insert Custom Fields.Inputs[OLE DB Destination Input].ExternalColumns[CustomField3DataType]"
                          dataType="wstr"
                          length="255"
                          name="CustomField3DataType" />
                        <externalMetadataColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Insert Custom Fields.Inputs[OLE DB Destination Input].ExternalColumns[CustomField3Required]"
                          dataType="wstr"
                          length="255"
                          name="CustomField3Required" />
                        <externalMetadataColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Insert Custom Fields.Inputs[OLE DB Destination Input].ExternalColumns[CustomField4Name]"
                          dataType="wstr"
                          length="255"
                          name="CustomField4Name" />
                        <externalMetadataColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Insert Custom Fields.Inputs[OLE DB Destination Input].ExternalColumns[CustomField4DataType]"
                          dataType="wstr"
                          length="255"
                          name="CustomField4DataType" />
                        <externalMetadataColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Insert Custom Fields.Inputs[OLE DB Destination Input].ExternalColumns[CustomField4Required]"
                          dataType="wstr"
                          length="255"
                          name="CustomField4Required" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Insert Custom Fields.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Insert Custom Fields.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Insert Custom Fields.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Insert Custom Fields.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Insert Custom Fields.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Insert Custom Fields.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data.Paths[Excel Source Output]"
                  endId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Insert Custom Fields.Inputs[OLE DB Destination Input]"
                  name="Excel Source Output"
                  startId="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source.Outputs[Excel Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Import Custom Fields Meta Data\Truncate ETL Tables"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{22457C10-D29A-46BA-998B-9FCF34DB5306}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Truncate ETL Tables"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{41489ED5-061B-4D57-9EF3-08A4032B6A13}"
              SQLTask:SqlStatementSource="&#xA;TRUNCATE TABLE Clients_ETL_CustomFields&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Import Custom Fields Meta Data.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{6BE04BFD-65D3-4244-BE07-7DAD96147368}"
          DTS:From="Package\Import Custom Fields Meta Data\Truncate ETL Tables"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Preliminary Report"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{7440885D-E78E-41DA-A29E-B5E1606B512C}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Preliminary Report">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Preliminary Report\Create Preliminary Report"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{5ae91daa-5835-44e6-a2ad-5b6d4c47aad4}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create Preliminary Report"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_9889a7204c904333ae2e583bdd84a280"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="VisualBasic"
              ReadOnlyVariables="User::_SSISKeyID,User::CustomerCode,User::Debug,User::ReportPath">
              <ProjectItem
                Name="ST_9889a7204c904333ae2e583bdd84a280.vbproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{5F8123A6-B37B-45C0-A49E-367FFC845768}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>My Project</AppDesignerFolder><RootNamespace>ST_8a64a78dc3a14df19e76c1106e01c2b8</RootNamespace><AssemblyName>ST_9889a7204c904333ae2e583bdd84a280</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch><TargetFrameworkProfile></TargetFrameworkProfile></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineDebug>true</DefineDebug><DefineTrace>true</DefineTrace><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineDebug>false</DefineDebug><DefineTrace>true</DefineTrace><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><Import Include="Microsoft.VisualBasic" /><Import Include="System" /><Import Include="System.Collections" /><Import Include="System.Data" /><Import Include="System.Diagnostics" /><Import Include="System.Windows.Forms" /></ItemGroup><ItemGroup><AppDesigner Include="My Project\" /><Compile Include="My Project\AssemblyInfo.vb"><SubType>Code</SubType></Compile><EmbeddedResource Include="My Project\Resources.resx"><Generator>VbMyResourcesResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.vb</LastGenOutput><CustomToolNamespace>My.Resources</CustomToolNamespace></EmbeddedResource><Compile Include="My Project\Resources.Designer.vb"><AutoGen>True</AutoGen><DesignTime>True</DesignTime><DependentUpon>Resources.resx</DependentUpon><SubType>Code</SubType></Compile><None Include="My Project\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.vb</LastGenOutput></None><Compile Include="My Project\Settings.Designer.vb"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon><SubType>Code</SubType></Compile><Compile Include="ScriptMain.vb"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a VB project.--><Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" /><Host Name="ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST120</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.vb"
                Encoding="UTF8"><![CDATA[#Region "Help:  Introduction to the script task"
'The Script Task allows you to perform virtually any operation that can be accomplished in
'a .Net application within the context of an Integration Services control flow. 

'Expand the other regions which have "Help" prefixes for examples of specific ways to use
'Integration Services features within this script task.
#End Region


#Region "Imports"
Imports System
Imports System.Data
Imports System.Math
Imports Microsoft.SqlServer.Dts.Runtime
#End Region

'ScriptMain is the entry point class of the script.  Do not change the name, attributes,
'or parent of this class.
<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute()> _
<System.CLSCompliantAttribute(False)> _
Partial Public Class ScriptMain
    Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

#Region "Help:  Using Integration Services variables and parameters in a script"
    'To use a variable in this script, first ensure that the variable has been added to 
    'either the list contained in the ReadOnlyVariables property or the list contained in 
    'the ReadWriteVariables property of this script task, according to whether or not your
    'code needs to write to the variable.  To add the variable, save this script, close this instance of
    'Visual Studio, and update the ReadOnlyVariables and 
    'ReadWriteVariables properties in the Script Transformation Editor window.
    'To use a parameter in this script, follow the same steps. Parameters are always read-only.

    'Example of reading from a variable:
    ' startTime = Dts.Variables("System::StartTime").Value

    'Example of writing to a variable:
    ' Dts.Variables("User::myStringVariable").Value = "new value"

    'Example of reading from a package parameter:
    ' batchId = Dts.Variables("$Package::batchId").Value

    'Example of reading from a project parameter:
    ' batchId = Dts.Variables("$Project::batchId").Value

    'Example of reading from a sensitive project parameter:
    ' batchId = Dts.Variables("$Project::batchId").GetSensitiveValue()
#End Region

#Region "Help:  Firing Integration Services events from a script"
    'This script task can fire events for logging purposes.

    'Example of firing an error event:
    ' Dts.Events.FireError(18, "Process Values", "Bad value", "", 0)

    'Example of firing an information event:
    ' Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, fireAgain)

    'Example of firing a warning event:
    ' Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0)
#End Region

#Region "Help:  Using Integration Services connection managers in a script"
    'Some types of connection managers can be used in this script task.  See the topic 
    '"Working with Connection Managers Programatically" for details.

    'Example of using an ADO.Net connection manager:
    ' Dim rawConnection As Object = Dts.Connections("Sales DB").AcquireConnection(Dts.Transaction)
    ' Dim myADONETConnection As SqlConnection = CType(rawConnection, SqlConnection)
    ' <Use the connection in some code here, then release the connection>
    ' Dts.Connections("Sales DB").ReleaseConnection(rawConnection)

    'Example of using a File connection manager
    ' Dim rawConnection As Object = Dts.Connections("Prices.zip").AcquireConnection(Dts.Transaction)
    ' Dim filePath As String = CType(rawConnection, String)
    ' <Use the connection in some code here, then release the connection>
    ' Dts.Connections("Prices.zip").ReleaseConnection(rawConnection)
#End Region

    'This method is called when this script task executes in the control flow.
    'Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
    'To open Help, press F1.

    Public Sub Main()
        'User::CustomerCode,User::CustomerFullName,User::Debug,User::FileName,User::Integration,User::IntegrationType,
        'User:   ReportHideExceptionColumnsInventory, User: ReportHideExceptionColumnsPurchaseOrder, User: ReportHideExceptionColumnsStatus, User: ReportsPath, User: RowCount
        Dim ReportPath As String = CType(Dts.Variables("ReportPath").Value, String)
        Dim CustomerName As String = Dts.Variables("CustomerCode").Value.ToString()
        Dim IPKey As String = CType(Dts.Variables("_SSISKeyID").Value, String)
        ReportPath = ReportPath + "Documents\"


        Dim ReportDate As String = Today.ToShortDateString.ToString()

        Dim URL As String = "http://hayessqlsvr/ReportServer/Pages/ReportViewer.aspx?%2fDataConversion%2fDataConversionPreliminaryVer2&rs:Command=Render"


        'Parm 1
        URL = URL + "&IPKey=" + IPKey


        'Appending Export to Excel and Toolbar
        URL = URL + "&rs:Format=Excel&rc:Toolbar=False"

        'for Testing
        MessageBox.Show(CustomerName, "Customer Name:", MessageBoxButtons.OK)
        'MessageBox.Show(URL, "URL for Report", MessageBoxButtons.OK)

        Dim httpConn As ConnectionManager = Dts.Connections("ReportServer")
        Dim clientConn As HttpClientConnection = New HttpClientConnection(httpConn.AcquireConnection(Nothing))

        Dim ReportFileName As String = ReportPath + CustomerName + "_DataConversionPreliminary_Report_" + Format(Now, "MMddyyyy") + ".xls"

        'for Testing
        MessageBox.Show(ReportFileName, "Report Name: ", MessageBoxButtons.OK)

        clientConn.ServerURL = URL

        clientConn.DownloadFile(ReportFileName, True)

        Dts.TaskResult = ScriptResults.Success
    End Sub

#Region "ScriptResults declaration"
    'This enum provides a convenient shorthand within the scope of this class for setting the
    'result of the script.

    'This code was generated automatically.
    Enum ScriptResults
        Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
        Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
    End Enum

#End Region

End Class]]></ProjectItem>
              <ProjectItem
                Name="My Project\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="My Project\AssemblyInfo.vb"
                Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("ST_8a64a78dc3a14df19e76c1106e01c2b8")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("ST_8a64a78dc3a14df19e76c1106e01c2b8")> 
<Assembly: AssemblyCopyright("Copyright @  2019")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("ed9e13df-5893-4099-9b0a-40a2bc478d99")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
              <ProjectItem
                Name="My Project\Settings.Designer.vb"
                Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_ff5ff8590cd148c0a13bba8a9acf59b9</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_ff5ff8590cd148c0a13bba8a9acf59b9</msb:DisplayName>
		<msb:ProjectId>{8CF29F33-A80A-428D-9F41-178F7AFC5E6E}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_9889a7204c904333ae2e583bdd84a280.vbproj"/>
		<msb:File Include="My Project\AssemblyInfo.vb"/>
		<msb:File Include="ScriptMain.vb"/>
		<msb:File Include="My Project\Resources.resx"/>
		<msb:File Include="My Project\Resources.Designer.vb"/>
		<msb:File Include="My Project\Settings.settings"/>
		<msb:File Include="My Project\Settings.Designer.vb"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Resources.Designer.vb"
                Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
              <BinaryItem
                Name="ST_9889a7204c904333ae2e583bdd84a280.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAD/ci10AAAAAAAAAAOAAIiALAVAAAB4AAAAIAAAAAAAApj0A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAFQ9AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAArB0AAAAgAAAAHgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAgAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAJgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACI
PQAAAAAAAEgAAAACAAUAaCMAADQZAAABAAAAAAAAAJw8AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBgAAAoqHgIoGQAACiqmcxoAAAqAAQAABHMbAAAKgAIA
AARzHAAACoADAAAEcx0AAAqABAAABCoufgEAAARvHgAACioufgIAAARvHwAACioufgMAAARvIAAA
CioufgQAAARvIQAACioeAigiAAAKKq5+BQAABC0ecgEAAHDQBQAAAigjAAAKbyQAAApzJQAACoAF
AAAEfgUAAAQqGn4GAAAEKh4CgAYAAAQqQnMiAAAKKCYAAAqACAAABCoeAignAAAKKgAAGzABAD8A
AAAAAAAAfgcAAAQtMn4IAAAEKCYAAAooKAAACn4HAAAELRxzDQAABoAHAAAE3hB+CAAABCgmAAAK
KCkAAArcfgcAAAQqAAEQAAACAB0ADCkAEAAAAAAeAigqAAAKKhMwBQBAAQAAAQAAEQIoKwAACm8s
AAAKcjMAAHBvLQAACm8uAAAKKC8AAAoKAigrAAAKbywAAApySQAAcG8tAAAKby4AAApvMAAACgsC
KCsAAApvLAAACnJjAABwby0AAApvLgAACigvAAAKDAZyeQAAcCgxAAAKCigyAAAKEwcSBygzAAAK
bzQAAAomco8AAHANCXKIAQBwCCg1AAAKDQlymAEAcCgxAAAKDQdy3AEAcBYoNgAACiYCKCsAAApv
NwAACnL6AQBwbzgAAAoTBBEEFG85AAAKKCYAAApzOgAAChMFG40xAAABJRYGoiUXB6IlGHIUAgBw
oiUZKDsAAAqMJwAAAXJaAgBwKDwAAAqiJRpybAIAcKIoPQAAChMGEQZydgIAcBYoNgAACiYRBQlv
PgAAChEFEQYXbz8AAAoCKCsAAAoWb0AAAAoqNgIDKCYAAAooQQAACioeAihCAAAKKi7QCAAAAigj
AAAKKh4CKDAAAAoqAAATMAEAFAAAAAIAABECjAUAABstCCgBAAArCisCAgoGKiID/hUFAAAbKgAA
ABMwAgAoAAAAAwAAEQJ7RAAACm9FAAAKCgaMCAAAGy0SKAIAACsKAntEAAAKBm9GAAAKBipKAigi
AAAKAnNHAAAKfUQAAAoqAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAGAIAAAj
fgAAzAgAAAwKAAAjU3RyaW5ncwAAAADYEgAAlAIAACNVUwBsFQAAEAAAACNHVUlEAAAAfBUAALgD
AAAjQmxvYgAAAAAAAAACAAABVx2iCQkPAAAA+gEzABYAAAEAAAA4AAAACgAAAAwAAAAZAAAABAAA
AEcAAAACAAAANwAAAAMAAAAEAAAACAAAAAkAAAAIAAAAAQAAAAYAAAABAAAAAwAAAAMAAAACAAAA
AAB8BQEAAAAAAAYAqQMZCAYATgQZCAYAgAJaBw8AvwgAAAYAwQIpBgYAjAMpBgYANQQpBgYAyQMp
BgYA4gMpBgYACAMpBgYA/QOtBQYArQLTBwYAKQLTBwYAVAMpBgYAIwOoBAoATAL0BgoAFAJmBQoA
lAJmBQ4A7AGpBw4AKgdtBwYAPANaBw4A2ALyBw4A8ALjAAYAegmtBQ4AEAepBw4AcQPjAAYAnwGt
BQ4AJQAqBQoANwK5BQYA0gY5CAYAYgYUBgoA/AH/BQYAYwJaBxIAEwQBBRIA0AEBBQYA3QStBRYA
4gZ8ARYATQZ8AQYAcwGtBQYAtAWtBQYANgGtBQYAAwopBgYAOQkZCAYAUgeXBBIAVAUBBRYA0gh8
ARYALQF8AQ4ACwnyBwYA1gStBQ4AZwHjABoAwwn2CBoAkAn2CBoAJwn2CBYAGwl8AQ4A3AjjAAYA
OwetBQAAAABzAAAAAAABAAEAAAAAAPEFzglNAAEAAQAAAAAAKAfOCVEAAQACAAABEACBCc4JYQAB
AAMAAAAAAHsISghhAAUACAAAARAA5AhPAIEABwAMAAEAAADWBU8AjQAJAA8ABQEAAJsHAABhAAkA
EQAFAQAANAAAAGEACQAYAAIBAABYCQAAoQAKABoAMQCXBlEBMQBuBlkBMQCCBmEBMQCwBmkBEQAz
B3EBEQDEAXUBEQBsBHkBEQB0CX0BIQCsCQ8BBgbSAIABVoBICYMBVoCkAYMBUCAAAAAABhhFBwYA
AQBYIAAAAAAGGEUHBgABAGAgAAAAABEYSweHAQEAiiAAAAAAEwgbB4sBAQCWIAAAAAATCOEFkAEB
AKIgAAAAABMIDAeVAQEAriAAAAAAEwiLB5oBAQC6IAAAAAADGEUHBgABAMIgAAAAABYIzgafAQEA
7iAAAAAAFgisAaQBAQD1IAAAAAAWCLgBqQEBAP0gAAAAABEYSweHAQIADiEAAAAABhhFBwYAAgAY
IQAAAAAWCHQErwECAHQhAAAAAAYYRQcGAAIAfCEAAAAABgDcBQYAAgDIIgAAAADGAu8I5wACANYi
AAAAAMYCIQHsAAMA3iIAAAAAgwCcAbQBAwDqIgAAAADGAtQEnAADAPQiAAAAABEAvwC5AQMAFCMA
AAAAAQCrAMEBBAC6IAAAAAAGGEUHBgAFACAjAAAAAAMICAFKAAUAVCMAAAAABhhFBwYABQAAAAEA
kQQAAAEAbAYAAAEAGAEAAAEAGAEJAEUHAQARAEUHBgAZAEUHCgApAEUHEAAxAEUHEAA5AEUHEABB
AEUHEABJAEUHEABRAEUHEABZAEUHFQBhAEUHFQBpAEUHEABxAEUHEAB5AEUHEACBAEUHGgCRAEUH
IACpAEUHBgCxAEUHBgC5AEUHBgDRAEUHJgDpAEUHEAAJAUUHBgARAUUHBgCZAEUHBgChAEUHBgAM
AEUHBgAUAEUHBgAcAEUHBgAkAEUHBgAMAAgBSgAUAAgBSgAcAAgBSgAkAAgBSgDBAEUHBgDZAEgB
TwDZAP8JVwDxAEUHXQBZAYgEZQABAUUHBgBhARUHagBhAYsJagAZAUUHBgAZAVAJgABpAc4IhgBx
AaQFjAB5AXQEkwCBAdQElwDBANQEnACJAWYJoACRAfUJpgA5AcIEnACJAdQEnACJAWYJrACZAb4J
swBpARcJvgCxAaQFxAApATsGywAxAUUH0ACRAbYJpgC5AW0J1QCJAWYJ2wAxAXwAEAAxAVoB4QBp
AZ0JAQDBAO8I5wDBACEB7ADBAfkA+AA0AKwJDwE8AHQESgA8AH4EJgE8AEUHBgAIACwARwEIADAA
TAEpAKsAcQMuAAsA8QEuABMA+gEuABsAGQIuACMAIgIuACsASwIuADMASwIuADsAIgIuAEMAUQIu
AEsASwIuAFMAaAIuAFsASwIuAGMAbgIuAGsAmAIuAHMApQJAAIsATAFAAIMA7QJDAHsA9gJDAIMA
7QJJAKsAggNjAHsA9gJjAIMA7QJpAKsAlgOAAIsATAGDAJMATAGDAJsATAGDAHsA9gKJAKsAowOg
AIsATAGpAIMAGQLAAIsATAHJAIMAGQLgAIsATAHjALsATAHjAFMASwLpALMATAEDAYMA7QIDAaMA
DwMjAYMA7QIjAVsASwIgAoMA7QIgAosATAFAAoMA7QJAAosATAFgAoMA7QJgAosATAGAAoMA7QKA
AosATAGgAosATAHAAosATAHgAosATAHgAoMA7QIAA4sATAEgA4sATAEgA4MA7QJvAPAAAwEEAAEA
BQAFAAYABwAJAAgAAAAqB8kBAADzBc4BAAAQB9MBAACdB9gBAADSBt0BAADIAeIBAACRBOcBAAAM
AewBAgAEAAMAAgAFAAUAAgAGAAcAAgAHAAkAAgAJAAsAAgAKAA0AAQALAA0AAgAOAA8AAgAYABEA
LgA1ADwAQwD1AAgBFwEeAQSAAAABAAAAAAAAAAAAAAAAAAEAAAAEAAAAAAAAAAAAAAAsAdoAAAAA
AAQAAAAAAAAAAAAAACwBrQUAAAAACgAAAAAAAAAAAAAANQHjAAAAAAAMAAAAAAAAAAAAAAA+AeIE
AAAAAAwAAAAAAAAAAAAAAD4BigAAAAAABAAAAAAAAAAAAAAALAH2CAAAAAAAAAAAAQAAAIcIAAAI
AAQACQAEAAoABwAAABAAEgCpAAAAEAArAKkAAAAAAC0AqQCHAP4AhwAhAQAAAFNUXzk4ODlhNzIw
NGM5MDQzMzNhZTJlNTgzYmRkODRhMjgwAENvbnRleHRWYWx1ZWAxAFRocmVhZFNhZmVPYmplY3RQ
cm92aWRlcmAxAFNUXzhhNjRhNzhkYzNhMTRkZjE5ZTc2YzExMDZlMDFjMmI4ADxNb2R1bGU+AHNl
dF9TZXJ2ZXJVUkwATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAFQARGlzcG9zZV9fSW5z
dGFuY2VfXwBDcmVhdGVfX0luc3RhbmNlX18AdmFsdWVfXwBtc2NvcmxpYgBNaWNyb3NvZnQuVmlz
dWFsQmFzaWMAQ3JlYXRlSW5zdGFuY2UAZ2V0X0dldEluc3RhbmNlAGluc3RhbmNlAEdldEhhc2hD
b2RlAFZhcmlhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAERvd25sb2Fk
RmlsZQBEYXRlQW5kVGltZQBEYXRlVGltZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1l
AEdldFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBfcmVzQ3VsdHVyZQBWU1RB
UlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25CYXNlAEFwcGxpY2F0aW9uU2V0dGlu
Z3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAEd1aWRBdHRyaWJ1dGUASGVscEtleXdvcmRBdHRy
aWJ1dGUAR2VuZXJhdGVkQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRl
AERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAENvbVZpc2libGVB
dHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBTdGFuZGFyZE1vZHVsZUF0dHJpYnV0ZQBI
aWRlTW9kdWxlTmFtZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRG
cmFtZXdvcmtBdHRyaWJ1dGUARGVidWdnZXJIaWRkZW5BdHRyaWJ1dGUAQXNzZW1ibHlGaWxlVmVy
c2lvbkF0dHJpYnV0ZQBNeUdyb3VwQ29sbGVjdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0
aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9k
dWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAENMU0NvbXBsaWFudEF0dHJp
YnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0
cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAG1fVmFsdWUAZ2V0X1ZhbHVlAHNl
dF9WYWx1ZQBHZXRPYmplY3RWYWx1ZQBTeXN0ZW0uVGhyZWFkaW5nAFN5c3RlbS5SdW50aW1lLlZl
cnNpb25pbmcAVG9TaG9ydERhdGVTdHJpbmcAVG9TdHJpbmcATWF0aABNaWNyb3NvZnQuU3FsU2Vy
dmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBN
aWNyb3NvZnQuVmlzdWFsQmFzaWMuTXlTZXJ2aWNlcy5JbnRlcm5hbABTY3JpcHRPYmplY3RNb2Rl
bABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfOTg4OWE3MjA0YzkwNDMzM2FlMmU1ODNiZGQ4NGEy
ODAuZGxsAGdldF9JdGVtAFN5c3RlbQBFbnVtAFN5c3RlbS5Db21wb25lbnRNb2RlbC5EZXNpZ24A
U2NyaXB0TWFpbgBnZXRfQXBwbGljYXRpb24ATXlBcHBsaWNhdGlvbgBTeXN0ZW0uQ29uZmlndXJh
dGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBBY3F1aXJlQ29ubmVj
dGlvbgBIdHRwQ2xpZW50Q29ubmVjdGlvbgBDdWx0dXJlSW5mbwBtX0FwcE9iamVjdFByb3ZpZGVy
AG1fVXNlck9iamVjdFByb3ZpZGVyAG1fQ29tcHV0ZXJPYmplY3RQcm92aWRlcgBtX015V2ViU2Vy
dmljZXNPYmplY3RQcm92aWRlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAENvbm5lY3Rpb25NYW5hZ2Vy
AFN5c3RlbS5Db2RlRG9tLkNvbXBpbGVyAGdldF9Vc2VyAEVudGVyAGdldF9Db21wdXRlcgBNeUNv
bXB1dGVyAF9yZXNNZ3IAQWN0aXZhdG9yAC5jdG9yAC5jY3RvcgBNb25pdG9yAFN5c3RlbS5EaWFn
bm9zdGljcwBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuRGV2aWNlcwBnZXRfV2ViU2VydmljZXMATXlX
ZWJTZXJ2aWNlcwBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuQXBwbGljYXRpb25TZXJ2aWNlcwBTeXN0
ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMATWljcm9zb2Z0LlZpc3VhbEJhc2ljLkNvbXBpbGVy
U2VydmljZXMAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2Vz
AFNUXzhhNjRhNzhkYzNhMTRkZjE5ZTc2YzExMDZlMDFjMmI4Lk15LlJlc291cmNlcwBNeVJlc291
cmNlcwBTVF84YTY0YTc4ZGMzYTE0ZGYxOWU3NmMxMTA2ZTAxYzJiOC5SZXNvdXJjZXMucmVzb3Vy
Y2VzAERlYnVnZ2luZ01vZGVzAGdldF9WYXJpYWJsZXMAU3RyaW5ncwBNeVNldHRpbmdzAEVxdWFs
cwBTeXN0ZW0uV2luZG93cy5Gb3JtcwBDb252ZXJzaW9ucwBnZXRfQ29ubmVjdGlvbnMATWVzc2Fn
ZUJveEJ1dHRvbnMAUnVudGltZUhlbHBlcnMAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMA
Q29uY2F0AEZvcm1hdABtX1N5bmNPYmplY3QATXlQcm9qZWN0AEV4aXQARGlhbG9nUmVzdWx0AHNl
dF9UYXNrUmVzdWx0AG1fQ29udGV4dABnZXRfTm93AFNob3cATWVzc2FnZUJveABTVF84YTY0YTc4
ZGMzYTE0ZGYxOWU3NmMxMTA2ZTAxYzJiOC5NeQBnZXRfVG9kYXkAZ2V0X0Fzc2VtYmx5AAAxTQB5
AC4AUgBlAHMAbwB1AHIAYwBlAHMALgBNAHkAUgBlAHMAbwB1AHIAYwBlAHMAABVSAGUAcABvAHIA
dABQAGEAdABoAAAZQwB1AHMAdABvAG0AZQByAEMAbwBkAGUAABVfAFMAUwBJAFMASwBlAHkASQBE
AAAVRABvAGMAdQBtAGUAbgB0AHMAXAAAgPdoAHQAdABwADoALwAvAGgAYQB5AGUAcwBzAHEAbABz
AHYAcgAvAFIAZQBwAG8AcgB0AFMAZQByAHYAZQByAC8AUABhAGcAZQBzAC8AUgBlAHAAbwByAHQA
VgBpAGUAdwBlAHIALgBhAHMAcAB4AD8AJQAyAGYARABhAHQAYQBDAG8AbgB2AGUAcgBzAGkAbwBu
ACUAMgBmAEQAYQB0AGEAQwBvAG4AdgBlAHIAcwBpAG8AbgBQAHIAZQBsAGkAbQBpAG4AYQByAHkA
VgBlAHIAMgAmAHIAcwA6AEMAbwBtAG0AYQBuAGQAPQBSAGUAbgBkAGUAcgAADyYASQBQAEsAZQB5
AD0AAEMmAHIAcwA6AEYAbwByAG0AYQB0AD0ARQB4AGMAZQBsACYAcgBjADoAVABvAG8AbABiAGEA
cgA9AEYAYQBsAHMAZQAAHUMAdQBzAHQAbwBtAGUAcgAgAE4AYQBtAGUAOgAAGVIAZQBwAG8AcgB0
AFMAZQByAHYAZQByAABFXwBEAGEAdABhAEMAbwBuAHYAZQByAHMAaQBvAG4AUAByAGUAbABpAG0A
aQBuAGEAcgB5AF8AUgBlAHAAbwByAHQAXwAAEU0ATQBkAGQAeQB5AHkAeQAACS4AeABsAHMAABtS
AGUAcABvAHIAdAAgAE4AYQBtAGUAOgAgAAAAALuG+NqjrvFPmlRvo3HHaSgABCABAQgDIAABBSAB
ARERBCABAQ4EIAEBAgUgAgEODgUgAQERRQcgBAEODg4OBhUSJAESDAYVEiQBEggGFRIkARJlBhUS
JAESIAQgABMABwABEm0RgKUFIAASgKkHIAIBDhKAqQQAARwcBAABARwQBwgODg4OEoCVEoCZDhGA
nQUgABKAtQUgABKAuQYgARKAvRwDIAAcBAABDhwDIAAOBQACDg4OBQAAEYCdBgADDg4ODgoAAxGA
0Q4OEYDVBSAAEoDZBiABEoCVHAQgARwcBCABARwFAAIOHA4FAAEOHQ4FIAIBDgIEIAECHAMgAAgE
BwEeAAIeAAUQAQAeAAQKAR4ABAcBEwAGFRIkARMABwYVEnEBEwAGFRJxARMAAhMABAoBEwAFIAEB
EwAIt3pcVhk04IkIsD9ffxHVCjoIiYRdzYCAzJEEAAAAAAQBAAAABwYVEiQBEgwHBhUSJAESCAcG
FRIkARJlBwYVEiQBEiADBhJ5AwYSfQMGEhgCBhwCBggDBhEoAwAAAQQAABIMBAAAEggEAAASZQQA
ABIgBAAAEnkEAAASfQUAAQESfQQAABIYBCAAEm0HEAEBHgAeAAcwAQEBEB4ABAgAEgwECAASCAQI
ABJlBAgAEiAECAASeQQIABJ9BAgAEhgEKAATAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2Vw
dGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfOGE2NGE3OGRjM2ExNGRmMTllNzZjMTEwNmUwMWMy
YjgAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxOQAABQEAAQAAKQEAJGVkOWUxM2RmLTU4OTMt
NDA5OS05YjBhLTQwYTJiYzQ3OGQ5OQAADAEABzEuMC4wLjAAAEcBABouTkVURnJhbWV3b3JrLFZl
cnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNAgBAAEA
AAAAABgBAApNeVRlbXBsYXRlCDExLjAuMC4wAABhAQA0U3lzdGVtLldlYi5TZXJ2aWNlcy5Qcm90
b2NvbHMuU29hcEh0dHBDbGllbnRQcm90b2NvbBJDcmVhdGVfX0luc3RhbmNlX18TRGlzcG9zZV9f
SW5zdGFuY2VfXwAAABABAAtNeS5Db21wdXRlcgAAEwEADk15LkFwcGxpY2F0aW9uAAAMAQAHTXku
VXNlcgAAEwEADk15LldlYlNlcnZpY2VzAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3Vy
Y2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5l
dXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5S
dW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAHw9AAAAAAAAAAAAAJY9AAAA
IAAAAAAAAAAAAAAAAAAAAAAAAAAAAACIPQAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUu
ZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEA
EAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABY
QAAA7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E
7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBW
AGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAA
AACwBEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAwADAAMAA0
AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4A
YQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBU
AF8AOABhADYANABhADcAOABkAGMAMwBhADEANABkAGYAMQA5AGUANwA2AGMAMQAxADAANgBlADAA
MQBjADIAYgA4AAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAw
AAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwA5ADgAOAA5AGEANwAyADAA
NABjADkAMAA0ADMAMwAzAGEAZQAyAGUANQA4ADMAYgBkAGQAOAA0AGEAMgA4ADAALgBkAGwAbAAA
AEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAA
QAAgACAAMgAwADEAOQAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAA
AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAVABfADkAOAA4ADkA
YQA3ADIAMAA0AGMAOQAwADQAMwAzADMAYQBlADIAZQA1ADgAMwBiAGQAZAA4ADQAYQAyADgAMAAu
AGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAFQAXwA4AGEANgA0AGEA
NwA4AGQAYwAzAGEAMQA0AGQAZgAxADkAZQA3ADYAYwAxADEAMAA2AGUAMAAxAGMAMgBiADgAAAA0
AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAOAAIAAEA
QQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAKg9AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Preliminary Report\Update StatusID"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{8bfbc46e-02bf-4e8f-903d-84d718f5e67e}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Update StatusID"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{042B5364-0F0A-4FF5-A2B0-25049A4E93C6}"
              SQLTask:SqlStatementSource="DECLARE @IPKey INT = ?&#xA;&#xA;EXEC DataConversionStatusUpdate @IPKey=@IPKey,@StatusID=3" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::_SSISKeyID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="131"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Preliminary Report.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{39CE6B9D-D716-495F-B990-3CA8E8AF6193}"
          DTS:From="Package\Preliminary Report\Create Preliminary Report"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Preliminary Report\Update StatusID" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Set Varables"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{D865DDC5-13A2-476D-975E-BA8E1A46820F}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Set Varables">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Set Varables\Create ETL DB"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{5178BAA0-1765-4699-BF96-3D8825430C02}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create ETL DB"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{042B5364-0F0A-4FF5-A2B0-25049A4E93C6}"
              SQLTask:SqlStatementSource="DECLARE @DBName&#x9;VARCHAR(100) = ?&#xA;&#xA;EXEC CreateETLDatabaseAndScheama @DBName=@DBName&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::DatabaseName_ETL"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Set Varables\Create SP and Funtions"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Create SP and Funtions"
          DTS:DTSID="{AD16B96A-CEAC-4BD2-B32B-214517741A83}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create SP and Funtions"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{B22F1E39-640F-4A2B-9405-2AA692906B69}"
              SQLTask:SqlStatementSource="&#xA;/****** Object:  UserDefinedFunction [dbo].[SplitArrayToTable]    Script Date: 11/8/2018 3:57:28 PM ******/&#xA;SET ANSI_NULLS ON&#xA;GO&#xA;SET QUOTED_IDENTIFIER ON&#xA;GO&#xA;IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SplitArrayToTable]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))&#xA;BEGIN&#xA;execute dbo.sp_executesql @statement = N'&#xA;&#xA;&#xA;&#xA;CREATE FUNCTION [dbo].[SplitArrayToTable] &#xA;   (  @Delimiter varchar(5), &#xA;      @List      varchar(MAX)&#xA;   ) &#xA;   RETURNS @TableOfValues table &#xA;      (  RowID   smallint IDENTITY(1,1), &#xA;         [Value] varchar(MAX) &#xA;      ) &#xA;AS &#xA;   BEGIN&#xA;    &#xA;      DECLARE @LenString int &#xA; &#xA;      WHILE len( @List ) &gt; 0 &#xA;         BEGIN &#xA;         &#xA;            SELECT @LenString = &#xA;               (CASE charindex( @Delimiter, @List ) &#xA;                   WHEN 0 THEN len( @List ) &#xA;                   ELSE ( charindex( @Delimiter, @List ) -1 )&#xA;                END&#xA;               ) &#xA;                                &#xA;            INSERT INTO @TableOfValues &#xA;               SELECT substring( @List, 1, @LenString )&#xA;                &#xA;            SELECT @List = &#xA;               (CASE ( len( @List ) - @LenString ) &#xA;                   WHEN 0 THEN '''' &#xA;                   ELSE right( @List, len( @List ) - @LenString - 1 ) &#xA;                END&#xA;               ) &#xA;         END&#xA;          &#xA;      RETURN &#xA;      &#xA;   END &#xA;' &#xA;END&#xA;GO&#xA;/****** Object:  StoredProcedure [Cleanup].[ChangingDelimiterCol2Update]    Script Date: 11/8/2018 3:57:28 PM ******/&#xA;SET ANSI_NULLS ON&#xA;GO&#xA;SET QUOTED_IDENTIFIER ON&#xA;GO&#xA;IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Cleanup].[ChangingDelimiterCol2Update]') AND type in (N'P', N'PC'))&#xA;BEGIN&#xA;EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [Cleanup].[ChangingDelimiterCol2Update] AS' &#xA;END&#xA;GO&#xA;-- =============================================&#xA;-- Author:&#x9;&#x9;RJ Gailey&#xA;-- Create date: 10/10/2018&#xA;-- Description:&#x9;Changing Delimiter to remove any issues&#xA;-- with extra ' or &quot; values withing text&#xA;-- =============================================&#xA;ALTER PROCEDURE [Cleanup].[ChangingDelimiterCol2Update]&#xA;AS&#xA;BEGIN&#xA;&#x9;SET NOCOUNT ON&#xA;&#xA;&#x9;-- Changing delimiter to reduce column splitting issues &#xA;&#x9;UPDATE ETL.PreValudation&#xA;&#x9;SET Col2=RTRIM(LTRIM(REPLACE(Col2,'&quot;,&quot;','||')))&#xA;&#xA;&#x9;-- Remove patterens that causes column splitting errors&#xA;&#x9;UPDATE ETL.PreValudation SET Col2=REPLACE(Col2,'&quot;','''''') WHERE PreRowID &gt; 1&#xA;END&#xA;GO&#xA;/****** Object:  StoredProcedure [Cleanup].[FixGeneralUnNeededRowsUpdate]    Script Date: 11/8/2018 3:57:28 PM ******/&#xA;SET ANSI_NULLS ON&#xA;GO&#xA;SET QUOTED_IDENTIFIER ON&#xA;GO&#xA;IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Cleanup].[FixGeneralUnNeededRowsUpdate]') AND type in (N'P', N'PC'))&#xA;BEGIN&#xA;EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [Cleanup].[FixGeneralUnNeededRowsUpdate] AS' &#xA;END&#xA;GO&#xA;&#xA;-- =============================================&#xA;-- Author:&#x9;&#x9;RJ Gailey&#xA;-- Create date: 10/10/2018&#xA;-- Description:&#x9;General Cleanup of import&#xA;-- =============================================&#xA;ALTER PROCEDURE [Cleanup].[FixGeneralUnNeededRowsUpdate]&#xA;AS&#xA;BEGIN&#xA;&#x9;SET NOCOUNT ON&#xA;&#xA;&#x9;-- Remove extra Hearders&#xA;&#x9;DELETE FROM ETL.PreValudation WHERE Col1 = (SELECT COL1 FROM ETL.PreValudation WHERE PreRowID=1) AND PreRowID &gt; 1&#xA;&#x9;-- Remove blank lines&#xA;&#x9;DELETE FROM ETL.PreValudation WHERE LEN(Col1)=0&#xA;&#xA;&#x9;-- Replace emtpy strings because this can cause issues with the insert statement&#xA;&#x9;UPDATE ETL.PreValudation&#xA;&#x9;SET COL1=REPLACE(Col1,'&quot;&quot;','&quot;***NULL***&quot;')&#xA;END&#xA;GO&#xA;/****** Object:  StoredProcedure [Cleanup].[MoveToCol2Update]    Script Date: 11/8/2018 3:57:28 PM ******/&#xA;SET ANSI_NULLS ON&#xA;GO&#xA;SET QUOTED_IDENTIFIER ON&#xA;GO&#xA;IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Cleanup].[MoveToCol2Update]') AND type in (N'P', N'PC'))&#xA;BEGIN&#xA;EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [Cleanup].[MoveToCol2Update] AS' &#xA;END&#xA;GO&#xA;-- =============================================&#xA;-- Author:&#x9;&#x9;RJ Gailey&#xA;-- Create date: 10/10/2018&#xA;-- Description:&#x9;Moved Cleanup data to Column 2&#xA;-- =============================================&#xA;ALTER PROCEDURE [Cleanup].[MoveToCol2Update]&#xA;AS&#xA;BEGIN&#xA;&#x9;SET NOCOUNT ON&#xA;&#xA;&#x9;UPDATE ETL.PreValudation&#xA;&#x9;SET Col2=LTRIM(RTRIM(SUBSTRING(Col1,2,LEN(Col1)-2)))&#xA;END&#xA;GO&#xA;/****** Object:  StoredProcedure [Cleanup].[RemoveNonViewableCharsUpdate]    Script Date: 11/8/2018 3:57:28 PM ******/&#xA;SET ANSI_NULLS ON&#xA;GO&#xA;SET QUOTED_IDENTIFIER ON&#xA;GO&#xA;IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Cleanup].[RemoveNonViewableCharsUpdate]') AND type in (N'P', N'PC'))&#xA;BEGIN&#xA;EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [Cleanup].[RemoveNonViewableCharsUpdate] AS' &#xA;END&#xA;GO&#xA;-- =============================================&#xA;-- Author:&#x9;&#x9;RJ Gailey&#xA;-- Create date: 10/10/2018&#xA;-- Description:&#x9;Remove non Viewable Chars&#xA;-- =============================================&#xA;ALTER PROCEDURE [Cleanup].[RemoveNonViewableCharsUpdate]&#xA;AS&#xA;BEGIN&#xA;SET NOCOUNT ON&#xA;&#xA;&#x9;UPDATE ETL.PreValudation&#xA;&#x9;SET Col1=REPLACE(Col1,CHAR(9),' ')&#xA;&#xA;&#x9;UPDATE ETL.PreValudation&#xA;&#x9;SET Col1=REPLACE(Col1,CHAR(10),' ')&#xA;&#xA;&#x9;UPDATE ETL.PreValudation&#xA;&#x9;SET Col1=REPLACE(Col1,CHAR(13),' ')&#xA;END&#xA;GO&#xA;/****** Object:  StoredProcedure [ETL].[CreateStageRawImport]    Script Date: 11/8/2018 3:57:28 PM ******/&#xA;SET ANSI_NULLS ON&#xA;GO&#xA;SET QUOTED_IDENTIFIER ON&#xA;GO&#xA;IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[ETL].[CreateStageRawImport]') AND type in (N'P', N'PC'))&#xA;BEGIN&#xA;EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [ETL].[CreateStageRawImport] AS' &#xA;END&#xA;GO&#xA;&#xA;-- =============================================&#xA;-- Author:&#x9;&#x9;RJ Gailey&#xA;-- Create date: 10/11/2018&#xA;-- Description:&#x9;Create RawImport Table&#xA;-- =============================================&#xA;ALTER PROCEDURE [ETL].[CreateStageRawImport]&#xA;AS&#xA;BEGIN&#xA;&#x9;SET NOCOUNT ON&#xA;&#x9;DECLARE @SQL1&#x9;&#x9;VARCHAR(MAX)=''&#xA;&#x9;DECLARE @SQL2&#x9;&#x9;VARCHAR(MAX)='CREATE TABLE ETL.RawImport (RowID INT NOT NULL IDENTITY(1,1),'&#xA;&#x9;DECLARE @SQL3&#x9;&#x9;VARCHAR(MAX)&#xA;&#x9;DECLARE @Counter&#x9;INT=1&#xA;&#x9;DECLARE @CounterMax&#x9;INT&#xA;&#xA;&#x9;IF EXISTS (SELECT Name FROM SYS.OBJECTS WHERE Name='RawImport')&#xA;&#x9;BEGIN&#xA;&#x9;&#x9;DROP TABLE ETL.RawImport&#xA;&#x9;END&#xA;&#xA;&#x9;SELECT @CounterMax=MAX(B.RowID)&#xA;&#x9;FROM ETL.PreValudation AS A&#xA;&#x9;CROSS APPLY dbo.SplitArrayToTable( '||', A.[col2] ) AS B&#xA;&#x9;WHERE A.PreRowID=1&#xA;&#xA;&#xA;&#x9;WHILE @Counter &lt;= @CounterMax&#xA;&#x9;BEGIN&#xA;&#xA;&#x9;&#x9;SELECT @SQL2=@SQL2+'['+CASE &#xA;&#x9;&#x9;WHEN B.RowID=1 THEN CASE WHEN LTRIM(RTRIM(B.Value)) = '' THEN 'BlankHeader_'+CAST(B.RowID AS VARCHAR(50)) &#xA;&#x9;&#x9;ELSE LTRIM(RTRIM(B.Value)) END &#xA;&#x9;&#x9;WHEN LTRIM(RTRIM(SUBSTRING(B.Value,2,LEN(B.Value)))) = '' THEN 'BlankHeader_'+CAST(B.RowID AS VARCHAR(50)) &#xA;&#x9;&#x9;ELSE LTRIM(RTRIM(SUBSTRING(B.Value,2,LEN(B.Value)))) END +'] VARCHAR(MAX),'&#xA;&#xA;&#x9;&#x9;FROM ETL.PreValudation AS A&#xA;&#x9;&#x9;CROSS APPLY dbo.SplitArrayToTable( '||', A.[col2] ) AS B&#xA;&#x9;&#x9;WHERE A.PreRowID=1&#xA;&#x9;&#x9;AND B.RowID=@Counter&#xA;&#xA;&#xA;&#x9;&#x9;SET @Counter=@Counter+1&#xA;&#x9;END&#xA;&#xA;&#x9;SET @SQL2=@SQL2+'ImportFIleName VARCHAR(100) NOT NULL,PreRowID INT NOT NULL,ImportFileRowID INT NOT NULL,CustomerCode VARCHAR(50) NOT NULL,IntegrationName VARCHAR(100) NOT NULL,CreationDate DATE NOT NULL DEFAULT GETDATE(),CreationTime Time NOT NULL DEFAULT GETDATE(),Exception BIT NOT NULL,ExceptionReason VARCHAR(MAX) NULL,'&#xA;&#xA;&#xA;&#x9;SET @SQL3='&#xA;&#x9; CONSTRAINT [PK_Stage_RawImport] PRIMARY KEY CLUSTERED &#xA;&#x9;(&#xA;&#x9;&#x9;[RowID] ASC&#xA;&#x9;)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]&#xA;&#x9;) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]&#xA;&#xA;&#x9;ALTER TABLE [ETL].[RawImport] ADD  DEFAULT ((0)) FOR [Exception]&#xA;&#x9;'&#xA;&#xA;&#x9;EXEC(@SQL1+@SQL2+@SQL3)&#xA;END&#xA;GO&#xA;/****** Object:  StoredProcedure [ETL].[CustomDataFixesSelect]    Script Date: 11/8/2018 3:57:28 PM ******/&#xA;SET ANSI_NULLS ON&#xA;GO&#xA;SET QUOTED_IDENTIFIER ON&#xA;GO&#xA;IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[ETL].[CustomDataFixesSelect]') AND type in (N'P', N'PC'))&#xA;BEGIN&#xA;EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [ETL].[CustomDataFixesSelect] AS' &#xA;END&#xA;GO&#xA;-- =============================================&#xA;-- Author:&#x9;&#x9;RJ Gailey&#xA;-- Create date: 11/2/2018&#xA;-- Description:&#x9;Custom fixes data or mapping issues for each integration&#xA;-- by Customer and integration&#xA;-- =============================================&#xA;ALTER PROCEDURE [ETL].[CustomDataFixesSelect]&#xA;@CustomerCode VARCHAR(50),&#xA;@IntegrationName VARCHAR(100),&#xA;@ImportRawTable VARCHAR(200)&#xA;AS&#xA;BEGIN&#xA;&#x9;SET NOCOUNT ON&#xA;&#x9;DECLARE @SQL VARCHAR(MAX)&#xA;&#xA;&#x9;IF @CustomerCode='PCS' AND @IntegrationName='Munis'&#xA;&#x9;BEGIN&#xA;&#x9;&#x9;-- Adding SiteID because it is not in the File&#xA;&#x9;&#x9;SET @SQL = 'ALTER TABLE ' + @ImportRawTable + ' ADD SiteID VARCHAR(100)'&#xA;&#x9;&#x9;EXEC(@SQL)&#xA;&#x9;&#x9;SET @SQL = 'UPDATE ' + @ImportRawTable + ' SET SiteID=RoomNumber'&#xA;&#x9;&#x9;EXEC(@SQL)&#xA;&#x9;END&#xA;&#xA;END&#xA;GO&#xA;/****** Object:  StoredProcedure [ETL].[MainETL]    Script Date: 11/8/2018 3:57:28 PM ******/&#xA;SET ANSI_NULLS ON&#xA;GO&#xA;SET QUOTED_IDENTIFIER ON&#xA;GO&#xA;IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[ETL].[MainETL]') AND type in (N'P', N'PC'))&#xA;BEGIN&#xA;EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [ETL].[MainETL] AS' &#xA;END&#xA;GO&#xA;&#xA;-- =============================================&#xA;-- Author:&#x9;&#x9;RJ Gailey&#xA;-- Create date: 10/10/2018&#xA;-- Description:&#x9;Call all Cleanup Stored Procedures&#xA;-- =============================================&#xA;ALTER PROCEDURE [ETL].[MainETL]&#xA;@BatchCount INT &#xA;AS&#xA;BEGIN&#xA;&#x9;SET NOCOUNT ON&#xA;&#xA;&#x9;-- Cleanup and Data Prep&#xA;&#x9;EXEC Cleanup.FixGeneralUnNeededRowsUpdate&#xA;&#x9;EXEC Cleanup.RemoveNonViewableCharsUpdate&#xA;&#x9;EXEC Cleanup.MoveToCol2Update&#xA;&#x9;EXEC Cleanup.ChangingDelimiterCol2Update&#xA;&#xA;&#x9;--Staging Data&#xA;&#x9;EXEC ETL.CreateStageRawImport&#xA;&#x9;EXEC ETL.RawImportInsert @BatchCount=@BatchCount&#xA;&#x9;--EXEC Cleanup.RemoveEmptyStringUpdate&#xA;END&#xA;&#xA;GO&#xA;/****** Object:  StoredProcedure [ETL].[RawImportInsert]    Script Date: 11/8/2018 3:57:28 PM ******/&#xA;SET ANSI_NULLS ON&#xA;GO&#xA;SET QUOTED_IDENTIFIER ON&#xA;GO&#xA;IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[ETL].[RawImportInsert]') AND type in (N'P', N'PC'))&#xA;BEGIN&#xA;EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [ETL].[RawImportInsert] AS' &#xA;END&#xA;GO&#xA;&#xA;&#xA;&#xA;-- =============================================&#xA;-- Author:&#x9;&#x9;RJ Gailey&#xA;-- Create date: 10/11/2018&#xA;-- Description:&#x9;Insert Data ino RawImport Table&#xA;-- =============================================&#xA;ALTER PROCEDURE [ETL].[RawImportInsert]&#xA;@BatchCount INT &#xA;AS&#xA;BEGIN&#xA;&#x9;DECLARE @Counter&#x9;&#x9;&#x9;INT=2&#xA;&#x9;DECLARE @CounterMax&#x9;&#x9;&#x9;INT&#xA;&#x9;DECLARE @ColumnCounterMax&#x9;INT&#xA;&#x9;DECLARE @SQLStart&#x9;&#x9;&#x9;VARCHAR(MAX) = 'INSERT INTO ETL.RawImport ('&#xA;&#x9;DECLARE @SQLValues&#x9;&#x9;&#x9;VARCHAR(MAX) = ''&#xA;&#x9;DECLARE @BatchRows&#x9;&#x9;&#x9;INT=@BatchCount&#xA;&#x9;DECLARE @ImportFIleName&#x9;&#x9;VARCHAR(100)&#xA;&#x9;DECLARE @ImportFileRowID&#x9;INT&#xA;&#x9;DECLARE @PreRowID&#x9;&#x9;&#x9;INT&#xA;&#x9;DECLARE @CustomerCode&#x9;&#x9;VARCHAR(50)&#xA;&#x9;DECLARE @IntegratonName&#x9;&#x9;VARCHAR(100)&#xA;&#xA;&#x9;SET NOCOUNT ON&#xA;&#xA;&#x9;SELECT @ColumnCounterMax=MAX(B.RowID)&#xA;&#xA;&#x9;FROM ETL.PreValudation AS A&#xA;&#x9;CROSS APPLY dbo.SplitArrayToTable( '||', A.[col2] ) AS B&#xA;&#x9;WHERE A.PreRowID=1&#xA;&#xA;&#x9;SELECT @CounterMax=MAX(PreRowID)&#xA;&#x9;FROM ETL.PreValudation&#xA;&#xA;&#xA;&#x9;SELECT @SQLStart=@SQLStart +&#xA;&#x9;CASE &#xA;&#x9;WHEN B.RowID=1 THEN '['+CASE WHEN LTRIM(RTRIM(B.Value)) = '' THEN 'BlankHeader_'+CAST(B.RowID AS VARCHAR(50)) ELSE LTRIM(RTRIM(B.Value)) END+'],'&#xA;&#x9;WHEN B.RowID=@ColumnCounterMax THEN '['+CASE WHEN LTRIM(RTRIM(SUBSTRING(B.Value,2,LEN(B.Value)))) = '' THEN 'BlankHeader_'+CAST(B.RowID AS VARCHAR(50)) ELSE LTRIM(RTRIM(SUBSTRING(B.Value,2,LEN(B.Value)))) END+']'&#xA;&#x9;ELSE '['+CASE WHEN LTRIM(RTRIM(SUBSTRING(B.Value,2,LEN(B.Value)))) = '' THEN 'BlankHeader_'+CAST(SUBSTRING(B.Value,2,LEN(B.Value)) AS VARCHAR(50)) ELSE LTRIM(RTRIM(SUBSTRING(B.Value,2,LEN(B.Value)))) END+'],' END&#xA;&#x9;FROM ETL.PreValudation AS A&#xA;&#x9;CROSS APPLY dbo.SplitArrayToTable( '||', A.[col2] ) AS B&#xA;&#x9;WHERE A.PreRowID=1  &#xA;&#xA;&#x9;SET @SQLStart=@SQLStart+',ImportFIleName,PreRowID,ImportFileRowID,CustomerCode,IntegrationName) VALUES '&#xA;&#xA;&#x9;WHILE @Counter &lt;= @CounterMax&#xA;&#x9;BEGIN&#xA;&#xA;&#x9;&#x9;IF EXISTS (SELECT Col2 FROM ETL.PreValudation WHERE PreRowID=@Counter)&#xA;&#x9;&#x9;BEGIN&#xA;&#x9;&#x9;&#x9;SELECT @ImportFIleName=ImportFIleName,@PreRowID=PreRowID,@ImportFileRowID=ImportFileRowID,@CustomerCode=CustomerCode,@IntegratonName=IntegrationName&#xA;&#x9;&#x9;&#x9;FROM ETL.PreValudation WHERE PreRowID=@Counter &#xA;&#xA;&#x9;&#x9;&#x9;SELECT @SQLValues=@SQLValues+ CASE &#xA;&#x9;&#x9;&#x9;--WHEN B.RowID=1 THEN '('''+RTRIM(LTRIM(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(ISNULL(SUBSTRING(B.Value,2,LEN(B.Value)),''),'''',''''''),CHAR(13),''),CHAR(11),''),CHAR(10),''),CHAR(9),'')))+''','&#xA;&#x9;&#x9;&#x9;WHEN B.RowID=1 THEN '('''+RTRIM(LTRIM(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(ISNULL(B.Value,''),'''',''''''),CHAR(13),''),CHAR(11),''),CHAR(10),''),CHAR(9),'')))+''','&#xA;&#x9;&#x9;&#x9;WHEN B.RowID=@ColumnCounterMax THEN ''''+RTRIM(LTRIM(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(ISNULL(SUBSTRING(B.Value,2,LEN(B.Value)),''),'''',''''''),CHAR(13),''),CHAR(11),''),CHAR(10),''),CHAR(9),'')))+''''&#xA;&#x9;&#x9;&#x9;ELSE ''''+RTRIM(LTRIM(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(ISNULL(SUBSTRING(B.Value,2,LEN(B.Value)),''),'''',''''''),CHAR(13),''),CHAR(11),''),CHAR(10),''),CHAR(9),'')))+''',' END&#xA;&#xA;&#x9;&#x9;&#x9;FROM ETL.PreValudation AS A&#xA;&#x9;&#x9;&#x9;CROSS APPLY dbo.SplitArrayToTable( '||', A.[col2] ) AS B&#xA;&#xA;&#x9;&#x9;&#x9;WHERE A.PreRowID=@Counter&#xA;&#xA;&#x9;&#x9;&#x9;ORDER BY A.PreRowID&#xA;&#xA;&#x9;&#x9;&#x9;SET @SQLValues=@SQLValues+ ',''' + @ImportFIleName  + ''',' + CAST(@PreRowID AS VARCHAR(50)) + ',' + CAST(@ImportFileRowID AS VARCHAR(50)) + ',''' + @CustomerCode  + ''',''' + @IntegratonName+''')'&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;SET @SQLValues=REPLACE(@SQLValues,'***NULL***','')&#xA;&#x9;&#x9;&#x9;IF @Counter &lt; @BatchRows&#xA;&#x9;&#x9;&#x9;BEGIN&#xA;&#x9;&#x9;&#x9;&#x9;SET @SQLValues=@SQLValues + ','&#xA;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;END&#xA;&#x9;&#x9;IF @Counter &gt;= @BatchRows&#xA;&#x9;&#x9;BEGIN&#xA;&#x9;&#x9;&#x9;EXEC (@SQLStart + @SQLValues)&#xA;&#xA;&#x9;&#x9;&#x9;IF @@ERROR &gt; 0&#xA;&#x9;&#x9;&#x9;BEGIN&#xA;&#x9;&#x9;&#x9;&#x9;PRINT 'BatchRows: ' + CAST(@BatchRows AS VARCHAR(50))&#xA;&#x9;&#x9;&#x9;&#x9;PRINT @SQLStart&#xA;&#x9;&#x9;&#x9;&#x9;PRINT @SQLValues&#xA;&#x9;&#x9;&#x9;END&#xA;&#xA;&#x9;&#x9;&#x9;IF ( @BatchRows + @BatchCount &lt;= @CounterMax)&#xA;&#x9;&#x9;&#x9;BEGIN&#xA;&#x9;&#x9;&#x9;&#x9;SET @BatchRows= @BatchRows + @BatchCount&#xA;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;BEGIN&#xA;&#x9;&#x9;&#x9;&#x9;SET @BatchRows=@CounterMax&#xA;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;SET @SQLValues=''&#x9;&#x9;&#xA;&#x9;&#x9;END&#xA;&#xA;&#x9;&#x9;SET @Counter=@Counter+1&#xA;&#x9;END&#xA;&#xA;END&#xA;GO&#xA;&#xA;/****** Object:  StoredProcedure [Cleanup].[RemoveEmptyStringUpdate]    Script Date: 12/12/2018 3:57:28 PM ******/&#xA;SET ANSI_NULLS ON&#xA;GO&#xA;SET QUOTED_IDENTIFIER ON&#xA;GO&#xA;IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Cleanup].[RemoveEmptyStringUpdate]') AND type in (N'P', N'PC'))&#xA;BEGIN&#xA;EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [Cleanup].[RemoveEmptyStringUpdate]AS' &#xA;END&#xA;GO&#xA;-- =============================================&#xA;-- Author:&#x9;&#x9;RJ Gailey&#xA;-- Create date: 12/12/2018&#xA;-- Description:&#x9;Remove all empty stings in columns&#xA;-- =============================================&#xA;ALTER PROCEDURE [Cleanup].[RemoveEmptyStringUpdate]&#xA;AS&#xA;BEGIN&#xA;&#x9;SET NOCOUNT ON&#xA;&#xA;&#x9;DECLARE @ColumnCounterMax&#x9;INT&#xA;&#x9;DECLARE @ColumnCounter&#x9;&#x9;INT = 1&#xA;&#x9;DECLARE @ColumnName&#x9;&#x9;&#x9;VARCHAR(200)&#xA;&#x9;DECLARE @SQL&#x9;&#x9;&#x9;&#x9;VARCHAR(MAX)&#xA;&#xA;&#x9;SELECT @ColumnCounterMax=MAX(B.RowID)&#xA;&#xA;&#x9;FROM ETL.PreValudation AS A&#xA;&#x9;CROSS APPLY dbo.SplitArrayToTable( '||', A.[col2] ) AS B&#xA;&#x9;WHERE A.PreRowID=1&#xA;&#x9;&#xA;&#xA;&#x9;WHILE @ColumnCounter &lt;= @ColumnCounterMax&#xA;&#x9;BEGIN&#xA;&#x9;&#x9;SELECT @ColumnName=&#xA;&#x9;&#x9;CASE &#xA;&#x9;&#x9;WHEN B.RowID=1 THEN '['+CASE WHEN LTRIM(RTRIM(B.Value)) = '' THEN 'BlankHeader_'+CAST(B.RowID AS VARCHAR(50)) ELSE LTRIM(RTRIM(B.Value)) END+']'&#xA;&#x9;&#x9;WHEN B.RowID=@ColumnCounterMax THEN '['+CASE WHEN LTRIM(RTRIM(SUBSTRING(B.Value,2,LEN(B.Value)))) = '' THEN 'BlankHeader_'+CAST(B.RowID AS VARCHAR(50)) ELSE LTRIM(RTRIM(SUBSTRING(B.Value,2,LEN(B.Value)))) END+']'&#xA;&#x9;&#x9;ELSE '['+CASE WHEN LTRIM(RTRIM(SUBSTRING(B.Value,2,LEN(B.Value)))) = '' THEN 'BlankHeader_'+CAST(SUBSTRING(B.Value,2,LEN(B.Value)) AS VARCHAR(50)) ELSE LTRIM(RTRIM(SUBSTRING(B.Value,2,LEN(B.Value)))) END+']' END&#xA;&#x9;&#x9;FROM ETL.PreValudation AS A&#xA;&#x9;&#x9;CROSS APPLY dbo.SplitArrayToTable( '||', A.[col2] ) AS B&#xA;&#x9;&#x9;WHERE A.PreRowID=1  &#xA;&#x9;&#x9;AND B.RowID=@ColumnCounter&#xA;&#xA;&#x9;&#x9;SET @SQL = 'UPDATE Clients_ETL&#xA;&#x9;&#x9;SET ' + @ColumnName + ' = NULL&#xA;&#x9;&#x9;WHERE ' + @ColumnName + ' = '''''&#xA;&#xA;&#x9;&#x9;EXEC(@SQL)&#xA;&#xA;&#x9;&#x9;SET @ColumnCounter=@ColumnCounter + 1&#xA;&#x9;END&#xA;&#xA;END&#xA;GO&#xA;IF NOT EXISTS (SELECT Name FROM SYS.OBJECTS WHERE Name = 'RawImportStats')&#xA;BEGIN&#xA;&#x9;CREATE TABLE ETL.[RawImportStats](&#xA;&#x9;&#x9;[RawDataImportID] [int] IDENTITY(1,1) NOT NULL,&#xA;&#x9;&#x9;[RawDataImportDate] [datetime] NOT NULL,&#xA;&#x9;&#x9;[FileName] [varchar](100) NOT NULL,&#xA;&#x9;&#x9;[TotalRowsInFile] [int] NOT NULL,&#xA;&#x9;&#x9;[TotalRowsImported] [int] NOT NULL,&#xA;&#x9;&#x9;[TotalRowsInETL] [int] NOT NULL,&#xA;&#x9; CONSTRAINT [PK_ETL.RawImportStats] PRIMARY KEY CLUSTERED &#xA;&#x9;(&#xA;&#x9;&#x9;[RawDataImportDate] DESC,&#xA;&#x9;&#x9;[FileName] ASC&#xA;&#x9;)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]&#xA;&#x9;) ON [PRIMARY]&#xA;END&#xA;GO&#xA;&#xA;&#xA;-- =============================================&#xA;-- Author:        Vishwanth&#xA;-- Create date: 07/02/2019&#xA;-- Description:    Remove Special Charcters&#xA;-- =============================================&#xA;IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Cleanup].[RemoveSpecialCharacters]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))&#xA;BEGIN&#xA;execute dbo.sp_executesql @statement = N'&#xA;CREATE Function [Cleanup].[RemoveSpecialCharacters](@string VarChar(1000))&#xA;Returns VarChar(1000)&#xA;AS&#xA;Begin&#xA;&#xA;&#xA;    Declare @regexValues as varchar(50)&#xA;    Set @regexValues = ''%[^A-Za-z0-9 ]%''&#xA;    While PatIndex(@regexValues, @string) &gt; 0&#xA;        Set @string = Stuff(@string, PatIndex(@regexValues, @string), 1, '''')&#xA;&#xA;&#xA;    Return @string&#xA;END &#xA;' &#xA;END&#xA;GO&#xA;&#xA;IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[ETL].[ClientsETLUpdate]') AND type in (N'P', N'PC'))&#xA;BEGIN&#xA;EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [ETL].[ClientsETLUpdate] AS' &#xA;END&#xA;GO&#xA;-- =============================================&#xA;-- Author:&#x9;&#x9;RJ Gailey&#xA;-- Create date: 09/27/2019&#xA;-- Description:&#x9;Execute all updates to Clients_ETL Table&#xA;-- =============================================&#xA;ALTER PROCEDURE [ETL].[ClientsETLUpdate]&#xA;@Debug BIT&#xA;AS&#xA;BEGIN&#xA;&#x9;DECLARE @Counter&#x9;INT = 1&#xA;&#x9;DECLARE @CounterMax&#x9;INT&#xA;&#x9;DECLARE @SQL&#x9;&#x9;VARCHAR(MAX)&#xA;&#xA;&#x9;SET NOCOUNT ON&#xA;&#xA;&#x9;SELECT @CounterMax = ISNULL(MAX(RunOrderID),0) FROM Update_Clients_ETL&#xA;&#xA;&#x9;WHILE @Counter &lt;= @CounterMax&#xA;&#x9;BEGIN&#xA;&#x9;&#x9;SELECT @SQL = ISNULL(SQLStatment,'')&#xA;&#x9;&#x9;FROM Update_Clients_ETL &#xA;&#x9;&#x9;WHERE RunOrderID=@Counter AND Active = 1&#xA;&#xA;&#x9;&#x9;IF @Debug = 0&#xA;&#x9;&#x9;BEGIN&#xA;&#x9;&#x9;&#x9;EXEC(@SQL)&#xA;&#x9;&#x9;END&#xA;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;BEGIN&#xA;&#x9;&#x9;&#x9;PRINT @SQL&#xA;&#x9;&#x9;END&#xA;&#xA;&#x9;&#x9;SET @Counter = @Counter + 1&#xA;&#x9;END&#xA;END&#xA;GO&#xA;&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Set Varables\Fix File Paths"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{45D85473-D973-440F-BC9D-A1ACEF2C3EB5}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Fix File Paths"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_2f63266a8b334f9380b49b1c166d95c5"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::_LocalImportPathFileName,User::Debug,User::FileName,User::MoveFile"
              ReadWriteVariables="User::FilePath,User::FilePathFull,User::ReportPath,User::RootPath">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_2f63266a8b334f9380b49b1c166d95c5.Properties.Settings.get_Default():ST_2f63266a8b334f9380b49b1c166d95c5.Properties.Sett" +
    "ings")]

namespace ST_2f63266a8b334f9380b49b1c166d95c5.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.IO;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_2f63266a8b334f9380b49b1c166d95c5
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            //User::Debug - Read Only
            //User::ArchivePath,User::CustomerCode,User::FilePath,User::FilePathFull,User::RootPath - Read Write

            Boolean Debug = Convert.ToBoolean(Dts.Variables["User::Debug"].Value);
            Boolean MoveFile = Convert.ToBoolean(Dts.Variables["User::MoveFile"].Value);
            string RootPath = Dts.Variables["User::RootPath"].Value.ToString();
            string FilePath = Dts.Variables["User::FilePath"].Value.ToString();
            string FileName = Dts.Variables["User::FileName"].Value.ToString();
            string LocalFileName = Dts.Variables["User::_LocalImportPathFileName"].Value.ToString();
            string FilePathFull = "";
   
            // Check to make sure "\" is at the end of Root path
            if (RootPath.Substring(RootPath.Length - 1, 1) != "\\")
            {
                RootPath = RootPath + "\\";
            }

             Dts.Variables["User::RootPath"].Value = RootPath;

            // Check to make sure "\" is at the end of File path
            if (FilePath.Substring(FilePath.Length - 1, 1) != "\\")
            {
                FilePath = FilePath + "\\";
            }

            // Setting Full Path
            FilePathFull = RootPath + FilePath;            

            if(!Directory.Exists(FilePathFull))
            {
                Directory.CreateDirectory(FilePathFull);
            }

            // Data Conversion Folder
            if (!Directory.Exists(FilePathFull + "Data Conversion"))
            {
                Directory.CreateDirectory(FilePathFull + "Data Conversion");
            }

            // Data Conversion\Scripts Folder 
            if (!Directory.Exists(FilePathFull + "Data Conversion\\Scripts"))
            {
                Directory.CreateDirectory(FilePathFull + "Data Conversion\\Scripts");
            }

            // Data Conversion\Documents Folder 
            if (!Directory.Exists(FilePathFull + "Data Conversion\\Documents"))
            {
                Directory.CreateDirectory(FilePathFull + "Data Conversion\\Documents");
            }


            FilePathFull = FilePathFull + "Data Conversion\\";

            Dts.Variables["User::ReportPath"].Value = FilePathFull;

            //string FileToMove = FilePath + FileName;
            string FileToMove = LocalFileName;


            if (MoveFile == false)
            {
                FilePath = Path.GetDirectoryName(LocalFileName) + '\\';
                Dts.Variables["User::FilePathFull"].Value = FilePath;
            }
            else
            {
                Dts.Variables["User::FilePathFull"].Value = FilePathFull;
            }
            


            if (Debug == true)
            {
                MessageBox.Show("RootPath: " + RootPath.ToString());
                MessageBox.Show("FilePath: " + FilePath.ToString());
                MessageBox.Show("FilePathFull: " + FilePathFull.ToString());
                MessageBox.Show("LocalPathFileName: " + LocalFileName.ToString());
                MessageBox.Show("FileToMove: " + FileToMove.ToString());
                MessageBox.Show("ReportPath: " + Dts.Variables["User::ReportPath"].Value.ToString());
            }

            // Move File to Customer Support Share
            //if (!File.Exists(FileToMove))
            //{
            //    File.Move(LocalFileName, FileToMove);
            //}

            Dts.Variables["User::FilePath"].Value = FilePath;
            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_2f63266a8b334f9380b49b1c166d95c5.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_2f63266a8b334f9380b49b1c166d95c5.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_2f63266a8b334f9380b49b1c166d95c5.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_2f63266a8b334f9380b49b1c166d95c5.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_2f63266a8b334f9380b49b1c166d95c5.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_2f63266a8b334f9380b49b1c166d95c5</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_2f63266a8b334f9380b49b1c166d95c5</msb:DisplayName>
		<msb:ProjectId>{9D8E755E-D21B-4693-A649-34401EA330C4}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_2f63266a8b334f9380b49b1c166d95c5.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_2f63266a8b334f9380b49b1c166d95c5")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_2f63266a8b334f9380b49b1c166d95c5")]
[assembly: AssemblyCopyright("Copyright @  2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="ST_2f63266a8b334f9380b49b1c166d95c5.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{C61095F3-1A9D-45B8-A5B8-B03DF2947366}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_2f63266a8b334f9380b49b1c166d95c5</RootNamespace>
    <AssemblyName>ST_2f63266a8b334f9380b49b1c166d95c5</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <BinaryItem
                Name="ST_2f63266a8b334f9380b49b1c166d95c5.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAKPYi10AAAAAAAAAAOAAIiALATAAABYAAAAIAAAAAAAAAjQA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAALAzAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAACBQAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADk
MwAAAAAAAEgAAAACAAUAsCMAAEgPAAABAAAAAAAAAPgyAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwBQDtAgAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKKBQAAAoCKBAAAApvEQAACnIZAABwbxIAAApvEwAACigUAAAKAigQAAAKbxEAAApyNwAAcG8S
AAAKbxMAAApvFQAACgoCKBAAAApvEQAACnJVAABwbxIAAApvEwAACm8VAAAKCwIoEAAACm8RAAAK
cnMAAHBvEgAACm8TAAAKbxUAAAomAigQAAAKbxEAAApykQAAcG8SAAAKbxMAAApvFQAACgxyzwAA
cA0GBm8WAAAKF1kXbxcAAApy0QAAcCgYAAAKLAwGctEAAHAoGQAACgoCKBAAAApvEQAACnI3AABw
bxIAAAoGbxoAAAoHB28WAAAKF1kXbxcAAApy0QAAcCgYAAAKLAwHctEAAHAoGQAACgsGBygZAAAK
DQkoGwAACi0HCSgcAAAKJgly1QAAcCgZAAAKKBsAAAotEQly1QAAcCgZAAAKKBwAAAomCXL1AABw
KBkAAAooGwAACi0RCXL1AABwKBkAAAooHAAACiYJciUBAHAoGQAACigbAAAKLREJciUBAHAoGQAA
CigcAAAKJglyWQEAcCgZAAAKDQIoEAAACm8RAAAKcnsBAHBvEgAACglvGgAACggTBC0uCCgdAAAK
ctEAAHAoGQAACgsCKBAAAApvEQAACnKdAQBwbxIAAAoHbxoAAAorGwIoEAAACm8RAAAKcp0BAHBv
EgAACglvGgAACjmeAAAAcsMBAHAGbxUAAAooGQAACigeAAAKJnLZAQBwB28VAAAKKBkAAAooHgAA
CiZy7wEAcAlvFQAACigZAAAKKB4AAAomcg0CAHAIbxUAAAooGQAACigeAAAKJnI1AgBwEQRvFQAA
CigZAAAKKB4AAAomck8CAHACKBAAAApvEQAACnJ7AQBwbxIAAApvEwAACm8VAAAKKBkAAAooHgAA
CiYCKBAAAApvEQAACnJVAABwbxIAAAoHbxoAAAoCKBAAAAoWbx8AAAoqHgIoIAAACioeAighAAAK
Kq5+AQAABC0ecmkCAHDQAwAAAigiAAAKbyMAAApzJAAACoABAAAEfgEAAAQqGn4CAAAEKh4CgAIA
AAQqGn4DAAAEKh4CKCUAAAoqLnMIAAAGgAMAAAQqAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5
AAAAAAUAbAAAADgEAAAjfgAApAQAABgGAAAjU3RyaW5ncwAAAAC8CgAA3AIAACNVUwCYDQAAEAAA
ACNHVUlEAAAAqA0AAKABAAAjQmxvYgAAAAAAAAACAAABVx2iAQkDAAAA+gEzABYAAAEAAAAkAAAA
BQAAAAYAAAAJAAAAAQAAACUAAAACAAAAEAAAAAEAAAACAAAAAwAAAAQAAAABAAAABQAAAAEAAAAB
AAAAAAC0AwEAAAAAAAYAQAKcBAYAzwKcBAYAjAGJBA8AEAUAAAYAuQE8BAYAIwI8BAYABAI8BAYA
tgI8BAYAYAI8BAYAeQI8BAYA0AE8BAYA6wEHAwoAlAJjAwoACwFjAwYA7APlAwYAbwGJBAYApgXl
AwYAbAS8BAYATgQnBA4APwGeAw4AoAGeAw4AJwESBAYAVAGcBAoAjANjAxIAUgW2ABIAeAC2AAYA
1QXlAwYAIwPlAwYAAAYuAAYAWgQuAAYANAMuABYA4gVlBRYAuQVlBQYA1gDlAwYAgQDlAwYA8QU8
BAAAAAAlAAAAAAABAAEAAQAQAAcEAQA5AAEAAQAAABAAwwQfBUUAAQADAAABEABcBR8FWQADAAcA
AwEAAIoFAAA9AAQACgARAPEDpQARAPsAqQARAGgArQAGBlcAsQBWgHoFtABWgNsAtABQIAAAAACG
AA0EBgABAEkjAAAAAIYYfAQGAAEAUSMAAAAAgxh8BAYAAQBZIwAAAACTCGgEuAABAIUjAAAAAJMI
4wC9AAEAjCMAAAAAkwjvAMIAAQCUIwAAAACWCK0FyAACAJsjAAAAAIYYfAQGAAIAoyMAAAAAkRiC
BM0AAgAAAAEAAQMJAHwEAQARAHwEBgAZAHwECgApAHwEEAAxAHwEEAA5AHwEEABBAHwEEABJAHwE
EABRAHwEEABZAHwEEABhAHwEEABpAHwEBgCBAHwEBgCpAHwEFQC5AHwEBgBxAIIFIwDBAE4FKADJ
ANwDLQDRAO0CMwDZAP0DNwCJACEDPADhADkDQADhACoDRADhAAoGSgDhAJ8FUADRAPcCVgDpAJgF
WwDpAPoFYAD5AKUAZgABAd0FawDBAMYFAQBxAHwEBgCJAHwEBgARAZMAcgARAe0FewCRAHwEgQCx
AHwEBgAIABQAmwAIABgAoAApAHMACAEuAAsA4AAuABMA6QAuABsACAEuACMAEQEuACsAOgEuADMA
OgEuADsAOgEuAEMAEQEuAEsAQAEuAFMAOgEuAFsAVwFDAGMAoABJAHMACAFhAHsAoABjAGsAoAAb
AAMAAQAEAAMAAABsBNEAAAADAdYAAACxBdsAAgAEAAMAAgAFAAUAAQAGAAUAAgAHAAcABIAAAAEA
AAAnHClyAAAAAAAAAQAAAAQAAAAAAAAAAAAAAIkAXwAAAAAADAAAAAAAAAAAAAAAkgBEAwAAAAAE
AAAAAAAAAAAAAACJAOUDAAAAAAwAAAAAAAAAAAAAAJIAOAAAAAAABAAAAAAAAAAAAAAAiQBlBQAA
AAAAAAAAAQAAAM0EAAAFAAIAAAAAAABTVF8yZjYzMjY2YThiMzM0ZjkzODBiNDliMWMxNjZkOTVj
NQA8TW9kdWxlPgBTeXN0ZW0uSU8ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVl
X18AbXNjb3JsaWIAZGVmYXVsdEluc3RhbmNlAFZhcmlhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdl
dFR5cGVGcm9tSGFuZGxlAEdldERpcmVjdG9yeU5hbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMu
UnVudGltZQBUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0
dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBF
ZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5v
blVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0
cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUA
VGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBB
c3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1
dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNT
SVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUA
UnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAZ2V0X1ZhbHVlAHNldF9WYWx1ZQB2YWx1ZQBT
eXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAFN1YnN0cmluZwBQYXRoAGdldF9MZW5n
dGgATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRz
LlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVs
AFNUXzJmNjMyNjZhOGIzMzRmOTM4MGI0OWIxYzE2NmQ5NWM1LmRsbABnZXRfSXRlbQBTeXN0ZW0A
RW51bQByZXNvdXJjZU1hbgBUb0Jvb2xlYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlv
bgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBDdWx0dXJlSW5mbwBEaXJl
Y3RvcnlJbmZvAGdldF9SZXNvdXJjZU1hbmFnZXIALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9z
dGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1Rf
MmY2MzI2NmE4YjMzNGY5MzgwYjQ5YjFjMTY2ZDk1YzUuUHJvcGVydGllcy5SZXNvdXJjZXMucmVz
b3VyY2VzAERlYnVnZ2luZ01vZGVzAFNUXzJmNjMyNjZhOGIzMzRmOTM4MGI0OWIxYzE2NmQ5NWM1
LlByb3BlcnRpZXMAZ2V0X1ZhcmlhYmxlcwBTZXR0aW5ncwBTeXN0ZW0uV2luZG93cy5Gb3JtcwBT
dWNjZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0cwBFeGlzdHMAQ29uY2F0AE9iamVjdABnZXRfRGVm
YXVsdABEaWFsb2dSZXN1bHQAc2V0X1Rhc2tSZXN1bHQAQ29udmVydABTaG93AE1lc3NhZ2VCb3gA
Z2V0X0Fzc2VtYmx5AENyZWF0ZURpcmVjdG9yeQBvcF9JbmVxdWFsaXR5AAAXVQBzAGUAcgA6ADoA
RABlAGIAdQBnAAAdVQBzAGUAcgA6ADoATQBvAHYAZQBGAGkAbABlAAAdVQBzAGUAcgA6ADoAUgBv
AG8AdABQAGEAdABoAAAdVQBzAGUAcgA6ADoARgBpAGwAZQBQAGEAdABoAAAdVQBzAGUAcgA6ADoA
RgBpAGwAZQBOAGEAbQBlAAA9VQBzAGUAcgA6ADoAXwBMAG8AYwBhAGwASQBtAHAAbwByAHQAUABh
AHQAaABGAGkAbABlAE4AYQBtAGUAAAEAA1wAAB9EAGEAdABhACAAQwBvAG4AdgBlAHIAcwBpAG8A
bgAAL0QAYQB0AGEAIABDAG8AbgB2AGUAcgBzAGkAbwBuAFwAUwBjAHIAaQBwAHQAcwAAM0QAYQB0
AGEAIABDAG8AbgB2AGUAcgBzAGkAbwBuAFwARABvAGMAdQBtAGUAbgB0AHMAACFEAGEAdABhACAA
QwBvAG4AdgBlAHIAcwBpAG8AbgBcAAAhVQBzAGUAcgA6ADoAUgBlAHAAbwByAHQAUABhAHQAaAAA
JVUAcwBlAHIAOgA6AEYAaQBsAGUAUABhAHQAaABGAHUAbABsAAAVUgBvAG8AdABQAGEAdABoADoA
IAAAFUYAaQBsAGUAUABhAHQAaAA6ACAAAB1GAGkAbABlAFAAYQB0AGgARgB1AGwAbAA6ACAAACdM
AG8AYwBhAGwAUABhAHQAaABGAGkAbABlAE4AYQBtAGUAOgAgAAAZRgBpAGwAZQBUAG8ATQBvAHYA
ZQA6ACAAABlSAGUAcABvAHIAdABQAGEAdABoADoAIAAAcVMAVABfADIAZgA2ADMAMgA2ADYAYQA4
AGIAMwAzADQAZgA5ADMAOAAwAGIANAA5AGIAMQBjADEANgA2AGQAOQA1AGMANQAuAFAAcgBvAHAA
ZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAJKcM3/hpnRKrVS3ZxDEsREABCABAQgD
IAABBSABARERBCABAQ4FIAEBEVEHBwUODg4ODgQgABJhBCAAEmUFIAESaRwDIAAcBAABAhwDIAAO
AyAACAUgAg4ICAUAAgIODgUAAg4ODgQgAQEcBAABAg4FAAESeQ4EAAEODgYAARGAhQ4IAAESgIkR
gI0FIAASgJEHIAIBDhKAkQi3elxWGTTgiQiJhF3NgIDMkQQAAAAABAEAAAADBhJJAwYSTQMGEhAC
BggDBhEUBAAAEkkEAAASTQUAAQESTQQAABIQAwAAAQQIABJJBAgAEk0ECAASEAgBAAgAAAAAAB4B
AAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfMmY2MzI2NmE4YjMz
NGY5MzgwYjQ5YjFjMTY2ZDk1YzUAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxOAAARwEAGi5O
RVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZy
YW1ld29yayA0ALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRl
ciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlU
b2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0
AgAAAAAAAAAAAAAAUEFEUEFEULQAAADYMwAAAAAAAAAAAADyMwAAACAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAA5DMAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQApciccAAABAClyJxw/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAVABfADIAZgA2ADMAMgA2ADYAYQA4AGIAMwAzADQAZgA5ADMAOAAwAGIANAA5AGIAMQBjADEA
NgA2AGQAOQA1AGMANQAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA3
ADIAMAA3AC4AMgA5ADIAMgA1AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMA
VABfADIAZgA2ADMAMgA2ADYAYQA4AGIAMwAzADQAZgA5ADMAOAAwAGIANAA5AGIAMQBjADEANgA2
AGQAOQA1AGMANQAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAA
QwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA4AAAAKgABAAEATABlAGcAYQBsAFQAcgBh
AGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEA
bQBlAAAAUwBUAF8AMgBmADYAMwAyADYANgBhADgAYgAzADMANABmADkAMwA4ADAAYgA0ADkAYgAx
AGMAMQA2ADYAZAA5ADUAYwA1AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUA
AAAAAFMAVABfADIAZgA2ADMAMgA2ADYAYQA4AGIAMwAzADQAZgA5ADMAOAAwAGIANAA5AGIAMQBj
ADEANgA2AGQAOQA1AGMANQAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4ANwAyADAANwAuADIAOQAyADIANQAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4ANwAyADAANwAuADIAOQAyADIANQAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAAAENAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Set Varables\Prepear Tables for Import"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{2738054C-2898-45C1-A6D3-19DF0903551B}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Prepear Tables for Import"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{41489ED5-061B-4D57-9EF3-08A4032B6A13}"
              SQLTask:SqlStatementSource="IF EXISTS (SELECT Name FROM SYS.OBJECTS WHERE Name='PreValudation')&#xA;BEGIN&#xA; DROP TABLE ETL.PreValudation&#xA;END&#xA;&#xA;CREATE TABLE [ETL].[PreValudation](&#xA;&#x9;[PreRowID] [int] IDENTITY(1,1) NOT NULL,&#xA;&#x9;[ImportFileRowID] [int] NOT NULL,&#xA;&#x9;[ImportFileName] [varchar](200) NOT NULL,&#xA;&#x9;[Col1] [varchar](max) NULL,&#xA;&#x9;[Col2] [varchar](max) NULL,&#xA;&#x9;[CreateDate] [datetime] NOT NULL DEFAULT GETDATE(),&#xA;&#x9;[CustomerCode] [varchar](50) NOT NULL,&#xA;&#x9;[IntegrationName] [varchar](50) NOT NULL,&#xA;&#x9;CONSTRAINT [PK_ETL_PreValudation] PRIMARY KEY CLUSTERED &#xA;(&#xA;&#x9;[PreRowID] ASC&#xA;)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR=70) ON [PRIMARY]&#xA;) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]&#xA;&#xA;DECLARE @TBName&#x9;&#x9;&#x9;VARCHAR(100) &#xA;DECLARE @TBTotalRows&#x9;INT = 0&#xA;&#xA;IF EXISTS (SELECT Name FROM SYS.OBJECTS WHERE Type='U' AND Name='Clients_ETL' )&#xA;BEGIN &#xA;&#x9;SELECT @TBTotalRows=COUNT(*) FROM Clients_ETL&#xA;&#xA;&#x9;IF (@TBTotalRows &gt; 0)&#xA;&#x9;BEGIN&#xA;&#x9;&#x9;SET @TBName = 'Clients_ETL' + FORMAT(DATEPART(MM,GETDATE()),'0#') + FORMAT(DATEPART(DD,GETDATE()),'0#') + FORMAT(DATEPART(YYYY,GETDATE()),'0000#') + '_' + FORMAT(DATEPART(HH,GETDATE()),'0#') + FORMAT(DATEPART(MI,GETDATE()),'0#')&#xA;&#x9;&#x9;EXEC sp_rename 'Clients_ETL', @TBName&#xA;&#x9;END&#xA;END&#xA;&#xA;IF NOT EXISTS (SELECT Name FROM SYS.OBJECTS WHERE Type='U' AND Name='Clients_ETL' )&#xA;BEGIN&#xA;&#x9;CREATE TABLE [dbo].[Clients_ETL]&#xA;&#x9;([iKey] [int] IDENTITY(1,1) NOT NULL,&#xA;&#x9;[ProductNumber] [int] NULL,&#xA;&#x9;[ProductName] [varchar](1000) NULL,&#xA;&#x9;[ManufacturerName] [varchar](100) NULL,&#xA;&#x9;[ModelNumber] [varchar](100) NULL,&#xA;&#x9;[ItemTypeName] [varchar](50) NULL,&#xA;&#x9;[ItemSuggestedPrice] [varchar](50) NULL,&#xA;&#x9;[DepartmentName] [varchar](100) NULL,&#xA;&#x9;[SKU] [varchar](50) NULL,&#xA;&#x9;[serial_required] [char](10) NULL,&#xA;&#x9;[Serial] [varchar](250) NULL,&#xA;&#x9;[ProjectedLife] [varchar](50) NULL,&#xA;&#x9;[ProductInfo1] [varchar](1000) NULL,&#xA;&#x9;[ProductInfo2] [varchar](1000) NULL,&#xA;&#x9;[ProductInfo3] [varchar](1000) NULL,&#xA;&#x9;[SiteID] [varchar](100) NULL,&#xA;&#x9;[SiteName] [varchar](200) NULL,&#xA;&#x9;[RoomNumber] [varchar](50) NULL,&#xA;&#x9;[RoomDesc] [varchar](50) NULL,&#xA;&#x9;[RoomType] [varchar](50) NULL,&#xA;&#x9;[Tag] [varchar](50) NULL,&#xA;&#x9;[ParentTag] [varchar](50) NULL,&#xA;&#x9;[TagNotes] [varchar](1000) NULL,&#xA;&#x9;[ExpirationDate] [varchar](50) NULL,&#xA;&#x9;[EntityID] [varchar](50) NULL,&#xA;&#x9;[EntityLastName] [varchar](50) NULL,&#xA;&#x9;[EntityFirstName] [varchar](50) NULL,&#xA;&#x9;[EntityType] [varchar](50) NULL,&#xA;&#x9;[DueDate] DateTime NULL,&#xA;&#x9;[PONumber] [varchar](50) NULL,&#xA;&#x9;[Fundingsource] [varchar](500) NULL,&#xA;&#x9;[PurchaseDate] [varchar](50) NULL,&#xA;&#x9;[PurchasePrice] [varchar](50) NULL,&#xA;&#x9;[AccountCode] [varchar](100) NULL,&#xA;&#x9;[VendorName] [varchar](300) NULL,&#xA;&#x9;[PO_Notes] [varchar](500) NULL,&#xA;&#x9;[newPONumber] [varchar](50) NULL,&#xA;&#x9;[Accessory1Included] [varchar](50) NULL,&#xA;&#x9;[Accessory2Included] [varchar](50) NULL,&#xA;&#x9;[Accessory3Included] [varchar](50) NULL,&#xA;&#x9;[CustomUDEF1_Value] [varchar](250) NULL,&#xA;&#x9;[CustomUDEF2_Value] [varchar](250) NULL,&#xA;&#x9;[CustomUDEF3_Value] [varchar](250) NULL,&#xA;&#x9;[CustomUDEF4_Value] [varchar](250) NULL,&#xA;&#x9;[CustomUDEF1] [varchar](50) NULL,&#xA;&#x9;[CustomUDEF2] [varchar](50) NULL,&#xA;&#x9;[CustomUDEF3] [varchar](50) NULL,&#xA;&#x9;[CustomUDEF4] [varchar](50) NULL,&#xA;&#x9;[CustomUDEF1DataType] [varchar](50) NULL,&#xA;&#x9;[CustomUDEF2DataType] [varchar](50) NULL,&#xA;&#x9;[CustomUDEF3DataType] [varchar](50) NULL,&#xA;&#x9;[CustomUDEF4DataType] [varchar](50) NULL,&#xA;&#x9;[CustomField1Required] [varchar](50) NULL,&#xA;&#x9;[CustomField2Required] [varchar](50) NULL,&#xA;&#x9;[CustomField3Required] [varchar](50) NULL,&#xA;&#x9;[CustomField4Required] [varchar](50) NULL,&#xA;&#x9;[AccessoryName1] [varchar](150) NULL,&#xA;&#x9;[AccessoryPrice1] [varchar](50) NULL,&#xA;&#x9;[AccessoryQuantity1] [varchar](50) NULL,&#xA;&#x9;[AccessoryConsumable1] [varchar](50) NULL,&#xA;&#x9;[AccessoryName2] [varchar](150) NULL,&#xA;&#x9;[AccessoryPrice2] [varchar](50) NULL,&#xA;&#x9;[AccessoryQuantity2] [varchar](50) NULL,&#xA;&#x9;[AccessoryConsumable2] [varchar](50) NULL,&#xA;&#x9;[AccessoryName3] [varchar](150) NULL,&#xA;&#x9;[AccessoryPrice3] [varchar](50) NULL,&#xA;&#x9;[AccessoryQuantity3] [varchar](50) NULL,&#xA;&#x9;[AccessoryConsumable3] [varchar](50) NULL,&#xA;&#x9;[oldproductname] [varchar](255) NULL,&#xA;&#x9;[FRN] [varchar](255) NULL,&#xA;&#x9;[AssetCondition] [varchar](255) NULL,&#xA;&#x9;[Other2] [varchar](200) NULL,&#xA;&#x9;[Other1] [varchar](200) NULL,&#xA;&#x9;[Status] [varchar](50) NULL,&#xA;&#x9;[Date_Loaded] [datetime] NULL,&#xA;&#x9;[DataSource] [varchar](200) NULL,&#xA;&#x9;[ReviewFlag] [bit] NULL,&#xA;&#x9;[ReviewNotes] [varchar](1000) NULL,&#xA;&#x9;[import] [bit] NOT NULL DEFAULT 1,&#xA;&#x9;[RejectNotes] [varchar](1000) NULL,&#xA;&#x9;[ManufacturerUID] [int] NULL,&#xA;&#x9;[VendorUID] [int] NULL,&#xA;&#x9;[ItemTypeUID] [int] NULL,&#xA;&#x9;[ItemUID] [int] NULL,&#xA;&#x9;[InventoryUID] [int] NULL,&#xA;&#x9;[SiteUID] [int] NULL,&#xA;&#x9;[RoomUID] [int] NULL,&#xA;&#x9;[RoomTypeUID] [int] NULL,&#xA;&#x9;[EntityTypeUID] [int] NULL,&#xA;&#x9;[EntityUID] [int] NULL,&#xA;&#x9;[FundingSourceUID] [int] NULL,&#xA;&#x9;[PurchaseUID] [int] NULL,&#xA;&#x9;[PurchaseItemDetailUID] [int] NULL,&#xA;&#x9;[PurchaseItemShipmentUID] [int] NULL,&#xA;&#x9;[CreateDate] [datetime] NOT NULL DEFAULT GETDATE(),&#xA;&#x9;[ModfiedDate] [datetime] NOT NULL DEFAULT GETDATE(),&#xA;&#x9;[ModfiedBy] [varchar](200) NULL&#xA;&#x9;) ON [PRIMARY]&#xA;END&#xA;&#xA;IF NOT EXISTS (SELECT Name FROM SYS.OBJECTS WHERE Type='U' AND Name='Clients_ETL_Exceptions' )&#xA;BEGIN&#xA;&#x9;CREATE TABLE [dbo].[Clients_ETL_Exceptions](&#xA;&#x9;&#x9;[ExceptionColumn] [varchar](255) NULL,&#xA;&#x9;&#x9;[ExceptionRefColumn] [varchar](255) NULL,&#xA;&#x9;&#x9;[ExceptionValue] [varchar](255) NULL,&#xA;&#x9;&#x9;[ExceptionRefValue] [varchar](255) NULL&#xA;&#x9;) ON [PRIMARY]&#xA;END&#xA;&#xA;IF NOT EXISTS (SELECT Name FROM SYS.OBJECTS WHERE Type='U' AND Name='Issues' )&#xA;BEGIN&#xA;&#x9;CREATE TABLE [ETL].[Issues] (&#xA;&#x9;[IssueID] INT NOT NULL IDENTITY (1,1),&#xA;&#x9;NumberOfRows INT NOT NULL,&#xA;&#x9;DataColumn VARCHAR(100) NOT NULL,&#xA;&#x9;DescriptionOfIssue VARCHAR(200) NULL,&#xA;&#x9;Comments VARCHAR(500) NULL&#xA;&#x9;CONSTRAINT [PK_Issues] PRIMARY KEY CLUSTERED &#xA;&#x9;(&#x9;[IssueID] ASC&#xA;&#x9;)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]&#xA;&#x9;) ON [PRIMARY]&#xA;END&#xA;&#xA;IF NOT EXISTS (SELECT Name FROM SYS.OBJECTS WHERE Type='U' AND Name='IssuesRawData' )&#xA;BEGIN&#xA;&#x9;CREATE TABLE [ETL].[IssuesRawData](&#xA;&#x9;&#x9;[IssueID] [INT] NOT NULL,&#xA;&#x9;&#x9;[RowID] [int] NOT NULL,&#xA;&#x9;&#x9;[Tag] [varchar](max) NULL,&#xA;&#x9;&#x9;[ParentTag] [varchar](max) NULL,&#xA;&#x9;&#x9;[TagNotes] [varchar](max) NULL,&#xA;&#x9;&#x9;[Serial] [varchar](max) NULL,&#xA;&#x9;&#x9;[SerialRequired] [varchar](max) NULL,&#xA;&#x9;&#x9;[ProductName] [varchar](max) NULL,&#xA;&#x9;&#x9;[ManufacturerName] [varchar](max) NULL,&#xA;&#x9;&#x9;[ModelNumber] [varchar](max) NULL,&#xA;&#x9;&#x9;[ProductType] [varchar](max) NULL,&#xA;&#x9;&#x9;[ProjectedLife] [varchar](max) NULL,&#xA;&#x9;&#x9;[ItemSuggestedPrice] [varchar](max) NULL,&#xA;&#x9;&#x9;[SiteID] [varchar](max) NULL,&#xA;&#x9;&#x9;[SiteName] [varchar](max) NULL,&#xA;&#x9;&#x9;[DepartmentName] [varchar](max) NULL,&#xA;&#x9;&#x9;[RoomNumber] [varchar](max) NULL,&#xA;&#x9;&#x9;[RoomDesc] [varchar](max) NULL,&#xA;&#x9;&#x9;[RoomType] [varchar](max) NULL,&#xA;&#x9;&#x9;[StudentorStaffID] [varchar](max) NULL,&#xA;&#x9;&#x9;[StudentorStaff] [varchar](max) NULL,&#xA;&#x9;&#x9;[PONumber] [varchar](max) NULL,&#xA;&#x9;&#x9;[FundingSource] [varchar](max) NULL,&#xA;&#x9;&#x9;[PurchaseDate] [varchar](max) NULL,&#xA;&#x9;&#x9;[PurchasePrice] [varchar](max) NULL,&#xA;&#x9;&#x9;[PONotes] [varchar](max) NULL,&#xA;&#x9;&#x9;[AccountCode] [varchar](max) NULL,&#xA;&#x9;&#x9;[VendorName] [varchar](max) NULL,&#xA;&#x9;&#x9;[CustomField1Data] [varchar](max) NULL,&#xA;&#x9;&#x9;[CustomField2Data] [varchar](max) NULL,&#xA;&#x9;&#x9;[CustomField3Data] [varchar](max) NULL,&#xA;&#x9;&#x9;[CustomField4Data] [varchar](max) NULL,&#xA;&#x9;&#x9;[Accessory1Included] [varchar](max) NULL,&#xA;&#x9;&#x9;[Accessory2Included] [varchar](max) NULL,&#xA;&#x9;&#x9;[Accessory3Included] [varchar](max) NULL,&#xA;&#x9;&#x9;[ImportFIleName] [varchar](100) NOT NULL,&#xA;&#x9;&#x9;[ImportFileRowID] [int] NOT NULL,&#xA;&#x9;&#x9;[CreationDate] [date] NOT NULL,&#xA;&#x9;&#x9;[CreationTime] [time](7) NOT NULL,&#xA;&#x9;&#x9;[StudentorStaffFirstName] [varchar](200) NULL,&#xA;&#x9;&#x9;[StudentorStaffLastName] [varchar](200) NULL,&#xA;&#x9; CONSTRAINT [PK_IssuesRawData] PRIMARY KEY CLUSTERED &#xA;&#x9;(&#x9;[IssueID] ASC,&#xA;&#x9;&#x9;[RowID] ASC&#xA;&#x9;)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]&#xA;&#x9;) ON [PRIMARY] &#xA;END&#xA;&#xA;IF NOT EXISTS (SELECT Name FROM SYS.OBJECTS WHERE Type='U' AND Name='Clients_ETL_CustomFields' )&#xA;BEGIN&#xA;&#x9;CREATE TABLE [dbo].[Clients_ETL_CustomFields](&#xA;&#x9;&#x9;[ProductType] [nvarchar](255) NULL,&#xA;&#x9;&#x9;[CustomField1Name] [nvarchar](255) NULL,&#xA;&#x9;&#x9;[CustomField1DataType] [nvarchar](255) NULL,&#xA;&#x9;&#x9;[CustomField1Required] [nvarchar](255) NULL,&#xA;&#x9;&#x9;[CustomField2Name] [nvarchar](255) NULL,&#xA;&#x9;&#x9;[CustomField2DataType] [nvarchar](255) NULL,&#xA;&#x9;&#x9;[CustomField2Required] [nvarchar](255) NULL,&#xA;&#x9;&#x9;[CustomField3Name] [nvarchar](255) NULL,&#xA;&#x9;&#x9;[CustomField3DataType] [nvarchar](255) NULL,&#xA;&#x9;&#x9;[CustomField3Required] [nvarchar](255) NULL,&#xA;&#x9;&#x9;[CustomField4Name] [nvarchar](255) NULL,&#xA;&#x9;&#x9;[CustomField4DataType] [nvarchar](255) NULL,&#xA;&#x9;&#x9;[CustomField4Required] [nvarchar](255) NULL,&#xA;&#x9;&#x9;[import] [bit] NOT NULL DEFAULT 1,&#xA;&#x9;&#x9;[RejectNotes] [varchar](1000) NULL,&#xA;&#x9;) ON [PRIMARY]&#xA;END&#xA;&#xA;IF NOT EXISTS (SELECT Name FROM SYS.OBJECTS WHERE Type='U' AND Name='Clients_ETL_Accessories' )&#xA;BEGIN&#xA;&#x9;CREATE TABLE [dbo].[Clients_ETL_Accessories](&#xA;&#x9;&#x9;[ProductName] [nvarchar](255) NULL,&#xA;&#x9;&#x9;[Accessory1Name] [nvarchar](255) NULL,&#xA;&#x9;&#x9;[Accessory1Price] [float] NULL,&#xA;&#x9;&#x9;[Accessory1Quantity] [float] NULL,&#xA;&#x9;&#x9;[Accessory1Consumable] [nvarchar](255) NULL,&#xA;&#x9;&#x9;[Accessory2Name] [nvarchar](255) NULL,&#xA;&#x9;&#x9;[Accessory2Price] [float] NULL,&#xA;&#x9;&#x9;[Accessory2Quantity] [float] NULL,&#xA;&#x9;&#x9;[Accessory2Consumable] [nvarchar](255) NULL,&#xA;&#x9;&#x9;[Accessory3Name] [nvarchar](255) NULL,&#xA;&#x9;&#x9;[Accessory3Price] [float] NULL,&#xA;&#x9;&#x9;[Accessory3Quantity] [float] NULL,&#xA;&#x9;&#x9;[Accessory3Consumable ] [nvarchar](255) NULL,&#xA;&#x9;&#x9;[import] [bit] NOT NULL DEFAULT 1,&#xA;&#x9;&#x9;[RejectNotes] [varchar](1000) NULL,&#xA;&#x9;) ON [PRIMARY]&#xA;END&#xA;&#xA;IF NOT EXISTS (SELECT Name FROM SYS.OBJECTS WHERE Type='U' AND Name='Update_Clients_ETL' )&#xA;BEGIN&#xA;&#x9;CREATE TABLE Update_Clients_ETL&#xA;&#x9;(RunOrderID INT NOT NULL IDENTITY(1,1), SQLStatment TEXT NOT NULL,Active BIT NOT NULL DEFAULT 1,CreateBy VARCHAR(100) DEFAULT CURRENT_USER,CreateDate DATETIME DEFAULT GETDATE())&#xA;END" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Set Varables\SSIS Varables"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{AB71DBFF-816F-4A1E-80AF-49043B162888}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSIS Varables"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{042B5364-0F0A-4FF5-A2B0-25049A4E93C6}"
              SQLTask:SqlStatementSource="DECLARE @IPKey INT = ?&#xA;DECLARE @LocalPathFileName VARCHAR(200) = ?&#xA;&#xA;SELECT ETLDBName,FolderName,StagingDBName,'Z:\Customer Support\_Customer Data\_TIPWeb-IT_Customers\' AS RootPath,REVERSE(SUBSTRING(REVERSE(@LocalPathFileName),1,CHARINDEX('\',REVERSE(@LocalPathFileName),1)-1)) AS ImportFileName,FolderName AS CustomerCode,&#xA;'Data Conversion' AS IntegrationType,&#xA;UseCustomField AS CustomFieldMetaDataImport,&#xA;UseAccessories AS AccessoryMetaDataImport&#xA;FROM _DataConversion.[dbo].[SSIS_ITVariables]&#xA;WHERE IPKey=@IPKey"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="ETLDBName"
                SQLTask:DtsVariableName="User::DatabaseName_ETL" />
              <SQLTask:ResultBinding
                SQLTask:ResultName="StagingDBName"
                SQLTask:DtsVariableName="User::DatabaseName_TIPWeb" />
              <SQLTask:ResultBinding
                SQLTask:ResultName="RootPath"
                SQLTask:DtsVariableName="User::RootPath" />
              <SQLTask:ResultBinding
                SQLTask:ResultName="FolderName"
                SQLTask:DtsVariableName="User::FilePath" />
              <SQLTask:ResultBinding
                SQLTask:ResultName="ImportFileName"
                SQLTask:DtsVariableName="User::FileName" />
              <SQLTask:ResultBinding
                SQLTask:ResultName="CustomerCode"
                SQLTask:DtsVariableName="User::CustomerCode" />
              <SQLTask:ResultBinding
                SQLTask:ResultName="IntegrationType"
                SQLTask:DtsVariableName="User::IntergrationType" />
              <SQLTask:ResultBinding
                SQLTask:ResultName="AccessoryMetaDataImport"
                SQLTask:DtsVariableName="User::_AccessoryMetaDataImport" />
              <SQLTask:ResultBinding
                SQLTask:ResultName="CustomFieldMetaDataImport"
                SQLTask:DtsVariableName="User::_CustomFieldsMetaDataImport" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::_SSISKeyID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="131"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::_LocalImportPathFileName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Set Varables.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{463BD51C-794E-46C6-AE19-D05E7A53944E}"
          DTS:From="Package\Set Varables\SSIS Varables"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Set Varables\Fix File Paths" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Set Varables.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{0738C04C-77F8-4BAB-8460-8437FB31BF43}"
          DTS:From="Package\Set Varables\Fix File Paths"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Set Varables\Create ETL DB" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Set Varables.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{B582670E-B894-4B96-893B-022B42D505C3}"
          DTS:From="Package\Set Varables\Create ETL DB"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Set Varables\Create SP and Funtions" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Set Varables.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{E202A4EA-EE32-4B07-B501-91E636B8B748}"
          DTS:From="Package\Set Varables\Create SP and Funtions"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\Set Varables\Prepear Tables for Import" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Stage 2 - Data Cleanup and Staging Raw Table Populate"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{73345FF6-634F-4C0A-9055-FD64C5067D44}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Stage 2 - Data Cleanup and Staging Raw Table Populate">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Stage 2 - Data Cleanup and Staging Raw Table Populate\Cleanup Special Chars"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{356041C8-308E-4F35-97DD-6520B294F415}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Cleanup Special Chars"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{41489ED5-061B-4D57-9EF3-08A4032B6A13}"
              SQLTask:SqlStatementSource="DECLARE @SQL&#x9;&#x9;VARCHAR(MAX) = 'UPDATE Clients_ETL '&#xA;DECLARE @Counter&#x9;INT = 1&#xA;DECLARE @CounterMax&#x9;INT&#xA;&#xA;SET NOCOUNT ON&#xA;&#xA;DECLARE @TableColumns TABLE&#xA;(RowID INT NOT NULL IDENTITY(1,1), ColumnName VARCHAR(100) NOT NULL)&#xA;&#xA;INSERT INTO @TableColumns&#xA;(ColumnName)&#xA;&#xA;SELECT B.name &#xA;FROM sys.objects AS A&#xA;INNER JOIN sys.columns AS B&#xA;ON A.object_id=B.object_id&#xA;&#xA;WHERE A.name = 'Clients_ETL'&#xA;AND B.name NOT IN  ('IKey','Date_Loaded','DataSource','ReviewFlag','ReviewNotes','import','RejectNotes','CreateDate','ModfiedDate','ModfiedBy')&#xA;&#xA;SET @CounterMax = @@ROWCOUNT&#xA;&#xA;WHILE @Counter &lt;= @CounterMax&#xA;BEGIN&#xA;&#x9;&#xA;&#x9;SELECT @SQL = @SQL + CASE WHEN RowID = 1 THEN ' SET ' ELSE ', ' END + ColumnName + ' = Cleanup.RemoveSpecialCharacters (' + ColumnName + ')'&#xA;&#x9;FROM @TableColumns&#xA;&#x9;WHERE RowID = @Counter&#xA;&#xA;&#x9;SET @Counter = @Counter + 1&#xA;END&#xA;&#xA;&#xA;EXEC(@SQL)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Stage 2 - Data Cleanup and Staging Raw Table Populate\Fix Missing Columns"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{4CCFDB1D-AD0A-4F62-AC8A-C0B8ED454068}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Fix Missing Columns"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{41489ED5-061B-4D57-9EF3-08A4032B6A13}"
              SQLTask:SqlStatementSource="DECLARE @Counter&#x9;&#x9;INT = 1&#xA;DECLARE @CouterMax&#x9;&#x9;INT&#xA;DECLARE @MissingColumn&#x9;VARCHAR(100)&#xA;DECLARE @SQL&#x9;&#x9;&#x9;VARCHAR(MAX)&#xA;&#xA;SET NOCOUNT ON&#xA;&#xA;DECLARE @ColumnNames TABLE&#xA;(ColumnName VARCHAR(100) NOT NULL, Missing BIT NOT NULL)&#xA;&#xA;INSERT INTO @ColumnNames (ColumnName,Missing) VALUES&#xA;('ProductName',0),&#xA;('ManufacturerName',0),&#xA;('ModelNumber',0),&#xA;('ProductType',0),&#xA;('SerialRequired',0),&#xA;('Serial',0),&#xA;('ProjectedLife',0),&#xA;('ItemSuggestedPrice',0),&#xA;('SiteID',0),&#xA;('SiteName',0),&#xA;('RoomNumber',0),&#xA;('RoomDesc',0),&#xA;('RoomType',0),&#xA;('Tag',0),&#xA;('ParentTag',0),&#xA;('TagNotes',0),&#xA;('StudentorStaffID',0),&#xA;('StudentorStaffFirstName',0),&#xA;('StudentorStaffLastName',0),&#xA;('StudentorStaff',0),&#xA;('PONumber',0),&#xA;('FundingSource',0),&#xA;('PurchaseDate',0),&#xA;('PurchasePrice',0),&#xA;('PONotes',0),&#xA;('AccountCode',0),&#xA;('VendorName',0),&#xA;('VendorID',0),&#xA;('CustomField1Data',0),&#xA;('CustomField2Data',0),&#xA;('CustomField3Data',0),&#xA;('CustomField4Data',0),&#xA;('Accessory1Included',0),&#xA;('Accessory2Included',0),&#xA;('Accessory3Included',0),&#xA;('DepartmentName',0),&#xA;('DepartmentID',0),&#xA;('AssetCondition',0),&#xA;('AssetConditionID',0),&#xA;('FRN',0),&#xA;('DueDate',0),&#xA;('AssetID',0)&#xA;&#xA;UPDATE @ColumnNames&#xA;SET Missing = 1&#xA;WHERE ColumnName NOT IN&#xA;(&#xA;SELECT B.name&#xA;FROM SYS.OBJECTS AS A&#xA;INNER JOIN SYS.COLUMNS AS B&#xA;ON A.object_id=B.object_id&#xA;&#xA;WHERE A.Name='RawImport'&#xA;AND B.Name NOT IN ('RowID','ImportFIleName','PreRowID','ImportFileRowID','CustomerCode',&#xA;'IntegrationName','CreationDate','CreationTime','Exception','ExceptionReason')&#xA;)&#xA;&#xA;&#xA;SELECT @CouterMax=MAX(RowID)&#xA;FROM (&#xA;SELECT ROW_NUMBER() OVER(ORDER BY ColumnName ASC) AS RowID,ColumnName&#xA;FROM @ColumnNames&#xA;WHERE Missing = 1&#xA;) AS TB&#xA;&#xA;WHILE @Counter &lt;= @CouterMax&#xA;BEGIN&#xA;&#x9;SELECT @MissingColumn = ColumnName&#xA;&#x9;FROM &#xA;&#x9;(SELECT ROW_NUMBER() OVER(ORDER BY ColumnName ASC) AS RowID,ColumnName&#xA;&#x9;FROM @ColumnNames&#xA;&#x9;WHERE Missing = 1) AS TBMissingCol&#xA;&#x9;WHERE RowID = @Counter&#xA;&#xA;&#x9;SET @SQL = 'ALTER TABLE ETL.RawImport ADD [' + @MissingColumn +'] VARCHAR(200)'&#xA;&#x9;EXEC (@SQL)&#xA;&#xA;&#x9;SET @Counter = @Counter + 1&#xA;END&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Stage 2 - Data Cleanup and Staging Raw Table Populate\Populate Client_ETL"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{2B6595CE-3BE3-4AFE-9BC7-4A5AB1F54D00}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Populate Client_ETL"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{41489ED5-061B-4D57-9EF3-08A4032B6A13}"
              SQLTask:SqlStatementSource="DECLARE @Counter&#x9;&#x9;INT = 1&#xA;DECLARE @CounterMax&#x9;&#x9;INT&#xA;DECLARE @IssueID&#x9;&#x9;INT = 1&#xA;DECLARE @ErrorRowCount&#x9;INT&#xA;DECLARE @ColumnName&#x9;&#x9;VARCHAR(100)&#xA;DECLARE @ColumnLength&#x9;INT&#xA;DECLARE @NumberOfRows&#x9;INT&#xA;DECLARE @SQL&#x9;&#x9;&#x9;VARCHAR(MAX)&#xA;&#xA;SET NOCOUNT ON&#xA;TRUNCATE TABLE ETL.Issues&#xA;TRUNCATE TABLE ETL.IssuesRawData&#xA;TRUNCATE TABLE Clients_ETL_Exceptions&#xA;&#xA;DECLARE @TableCoumns TABLE&#xA;(RowID INT NOT NULL IDENTITY(1,1),ColumnName VARCHAR(100),ColumnLength INT) &#xA;&#xA;INSERT INTO @TableCoumns&#xA;(ColumnName,ColumnLength)&#xA;&#xA;SELECT&#x9;'ProductName' ,1000&#xA;UNION ALL SELECT 'ManufacturerName' ,100&#xA;UNION ALL SELECT 'ModelNumber' ,100&#xA;UNION ALL SELECT 'ProductType' ,50&#xA;UNION ALL SELECT 'ItemSuggestedPrice' ,50&#xA;UNION ALL SELECT 'DepartmentName' ,100&#xA;UNION ALL SELECT 'serialrequired',10&#xA;UNION ALL SELECT 'Serial' ,250&#xA;UNION ALL SELECT 'ProjectedLife' ,50&#xA;UNION ALL SELECT 'SiteID' ,100&#xA;UNION ALL SELECT 'SiteName' ,200&#xA;UNION ALL SELECT 'RoomNumber' ,50&#xA;UNION ALL SELECT 'RoomDesc' ,50&#xA;UNION ALL SELECT 'RoomType' ,50&#xA;UNION ALL SELECT 'Tag' ,50&#xA;UNION ALL SELECT 'ParentTag' ,50&#xA;UNION ALL SELECT 'TagNotes' ,1000&#xA;UNION ALL SELECT 'StudentOrStaffID ',50&#xA;UNION ALL SELECT 'StudentOrStaff',50&#xA;UNION ALL SELECT 'PONumber' ,50&#xA;UNION ALL SELECT 'Fundingsource' ,500&#xA;UNION ALL SELECT 'PurchaseDate' ,50&#xA;UNION ALL SELECT 'PurchasePrice' ,50&#xA;UNION ALL SELECT 'AccountCode' ,100&#xA;UNION ALL SELECT 'VendorName' ,300&#xA;UNION ALL SELECT 'AssetCondition' ,300&#xA;UNION ALL SELECT 'DueDate',50&#xA;&#xA;SET @CounterMax = @@ROWCOUNT&#xA;&#xA;WHILE @Counter &lt;= @CounterMax&#xA;BEGIN&#xA;&#x9;SELECT @ColumnName = ColumnName, @ColumnLength = ColumnLength &#xA;&#x9;FROM @TableCoumns WHERE RowID = @Counter&#xA;&#xA;&#x9;SET @SQL = 'SELECT * FROM ETL.RawImport WHERE LEN('+ @ColumnName + ') &gt; ' + CAST(@ColumnLength AS VARCHAR(50)) + '' &#xA;&#xA;&#x9;EXEC(@SQL)&#xA;&#xA;&#x9;SET @NumberOfRows = @@ROWCOUNT&#xA;&#xA;&#x9;IF @NumberOfRows &gt; 0&#xA;&#x9;BEGIN&#xA;&#x9;&#x9;SET @SQL = 'INSERT INTO ETL.Issues (NumberOfRows,DataColumn,DescriptionOfIssue) SELECT ' +  CAST(@NumberOfRows AS varchar(50)) + ' AS NumberOfRows, '''  + @ColumnName +''' AS DataColumn, ''Data has exceed ' + CAST(@ColumnLength AS VARCHAR(50))  + ' in length. The extra data has been removed''' &#xA;&#xA;&#x9;&#x9;EXEC(@SQL)&#xA;&#xA;&#x9;&#x9;SET @IssueID = @@IDENTITY&#xA;&#xA;&#x9;&#x9;SET @SQL = &#xA;&#x9;&#x9;'INSERT INTO ETL.IssuesRawData&#xA;&#x9;&#x9;(IssueID,RowID,Tag,ParentTag,TagNotes,Serial,SerialRequired,ProductName,ManufacturerName,ModelNumber,ProductType,ProjectedLife,ItemSuggestedPrice,SiteID,&#xA;&#x9;&#x9;SiteName,DepartmentName,RoomNumber,RoomDesc,RoomType,StudentorStaffID,StudentorStaff,PONumber,FundingSource,PurchaseDate,PurchasePrice,&#xA;&#x9;&#x9;PONotes,AccountCode,VendorName,StudentorStaffFirstName,StudentorStaffLastName,DueDate,&#xA;&#x9;&#x9;CustomField1Data,CustomField2Data,CustomField3Data,CustomField4Data,Accessory1Included,Accessory2Included,Accessory3Included,&#xA;&#x9;&#x9;ImportFIleName,ImportFileRowID,CreationDate,CreationTime)&#xA;&#xA;&#x9;&#x9;SELECT ' + CAST(@IssueID AS varchar(50)) + ' AS IssueID,RowID,Tag,ParentTag,TagNotes,Serial,SerialRequired,ProductName,ManufacturerName,ModelNumber,ProductType,ProjectedLife,ItemSuggestedPrice,SiteID,&#xA;&#x9;&#x9;SiteName,DepartmentName,RoomNumber,RoomDesc,RoomType,StudentorStaffID,StudentorStaff,PONumber,FundingSource,PurchaseDate,PurchasePrice,&#xA;&#x9;&#x9;PONotes,AccountCode,VendorName,StudentorStaffFirstName,StudentorStaffLastName,DueDate,&#xA;&#x9;&#x9;CustomField1Data,CustomField2Data,CustomField3Data,CustomField4Data,Accessory1Included,Accessory2Included,Accessory3Included,&#xA;&#x9;&#x9;ImportFIleName,ImportFileRowID,CreationDate,CreationTime&#xA;&#x9;&#x9;FROM ETL.RawImport WHERE LEN('+ @ColumnName + ') &gt; ' + CAST(@ColumnLength AS VARCHAR(50)) + '' &#xA;&#xA;&#x9;&#x9;EXEC(@SQL)&#xA;&#xA;&#x9;END&#xA;&#xA;&#x9;SET @Counter = @Counter + 1&#xA;END&#xA;&#xA;&#xA;&#xA;&#xA;INSERT INTO [dbo].[Clients_ETL]&#xA;(ProductName,ManufacturerName,ModelNumber,ItemTypeName,Serial_Required,&#xA;Serial,ProjectedLife,ItemSuggestedPrice,SiteID,SiteName,DepartmentName,&#xA;RoomNumber,RoomDesc,RoomType,Tag,ParentTag,TagNotes,&#xA;EntityID,EntityFirstName,EntityLastName,EntityType,DueDate,&#xA;PONumber,FundingSource,PurchaseDate,PurchasePrice,PO_Notes,AccountCode,VendorName,&#xA;CustomUDEF1_Value,CustomUDEF2_Value,CustomUDEF3_Value,CustomUDEF4_Value,&#xA;Accessory1Included,Accessory2Included,Accessory3Included,FRN,AssetCondition&#xA;)&#xA;&#xA;SELECT SUBSTRING(ProductName,1,1000),SUBSTRING(ManufacturerName,1,100),SUBSTRING(ModelNumber,1,100),SUBSTRING(ProductType,1,50),SUBSTRING(SerialRequired,1,50),&#xA;SUBSTRING(Serial,1,250),SUBSTRING(ProjectedLife,1,50),SUBSTRING(ItemSuggestedPrice,1,50),SUBSTRING(SiteID,1,50),SUBSTRING(SiteName,1,200),SUBSTRING(DepartmentName,1,100),&#xA;SUBSTRING(RoomNumber,1,50),SUBSTRING(RoomDesc,1,50),SUBSTRING(RoomType,1,50),SUBSTRING(Tag,1,50),SUBSTRING(ParentTag,1,50),SUBSTRING(TagNotes,1,1000),&#xA;SUBSTRING(StudentorStaffID,1,50),SUBSTRING(StudentorStaffFirstName,1,50),SUBSTRING(StudentorStaffLastName,1,50),SUBSTRING(StudentorStaff,1,50),DueDate,&#xA;SUBSTRING(PONumber,1,50),SUBSTRING(FundingSource,1,500),SUBSTRING(PurchaseDate,1,50),SUBSTRING(PurchasePrice,1,50),SUBSTRING(PONotes,1,50),SUBSTRING(AccountCode,1,50),SUBSTRING(VendorName,1,300),&#xA;SUBSTRING(CustomField1Data,1,50),SUBSTRING(CustomField2Data,1,50),SUBSTRING(CustomField3Data,1,50),SUBSTRING(CustomField4Data,1,50),&#xA;SUBSTRING(Accessory1Included,1,50),SUBSTRING(Accessory2Included,1,50),SUBSTRING(Accessory3Included,1,50),SUBSTRING(FRN,1,50),SUBSTRING(AssetCondition,1,50)&#xA;&#xA;FROM ETL.RawImport&#xA;&#xA;&#xA;INSERT INTO ETL.RawImportStats&#xA;(RawDataImportDate,TotalRowsInFile,TotalRowsImported,TotalRowsInETL,FileName)&#xA;&#xA;SELECT GETDATE() AS RawDataImportDate,MAX(ImportFileRowID)-1 AS TotalRowsInFile,COUNT(ImportFileRowID) AS TotalRowsImported,&#xA;(SELECT COUNT(*) AS TotalRowsInETL FROM [dbo].[Clients_ETL]) AS TotalRowsInETL,&#xA;(SELECT DISTINCT ImportFIleName FROM [ETL].[RawImport]) AS ImportFileName&#xA;FROM [ETL].[RawImport]&#xA;&#xA;&#xA;DELETE [dbo].[Clients_ETL]&#xA;WHERE ProductName = '' AND ManufacturerName='' AND ItemTypeName=''" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Stage 2 - Data Cleanup and Staging Raw Table Populate\Rebuild PK"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{75B762C8-4E43-447D-8F99-39370E807289}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Rebuild PK"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{41489ED5-061B-4D57-9EF3-08A4032B6A13}"
              SQLTask:SqlStatementSource="ALTER INDEX PK_ETL_PreValudation ON ETL.PreValudation REBUILD;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Stage 2 - Data Cleanup and Staging Raw Table Populate\Remove Blanks"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{396D126C-95E3-4DD0-AAE5-9D9B834C7699}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Remove Blanks"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{41489ED5-061B-4D57-9EF3-08A4032B6A13}"
              SQLTask:SqlStatementSource="-- Remove Blank Data&#xA;DELETE &#xA;FROM ETL.RawImport&#xA;WHERE ProductName = '' AND ManufacturerName = ''&#xA;AND ModelNumber = '' AND ProductType = ''&#xA;AND SerialRequired = '' AND Serial = ''&#xA;AND ProjectedLife = '' AND ItemSuggestedPrice = ''&#xA;AND SiteID = '' AND SiteName = ''&#xA;AND DepartmentName = '' AND RoomNumber = ''&#xA;AND RoomDesc = '' AND RoomType = ''&#xA;AND Tag = '' AND ParentTag = ''&#xA;AND PONumber = '' AND FundingSource = ''&#xA;AND PurchaseDate = '' AND PurchasePrice = ''&#xA;AND AccountCode = '' AND VendorName = ''&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Stage 2 - Data Cleanup and Staging Raw Table Populate\Remove Empty Strings"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{16A6A96B-9DEE-4221-987F-6C84A4BED698}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Remove Empty Strings"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{41489ED5-061B-4D57-9EF3-08A4032B6A13}"
              SQLTask:SqlStatementSource="DECLARE @SQL&#x9;&#x9;VARCHAR(MAX) &#xA;DECLARE @Counter&#x9;INT = 1&#xA;DECLARE @CounterMax&#x9;INT&#xA;&#xA;SET NOCOUNT ON&#xA;&#xA;DECLARE @TableColumns TABLE&#xA;(RowID INT NOT NULL IDENTITY(1,1), ColumnName VARCHAR(100) NOT NULL)&#xA;&#xA;INSERT INTO @TableColumns&#xA;(ColumnName)&#xA;&#xA;SELECT B.name &#xA;FROM sys.objects AS A&#xA;INNER JOIN sys.columns AS B&#xA;ON A.object_id=B.object_id&#xA;&#xA;WHERE A.name = 'Clients_ETL'&#xA;AND B.name NOT IN  ('IKey','Date_Loaded','DataSource','ReviewFlag','ReviewNotes','import','RejectNotes','CreateDate','ModfiedDate','ModfiedBy')&#xA;&#xA;SET @CounterMax = @@ROWCOUNT&#xA;&#xA;WHILE @Counter &lt;= @CounterMax&#xA;BEGIN&#xA;&#x9;&#xA;&#x9;SELECT @SQL = 'UPDATE Clients_ETL  SET ' + ColumnName + ' = NULL WHERE '  + ColumnName + ' = '''' '&#xA;&#x9;FROM @TableColumns&#xA;&#x9;WHERE RowID = @Counter&#xA;&#xA;&#x9;EXEC(@SQL)&#xA;&#xA;&#x9;SET @Counter = @Counter + 1&#xA;END&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Stage 2 - Data Cleanup and Staging Raw Table Populate\Rename RawImport Table"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{E0926DB5-C38C-49AC-9D75-F9DF7DD620A4}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Rename RawImport Table"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{41489ED5-061B-4D57-9EF3-08A4032B6A13}"
              SQLTask:SqlStatementSource="DECLARE @NewTableName VARCHAR(200) = ? + '_'+ FORMAT(DATEPART(MM,GETDATE()),'0#') + FORMAT(DATEPART(DD,GETDATE()),'0#') + FORMAT(DATEPART(YYYY,GETDATE()),'0000#') + '_' + FORMAT(DATEPART(HH,GETDATE()),'0#') + FORMAT(DATEPART(MI,GETDATE()),'0#')&#xA;DECLARE @NewIndexName VARCHAR(200) = 'PK_' + @NewTableName&#xA;&#xA;EXEC sp_rename  'ETL.RawImport.PK_Stage_RawImport', @NewIndexName&#xA;&#xA;EXEC sp_rename 'ETL.RawImport', @NewTableName&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::ImportRawTable"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Stage 2 - Data Cleanup and Staging Raw Table Populate\Run Cleanup and Stage Data"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{92DA220D-0535-4513-A551-1514A5DC271A}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Run Cleanup and Stage Data"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{41489ED5-061B-4D57-9EF3-08A4032B6A13}"
              SQLTask:SqlStatementSource="EXEC [ETL].[MainETL] @BatchCount = 1" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Stage 2 - Data Cleanup and Staging Raw Table Populate\Update Clients_ETL"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{90BC4555-5AB2-47AF-BAD7-508F994E60B8}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Update Clients_ETL"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{41489ED5-061B-4D57-9EF3-08A4032B6A13}"
              SQLTask:SqlStatementSource="EXEC [ETL].[ClientsETLUpdate] @Debug = 0" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Stage 2 - Data Cleanup and Staging Raw Table Populate\Update StatusID"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{94747E07-34DB-4D44-9C1D-3C807F64222B}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Update StatusID"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{042B5364-0F0A-4FF5-A2B0-25049A4E93C6}"
              SQLTask:SqlStatementSource="DECLARE @IPKey INT = ?&#xA;&#xA;EXEC DataConversionStatusUpdate @IPKey=@IPKey,@StatusID=2" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::_SSISKeyID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="131"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Stage 2 - Data Cleanup and Staging Raw Table Populate.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{E511ADA4-7489-4C72-B234-3CB37241EBFC}"
          DTS:From="Package\Stage 2 - Data Cleanup and Staging Raw Table Populate\Run Cleanup and Stage Data"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Stage 2 - Data Cleanup and Staging Raw Table Populate\Fix Missing Columns" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Stage 2 - Data Cleanup and Staging Raw Table Populate.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{D95EB70A-A5BA-4F99-B761-87E283DDCB77}"
          DTS:From="Package\Stage 2 - Data Cleanup and Staging Raw Table Populate\Rebuild PK"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Stage 2 - Data Cleanup and Staging Raw Table Populate\Run Cleanup and Stage Data" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Stage 2 - Data Cleanup and Staging Raw Table Populate.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{97843AC1-33C9-40CA-9046-25B01EA57AE9}"
          DTS:From="Package\Stage 2 - Data Cleanup and Staging Raw Table Populate\Fix Missing Columns"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Stage 2 - Data Cleanup and Staging Raw Table Populate\Remove Blanks" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Stage 2 - Data Cleanup and Staging Raw Table Populate.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{2D7CF3CA-65FD-4BE9-948D-10F700588718}"
          DTS:From="Package\Stage 2 - Data Cleanup and Staging Raw Table Populate\Populate Client_ETL"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\Stage 2 - Data Cleanup and Staging Raw Table Populate\Rename RawImport Table" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Stage 2 - Data Cleanup and Staging Raw Table Populate.PrecedenceConstraints[Constraint 4]"
          DTS:CreationName=""
          DTS:DTSID="{B6B4007C-CE83-4716-B357-5CA31182DBDB}"
          DTS:From="Package\Stage 2 - Data Cleanup and Staging Raw Table Populate\Remove Blanks"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 4"
          DTS:To="Package\Stage 2 - Data Cleanup and Staging Raw Table Populate\Populate Client_ETL" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Stage 2 - Data Cleanup and Staging Raw Table Populate.PrecedenceConstraints[Constraint 5]"
          DTS:CreationName=""
          DTS:DTSID="{92AAB02E-F09E-46CE-AE2F-894FCF2605B0}"
          DTS:From="Package\Stage 2 - Data Cleanup and Staging Raw Table Populate\Rename RawImport Table"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 5"
          DTS:To="Package\Stage 2 - Data Cleanup and Staging Raw Table Populate\Cleanup Special Chars" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Stage 2 - Data Cleanup and Staging Raw Table Populate.PrecedenceConstraints[Constraint 6]"
          DTS:CreationName=""
          DTS:DTSID="{C13B11DF-BB15-49E5-9ED4-B50D2D63EAD8}"
          DTS:From="Package\Stage 2 - Data Cleanup and Staging Raw Table Populate\Cleanup Special Chars"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 6"
          DTS:To="Package\Stage 2 - Data Cleanup and Staging Raw Table Populate\Remove Empty Strings" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Stage 2 - Data Cleanup and Staging Raw Table Populate.PrecedenceConstraints[Constraint 7]"
          DTS:CreationName=""
          DTS:DTSID="{0B729C2A-1EC6-40F9-A2DF-19C2F86D7BF7}"
          DTS:From="Package\Stage 2 - Data Cleanup and Staging Raw Table Populate\Remove Empty Strings"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 7"
          DTS:To="Package\Stage 2 - Data Cleanup and Staging Raw Table Populate\Update Clients_ETL" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Stage 2 - Data Cleanup and Staging Raw Table Populate.PrecedenceConstraints[Constraint 8]"
          DTS:CreationName=""
          DTS:DTSID="{5F54A8E5-B385-4A4D-ADCB-AB4C243C07BC}"
          DTS:From="Package\Stage 2 - Data Cleanup and Staging Raw Table Populate\Update Clients_ETL"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 8"
          DTS:To="Package\Stage 2 - Data Cleanup and Staging Raw Table Populate\Update StatusID" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Staging File Import"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{77449B96-8F4E-4B5A-8580-C9723784F8F9}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Staging File Import">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{272da799-aa95-473e-ad3e-09ce5df7a35f}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Stage 1b - Import File to Cleanup Table">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:DelayValidation="True"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{7ead52a5-fa7b-49f9-91c9-73856681d8d1}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Import CSV File"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Add Varables to Columns"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Add Varables to Columns"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Add Varables to Columns.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Add Varables to Columns.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Add Varables to Columns.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Add Varables to Columns.Outputs[Derived Column Output].Columns[ImportFileName]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="100"
                              lineageId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Add Varables to Columns.Outputs[Derived Column Output].Columns[ImportFileName]"
                              name="ImportFileName"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">@[User::FileName]</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">@[User::FileName]</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Add Varables to Columns.Outputs[Derived Column Output].Columns[IntergrationName]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="100"
                              lineageId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Add Varables to Columns.Outputs[Derived Column Output].Columns[IntergrationName]"
                              name="IntergrationName"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">@[User::IntergrationType]</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">@[User::IntergrationType]</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Add Varables to Columns.Outputs[Derived Column Output].Columns[CustomCode]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="3"
                              lineageId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Add Varables to Columns.Outputs[Derived Column Output].Columns[CustomCode]"
                              name="CustomCode"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">"TBA"</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">"TBA"</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Add Varables to Columns.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Add Varables to Columns.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Add Varables to Columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Add Varables to Columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Add Varables to Columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Add Varables to Columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Data Conversion"
                      componentClassID="Microsoft.DataConvert"
                      contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Data Conversion"
                      name="Data Conversion"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Data Conversion.Inputs[Data Conversion Input]"
                          name="Data Conversion Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Data Conversion.Inputs[Data Conversion Input].Columns[ImportFileName]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="ImportFileName"
                              lineageId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Add Varables to Columns.Outputs[Derived Column Output].Columns[ImportFileName]" />
                            <inputColumn
                              refId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Data Conversion.Inputs[Data Conversion Input].Columns[IntergrationName]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="IntergrationName"
                              lineageId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Add Varables to Columns.Outputs[Derived Column Output].Columns[IntergrationName]" />
                            <inputColumn
                              refId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Data Conversion.Inputs[Data Conversion Input].Columns[CustomCode]"
                              cachedDataType="wstr"
                              cachedLength="3"
                              cachedName="CustomCode"
                              lineageId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Add Varables to Columns.Outputs[Derived Column Output].Columns[CustomCode]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Data Conversion.Outputs[Data Conversion Output]"
                          exclusionGroup="1"
                          name="Data Conversion Output"
                          synchronousInputId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Data Conversion.Inputs[Data Conversion Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Data Conversion.Outputs[Data Conversion Output].Columns[DC.ImportFileName]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              length="200"
                              lineageId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Data Conversion.Outputs[Data Conversion Output].Columns[DC.ImportFileName]"
                              name="DC.ImportFileName"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Add Varables to Columns.Outputs[Derived Column Output].Columns[ImportFileName]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Data Conversion.Outputs[Data Conversion Output].Columns[DC.IntergrationName]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              length="100"
                              lineageId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Data Conversion.Outputs[Data Conversion Output].Columns[DC.IntergrationName]"
                              name="DC.IntergrationName"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Add Varables to Columns.Outputs[Derived Column Output].Columns[IntergrationName]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Data Conversion.Outputs[Data Conversion Output].Columns[DC.CustomCode]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              length="3"
                              lineageId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Data Conversion.Outputs[Data Conversion Output].Columns[DC.CustomCode]"
                              name="DC.CustomCode"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Add Varables to Columns.Outputs[Derived Column Output].Columns[CustomCode]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Data Conversion.Outputs[Data Conversion Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Data Conversion Error Output"
                          synchronousInputId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Data Conversion.Inputs[Data Conversion Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Flat File Source"
                      componentClassID="Microsoft.FlatFileSource"
                      contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Flat File Source"
                      localeId="1033"
                      name="Flat File Source"
                      usesDispositions="true"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Specifies whether zero-length columns are treated as null."
                          name="RetainNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                          name="FileNameColumnName"></property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Flat File Source.Connections[FlatFileConnection]"
                          connectionManagerID="Package.ConnectionManagers[Source - OneColumn]"
                          connectionManagerRefId="Package.ConnectionManagers[Source - OneColumn]"
                          name="FlatFileConnection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Flat File Source.Outputs[Flat File Source Output]"
                          name="Flat File Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Flat File Source.Outputs[Flat File Source Output].Columns[Column 0]"
                              codePage="1252"
                              dataType="text"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Column 0]"
                              lineageId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Flat File Source.Outputs[Flat File Source Output].Columns[Column 0]"
                              name="Column 0"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the data is in binary format."
                                  name="UseBinaryFormat">false</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Column 0]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="Column 0" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Flat File Source.Outputs[Flat File Source Error Output]"
                          isErrorOut="true"
                          name="Flat File Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                              codePage="1252"
                              dataType="text"
                              description="Flat File Source Error Output Column"
                              lineageId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                              name="Flat File Source Error Output Column" />
                            <outputColumn
                              refId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Generate File Row Number"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;9"
                      description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                      name="Generate File Row Number"
                      version="9">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Stores the source code of the component"
                          isArray="true"
                          name="SourceCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="30">
                            <arrayElement
                              dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    int row = 1;
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        Row.FileRowID = row;
        row = row + 1;
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 FileRowID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool FileRowID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_193fdfe802ca4d63a0b0cffbf7ed72e1.Properties.Settings.get_Default():SC_193fdfe802ca4d63a0b0cffbf7ed72e1.Properties.Sett" +
    "ings")]

namespace SC_193fdfe802ca4d63a0b0cffbf7ed72e1.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_193fdfe802ca4d63a0b0cffbf7ed72e1.csproj]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{bc844af2-3e1d-46cd-8725-b93fffe2c01c}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_193fdfe802ca4d63a0b0cffbf7ed72e1</RootNamespace>
    <AssemblyName>SC_193fdfe802ca4d63a0b0cffbf7ed72e1</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_193fdfe802ca4d63a0b0cffbf7ed72e1" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Project]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_193fdfe802ca4d63a0b0cffbf7ed72e1</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_193fdfe802ca4d63a0b0cffbf7ed72e1</msb:DisplayName>
		<msb:ProjectId>{FE8F7FE8-ED3B-4701-9AB7-27A6515134E8}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_193fdfe802ca4d63a0b0cffbf7ed72e1.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_193fdfe802ca4d63a0b0cffbf7ed72e1")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_193fdfe802ca4d63a0b0cffbf7ed72e1")]
[assembly: AssemblyCopyright("Copyright @  2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_193fdfe802ca4d63a0b0cffbf7ed72e1.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_193fdfe802ca4d63a0b0cffbf7ed72e1.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_193fdfe802ca4d63a0b0cffbf7ed72e1.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_193fdfe802ca4d63a0b0cffbf7ed72e1.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_193fdfe802ca4d63a0b0cffbf7ed72e1.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Stores the binary representation of the component"
                          isArray="true"
                          name="BinaryCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="2">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_193fdfe802ca4d63a0b0cffbf7ed72e1.dll]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAEit5FsAAAAAAAAAAOAAIiALATAAABIAAAAIAAAAAAAAHjEA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAMwwAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAJBEAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAA
MQAAAAAAAEgAAAACAAUApCEAAHAOAAABAAAAAAAAABQwAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACipuAwJ7AQAABG8GAAAGAgJ7AQAA
BBdYfQEAAAQqOgIXfQEAAAQCKAoAAAYqKgIDBAUoEgAACio6AhYDjBoAAAEoEwAACipaAywIAhYo
FAAACipyAQAAcHMVAAAKeh4CKBYAAAoqHgIoFwAACip+AigYAAAKAgJzDgAABn0CAAAEAgJzDwAA
Bn0DAAAEKpIEcp4AAHAabxkAAAosFQIFAgMoGgAACg4EcwUAAAZvDAAABipKKwcCA28NAAAGA28I
AAAGLfEqBio6AigbAAAKAgN9BAAABCo6AigbAAAKAgN9BQAABCoeAigbAAAKKq5+BgAABC0ecq4A
AHDQBwAAAigcAAAKbx0AAApzHgAACoAGAAAEfgYAAAQqGn4HAAAEKh4CgAcAAAQqGn4IAAAEKh4C
KB8AAAoqLnMVAAAGgAgAAAQqAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAAk
BQAAI34AAJAFAAAgBgAAI1N0cmluZ3MAAAAAsAsAACABAAAjVVMA0AwAABAAAAAjR1VJRAAAAOAM
AACQAQAAI0Jsb2IAAAAAAAAAAgAAAVcVoAEJAQAAAPoBMwAWAAABAAAAIAAAAAgAAAAIAAAAFgAA
AA8AAAAfAAAAEAAAAAMAAAAFAAAABgAAAAEAAAAEAAAAAQAAAAAA/gIBAAAAAAAGAPgBUgQGAIwC
UgQGAEQBPwQPAMYEAAAGAHEBlAMGANsBlAMGALwBlAMGAHMClAMGABgClAMGADEClAMGAIgBlAMG
AKMBxwIKAEwCkQAKABEEkQAOAAIEkQAKAN0DkQAKAIwFkQAGAE8FTAMGACcBPwQGACIEcgQGANED
fwMSAPcA6AISAFgB6AISAN8AagMGAAwBUgQGACUATAMGAKYDTAMGAOECTAMGAMADTAMGALIATAMG
AGMATAMGABUGlAMAAAAAKwAAAAAAAQABAAEAEABfAwAAEAABAAEAAQAQAPUDAAA5AAIABQABABAA
bgUAAEUAAgAKAAEAEABDBQAASQAEAA4AAQAQAAQFAABJAAUADwAAABAAeQTVBEkABgAQAAABEAAz
BdUEYQAIABQAAQANBmMABgBDBWYABgAEBWoAAQB8BW4AAQB8BW4AEQBTA3IAEQDPAHYAEQBTAHoA
UCAAAAAAxgCqAgYAAQBYIAAAAADGALUCBgABAGAgAAAAAMYA7gV+AAEAfCAAAAAAhhgyBAYAAgCL
IAAAAACGGDIEGwACAJYgAAAAAIYIPAABAAUApSAAAAAAhggmA4QABgC8IAAAAACGAAUGKwAHAMQg
AAAAAIYAVgUrAAcAzCAAAAAAhhgyBAYABwDsIAAAAADGAOEFiQAHABEhAAAAAMYB2gV+AAsAJCEA
AAAAxgHuBX4ADAAmIQAAAACGGDIEkwANADUhAAAAAIYYMgSTAA4ARCEAAAAAgxgyBAYADwBMIQAA
AACTCB4EmQAPAHghAAAAAJMItwCeAA8AfyEAAAAAkwjDAKMADwCHIQAAAACWCGIFqQAQAI4hAAAA
AIYYMgQGABAAliEAAAAAkRg4BK4AEAAAAAEACQYAAAEAFwQAAAIADgUAAAMA6wMAAAEAwQIAAAEA
wQIAAAEANAAAAAIAhwAAAAMAFwQAAAQA6wMAAAEAFwQAAAEACQYAAAEAkgUAAAEAkgUAAAEAwQIJ
ADIEAQARADIEBgAZADIECgApADIEEAAxADIEEAA5ADIEEABBADIEEABJADIEEABRADIEEABZADIE
EABhADIEEABpADIEBgCZADIEBgC5ADIEFQDJADIEBgCJAKoCBgCJALUCBgBxADIEGwBxAEMDJQBx
ADsDAQDZADIEEABxAAUGKwBxAFYFKwCJADIEBgDhADwFLwCJACIFNgCRADIEBgDxAHUAPADxABEG
QwChADIESQDBADIEBgAuAAsAyQAuABMA0gAuABsA8QAuACMA+gAuACsAIwEuADMAIwEuADsAIwEu
AEMA+gAuAEsAKQEuAFMAIwEuAFsAQAFDAGMAiAFpAHMA8QCJAHMA8QDjAGsAiAEBAXsAiAEDAAEA
BwADAAgABQAAAEAAsgAAACoDtgAAACIEugAAANcAvwAAAGYFxAABAAYAAwABAAcABQACABEABwAC
ABIACQABABMACQACABQACwAEgAAAAQAAAOYaNG4AAAAAAAABAAAABAAAAAAAAAAAAAAAUQBKAAAA
AAAMAAAAAAAAAAAAAABaAJwFAAAAAAwAAAAAAAAAAAAAAFoAuQUAAAAABAAAAAAAAAAAAAAAUQBM
AwAAAAAAAAAAAQAAAIMEAAAAAABTQ18xOTNmZGZlODAyY2E0ZDYzYTBiMGNmZmJmN2VkNzJlMQBJ
bnQzMgA8TW9kdWxlPgBJbnB1dElEAHNldF9GaWxlUm93SUQAbXNjb3JsaWIAZGVmYXVsdEluc3Rh
bmNlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAElucHV0TmFtZQBNaWNyb3Nv
ZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBUeXBlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJl
c291cmNlQ3VsdHVyZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBFZGl0b3JCcm93c2FibGVTdGF0
ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRl
AERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0
bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0
cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9u
QXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0
QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21wb25lbnRF
bnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0
aWJpbGl0eUF0dHJpYnV0ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAHZhbHVlAFN5c3RlbS5SdW50
aW1lLlZlcnNpb25pbmcAU3RyaW5nAFN5c3RlbS5Db21wb25lbnRNb2RlbABTQ18xOTNmZGZlODAy
Y2E0ZDYzYTBiMGNmZmJmN2VkNzJlMS5kbGwAc2V0X0ZpbGVSb3dJRF9Jc051bGwAU2V0TnVsbABz
ZXRfSXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlv
bgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBJbnZhbGlkT3BlcmF0aW9u
RXhjZXB0aW9uAFN0cmluZ0NvbXBhcmlzb24AQ3VsdHVyZUluZm8AT3V0cHV0TmFtZU1hcABPdXRw
dXRNYXAASW5wdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1ZmZlcgBnZXRfUmVzb3Vy
Y2VNYW5hZ2VyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUu
Q29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDXzE5M2ZkZmU4MDJjYTRkNjNhMGIw
Y2ZmYmY3ZWQ3MmUxLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2Rl
cwBTQ18xOTNmZGZlODAyY2E0ZDYzYTBiMGNmZmJmN2VkNzJlMS5Qcm9wZXJ0aWVzAFZhcmlhYmxl
cwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbkluZGV4ZXMAU2V0dGluZ3MARXF1YWxzAENv
bm5lY3Rpb25zAE9iamVjdABFbmRPZlJvd3NldABnZXRfRGVmYXVsdABVc2VyQ29tcG9uZW50AFBh
cmVudENvbXBvbmVudABTY3JpcHRDb21wb25lbnQATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlw
dABNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABJbnB1dDBfUHJvY2Vzc0lucHV0AElu
cHV0MF9Qcm9jZXNzSW5wdXRSb3cATmV4dFJvdwByb3cAZ2V0X0Fzc2VtYmx5AAAAAICbSQBzAE4A
dQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0ACAAdABv
ACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8AIAB0AGgA
ZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAAAPSQBuAHAAdQB0ACAAMAAAcVMAQwBf
ADEAOQAzAGYAZABmAGUAOAAwADIAYwBhADQAZAA2ADMAYQAwAGIAMABjAGYAZgBiAGYANwBlAGQA
NwAyAGUAMQAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAh02D0yFW
UUqbz1GVx3Ym2gAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERWQkgAwESPR0IEkEFIAIBCBwDIAAC
BiACAg4RdQUgAR0ICAYAARJ5EX0FIAASgIEHIAIBDhKAgQi3elxWGTTgiQiJhF3NgIDMkQIGCAMG
EhQDBhIYAwYSRQMGElEDBhJVAwYSIAUgAQESDAQgAQECCSAEAQgOEj0SQQUgAQESRQQAABJRBAAA
ElUFAAEBElUEAAASIAMAAAEDKAAIAygAAgQIABJRBAgAElUECAASIAgBAAgAAAAAAB4BAAEAVAIW
V3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU0NfMTkzZmRmZTgwMmNhNGQ2M2Ew
YjBjZmZiZjdlZDcyZTEAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxOAAARwEAGi5ORVRGcmFt
ZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29y
ayA0BAEAAAAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFk
ZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5
VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNl
dAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAA9DAAAAAAAAAAAAAADjEAAAAgAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAxAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABADRu5hoAAAEANG7mGj8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAw
ADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEA
bgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAA
AAAAUwBDAF8AMQA5ADMAZgBkAGYAZQA4ADAAMgBjAGEANABkADYAMwBhADAAYgAwAGMAZgBmAGIA
ZgA3AGUAZAA3ADIAZQAxAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADYAOAA4ADYALgAyADgAMgAxADIAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAA
UwBDAF8AMQA5ADMAZgBkAGYAZQA4ADAAMgBjAGEANABkADYAMwBhADAAYgAwAGMAZgBmAGIAZgA3
AGUAZAA3ADIAZQAxAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQA
AABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADgAAAAqAAEAAQBMAGUAZwBhAGwAVABy
AGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4A
YQBtAGUAAABTAEMAXwAxADkAMwBmAGQAZgBlADgAMAAyAGMAYQA0AGQANgAzAGEAMABiADAAYwBm
AGYAYgBmADcAZQBkADcAMgBlADEALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0A
ZQAAAAAAUwBDAF8AMQA5ADMAZgBkAGYAZQA4ADAAMgBjAGEANABkADYAMwBhADAAYgAwAGMAZgBm
AGIAZgA3AGUAZAA3ADIAZQAxAAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAA
MQAuADAALgA2ADgAOAA2AC4AMgA4ADIAMQAyAAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABW
AGUAcgBzAGkAbwBuAAAAMQAuADAALgA2ADgAOAA2AC4AMgA4ADIAMQAyAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAACAxAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                          name="VSTAProjectName"
                          typeConverter="NOTBROWSABLE">SC_193fdfe802ca4d63a0b0cffbf7ed72e1</property>
                        <property
                          dataType="System.String"
                          description="Specifies the programming language used by the script."
                          name="ScriptLanguage"
                          typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read-only variables."
                          name="ReadOnlyVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read/write variables."
                          name="ReadWriteVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                        <property
                          dataType="System.String"
                          description="List of breakpoints present on the script."
                          isArray="true"
                          name="BreakpointCollection"
                          typeConverter="NOTBROWSABLE">
                          <arrayElements
                            arrayElementCount="0" />
                        </property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataChecksum"
                          typeConverter="NOTBROWSABLE">a2b7bea489908bb5703993c1aa8c3944</property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataShaChecksum"
                          typeConverter="NOTBROWSABLE">0be4c5100b56534077288e3b83d46e5822167b50</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Generate File Row Number.Inputs[Input 0]"
                          hasSideEffects="true"
                          name="Input 0">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Generate File Row Number.Outputs[Output 0]"
                          name="Output 0"
                          synchronousInputId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Generate File Row Number.Inputs[Input 0]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Generate File Row Number.Outputs[Output 0].Columns[FileRowID]"
                              dataType="i4"
                              lineageId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Generate File Row Number.Outputs[Output 0].Columns[FileRowID]"
                              name="FileRowID" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Insert into PreValudation"
                      componentClassID="Microsoft.OLEDBDestination"
                      contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                      description="OLE DB Destination"
                      name="Insert into PreValudation"
                      usesDispositions="true"
                      version="4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[ETL].[PreValudation]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepIdentity">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                          name="FastLoadOptions">TABLOCK,ROWS_PER_BATCH = 100</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                          name="FastLoadMaxInsertCommitSize">2147483647</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Insert into PreValudation.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[Target - TIPWebETL]"
                          connectionManagerRefId="Package.ConnectionManagers[Target - TIPWebETL]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Insert into PreValudation.Inputs[OLE DB Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Insert into PreValudation.Inputs[OLE DB Destination Input].Columns[Column 0]"
                              cachedCodepage="1252"
                              cachedDataType="text"
                              cachedName="Column 0"
                              externalMetadataColumnId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Insert into PreValudation.Inputs[OLE DB Destination Input].ExternalColumns[Col1]"
                              lineageId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Flat File Source.Outputs[Flat File Source Output].Columns[Column 0]" />
                            <inputColumn
                              refId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Insert into PreValudation.Inputs[OLE DB Destination Input].Columns[FileRowID]"
                              cachedDataType="i4"
                              cachedName="FileRowID"
                              externalMetadataColumnId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Insert into PreValudation.Inputs[OLE DB Destination Input].ExternalColumns[ImportFileRowID]"
                              lineageId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Generate File Row Number.Outputs[Output 0].Columns[FileRowID]" />
                            <inputColumn
                              refId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Insert into PreValudation.Inputs[OLE DB Destination Input].Columns[DC.ImportFileName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="200"
                              cachedName="DC.ImportFileName"
                              externalMetadataColumnId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Insert into PreValudation.Inputs[OLE DB Destination Input].ExternalColumns[ImportFileName]"
                              lineageId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Data Conversion.Outputs[Data Conversion Output].Columns[DC.ImportFileName]" />
                            <inputColumn
                              refId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Insert into PreValudation.Inputs[OLE DB Destination Input].Columns[DC.IntergrationName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="DC.IntergrationName"
                              externalMetadataColumnId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Insert into PreValudation.Inputs[OLE DB Destination Input].ExternalColumns[IntegrationName]"
                              lineageId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Data Conversion.Outputs[Data Conversion Output].Columns[DC.IntergrationName]" />
                            <inputColumn
                              refId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Insert into PreValudation.Inputs[OLE DB Destination Input].Columns[DC.CustomCode]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="3"
                              cachedName="DC.CustomCode"
                              externalMetadataColumnId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Insert into PreValudation.Inputs[OLE DB Destination Input].ExternalColumns[CustomerCode]"
                              lineageId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Data Conversion.Outputs[Data Conversion Output].Columns[DC.CustomCode]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Insert into PreValudation.Inputs[OLE DB Destination Input].ExternalColumns[Col1]"
                              codePage="1252"
                              dataType="text"
                              name="Col1" />
                            <externalMetadataColumn
                              refId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Insert into PreValudation.Inputs[OLE DB Destination Input].ExternalColumns[Col2]"
                              codePage="1252"
                              dataType="text"
                              name="Col2" />
                            <externalMetadataColumn
                              refId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Insert into PreValudation.Inputs[OLE DB Destination Input].ExternalColumns[PreRowID]"
                              dataType="i4"
                              name="PreRowID" />
                            <externalMetadataColumn
                              refId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Insert into PreValudation.Inputs[OLE DB Destination Input].ExternalColumns[ImportFileRowID]"
                              dataType="i4"
                              name="ImportFileRowID" />
                            <externalMetadataColumn
                              refId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Insert into PreValudation.Inputs[OLE DB Destination Input].ExternalColumns[ImportFileName]"
                              codePage="1252"
                              dataType="str"
                              length="200"
                              name="ImportFileName" />
                            <externalMetadataColumn
                              refId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Insert into PreValudation.Inputs[OLE DB Destination Input].ExternalColumns[CreateDate]"
                              dataType="dbTimeStamp"
                              name="CreateDate" />
                            <externalMetadataColumn
                              refId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Insert into PreValudation.Inputs[OLE DB Destination Input].ExternalColumns[CustomerCode]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="CustomerCode" />
                            <externalMetadataColumn
                              refId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Insert into PreValudation.Inputs[OLE DB Destination Input].ExternalColumns[IntegrationName]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="IntegrationName" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Insert into PreValudation.Outputs[OLE DB Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Destination Error Output"
                          synchronousInputId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Insert into PreValudation.Inputs[OLE DB Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Insert into PreValudation.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Insert into PreValudation.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Insert into PreValudation.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Insert into PreValudation.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File.Paths[Data Conversion Output]"
                      endId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Insert into PreValudation.Inputs[OLE DB Destination Input]"
                      name="Data Conversion Output"
                      startId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Data Conversion.Outputs[Data Conversion Output]" />
                    <path
                      refId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File.Paths[Derived Column Output]"
                      endId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Data Conversion.Inputs[Data Conversion Input]"
                      name="Derived Column Output"
                      startId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Add Varables to Columns.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File.Paths[Flat File Source Output]"
                      endId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Generate File Row Number.Inputs[Input 0]"
                      name="Flat File Source Output"
                      startId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Flat File Source.Outputs[Flat File Source Output]" />
                    <path
                      refId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File.Paths[Output 0]"
                      endId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Add Varables to Columns.Inputs[Derived Column Input]"
                      name="Output 0"
                      startId="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Generate File Row Number.Outputs[Output 0]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Staging File Import\Stage1a - File and File Type Checks"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{9d8c405f-6746-4c50-8c5b-94f403ada375}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Stage1a - File and File Type Checks">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Staging File Import\Stage1a - File and File Type Checks\Change File Type"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:Description="Script Task"
              DTS:DTSID="{be9e860d-7b96-4aeb-b49b-d912f00b4724}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Change File Type"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_5dd6e46167cf4a6ca7e2f8af24a0c759"
                  VSTAMajorVersion="3"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadWriteVariables="User::FileName,User::ImportFileType">
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="ST_5dd6e46167cf4a6ca7e2f8af24a0c759.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{8110d9ee-4f56-4e8b-a214-09eab4200f8d}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_5dd6e46167cf4a6ca7e2f8af24a0c759</RootNamespace>
    <AssemblyName>ST_5dd6e46167cf4a6ca7e2f8af24a0c759</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_5dd6e46167cf4a6ca7e2f8af24a0c759
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            string NewFileName = Dts.Variables["User::FileName"].Value.ToString();
            string OldImportFileType = "." + Dts.Variables["User::ImportFileType"].Value.ToString();

            NewFileName = NewFileName.Replace(OldImportFileType, ".CSV");

            Dts.Variables["User::FileName"].Value = NewFileName;
            Dts.Variables["User::ImportFileType"].Value = "CSV";

            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_5dd6e46167cf4a6ca7e2f8af24a0c759</msb:CodeName>
		<msb:DisplayName>ST_5dd6e46167cf4a6ca7e2f8af24a0c759</msb:DisplayName>
		<msb:ProjectId>{1DA31103-78F5-4D31-9E60-AEA43A683243}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_5dd6e46167cf4a6ca7e2f8af24a0c759.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_5dd6e46167cf4a6ca7e2f8af24a0c759.Properties.Settings.get_Default():ST_5dd6e46167cf4a6ca7e2f8af24a0c759.Properties.Sett" +
    "ings")]

namespace ST_5dd6e46167cf4a6ca7e2f8af24a0c759.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_5dd6e46167cf4a6ca7e2f8af24a0c759")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_5dd6e46167cf4a6ca7e2f8af24a0c759")]
[assembly: AssemblyCopyright("Copyright @  2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_5dd6e46167cf4a6ca7e2f8af24a0c759.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_5dd6e46167cf4a6ca7e2f8af24a0c759.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_5dd6e46167cf4a6ca7e2f8af24a0c759.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_5dd6e46167cf4a6ca7e2f8af24a0c759.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_5dd6e46167cf4a6ca7e2f8af24a0c759.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_5dd6e46167cf4a6ca7e2f8af24a0c759.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAGeS5FsAAAAAAAAAAOAAIiALATAAABAAAAAIAAAAAAAAdi4A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAACQuAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAfA4AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABY
LgAAAAAAAEgAAAACAAUAYCEAAAwMAAABAAAAAAAAAGwtAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwAwCeAAAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAAoKch8AAHACKBAAAApvEQAACnIjAABwbxIAAApvEwAACm8UAAAKKBUAAAoLBgdyTQAA
cG8WAAAKCgIoEAAACm8RAAAKcgEAAHBvEgAACgZvFwAACgIoEAAACm8RAAAKciMAAHBvEgAACnJX
AABwbxcAAAoCKBAAAAoWbxgAAAoqHgIoGQAACioeAigaAAAKKq5+AQAABC0ecl8AAHDQAwAAAigb
AAAKbxwAAApzHQAACoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKh4CKB4AAAoqLnMI
AAAGgAMAAAQqQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAA1AMAACN+AABABAAA
dAUAACNTdHJpbmdzAAAAALQJAADUAAAAI1VTAIgKAAAQAAAAI0dVSUQAAACYCgAAdAEAACNCbG9i
AAAAAAAAAAIAAAFXHaIBCQMAAAD6ATMAFgAAAQAAAB4AAAAFAAAABgAAAAkAAAABAAAAHgAAAAIA
AAAQAAAAAQAAAAIAAAADAAAABAAAAAEAAAAEAAAAAQAAAAEAAAAAAIcDAQAAAAAABgAtAlcEBgC8
AlcEBgB5AUQEDwDLBAAABgCmAQUEBgAQAgUEBgDxAQUEBgCjAgUEBgBNAgUEBgBmAgUEBgC9AQUE
BgDYAfQCCgCBAjYDCgD4ADYDBgC/A7gDBgBcAUQEBgBFBbgDBgAnBHcEBgAXBPADDgAsAXEDDgCN
AXEDDgAUAdsDBgBBAVcECgBfAzYDEgANBaMAEgB2AKMABgAQA7gDBgDDALgDBgB/ALgDBgBrBQUE
AAAAACUAAAAAAAEAAQABABAA0AMBADkAAQABAAAAEAB+BNoERQABAAMAAAEQABcF2gRZAAMABwAD
AQAAMAUAAD0ABAAKABEAxAN4ABEA6AB8ABEAZgCAAAYGTQCEAFaAIAWHAFaAyACHAFAgAAAAAIYA
1gMGAAEA+iAAAAAAhhg3BAYAAQACIQAAAACDGDcEBgABAAohAAAAAJMIIwSLAAEANiEAAAAAkwjQ
AJAAAQA9IQAAAACTCNwAlQABAEUhAAAAAJYITAWbAAIATCEAAAAAhhg3BAYAAgBUIQAAAACRGD0E
oAACAAAAAQDuAgkANwQBABEANwQGABkANwQKACkANwQQADEANwQQADkANwQQAEEANwQQAEkANwQQ
AFEANwQQAFkANwQQAGEANwQQAGkANwQGAIEANwQGAKkANwQVALkANwQGAHEAKAUgAMEACQUlAMkA
rwMqANEA2gIwAIkADgM0ANkAPgU4ANkAXgA+ANEA5AJEAMEAWAUBAHEANwQGAIkANwQGAOEAkQBJ
AOEAZwVQAJEANwRVALEANwQGAAgAFABuAAgAGABzACkAcwDbAC4ACwCzAC4AEwC8AC4AGwDbAC4A
IwDkAC4AKwANAS4AMwANAS4AOwANAS4AQwDkAC4ASwATAS4AUwANAS4AWwAqAUMAYwBzAEkAcwDb
AGEAewBzAGMAawBzABsAAwABAAQAAwAAACcEpAAAAPAAqQAAAFAFrgACAAQAAwACAAUABQABAAYA
BQACAAcABwAEgAAAAQAAAOYaw2AAAAAAAAABAAAABAAAAAAAAAAAAAAAXABVAAAAAAAMAAAAAAAA
AAAAAABlABcDAAAAAAQAAAAAAAAAAAAAAFwAuAMAAAAADAAAAAAAAAAAAAAAZQAuAAAAAAAAAAAA
AQAAAIgEAAAFAAIAAAAAU1RfNWRkNmU0NjE2N2NmNGE2Y2E3ZTJmOGFmMjRhMGM3NTkAPE1vZHVs
ZT4ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AbXNjb3JsaWIAUmVwbGFj
ZQBkZWZhdWx0SW5zdGFuY2UAVmFyaWFibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21I
YW5kbGUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBUeXBlAEZhaWx1cmUAZ2V0X0N1
bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVs
QmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxl
ckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2Fi
bGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1
dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFz
c2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRl
AENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRl
AEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJp
YnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1
dGUAZ2V0X1ZhbHVlAHNldF9WYWx1ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRv
U3RyaW5nAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVy
LkR0cy5UYXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRN
b2RlbABTVF81ZGQ2ZTQ2MTY3Y2Y0YTZjYTdlMmY4YWYyNGEwYzc1OS5kbGwAZ2V0X0l0ZW0AU3lz
dGVtAEVudW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0
ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBDdWx0dXJlSW5mbwBnZXRfUmVzb3Vy
Y2VNYW5hZ2VyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUu
Q29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUXzVkZDZlNDYxNjdjZjRhNmNhN2Uy
ZjhhZjI0YTBjNzU5LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2Rl
cwBTVF81ZGQ2ZTQ2MTY3Y2Y0YTZjYTdlMmY4YWYyNGEwYzc1OS5Qcm9wZXJ0aWVzAGdldF9WYXJp
YWJsZXMAU2V0dGluZ3MAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAQ29uY2F0AE9iamVj
dABnZXRfRGVmYXVsdABzZXRfVGFza1Jlc3VsdABnZXRfQXNzZW1ibHkAAB1VAHMAZQByADoAOgBG
AGkAbABlAE4AYQBtAGUAAAMuAAApVQBzAGUAcgA6ADoASQBtAHAAbwByAHQARgBpAGwAZQBUAHkA
cABlAAAJLgBDAFMAVgAAB0MAUwBWAABxUwBUAF8ANQBkAGQANgBlADQANgAxADYANwBjAGYANABh
ADYAYwBhADcAZQAyAGYAOABhAGYAMgA0AGEAMABjADcANQA5AC4AUAByAG8AcABlAHIAdABpAGUA
cwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAAAC8DSyZE7j+T4pq/xW+kq5rAAQgAQEIAyAAAQUgAQER
EQQgAQEOBSABARFRBAcCDg4EIAASYQQgABJlBSABEmkcAyAAHAMgAA4FAAIODg4FIAIODg4EIAEB
HAYAARJxEXUEIAASeQYgAgEOEnkIt3pcVhk04IkIiYRdzYCAzJEEAAAAAAQBAAAAAwYSSQMGEk0D
BhIQAgYIAwYRFAQAABJJBAAAEk0FAAEBEk0EAAASEAMAAAEECAASSQQIABJNBAgAEhAIAQAIAAAA
AAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUXzVkZDZlNDYx
NjdjZjRhNmNhN2UyZjhhZjI0YTBjNzU5AAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTgAAEcB
ABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5F
VCBGcmFtZXdvcmsgNAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNl
UmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1Ymxp
Y0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3Vy
Y2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAEwuAAAAAAAAAAAAAGYuAAAAIAAAAAAAAAAAAAAA
AAAAAAAAAAAAAABYLgAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAg
ABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQDDYOYaAAABAMNg5ho/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4A
AAAAAFMAVABfADUAZABkADYAZQA0ADYAMQA2ADcAYwBmADQAYQA2AGMAYQA3AGUAMgBmADgAYQBm
ADIANABhADAAYwA3ADUAOQAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAA
LgA2ADgAOAA2AC4AMgA0ADcANwAxAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAA
AFMAVABfADUAZABkADYAZQA0ADYAMQA2ADcAYwBmADQAYQA2AGMAYQA3AGUAMgBmADgAYQBmADIA
NABhADAAYwA3ADUAOQAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0
AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA4AAAAKgABAAEATABlAGcAYQBsAFQA
cgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBu
AGEAbQBlAAAAUwBUAF8ANQBkAGQANgBlADQANgAxADYANwBjAGYANABhADYAYwBhADcAZQAyAGYA
OABhAGYAMgA0AGEAMABjADcANQA5AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBt
AGUAAAAAAFMAVABfADUAZABkADYAZQA0ADYAMQA2ADcAYwBmADQAYQA2AGMAYQA3AGUAMgBmADgA
YQBmADIANABhADAAYwA3ADUAOQAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4ANgA4ADgANgAuADIANAA3ADcAMQAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAA
VgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANgA4ADgANgAuADIANAA3ADcAMQAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAAB4PgAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Staging File Import\Stage1a - File and File Type Checks\Check file size"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:Description="Script Task"
              DTS:DTSID="{e8811e27-7913-496a-a90b-f1896faa6097}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Check file size"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_d0f88997e175452b8de20e6a79b2eba1"
                  VSTAMajorVersion="3"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="User::Debug,User::FileName,User::FilePathFull,User::RootPath"
                  ReadWriteVariables="User::FileSize">
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_d0f88997e175452b8de20e6a79b2eba1
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            String FileName = Dts.Variables["User::FileName"].Value.ToString();
            String RootPath = Dts.Variables["User::RootPath"].Value.ToString();
            String FilePath = Dts.Variables["User::FilePathFull"].Value.ToString();
            Boolean Debug = Convert.ToBoolean(Dts.Variables["User::Debug"].Value);

            long length = new System.IO.FileInfo(FilePath + FileName).Length;

            if (Debug == true)
            {
                MessageBox.Show("FileSize: " + Convert.ToDecimal(length).ToString());
            }

            Dts.Variables["User::FileSize"].Value = Convert.ToDecimal(length);

            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="ST_d0f88997e175452b8de20e6a79b2eba1.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{8cdcd12c-92a5-4618-8701-b6bcca1596ed}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_d0f88997e175452b8de20e6a79b2eba1</RootNamespace>
    <AssemblyName>ST_d0f88997e175452b8de20e6a79b2eba1</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_d0f88997e175452b8de20e6a79b2eba1</msb:CodeName>
		<msb:DisplayName>ST_d0f88997e175452b8de20e6a79b2eba1</msb:DisplayName>
		<msb:ProjectId>{CB1EA96C-CF6F-4C7E-82A2-6E873C87A243}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_d0f88997e175452b8de20e6a79b2eba1.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d0f88997e175452b8de20e6a79b2eba1.Properties.Settings.get_Default():ST_d0f88997e175452b8de20e6a79b2eba1.Properties.Sett" +
    "ings")]

namespace ST_d0f88997e175452b8de20e6a79b2eba1.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_d0f88997e175452b8de20e6a79b2eba1")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_d0f88997e175452b8de20e6a79b2eba1")]
[assembly: AssemblyCopyright("Copyright @  2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d0f88997e175452b8de20e6a79b2eba1.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d0f88997e175452b8de20e6a79b2eba1.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d0f88997e175452b8de20e6a79b2eba1.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_d0f88997e175452b8de20e6a79b2eba1.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_d0f88997e175452b8de20e6a79b2eba1.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_d0f88997e175452b8de20e6a79b2eba1.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDADqW5FsAAAAAAAAAAOAAIiALATAAABAAAAAIAAAAAAAA2i8A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAIgvAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA4A8AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAC8
LwAAAAAAAEgAAAACAAUAqCEAACgNAAABAAAAAAAAANAuAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwAwDjAAAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAAoKAigQAAAKbxEAAApyHwAAcG8SAAAKbxMAAApvFAAACiYCKBAAAApvEQAACnI9AABw
bxIAAApvEwAACm8UAAAKCwIoEAAACm8RAAAKcmMAAHBvEgAACm8TAAAKKBUAAAoHBigWAAAKcxcA
AAooGAAACgwsHnJ7AABwCCgZAAAKDRIDKBoAAAooFgAACigbAAAKJgIoEAAACm8RAAAKcpEAAHBv
EgAACggoGQAACowPAAABbxwAAAoCKBAAAAoWbx0AAAoqHgIoHgAACioeAigfAAAKKq5+AQAABC0e
cq8AAHDQAwAAAiggAAAKbyEAAApzIgAACoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAE
Kh4CKCMAAAoqLnMIAAAGgAMAAAQqAAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBs
AAAAJAQAACN+AACQBAAA2AUAACNTdHJpbmdzAAAAAGgKAAAkAQAAI1VTAIwLAAAQAAAAI0dVSUQA
AACcCwAAjAEAACNCbG9iAAAAAAAAAAIAAAFXHaIBCQMAAAD6ATMAFgAAAQAAACMAAAAFAAAABgAA
AAkAAAABAAAAIwAAAAIAAAAQAAAAAQAAAAIAAAADAAAABAAAAAEAAAAFAAAAAQAAAAEAAAAAAJ4D
AQAAAAAABgAvAoEEBgC+AoEEBgB7AW4EDwD1BAAABgCoASYEBgASAiYEBgDzASYEBgClAiYEBgBP
AiYEBgBoAiYEBgC/ASYEBgDaAfYCCgCDAkMDCgD6AEMDBgBuA88DBgDWA88DBgBeAW4EBgCEBc8D
BgBRBKEEBgBBBBEEDgAuAYgDDgCPAYgDDgAWAfwDBgBDAYEECgB2A0MDEgA3BaUAEgB4AKUABgCz
Bc8DBgASA88DBgA4BC4AFgDABUoFFgCXBUoFBgDFAM8DBgCBAM8DBgDPBSYEAAAAACUAAAAAAAEA
AQABABAA8QMBADkAAQABAAAAEACoBAQFSQABAAMAAAEQAEEFBAVdAAMABwADAQAAbwUAAEEABAAK
ABEA2wOPABEA6gCTABEAaACXAAYGVwCbAFaAXwWeAFaAygCeAFAgAAAAAIYA9wMGAAEAPyEAAAAA
hhhhBAYAAQBHIQAAAACDGGEEBgABAE8hAAAAAJMITQSiAAEAeyEAAAAAkwjSAKcAAQCCIQAAAACT
CN4ArAABAIohAAAAAJYIiwWyAAIAkSEAAAAAhhhhBAYAAgCZIQAAAACRGGcEtwACAAAAAQDwAgkA
YQQBABEAYQQGABkAYQQKACkAYQQQADEAYQQQADkAYQQQAEEAYQQQAEkAYQQQAFEAYQQQAFkAYQQQ
AGEAYQQQAGkAYQQGAIkAYQQGALEAYQQVAMEAYQQGAHEAZwUjAMkAMwUoANEAxgMtANkA3AIzAJEA
EAM3AOEA5wM7AOkAfQVAAPEAYQQQAPEAGQNGAOEAbANKAHkAEAM3APkAuwVQANkA5gJXAMkApAUB
AHEAYQQGAJEAYQQGAAkBkwBcAAkBywVlAJkAYQRrALkAYQQGAAgAFACFAAgAGACKACkAcwDyAC4A
CwDKAC4AEwDTAC4AGwDyAC4AIwD7AC4AKwAkAS4AMwAkAS4AOwAkAS4AQwD7AC4ASwAqAS4AUwAk
AS4AWwBBAUMAYwCKAEkAcwDyAGEAewCKAGMAawCKABsAAwABAAQAAwAAAFEEuwAAAPIAwAAAAI8F
xQACAAQAAwACAAUABQABAAYABQACAAcABwAEgAAAAQAAAOYarWIAAAAAAAABAAAABAAAAAAAAAAA
AAAAcwBfAAAAAAAMAAAAAAAAAAAAAAB8ACQDAAAAAAQAAAAAAAAAAAAAAHMAzwMAAAAADAAAAAAA
AAAAAAAAfAA4AAAAAAAEAAAAAAAAAAAAAABzAEoFAAAAAAAAAAABAAAAsgQAAAUAAgAAAABTVF9k
MGY4ODk5N2UxNzU0NTJiOGRlMjBlNmE3OWIyZWJhMQA8TW9kdWxlPgBTeXN0ZW0uSU8ATWljcm9z
b2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AbXNjb3JsaWIAZGVmYXVsdEluc3RhbmNl
AFZhcmlhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAE1pY3Jvc29mdC5T
cWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJl
AHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25T
ZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1
dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRv
ckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVt
YXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRp
b25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4
YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdo
dEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21w
YW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAGdldF9WYWx1ZQBzZXRf
VmFsdWUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBnZXRfTGVuZ3Ro
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5U
YXNrcy5TY3JpcHRUYXNrAFRvRGVjaW1hbABTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9u
ZW50TW9kZWwAU1RfZDBmODg5OTdlMTc1NDUyYjhkZTIwZTZhNzliMmViYTEuZGxsAGdldF9JdGVt
AFN5c3RlbQBFbnVtAHJlc291cmNlTWFuAFRvQm9vbGVhbgBTY3JpcHRNYWluAFN5c3RlbS5Db25m
aWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEZpbGVJbmZv
AEN1bHR1cmVJbmZvAGdldF9SZXNvdXJjZU1hbmFnZXIALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFn
bm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMA
U1RfZDBmODg5OTdlMTc1NDUyYjhkZTIwZTZhNzliMmViYTEuUHJvcGVydGllcy5SZXNvdXJjZXMu
cmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNUX2QwZjg4OTk3ZTE3NTQ1MmI4ZGUyMGU2YTc5YjJl
YmExLlByb3BlcnRpZXMAZ2V0X1ZhcmlhYmxlcwBTZXR0aW5ncwBTeXN0ZW0uV2luZG93cy5Gb3Jt
cwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0cwBDb25jYXQAT2JqZWN0AGdldF9EZWZhdWx0
AERpYWxvZ1Jlc3VsdABzZXRfVGFza1Jlc3VsdABDb252ZXJ0AFNob3cATWVzc2FnZUJveABnZXRf
QXNzZW1ibHkAAB1VAHMAZQByADoAOgBGAGkAbABlAE4AYQBtAGUAAB1VAHMAZQByADoAOgBSAG8A
bwB0AFAAYQB0AGgAACVVAHMAZQByADoAOgBGAGkAbABlAFAAYQB0AGgARgB1AGwAbAAAF1UAcwBl
AHIAOgA6AEQAZQBiAHUAZwAAFUYAaQBsAGUAUwBpAHoAZQA6ACAAAB1VAHMAZQByADoAOgBGAGkA
bABlAFMAaQB6AGUAAHFTAFQAXwBkADAAZgA4ADgAOQA5ADcAZQAxADcANQA0ADUAMgBiADgAZABl
ADIAMABlADYAYQA3ADkAYgAyAGUAYgBhADEALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMA
bwB1AHIAYwBlAHMAAAAAAHh8y94Uex9Pky8ZPNUS7JoABCABAQgDIAABBSABARERBCABAQ4FIAEB
EVUHBwQODgoRPQQgABJlBCAAEmkFIAESbRwDIAAcAyAADgQAAQIcBQACDg4OAyAACgUAARE9CgYA
ARGAgQ4EIAEBHAgAARKAhRGAiQUgABKAjQcgAgEOEoCNCLd6XFYZNOCJCImEXc2AgMyRBAAAAAAE
AQAAAAMGEk0DBhJRAwYSEAIGCAMGERQEAAASTQQAABJRBQABARJRBAAAEhADAAABBAgAEk0ECAAS
UQQIABIQCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgB
ACNTVF9kMGY4ODk5N2UxNzU0NTJiOGRlMjBlNmE3OWIyZWJhMQAABQEAAAAAFgEAEUNvcHlyaWdo
dCBAICAyMDE4AABHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rp
c3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNv
dXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9
bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2Vz
LlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAsC8AAAAAAAAAAAAAyi8A
AAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAALwvAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3Jl
ZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQCtYuYaAAABAK1i5ho/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4A
AAAAAFMAVABfAGQAMABmADgAOAA5ADkANwBlADEANwA1ADQANQAyAGIAOABkAGUAMgAwAGUANgBh
ADcAOQBiADIAZQBiAGEAMQAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAA
LgA2ADgAOAA2AC4AMgA1ADIANgAxAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAA
AFMAVABfAGQAMABmADgAOAA5ADkANwBlADEANwA1ADQANQAyAGIAOABkAGUAMgAwAGUANgBhADcA
OQBiADIAZQBiAGEAMQAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0
AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA4AAAAKgABAAEATABlAGcAYQBsAFQA
cgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBu
AGEAbQBlAAAAUwBUAF8AZAAwAGYAOAA4ADkAOQA3AGUAMQA3ADUANAA1ADIAYgA4AGQAZQAyADAA
ZQA2AGEANwA5AGIAMgBlAGIAYQAxAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBt
AGUAAAAAAFMAVABfAGQAMABmADgAOAA5ADkANwBlADEANwA1ADQANQAyAGIAOABkAGUAMgAwAGUA
NgBhADcAOQBiADIAZQBiAGEAMQAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4ANgA4ADgANgAuADIANQAyADYAMQAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAA
VgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANgA4ADgANgAuADIANQAyADYAMQAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAADcPwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Staging File Import\Stage1a - File and File Type Checks\Check if Excel File"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:Description="Script Task"
              DTS:DTSID="{292e076c-8a07-4541-9e62-72f68582ed85}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Check if Excel File"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_efb0c886cfbc4554afd1859aa3f70ed5"
                  VSTAMajorVersion="3"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="User::Debug,User::ImportFileType"
                  ReadWriteVariables="User::ApprovedFileType,User::FileTypeCheck">
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_efb0c886cfbc4554afd1859aa3f70ed5
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            string FileType = Dts.Variables["User::ImportFileType"].Value.ToString();
            Dts.Variables["User::FileTypeCheck"].Value = false;
            Dts.Variables["User::ApprovedFileType"].Value = false;
            Boolean Debug = Convert.ToBoolean(Dts.Variables["User::Debug"].Value);

            if (FileType == "xls" || FileType == "xlsx")
            {
                Dts.Variables["User::FileTypeCheck"].Value = true;
            }

            if (FileType == "xls" || FileType == "xlsx" || FileType == "CSV")
            {
                Dts.Variables["User::ApprovedFileType"].Value = true;
            }

            if (Debug == true)
            {
                MessageBox.Show("FileTypeCheck: " + Dts.Variables["User::FileTypeCheck"].Value.ToString());
                MessageBox.Show("ApprovedFileType: " + Dts.Variables["User::ApprovedFileType"].Value.ToString());
            }

            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="ST_efb0c886cfbc4554afd1859aa3f70ed5.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{7918f69f-4b30-4e18-b08c-dad776f95b92}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_efb0c886cfbc4554afd1859aa3f70ed5</RootNamespace>
    <AssemblyName>ST_efb0c886cfbc4554afd1859aa3f70ed5</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_efb0c886cfbc4554afd1859aa3f70ed5</msb:CodeName>
		<msb:DisplayName>ST_efb0c886cfbc4554afd1859aa3f70ed5</msb:DisplayName>
		<msb:ProjectId>{A43C503A-5E24-4BAB-82FD-D441AA806E59}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_efb0c886cfbc4554afd1859aa3f70ed5.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_efb0c886cfbc4554afd1859aa3f70ed5.Properties.Settings.get_Default():ST_efb0c886cfbc4554afd1859aa3f70ed5.Properties.Sett" +
    "ings")]

namespace ST_efb0c886cfbc4554afd1859aa3f70ed5.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_efb0c886cfbc4554afd1859aa3f70ed5")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_efb0c886cfbc4554afd1859aa3f70ed5")]
[assembly: AssemblyCopyright("Copyright @  2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_efb0c886cfbc4554afd1859aa3f70ed5.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_efb0c886cfbc4554afd1859aa3f70ed5.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_efb0c886cfbc4554afd1859aa3f70ed5.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_efb0c886cfbc4554afd1859aa3f70ed5.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_efb0c886cfbc4554afd1859aa3f70ed5.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_efb0c886cfbc4554afd1859aa3f70ed5.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAL+R5FsAAAAAAAAAAOAAIiALATAAABIAAAAIAAAAAAAAajAA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAABgwAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAcBAAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABM
MAAAAAAAAEgAAAACAAUAMCIAADANAAABAAAAAAAAAGAvAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwAwBtAQAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAAoKAigQAAAKbxEAAApyKwAAcG8SAAAKFowbAAABbxUAAAoCKBAAAApvEQAACnJTAABw
bxIAAAoWjBsAAAFvFQAACgIoEAAACm8RAAAKcoEAAHBvEgAACm8TAAAKKBYAAAoGcpkAAHAoFwAA
Ci0NBnKhAABwKBcAAAosIAIoEAAACm8RAAAKcisAAHBvEgAACheMGwAAAW8VAAAKBnKZAABwKBcA
AAotGgZyoQAAcCgXAAAKLQ0GcqsAAHAoFwAACiwgAigQAAAKbxEAAApyUwAAcG8SAAAKF4wbAAAB
bxUAAAosXnKzAABwAigQAAAKbxEAAApyKwAAcG8SAAAKbxMAAApvFAAACigYAAAKKBkAAAomctMA
AHACKBAAAApvEQAACnJTAABwbxIAAApvEwAACm8UAAAKKBgAAAooGQAACiYCKBAAAAoWbxoAAAoq
HgIoGwAACioeAigcAAAKKq5+AQAABC0ecvkAAHDQAwAAAigdAAAKbx4AAApzHwAACoABAAAEfgEA
AAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKh4CKCAAAAoqLnMIAAAGgAMAAAQqAEJTSkIBAAEAAAAA
AAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAAwEAAAjfgAAeAQAALwFAAAjU3RyaW5ncwAAAAA0CgAA
bAEAACNVUwCgCwAAEAAAACNHVUlEAAAAsAsAAIABAAAjQmxvYgAAAAAAAAACAAABVx2iAQkDAAAA
+gEzABYAAAEAAAAiAAAABQAAAAYAAAAJAAAAAQAAACAAAAACAAAAEAAAAAEAAAACAAAAAwAAAAQA
AAABAAAABQAAAAEAAAABAAAAAAB/AwEAAAAAAAYAJQJZBAYAtAJZBAYAcQFGBA8AzQQAAAYAngEH
BAYACAIHBAYA6QEHBAYAmwIHBAYARQIHBAYAXgIHBAYAtQEHBAYA0AHsAgoAeQIuAwoA8AAuAwYA
twOwAwYAVAFGBAYAXAWwAwYAKQR5BAYAGQTyAw4AJAFpAw4AhQFpAw4ADAHdAwYAOQFZBAoAVwMu
AxIADwWbABIAbgCbAAYAygOwAwYAiwWwAwYACAOwAxYAmAUiBRYAbwUiBQYAuwCwAwYAdwCwAwYA
pwUHBAAAAAAlAAAAAAABAAEAAQAQANIDAQA5AAEAAQAAABAAgATcBEUAAQADAAABEAAZBdwEWQAD
AAcAAwEAAEcFAAA9AAQACgARALwDhgARAOAAigARAF4AjgAGBk0AkgBWgDcFlQBWgMAAlQBQIAAA
AACGANgDBgABAMkhAAAAAIYYOQQGAAEA0SEAAAAAgxg5BAYAAQDZIQAAAACTCCUEmQABAAUiAAAA
AJMIyACeAAEADCIAAAAAkwjUAKMAAQAUIgAAAACWCGMFqQACABsiAAAAAIYYOQQGAAIAIyIAAAAA
kRg/BK4AAgAAAAEA5gIJADkEAQARADkEBgAZADkECgApADkEEAAxADkEEAA5ADkEEABBADkEEABJ
ADkEEABRADkEEABZADkEEABhADkEEABpADkEBgCBADkEBgCpADkEFQC5ADkEBgBxAD8FHwDBAAsF
JADJAKcDKQDRANICLwCJAAYDMwDRANwCNwDhAMgDPADpALAFQQDpAFUFRwDxAJMFTQDBAHwFAQBx
ADkEBgCJADkEBgABAYkAUwABAaMFXACRADkEYgCxADkEBgAIABQAfAAIABgAgQApAHMA6QAuAAsA
wQAuABMAygAuABsA6QAuACMA8gAuACsAGwEuADMAGwEuADsAGwEuAEMA8gAuAEsAIQEuAFMAGwEu
AFsAOAFDAGMAgQBJAHMA6QBhAHsAgQBjAGsAgQAbAAMAAQAEAAMAAAApBLIAAADoALcAAABnBbwA
AgAEAAMAAgAFAAUAAQAGAAUAAgAHAAcABIAAAAEAAADmGm9gAAAAAAAAAQAAAAQAAAAAAAAAAAAA
AGoAVQAAAAAADAAAAAAAAAAAAAAAcwAPAwAAAAAEAAAAAAAAAAAAAABqALADAAAAAAwAAAAAAAAA
AAAAAHMALgAAAAAABAAAAAAAAAAAAAAAagAiBQAAAAAAAAAAAQAAAIoEAAAFAAIAAAAAU1RfZWZi
MGM4ODZjZmJjNDU1NGFmZDE4NTlhYTNmNzBlZDUAPE1vZHVsZT4ATWljcm9zb2Z0LlNxbFNlcnZl
ci5NYW5hZ2VkRFRTAHZhbHVlX18AbXNjb3JsaWIAZGVmYXVsdEluc3RhbmNlAFZhcmlhYmxlAFJ1
bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRz
LlJ1bnRpbWUAVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3Vs
dHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UA
RWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJO
b25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0
dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRl
AFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUA
QXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmli
dXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBT
U0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRl
AFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAGdldF9WYWx1ZQBzZXRfVmFsdWUAdmFsdWUA
U3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBNaWNyb3NvZnQuU3FsU2VydmVyLlNj
cmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBTY3JpcHRP
YmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfZWZiMGM4ODZjZmJjNDU1NGFmZDE4
NTlhYTNmNzBlZDUuZGxsAGdldF9JdGVtAFN5c3RlbQBFbnVtAHJlc291cmNlTWFuAFRvQm9vbGVh
bgBTY3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5
c3RlbS5SZWZsZWN0aW9uAEN1bHR1cmVJbmZvAGdldF9SZXNvdXJjZU1hbmFnZXIALmN0b3IALmNj
dG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5
c3RlbS5SZXNvdXJjZXMAU1RfZWZiMGM4ODZjZmJjNDU1NGFmZDE4NTlhYTNmNzBlZDUuUHJvcGVy
dGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNUX2VmYjBjODg2Y2ZiYzQ1
NTRhZmQxODU5YWEzZjcwZWQ1LlByb3BlcnRpZXMAZ2V0X1ZhcmlhYmxlcwBTZXR0aW5ncwBTeXN0
ZW0uV2luZG93cy5Gb3JtcwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0cwBDb25jYXQAT2Jq
ZWN0AGdldF9EZWZhdWx0AERpYWxvZ1Jlc3VsdABzZXRfVGFza1Jlc3VsdABDb252ZXJ0AFNob3cA
TWVzc2FnZUJveABnZXRfQXNzZW1ibHkAb3BfRXF1YWxpdHkAAClVAHMAZQByADoAOgBJAG0AcABv
AHIAdABGAGkAbABlAFQAeQBwAGUAACdVAHMAZQByADoAOgBGAGkAbABlAFQAeQBwAGUAQwBoAGUA
YwBrAAAtVQBzAGUAcgA6ADoAQQBwAHAAcgBvAHYAZQBkAEYAaQBsAGUAVAB5AHAAZQAAF1UAcwBl
AHIAOgA6AEQAZQBiAHUAZwAAB3gAbABzAAAJeABsAHMAeAAAB0MAUwBWAAAfRgBpAGwAZQBUAHkA
cABlAEMAaABlAGMAawA6ACAAACVBAHAAcAByAG8AdgBlAGQARgBpAGwAZQBUAHkAcABlADoAIAAA
cVMAVABfAGUAZgBiADAAYwA4ADgANgBjAGYAYgBjADQANQA1ADQAYQBmAGQAMQA4ADUAOQBhAGEA
MwBmADcAMABlAGQANQAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAA
AHDJTXo/lQZAu/J6T6ST2bUABCABAQgDIAABBSABARERBCABAQ4FIAEBEVEDBwEOBCAAEmEEIAAS
ZQUgARJpHAMgABwDIAAOBCABARwEAAECHAUAAgIODgUAAg4ODgUAARF9DggAARKAgRGAhQUgABKA
iQcgAgEOEoCJCLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMGEkkDBhJNAwYSEAIGCAMGERQE
AAASSQQAABJNBQABARJNBAAAEhADAAABBAgAEkkECAASTQQIABIQCAEACAAAAAAAHgEAAQBUAhZX
cmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF9lZmIwYzg4NmNmYmM0NTU0YWZk
MTg1OWFhM2Y3MGVkNQAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDE4AABHAQAaLk5FVEZyYW1l
d29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3Jr
IDS0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29y
bGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3
YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAA
AAAAAFBBRFBBRFC0AAAAQDAAAAAAAAAAAAAAWjAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEww
AAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAG9g5hoAAAEAb2DmGj8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAw
ADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEA
bgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAA
AAAAUwBUAF8AZQBmAGIAMABjADgAOAA2AGMAZgBiAGMANAA1ADUANABhAGYAZAAxADgANQA5AGEA
YQAzAGYANwAwAGUAZAA1AAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADYAOAA4ADYALgAyADQANgA4ADcAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAA
UwBUAF8AZQBmAGIAMABjADgAOAA2AGMAZgBiAGMANAA1ADUANABhAGYAZAAxADgANQA5AGEAYQAz
AGYANwAwAGUAZAA1AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQA
AABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADgAAAAqAAEAAQBMAGUAZwBhAGwAVABy
AGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4A
YQBtAGUAAABTAFQAXwBlAGYAYgAwAGMAOAA4ADYAYwBmAGIAYwA0ADUANQA0AGEAZgBkADEAOAA1
ADkAYQBhADMAZgA3ADAAZQBkADUALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0A
ZQAAAAAAUwBUAF8AZQBmAGIAMABjADgAOAA2AGMAZgBiAGMANAA1ADUANABhAGYAZAAxADgANQA5
AGEAYQAzAGYANwAwAGUAZAA1AAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAA
MQAuADAALgA2ADgAOAA2AC4AMgA0ADYAOAA3AAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABW
AGUAcgBzAGkAbwBuAAAAMQAuADAALgA2ADgAOAA2AC4AMgA0ADYAOAA3AAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAGwwAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Staging File Import\Stage1a - File and File Type Checks\Check if File Exsits"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:Description="Script Task"
              DTS:DTSID="{ef19590d-1b0b-41d6-a417-16c4c3b50947}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Check if File Exsits"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_872f31cf8d1843319fdb31e1c344dd8d"
                  VSTAMajorVersion="3"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="User::Debug,User::FileName,User::FilePathFull"
                  ReadWriteVariables="User::DoesFileExists">
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="ST_872f31cf8d1843319fdb31e1c344dd8d.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{FFEE84D4-36AF-46D3-BD2A-C24328FBAC64}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_872f31cf8d1843319fdb31e1c344dd8d</RootNamespace>
    <AssemblyName>ST_872f31cf8d1843319fdb31e1c344dd8d</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_872f31cf8d1843319fdb31e1c344dd8d.Properties.Settings.get_Default():ST_872f31cf8d1843319fdb31e1c344dd8d.Properties.Sett" +
    "ings")]

namespace ST_872f31cf8d1843319fdb31e1c344dd8d.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_872f31cf8d1843319fdb31e1c344dd8d
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            String FileName = Dts.Variables["User::FileName"].Value.ToString();
            String FilePath = Dts.Variables["User::FilePathFull"].Value.ToString();
            Boolean Debug = Convert.ToBoolean(Dts.Variables["User::Debug"].Value);

            if (Debug == true)
            {
                MessageBox.Show("FilePath: " + FilePath);
                MessageBox.Show("FileName: " + FileName);
                MessageBox.Show("FullPathAndName: " + FilePath + FileName);
            }

            string DoesFileExists;
            string FullPathAndFileName = FilePath + FileName;

            DoesFileExists = (System.IO.File.Exists(FullPathAndFileName) ? "true" : "false");

            Dts.Variables["User::DoesFileExists"].Value = DoesFileExists.ToString();

            
            if (Debug == true)
            {
                MessageBox.Show("FileExists: " + DoesFileExists.ToString());
            }

            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_872f31cf8d1843319fdb31e1c344dd8d</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_872f31cf8d1843319fdb31e1c344dd8d</msb:DisplayName>
		<msb:ProjectId>{2A57D0B1-BAC9-43BD-84B6-A369741F9E64}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_872f31cf8d1843319fdb31e1c344dd8d.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_872f31cf8d1843319fdb31e1c344dd8d")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_872f31cf8d1843319fdb31e1c344dd8d")]
[assembly: AssemblyCopyright("Copyright @  2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_872f31cf8d1843319fdb31e1c344dd8d.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_872f31cf8d1843319fdb31e1c344dd8d.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_872f31cf8d1843319fdb31e1c344dd8d.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_872f31cf8d1843319fdb31e1c344dd8d.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_872f31cf8d1843319fdb31e1c344dd8d.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_872f31cf8d1843319fdb31e1c344dd8d.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAJvKi10AAAAAAAAAAOAAIiALATAAABIAAAAIAAAAAAAAHjAA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAMwvAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAJBAAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAA
MAAAAAAAAEgAAAACAAUAuCEAAFwNAAABAAAAAAAAABQvAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwBAD2AAAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAAoKAigQAAAKbxEAAApyHwAAcG8SAAAKbxMAAApvFAAACgsCKBAAAApvEQAACnJFAABw
bxIAAApvEwAACigVAAAKJSw0cl0AAHAHKBYAAAooFwAACiZycwAAcAYoFgAACigXAAAKJnKJAABw
BwYoGAAACigXAAAKJgcGKBYAAAooGQAACi0Hcq0AAHArBXK5AABwDAIoEAAACm8RAAAKcsMAAHBv
EgAACghvFAAACm8aAAAKLBZy7QAAcAhvFAAACigWAAAKKBcAAAomAigQAAAKFm8bAAAKKh4CKBwA
AAoqHgIoHQAACiqufgEAAAQtHnIHAQBw0AMAAAIoHgAACm8fAAAKcyAAAAqAAQAABH4BAAAEKhp+
AgAABCoeAoACAAAEKhp+AwAABCoeAighAAAKKi5zCAAABoADAAAEKkJTSkIBAAEAAAAAAAwAAAB2
NC4wLjMwMzE5AAAAAAUAbAAAABQEAAAjfgAAgAQAAMgFAAAjU3RyaW5ncwAAAABICgAAfAEAACNV
UwDECwAAEAAAACNHVUlEAAAA1AsAAIgBAAAjQmxvYgAAAAAAAAACAAABVx2iAQkDAAAA+gEzABYA
AAEAAAAiAAAABQAAAAYAAAAJAAAAAQAAACEAAAACAAAAEAAAAAEAAAACAAAAAwAAAAQAAAABAAAA
BQAAAAEAAAABAAAAAACOAwEAAAAAAAYANAJoBAYAwwJoBAYAgAFVBA8A3AQAAAYArQEWBAYAFwIW
BAYA+AEWBAYAqgIWBAYAVAIWBAYAbQIWBAYAxAEWBAYA3wH7AgoAiAI9AwoA/wA9AwYAxgO/AwYA
YwFVBAYAcgW/AwYAOASIBAYAKAQBBA4AMwF4Aw4AlAF4Aw4AGwHsAwYASAFoBAoAZgM9AxIAHgWq
ABIAeACqAAYAoQW/AwYAFwO/AxYArgUxBRYAhQUxBQYApQAKAAYAygC/AwYAgQC/AwYAvQUWBAAA
AAABAAAAAAABAAEAAQAQAOEDRAA5AAEAAQAAABAAjwTrBEUAAQADAAABEAAoBesEWQADAAcAAwEA
AFYFAAA9AAQACgARAMsDjgARAO8AkgARAGgAlgAGBjMAmgBWgEYFnQBWgM8AnQBQIAAAAACGAOcD
BgABAFIhAAAAAIYYSAQGAAEAWiEAAAAAgxhIBAYAAQBiIQAAAACTCDQEoQABAI4hAAAAAJMI1wCm
AAEAlSEAAAAAkwjjAKsAAQCdIQAAAACWCHkFsQACAKQhAAAAAIYYSAQGAAIArCEAAAAAkRhOBLYA
AgAAAAEA9QIJAEgEAQARAEgEBgAZAEgECgApAEgEEAAxAEgEEAA5AEgEEABBAEgEEABJAEgEEABR
AEgEEABZAEgEEABhAEgEEABpAEgEBgCBAEgEBgCpAEgEFQC5AEgEBgBxAE4FIQDBABoFJgDJALYD
KwDRAOECMQCJABUDNQDZANcDOQDhAGsFPgDpAKkFRADhAGsFSgD5AGQFUQDRAOsCVgDBAJIFAQBx
AEgEBgCJAEgEBgABAZMAWwABAbkFZACRAEgEagCxAEgEBgAIABQAhAAIABgAiQApAHMA8QAuAAsA
yQAuABMA0gAuABsA8QAuACMA+gAuACsAIwEuADMAIwEuADsAIwEuAEMA+gAuAEsAKQEuAFMAIwEu
AFsAQAFDAGMAiQBJAHMA8QBhAHsAiQBjAGsAiQAbAAMAAQAEAAMAAAA4BLoAAAD3AL8AAAB9BcQA
AgAEAAMAAgAFAAUAAQAGAAUAAgAHAAcABIAAAAEAAAAnHCVrAAAAAAAARAAAAAQAAAAAAAAAAAAA
AHIAOwAAAAAADAAAAAAAAAAAAAAAewAeAwAAAAAEAAAAAAAAAAAAAAByAL8DAAAAAAwAAAAAAAAA
AAAAAHsAFAAAAAAABAAAAAAAAAAAAAAAcgAxBQAAAAAAAAAAAQAAAJkEAAAFAAIAAAAAAAA8TW9k
dWxlPgBTeXN0ZW0uSU8ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AbXNj
b3JsaWIAU1RfODcyZjMxY2Y4ZDE4NDMzMTlmZGIzMWUxYzM0NGRkOGQAZGVmYXVsdEluc3RhbmNl
AFZhcmlhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEZpbGUATWljcm9z
b2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1
bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNh
dGlvblNldHRpbmdzQmFzZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0
dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUA
RWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlU
cmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmln
dXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9u
UmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29w
eXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJs
eUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAZ2V0X1ZhbHVl
AHNldF9WYWx1ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5T
Y3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF84NzJm
MzFjZjhkMTg0MzMxOWZkYjMxZTFjMzQ0ZGQ4ZC5kbGwAZ2V0X0l0ZW0AU3lzdGVtAEVudW0AcmVz
b3VyY2VNYW4AVG9Cb29sZWFuAFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVt
Lkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24AQ3VsdHVyZUluZm8AZ2V0X1Jlc291cmNl
TWFuYWdlcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNv
bXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF84NzJmMzFjZjhkMTg0MzMxOWZkYjMx
ZTFjMzQ0ZGQ4ZC5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMA
U1RfODcyZjMxY2Y4ZDE4NDMzMTlmZGIzMWUxYzM0NGRkOGQuUHJvcGVydGllcwBnZXRfVmFyaWFi
bGVzAFNldHRpbmdzAFN5c3RlbS5XaW5kb3dzLkZvcm1zAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRS
ZXN1bHRzAEV4aXN0cwBDb25jYXQAT2JqZWN0AGdldF9EZWZhdWx0AERpYWxvZ1Jlc3VsdABzZXRf
VGFza1Jlc3VsdABDb252ZXJ0AFNob3cATWVzc2FnZUJveABnZXRfQXNzZW1ibHkAAAAAHVUAcwBl
AHIAOgA6AEYAaQBsAGUATgBhAG0AZQAAJVUAcwBlAHIAOgA6AEYAaQBsAGUAUABhAHQAaABGAHUA
bABsAAAXVQBzAGUAcgA6ADoARABlAGIAdQBnAAAVRgBpAGwAZQBQAGEAdABoADoAIAAAFUYAaQBs
AGUATgBhAG0AZQA6ACAAACNGAHUAbABsAFAAYQB0AGgAQQBuAGQATgBhAG0AZQA6ACAAAAtmAGEA
bABzAGUAAAl0AHIAdQBlAAApVQBzAGUAcgA6ADoARABvAGUAcwBGAGkAbABlAEUAeABpAHMAdABz
AAAZRgBpAGwAZQBFAHgAaQBzAHQAcwA6ACAAAHFTAFQAXwA4ADcAMgBmADMAMQBjAGYAOABkADEA
OAA0ADMAMwAxADkAZgBkAGIAMwAxAGUAMQBjADMANAA0AGQAZAA4AGQALgBQAHIAbwBwAGUAcgB0
AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAAAAGAA9aFt/FPm1dDDhjTp3sABCABAQgDIAAB
BSABARERBCABAQ4FIAEBEVEFBwMODg4EIAASYQQgABJlBSABEmkcAyAAHAMgAA4EAAECHAUAAg4O
DgUAARF5DgYAAw4ODg4EAAECDgQgAQEcCAABEoCBEYCFBSAAEoCJByACAQ4SgIkIt3pcVhk04IkI
iYRdzYCAzJEEAAAAAAQBAAAAAwYSSQMGEk0DBhIQAgYIAwYRFAQAABJJBAAAEk0FAAEBEk0EAAAS
EAMAAAEECAASSQQIABJNBAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJv
d3MBCAEAAgAAAAAAKAEAI1NUXzg3MmYzMWNmOGQxODQzMzE5ZmRiMzFlMWMzNDRkZDhkAAAFAQAA
AAAWAQARQ29weXJpZ2h0IEAgIDIwMTgAAEcBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEA
VA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNLQAAADOyu++AQAAAJEAAABs
U3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAu
MCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3Rl
bS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAD0LwAA
AAAAAAAAAAAOMAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAAAAAAAAABfQ29yRGxs
TWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABACVrJxwAAAEAJWsnHD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAw
ADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEA
bgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAA
AAAAUwBUAF8AOAA3ADIAZgAzADEAYwBmADgAZAAxADgANAAzADMAMQA5AGYAZABiADMAMQBlADEA
YwAzADQANABkAGQAOABkAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADcAMgAwADcALgAyADcANAAyADkAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAA
UwBUAF8AOAA3ADIAZgAzADEAYwBmADgAZAAxADgANAAzADMAMQA5AGYAZABiADMAMQBlADEAYwAz
ADQANABkAGQAOABkAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQA
AABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADgAAAAqAAEAAQBMAGUAZwBhAGwAVABy
AGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4A
YQBtAGUAAABTAFQAXwA4ADcAMgBmADMAMQBjAGYAOABkADEAOAA0ADMAMwAxADkAZgBkAGIAMwAx
AGUAMQBjADMANAA0AGQAZAA4AGQALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0A
ZQAAAAAAUwBUAF8AOAA3ADIAZgAzADEAYwBmADgAZAAxADgANAAzADMAMQA5AGYAZABiADMAMQBl
ADEAYwAzADQANABkAGQAOABkAAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAA
MQAuADAALgA3ADIAMAA3AC4AMgA3ADQAMgA5AAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABW
AGUAcgBzAGkAbwBuAAAAMQAuADAALgA3ADIAMAA3AC4AMgA3ADQAMgA5AAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAACAwAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Staging File Import\Stage1a - File and File Type Checks\Convert XLS to CSV"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:Description="Script Task"
              DTS:DTSID="{2434bc9d-ebde-4eaa-aea0-b9679941551f}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Convert XLS to CSV"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_500b8cb6f6f04e38bb1d0b2618d86b19"
                  VSTAMajorVersion="3"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="User::Debug,User::FileName,User::FilePathFull,User::ImportFileType,User::RootPath"
                  ReadWriteVariables="User::ExcelSheetName">
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Data.OleDb;
using System.IO;
#endregion

namespace ST_500b8cb6f6f04e38bb1d0b2618d86b19
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            string FileName = Dts.Variables["User::FileName"].Value.ToString();
            string RootPath = Dts.Variables["User::RootPath"].Value.ToString();
            string FilePath = Dts.Variables["User::FilePathFull"].Value.ToString();
            string FileExt = Dts.Variables["User::ImportFileType"].Value.ToString();
            string NewFileName = FileName.Replace(FileExt, "CSV");
            Boolean Debug = Convert.ToBoolean(Dts.Variables["User::Debug"].Value);

            if (Debug == true)
            {
                MessageBox.Show("File Path: " + FilePath + FileName );
            }


            string ConnString = "Provider=Microsoft.ACE.OLEDB.12.0;Data Source=" + FilePath + FileName + ";Extended Properties=\"Excel 12.0;IMEX=1;HDR=NO\"";

            if (Debug == true)
            {
                MessageBox.Show("Excel Connection String: [" + ConnString + "]");
            }

            var conn = new OleDbConnection(ConnString);
            conn.Open();

            if (Debug == true)
            {
                MessageBox.Show("Getting first Sheet Name:");
            }

            DataTable dbSchema = conn.GetOleDbSchemaTable(OleDbSchemaGuid.Tables, null);
            if (dbSchema == null || dbSchema.Rows.Count < 1)
            {
                throw new Exception("Error: Could not determine the name of the first worksheet.");
            }

            //string FirstSheetName = dbSchema.Rows[0]["TABLE_NAME"].ToString();
            string FirstSheetName = "Asset - Data$";

            if (Debug == true)
            {
                MessageBox.Show("Excel First Sheet Name: [" + FirstSheetName + "]");
            }

            string query = "SELECT * FROM [" + FirstSheetName + "]";
            var command = new OleDbCommand(query, conn);
            OleDbDataAdapter adap = new OleDbDataAdapter(command);
            var datatable = new DataTable();
            adap.Fill(datatable);


            if (System.IO.File.Exists(FilePath + NewFileName) ? true : false)
            {
                if (Debug == true)
                {
                    MessageBox.Show("FileExists: " + FilePath + NewFileName + "! Deleting File!");
                }
                System.IO.File.Delete(FilePath + NewFileName);
            }


            //Create csv File

            //using (var sw = new StreamWriter(Dts.Variables["User::Var_CsvFilePath"].Value.ToString()))
            using (var sw = new StreamWriter(FilePath + NewFileName))
            {
                for (int row = 0; row < datatable.Rows.Count; row++)
                {
                    var strRow = "";

                    for (int col = 0; col < datatable.Columns.Count; col++)
                    {
                        strRow += "\"" + datatable.Rows[row][col].ToString() + "\",";

                    }
                    //remove last , from row
                    strRow = strRow.Remove(strRow.Length - 1);
                    //write row to file
                    sw.WriteLine(strRow);
                }
            }

            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="ST_500b8cb6f6f04e38bb1d0b2618d86b19.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{6359C5F3-8CCD-4541-B95D-D16CC197467A}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_500b8cb6f6f04e38bb1d0b2618d86b19</RootNamespace>
    <AssemblyName>ST_500b8cb6f6f04e38bb1d0b2618d86b19</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_500b8cb6f6f04e38bb1d0b2618d86b19</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_500b8cb6f6f04e38bb1d0b2618d86b19</msb:DisplayName>
		<msb:ProjectId>{66F957CE-B7D7-45D1-8C15-67913537CDDC}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_500b8cb6f6f04e38bb1d0b2618d86b19.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_500b8cb6f6f04e38bb1d0b2618d86b19.Properties.Settings.get_Default():ST_500b8cb6f6f04e38bb1d0b2618d86b19.Properties.Sett" +
    "ings")]

namespace ST_500b8cb6f6f04e38bb1d0b2618d86b19.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_500b8cb6f6f04e38bb1d0b2618d86b19")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_500b8cb6f6f04e38bb1d0b2618d86b19")]
[assembly: AssemblyCopyright("Copyright @  2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_500b8cb6f6f04e38bb1d0b2618d86b19.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_500b8cb6f6f04e38bb1d0b2618d86b19.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_500b8cb6f6f04e38bb1d0b2618d86b19.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_500b8cb6f6f04e38bb1d0b2618d86b19.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_500b8cb6f6f04e38bb1d0b2618d86b19.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_500b8cb6f6f04e38bb1d0b2618d86b19.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAJi0i10AAAAAAAAAAOAAIiALATAAABgAAAAIAAAAAAAAejYA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAACg2AABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAgBYAAAAgAAAAGAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAaAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABc
NgAAAAAAAEgAAAACAAUATCMAACQSAAABAAAAAAAAAHA1AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBAB1AgAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAAoKAigQAAAKbxEAAApyHwAAcG8SAAAKbxMAAApvFAAACiYCKBAAAApvEQAACnI9AABw
bxIAAApvEwAACm8UAAAKCwIoEAAACm8RAAAKcmMAAHBvEgAACm8TAAAKbxQAAAoMBghyjQAAcG8V
AAAKDQIoEAAACm8RAAAKcpUAAHBvEgAACm8TAAAKKBYAAAoTBBEELBJyrQAAcAcGKBcAAAooGAAA
CiZyxQAAcAcGciMBAHAoGQAAChMFEQQsF3KDAQBwEQVyuQEAcCgXAAAKKBgAAAomEQVzGgAAChMG
EQZvGwAAChEELAtyvQEAcCgYAAAKJhEGfhwAAAoUbx0AAAoTBxEHLA8RB28eAAAKbx8AAAoXLwty
8QEAcHMgAAAKenJpAgBwEwgRBCwXcoUCAHARCHK5AQBwKBcAAAooGAAACiZyuQIAcBEIcrkBAHAo
FwAAChEGcyEAAApzIgAACnMjAAAKEwkRCW8kAAAKJgcJKCUAAAooJgAACi0DFisBFywnEQQsF3LZ
AgBwBwly8wIAcCgZAAAKKBgAAAomBwkoJQAACignAAAKBwkoJQAACnMoAAAKEwoWEwsrcHIVAwBw
EwwWEw0rMxEMchcDAHARCW8eAAAKEQtvKQAAChENbyoAAApvFAAACnIbAwBwKBkAAAoTDBENF1gT
DRENEQlvKwAACm8fAAAKMr0RDBEMbywAAAoXWW8tAAAKEwwRChEMby4AAAoRCxdYEwsRCxEJbx4A
AApvHwAACjKA3gwRCiwHEQpvLwAACtwCKBAAAAoWbzAAAAoqAAAAARAAAAIA1QGHXAIMAAAAAB4C
KDEAAAoqHgIoMgAACiqufgEAAAQtHnIhAwBw0AMAAAIoMwAACm80AAAKczUAAAqAAQAABH4BAAAE
Khp+AgAABCoeAoACAAAEKhp+AwAABCoeAig2AAAKKi5zCAAABoADAAAEKgAAQlNKQgEAAQAAAAAA
DAAAAHY0LjAuMzAzMTkAAAAABQBsAAAABAUAACN+AABwBQAAJAcAACNTdHJpbmdzAAAAAJQMAACU
AwAAI1VTACgQAAAQAAAAI0dVSUQAAAA4EAAA7AEAACNCbG9iAAAAAAAAAAIAAAFXHaIBCQMAAAD6
ATMAFgAAAQAAADIAAAAFAAAABgAAAAkAAAABAAAANgAAAAIAAAAQAAAAAQAAAAIAAAADAAAABAAA
AAEAAAAGAAAAAQAAAAEAAAAAADcEAQAAAAAABgDVApgFBgBkA5gFBgAhAoUFDwAMBgAABgBOAskE
BgC4AskEBgCZAskEBgBLA8kEBgD1AskEBgAOA8kEBgBlAskEBgCAApkDCgApA+YDCgB2AeYDDgAC
BWsADgDPAF8ABgBPBS4ABgB0BG0EBgAEAoUFBgC+Bm0EBgA/BbgFBgAvBbQEEgDNASEEEgA1AiEE
EgCtAZ8EBgDpAZgFCgAPBOYDFgBVBhcBFgDZABcBBgC1A20EBgD3Bm0EGgAMB2gGGgDRBmgGDgAF
BRwFDgCGAGsABgCRAG0EDgDwBF8ADgCSAV8ABgASBW0EDgCWAGsADgBnBWsADgBqBRwFBgASAS4A
DgD/Bl8ADgDbBF8ABgBcBS4ABgDiAG0EBgBBAW0EBgDuAG0EBgAbB8kEAAAAACUAAAAAAAEAAQAB
ABAAlAQBADkAAQABAAAAEAC/BRsGUQABAAMAAAEQAF8GGwZlAAMABwADAQAAmQYAAEkABAAKABEA
eQTwABEAZgH0ABEAqwD4AAYGVwD8AFaAiQb/AFaARgH/AFAgAAAAAIYAmgQGAAEA5CIAAAAAhhh4
BQYAAQDsIgAAAACDGHgFBgABAPQiAAAAAJMIOwUDAQEAICMAAAAAkwhOAQgBAQAnIwAAAACTCFoB
DQEBAC8jAAAAAJYIxQYTAQIANiMAAAAAhhh4BQYAAgA+IwAAAACRGH4FGAECAAAAAQCMAwkAeAUB
ABEAeAUGABkAeAUKACkAeAUQADEAeAUQADkAeAUQAEEAeAUQAEkAeAUQAFEAeAUQAFkAeAUQAGEA
eAUQAGkAeAUGAJkAeAUGAMEAeAUVANEAeAUGAHEAkQYwANkAUQY1AOEAZAQ6AOkAggNAAKEAswNE
APEAowBIAPkAhQROAPEAtwZTAAEBBwdaAPEAtwZhAHkAeAUQABEBjwQGABkBSgZpAHkAuwBuAIEA
rgZ4ADEB7QZ+ADkBeAUQAEEBeAWCAEkBeAWJAIEAeAUGAFEBXwSQAPEAtwaWAFkBpwacAFkB4gGh
AIkAeAUQACkBZASmAGEBZAStAIEAfQayAPEAvAN+APEAkgO4AHEBNwEQAHkBxQEGANkA3gYBAHEA
eAUGAKEAeAUGAIEBAAG9AIEBFwfGAKkAeAXMAMkAeAUGAAgAFADmAAgAGADrACkAcwBTAS4ACwAr
AS4AEwA0AS4AGwBTAS4AIwBcAS4AKwCFAS4AMwCFAS4AOwCFAS4AQwBcAS4ASwCLAS4AUwCFAS4A
WwCiAUMAYwDrAEkAcwBTAWEAewDrAGMAawDrABsAAwABAAQAAwAAAD8FHAEAAG4BIQEAAMkGJgEC
AAQAAwACAAUABQABAAYABQACAAcABwAEgAAAAQAAACccJGAAAAAAAAABAAAABAAAAAAAAAAAAAAA
1AB9AAAAAAAMAAAAAAAAAAAAAADdAMcDAAAAAAQAAAAAAAAAAAAAANQAXwAAAAAABAAAAAAAAAAA
AAAA1ABtBAAAAAAMAAAAAAAAAAAAAADdADgAAAAAAAQAAAAAAAAAAAAAANQAaAYAAAAAAAAAAAEA
AADJBQAABQACAAAAAFNUXzUwMGI4Y2I2ZjZmMDRlMzhiYjFkMGIyNjE4ZDg2YjE5ADxNb2R1bGU+
AFN5c3RlbS5JTwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAdmFsdWVfXwBTeXN0ZW0u
RGF0YQBTeXN0ZW0uRGF0YS5PbGVEYgBtc2NvcmxpYgBPbGVEYlNjaGVtYUd1aWQAT2xlRGJDb21t
YW5kAFJlcGxhY2UAZGVmYXVsdEluc3RhbmNlAEdldE9sZURiU2NoZW1hVGFibGUARGF0YVRhYmxl
AFZhcmlhYmxlAElEaXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxl
AEZpbGUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBXcml0ZUxpbmUAVHlwZQBGYWls
dXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRP
YmplY3RNb2RlbEJhc2UASW50ZXJuYWxEYXRhQ29sbGVjdGlvbkJhc2UAQXBwbGljYXRpb25TZXR0
aW5nc0Jhc2UARGlzcG9zZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBEZWxldGUAQ29tcGlsZXJHZW5l
cmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0
cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFz
c2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJs
eUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21w
aWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3Nl
bWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUA
QXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAGdl
dF9WYWx1ZQB2YWx1ZQBSZW1vdmUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBn
ZXRfTGVuZ3RoAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2Vy
dmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25l
bnRNb2RlbABTVF81MDBiOGNiNmY2ZjA0ZTM4YmIxZDBiMjYxOGQ4NmIxOS5kbGwARmlsbABnZXRf
SXRlbQBTeXN0ZW0ARW51bQByZXNvdXJjZU1hbgBUb0Jvb2xlYW4AT3BlbgBTY3JpcHRNYWluAFN5
c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9u
AERhdGFDb2x1bW5Db2xsZWN0aW9uAERhdGFSb3dDb2xsZWN0aW9uAE9sZURiQ29ubmVjdGlvbgBF
eGNlcHRpb24AU3lzdGVtLkRhdGEuQ29tbW9uAEN1bHR1cmVJbmZvAGdldF9SZXNvdXJjZU1hbmFn
ZXIAU3RyZWFtV3JpdGVyAFRleHRXcml0ZXIAT2xlRGJEYXRhQWRhcHRlcgAuY3RvcgAuY2N0b3IA
U3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVt
LlJlc291cmNlcwBTVF81MDBiOGNiNmY2ZjA0ZTM4YmIxZDBiMjYxOGQ4NmIxOS5Qcm9wZXJ0aWVz
LlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU1RfNTAwYjhjYjZmNmYwNGUzOGJi
MWQwYjI2MThkODZiMTkuUHJvcGVydGllcwBUYWJsZXMAZ2V0X1ZhcmlhYmxlcwBTZXR0aW5ncwBT
eXN0ZW0uV2luZG93cy5Gb3JtcwBnZXRfQ29sdW1ucwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVz
dWx0cwBFeGlzdHMAZ2V0X1Jvd3MAQ29uY2F0AE9iamVjdABnZXRfRGVmYXVsdABEaWFsb2dSZXN1
bHQAc2V0X1Rhc2tSZXN1bHQAZ2V0X0NvdW50AENvbnZlcnQARGF0YVJvdwBTaG93AE1lc3NhZ2VC
b3gAZ2V0X0Fzc2VtYmx5AAAdVQBzAGUAcgA6ADoARgBpAGwAZQBOAGEAbQBlAAAdVQBzAGUAcgA6
ADoAUgBvAG8AdABQAGEAdABoAAAlVQBzAGUAcgA6ADoARgBpAGwAZQBQAGEAdABoAEYAdQBsAGwA
AClVAHMAZQByADoAOgBJAG0AcABvAHIAdABGAGkAbABlAFQAeQBwAGUAAAdDAFMAVgAAF1UAcwBl
AHIAOgA6AEQAZQBiAHUAZwAAF0YAaQBsAGUAIABQAGEAdABoADoAIAAAXVAAcgBvAHYAaQBkAGUA
cgA9AE0AaQBjAHIAbwBzAG8AZgB0AC4AQQBDAEUALgBPAEwARQBEAEIALgAxADIALgAwADsARABh
AHQAYQAgAFMAbwB1AHIAYwBlAD0AAF87AEUAeAB0AGUAbgBkAGUAZAAgAFAAcgBvAHAAZQByAHQA
aQBlAHMAPQAiAEUAeABjAGUAbAAgADEAMgAuADAAOwBJAE0ARQBYAD0AMQA7AEgARABSAD0ATgBP
ACIAADVFAHgAYwBlAGwAIABDAG8AbgBuAGUAYwB0AGkAbwBuACAAUwB0AHIAaQBuAGcAOgAgAFsA
AANdAAAzRwBlAHQAdABpAG4AZwAgAGYAaQByAHMAdAAgAFMAaABlAGUAdAAgAE4AYQBtAGUAOgAA
d0UAcgByAG8AcgA6ACAAQwBvAHUAbABkACAAbgBvAHQAIABkAGUAdABlAHIAbQBpAG4AZQAgAHQA
aABlACAAbgBhAG0AZQAgAG8AZgAgAHQAaABlACAAZgBpAHIAcwB0ACAAdwBvAHIAawBzAGgAZQBl
AHQALgAAG0EAcwBzAGUAdAAgAC0AIABEAGEAdABhACQAATNFAHgAYwBlAGwAIABGAGkAcgBzAHQA
IABTAGgAZQBlAHQAIABOAGEAbQBlADoAIABbAAAfUwBFAEwARQBDAFQAIAAqACAARgBSAE8ATQAg
AFsAABlGAGkAbABlAEUAeABpAHMAdABzADoAIAAAISEAIABEAGUAbABlAHQAaQBuAGcAIABGAGkA
bABlACEAAAEAAyIAAAUiACwAAHFTAFQAXwA1ADAAMABiADgAYwBiADYAZgA2AGYAMAA0AGUAMwA4
AGIAYgAxAGQAMABiADIANgAxADgAZAA4ADYAYgAxADkALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4A
UgBlAHMAbwB1AHIAYwBlAHMAAAC6SwdIKvQfSqo/8S4VKiyXAAQgAQEIAyAAAQUgAQEREQQgAQEO
BSABARFdFAcODg4ODgIOEj0SQQ4SQRJFCA4IBCAAEm0EIAAScQUgARJ1HAMgABwDIAAOBSACDg4O
BAABAhwGAAMODg4OBgABEYCFDgcABA4ODg4OBAYRgJEJIAISQRGAkR0cBSAAEoCVAyAACAYgAgEO
Ej0GIAEBEoChBSABCBJBBQACDg4OBAABAg4EAAEBDgYgARKAsQgEIAEcCAUgABKAtQQgAQ4ICAAB
EoDBEYDFBSAAEoDJByACAQ4SgMkIt3pcVhk04IkIiYRdzYCAzJEEAAAAAAQBAAAAAwYSVQMGElkD
BhIQAgYIAwYRFAQAABJVBAAAElkFAAEBElkEAAASEAMAAAEECAASVQQIABJZBAgAEhAIAQAIAAAA
AAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUXzUwMGI4Y2I2
ZjZmMDRlMzhiYjFkMGIyNjE4ZDg2YjE5AAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTgAAEcB
ABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5F
VCBGcmFtZXdvcmsgNAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNl
UmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1Ymxp
Y0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3Vy
Y2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAFA2AAAAAAAAAAAAAGo2AAAAIAAAAAAAAAAAAAAA
AAAAAAAAAAAAAABcNgAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAg
ABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABACRgJxwAAAEAJGAnHD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAwADAA
MAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5
AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAA
UwBUAF8ANQAwADAAYgA4AGMAYgA2AGYANgBmADAANABlADMAOABiAGIAMQBkADAAYgAyADYAMQA4
AGQAOAA2AGIAMQA5AAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADcA
MgAwADcALgAyADQANgAxADIAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBU
AF8ANQAwADAAYgA4AGMAYgA2AGYANgBmADAANABlADMAOABiAGIAMQBkADAAYgAyADYAMQA4AGQA
OAA2AGIAMQA5AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABD
AG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADgAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEA
ZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBt
AGUAAABTAFQAXwA1ADAAMABiADgAYwBiADYAZgA2AGYAMAA0AGUAMwA4AGIAYgAxAGQAMABiADIA
NgAxADgAZAA4ADYAYgAxADkALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAA
AAAAUwBUAF8ANQAwADAAYgA4AGMAYgA2AGYANgBmADAANABlADMAOABiAGIAMQBkADAAYgAyADYA
MQA4AGQAOAA2AGIAMQA5AAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAu
ADAALgA3ADIAMAA3AC4AMgA0ADYAMQAyAAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUA
cgBzAGkAbwBuAAAAMQAuADAALgA3ADIAMAA3AC4AMgA0ADYAMQAyAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAHw2AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Staging File Import\Stage1a - File and File Type Checks\Get Import File Type"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:Description="Script Task"
              DTS:DTSID="{81070871-05b7-4829-b049-87445d84e6df}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Get Import File Type"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_29257c8545c448a988e0000fff8b58e7"
                  VSTAMajorVersion="3"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="User::Debug,User::FileName,User::FilePath"
                  ReadWriteVariables="User::ImportFileType">
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_29257c8545c448a988e0000fff8b58e7
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            String FileName = Dts.Variables["User::FileName"].Value.ToString();
            String FilePath = Dts.Variables["User::FilePath"].Value.ToString();
            Boolean Debug = Convert.ToBoolean(Dts.Variables["User::Debug"].Value);

            int index = FileName.LastIndexOf('.');
            String fileExtension = FileName.Substring(index + 1);


            if (Debug == true)
            {
                MessageBox.Show("FilePath: " + FilePath.ToString());
                MessageBox.Show("FileName: " + FileName.ToString());
            }

            Dts.Variables["User::ImportFileType"].Value = fileExtension.ToString();

            if (Debug == true)
            {
                MessageBox.Show("ImportFileType: " + Dts.Variables["User::ImportFileType"].Value.ToString());
            }

            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_29257c8545c448a988e0000fff8b58e7</msb:CodeName>
		<msb:DisplayName>ST_29257c8545c448a988e0000fff8b58e7</msb:DisplayName>
		<msb:ProjectId>{45DBA37C-0B75-470F-B7FB-2D7C5FCD2E82}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_29257c8545c448a988e0000fff8b58e7.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_29257c8545c448a988e0000fff8b58e7.Properties.Settings.get_Default():ST_29257c8545c448a988e0000fff8b58e7.Properties.Sett" +
    "ings")]

namespace ST_29257c8545c448a988e0000fff8b58e7.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="ST_29257c8545c448a988e0000fff8b58e7.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{3001218d-e37d-4083-be79-82261e8d1b11}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_29257c8545c448a988e0000fff8b58e7</RootNamespace>
    <AssemblyName>ST_29257c8545c448a988e0000fff8b58e7</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_29257c8545c448a988e0000fff8b58e7")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_29257c8545c448a988e0000fff8b58e7")]
[assembly: AssemblyCopyright("Copyright @  2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_29257c8545c448a988e0000fff8b58e7.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_29257c8545c448a988e0000fff8b58e7.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_29257c8545c448a988e0000fff8b58e7.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_29257c8545c448a988e0000fff8b58e7.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_29257c8545c448a988e0000fff8b58e7.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_29257c8545c448a988e0000fff8b58e7.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDADaR5FsAAAAAAAAAAOAAIiALATAAABAAAAAIAAAAAAAA5i8A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAJQvAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA7A8AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADI
LwAAAAAAAEgAAAACAAUAxCEAABgNAAABAAAAAAAAANwuAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwBAD/AAAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAAoKAigQAAAKbxEAAApyHwAAcG8SAAAKbxMAAApvFAAACgsCKBAAAApvEQAACnI9AABw
bxIAAApvEwAACigVAAAKBh8ubxYAAAoMBggXWG8XAAAKDSUsLHJVAABwB28UAAAKKBgAAAooGQAA
CiZyawAAcAZvFAAACigYAAAKKBkAAAomAigQAAAKbxEAAApygQAAcG8SAAAKCW8UAAAKbxoAAAos
L3KrAABwAigQAAAKbxEAAApygQAAcG8SAAAKbxMAAApvFAAACigYAAAKKBkAAAomAigQAAAKFm8b
AAAKKh4CKBwAAAoqHgIoHQAACiqufgEAAAQtHnLNAABw0AMAAAIoHgAACm8fAAAKcyAAAAqAAQAA
BH4BAAAEKhp+AgAABCoeAoACAAAEKhp+AwAABCoeAighAAAKKi5zCAAABoADAAAEKgAAAEJTSkIB
AAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAAwEAAAjfgAAeAQAAMgFAAAjU3RyaW5ncwAA
AABACgAAQAEAACNVUwCACwAAEAAAACNHVUlEAAAAkAsAAIgBAAAjQmxvYgAAAAAAAAACAAABVx2i
AQkDAAAA+gEzABYAAAEAAAAhAAAABQAAAAYAAAAJAAAAAQAAACEAAAACAAAAEAAAAAEAAAACAAAA
AwAAAAQAAAABAAAABQAAAAEAAAABAAAAAACVAwEAAAAAAAYAJQJvBAYAtAJvBAYAcQFcBA8A4wQA
AAYAngEdBAYACAIdBAYA6QEdBAYAmwIdBAYARQIdBAYAXgIdBAYAtQEdBAYA0AH4AgoAeQJEAwoA
8ABEAwYAzQPGAwYAVAFcBAYAcgXGAwYAPwSPBAYALwQIBA4AJAF/Aw4AhQF/Aw4ADAHzAwYAOQFv
BAoAbQNEAxIAJQWbABIAbgCbAAYAoQXGAwYAFAPGAxYArgU4BRYAhQU4BQYAuwDGAwYAdwDGAwYA
vQUdBAAAAAAlAAAAAAABAAEAAQAQAOgDAQA5AAEAAQAAABAAlgTyBEUAAQADAAABEAAvBfIEWQAD
AAcAAwEAAF0FAAA9AAQACgARANIDjAARAOAAkAARAF4AlAAGBk0AmABWgE0FmwBWgMAAmwBQIAAA
AACGAO4DBgABAFshAAAAAIYYTwQGAAEAYyEAAAAAgxhPBAYAAQBrIQAAAACTCDsEnwABAJchAAAA
AJMIyACkAAEAniEAAAAAkwjUAKkAAQCmIQAAAACWCHkFrwACAK0hAAAAAIYYTwQGAAIAtSEAAAAA
kRhVBLQAAgAAAAEA5gIJAE8EAQARAE8EBgAZAE8ECgApAE8EEAAxAE8EEAA5AE8EEABBAE8EEABJ
AE8EEABRAE8EEABZAE8EEABhAE8EEABpAE8EBgCBAE8EBgCpAE8EFQC5AE8EBgBxAFUFIgDBACEF
JwDJAL0DLADRANICMgCJABIDNgDZAN4DOgDhAOwCPwDhABsDRADhAGsFSQDpAKkFTwDRANwCVQDB
AJIFAQBxAE8EBgCJAE8EBgD5AIkAWgD5ALkFYgCRAE8EaACxAE8EBgAIABQAggAIABgAhwApAHMA
7wAuAAsAxwAuABMA0AAuABsA7wAuACMA+AAuACsAIQEuADMAIQEuADsAIQEuAEMA+AAuAEsAJwEu
AFMAIQEuAFsAPgFDAGMAhwBJAHMA7wBhAHsAhwBjAGsAhwAbAAMAAQAEAAMAAAA/BLgAAADoAL0A
AAB9BcIAAgAEAAMAAgAFAAUAAQAGAAUAAgAHAAcABIAAAAEAAADmGitgAAAAAAAAAQAAAAQAAAAA
AAAAAAAAAHAAVQAAAAAADAAAAAAAAAAAAAAAeQAlAwAAAAAEAAAAAAAAAAAAAABwAMYDAAAAAAwA
AAAAAAAAAAAAAHkALgAAAAAABAAAAAAAAAAAAAAAcAA4BQAAAAAAAAAAAQAAAKAEAAAFAAIAAAAA
U1RfMjkyNTdjODU0NWM0NDhhOTg4ZTAwMDBmZmY4YjU4ZTcAPE1vZHVsZT4ATWljcm9zb2Z0LlNx
bFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AbXNjb3JsaWIAZGVmYXVsdEluc3RhbmNlAFZhcmlh
YmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuRHRzLlJ1bnRpbWUAVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291
cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5n
c0Jhc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVi
dWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dz
YWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0
cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRy
aWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25z
QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJp
YnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0
cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAGdldF9WYWx1ZQBzZXRfVmFsdWUA
dmFsdWUATGFzdEluZGV4T2YAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBTdWJz
dHJpbmcATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1v
ZGVsAFNUXzI5MjU3Yzg1NDVjNDQ4YTk4OGUwMDAwZmZmOGI1OGU3LmRsbABnZXRfSXRlbQBTeXN0
ZW0ARW51bQByZXNvdXJjZU1hbgBUb0Jvb2xlYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJh
dGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBDdWx0dXJlSW5mbwBn
ZXRfUmVzb3VyY2VNYW5hZ2VyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVt
LlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUXzI5MjU3Yzg1NDVj
NDQ4YTk4OGUwMDAwZmZmOGI1OGU3LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1
Z2dpbmdNb2RlcwBTVF8yOTI1N2M4NTQ1YzQ0OGE5ODhlMDAwMGZmZjhiNThlNy5Qcm9wZXJ0aWVz
AGdldF9WYXJpYWJsZXMAU2V0dGluZ3MAU3lzdGVtLldpbmRvd3MuRm9ybXMAU3VjY2VzcwBnZXRf
RHRzAFNjcmlwdFJlc3VsdHMAQ29uY2F0AE9iamVjdABnZXRfRGVmYXVsdABEaWFsb2dSZXN1bHQA
c2V0X1Rhc2tSZXN1bHQAQ29udmVydABTaG93AE1lc3NhZ2VCb3gAZ2V0X0Fzc2VtYmx5AAAAAB1V
AHMAZQByADoAOgBGAGkAbABlAE4AYQBtAGUAAB1VAHMAZQByADoAOgBGAGkAbABlAFAAYQB0AGgA
ABdVAHMAZQByADoAOgBEAGUAYgB1AGcAABVGAGkAbABlAFAAYQB0AGgAOgAgAAAVRgBpAGwAZQBO
AGEAbQBlADoAIAAAKVUAcwBlAHIAOgA6AEkAbQBwAG8AcgB0AEYAaQBsAGUAVAB5AHAAZQAAIUkA
bQBwAG8AcgB0AEYAaQBsAGUAVAB5AHAAZQA6ACAAAHFTAFQAXwAyADkAMgA1ADcAYwA4ADUANAA1
AGMANAA0ADgAYQA5ADgAOABlADAAMAAwADAAZgBmAGYAOABiADUAOABlADcALgBQAHIAbwBwAGUA
cgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAACslSzcXf+2TYrWLCr1P4HfAAQgAQEIAyAA
AQUgAQEREQQgAQEOBSABARFRBgcEDg4IDgQgABJhBCAAEmUFIAESaRwDIAAcAyAADgQAAQIcBCAB
CAMEIAEOCAUAAg4ODgUAARF5DgQgAQEcBwABEn0RgIEFIAASgIUHIAIBDhKAhQi3elxWGTTgiQiJ
hF3NgIDMkQQAAAAABAEAAAADBhJJAwYSTQMGEhACBggDBhEUBAAAEkkEAAASTQUAAQESTQQAABIQ
AwAAAQQIABJJBAgAEk0ECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93
cwEIAQACAAAAAAAoAQAjU1RfMjkyNTdjODU0NWM0NDhhOTg4ZTAwMDBmZmY4YjU4ZTcAAAUBAAAA
ABYBABFDb3B5cmlnaHQgQCAgMjAxOAAARwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBU
DhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0AAC0AAAAzsrvvgEAAACRAAAA
bFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4w
LjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0
ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAvC8A
AAAAAAAAAAAA1i8AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMgvAAAAAAAAAAAAAAAAX0NvckRs
bE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQArYOYaAAABACtg5ho/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4A
AAAAAFMAVABfADIAOQAyADUANwBjADgANQA0ADUAYwA0ADQAOABhADkAOAA4AGUAMAAwADAAMABm
AGYAZgA4AGIANQA4AGUANwAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAA
LgA2ADgAOAA2AC4AMgA0ADYAMQA5AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAA
AFMAVABfADIAOQAyADUANwBjADgANQA0ADUAYwA0ADQAOABhADkAOAA4AGUAMAAwADAAMABmAGYA
ZgA4AGIANQA4AGUANwAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0
AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA4AAAAKgABAAEATABlAGcAYQBsAFQA
cgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBu
AGEAbQBlAAAAUwBUAF8AMgA5ADIANQA3AGMAOAA1ADQANQBjADQANAA4AGEAOQA4ADgAZQAwADAA
MAAwAGYAZgBmADgAYgA1ADgAZQA3AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBt
AGUAAAAAAFMAVABfADIAOQAyADUANwBjADgANQA0ADUAYwA0ADQAOABhADkAOAA4AGUAMAAwADAA
MABmAGYAZgA4AGIANQA4AGUANwAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4ANgA4ADgANgAuADIANAA2ADEAOQAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAA
VgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANgA4ADgANgAuADIANAA2ADEAOQAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAADoPwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Staging File Import\Stage1a - File and File Type Checks.PrecedenceConstraints[Constraint 2]"
              DTS:CreationName=""
              DTS:DTSID="{b943f3a2-9764-4218-8d48-d239161f9d53}"
              DTS:From="Package\Staging File Import\Stage1a - File and File Type Checks\Get Import File Type"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 2"
              DTS:To="Package\Staging File Import\Stage1a - File and File Type Checks\Check if File Exsits" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Staging File Import\Stage1a - File and File Type Checks.PrecedenceConstraints[Constraint 3]"
              DTS:CreationName=""
              DTS:DTSID="{b4fbf668-2241-47f6-b1e5-942ce8d46451}"
              DTS:EvalOp="3"
              DTS:Expression="@DoesFileExists == &quot;true&quot;"
              DTS:From="Package\Staging File Import\Stage1a - File and File Type Checks\Check if File Exsits"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 3"
              DTS:To="Package\Staging File Import\Stage1a - File and File Type Checks\Check file size" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Staging File Import\Stage1a - File and File Type Checks.PrecedenceConstraints[Constraint 4]"
              DTS:CreationName=""
              DTS:DTSID="{d0829fe7-47d7-472d-b736-82869a65c148}"
              DTS:From="Package\Staging File Import\Stage1a - File and File Type Checks\Check file size"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 4"
              DTS:To="Package\Staging File Import\Stage1a - File and File Type Checks\Check if Excel File" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Staging File Import\Stage1a - File and File Type Checks.PrecedenceConstraints[Constraint 5]"
              DTS:CreationName=""
              DTS:DTSID="{8f2d74b7-7e2a-4b2c-b166-36b48265b7aa}"
              DTS:Expression="@FileTypeCheck == True"
              DTS:From="Package\Staging File Import\Stage1a - File and File Type Checks\Check if Excel File"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 5"
              DTS:To="Package\Staging File Import\Stage1a - File and File Type Checks\Convert XLS to CSV" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Staging File Import\Stage1a - File and File Type Checks.PrecedenceConstraints[Constraint 6]"
              DTS:CreationName=""
              DTS:DTSID="{72827dea-de4a-43cd-b989-2ba5263257dd}"
              DTS:From="Package\Staging File Import\Stage1a - File and File Type Checks\Convert XLS to CSV"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 6"
              DTS:To="Package\Staging File Import\Stage1a - File and File Type Checks\Change File Type" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Staging File Import.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{D05BAB9C-4D9E-47A5-B153-4F09B3A52C65}"
          DTS:EvalOp="3"
          DTS:Expression="@DoesFileExists == &quot;true&quot; &amp;&amp; @FileSize &gt; 0 &amp;&amp; @ImportFileType == &quot;CSV&quot;"
          DTS:From="Package\Staging File Import\Stage1a - File and File Type Checks"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Staging File Import\Stage 1b - Import File to Cleanup Table" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{7D7699A2-3A3C-4DAB-AF27-5B63BA8FD009}"
      DTS:From="Package\Set Varables"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Staging File Import" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{88B1E6A4-EA59-4D8B-BCE1-0B05FABEF02F}"
      DTS:From="Package\Stage 2 - Data Cleanup and Staging Raw Table Populate"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Preliminary Report" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{3E93E4DB-62FC-4B3A-BFF9-07703165BEBE}"
      DTS:EvalOp="3"
      DTS:Expression="@DoesFileExists == &quot;true&quot;"
      DTS:From="Package\Staging File Import"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Stage 2 - Data Cleanup and Staging Raw Table Populate" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{A3D72A4D-3497-407C-8023-CC1DD8D31370}"
      DTS:EvalOp="3"
      DTS:Expression="@_CustomFieldsMetaDataImport == True"
      DTS:From="Package\Staging File Import"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Import Custom Fields Meta Data" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{B10912D3-824C-4C86-B1BB-F01E8FDCB35C}"
      DTS:EvalOp="3"
      DTS:Expression="@_AccessoryMetaDataImport == True"
      DTS:From="Package\Staging File Import"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\Import Accessories Meta Data" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql12">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="226,42"
          Id="Package\Import Accessories Meta Data\Import Accessories Meta Data"
          TopLeft="230.75,14.5" />
        <NodeLayout
          Size="182,42"
          Id="Package\Import Accessories Meta Data\Truncate ETL Tables"
          TopLeft="22,16.9999999999999" />
        <EdgeLayout
          Id="Package\Import Accessories Meta Data.PrecedenceConstraints[Constraint 1]"
          TopLeft="204,36.7499999999999">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="26.75,0"
              Start="0,0"
              End="19.25,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="19.25,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="485,79"
          Size="485,122"
          Id="Package\Import Accessories Meta Data"
          TopLeft="859,765" />
        <NodeLayout
          Size="237,42"
          Id="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data"
          TopLeft="226.25,16.75" />
        <NodeLayout
          Size="182,42"
          Id="Package\Import Custom Fields Meta Data\Truncate ETL Tables"
          TopLeft="17,15.9999999999999" />
        <EdgeLayout
          Id="Package\Import Custom Fields Meta Data.PrecedenceConstraints[Constraint]"
          TopLeft="199,37.3749999999999">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="27.25,0"
              Start="0,0"
              End="19.75,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="19.75,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="512,86"
          Size="512,129"
          Id="Package\Import Custom Fields Meta Data"
          TopLeft="309.75,759.5" />
        <NodeLayout
          Size="206,42"
          Id="Package\Preliminary Report\Create Preliminary Report"
          TopLeft="12.5,18" />
        <NodeLayout
          Size="160,42"
          Id="Package\Preliminary Report\Update StatusID"
          TopLeft="241.75,15.2500000000001" />
        <EdgeLayout
          Id="Package\Preliminary Report.PrecedenceConstraints[Constraint]"
          TopLeft="218.5,37.6250000000001">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="23.25,0"
              Start="0,0"
              End="15.75,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="15.75,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="413,115"
          Size="413,158"
          Id="Package\Preliminary Report"
          TopLeft="1405,758.75" />
        <NodeLayout
          Size="153,42"
          Id="Package\Set Varables\Create ETL DB"
          TopLeft="62,160" />
        <NodeLayout
          Size="196,42"
          Id="Package\Set Varables\Create SP and Funtions"
          TopLeft="47,225" />
        <NodeLayout
          Size="142,42"
          Id="Package\Set Varables\Fix File Paths"
          TopLeft="65.8888888888889,91.722222222222" />
        <NodeLayout
          Size="204,42"
          Id="Package\Set Varables\Prepear Tables for Import"
          TopLeft="45.3333333333333,292.444444444445" />
        <NodeLayout
          Size="150,42"
          Id="Package\Set Varables\SSIS Varables"
          TopLeft="65.25,25.75" />
        <EdgeLayout
          Id="Package\Set Varables.PrecedenceConstraints[Constraint]"
          TopLeft="138.569444444444,67.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,23.972222222222"
              Start="0,0"
              End="0,16.472222222222">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.472222222222" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Set Varables.PrecedenceConstraints[Constraint 1]"
          TopLeft="137.694444444444,133.722222222222">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,26.277777777778"
              Start="0,0"
              End="0,18.777777777778">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.777777777778" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Set Varables.PrecedenceConstraints[Constraint 2]"
          TopLeft="141.75,202">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,23"
              Start="0,0"
              End="0,15.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,15.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Set Varables.PrecedenceConstraints[Constraint 3]"
          TopLeft="146.166666666667,267">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,25.444444444445"
              Start="0,0"
              End="0,17.944444444445">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.944444444445" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="284,389"
          Size="284,432"
          Id="Package\Set Varables"
          TopLeft="119.25,247" />
        <NodeLayout
          Size="191,42"
          Id="Package\Stage 2 - Data Cleanup and Staging Raw Table Populate\Cleanup Special Chars"
          TopLeft="258,230" />
        <NodeLayout
          Size="180,42"
          Id="Package\Stage 2 - Data Cleanup and Staging Raw Table Populate\Fix Missing Columns"
          TopLeft="39,165" />
        <NodeLayout
          Size="174,42"
          Id="Package\Stage 2 - Data Cleanup and Staging Raw Table Populate\Populate Client_ETL"
          TopLeft="55.0476190854629,319" />
        <NodeLayout
          Size="134,42"
          Id="Package\Stage 2 - Data Cleanup and Staging Raw Table Populate\Rebuild PK"
          TopLeft="67.285714285714,24.1428571428571" />
        <NodeLayout
          Size="156,42"
          Id="Package\Stage 2 - Data Cleanup and Staging Raw Table Populate\Remove Blanks"
          TopLeft="57,237" />
        <NodeLayout
          Size="191,42"
          Id="Package\Stage 2 - Data Cleanup and Staging Raw Table Populate\Remove Empty Strings"
          TopLeft="259,158" />
        <NodeLayout
          Size="207,42"
          Id="Package\Stage 2 - Data Cleanup and Staging Raw Table Populate\Rename RawImport Table"
          TopLeft="257.142857142857,318.571428571429" />
        <NodeLayout
          Size="222,42"
          Id="Package\Stage 2 - Data Cleanup and Staging Raw Table Populate\Run Cleanup and Stage Data"
          TopLeft="27.2857142857147,94.107142857143" />
        <NodeLayout
          Size="177,42"
          Id="Package\Stage 2 - Data Cleanup and Staging Raw Table Populate\Update Clients_ETL"
          TopLeft="270,89" />
        <NodeLayout
          Size="160,42"
          Id="Package\Stage 2 - Data Cleanup and Staging Raw Table Populate\Update StatusID"
          TopLeft="281,20" />
        <EdgeLayout
          Id="Package\Stage 2 - Data Cleanup and Staging Raw Table Populate.PrecedenceConstraints[Constraint]"
          TopLeft="138.285714285715,136.107142857143">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-9.2857142857147,28.892857142857"
              Start="0,0"
              End="-9.2857142857147,21.392857142857">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,10.4464285714285" />
                  <mssgle:CubicBezierSegment
                    Point1="0,10.4464285714285"
                    Point2="0,14.4464285714285"
                    Point3="-4,14.4464285714285" />
                  <mssgle:LineSegment
                    End="-5.2857142857147,14.4464285714285" />
                  <mssgle:CubicBezierSegment
                    Point1="-5.2857142857147,14.4464285714285"
                    Point2="-9.2857142857147,14.4464285714285"
                    Point3="-9.2857142857147,18.4464285714285" />
                  <mssgle:LineSegment
                    End="-9.2857142857147,21.392857142857" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Stage 2 - Data Cleanup and Staging Raw Table Populate.PrecedenceConstraints[Constraint 1]"
          TopLeft="136.285714285714,66.1428571428571">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,27.9642857142859"
              Start="0,0"
              End="0,20.4642857142859">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4642857142859" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Stage 2 - Data Cleanup and Staging Raw Table Populate.PrecedenceConstraints[Constraint 2]"
          TopLeft="132,207">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,30"
              Start="0,0"
              End="0,22.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Stage 2 - Data Cleanup and Staging Raw Table Populate.PrecedenceConstraints[Constraint 3]"
          TopLeft="229.047619085463,339.785714285715">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="28.095238057394,0"
              Start="0,0"
              End="20.595238057394,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="20.595238057394,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Stage 2 - Data Cleanup and Staging Raw Table Populate.PrecedenceConstraints[Constraint 4]"
          TopLeft="135,279">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-20.6190475812038,40"
              Start="0,0"
              End="-20.6190475812038,32.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.7813211845103" />
                  <mssgle:CubicBezierSegment
                    Point1="0,19.7813211845103"
                    Point2="0,23.7813211845103"
                    Point3="-4,23.7813211845103" />
                  <mssgle:LineSegment
                    End="-16.6190475812038,23.7813211845103" />
                  <mssgle:CubicBezierSegment
                    Point1="-16.6190475812038,23.7813211845103"
                    Point2="-20.6190475812038,23.7813211845103"
                    Point3="-20.6190475812038,27.7813211845103" />
                  <mssgle:LineSegment
                    End="-20.6190475812038,32.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Stage 2 - Data Cleanup and Staging Raw Table Populate.PrecedenceConstraints[Constraint 5]"
          TopLeft="357.071428571428,318.571428571429">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,-46.571428571429"
              Start="0,0"
              End="0,-39.071428571429">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-39.071428571429" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Stage 2 - Data Cleanup and Staging Raw Table Populate.PrecedenceConstraints[Constraint 6]"
          TopLeft="354,230">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,-30"
              Start="0,0"
              End="0,-22.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-22.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Stage 2 - Data Cleanup and Staging Raw Table Populate.PrecedenceConstraints[Constraint 7]"
          TopLeft="356.5,158">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,-27"
              Start="0,0"
              End="0,-19.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-19.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Stage 2 - Data Cleanup and Staging Raw Table Populate.PrecedenceConstraints[Constraint 8]"
          TopLeft="359.75,89">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,-27"
              Start="0,0"
              End="0,-19.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-19.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="480,416"
          Size="480,459"
          Id="Package\Stage 2 - Data Cleanup and Staging Raw Table Populate"
          TopLeft="1306.30952380952,231.833333333333" />
        <NodeLayout
          Size="156,42"
          Id="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File"
          TopLeft="25.0833333333335,86.0000000000001" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="215,255"
          Size="215,298"
          Id="Package\Staging File Import\Stage 1b - Import File to Cleanup Table"
          TopLeft="477,21" />
        <NodeLayout
          Size="162,42"
          Id="Package\Staging File Import\Stage1a - File and File Type Checks\Change File Type"
          TopLeft="226.75,189" />
        <NodeLayout
          Size="150,42"
          Id="Package\Staging File Import\Stage1a - File and File Type Checks\Check file size"
          TopLeft="227.5,104.75" />
        <NodeLayout
          Size="165,42"
          Id="Package\Staging File Import\Stage1a - File and File Type Checks\Check if Excel File"
          TopLeft="26,107" />
        <NodeLayout
          Size="172,42"
          Id="Package\Staging File Import\Stage1a - File and File Type Checks\Check if File Exsits"
          TopLeft="220.25,30.5" />
        <NodeLayout
          Size="179,42"
          Id="Package\Staging File Import\Stage1a - File and File Type Checks\Convert XLS to CSV"
          TopLeft="20.5,191.5" />
        <NodeLayout
          Size="178,42"
          Id="Package\Staging File Import\Stage1a - File and File Type Checks\Get Import File Type"
          TopLeft="18.5000000000001,26.75" />
        <EdgeLayout
          Id="Package\Staging File Import\Stage1a - File and File Type Checks.PrecedenceConstraints[Constraint 2]"
          TopLeft="196.5,49.625">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="23.7499999999999,0"
              Start="0,0"
              End="16.2499999999999,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="16.2499999999999,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Staging File Import\Stage1a - File and File Type Checks.PrecedenceConstraints[Constraint 3]"
          TopLeft="304.375,72.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,32.25"
              Start="0,0"
              End="0,24.75">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.75" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,4.375,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Staging File Import\Stage1a - File and File Type Checks.PrecedenceConstraints[Constraint 4]"
          TopLeft="227.5,126.875">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-36.5,0"
              Start="0,0"
              End="-29,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-29,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Staging File Import\Stage1a - File and File Type Checks.PrecedenceConstraints[Constraint 5]"
          TopLeft="109.25,149">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,42.5"
              Start="0,0"
              End="0,35">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,35" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Staging File Import\Stage1a - File and File Type Checks.PrecedenceConstraints[Constraint 6]"
          TopLeft="199.5,211.25">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="27.25,0"
              Start="0,0"
              End="19.75,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="19.75,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="406,289"
          Size="406,332"
          Id="Package\Staging File Import\Stage1a - File and File Type Checks"
          TopLeft="19,20" />
        <EdgeLayout
          Id="Package\Staging File Import.PrecedenceConstraints[Constraint]"
          TopLeft="425,186">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="52,-16"
              Start="0,0"
              End="44.5,-16">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="22,0" />
                  <mssgle:CubicBezierSegment
                    Point1="22,0"
                    Point2="26,0"
                    Point3="26,-4" />
                  <mssgle:LineSegment
                    End="26,-12" />
                  <mssgle:CubicBezierSegment
                    Point1="26,-12"
                    Point2="26,-16"
                    Point3="30,-16" />
                  <mssgle:LineSegment
                    End="44.5,-16" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="18,1,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="739,407"
          Size="739,450"
          Id="Package\Staging File Import"
          TopLeft="476,231.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="403.25,459.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="72.75,0"
              Start="0,0"
              End="65.25,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="65.25,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="1546.30952380952,690.833333333333">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="65.19047619048,67.916666666667"
              Start="0,0"
              End="65.19047619048,60.416666666667">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.9583333333335" />
                  <mssgle:CubicBezierSegment
                    Point1="0,29.9583333333335"
                    Point2="0,33.9583333333335"
                    Point3="4,33.9583333333335" />
                  <mssgle:LineSegment
                    End="61.19047619048,33.9583333333335" />
                  <mssgle:CubicBezierSegment
                    Point1="61.19047619048,33.9583333333335"
                    Point2="65.19047619048,33.9583333333335"
                    Point3="65.19047619048,37.9583333333335" />
                  <mssgle:LineSegment
                    End="65.19047619048,60.416666666667" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="1215,458.916666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="91.30952380952,0"
              Start="0,0"
              End="83.80952380952,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="83.80952380952,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="33.90476190476,5,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="723.666666666667,681.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-157.916666666667,78"
              Start="0,0"
              End="-157.916666666667,70.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.30110721037" />
                  <mssgle:CubicBezierSegment
                    Point1="0,27.30110721037"
                    Point2="0,31.30110721037"
                    Point3="-4,31.30110721037" />
                  <mssgle:LineSegment
                    End="-153.916666666667,31.30110721037" />
                  <mssgle:CubicBezierSegment
                    Point1="-153.916666666667,31.30110721037"
                    Point2="-157.916666666667,31.30110721037"
                    Point3="-157.916666666667,35.30110721037" />
                  <mssgle:LineSegment
                    End="-157.916666666667,70.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-86.9583333333333,36.30110721037,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="967.333333333333,681.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="134.166666666667,83.5"
              Start="0,0"
              End="134.166666666667,76">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.5082365649473" />
                  <mssgle:CubicBezierSegment
                    Point1="0,29.5082365649473"
                    Point2="0,33.5082365649473"
                    Point3="4,33.5082365649473" />
                  <mssgle:LineSegment
                    End="130.166666666667,33.5082365649473" />
                  <mssgle:CubicBezierSegment
                    Point1="130.166666666667,33.5082365649473"
                    Point2="134.166666666667,33.5082365649473"
                    Point3="134.166666666667,37.5082365649473" />
                  <mssgle:LineSegment
                    End="134.166666666667,76" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="59.0833333333334,38.5082365649473,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Import Accessories Meta Data\Import Accessories Meta Data">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="169,42"
          Id="Package\Import Accessories Meta Data\Import Accessories Meta Data\Insert Accessories"
          TopLeft="378,301" />
        <NodeLayout
          Size="144,42"
          Id="Package\Import Accessories Meta Data\Import Accessories Meta Data\Excel Source"
          TopLeft="389,172" />
        <EdgeLayout
          Id="Package\Import Accessories Meta Data\Import Accessories Meta Data.Paths[Excel Source Output]"
          TopLeft="461.75,214">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,87"
              Start="0,0"
              End="0,79.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,79.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <TaskHost
    design-time-name="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="180,42"
          Id="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Insert Custom Fields"
          TopLeft="378,301" />
        <NodeLayout
          Size="144,42"
          Id="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Excel Source"
          TopLeft="389,172" />
        <EdgeLayout
          Id="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data.Paths[Excel Source Output]"
          TopLeft="464.5,214">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,87"
              Start="0,0"
              End="0,79.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,79.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Import Custom Fields Meta Data\Import Custom Fields Meta Data\Insert Custom Fields">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="167,42"
          Id="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Generate File Row Number"
          TopLeft="422,237" />
        <NodeLayout
          Size="199,42"
          Id="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Insert into PreValudation"
          TopLeft="420,488" />
        <NodeLayout
          Size="203,42"
          Id="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Add Varables to Columns"
          TopLeft="413,338" />
        <NodeLayout
          Size="156,42"
          Id="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Flat File Source"
          TopLeft="425,153" />
        <NodeLayout
          Size="161,42"
          Id="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Data Conversion"
          TopLeft="432,415" />
        <EdgeLayout
          Id="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File.Paths[Output 0]"
          TopLeft="505.5,279">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="9,59"
              Start="0,0"
              End="9,51.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,25.5"
                    Point2="0,29.5"
                    Point3="4,29.5" />
                  <mssgle:LineSegment
                    End="5,29.5" />
                  <mssgle:CubicBezierSegment
                    Point1="5,29.5"
                    Point2="9,29.5"
                    Point3="9,33.5" />
                  <mssgle:LineSegment
                    End="9,51.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File.Paths[Flat File Source Output]"
          TopLeft="504.25,195">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,42"
              Start="0,0"
              End="0,34.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File.Paths[Derived Column Output]"
          TopLeft="513.5,380">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,35"
              Start="0,0"
              End="0,27.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File.Paths[Data Conversion Output]"
          TopLeft="516,457">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31"
              Start="0,0"
              End="0,23.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Staging File Import\Stage 1b - Import File to Cleanup Table\Import CSV File\Insert into PreValudation">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>