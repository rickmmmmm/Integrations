<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="4/7/2016 1:50:14 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="NBLAKELY-HPLT"
  DTS:CreatorName="HAYESSOFT\nblakely"
  DTS:DTSID="{5B6FBECA-087C-48F1-8D7B-B17E57FB0E24}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="14.0.3002.107"
  DTS:LocaleID="1033"
  DTS:ObjectName="IT_Validation_Migration"
  DTS:PackageType="5"
  DTS:VersionBuild="159"
  DTS:VersionGUID="{B77D1566-BCDB-4537-A86C-8DED43427AD3}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[ConversionDB]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{6375cd30-80d7-4a1b-b7d0-b0fbd9756daf}"
      DTS:ObjectName="ConversionDB">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[User::_00ETLDatabase]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[User::__ETLServer]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Retain="True"
          DTS:ConnectionString="Data Source=HayesConversion;Initial Catalog=TIPWEB_ETL_PattersonJoint;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;Application Name=SSIS-IT_Validation-{9A6D321E-3948-474E-AB48-53C3538CBCAB}NBLAKELY-HPLT.TipWeb_ITDataConversion;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DataConversionConfiguration]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{5b7fb03b-230a-4c3e-b0dc-2195929af068}"
      DTS:ObjectName="DataConversionConfiguration">
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[User::__ETLServer]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=HayesConversion;Initial Catalog=_DataConversion;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;Application Name=SSIS-IT_Validation_Final-{2EB50B0E-398D-4A02-B856-3D7198A351E9}HAYESCONVERSION._DataConversion;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[ReportServer]"
      DTS:CreationName="HTTP"
      DTS:DTSID="{3951084C-B016-4A11-BC67-EFCC5AA4450A}"
      DTS:ObjectName="ReportServer">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="http://hayessqlsvr/Reports/Pages/Report.aspx?ItemPath=%2fDataConversion%2fDataConversionPreliminary">
          <DTS:HttpConnection
            DTS:ServerURL="http://hayessqlsvr/Reports/Pages/Report.aspx?ItemPath=%2fDataConversion%2fDataConversionPreliminary"
            DTS:UseServerCredentials="True"
            DTS:ServerUserName="IntegerationReports"
            DTS:ServerDomain="hayessqlsvr"
            DTS:TimeOut="300"
            DTS:ChunkSize="50"
            DTS:ProxyUserName="RGailey">
            <DTS:Property
              DTS:Name="ServerPassword"
              Sensitive="1"
              Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAw/LfgQL8pEi85KFzuKRfpQAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAACoA0dX0xcWqPZLMjtXFSapAAAAAASAAACgAAAAEAAAACwzR3Qmiuc58Bt/qf8uEosQAAAA01xZQG9cemxbKEAE2auD8BQAAADUyVmKZKCAg8W9/VsJhO7U1rnhCA</DTS:Property>
            <DTS:Property
              DTS:Name="ProxyPassword"
              Sensitive="1"
              Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAw/LfgQL8pEi85KFzuKRfpQAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAADQW8eKHpH/y6+M3nKTBOevAAAAAASAAACgAAAAEAAAAKAONQRgY89LT/TIO1bqBcQIAAAAARCdAD6P56oUAAAAWnvpDRm4LT1Qln+7adEeVaL0B9Q</DTS:Property>
          </DTS:HttpConnection>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[TipWebStagingDB]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{e5a48323-38b7-45b0-8073-64dbfcde0190}"
      DTS:ObjectName="TipWebStagingDB">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[User::_02StagingDB]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[User::__ETLServer]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Retain="True"
          DTS:ConnectionString="Data Source=HayesConversion;Initial Catalog=TipWeb_Staging_PattersonJoint;Provider=SQLNCLI11;Integrated Security=SSPI;Auto Translate=False;Application Name=SSIS-IT_Validation-{236FAF15-A051-4596-89C9-956514A760CF}HAYESCONVERSION.ls_fulton58SQL;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{55989E1F-04D3-479E-9DCB-1CD8F5E78D19}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FolderName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7BEE392D-70D7-48D5-8F26-F58AAF412231}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="RootPath">
      <DTS:VariableValue
        DTS:DataType="8">Z:\Customer Support\_Customer Data\_TIPWeb-IT_Customers\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FC33C871-3757-42EF-85F2-52FA61A9C9BC}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="_00ETLDatabase">
      <DTS:VariableValue
        DTS:DataType="8">TIPWEB_ETL_PattersonJoint</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CD6BB530-E6B5-45F9-A377-D132791165E5}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="_02StagingDB">
      <DTS:VariableValue
        DTS:DataType="8">TipWeb_Staging_PattersonJoint</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B1E6081F-55B7-4C54-A5B2-E9901369B6C2}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="_17UseAccessories">
      <DTS:VariableValue
        DTS:DataType="3">1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FA27B3A5-139F-4DD7-9950-982D4E243DE2}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="_19UseCustomFields">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7B883D75-065C-4B62-9FC8-523528563EBF}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="__AccessoryConfigured">
      <DTS:VariableValue
        DTS:DataType="3">1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{34D310B8-4AF6-4D72-B3EF-F7F9D2A62602}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SELECT&#xA; ETLDBName,&#xA;&#xA; StagingDBName,&#xA;&#xA;UseAccessories,UseCustomField&#xA; FROM dbo.SSIS_ITVariables where iPkey = &quot; +  (DT_WSTR, 10) @[User::___0Recordkey]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="__ConfigSQL">
      <DTS:VariableValue
        DTS:DataType="8">SELECT
 ETLDBName,

 StagingDBName,

UseAccessories,UseCustomField
 FROM dbo.SSIS_ITVariables where iPkey = 2116</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DFF6904C-B306-4A26-B59A-6577361F4B58}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="__CustomFieldsConfigured">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FC4B62ED-74B1-40D8-AD01-16F5E0F80F7B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="__ETLServer">
      <DTS:VariableValue
        DTS:DataType="8">HayesConversion</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7EE77635-2940-46CE-AE50-220F6FEEAC5A}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="__rsConfig">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7DB1D7B7-1343-4E0B-B7C8-AD3DED6BDE6F}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="___0Recordkey">
      <DTS:VariableValue
        DTS:DataType="3">2116</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Begin Transaction"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{88D86008-1509-464A-BEFB-2F7E33244A4D}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Begin Transaction"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{e5a48323-38b7-45b0-8073-64dbfcde0190}"
          SQLTask:SqlStatementSource="BEGIN TRAN" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Insert Staging and Update ETL"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{DB334DAB-33F6-4E75-B6C4-D9AC9FDDE0B3}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Insert Staging and Update ETL">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Insert Staging and Update ETL\Accesories"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:Disabled="True"
          DTS:DTSID="{72F5F464-B70A-4525-BF7E-738C33531A6E}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Accesories">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Insert Staging and Update ETL\Accesories\tblTechAccessories"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{D1DA5BEF-3555-451C-BD53-3A0C2808BB44}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="tblTechAccessories"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{6375cd30-80d7-4a1b-b7d0-b0fbd9756daf}"
                  SQLTask:SqlStatementSource="&#xA;declare @StagingDB nvarchar(100)&#xA;set @StagingDB = ?&#xA;&#xA;DECLARE @SQL NVARCHAR(MAX)&#xA;&#xA;SELECT @SQL = &#xA;&#xA;N' INSERT INTO ' + @StagingDB + '.dbo.tblTechAccessories ' +&#xA;N' (AccessoryName, AccessoryDescription, AccessoryPrice, AccessoryConsumable,  ' +&#xA;N' CreatedByUserID, CreatedDate, LastModifiedByUserID, LastModifiedDate) ' +&#xA;&#xA;N' SELECT DISTINCT AccessoryName,  AccessoryName, AccessoryPrice, Consumable,  ' +&#xA;N' &#x9;0, getdate(), 0, getdate() ' +&#xA;N' FROM Accessory_Pivot ' +&#xA;N' where AccessoryName not in (select AccessoryName from ' + @StagingDB + '.dbo.tblTechAccessories) '&#xA;&#xA;--print @SQL&#xA;EXEC sys.sp_executesql @SQL&#xA;&#xA;SELECT @SQL = &#xA;&#xA;--N' select * ' +&#xA;N' Update ap set AccessoryUID = ta.AccessoryUID ' +&#xA;N' from Accessory_Pivot ap ' +&#xA;N' join ' + @StagingDB + '.dbo.tblTechAccessories ta ' +&#xA;N'&#x9;on ta.AccessoryName = ap.AccessoryName ' &#xA;&#xA;--print @SQL&#xA;EXEC sys.sp_executesql @SQL&#xA;&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@StagingDB"
                    SQLTask:DtsVariableName="User::_02StagingDB"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="130"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Insert Staging and Update ETL\Accesories\tblTechInventoryAccessories"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{C9423BEA-7FA7-4BC8-B7F0-EA6663DFAA87}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="tblTechInventoryAccessories"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{6375cd30-80d7-4a1b-b7d0-b0fbd9756daf}"
                  SQLTask:SqlStatementSource="declare @StagingDB nvarchar(100)&#xA;set @StagingDB = ?&#xA;&#xA;DECLARE @SQL NVARCHAR(MAX)&#xA;&#xA;SELECT @SQL = &#xA;&#xA;N' INSERT INTO ' + @StagingDB + '.dbo.tblTechInventoryAccessories ' +&#xA;N'    (InventoryHistoryUID, AccessoryUID, Issued,  Returned,  ' +&#xA;N'       CreatedByUserID, CreatedDate, LastModifiedByUserID, LastModifiedDate) ' +&#xA;&#xA;N' select ttih.InventoryHistoryUID, tia.AccessoryUID, 1, 0,  ' +&#xA;N' &#x9; ttih.CreatedByUserID, ttih.CreatedDate, ttih.LastModifiedByUserID, ttih.LastModifiedDate ' +&#xA;N' from Clients_ETL_Final etl ' +&#xA;N' join ' + @StagingDB + '.dbo.tblTechItemAccessories tia  ' +&#xA;N' &#x9;on etl.ItemUID = tia.ItemUID ' +&#xA;N' join Accessory_Pivot ap ' +&#xA;N' &#x9;on tia.AccessoryUID = ap.AccessoryUID ' +&#xA;N' &#x9;and AccNum = 1&#x9; ' +&#xA;N' join ' + @StagingDB + '.dbo.tblTechInventoryHistory ttih ' +&#xA;N' &#x9;on etl.InventoryUID = ttih.InventoryUID&#x9; ' +&#xA;N' &#x9;and etl.EntityTypeUID = ttih.EntityTypeUID ' +&#xA;N' &#x9;and etl.EntityUID = ttih.EntityUID ' +&#xA;N' where import = 1 ' +&#xA;N' and etl.EntityTypeUID &lt;&gt; 2 ' +&#xA;N' and ltrim(rtrim(Accessory1Included)) in (''Y'', ''Yes'', ''T'', ''True'') ' +&#xA;N' UNION ' +&#xA;N' select ttih.InventoryHistoryUID, tia.AccessoryUID, 1, 0,  ' +&#xA;N' &#x9; ttih.CreatedByUserID, ttih.CreatedDate, ttih.LastModifiedByUserID, ttih.LastModifiedDate ' +&#xA;N' from Clients_ETL_Final etl ' +&#xA;N' join ' + @StagingDB + '.dbo.tblTechItemAccessories tia  ' +&#xA;N' &#x9;on etl.ItemUID = tia.ItemUID ' +&#xA;N' join Accessory_Pivot ap ' +&#xA;N' &#x9;on tia.AccessoryUID = ap.AccessoryUID ' +&#xA;N' &#x9;and AccNum = 2&#x9; ' +&#xA;N' join ' + @StagingDB + '.dbo.tblTechInventoryHistory ttih ' +&#xA;N' &#x9;on etl.InventoryUID = ttih.InventoryUID&#x9; ' +&#xA;N' &#x9;and etl.EntityTypeUID = ttih.EntityTypeUID ' +&#xA;N' &#x9;and etl.EntityUID = ttih.EntityUID ' +&#xA;N' where import = 1 ' +&#xA;N' and etl.EntityTypeUID &lt;&gt; 2 ' +&#xA;N' and ltrim(rtrim(Accessory2Included)) in (''Y'', ''Yes'', ''T'', ''True'') ' +&#xA;N' UNION ' +&#xA;N' select ttih.InventoryHistoryUID, tia.AccessoryUID, 1, 0,  ' +&#xA;N' &#x9; ttih.CreatedByUserID, ttih.CreatedDate, ttih.LastModifiedByUserID, ttih.LastModifiedDate ' +&#xA;N' from Clients_ETL_Final etl ' +&#xA;N' join ' + @StagingDB + '.dbo.tblTechItemAccessories tia  ' +&#xA;N' &#x9;on etl.ItemUID = tia.ItemUID ' +&#xA;N' join Accessory_Pivot ap ' +&#xA;N' &#x9;on tia.AccessoryUID = ap.AccessoryUID ' +&#xA;N' &#x9;and AccNum = 3&#x9; ' +&#xA;N' join ' + @StagingDB + '.dbo.tblTechInventoryHistory ttih ' +&#xA;N' &#x9;on etl.InventoryUID = ttih.InventoryUID&#x9; ' +&#xA;N' &#x9;and etl.EntityTypeUID = ttih.EntityTypeUID ' +&#xA;N' &#x9;and etl.EntityUID = ttih.EntityUID ' +&#xA;N' where import = 1 ' +&#xA;N' and etl.EntityTypeUID &lt;&gt; 2 ' +&#xA;N' and ltrim(rtrim(Accessory3Included)) in (''Y'', ''Yes'', ''T'', ''True'') '&#xA;&#xA;--print @SQL&#xA;EXEC sys.sp_executesql @SQL&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@StagingDB"
                    SQLTask:DtsVariableName="User::_02StagingDB"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="130"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Insert Staging and Update ETL\Accesories\tblTechItemAccessories"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{47ED2C92-5BC7-4788-9F18-836B2B18B8A1}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="tblTechItemAccessories"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{6375cd30-80d7-4a1b-b7d0-b0fbd9756daf}"
                  SQLTask:SqlStatementSource="&#xA;declare @StagingDB nvarchar(100)&#xA;set @StagingDB = ?&#xA;&#xA;DECLARE @SQL NVARCHAR(MAX)&#xA;&#xA;SELECT @SQL = &#xA;&#xA;N' INSERT INTO ' + @StagingDB + '.dbo. tblTechItemAccessories ' +&#xA;N' (AccessoryUID, ItemUID, Quantity,  ' +&#xA;N' CreatedByUserID,  CreatedDate, LastModifiedByUserID, LastModifiedDate) ' +&#xA;&#xA;N' select a.AccessoryUID, a.ItemUID, a.AcessoryQuantity, 0, getdate(), 0, getdate()  ' +&#xA;N' from (  ' +&#xA;N' select Distinct ap.AccessoryUID, etl.ItemUID, ap.AcessoryQuantity ' +&#xA;N' from Clients_ETL_Final etl ' +&#xA;N' join Accessory_Pivot ap on etl.ProductName = ap.ProductName ' +&#xA;N' where import = 1 and AccessoryUID is not null and AccNum = 1 ' +&#xA;N' UNION ' +&#xA;N' select Distinct ap.AccessoryUID, etl.ItemUID, ap.AcessoryQuantity ' +&#xA;N' from Clients_ETL_Final etl ' +&#xA;N' join Accessory_Pivot ap on etl.ProductName = ap.ProductName ' +&#xA;N' where import = 1 and AccessoryUID is not null and AccNum = 2 ' +&#xA;N' UNION ' +&#xA;N' select Distinct ap.AccessoryUID, etl.ItemUID, ap.AcessoryQuantity ' +&#xA;N' from Clients_ETL_Final etl ' +&#xA;N' join Accessory_Pivot ap on etl.ProductName = ap.ProductName ' +&#xA;N' where import = 1 and AccessoryUID is not null and AccNum = 3 ' +&#xA;N' ) a ' +&#xA;N' LEFT OUTER JOIN ' + @StagingDB + '.dbo. tblTechItemAccessories ta ' +&#xA;N' on a.AccessoryUID = ta.AccessoryUID and a.ItemUID = ta.ItemUID ' +&#xA;N' where ItemAccessoryUID is null '&#xA;&#xA;--print @SQL&#xA;EXEC sys.sp_executesql @SQL&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@StagingDB"
                    SQLTask:DtsVariableName="User::_02StagingDB"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="130"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Insert Staging and Update ETL\Accesories.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{A8DE39B6-46C8-4E68-AA04-62A2C3E29494}"
              DTS:From="Package\Insert Staging and Update ETL\Accesories\tblTechAccessories"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Insert Staging and Update ETL\Accesories\tblTechItemAccessories" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Insert Staging and Update ETL\Accesories.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{3497CCEA-C3BD-4277-99D1-D05C6CBAAFF2}"
              DTS:From="Package\Insert Staging and Update ETL\Accesories\tblTechItemAccessories"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\Insert Staging and Update ETL\Accesories\tblTechInventoryAccessories" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Insert Staging and Update ETL\Clear Any UIDs"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{1DD9F6EE-D0B7-4C24-82D5-5DE934939659}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Clear Any UIDs"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{6375cd30-80d7-4a1b-b7d0-b0fbd9756daf}"
              SQLTask:SqlStatementSource="update Clients_ETL_Final  set&#xA;&#x9;[ManufacturerUID] = null,&#xA;&#x9;[VendorUID] = null,&#xA;&#x9;[ItemTypeUID] = null,&#xA;&#x9;[ItemUID] = null,&#xA;&#x9;[SiteUID] = null, &#xA;&#x9;[InventoryUID] = null,&#xA;&#x9;[RoomUID] = null,&#xA;&#x9;[RoomTypeUID] = null,&#xA;&#x9;[FundingSourceUID] = null,&#xA;&#x9;[newPONumber] = null,&#xA;&#x9;[PurchaseUID] = null,&#xA;&#x9;[PurchaseItemDetailUID] = null,&#xA;&#x9;[PurchaseItemShipmentUID] = null" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Insert Staging and Update ETL\Custom Fields"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:Disabled="True"
          DTS:DTSID="{750C9751-5CC2-4D5F-9E42-D0362236264D}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Custom Fields">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Insert Staging and Update ETL\Custom Fields\tblTechInventoryExt"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{AFF89594-6024-4623-B698-A26929BCC7B6}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="tblTechInventoryExt"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{6375cd30-80d7-4a1b-b7d0-b0fbd9756daf}"
                  SQLTask:SqlStatementSource="&#xA;-- tbltechinventoryext - this table contains the values for inventory record and the meta data uid for the inventory record&#xA;&#xA;&#xA;declare @StagingDB nvarchar(100)&#xA;set @StagingDB = ?&#xA;&#xA;DECLARE @SQL NVARCHAR(MAX)&#xA;&#xA;SELECT @SQL = &#xA;&#xA;&#xA;N' INSERT INTO ' + @StagingDB + '.dbo.tblTechInventoryExt ' +&#xA;N' &#x9;(InventoryUID, InventoryMetaUID, InventoryExtValue) ' +&#xA;&#xA;N' select InventoryUID, InventoryMetaUID, ' +&#xA;N' LEFT(CustomUDEF1_Value, 50) ' +&#xA;N' from Clients_ETL_Final etl ' +&#xA;N' join CustomFieldMeta_Pivot_Final pvt ' +&#xA;N' &#x9;on pvt.Product_type = etl.ItemTypeName ' +&#xA;N' &#x9;and pvt.DataField = ''CustomUDEF1_Value'' ' +&#xA;N' where InventoryUID is not null and  CustomUDEF1_Value is not null ' +&#xA;&#xA;N' UNION  ' +&#xA;&#xA;N' select InventoryUID, InventoryMetaUID, ' +&#xA;N' LEFT(CustomUDEF2_Value, 50) ' +&#xA;N' from Clients_ETL_Final etl ' +&#xA;N' join CustomFieldMeta_Pivot_Final pvt ' +&#xA;N' &#x9;on pvt.Product_type = etl.ItemTypeName ' +&#xA;N' &#x9;and pvt.DataField = ''CustomUDEF2_Value'' ' +&#xA;N' where InventoryUID is not null and CustomUDEF2_Value is not null ' +&#xA;&#xA;N' UNION ' +&#xA;&#xA;N' select InventoryUID, InventoryMetaUID, ' +&#xA;N' LEFT(CustomUDEF3_Value, 50) ' +&#xA;N' from Clients_ETL_Final etl ' +&#xA;N' join CustomFieldMeta_Pivot_Final pvt ' +&#xA;N' &#x9;on pvt.Product_type = etl.ItemTypeName ' +&#xA;N' &#x9;and pvt.DataField = ''CustomUDEF3_Value'' ' +&#xA;N' where InventoryUID is not null and CustomUDEF3_Value is not null ' +&#xA;&#xA;N' UNION ' +&#xA;&#xA;N' select InventoryUID, InventoryMetaUID, ' +&#xA;N' LEFT(CustomUDEF4_Value, 50) ' +&#xA;N' from Clients_ETL_Final etl ' +&#xA;N' join CustomFieldMeta_Pivot_Final pvt ' +&#xA;N' &#x9;on pvt.Product_type = etl.ItemTypeName ' +&#xA;N' &#x9;and pvt.DataField = ''CustomUDEF4_Value'' ' +&#xA;N' where InventoryUID is not null and CustomUDEF4_Value is not null '&#xA;&#xA;--print @SQL&#xA;EXEC sys.sp_executesql @SQL&#xA;&#xA;&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@StagingDB"
                    SQLTask:DtsVariableName="User::_02StagingDB"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="130"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Insert Staging and Update ETL\Custom Fields\tblTechInventoryMeta"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{2B7EBC9F-D418-4664-A361-498EF21FE2BE}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="tblTechInventoryMeta"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{6375cd30-80d7-4a1b-b7d0-b0fbd9756daf}"
                  SQLTask:SqlStatementSource="&#xA;--Create the Meta table data in TipWeb&#xA;&#xA;&#xA;DECLARE @metrequired nvarchar(10)&#xA;SET @metrequired  = '0'&#xA;&#xA;&#xA;declare @StagingDB nvarchar(100)&#xA;set @StagingDB = ?&#xA;&#xA;DECLARE @SQL NVARCHAR(MAX)&#xA;&#xA;SELECT @SQL = &#xA;&#xA;N' INSERT INTO ' + @StagingDB + '.dbo.tblTechInventoryMeta ' +&#xA;N' (ItemTypeUID, InventoryMetaLabel, InventoryMetaType, InventoryMetaOrder, InventoryMetaRequired) ' +&#xA;&#xA;N' SELECT DISTINCT ItemTypeUID,  ' +&#xA;N' &#x9;name AS metalable,  ' +&#xA;N' &#x9;datatype AS inventorymetatype, ' +&#xA;N' &#x9;ROW_NUMBER () OVER (PARTITION BY ItemTypeUID ORDER BY name) AS sortorder, ' +&#xA;&#x9;@metrequired + N' AS metarequired ' +&#xA;N' FROM CustomFieldMeta_Pivot_Final pv ' +&#xA;N' JOIN ' + @StagingDB + '.dbo.tblTechItemTypes typ ON pv.product_type = typ.ItemTypeName ' +&#xA;&#xA;N' EXCEPT  ' +&#xA;&#xA;N' SELECT ItemTypeUID,  InventoryMetaLabel, InventoryMetaType, InventoryMetaOrder,&#x9;InventoryMetaRequired ' +&#xA;N' &#x9;FROM ' + @StagingDB + '.dbo.tblTechInventoryMeta ' &#xA;&#xA;--print @SQL&#xA;EXEC sys.sp_executesql @SQL&#xA;&#xA;&#xA;SELECT @SQL = &#xA;&#xA;--N' select *  ' +&#xA;N' update pvt set InventoryMetaUID = meta.InventoryMetaUID ' +&#xA;N' from ' + @StagingDB + '.dbo.tblTechInventoryMeta meta ' +&#xA;N' JOIN ' + @StagingDB + '.dbo.tblTechItemTypes typ ON meta.ItemTypeUID = typ.ItemTypeUID ' +&#xA;N' join CustomFieldMeta_Pivot_Final pvt ' +&#xA;N' &#x9;on pvt.product_type = typ.ItemTypeName ' +&#xA;N' &#x9;and meta.InventoryMetaLabel = pvt.name ' +&#xA;N' &#x9;and meta.InventoryMetaType = pvt.datatype ' &#xA;&#xA;--print @SQL&#xA;EXEC sys.sp_executesql @SQL&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@StagingDB"
                    SQLTask:DtsVariableName="User::_02StagingDB"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="130"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Insert Staging and Update ETL\Custom Fields.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{77D6E307-5666-4303-A8B5-14CF3255A9F5}"
              DTS:From="Package\Insert Staging and Update ETL\Custom Fields\tblTechInventoryMeta"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Insert Staging and Update ETL\Custom Fields\tblTechInventoryExt" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Insert Staging and Update ETL\Inventory"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{8E6E805D-7E4D-462A-AE89-84D3FF62879C}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Inventory"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{6375cd30-80d7-4a1b-b7d0-b0fbd9756daf}"
              SQLTask:SqlStatementSource="&#xA;&#xA;/*&#xA;--type = tagged (1) or untagged (2)&#xA;--source = po (2) if PO otherwise initialized (1)&#xA;--EntityType 2 = Room, 3 = Staff, 4 = Student&#xA;&#xA;--------------------------------&#xA; StatusUID &#xA;--------------------------------&#xA;Students 30 (In Use)&#xA;Teacher 31 (In Use)&#xA;Room 26 (Available)  28 (In Use)&#xA;--------&gt;&gt; Be sure they want to use the &quot;Available&quot; status (26) for tags in rooms&#xA;*/&#xA;&#xA;&#xA;declare @StagingDB nvarchar(100)&#xA;set @StagingDB = ?&#xA;&#xA;&#xA;declare @notes nvarchar(max)&#xA;set @notes = N'''Hayes Data Conversion - ' + CONVERT(NVARCHAR(10), GETDATE(), 101)&#xA;&#xA;DECLARE @SQL NVARCHAR(MAX)&#xA;&#xA;SELECT @SQL = &#xA;&#xA;N' Insert into ' + @StagingDB + '.dbo.tblTechInventory ' +&#xA;N' &#x9;(InventoryTypeUID, InventorySourceUID,   ' +&#xA;N' &#x9;&#x9;ItemUID, SiteUID, EntityUID, EntityTypeUID,  ' +&#xA;N' &#x9;&#x9;StatusUID,  ' +&#xA;N' &#x9;&#x9;TechDepartmentUID, ' +&#xA;N' &#x9;&#x9;Tag, Serial,  FundingSourceUID, PurchasePrice, ' +&#xA;N'&#x9;&#x9;PurchaseDate,  ' +&#xA;N' &#x9;&#x9;ExpirationDate,  ' +&#xA;N' &#x9;&#x9;InventoryNotes,  ' +&#xA;N' &#x9;&#x9;CreatedByUserID, CreatedDate, LastModifiedByUserID, LastModifiedDate) ' +&#xA;&#xA;N' SELECT 1 as InventoryTypeUID, (CASE WHEN PONumber IS NOT NULL and len(ltrim(rtrim(PONumber))) &gt; 0 THEN 2 ELSE 1 END)  AS inventorysourceuid,  ' +&#xA;N'&#x9;&#x9;ItemUID, SiteUID, EntityUID, EntityTypeUID,  ' +&#xA;N' &#x9;CASE WHEN EntityTypeUID = 4 THEN 30 WHEN EntityTypeUID = 3 THEN 31 WHEN EntityTypeUID = 2 then  26 END AS StatusUID,  ' +&#xA;N' &#x9;0 AS TechDepartmentUID,  ' + --unless they have departments and that is part of the conversion&#xA;N' &#x9;Tag, Serial, FundingSourceUID, PurchasePrice,  ' +&#xA;N' (CASE WHEN PurchaseDate IS NOT NULL and len(ltrim(rtrim(PurchaseDate))) &gt; 0 then cast(PurchaseDate  as datetime) else null end) as PurchaseDate,  ' +&#xA;N' &#x9;CASE WHEN ProjectedLife IS NOT NULL and PONumber IS NOT NULL and len(ltrim(rtrim(PONumber))) &gt; 0  THEN DATEADD(year, CONVERT(INT, ProjectedLife), CONVERT(DATETIME, PurchaseDate)) end as ExpirationDate, ' +&#xA;N' &#x9;(CASE WHEN TagNotes IS NOT NULL then TagNotes + ''; ''' + @notes + N''' ELSE ' + @notes  + N'''  END) AS inventorynotes, ' +&#xA;N' &#x9;0, GETDATE(), 0, getdate() ' +&#xA;N' &#x9;FROM  clients_etl_Final   etl  ' +&#xA;N' &#x9;where import = 1 ' +&#xA;N' &#x9;and Tag NOT IN (SELECT Tag FROM ' + @StagingDB + '.dbo.tblTechInventory) ' +&#xA;N' &#x9;order by EntityUID '&#xA;&#xA;--print @SQL&#xA;EXEC sys.sp_executesql @SQL&#xA;&#xA;SELECT @SQL = &#xA;--Get the InventoryUID&#xA;--N' SELECT * ' +&#xA;N' update etl set InventoryUID = tw.InventoryUID ' +&#xA;N' FROM  clients_etl_Final  etl  ' +&#xA;N' join ' + @StagingDB + '.dbo.tblTechInventory tw ' +&#xA;N' &#x9;on  etl.ItemUID = tw.ItemUID ' +&#xA;N' &#x9;and etl.SiteUID = tw.Siteuid and etl.EntityUID = tw.EntityUID and etl.EntityTypeUID = tw.EntityTypeUID ' +&#xA;N' &#x9;and etl.Tag = tw.Tag and isNull(etl.Serial, '''') = isnull(tw.Serial, '''') and isnull(etl.FundingSourceUID, '''') = isnull(tw.FundingSourceUID, '''') ' +&#xA;N' where etl.Import = 1  ' +&#xA;N' and tw.InventoryNotes like ''%Hayes Data Conversion%''  ' +&#xA;N' and tw.InventoryTypeUID = 1 '&#xA;&#xA;--print @SQL&#xA;EXEC sys.sp_executesql @SQL" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@StagingDB"
                SQLTask:DtsVariableName="User::_02StagingDB"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Insert Staging and Update ETL\Inventory History"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{1E55BD74-A736-45AE-AB1C-3D8DC023D227}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Inventory History"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{6375cd30-80d7-4a1b-b7d0-b0fbd9756daf}"
              SQLTask:SqlStatementSource="/*&#xA;-- plug all tags in that have a room (should match # results from previous query) &#xA;-- going in with status of 26 (means that they are available) &#xA;-- running this twice just in case there is anyone that you can actually assign it to&#xA;&#xA;--typical history record when no student/staff distrbutions is one record reflecting the room and site the tag is currently at &#xA;--when there are student/staff distributions then there has to be a record reflecting the tag being distributed to a room on a site (Data Conversion Room) first &#xA;--and then another one reflecting the distribution to the student/staff &#xA;&#xA;--------&gt;&gt; Be sure they want to use the &quot;Available&quot; status (26) for tags in rooms and that is what you used to insert into tblTechInventory&#xA;*/&#xA;&#xA;declare @StagingDB nvarchar(100)&#xA;set @StagingDB = ?&#xA;&#xA;&#xA;DECLARE @SQL NVARCHAR(MAX)&#xA;&#xA;-------------------get all tags in with room first----------&#xA;&#xA;SELECT @SQL = &#xA;&#xA;N' insert into ' + @StagingDB + '.dbo.tblTechInventoryHistory  ' +&#xA;N' &#x9;(InventoryUID, InventoryTypeUID, SiteUID, EntityUID, EntityTypeUID, StatusUID,  ' +&#xA;N' &#x9;OriginSiteUID,  OriginEntityUID, OriginEntityTypeUID, OriginStatusUID, ' +&#xA;N' &#x9;InventoryHistoryNotes, CreatedByUserID, CreatedDate, LastModifiedByUserID, LastModifiedDate, ' +&#xA;N' &#x9;ParentInventoryUID, inventorysourceuid, containeruid, origincontaineruid) ' +&#xA;&#xA;N' select etl.InventoryUID, tti.InventoryTypeUID, etl.SiteUID, etl.RoomUID, 2, 26, ' +&#xA;N' &#x9;etl.Siteuid, etl.RoomUID, 2, 26, ' +&#xA;N' &#x9;tti.InventoryNotes, 0, getdate(), 0, getdate(), ' +&#xA;N' &#x9;tti.ParentInventoryUID, inventorysourceuid, 0, 0 ' +&#xA;N' from clients_etl_Final etl ' +&#xA;N' join ' + @StagingDB + '.dbo.tblTechInventory tti on etl.InventoryUID = tti.InventoryUID ' &#xA;&#xA;--print @SQL&#xA;EXEC sys.sp_executesql @SQL&#xA;&#xA;  ----------now bring in all history records for correct entity type &#xA;-- these are the results that matched to a staff member or student&#xA;&#xA;&#xA;SELECT @SQL = &#xA;&#xA;N' insert into ' + @StagingDB + '.dbo.tblTechInventoryHistory  ' +&#xA;N' &#x9;(InventoryUID, InventoryTypeUID, SiteUID, EntityUID, EntityTypeUID, StatusUID,  ' +&#xA;N' &#x9;OriginSiteUID,  OriginEntityUID, OriginEntityTypeUID, OriginStatusUID, ' +&#xA;N' &#x9;InventoryHistoryNotes, CreatedByUserID, CreatedDate, LastModifiedByUserID, LastModifiedDate,  ' +&#xA;N' &#x9;ParentInventoryUID, inventorysourceuid, containeruid, origincontaineruid) ' +&#xA;&#xA;N' select etl.InventoryUID, tti.InventoryTypeUID, etl.SiteUID, etl.EntityUID, etl.EntityTypeUID, tti.StatusUID, ' +&#xA;N' &#x9;etl.Siteuid, etl.RoomUID, 2, 26, ' +&#xA;N' &#x9;tti.InventoryNotes, 0, getdate(), 0, getdate(), ' +&#xA;N' &#x9;tti.ParentInventoryUID, inventorysourceuid, 0, 0 ' +&#xA;N' from clients_etl_Final   etl ' +&#xA;N' join ' + @StagingDB + '.dbo.tblTechInventory tti on etl.InventoryUID = tti.InventoryUID ' +&#xA;N' where etl.EntityTypeUID &lt;&gt; 2  ' +  --not a room&#xA;N' and etl.EntityUID &lt;&gt; etl.RoomUID '&#xA;&#xA;--print @SQL&#xA;EXEC sys.sp_executesql @SQL&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@StagingDB"
                SQLTask:DtsVariableName="User::_02StagingDB"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Insert Staging and Update ETL\Purchase Inventory"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{4EE387A3-1ACE-4C09-989E-F03B1A08A698}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Purchase Inventory"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{6375cd30-80d7-4a1b-b7d0-b0fbd9756daf}"
              SQLTask:SqlStatementSource="-- intersection table &#xA;-- connection between shipments and inventory record&#xA;&#xA;&#xA;declare @StagingDB nvarchar(100)&#xA;set @StagingDB = ?&#xA;&#xA;DECLARE @SQL NVARCHAR(MAX)&#xA;&#xA;SELECT @SQL = &#xA;&#xA;&#xA;N' INSERT INTO ' + @StagingDB + '.dbo.tbltechpurchaseinventory ' +&#xA;N' &#x9;(InventoryUID, PurchaseItemShipmentUID, CreatedByUserID, createdDate, LastModifiedByUserID, lastModifiedDate) ' +&#xA;&#xA;N' SELECT inventoryUID, PurchaseItemShipmentUID, 0, getdate(), 0, getdate() ' +&#xA;N' from clients_etl_Final    ' +&#xA;N' where import = 1 ' +&#xA;N' and InventoryUID is not null ' +&#xA;N' and PurchaseItemShipmentUID is not null ' &#xA;&#xA;--print @SQL&#xA;EXEC sys.sp_executesql @SQL&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@StagingDB"
                SQLTask:DtsVariableName="User::_02StagingDB"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Insert Staging and Update ETL\Purchase Item Detail"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{E98AD1BA-E10E-49B3-969B-E4C1E1230603}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Purchase Item Detail"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{6375cd30-80d7-4a1b-b7d0-b0fbd9756daf}"
              SQLTask:SqlStatementSource="&#xA;&#xA;declare @StagingDB nvarchar(100)&#xA;set @StagingDB = ?&#xA;&#xA;&#xA;DECLARE @SQL NVARCHAR(MAX)&#xA;&#xA;&#xA;SELECT @SQL = &#xA;&#xA;N' INSERT INTO ' + @StagingDB + '.dbo.tblTechPurchaseItemDetails ( ' +&#xA;N' &#x9;PurchaseUID, ItemUID, FundingSourceUID, StatusUID, SiteAddedSiteUID,  ' +&#xA;N' &#x9;QuantityOrdered, QuantityReceived,  ' +&#xA;N' &#x9;PurchasePrice,  ' +&#xA;N' &#x9;AccountCode, TechDepartmentUID,  ' +&#xA;N' &#x9;CreatedByUserID, CreatedDate, LastModifiedByUserID, LastModifiedDate ' +&#xA;N' &#x9;) ' +&#xA;&#xA;N' SELECT  ' +&#xA;N' &#x9;PurchaseUID, itemUID, FundingSourceUID, 33 AS STATUSUID, 1 AS addedsite,  ' +&#xA;N' &#x9;COUNT(tag) AS qtyordered, COUNT(tag) AS qtyreceived,  ' +&#xA;N' &#x9;CAST(isNull(etl.PurchasePrice, 0) as money) AS PURCHASEPRICE, ' +&#xA;N' &#x9;ISNULL(etl.AccountCode, '''') AS accountcode, 0 AS techdeptuid,  ' +&#xA;N' &#x9;0, GETDATE(), 0, GETDATE() ' +&#xA;&#xA;N' FROM clients_etl_Final  etl ' +&#xA;N' where import = 1 ' +&#xA;N' and PurchaseUID is not null ' +&#xA;N' GROUP BY PurchaseUID, itemUID, FundingSourceUID, etl.PurchasePrice , ISNULL(etl.AccountCode, '''') ' +&#xA;N' ORDER BY PurchaseUID, itemUID '&#xA;&#xA;--print @SQL&#xA;EXEC sys.sp_executesql @SQL&#xA;&#xA;SELECT @SQL = &#xA;&#xA;--N' select * ' +&#xA;N' update etl set PurchaseItemDetailUID = tw.PurchaseItemDetailUID ' +&#xA;N' from ' + @StagingDB + '.dbo.tblTechPurchaseItemDetails tw ' +&#xA;N' join clients_etl_Final  etl  ' +&#xA;N' &#x9;on tw.PurchaseUID = etl.PurchaseUID ' +&#xA;N' &#x9;and tw.itemUID = etl.itemUID ' +&#xA;N'  and tw.FundingSourceUID = etl.FundingSourceUID ' +&#xA;N' &#x9;and tw.STATUSUID = 33 ' +&#xA;N' where etl.IMport = 1 ' +&#xA;N' and etl.PurchaseUID is not null&#x9; ' &#xA;&#xA;--print @SQL&#xA;EXEC sys.sp_executesql @SQL&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@StagingDB"
                SQLTask:DtsVariableName="User::_02StagingDB"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Insert Staging and Update ETL\Purchase Item Shipments"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{7E0B59DD-6F3D-4ED0-BBB3-7930592D4742}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Purchase Item Shipments"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{6375cd30-80d7-4a1b-b7d0-b0fbd9756daf}"
              SQLTask:SqlStatementSource="-- shows the distribution of the line items on the PO&#xA;&#xA;declare @StagingDB nvarchar(100)&#xA;set @StagingDB = ?&#xA;&#xA;DECLARE @SQL NVARCHAR(MAX)&#xA;&#xA;&#xA;SELECT @SQL = &#xA;&#xA;N' INSERT INTO ' + @StagingDB + '.dbo.tblTechPurchaseItemShipments ' +&#xA;N'&#x9;(PurchaseItemDetailUID, ShippedToSiteUID,  ' +&#xA;N'&#x9;&#x9;QuantityShipped, StatusUID,  ' +&#xA;N'&#x9;&#x9;CreatedByUserID, CreatedDate, LastModifiedByUserID, LastModifiedDate) ' +&#xA;&#xA;N' SELECT PurchaseItemDetailUID, siteUID AS shippedtositeuid,  ' +&#xA;N' &#x9;COUNT(tag) AS qtyshipped, ' +&#xA;N' &#x9;33, ' +&#xA;N' &#x9;0, GETDATE(), 0, GETDATE() ' +&#xA;N' &#x9;from clients_etl_Final  ' +&#xA;N' &#x9;where import = 1 ' +&#xA;N' &#x9;and PurchaseItemDetailUID is not null ' +&#xA;N' &#x9;group by PurchaseItemDetailUID, siteUID ' &#xA;&#xA;--print @SQL&#xA;EXEC sys.sp_executesql @SQL&#xA;&#xA; &#xA;SELECT @SQL = &#xA;&#xA;--N' select *  ' +&#xA;N' update etl set PurchaseItemShipmentUID = tw.PurchaseItemShipmentUID ' +&#xA;N' from ' + @StagingDB + '.dbo.tblTechPurchaseItemShipments tw ' +&#xA;N' join clients_etl_Final  etl ' +&#xA;N' &#x9;on tw.PurchaseItemDetailUID = etl.PurchaseItemDetailUID ' +&#xA;N' &#x9;and tw.ShippedToSiteUID = etl.siteUID ' +&#xA;N' where etl.Import = 1 ' +&#xA;N' and tw.StatusUID = 33 ' &#x9;&#xA;&#xA;--print @SQL&#xA;EXEC sys.sp_executesql @SQL&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@StagingDB"
                SQLTask:DtsVariableName="User::_02StagingDB"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Insert Staging and Update ETL\Purchase Order"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{C6900A49-3452-4320-99E8-989968B9A860}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Purchase Order"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{6375cd30-80d7-4a1b-b7d0-b0fbd9756daf}"
              SQLTask:SqlStatementSource="&#xA;&#xA;declare @StagingDB nvarchar(100)&#xA;set @StagingDB = ?&#xA;&#xA;declare @notes nvarchar(max)&#xA;set @notes = N'''Hayes Initial Conversion - ' + CONVERT(NVARCHAR(10), GETDATE(), 101)&#xA;&#xA;&#xA;DECLARE @SQL NVARCHAR(MAX)&#xA;&#xA;SELECT @SQL = &#xA;&#xA;N' INSERT INTO ' + @StagingDB + '.dbo.tblTechPurchases ' +&#xA;N' &#x9;(StatusUID, VendorUID, SiteUID, OrderNumber, PurchaseDate, Notes, ' +&#xA;N' &#x9;CreatedByUserID, CreatedDate, LastModifiedByUserID, LastModifiedDate) ' +&#xA;&#xA;N' SELECT statusUID, vendorUID, SiteUID, PONumber, PurchaseDate, Notes, ' +&#xA;N' &#x9;&#x9;createdByUserID, createdDate, lastModifiedbyUserID, lastModifiedDate  ' +&#xA;N' FROM ( ' +&#xA;N' &#x9;&#x9;SELECT ROW_NUMBER () OVER(PARTITION BY PONumber ORDER BY PurchaseDate DESC, SiteUID) AS rownum, ' +&#xA;N' &#x9;&#x9;33 AS statusUID, ' +&#xA;N' &#x9;&#x9;VendorUID, ' +&#xA;N' &#x9;&#x9;SiteUID,  ' +&#xA;N' &#x9;&#x9;PONumber,  ' +&#xA;N' &#x9;&#x9;PurchaseDate, ' + @notes + N''' AS Notes,  ' +&#xA;N' &#x9;&#x9;0 AS createdByUserID, GETDATE() AS createdDate, 0 AS lastModifiedbyUserID,  ' +&#xA;N' &#x9;&#x9;GETDATE() AS lastModifiedDate  ' +&#xA;N' &#x9;&#x9;FROM  ' +&#xA;N' &#x9;&#x9;( ' +&#xA;N' &#x9;&#x9;&#x9;SELECT DISTINCT  ' +&#xA;N' &#x9;&#x9;&#x9;ROW_NUMBER () OVER(PARTITION BY PONumber ORDER BY PurchaseDate DESC, SiteUID) AS rownum, ' +&#xA;N' &#x9;&#x9;&#x9;33 AS statusUID, ' +&#xA;N' &#x9;&#x9;&#x9;ISNULL(VendorName,  ManufacturerName) as vendor, ' +&#xA;N' &#x9;&#x9;&#x9;1 AS SiteUID, ' +&#xA;N' &#x9;&#x9;&#x9;PONumber,  ' +&#xA;N' &#x9;&#x9;&#x9;PurchaseDate,  ' +&#xA;N' &#x9;&#x9;&#x9;VendorUID ' +&#xA;N' &#x9;&#x9;&#x9;FROM clients_etl_Final  AS etl ' +&#xA;N' &#x9;&#x9;&#x9;WHERE import = 1 ' +&#xA;N' &#x9;&#x9;&#x9;and PONumber IS NOT null ' +&#xA;N' &#x9;&#x9;) a ' +&#xA;N' &#x9;) b ' +&#xA;N' WHERE rownum = 1  ' + --id here is the top 1 row with the po number&#xA;N' AND b.PONumber IS NOT NULL  ' +&#xA;N' AND b.PONumber NOT IN (SELECT OrderNumber from ' + @StagingDB + '.dbo.tblTechPurchases) '&#xA;&#xA;--print @SQL&#xA;EXEC sys.sp_executesql @SQL&#xA;&#xA;SELECT @SQL = &#xA;--N' select etl.*  ' +&#xA;N' update etl set PurchaseUID = tpur.PurchaseUID ' +&#xA;N' from ' + @StagingDB + '.dbo.tblTechPurchases tpur ' +&#xA;N' join clients_etl_Final  etl on tpur.OrderNumber = etl.PONumber ' +&#xA;N' where etl.PONumber is not null ' +&#xA;N' and tpur.SiteUID = 1 '&#xA;&#xA;--print @SQL&#xA;EXEC sys.sp_executesql @SQL&#xA;&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@StagingDB"
                SQLTask:DtsVariableName="User::_02StagingDB"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Insert Staging and Update ETL\Room and Room Type"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{71634CF5-EE47-4944-9A02-D79E437B10B9}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Room and Room Type"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{6375cd30-80d7-4a1b-b7d0-b0fbd9756daf}"
              SQLTask:SqlStatementSource="&#xA;declare @StagingDB nvarchar(100)&#xA;set @StagingDB = ?&#xA;&#xA;declare @notes nvarchar(max)&#xA;set @notes = N'''Hayes Initial Conversion - ' + CONVERT(NVARCHAR(10), GETDATE(), 101)&#xA;&#xA;DECLARE @SQL NVARCHAR(MAX)&#xA;&#xA;-------------------- Correct SIS Room Types --------------------------------&#xA;&#xA;SET @SQL = &#xA;'&#xA;UPDATE C&#xA;SET RoomTypeUID = E.RoomTypeUID&#xA;--SELECT DISTINCT A.SiteID,A.RoomNumber,A.RoomType,D.RoomTypeName&#xA;FROM Clients_ETL_Final AS A &#xA;&#xA;INNER JOIN ' + @StagingDB + '.dbo.tblTechSites AS B&#xA;ON A.SiteID=B.SiteID&#xA;&#xA;INNER JOIN ' + @StagingDB + '.dbo.tblUnvRooms AS C&#xA;ON B.SiteUID=C.SiteUID AND A.RoomNumber=C.RoomNumber&#xA;&#xA;INNER JOIn ' + @StagingDB + '.dbo.tblUnvRoomTypes AS D&#xA;ON C.RoomTypeUID=D.RoomTypeUID&#xA;&#xA;INNER JOIN ' + @StagingDB + '.dbo.tblUnvRoomTypes AS E&#xA;ON A.RoomType=E.RoomTypeName&#xA;&#xA;WHERE D.RoomTypeName != A.RoomType '&#xA;&#xA;--print @SQL&#xA;EXEC sys.sp_executesql @SQL&#xA;&#xA;-------------------- Room Type --------------------------------&#xA;&#xA;SELECT @SQL = &#xA;&#xA;N' INSERT INTO ' + @StagingDB + '.dbo.tblUnvRoomTypes ' +&#xA;N' (RoomTypeName, RoomTypeDescription, CreatedByUserID, CreatedDate, LastModifiedByUserID, LastModifiedDate) ' +&#xA;&#xA;N' SELECT DISTINCT RoomType, RoomType AS roomtypedesc, 0, GETDATE(), 0, GETDATE() ' +&#xA;N' from clients_etl_Final etl ' +&#xA;N' WHERE import = 1  ' +&#xA;N' and etl.RoomType IS NOT NULL  ' +&#xA;N' AND etl.Roomtype NOT IN (SELECT RoomTypeName FROM ' + @StagingDB + '.dbo.tblUnvRoomTypes) ' &#xA;&#xA;--print @SQL&#xA;EXEC sys.sp_executesql @SQL&#xA;&#xA;-- update room type uid&#xA;SELECT @SQL = &#xA;--N' select * ' +&#xA;N' update etl set RoomTypeUID = tw.RoomTypeUID ' +&#xA;N' from clients_etl_Final etl ' +&#xA;N' join ' + @StagingDB + '.dbo.tblUnvRoomTypes tw ' +&#xA;N' &#x9;on etl.roomtype = tw.RoomTypeName '&#xA;&#xA;--print @SQL&#xA;EXEC sys.sp_executesql @SQL&#xA;&#xA;-------------------- Room  --------------------------------&#xA;&#xA;SELECT @SQL = &#xA;&#x9;&#xA;N' INSERT INTO ' + @StagingDB + '.dbo.tblUnvRooms ' +&#xA;N' (RoomNumber, RoomDescription, RoomTypeUID, ' +&#xA;N' RoomNotes, SiteUID, Active,  ' +&#xA;N' CreatedByUserID, CreatedDate, LastModifiedByUserID, LastModifiedDate) ' +&#xA;&#xA;N' SELECT DISTINCT RoomNumber, RoomDesc, RoomTypeUID,  ' +&#xA;  @notes + N''', SiteUID, 1,  ' +&#xA;N' &#x9;0, getdate(), 0, getdate() ' +&#xA;N' FROM  ' +&#xA;N' &#x9;( ' +&#xA;N' &#x9;SELECT DISTINCT etl.RoomNumber, etl.RoomDesc, RoomTypeUID, SiteUID ' +&#xA;N' &#x9;FROM clients_etl_Final etl ' +&#xA;N' &#x9;where import = 1 ' +&#xA;N' &#x9;and ltrim(rtrim(RoomNumber)) not in  ' +&#xA;N' &#x9;&#x9;(select ltrim(rtrim(RoomNumber)) from ' + @StagingDB + '.dbo.tblUnvRooms  ' +&#xA;N' &#x9;&#x9;where SiteUID = etl.SiteUID) ' +&#xA;N' &#x9;) a '&#xA;&#x9;&#xA;--print @SQL&#xA;EXEC sys.sp_executesql @SQL&#xA;&#xA;&#xA;SELECT @SQL = &#xA;&#xA;--N' select *  ' +&#xA;N' update etl set RoomUID = tw.RoomUID ' +&#xA;N' from clients_etl_Final etl ' +&#xA;N' join ' + @StagingDB + '.dbo.tblUnvRooms tw ' +&#xA;N' &#x9;on etl.SiteUID = tw.SiteUID and etl.RoomNumber = tw.RoomNumber and etl.RoomTypeUID = tw.RoomTypeUID '  +&#xA;N' where import = 1 '&#xA;&#xA;--print @SQL&#xA;EXEC sys.sp_executesql @SQL&#xA;&#xA;SELECT @SQL = &#xA;&#xA;--N' select *  ' +&#xA;N' update etl set EntityUID= RoomUID ' +&#xA;N' from clients_etl_Final etl ' +&#xA;N' where import = 1 ' +&#xA;N' and EntityTypeUID = 2 ' +&#xA;N' and EntityUID is null '&#xA;&#xA;--print @SQL&#xA;EXEC sys.sp_executesql @SQL&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@StagingDB"
                SQLTask:DtsVariableName="User::_02StagingDB"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Insert Staging and Update ETL\SiteUID"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{7DCAB1B4-305A-4EB4-B4A0-A9D04A6A2FA1}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SiteUID"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{6375cd30-80d7-4a1b-b7d0-b0fbd9756daf}"
              SQLTask:SqlStatementSource="declare @StagingDB nvarchar(100)&#xA;set @StagingDB = ?&#xA;&#xA;DECLARE @SQL NVARCHAR(MAX)&#xA;&#xA;SELECT @SQL = &#xA;N' update clients_etl_Final SET SiteID = ltrim(rtrim(SiteID)) '&#xA;EXEC sys.sp_executesql @SQL&#xA;&#xA;SELECT @SQL = &#xA;--N' select * ' +&#xA;N' update etl set siteUID = tw.SIteUID ' +&#xA;N' from clients_etl_Final etl ' +&#xA;N' join ' + @StagingDB + N'.dbo.tblTechSites tw on etl.SiteID = tw.SiteID '&#xA;&#xA;&#xA;--print @SQL&#xA;EXEC sys.sp_executesql @SQL&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@StagingDB"
                SQLTask:DtsVariableName="User::_02StagingDB"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Insert Staging and Update ETL\tblFundingSources"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{C695FA6C-4176-4766-B4D5-2377B46B769B}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="tblFundingSources"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{6375cd30-80d7-4a1b-b7d0-b0fbd9756daf}"
              SQLTask:SqlStatementSource="declare @StagingDB nvarchar(100)&#xA;set @StagingDB = ?&#xA;&#xA;DECLARE @SQL NVARCHAR(MAX)&#xA;&#xA;&#xA;SELECT @SQL = &#xA;N' insert into ' + @StagingDB + '.dbo.tblFundingSources ' +&#xA;N' &#x9;(FundingSource, FundingDesc, Active, ApplicationUID) ' +&#xA;&#x9;&#xA;N' SELECT Distinct FundingSource, fundingsource, 1, 2  ' +&#xA;N' FROM clients_etl_Final  ' +&#xA;N' WHERE import = 1 ' +&#xA;N' and ltrim(rtrim(FundingSource)) not in  ' +&#xA;N' &#x9;(select FundingSource from ' + @StagingDB + '.dbo.tblFundingSources ' +&#xA;N' &#x9;&#x9;where applicationUID = 2) '&#xA;&#x9;&#x9;&#xA;--print @SQL&#xA;EXEC sys.sp_executesql @SQL&#xA;&#xA;&#xA;SELECT @SQL = &#xA;--N' select *  ' +&#xA;N' update etl set FundingSourceUID = tw.FundingSourceUID ' +&#xA;N' from ' + @StagingDB + '.dbo.tblFundingSources tw ' +&#xA;N' join clients_etl_Final  etl on tw.FundingSource = etl.FundingSource ' +&#xA;N' &#x9;and applicationUID = 2 '&#xA;&#x9;&#x9;&#xA;--print @SQL&#xA;EXEC sys.sp_executesql @SQL&#xA;&#x9;&#x9;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@StagingDB"
                SQLTask:DtsVariableName="User::_02StagingDB"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Insert Staging and Update ETL\tblTechItems"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{0291C000-55B7-42A3-AE42-1262D68043E4}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="tblTechItems"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{6375cd30-80d7-4a1b-b7d0-b0fbd9756daf}"
              SQLTask:SqlStatementSource="declare @StagingDB nvarchar(100)&#xA;set @StagingDB = ?&#xA;&#xA;&#xA;declare @notes nvarchar(max)&#xA;set @notes = 'Hayes Initial Conversion - ' + CONVERT(NVARCHAR(10), GETDATE(), 101)&#xA;&#xA;DECLARE @SQL NVARCHAR(MAX)&#xA;&#xA;SELECT @SQL = '&#xA;INSERT INTO '+ @StagingDB  +'.dbo.tblTechItems  &#x9;(ItemNumber, &#x9;ItemName, ItemDescription, ItemTypeUID,  &#x9;ModelNumber, ManufacturerUID, ItemSuggestedPrice,  &#x9;AreaUID, ItemNotes, &#x9;SKU, SerialRequired, Active,  &#x9;&#xA;CreatedByUserID, CreatedDate, LastModifiedByUserID, LastModifiedDate, projectedlife)  &#xA;&#xA;SELECT DISTINCT ''H'' + CONVERT(VARCHAR(20), A.ProductNumber) as ProductNumber, &#x9;LEFT(A.ProductName, 100) AS itemname, A.ProductName, A.ItemTypeUID,A.ModelNumber, A.ManufacturerUID, A.ItemSuggestedPrice, &#x9;&#xA;0 AS areaUID, '''+ @notes +''', &#x9;MAX(A.SKU) AS SKU, CASE WHEN A.serial_required = ''Y'' THEN 1 ELSE 0 END  AS SerialRequired, 1, 0, getdate(), 0, getdate(), 0 as Projectedlife  &#xA;FROM clients_etl_Final AS A   &#xA;&#xA;LEFT JOIN '+ @StagingDB  +'.dbo.tblTechItems AS B&#xA;ON LEFT(A.ProductName, 100)=B.ItemName AND A.ItemTypeUID=B.ItemTypeUID&#xA;&#xA;where import = 1  &#xA;AND B.ItemUID IS NULL&#xA; &#xA;GROUP BY A.[ProductNumber],A.[ProductName],  A.ItemTypeUID, A.ModelNumber,   A.ManufacturerUID,A.ItemSuggestedPrice, A.serial_required,  A.ProductInfo1, A.ProductInfo2, A.ProductInfo3, A.ProjectedLife    &#xA;'&#xA;&#xA;--print @SQL&#xA;EXEC sys.sp_executesql @SQL&#xA;&#xA;----------------------&#xA;&#xA;SELECT @SQL = &#xA;&#xA;--N' select * ' +&#xA;N' update etl set ItemUID = tw.ItemUID ' +&#xA;N' from ' + @StagingDB  + N'.dbo.tblTechItems tw ' +&#xA;N' inner join clients_etl_Final etl &#xA;on tw.itemname = LEFT(etl.ProductName, 100) AND tw.ItemTypeUID=etl.ItemTypeUID' +&#xA;N' where etl.import = 1 '&#xA;&#xA;--print @SQL&#xA;EXEC sys.sp_executesql @SQL&#xA;&#xA;&#xA;SELECT @SQL = &#xA;--N' select * ' +&#xA;N' Update tw set ProjectedLife = etl.ProjectedLife  ' +&#xA;N' from ' + @StagingDB  + '.dbo.tblTechItems tw  ' +&#xA;N' join clients_etl_Final etl on tw.ItemUID = etl.ItemUID ' +&#xA;N' where etl.import = 1 ' +&#xA;N' and etl.ProjectedLife &lt;&gt; 0 '&#xA;&#xA;--print @SQL&#xA;EXEC sys.sp_executesql @SQL&#xA;&#xA;declare @MaxProdNum int&#xA;select @MaxProdNum = max(ProductNumber) from clients_etl_Final&#xA;--print @MaxProdNum&#xA;&#xA;&#xA;SELECT @SQL = &#xA;--N' select * ' +&#xA;N' update tw set value = ''' + cast(@MaxProdNum as varchar) + &#xA;N''' FROM ' + @StagingDB + N'.dbo.tblUnvCounter tw ' +&#xA;N' WHERE CounterUID = 4 ' &#xA;--print @SQL&#xA;EXEC sys.sp_executesql @SQL&#xA;&#xA;&#xA;---------------------- Setting Parent Tags ----------------------&#xA;SET @SQL = '&#xA;UPDATE C&#xA;SET ParentInventoryUID = B.InventoryUID&#xA;FROM Clients_ETL_Final AS A&#xA;&#xA;INNER JOIN '+ @StagingDB +'.dbo.tblTechInventory AS B&#xA;ON A.ParentTag=B.Tag&#xA;&#xA;INNER JOIN '+ @StagingDB +'.dbo.tblTechInventory AS C&#xA;ON A.Tag=C.Tag&#xA;&#xA;WHERE A.ParentTag != ''''&#xA;'&#xA;--print @SQL&#xA;EXEC(@SQL)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@StagingDB"
                SQLTask:DtsVariableName="User::_02StagingDB"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Insert Staging and Update ETL\tblTechItemTypes"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{0B12600D-2FB9-45CF-AF1C-E01B02CCAF70}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="tblTechItemTypes"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{6375cd30-80d7-4a1b-b7d0-b0fbd9756daf}"
              SQLTask:SqlStatementSource="declare @StagingDB nvarchar(100)&#xA;set @StagingDB = ?&#xA;&#xA;&#xA;DECLARE @SQL NVARCHAR(MAX)&#xA;&#xA;SELECT @SQL = &#xA;&#xA;N' INSERT INTO ' + @StagingDB  + N'.dbo.tblTechItemTypes ' +&#xA;N' &#x9;(ItemTypeName, ItemTypeDescription, CreatedByUserID, CreatedDate, LastModifiedByUserID, LastModifiedDate) ' +&#xA;N' SELECT DISTINCT ItemTypeName, ItemTypeName, 0, GETDATE(), 0, GETDATE()  ' +&#xA;N' FROM clients_etl_Final ' +&#xA;N' WHERE import = 1 ' +&#xA;N' and ItemTypeName  NOT IN (SELECT ItemTypeName FROM ' + @StagingDB  + N'.dbo.tblTechItemTypes) '&#xA;&#xA;--print @SQL&#xA;EXEC sys.sp_executesql @SQL&#xA;&#xA;------------------------&#xA;&#xA;&#xA;SELECT @SQL = &#xA;&#xA;--N' select * ' +&#xA;N' update etl set ItemTypeUID = tw.ItemTypeUID ' +&#xA;N' from ' + @StagingDB  + N'.dbo.tblTechItemTypes tw ' +&#xA;N' join clients_etl_Final etl on tw.itemtypename = etl.itemtypename '&#xA;&#xA;--print @SQL&#xA;EXEC sys.sp_executesql @SQL&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@StagingDB"
                SQLTask:DtsVariableName="User::_02StagingDB"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Insert Staging and Update ETL\tblUnvManufacturers"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{2F7A645A-D05C-4571-B7B1-4B9C7416BC38}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="tblUnvManufacturers"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{6375cd30-80d7-4a1b-b7d0-b0fbd9756daf}"
              SQLTask:SqlStatementSource="&#xA;declare @StagingDB nvarchar(100)&#xA;set @StagingDB = ?&#xA;&#xA;DECLARE @SQL NVARCHAR(MAX)&#xA;&#xA;SELECT @SQL = &#xA;&#xA;N' insert into ' + @StagingDB + N'.dbo.tblUnvManufacturers ' +&#xA;N' (ManufacturerName, CreatedByUserID, CreatedDate, LastModifiedByUserID, LastModifiedDate) ' +&#xA;N' select DISTINCT ManufacturerName,0, GETDATE(), 0, GETDATE () ' +&#xA;N' FROM Clients_ETL_Final ' +&#xA;N' WHERE import = 1 ' + &#xA;N'&#x9;and ManufacturerName not in  ' +&#xA;N'&#x9;(select ManufacturerName from ' + @StagingDB + N'.dbo.tblUnvManufacturers) '&#xA;&#xA;--print @SQL&#xA;EXEC sys.sp_executesql @SQL&#xA;&#xA;------------------------&#xA;SELECT @SQL = &#xA;&#xA;--N' select * ' +&#xA;N' update etl set ManufacturerUID = tw.ManufacturerUID ' +&#xA;N' from ' + @StagingDB + N'.dbo.tblUnvManufacturers tw ' +&#xA;N' join Clients_ETL_Final etl on tw.ManufacturerName = etl.ManufacturerName ' &#xA;&#xA;--print @SQL&#xA;EXEC sys.sp_executesql @SQL&#xA;&#xA;&#xA;------------------------&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@StagingDB"
                SQLTask:DtsVariableName="User::_02StagingDB"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Insert Staging and Update ETL\tblVendor"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{72D5394C-8C89-48C5-B05B-446C8D0CECCA}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="tblVendor"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{6375cd30-80d7-4a1b-b7d0-b0fbd9756daf}"
              SQLTask:SqlStatementSource="&#xA;declare @StagingDB nvarchar(100)&#xA;set @StagingDB = ?&#xA;&#xA;declare @notes nvarchar(max)&#xA;set @notes = N'''Hayes Initial Conversion - ' + CONVERT(NVARCHAR(10), GETDATE(), 101)&#xA;&#xA;DECLARE @SQL NVARCHAR(MAX)&#xA;&#xA;SELECT @SQL = &#xA;&#xA;N' INSERT INTO ' + @StagingDB + '.dbo.tblVendor ' +&#xA;N'        (VendorName, Notes, Active, UserID, ModifiedDate, ApplicationUID) ' +&#xA;N' SELECT DISTINCT VendorName, '+ @notes + N''', 1, 0, GETDATE(), 2 ' +&#xA;N' FROM dbo.Clients_ETL_Final ' +&#xA;N' WHERE import = 1  ' +&#xA;N' and VendorName not in (select VendorName from  ' + @StagingDB + N'.dbo.tblvendor where ApplicationUID = 2) '&#xA;&#xA;--print @SQL&#xA;EXEC sys.sp_executesql @SQL&#xA;&#xA;------------------------&#xA;SELECT @SQL = &#xA;&#xA;--N' select * ' +&#xA;N' update etl set VendorUID = tw.VendorID ' +&#xA;N' from ' + @StagingDB + N'.dbo.tblVendor tw ' +&#xA;N' join Clients_ETL_Final etl on tw.VendorName = etl.VendorName '&#xA;&#xA;--print @SQL&#xA;EXEC sys.sp_executesql @SQL&#xA;&#xA;&#xA;------------------------&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@StagingDB"
                SQLTask:DtsVariableName="User::_02StagingDB"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Insert Staging and Update ETL.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{7EC4842B-A7EE-4464-B105-BB83327CA7C5}"
          DTS:From="Package\Insert Staging and Update ETL\tblUnvManufacturers"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Insert Staging and Update ETL\tblVendor" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Insert Staging and Update ETL.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{D2B20982-5C28-440B-9C17-008AF6D60EDF}"
          DTS:From="Package\Insert Staging and Update ETL\tblVendor"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Insert Staging and Update ETL\tblTechItemTypes" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Insert Staging and Update ETL.PrecedenceConstraints[Constraint 10]"
          DTS:CreationName=""
          DTS:DTSID="{36DF1B33-07B9-4BCD-A289-831A12D54EB0}"
          DTS:From="Package\Insert Staging and Update ETL\Purchase Item Detail"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 10"
          DTS:To="Package\Insert Staging and Update ETL\Purchase Item Shipments" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Insert Staging and Update ETL.PrecedenceConstraints[Constraint 11]"
          DTS:CreationName=""
          DTS:DTSID="{2DB5126C-D8DB-4314-8DC8-29B47D2AA117}"
          DTS:From="Package\Insert Staging and Update ETL\Purchase Item Shipments"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 11"
          DTS:To="Package\Insert Staging and Update ETL\Purchase Inventory" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Insert Staging and Update ETL.PrecedenceConstraints[Constraint 12]"
          DTS:CreationName=""
          DTS:DTSID="{4DBC7CCF-044A-4B1D-8CCC-053D874FD5B0}"
          DTS:EvalOp="3"
          DTS:Expression="@_17UseAccessories == 1"
          DTS:From="Package\Insert Staging and Update ETL\Purchase Inventory"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 12"
          DTS:To="Package\Insert Staging and Update ETL\Accesories" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Insert Staging and Update ETL.PrecedenceConstraints[Constraint 13]"
          DTS:CreationName=""
          DTS:DTSID="{DE08BF1B-8A0B-491A-AC2C-5F0407C4B320}"
          DTS:EvalOp="3"
          DTS:Expression="@_19UseCustomFields == 1"
          DTS:From="Package\Insert Staging and Update ETL\Accesories"
          DTS:ObjectName="Constraint 13"
          DTS:To="Package\Insert Staging and Update ETL\Custom Fields" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Insert Staging and Update ETL.PrecedenceConstraints[Constraint 14]"
          DTS:CreationName=""
          DTS:DTSID="{23926306-E020-4899-A76B-4CAAE8D625F6}"
          DTS:EvalOp="3"
          DTS:Expression="@_19UseCustomFields == 1 &amp;&amp; @_17UseAccessories != 1"
          DTS:From="Package\Insert Staging and Update ETL\Purchase Inventory"
          DTS:ObjectName="Constraint 14"
          DTS:To="Package\Insert Staging and Update ETL\Custom Fields" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Insert Staging and Update ETL.PrecedenceConstraints[Constraint 15]"
          DTS:CreationName=""
          DTS:DTSID="{09903252-D355-4694-8A81-4D7598A28743}"
          DTS:From="Package\Insert Staging and Update ETL\Clear Any UIDs"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 15"
          DTS:To="Package\Insert Staging and Update ETL\tblUnvManufacturers" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Insert Staging and Update ETL.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{E5D11816-6196-4A94-92A9-A5EB00642EC0}"
          DTS:From="Package\Insert Staging and Update ETL\tblTechItemTypes"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Insert Staging and Update ETL\tblTechItems" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Insert Staging and Update ETL.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{3F317BC2-8A62-47BD-86A7-92B7FEA9BF5A}"
          DTS:From="Package\Insert Staging and Update ETL\tblTechItems"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\Insert Staging and Update ETL\SiteUID" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Insert Staging and Update ETL.PrecedenceConstraints[Constraint 4]"
          DTS:CreationName=""
          DTS:DTSID="{CE7F3A46-CD6B-463F-B755-69022C77A214}"
          DTS:From="Package\Insert Staging and Update ETL\SiteUID"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 4"
          DTS:To="Package\Insert Staging and Update ETL\Room and Room Type" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Insert Staging and Update ETL.PrecedenceConstraints[Constraint 5]"
          DTS:CreationName=""
          DTS:DTSID="{2BBDEF87-42E2-455D-97A5-5AA98A56B0EB}"
          DTS:From="Package\Insert Staging and Update ETL\Room and Room Type"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 5"
          DTS:To="Package\Insert Staging and Update ETL\tblFundingSources" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Insert Staging and Update ETL.PrecedenceConstraints[Constraint 6]"
          DTS:CreationName=""
          DTS:DTSID="{0320C29A-D47E-472D-81CE-039CA0921A96}"
          DTS:From="Package\Insert Staging and Update ETL\tblFundingSources"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 6"
          DTS:To="Package\Insert Staging and Update ETL\Inventory" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Insert Staging and Update ETL.PrecedenceConstraints[Constraint 7]"
          DTS:CreationName=""
          DTS:DTSID="{8EC111A8-E6DC-47E2-A8ED-AD228E697D8F}"
          DTS:From="Package\Insert Staging and Update ETL\Inventory"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 7"
          DTS:To="Package\Insert Staging and Update ETL\Inventory History" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Insert Staging and Update ETL.PrecedenceConstraints[Constraint 8]"
          DTS:CreationName=""
          DTS:DTSID="{D4E3525D-715E-46E0-B1C9-18978853E70A}"
          DTS:From="Package\Insert Staging and Update ETL\Inventory History"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 8"
          DTS:To="Package\Insert Staging and Update ETL\Purchase Order" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Insert Staging and Update ETL.PrecedenceConstraints[Constraint 9]"
          DTS:CreationName=""
          DTS:DTSID="{11A7D318-B1A2-402E-8A92-88F87B3AC714}"
          DTS:From="Package\Insert Staging and Update ETL\Purchase Order"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 9"
          DTS:To="Package\Insert Staging and Update ETL\Purchase Item Detail" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Prepare Data"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{9a82fe62-06ba-4ecc-9890-a70e025cf04e}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Prepare Data">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Prepare Data\Assign Variables"
          DTS:CreationName="STOCK:FOREACHLOOP"
          DTS:Description="Foreach Loop Container"
          DTS:DTSID="{2b4258b7-2af5-46f7-ace5-17a5402cd273}"
          DTS:ExecutableType="STOCK:FOREACHLOOP"
          DTS:LocaleID="-1"
          DTS:ObjectName="Assign Variables">
          <DTS:ForEachEnumerator
            DTS:CreationName="Microsoft.ForEachADOEnumerator"
            DTS:DTSID="{ea2f6d39-332d-4de7-a1c3-24a3cf9a317e}"
            DTS:ObjectName="{676F30E8-BB67-4273-95A1-581CF12746B5}">
            <DTS:ObjectData>
              <FEEADO
                EnumType="EnumerateRowsInFirstTable"
                VarName="User::__rsConfig" />
            </DTS:ObjectData>
          </DTS:ForEachEnumerator>
          <DTS:Variables />
          <DTS:Executables />
          <DTS:ForEachVariableMappings>
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{20AAFB28-F40E-438B-9A20-9BF988F4E750}"
              DTS:ObjectName="{20AAFB28-F40E-438B-9A20-9BF988F4E750}"
              DTS:ValueIndex="0"
              DTS:VariableName="User::_00ETLDatabase" />
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{4672BE73-9514-440D-96F3-2888C0EB8738}"
              DTS:ObjectName="{4672BE73-9514-440D-96F3-2888C0EB8738}"
              DTS:ValueIndex="1"
              DTS:VariableName="User::_02StagingDB" />
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{DCF60FC1-E94C-4D3F-8A98-772A0E08D4E3}"
              DTS:ObjectName="{DCF60FC1-E94C-4D3F-8A98-772A0E08D4E3}"
              DTS:ValueIndex="2"
              DTS:VariableName="User::_17UseAccessories" />
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{18DD4B7E-B5E7-4078-89AD-B76E17435A1F}"
              DTS:ObjectName="{18DD4B7E-B5E7-4078-89AD-B76E17435A1F}"
              DTS:ValueIndex="3"
              DTS:VariableName="User::_19UseCustomFields" />
          </DTS:ForEachVariableMappings>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Prepare Data\Fix User Accounts"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{AF5CDF66-E270-46B8-9A41-247AF4605B56}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Fix User Accounts"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{e5a48323-38b7-45b0-8073-64dbfcde0190}"
              SQLTask:SqlStatementSource="IF NOT EXISTS (SELECT Name FROM sys.sysusers WHERE issqluser = 1 AND name = 'appDataConversionTool')&#xA;BEGIN&#xA;&#x9;CREATE USER [appDataConversionTool] FOR LOGIN [appDataConversionTool] WITH DEFAULT_SCHEMA=[dbo]   &#xA;&#x9;ALTER ROLE [db_owner] ADD MEMBER [appDataConversionTool]&#xA;END&#xA;&#xA;&#xA;--Part 2 - Fix orphaned users in current Database&#xA;DECLARE @SQL VARCHAR(100)&#xA;&#xA;DECLARE curSQL CURSOR&#xA;        FOR SELECT&#xA;                'EXEC sp_change_users_login ''UPDATE_ONE'', ''' + name&#xA;                + ''', ''' + name + ''''&#xA;            FROM&#xA;                sysusers&#xA;            WHERE&#xA;                issqluser = 1&#xA;                AND name = 'TIPWeb'&#xA;&#xA;OPEN curSQL&#xA;&#xA;FETCH curSQL INTO @SQL&#xA;&#xA;WHILE @@FETCH_STATUS = 0&#xA;      BEGIN&#xA;            EXEC (&#xA;                  @SQL&#xA;                )&#xA;            FETCH curSQL INTO @SQL&#xA;      END&#xA;&#xA;CLOSE curSQL&#xA;DEALLOCATE curSQL" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Prepare Data\Get Client Variables"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{70303854-a779-44a6-b78c-ee1eecefe48d}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Get Client Variables"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server v10; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              BLOBTempStoragePath=""
              bufferTempStoragePath=""
              version="1">
              <components>
                <component
                  refId="Package\Prepare Data\Get Client Variables\OLE DB Source"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SqlServer v10; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="OLE DB Source"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable">User::__ConfigSQL</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Prepare Data\Get Client Variables\OLE DB Source.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[DataConversionConfiguration]"
                      connectionManagerRefId="Package.ConnectionManagers[DataConversionConfiguration]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Prepare Data\Get Client Variables\OLE DB Source.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Prepare Data\Get Client Variables\OLE DB Source.Outputs[OLE DB Source Output].Columns[ETLDBName]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Prepare Data\Get Client Variables\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ETLDBName]"
                          length="75"
                          lineageId="Package\Prepare Data\Get Client Variables\OLE DB Source.Outputs[OLE DB Source Output].Columns[ETLDBName]"
                          name="ETLDBName"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Prepare Data\Get Client Variables\OLE DB Source.Outputs[OLE DB Source Output].Columns[StagingDBName]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Prepare Data\Get Client Variables\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[StagingDBName]"
                          length="75"
                          lineageId="Package\Prepare Data\Get Client Variables\OLE DB Source.Outputs[OLE DB Source Output].Columns[StagingDBName]"
                          name="StagingDBName"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Prepare Data\Get Client Variables\OLE DB Source.Outputs[OLE DB Source Output].Columns[UseAccessories]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Prepare Data\Get Client Variables\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[UseAccessories]"
                          lineageId="Package\Prepare Data\Get Client Variables\OLE DB Source.Outputs[OLE DB Source Output].Columns[UseAccessories]"
                          name="UseAccessories"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Prepare Data\Get Client Variables\OLE DB Source.Outputs[OLE DB Source Output].Columns[UseCustomField]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Prepare Data\Get Client Variables\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[UseCustomField]"
                          lineageId="Package\Prepare Data\Get Client Variables\OLE DB Source.Outputs[OLE DB Source Output].Columns[UseCustomField]"
                          name="UseCustomField"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Prepare Data\Get Client Variables\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ETLDBName]"
                          codePage="1252"
                          dataType="str"
                          length="75"
                          name="ETLDBName" />
                        <externalMetadataColumn
                          refId="Package\Prepare Data\Get Client Variables\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[StagingDBName]"
                          codePage="1252"
                          dataType="str"
                          length="75"
                          name="StagingDBName" />
                        <externalMetadataColumn
                          refId="Package\Prepare Data\Get Client Variables\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[UseAccessories]"
                          dataType="i4"
                          name="UseAccessories" />
                        <externalMetadataColumn
                          refId="Package\Prepare Data\Get Client Variables\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[UseCustomField]"
                          dataType="i4"
                          name="UseCustomField" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Prepare Data\Get Client Variables\OLE DB Source.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Prepare Data\Get Client Variables\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ETLDBName]"
                          codePage="1252"
                          dataType="str"
                          length="75"
                          lineageId="Package\Prepare Data\Get Client Variables\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ETLDBName]"
                          name="ETLDBName" />
                        <outputColumn
                          refId="Package\Prepare Data\Get Client Variables\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[StagingDBName]"
                          codePage="1252"
                          dataType="str"
                          length="75"
                          lineageId="Package\Prepare Data\Get Client Variables\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[StagingDBName]"
                          name="StagingDBName" />
                        <outputColumn
                          refId="Package\Prepare Data\Get Client Variables\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[UseAccessories]"
                          dataType="i4"
                          lineageId="Package\Prepare Data\Get Client Variables\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[UseAccessories]"
                          name="UseAccessories" />
                        <outputColumn
                          refId="Package\Prepare Data\Get Client Variables\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[UseCustomField]"
                          dataType="i4"
                          lineageId="Package\Prepare Data\Get Client Variables\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[UseCustomField]"
                          name="UseCustomField" />
                        <outputColumn
                          refId="Package\Prepare Data\Get Client Variables\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Prepare Data\Get Client Variables\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Prepare Data\Get Client Variables\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Prepare Data\Get Client Variables\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Prepare Data\Get Client Variables\Recordset Destination"
                  componentClassID="Microsoft.RecordsetDestination"
                  contactInfo="Recordset Destination;Microsoft Corporation; Microsoft SqlServer v10; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates and populates an in-memory ADO recordset."
                  name="Recordset Destination">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the recordset."
                      name="VariableName">User::__rsConfig</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Prepare Data\Get Client Variables\Recordset Destination.Inputs[Recordset Destination Input]"
                      hasSideEffects="true"
                      name="Recordset Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Prepare Data\Get Client Variables\Recordset Destination.Inputs[Recordset Destination Input].Columns[ETLDBName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="75"
                          cachedName="ETLDBName"
                          lineageId="Package\Prepare Data\Get Client Variables\OLE DB Source.Outputs[OLE DB Source Output].Columns[ETLDBName]" />
                        <inputColumn
                          refId="Package\Prepare Data\Get Client Variables\Recordset Destination.Inputs[Recordset Destination Input].Columns[StagingDBName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="75"
                          cachedName="StagingDBName"
                          lineageId="Package\Prepare Data\Get Client Variables\OLE DB Source.Outputs[OLE DB Source Output].Columns[StagingDBName]" />
                        <inputColumn
                          refId="Package\Prepare Data\Get Client Variables\Recordset Destination.Inputs[Recordset Destination Input].Columns[UseAccessories]"
                          cachedDataType="i4"
                          cachedName="UseAccessories"
                          lineageId="Package\Prepare Data\Get Client Variables\OLE DB Source.Outputs[OLE DB Source Output].Columns[UseAccessories]" />
                        <inputColumn
                          refId="Package\Prepare Data\Get Client Variables\Recordset Destination.Inputs[Recordset Destination Input].Columns[UseCustomField]"
                          cachedDataType="i4"
                          cachedName="UseCustomField"
                          lineageId="Package\Prepare Data\Get Client Variables\OLE DB Source.Outputs[OLE DB Source Output].Columns[UseCustomField]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Prepare Data\Get Client Variables.Paths[OLE DB Source Output]"
                  endId="Package\Prepare Data\Get Client Variables\Recordset Destination.Inputs[Recordset Destination Input]"
                  name="OLE DB Source Output"
                  startId="Package\Prepare Data\Get Client Variables\OLE DB Source.Outputs[OLE DB Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Prepare Data.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{88535EC7-F5F0-4DDB-B1CF-FF7B7BBA414E}"
          DTS:From="Package\Prepare Data\Get Client Variables"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Prepare Data\Assign Variables" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Prepare Data.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{8F5B5737-F141-4EC2-A438-5449BF5EDD0C}"
          DTS:From="Package\Prepare Data\Assign Variables"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Prepare Data\Fix User Accounts" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Rollback Transaction"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{BF94362C-6CFD-477F-AA55-03935D79EBC6}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Rollback Transaction"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{e5a48323-38b7-45b0-8073-64dbfcde0190}"
          SQLTask:SqlStatementSource="ROLLBACK TRAN" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Success Processes"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{F184E529-FDA8-44BC-A17E-09CD520D2777}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Success Processes">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Success Processes\Commit Transaction"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{E8EF9CBA-8384-4053-863B-05888CB3B35F}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Commit Transaction"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{e5a48323-38b7-45b0-8073-64dbfcde0190}"
              SQLTask:SqlStatementSource="COMMIT TRAN" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Success Processes\Create Conversion Report"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{2ebdc5cf-0751-414b-bb58-9be4de191dcb}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create Conversion Report"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_817d1d18b4a3442da5beb9c6a53a2b15"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="VisualBasic"
              ReadOnlyVariables="User::___0Recordkey,User::FolderName,User::RootPath">
              <ProjectItem
                Name="My Project\AssemblyInfo.vb"
                Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("ST_8a64a78dc3a14df19e76c1106e01c2b8")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("ST_8a64a78dc3a14df19e76c1106e01c2b8")> 
<Assembly: AssemblyCopyright("Copyright @  2019")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("ed9e13df-5893-4099-9b0a-40a2bc478d99")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.vb"
                Encoding="UTF8"><![CDATA[#Region "Help:  Introduction to the script task"
'The Script Task allows you to perform virtually any operation that can be accomplished in
'a .Net application within the context of an Integration Services control flow. 

'Expand the other regions which have "Help" prefixes for examples of specific ways to use
'Integration Services features within this script task.
#End Region


#Region "Imports"
Imports System
Imports System.Data
Imports System.Math
Imports Microsoft.SqlServer.Dts.Runtime
#End Region

'ScriptMain is the entry point class of the script.  Do not change the name, attributes,
'or parent of this class.
<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute()> _
<System.CLSCompliantAttribute(False)> _
Partial Public Class ScriptMain
    Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

#Region "Help:  Using Integration Services variables and parameters in a script"
    'To use a variable in this script, first ensure that the variable has been added to 
    'either the list contained in the ReadOnlyVariables property or the list contained in 
    'the ReadWriteVariables property of this script task, according to whether or not your
    'code needs to write to the variable.  To add the variable, save this script, close this instance of
    'Visual Studio, and update the ReadOnlyVariables and 
    'ReadWriteVariables properties in the Script Transformation Editor window.
    'To use a parameter in this script, follow the same steps. Parameters are always read-only.

    'Example of reading from a variable:
    ' startTime = Dts.Variables("System::StartTime").Value

    'Example of writing to a variable:
    ' Dts.Variables("User::myStringVariable").Value = "new value"

    'Example of reading from a package parameter:
    ' batchId = Dts.Variables("$Package::batchId").Value

    'Example of reading from a project parameter:
    ' batchId = Dts.Variables("$Project::batchId").Value

    'Example of reading from a sensitive project parameter:
    ' batchId = Dts.Variables("$Project::batchId").GetSensitiveValue()
#End Region

#Region "Help:  Firing Integration Services events from a script"
    'This script task can fire events for logging purposes.

    'Example of firing an error event:
    ' Dts.Events.FireError(18, "Process Values", "Bad value", "", 0)

    'Example of firing an information event:
    ' Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, fireAgain)

    'Example of firing a warning event:
    ' Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0)
#End Region

#Region "Help:  Using Integration Services connection managers in a script"
    'Some types of connection managers can be used in this script task.  See the topic 
    '"Working with Connection Managers Programatically" for details.

    'Example of using an ADO.Net connection manager:
    ' Dim rawConnection As Object = Dts.Connections("Sales DB").AcquireConnection(Dts.Transaction)
    ' Dim myADONETConnection As SqlConnection = CType(rawConnection, SqlConnection)
    ' <Use the connection in some code here, then release the connection>
    ' Dts.Connections("Sales DB").ReleaseConnection(rawConnection)

    'Example of using a File connection manager
    ' Dim rawConnection As Object = Dts.Connections("Prices.zip").AcquireConnection(Dts.Transaction)
    ' Dim filePath As String = CType(rawConnection, String)
    ' <Use the connection in some code here, then release the connection>
    ' Dts.Connections("Prices.zip").ReleaseConnection(rawConnection)
#End Region

    'This method is called when this script task executes in the control flow.
    'Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
    'To open Help, press F1.

    Public Sub Main()
        'User::CustomerCode,User::CustomerFullName,User::Debug,User::FileName,User::Integration,User::IntegrationType,
        'User:   ReportHideExceptionColumnsInventory, User: ReportHideExceptionColumnsPurchaseOrder, User: ReportHideExceptionColumnsStatus, User: ReportsPath, User: RowCount
        Dim ReportPath As String = CType(Dts.Variables("RootPath").Value, String)
        Dim CustomerName As String = CType(Dts.Variables("FolderName").Value, String).Replace("\", "")
        Dim CustomerFolder As String = CType(Dts.Variables("FolderName").Value, String)
        Dim IPKey As String = CType(Dts.Variables("___0Recordkey").Value, String)
        CustomerFolder = CustomerFolder + "Data Conversion\Documents\"


        Dim ReportDate As String = Today.ToShortDateString.ToString()

        Dim URL As String = "http://hayessqlsvr/ReportServer/Pages/ReportViewer.aspx?%2fDataConversion%2fDataConversionReportVer2&rs:Command=Render"


        'Parm 1
        URL = URL + "&iPkey=" + IPKey

        'Parm 
        URL = URL + "&CustomerReport=False"


        'Appending Export to Excel and Toolbar
        URL = URL + "&rs:Format=Excel&rc:Toolbar=False"

        'for Testing
        'MessageBox.Show(CustomerName, "Customer Name:", MessageBoxButtons.OK)
        'MessageBox.Show(URL, "URL for Report", MessageBoxButtons.OK)

        Dim httpConn As ConnectionManager = Dts.Connections("ReportServer")
        Dim clientConn As HttpClientConnection = New HttpClientConnection(httpConn.AcquireConnection(Nothing))

        Dim ReportFileName As String = ReportPath + CustomerFolder + CustomerName + "_DataConversion_Report_" + Format(Now, "MMddyyyy") + ".xls"

        'for Testing
        'MessageBox.Show(ReportFileName, "Report Name: ", MessageBoxButtons.OK)

        clientConn.ServerURL = URL

        clientConn.DownloadFile(ReportFileName, True)

        Dts.TaskResult = ScriptResults.Success
    End Sub

#Region "ScriptResults declaration"
    'This enum provides a convenient shorthand within the scope of this class for setting the
    'result of the script.

    'This code was generated automatically.
    Enum ScriptResults
        Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
        Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
    End Enum

#End Region

End Class]]></ProjectItem>
              <ProjectItem
                Name="ST_817d1d18b4a3442da5beb9c6a53a2b15.vbproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{5F8123A6-B37B-45C0-A49E-367FFC845768}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>My Project</AppDesignerFolder><RootNamespace>ST_8a64a78dc3a14df19e76c1106e01c2b8</RootNamespace><AssemblyName>ST_817d1d18b4a3442da5beb9c6a53a2b15</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch><TargetFrameworkProfile></TargetFrameworkProfile></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineDebug>true</DefineDebug><DefineTrace>true</DefineTrace><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineDebug>false</DefineDebug><DefineTrace>true</DefineTrace><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><Import Include="Microsoft.VisualBasic" /><Import Include="System" /><Import Include="System.Collections" /><Import Include="System.Data" /><Import Include="System.Diagnostics" /><Import Include="System.Windows.Forms" /></ItemGroup><ItemGroup><AppDesigner Include="My Project\" /><Compile Include="My Project\AssemblyInfo.vb"><SubType>Code</SubType></Compile><EmbeddedResource Include="My Project\Resources.resx"><Generator>VbMyResourcesResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.vb</LastGenOutput><CustomToolNamespace>My.Resources</CustomToolNamespace></EmbeddedResource><Compile Include="My Project\Resources.Designer.vb"><AutoGen>True</AutoGen><DesignTime>True</DesignTime><DependentUpon>Resources.resx</DependentUpon><SubType>Code</SubType></Compile><None Include="My Project\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.vb</LastGenOutput></None><Compile Include="My Project\Settings.Designer.vb"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon><SubType>Code</SubType></Compile><Compile Include="ScriptMain.vb"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a VB project.--><Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" /><Host Name="ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST120</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Settings.Designer.vb"
                Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_ff5ff8590cd148c0a13bba8a9acf59b9</msb:CodeName>
		<msb:DisplayName>ST_ff5ff8590cd148c0a13bba8a9acf59b9</msb:DisplayName>
		<msb:ProjectId>{8CF29F33-A80A-428D-9F41-178F7AFC5E6E}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_817d1d18b4a3442da5beb9c6a53a2b15.vbproj"/>
		<msb:File Include="My Project\AssemblyInfo.vb"/>
		<msb:File Include="My Project\Resources.resx"/>
		<msb:File Include="ScriptMain.vb"/>
		<msb:File Include="My Project\Resources.Designer.vb"/>
		<msb:File Include="My Project\Settings.settings"/>
		<msb:File Include="My Project\Settings.Designer.vb"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Resources.Designer.vb"
                Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
              <BinaryItem
                Name="ST_817d1d18b4a3442da5beb9c6a53a2b15.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAN9nFl0AAAAAAAAAAOAAIiALAVAAAB4AAAAIAAAAAAAAYj0A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAABA9AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAaB0AAAAgAAAAHgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAgAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAJgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABE
PQAAAAAAAEgAAAACAAUAlCMAAMQYAAABAAAAAAAAAFg8AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBgAAAoqHgIoGQAACiqmcxoAAAqAAQAABHMbAAAKgAIA
AARzHAAACoADAAAEcx0AAAqABAAABCoufgEAAARvHgAACioufgIAAARvHwAACioufgMAAARvIAAA
CioufgQAAARvIQAACioeAigiAAAKKq5+BQAABC0ecgEAAHDQBQAAAigjAAAKbyQAAApzJQAACoAF
AAAEfgUAAAQqGn4GAAAEKh4CgAYAAAQqQnMiAAAKKCYAAAqACAAABCoeAignAAAKKgAAGzABAD8A
AAAAAAAAfgcAAAQtMn4IAAAEKCYAAAooKAAACn4HAAAELRxzDQAABoAHAAAE3hB+CAAABCgmAAAK
KCkAAArcfgcAAAQqAAEQAAACAB0ADCkAEAAAAAAeAigqAAAKKhMwBQBsAQAAAQAAEQIoKwAACm8s
AAAKcjMAAHBvLQAACm8uAAAKKC8AAAoKAigrAAAKbywAAApyRQAAcG8tAAAKby4AAAooLwAACnJb
AABwcl8AAHBvMAAACgsCKCsAAApvLAAACnJFAABwby0AAApvLgAACigvAAAKDAIoKwAACm8sAAAK
cmEAAHBvLQAACm8uAAAKKC8AAAoNCHJ9AABwKDEAAAoMKDIAAAoTCBIIKDMAAApvNAAACiZyswAA
cBMEEQRyogEAcAkoNQAAChMEEQRysgEAcCgxAAAKEwQRBHLeAQBwKDEAAAoTBAIoKwAACm82AAAK
ciICAHBvNwAAChMFEQUUbzgAAAooJgAACnM5AAAKEwYcjTEAAAElFgaiJRcIoiUYB6IlGXI8AgBw
oiUaKDoAAAqMJwAAAXJsAgBwKDsAAAqiJRtyfgIAcKIoPAAAChMHEQYRBG89AAAKEQYRBxdvPgAA
CgIoKwAAChZvPwAACio2AgMoJgAACihAAAAKKh4CKEEAAAoqLtAIAAACKCMAAAoqHgIoQgAACioA
ABMwAQAUAAAAAgAAEQKMBQAAGy0IKAEAACsKKwICCgYqIgP+FQUAABsqAAAAEzACACgAAAADAAAR
AntEAAAKb0UAAAoKBowIAAAbLRIoAgAAKwoCe0QAAAoGb0YAAAoGKkoCKCIAAAoCc0cAAAp9RAAA
CioAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAPAgAACN+AACoCAAA0AkAACNT
dHJpbmdzAAAAAHgSAACIAgAAI1VTAAAVAAAQAAAAI0dVSUQAAAAQFQAAtAMAACNCbG9iAAAAAAAA
AAIAAAFXHaIJCQ8AAAD6ATMAFgAAAQAAADUAAAAKAAAADAAAABkAAAAEAAAARwAAAAIAAAA3AAAA
AwAAAAQAAAAIAAAACQAAAAgAAAABAAAABQAAAAEAAAADAAAAAwAAAAIAAAAAAIQFAQAAAAAABgCx
AyEIBgBWBCEIBgCIAmIHDwDHCAAABgDJAjEGBgCUAzEGBgA9BDEGBgDRAzEGBgDqAzEGBgAQAzEG
BgAFBLUFBgC1AtsHBgAxAtsHBgBcAzEGBgArA7AECgBUAvwGCgAcAm4FCgCcAm4FDgD0AbEHDgAy
B3UHBgBEA2IHDgDgAvoHDgD4AuMABgBbCbUFDgAYB7EHDgB5A+MABgCnAbUFDgABADIFCgA/AsEF
BgDaBkEIBgBqBhwGCgAEAgcGBgBrAmIHEgAbBAkFEgDYAQkFBgDlBLUFFgDqBoQBFgBVBoQBBgB7
AbUFBgC8BbUFBgA+AbUFBgDHCTEGBgAaCSEIBgBaB58EEgBcBQkFFgDaCIQBFgA1AYQBDgD+CPoH
BgDeBLUFDgBvAeMAFgAOCYQBDgDkCOMABgBDB7UFAAAAAHMAAAAAAAEAAQAAAAAA+QWSCU0AAQAB
AAAAAAAwB5IJUQABAAIAAAEQAGIJkglhAAEAAwAAAAAAgwhSCGEABQAIAAABEADsCE8AgQAHAAwA
AQAAAN4FTwCNAAkADwAFAQAAowcAAGEACQARAAUBAAAQAAAAYQAJABgAAgEAADkJAAChAAoAGgAx
AJ8GTQExAHYGVQExAIoGXQExALgGZQERADsHbQERAMwBcQERAHQEdQERAFUJeQEhAIAJCwEGBtIA
fAFWgCkJfwFWgKwBfwFQIAAAAAAGGE0HBgABAFggAAAAAAYYTQcGAAEAYCAAAAAAERhTB4MBAQCK
IAAAAAATCCMHhwEBAJYgAAAAABMI6QWMAQEAoiAAAAAAEwgUB5EBAQCuIAAAAAATCJMHlgEBALog
AAAAAAMYTQcGAAEAwiAAAAAAFgjWBpsBAQDuIAAAAAAWCLQBoAEBAPUgAAAAABYIwAGlAQEA/SAA
AAAAERhTB4MBAgAOIQAAAAAGGE0HBgACABghAAAAABYIfASrAQIAdCEAAAAABhhNBwYAAgB8IQAA
AAAGAOQFBgACAPQiAAAAAMYC9wjjAAIAAiMAAAAAxgIpAegAAwAKIwAAAACDAKQBsAEDABYjAAAA
AMYC3ASvAAMAICMAAAAAEQC/ALUBAwBAIwAAAAABAKsAvQEEALogAAAAAAYYTQcGAAUATCMAAAAA
AwgQAUoABQCAIwAAAAAGGE0HBgAFAAAAAQCZBAAAAQB0BgAAAQAgAQAAAQAgAQkATQcBABEATQcG
ABkATQcKACkATQcQADEATQcQADkATQcQAEEATQcQAEkATQcQAFEATQcQAFkATQcVAGEATQcVAGkA
TQcQAHEATQcQAHkATQcQAIEATQcaAJEATQcgAKkATQcGALEATQcGALkATQcGANEATQcmAOkATQcQ
AAkBTQcGABEBTQcGAJkATQcGAKEATQcGAAwATQcGABQATQcGABwATQcGACQATQcGAAwAEAFKABQA
EAFKABwAEAFKACQAEAFKAMEATQcGANkAUAFPANkAwwlXAPEATQddAFkBkARlAAEBTQcGAGEBHQdq
AGEBbAlqABkBTQcGABkBMQmBAGkB1giHAHEBrAWNAHkBfASUAIEB3ASYAIkB+QCdAIkBRwmjAJEB
uQmpADkBygSvAIkB3ASvAIkBRwmzAGkBCgm6AJkBrAXAACkBQwbHADEBTQfMAJEBigmpAKEBTgnR
AIkBRwnXADEBfAAQADEBYgHdAGkBcQkBAMEA9wjjAMEAKQHoAMEA3ASvAKkBAQH0ADQAgAkLATwA
fARKADwAhgQiATwATQcGAAgALABDAQgAMABIASkAqwBtAy4ACwDtAS4AEwD2AS4AGwAVAi4AIwAe
Ai4AKwBHAi4AMwBHAi4AOwAeAi4AQwBNAi4ASwBHAi4AUwBkAi4AWwBHAi4AYwBqAi4AawCUAi4A
cwChAkAAiwBIAUAAgwDpAkMAewDyAkMAgwDpAkkAqwB+A2MAewDyAmMAgwDpAmkAqwCSA4AAiwBI
AYMAkwBIAYMAmwBIAYMAewDyAokAqwCfA6AAiwBIAakAgwAVAsAAiwBIAckAgwAVAuAAiwBIAeMA
uwBIAeMAUwBHAukAswBIAQMBgwDpAgMBowALAyMBgwDpAiMBWwBHAiACgwDpAiACiwBIAUACgwDp
AkACiwBIAWACgwDpAmACiwBIAYACgwDpAoACiwBIAaACiwBIAcACiwBIAeACiwBIAeACgwDpAgAD
iwBIASADiwBIASADgwDpAm8A7AD/AAQAAQAFAAUABgAHAAkACAAAADIHxQEAAPsFygEAABgHzwEA
AKUH1AEAANoG2QEAANAB3gEAAJkE4wEAABQB6AECAAQAAwACAAUABQACAAYABwACAAcACQACAAkA
CwACAAoADQABAAsADQACAA4ADwACABgAEQAuADUAPABDAPEABAETARoBBIAAAAEAAAAAAAAAAAAA
AAAAKwAAAAQAAAAAAAAAAAAAACgB2gAAAAAABAAAAAAAAAAAAAAAKAG1BQAAAAAKAAAAAAAAAAAA
AAAxAeMAAAAAAAwAAAAAAAAAAAAAADoB6gQAAAAADAAAAAAAAAAAAAAAOgGKAAAAAAAAAAAAAQAA
AI8IAAAIAAQACQAEAAoABwAAABAAEgCpAAAAEAArAKkAAAAAAC0AqQCHAPoAhwAdAQAAAAAAQ29u
dGV4dFZhbHVlYDEAVGhyZWFkU2FmZU9iamVjdFByb3ZpZGVyYDEAU1RfODE3ZDFkMThiNGEzNDQy
ZGE1YmViOWM2YTUzYTJiMTUAU1RfOGE2NGE3OGRjM2ExNGRmMTllNzZjMTEwNmUwMWMyYjgAPE1v
ZHVsZT4Ac2V0X1NlcnZlclVSTABNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAVABEaXNw
b3NlX19JbnN0YW5jZV9fAENyZWF0ZV9fSW5zdGFuY2VfXwB2YWx1ZV9fAG1zY29ybGliAE1pY3Jv
c29mdC5WaXN1YWxCYXNpYwBSZXBsYWNlAENyZWF0ZUluc3RhbmNlAGdldF9HZXRJbnN0YW5jZQBp
bnN0YW5jZQBHZXRIYXNoQ29kZQBWYXJpYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJv
bUhhbmRsZQBEb3dubG9hZEZpbGUARGF0ZUFuZFRpbWUARGF0ZVRpbWUATWljcm9zb2Z0LlNxbFNl
cnZlci5EdHMuUnVudGltZQBHZXRUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUA
X3Jlc0N1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9uQmFzZQBB
cHBsaWNhdGlvblNldHRpbmdzQmFzZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBHdWlkQXR0cmlidXRl
AEhlbHBLZXl3b3JkQXR0cmlidXRlAEdlbmVyYXRlZENvZGVBdHRyaWJ1dGUARGVidWdnZXJOb25V
c2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJp
YnV0ZQBDb21WaXNpYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAU3RhbmRhcmRN
b2R1bGVBdHRyaWJ1dGUASGlkZU1vZHVsZU5hbWVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtB
dHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAERlYnVnZ2VySGlkZGVuQXR0cmlidXRl
AEFzc2VtYmx5RmlsZVZlcnNpb25BdHRyaWJ1dGUATXlHcm91cENvbGxlY3Rpb25BdHRyaWJ1dGUA
QXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmli
dXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBD
TFNDb21wbGlhbnRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFz
c2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBtX1Zh
bHVlAGdldF9WYWx1ZQBzZXRfVmFsdWUAR2V0T2JqZWN0VmFsdWUAU3lzdGVtLlRocmVhZGluZwBT
eXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU2hvcnREYXRlU3RyaW5nAFRvU3RyaW5nAE1hdGgA
TWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRh
c2tzLlNjcmlwdFRhc2sATWljcm9zb2Z0LlZpc3VhbEJhc2ljLk15U2VydmljZXMuSW50ZXJuYWwA
U2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUXzgxN2QxZDE4YjRhMzQ0
MmRhNWJlYjljNmE1M2EyYjE1LmRsbABnZXRfSXRlbQBTeXN0ZW0ARW51bQBTeXN0ZW0uQ29tcG9u
ZW50TW9kZWwuRGVzaWduAFNjcmlwdE1haW4AZ2V0X0FwcGxpY2F0aW9uAE15QXBwbGljYXRpb24A
U3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rp
b24AQWNxdWlyZUNvbm5lY3Rpb24ASHR0cENsaWVudENvbm5lY3Rpb24AQ3VsdHVyZUluZm8AbV9B
cHBPYmplY3RQcm92aWRlcgBtX1VzZXJPYmplY3RQcm92aWRlcgBtX0NvbXB1dGVyT2JqZWN0UHJv
dmlkZXIAbV9NeVdlYlNlcnZpY2VzT2JqZWN0UHJvdmlkZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBD
b25uZWN0aW9uTWFuYWdlcgBTeXN0ZW0uQ29kZURvbS5Db21waWxlcgBnZXRfVXNlcgBFbnRlcgBn
ZXRfQ29tcHV0ZXIATXlDb21wdXRlcgBfcmVzTWdyAEFjdGl2YXRvcgAuY3RvcgAuY2N0b3IATW9u
aXRvcgBTeXN0ZW0uRGlhZ25vc3RpY3MATWljcm9zb2Z0LlZpc3VhbEJhc2ljLkRldmljZXMAZ2V0
X1dlYlNlcnZpY2VzAE15V2ViU2VydmljZXMATWljcm9zb2Z0LlZpc3VhbEJhc2ljLkFwcGxpY2F0
aW9uU2VydmljZXMAU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzAE1pY3Jvc29mdC5WaXN1
YWxCYXNpYy5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMA
U3lzdGVtLlJlc291cmNlcwBTVF84YTY0YTc4ZGMzYTE0ZGYxOWU3NmMxMTA2ZTAxYzJiOC5NeS5S
ZXNvdXJjZXMATXlSZXNvdXJjZXMAU1RfOGE2NGE3OGRjM2ExNGRmMTllNzZjMTEwNmUwMWMyYjgu
UmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBnZXRfVmFyaWFibGVzAFN0cmluZ3MA
TXlTZXR0aW5ncwBFcXVhbHMAQ29udmVyc2lvbnMAZ2V0X0Nvbm5lY3Rpb25zAFJ1bnRpbWVIZWxw
ZXJzAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAENvbmNhdABGb3JtYXQAbV9TeW5jT2Jq
ZWN0AE15UHJvamVjdABFeGl0AHNldF9UYXNrUmVzdWx0AG1fQ29udGV4dABnZXRfTm93AFNUXzhh
NjRhNzhkYzNhMTRkZjE5ZTc2YzExMDZlMDFjMmI4Lk15AGdldF9Ub2RheQBnZXRfQXNzZW1ibHkA
ADFNAHkALgBSAGUAcwBvAHUAcgBjAGUAcwAuAE0AeQBSAGUAcwBvAHUAcgBjAGUAcwAAEVIAbwBv
AHQAUABhAHQAaAAAFUYAbwBsAGQAZQByAE4AYQBtAGUAAANcAAABABtfAF8AXwAwAFIAZQBjAG8A
cgBkAGsAZQB5AAA1RABhAHQAYQAgAEMAbwBuAHYAZQByAHMAaQBvAG4AXABEAG8AYwB1AG0AZQBu
AHQAcwBcAACA7WgAdAB0AHAAOgAvAC8AaABhAHkAZQBzAHMAcQBsAHMAdgByAC8AUgBlAHAAbwBy
AHQAUwBlAHIAdgBlAHIALwBQAGEAZwBlAHMALwBSAGUAcABvAHIAdABWAGkAZQB3AGUAcgAuAGEA
cwBwAHgAPwAlADIAZgBEAGEAdABhAEMAbwBuAHYAZQByAHMAaQBvAG4AJQAyAGYARABhAHQAYQBD
AG8AbgB2AGUAcgBzAGkAbwBuAFIAZQBwAG8AcgB0AFYAZQByADIAJgByAHMAOgBDAG8AbQBtAGEA
bgBkAD0AUgBlAG4AZABlAHIAAA8mAGkAUABrAGUAeQA9AAArJgBDAHUAcwB0AG8AbQBlAHIAUgBl
AHAAbwByAHQAPQBGAGEAbABzAGUAAEMmAHIAcwA6AEYAbwByAG0AYQB0AD0ARQB4AGMAZQBsACYA
cgBjADoAVABvAG8AbABiAGEAcgA9AEYAYQBsAHMAZQAAGVIAZQBwAG8AcgB0AFMAZQByAHYAZQBy
AAAvXwBEAGEAdABhAEMAbwBuAHYAZQByAHMAaQBvAG4AXwBSAGUAcABvAHIAdABfAAARTQBNAGQA
ZAB5AHkAeQB5AAAJLgB4AGwAcwAANHo8DbKsXU2qS64nckO76wAEIAEBCAMgAAEFIAEBEREEIAEB
DgQgAQECBSACAQ4OBSABARFFByAEAQ4ODg4GFRIkARIMBhUSJAESCAYVEiQBEmUGFRIkARIgBCAA
EwAHAAESbRGApQUgABKAqQcgAgEOEoCpBAABHBwEAAEBHBEHCQ4ODg4OEoCVEoCZDhGAnQUgABKA
tQUgABKAuQYgARKAvRwDIAAcBAABDhwFIAIODg4FAAIODg4FAAARgJ0DIAAOBgADDg4ODgUgABKA
zQYgARKAlRwEIAEcHAQgAQEcBQACDhwOBQABDh0OBSACAQ4CBCABAhwDIAAIBAcBHgACHgAFEAEA
HgAECgEeAAQHARMABhUSJAETAAcGFRJxARMABhUScQETAAITAAQKARMABSABARMACLd6XFYZNOCJ
CLA/X38R1Qo6CImEXc2AgMyRBAAAAAAEAQAAAAcGFRIkARIMBwYVEiQBEggHBhUSJAESZQcGFRIk
ARIgAwYSeQMGEn0DBhIYAgYcAgYIAwYRKAMAAAEEAAASDAQAABIIBAAAEmUEAAASIAQAABJ5BAAA
En0FAAEBEn0EAAASGAQgABJtBxABAR4AHgAHMAEBARAeAAQIABIMBAgAEggECAASZQQIABIgBAgA
EnkECAASfQQIABIYBCgAEwAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MB
CAEAAgAAAAAAKAEAI1NUXzhhNjRhNzhkYzNhMTRkZjE5ZTc2YzExMDZlMDFjMmI4AAAFAQAAAAAW
AQARQ29weXJpZ2h0IEAgIDIwMTkAAAUBAAEAACkBACRlZDllMTNkZi01ODkzLTQwOTktOWIwYS00
MGEyYmM0NzhkOTkAAAwBAAcxLjAuMC4wAABHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjAB
AFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQIAQABAAAAAAAYAQAKTXlU
ZW1wbGF0ZQgxMS4wLjAuMAAAYQEANFN5c3RlbS5XZWIuU2VydmljZXMuUHJvdG9jb2xzLlNvYXBI
dHRwQ2xpZW50UHJvdG9jb2wSQ3JlYXRlX19JbnN0YW5jZV9fE0Rpc3Bvc2VfX0luc3RhbmNlX18A
AAAQAQALTXkuQ29tcHV0ZXIAABMBAA5NeS5BcHBsaWNhdGlvbgAADAEAB015LlVzZXIAABMBAA5N
eS5XZWJTZXJ2aWNlcwAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJj
ZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJs
aWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291
cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAA4PQAAAAAAAAAAAABSPQAAACAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAARD0AAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUA
IAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEA
EAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABY
QAAA7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E
7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBW
AGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAA
AACwBEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAwADAAMAA0
AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4A
YQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBU
AF8AOABhADYANABhADcAOABkAGMAMwBhADEANABkAGYAMQA5AGUANwA2AGMAMQAxADAANgBlADAA
MQBjADIAYgA4AAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAw
AAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwA4ADEANwBkADEAZAAxADgA
YgA0AGEAMwA0ADQAMgBkAGEANQBiAGUAYgA5AGMANgBhADUAMwBhADIAYgAxADUALgBkAGwAbAAA
AEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAA
QAAgACAAMgAwADEAOQAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAA
AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAVABfADgAMQA3AGQA
MQBkADEAOABiADQAYQAzADQANAAyAGQAYQA1AGIAZQBiADkAYwA2AGEANQAzAGEAMgBiADEANQAu
AGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAFQAXwA4AGEANgA0AGEA
NwA4AGQAYwAzAGEAMQA0AGQAZgAxADkAZQA3ADYAYwAxADEAMAA2AGUAMAAxAGMAMgBiADgAAAA0
AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAOAAIAAEA
QQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAGQ9AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Success Processes\Set Folder Name"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{C08A72FB-F2BE-4AE4-B7B3-4FA72CD4FE83}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Set Folder Name"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{6375cd30-80d7-4a1b-b7d0-b0fbd9756daf}"
              SQLTask:SqlStatementSource="DECLARE @IPKey INT = ?&#xA;&#xA;&#xA;SELECT FolderName + '\' AS FolderName&#xA;&#xA;FROM _DataConversion.[dbo].[SSIS_ITVariables]&#xA;WHERE IPKey=@IPKey"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="FolderName"
                SQLTask:DtsVariableName="User::FolderName" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::___0Recordkey"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="131"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Success Processes.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{9606F15A-6698-4C24-8688-FFE73C406839}"
          DTS:From="Package\Success Processes\Commit Transaction"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Success Processes\Set Folder Name" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Success Processes.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{B894BACD-2BF2-453D-BD51-2179D92049CB}"
          DTS:From="Package\Success Processes\Set Folder Name"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Success Processes\Create Conversion Report" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{F216EF7E-76BE-42DB-9616-AC91077364BC}"
      DTS:From="Package\Prepare Data"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Begin Transaction" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{78CEE8B1-8728-4364-8370-6DC52D48C532}"
      DTS:From="Package\Begin Transaction"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Insert Staging and Update ETL" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{76AB2DF1-DC96-444F-9182-868726C8D122}"
      DTS:From="Package\Insert Staging and Update ETL"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Success Processes" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{28D2D242-931C-4144-BEB2-4B1849693553}"
      DTS:From="Package\Insert Staging and Update ETL"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Rollback Transaction"
      DTS:Value="1" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql12">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="136,44"
          Id="Package\Begin Transaction"
          TopLeft="967.047169811321,175.632075471698" />
        <NodeLayout
          Size="149,44"
          Id="Package\Insert Staging and Update ETL\Accesories\tblTechAccessories"
          TopLeft="22.7924528301887,22.8490566037736" />
        <NodeLayout
          Size="136,44"
          Id="Package\Insert Staging and Update ETL\Accesories\tblTechInventoryAccessories"
          TopLeft="369.396226415094,23.9056603773585" />
        <NodeLayout
          Size="136,44"
          Id="Package\Insert Staging and Update ETL\Accesories\tblTechItemAccessories"
          TopLeft="198.603773584906,23.8301886792453" />
        <EdgeLayout
          Id="Package\Insert Staging and Update ETL\Accesories.PrecedenceConstraints[Constraint]"
          TopLeft="171.509433962264,44.811320754717">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="27.0943396226414,0.981132075471692"
              Start="0,0"
              End="19.5943396226414,0.981132075471692">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="13.5471698113207,0" />
                  <mssgle:LineSegment
                    End="13.5471698113207,0.981132075471692" />
                  <mssgle:LineSegment
                    End="19.5943396226414,0.981132075471692" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Insert Staging and Update ETL\Accesories.PrecedenceConstraints[Constraint 1]"
          TopLeft="334.377358490566,45.7924528301887">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="35.0188679245283,0.0754716981132333"
              Start="0,0"
              End="27.5188679245283,0.0754716981132333">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="17.5094339622642,0" />
                  <mssgle:LineSegment
                    End="17.5094339622642,0.0754716981132333" />
                  <mssgle:LineSegment
                    End="27.5188679245283,0.0754716981132333" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43.924528301886795"
          IsExpanded="True"
          PanelSize="540,110"
          Size="540,154"
          Id="Package\Insert Staging and Update ETL\Accesories"
          TopLeft="61.0566037735849,272.509433962264" />
        <NodeLayout
          Size="136,44"
          Id="Package\Insert Staging and Update ETL\Clear Any UIDs"
          TopLeft="556.004716981132,22.8066037735849" />
        <NodeLayout
          Size="202,44"
          Id="Package\Insert Staging and Update ETL\Custom Fields\tblTechInventoryExt"
          TopLeft="103.924528301887,104.77358490566" />
        <NodeLayout
          Size="184,44"
          Id="Package\Insert Staging and Update ETL\Custom Fields\tblTechInventoryMeta"
          TopLeft="90.9056603773585,22.8867924528302" />
        <EdgeLayout
          Id="Package\Insert Staging and Update ETL\Custom Fields.PrecedenceConstraints[Constraint]"
          TopLeft="182.754716981132,66.811320754717">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="22,37.9622641509434"
              Start="0,0"
              End="22,30.4622641509434">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.9811320754717" />
                  <mssgle:LineSegment
                    End="22,18.9811320754717" />
                  <mssgle:LineSegment
                    End="22,30.4622641509434" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43.924528301886795"
          IsExpanded="True"
          PanelSize="401,176"
          Size="401,220"
          Id="Package\Insert Staging and Update ETL\Custom Fields"
          TopLeft="714.037735849057,287.415094339623" />
        <NodeLayout
          Size="136,44"
          Id="Package\Insert Staging and Update ETL\Inventory"
          TopLeft="36.6792452830189,179.641509433962" />
        <NodeLayout
          Size="136,44"
          Id="Package\Insert Staging and Update ETL\Inventory History"
          TopLeft="193.509433962264,178.660377358491" />
        <NodeLayout
          Size="174,42"
          Id="Package\Insert Staging and Update ETL\Purchase Inventory"
          TopLeft="893.509433962264,189.641509433962" />
        <NodeLayout
          Size="136,44"
          Id="Package\Insert Staging and Update ETL\Purchase Item Detail"
          TopLeft="530.037735849057,183.641509433962" />
        <NodeLayout
          Size="136,44"
          Id="Package\Insert Staging and Update ETL\Purchase Item Shipments"
          TopLeft="700.792452830189,186.622641509434" />
        <NodeLayout
          Size="136,44"
          Id="Package\Insert Staging and Update ETL\Purchase Order"
          TopLeft="362.264150943396,183.641509433962" />
        <NodeLayout
          Size="136,44"
          Id="Package\Insert Staging and Update ETL\Room and Room Type"
          TopLeft="838.245283018868,102.754716981132" />
        <NodeLayout
          Size="116,44"
          Id="Package\Insert Staging and Update ETL\SiteUID"
          TopLeft="698.683962264151,100.504716981132" />
        <NodeLayout
          Size="167,44"
          Id="Package\Insert Staging and Update ETL\tblFundingSources"
          TopLeft="1008.98113207547,102.77358490566" />
        <NodeLayout
          Size="138,42"
          Id="Package\Insert Staging and Update ETL\tblTechItems"
          TopLeft="525.843890348499,100.514240782784" />
        <NodeLayout
          Size="170,44"
          Id="Package\Insert Staging and Update ETL\tblTechItemTypes"
          TopLeft="335.070305442839,102.533108707312" />
        <NodeLayout
          Size="162,44"
          Id="Package\Insert Staging and Update ETL\tblUnvManufacturers"
          TopLeft="15.5518867924528,103.52358490566" />
        <NodeLayout
          Size="103,44"
          Id="Package\Insert Staging and Update ETL\tblVendor"
          TopLeft="206.268867924528,103.52358490566" />
        <EdgeLayout
          Id="Package\Insert Staging and Update ETL.PrecedenceConstraints[Constraint]"
          TopLeft="177.25,125.485849056604">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="29.0188679245283,0"
              Start="0,0"
              End="21.5188679245283,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="21.5188679245283,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Insert Staging and Update ETL.PrecedenceConstraints[Constraint 1]"
          TopLeft="309.468867924528,125.028346806486">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="25.6014375183108,0"
              Start="0,0"
              End="18.1014375183108,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="18.1014375183108,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Insert Staging and Update ETL.PrecedenceConstraints[Constraint 10]"
          TopLeft="665.811320754717,205.603773584906">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="34.9811320754717,2.98113207547169"
              Start="0,0"
              End="27.4811320754717,2.98113207547169">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="17.5094339622642,0" />
                  <mssgle:LineSegment
                    End="17.5094339622642,2.98113207547169" />
                  <mssgle:LineSegment
                    End="27.4811320754717,2.98113207547169" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Insert Staging and Update ETL.PrecedenceConstraints[Constraint 11]"
          TopLeft="836.792452830189,209.632075471698">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="56.716981132075,0"
              Start="0,0"
              End="49.216981132075,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="49.216981132075,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Insert Staging and Update ETL.PrecedenceConstraints[Constraint 12]"
          TopLeft="952.842767295597,231.641509433962">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-621.786163522012,40.867924528302"
              Start="0,0"
              End="-621.786163522012,33.367924528302">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12.5705935445051" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12.5705935445051"
                    Point2="0,16.5705935445051"
                    Point3="-4,16.5705935445051" />
                  <mssgle:LineSegment
                    End="-617.786163522012,16.5705935445051" />
                  <mssgle:CubicBezierSegment
                    Point1="-617.786163522012,16.5705935445051"
                    Point2="-621.786163522012,16.5705935445051"
                    Point3="-621.786163522012,20.5705935445051" />
                  <mssgle:LineSegment
                    End="-621.786163522012,33.367924528302" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-318.893081761006,21.5705935445051,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Insert Staging and Update ETL.PrecedenceConstraints[Constraint 13]"
          TopLeft="601.320754716981,349.377358490566">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="112.716981132075,47.8490566037736"
              Start="0,0"
              End="105.216981132075,47.8490566037736">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="56.377358490566,0" />
                  <mssgle:LineSegment
                    End="56.377358490566,47.8490566037736" />
                  <mssgle:LineSegment
                    End="105.216981132075,47.8490566037736" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="48.377358490566,-26,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Insert Staging and Update ETL.PrecedenceConstraints[Constraint 14]"
          TopLeft="1008.17610062893,231.641509433962">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-93.6383647798737,55.773584905661"
              Start="0,0"
              End="-93.6383647798737,48.273584905661">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.6143464993341" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.6143464993341"
                    Point2="0,22.6143464993341"
                    Point3="-4,22.6143464993341" />
                  <mssgle:LineSegment
                    End="-89.6383647798737,22.6143464993341" />
                  <mssgle:CubicBezierSegment
                    Point1="-89.6383647798737,22.6143464993341"
                    Point2="-93.6383647798737,22.6143464993341"
                    Point3="-93.6383647798737,26.6143464993341" />
                  <mssgle:LineSegment
                    End="-93.6383647798737,48.273584905661" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-54.8191823899368,27.6143464993341,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Insert Staging and Update ETL.PrecedenceConstraints[Constraint 15]"
          TopLeft="623.891509433962,66.7311320754717">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-527.509433962264,36.7924528301887"
              Start="0,0"
              End="-527.509433962264,29.2924528301887">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.377358490566" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14.377358490566"
                    Point2="0,18.377358490566"
                    Point3="-4,18.377358490566" />
                  <mssgle:LineSegment
                    End="-523.509433962264,18.377358490566" />
                  <mssgle:CubicBezierSegment
                    Point1="-523.509433962264,18.377358490566"
                    Point2="-527.509433962264,18.377358490566"
                    Point3="-527.509433962264,22.377358490566" />
                  <mssgle:LineSegment
                    End="-527.509433962264,29.2924528301887" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Insert Staging and Update ETL.PrecedenceConstraints[Constraint 2]"
          TopLeft="420.070305442839,146.533108707312">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="174.77358490566,-4.01886792452802"
              Start="0,0"
              End="174.77358490566,3.48113207547198">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.5"
                    Point2="0,22.5"
                    Point3="4,22.5" />
                  <mssgle:LineSegment
                    End="170.77358490566,22.5" />
                  <mssgle:CubicBezierSegment
                    Point1="170.77358490566,22.5"
                    Point2="174.77358490566,22.5"
                    Point3="174.77358490566,18.5" />
                  <mssgle:LineSegment
                    End="174.77358490566,3.48113207547198" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Insert Staging and Update ETL.PrecedenceConstraints[Constraint 3]"
          TopLeft="663.843890348499,122.009478881958">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="34.8400719156519,0"
              Start="0,0"
              End="27.3400719156519,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="27.3400719156519,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Insert Staging and Update ETL.PrecedenceConstraints[Constraint 4]"
          TopLeft="814.683962264151,123.629716981132">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="23.561320754717,0"
              Start="0,0"
              End="16.061320754717,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="16.061320754717,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Insert Staging and Update ETL.PrecedenceConstraints[Constraint 5]"
          TopLeft="974.245283018868,124.764150943396">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="34.735849056602,0"
              Start="0,0"
              End="27.235849056602,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="27.235849056602,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Insert Staging and Update ETL.PrecedenceConstraints[Constraint 6]"
          TopLeft="1071.58490566038,146.698113207547">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-967.018867924528,32.9433962264151"
              Start="0,0"
              End="-967.018867924528,25.4433962264151">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.4528301886792" />
                  <mssgle:LineSegment
                    End="-967.018867924528,16.4528301886792" />
                  <mssgle:LineSegment
                    End="-967.018867924528,25.4433962264151" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Insert Staging and Update ETL.PrecedenceConstraints[Constraint 7]"
          TopLeft="172.452830188679,201.603773584906">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="21.0566037735849,-0.981132075471692"
              Start="0,0"
              End="13.5566037735849,-0.981132075471692">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="10.5283018867924,0" />
                  <mssgle:LineSegment
                    End="10.5283018867924,-0.981132075471692" />
                  <mssgle:LineSegment
                    End="13.5566037735849,-0.981132075471692" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Insert Staging and Update ETL.PrecedenceConstraints[Constraint 8]"
          TopLeft="329.283018867925,200.622641509434">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="32.9811320754717,4.98113207547169"
              Start="0,0"
              End="25.4811320754717,4.98113207547169">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="16.4905660377358,0" />
                  <mssgle:LineSegment
                    End="16.4905660377358,4.98113207547169" />
                  <mssgle:LineSegment
                    End="25.4811320754717,4.98113207547169" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Insert Staging and Update ETL.PrecedenceConstraints[Constraint 9]"
          TopLeft="498.037735849057,205.603773584906">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="32,0"
              Start="0,0"
              End="24.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="24.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43.924528301886795"
          IsExpanded="True"
          PanelSize="1189,562"
          Size="1189,606"
          Id="Package\Insert Staging and Update ETL"
          TopLeft="19.5,278.179245283019" />
        <ContainerLayout
          HeaderHeight="43.924528301886795"
          IsExpanded="True"
          PanelSize="206,50"
          Size="206,79"
          Id="Package\Prepare Data\Assign Variables"
          TopLeft="252.547169811321,13.5849056603774" />
        <NodeLayout
          Size="168,42"
          Id="Package\Prepare Data\Fix User Accounts"
          TopLeft="478,29" />
        <NodeLayout
          Size="136,44"
          Id="Package\Prepare Data\Get Client Variables"
          TopLeft="68.7924528301887,28.5849056603774" />
        <EdgeLayout
          Id="Package\Prepare Data.PrecedenceConstraints[Constraint]"
          TopLeft="204.792452830189,51.8349056603774">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="47.7547169811323,0"
              Start="0,0"
              End="40.2547169811323,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="40.2547169811323,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Prepare Data.PrecedenceConstraints[Constraint 1]"
          TopLeft="355.547169811321,92.5849056603774">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="206.452830188679,-21.5849056603774"
              Start="0,0"
              End="206.452830188679,-14.0849056603774">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.5"
                    Point2="0,22.5"
                    Point3="4,22.5" />
                  <mssgle:LineSegment
                    End="202.452830188679,22.5" />
                  <mssgle:CubicBezierSegment
                    Point1="202.452830188679,22.5"
                    Point2="206.452830188679,22.5"
                    Point3="206.452830188679,18.5" />
                  <mssgle:LineSegment
                    End="206.452830188679,-14.0849056603774" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43.924528301886795"
          IsExpanded="True"
          PanelSize="717,170"
          Size="717,214"
          Id="Package\Prepare Data"
          TopLeft="43.5377358490566,5.5" />
        <NodeLayout
          Size="136,44"
          Id="Package\Rollback Transaction"
          TopLeft="1153.59433962264,183.141509433962" />
        <NodeLayout
          Size="136,44"
          Id="Package\Success Processes\Commit Transaction"
          TopLeft="38.084905660377,32.594339622642" />
        <NodeLayout
          Size="207,42"
          Id="Package\Success Processes\Create Conversion Report"
          TopLeft="4,200" />
        <NodeLayout
          Size="162,42"
          Id="Package\Success Processes\Set Folder Name"
          TopLeft="27,112" />
        <EdgeLayout
          Id="Package\Success Processes.PrecedenceConstraints[Constraint]"
          TopLeft="107.042452830188,76.594339622642">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,35.405660377358"
              Start="0,0"
              End="0,27.905660377358">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.905660377358" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Success Processes.PrecedenceConstraints[Constraint 1]"
          TopLeft="107.75,154">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,46"
              Start="0,0"
              End="0,38.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,38.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="225,293"
          Size="225,336"
          Id="Package\Success Processes"
          TopLeft="1336,420" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="760.537735849057,112.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="206.509433962264,85.1320754716981"
              Start="0,0"
              End="199.009433962264,85.1320754716981">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="99.2547169811322,0" />
                  <mssgle:CubicBezierSegment
                    Point1="99.2547169811322,0"
                    Point2="103.254716981132,0"
                    Point3="103.254716981132,4" />
                  <mssgle:LineSegment
                    End="103.254716981132,81.1320754716981" />
                  <mssgle:CubicBezierSegment
                    Point1="103.254716981132,81.1320754716981"
                    Point2="103.254716981132,85.1320754716981"
                    Point3="107.254716981132,85.1320754716981" />
                  <mssgle:LineSegment
                    End="199.009433962264,85.1320754716981" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="1035.04716981132,219.632075471698">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-617.880503144654,58.5471698113209"
              Start="0,0"
              End="-617.880503144654,51.0471698113209">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.0810943586396" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31.0810943586396"
                    Point2="0,35.0810943586396"
                    Point3="-4,35.0810943586396" />
                  <mssgle:LineSegment
                    End="-613.880503144654,35.0810943586396" />
                  <mssgle:CubicBezierSegment
                    Point1="-613.880503144654,35.0810943586396"
                    Point2="-617.880503144654,35.0810943586396"
                    Point3="-617.880503144654,39.0810943586396" />
                  <mssgle:LineSegment
                    End="-617.880503144654,51.0471698113209" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="1208.5,584.58962264151">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="127.5,0"
              Start="0,0"
              End="120,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="120,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="810.833333333333,278.179245283019">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="410.761006289309,-51.037735849057"
              Start="0,0"
              End="410.761006289309,-43.537735849057">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-16.4562468899462" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-16.4562468899462"
                    Point2="0,-20.4562468899462"
                    Point3="4,-20.4562468899462" />
                  <mssgle:LineSegment
                    End="406.761006289309,-20.4562468899462" />
                  <mssgle:CubicBezierSegment
                    Point1="406.761006289309,-20.4562468899462"
                    Point2="410.761006289309,-20.4562468899462"
                    Point3="410.761006289309,-24.4562468899462" />
                  <mssgle:LineSegment
                    End="410.761006289309,-43.537735849057" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="190.139155488405,-15.4562468899462,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Prepare Data\Get Client Variables">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="157,42"
          Id="Package\Prepare Data\Get Client Variables\OLE DB Source"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="187,42"
          Id="Package\Prepare Data\Get Client Variables\Recordset Destination"
          TopLeft="NaN,NaN" />
        <EdgeLayout
          Id="Package\Prepare Data\Get Client Variables.Paths[OLE DB Source Output]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="{x:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <x:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>