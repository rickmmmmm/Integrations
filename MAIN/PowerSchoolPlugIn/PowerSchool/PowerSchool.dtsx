<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="10/30/2014 10:52:01 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="WLAFRANCE-PC"
  DTS:CreatorName="HAYESSOFT\Warrenla"
  DTS:DTSID="{7CBA3974-9DA2-443A-86C8-AFC194673B45}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="13.0.1601.5"
  DTS:LocaleID="1033"
  DTS:ObjectName="PowerSchool"
  DTS:PackageType="5"
  DTS:VersionBuild="581"
  DTS:VersionGUID="{5362DBA0-4C84-445D-BAD9-0370AEB49C67}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[ADO.NET_PowerSchoolAPIPlugIn]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{BC80AE34-4D02-4CBB-93A4-38F462A85D4D}"
      DTS:ObjectName="ADO.NET_PowerSchoolAPIPlugIn">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[$Project::PowerSchoolData]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[$Project::Server]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=.;Initial Catalog=PowerSchoolAPIPlugIn;Integrated Security=True;Application Name=SSIS-PowerSchool-{BC80AE34-4D02-4CBB-93A4-38F462A85D4D}CSS-NBLAKELY\MSSQLSERVER2014.PowerSchoolAPIPlugIn;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[PowerSchoolAPIPlugIn]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{D9F81E43-3162-4FB0-804B-765E691F46A1}"
      DTS:ObjectName="PowerSchoolAPIPlugIn">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[$Project::PowerSchoolData]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[$Project::Server]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=.;Initial Catalog=PowerSchoolAPIPlugIn;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EB9B1590-E645-40D8-814B-95466CF14B92}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ClientID">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{318D8286-9EAD-49E4-A27C-D60FEE2EE444}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ClientIDPS">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{44A310A0-48C5-4208-83F8-D73E821CACD1}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ClientName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0E371210-57CB-40F7-A9E1-73DD556FFE16}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ClientSecret">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{02A9780D-6462-4F5C-BA01-031FE02DB1C2}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ClientServer">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E7E5AB34-C1E6-4D76-8FDF-E66A100CD13F}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ClientTipWebDatabase">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A1E468F6-D830-4E92-8DC5-849F70ACE1B7}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="CustomerList">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6D1AB504-054D-45E9-A922-4B3B376DE13B}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Error">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{AB1A5055-0E8D-41CB-BB39-8070C35D19B0}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ErrorMessage">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F8E87BE5-4073-4CFC-928A-A346977EC52A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PageSize">
      <DTS:VariableValue
        DTS:DataType="8">500</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3BFEEC7F-067A-4E76-A914-2FB456E407D1}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ProcessCampusCourse">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7D8C1535-17D8-4E64-A48E-8A293B33609B}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ProcessClasses">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B2F997BC-9D2D-432C-BCE8-3ED744200F1D}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ProcessMasterCourse">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2A2D7704-92CC-4304-92A1-5B5AEB8D9B78}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ProcessStaff">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F3DF805B-7B92-44CF-BCD3-42F76034DA80}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ProcessStudent">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C7BC4A75-A888-4440-815E-DF8B6AE01039}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ProcessStudentSchedule">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8171E367-77D9-462A-B4B3-5EE425DC20A0}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ProcessTeacher">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EE69E536-6619-4E5A-AB5D-6CAF84FAA1C8}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ProcessTeacherSchedule">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Data Flow Task - Get Customers"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{DDD2C420-E739-49C6-9311-0651AF353D42}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Data Flow Task - Get Customers"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server v10; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          BLOBTempStoragePath=""
          bufferTempStoragePath=""
          version="1">
          <components>
            <component
              refId="Package\Data Flow Task - Get Customers\OLE DB Source"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="OLE DB Source"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select ClientUID, Name, TIPWebDatabase, ClientServer, ClientID, ClientSecret, 
ProcessTeacher, ProcessStudent, ProcessStaff, ProcessMasterCourse, 
ProcessCampusCourse, ProcessClasses, ProcessTeacherSchedule, ProcessStudentSchedule, PageSize
from PSCustomer
where Active = 1
order by ProcessOrder</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task - Get Customers\OLE DB Source.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[PowerSchoolAPIPlugIn]"
                  connectionManagerRefId="Package.ConnectionManagers[PowerSchoolAPIPlugIn]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientUID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClientUID]"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientUID]"
                      name="ClientUID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[Name]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Name]"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[Name]"
                      name="Name"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[TIPWebDatabase]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[TIPWebDatabase]"
                      length="200"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[TIPWebDatabase]"
                      name="TIPWebDatabase"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientServer]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClientServer]"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientServer]"
                      name="ClientServer"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientID]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClientID]"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientID]"
                      name="ClientID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientSecret]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClientSecret]"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientSecret]"
                      name="ClientSecret"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ProcessTeacher]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ProcessTeacher]"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ProcessTeacher]"
                      name="ProcessTeacher"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ProcessStudent]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ProcessStudent]"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ProcessStudent]"
                      name="ProcessStudent"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ProcessStaff]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ProcessStaff]"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ProcessStaff]"
                      name="ProcessStaff"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ProcessMasterCourse]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ProcessMasterCourse]"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ProcessMasterCourse]"
                      name="ProcessMasterCourse"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ProcessCampusCourse]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ProcessCampusCourse]"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ProcessCampusCourse]"
                      name="ProcessCampusCourse"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ProcessClasses]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ProcessClasses]"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ProcessClasses]"
                      name="ProcessClasses"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ProcessTeacherSchedule]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ProcessTeacherSchedule]"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ProcessTeacherSchedule]"
                      name="ProcessTeacherSchedule"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ProcessStudentSchedule]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ProcessStudentSchedule]"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ProcessStudentSchedule]"
                      name="ProcessStudentSchedule"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[PageSize]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[PageSize]"
                      length="50"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[PageSize]"
                      name="PageSize"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClientUID]"
                      dataType="i4"
                      name="ClientUID" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Name]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      name="Name" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[TIPWebDatabase]"
                      codePage="1252"
                      dataType="str"
                      length="200"
                      name="TIPWebDatabase" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClientServer]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      name="ClientServer" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClientID]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      name="ClientID" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClientSecret]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      name="ClientSecret" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ProcessTeacher]"
                      dataType="i4"
                      name="ProcessTeacher" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ProcessStudent]"
                      dataType="i4"
                      name="ProcessStudent" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ProcessStaff]"
                      dataType="i4"
                      name="ProcessStaff" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ProcessMasterCourse]"
                      dataType="i4"
                      name="ProcessMasterCourse" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ProcessCampusCourse]"
                      dataType="i4"
                      name="ProcessCampusCourse" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ProcessClasses]"
                      dataType="i4"
                      name="ProcessClasses" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ProcessTeacherSchedule]"
                      dataType="i4"
                      name="ProcessTeacherSchedule" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ProcessStudentSchedule]"
                      dataType="i4"
                      name="ProcessStudentSchedule" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[PageSize]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="PageSize" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClientUID]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClientUID]"
                      name="ClientUID" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Name]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Name]"
                      name="Name" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[TIPWebDatabase]"
                      codePage="1252"
                      dataType="str"
                      length="200"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[TIPWebDatabase]"
                      name="TIPWebDatabase" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClientServer]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClientServer]"
                      name="ClientServer" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClientID]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClientID]"
                      name="ClientID" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClientSecret]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClientSecret]"
                      name="ClientSecret" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ProcessTeacher]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ProcessTeacher]"
                      name="ProcessTeacher" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ProcessStudent]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ProcessStudent]"
                      name="ProcessStudent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ProcessStaff]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ProcessStaff]"
                      name="ProcessStaff" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ProcessMasterCourse]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ProcessMasterCourse]"
                      name="ProcessMasterCourse" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ProcessCampusCourse]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ProcessCampusCourse]"
                      name="ProcessCampusCourse" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ProcessClasses]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ProcessClasses]"
                      name="ProcessClasses" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ProcessTeacherSchedule]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ProcessTeacherSchedule]"
                      name="ProcessTeacherSchedule" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ProcessStudentSchedule]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ProcessStudentSchedule]"
                      name="ProcessStudentSchedule" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[PageSize]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[PageSize]"
                      name="PageSize" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task - Get Customers\Recordset Destination"
              componentClassID="Microsoft.RecordsetDestination"
              contactInfo="Recordset Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates and populates an in-memory ADO recordset that is available outside of the data flow. Scripts and other package elements can use the recordset. For example, use a recordset to store the names of files that will be loaded into the data warehouse."
              name="Recordset Destination">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the recordset."
                  name="VariableName">User::CustomerList</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input]"
                  hasSideEffects="true"
                  name="Recordset Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[ClientUID]"
                      cachedDataType="i4"
                      cachedName="ClientUID"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientUID]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[Name]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="150"
                      cachedName="Name"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[Name]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[TIPWebDatabase]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="200"
                      cachedName="TIPWebDatabase"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[TIPWebDatabase]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[ClientServer]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="150"
                      cachedName="ClientServer"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientServer]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[ClientID]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="150"
                      cachedName="ClientID"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientID]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[ClientSecret]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="150"
                      cachedName="ClientSecret"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientSecret]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[ProcessTeacher]"
                      cachedDataType="i4"
                      cachedName="ProcessTeacher"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ProcessTeacher]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[ProcessStudent]"
                      cachedDataType="i4"
                      cachedName="ProcessStudent"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ProcessStudent]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[ProcessStaff]"
                      cachedDataType="i4"
                      cachedName="ProcessStaff"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ProcessStaff]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[ProcessMasterCourse]"
                      cachedDataType="i4"
                      cachedName="ProcessMasterCourse"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ProcessMasterCourse]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[ProcessCampusCourse]"
                      cachedDataType="i4"
                      cachedName="ProcessCampusCourse"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ProcessCampusCourse]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[ProcessClasses]"
                      cachedDataType="i4"
                      cachedName="ProcessClasses"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ProcessClasses]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[ProcessTeacherSchedule]"
                      cachedDataType="i4"
                      cachedName="ProcessTeacherSchedule"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ProcessTeacherSchedule]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[ProcessStudentSchedule]"
                      cachedDataType="i4"
                      cachedName="ProcessStudentSchedule"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ProcessStudentSchedule]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[PageSize]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="PageSize"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[PageSize]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Data Flow Task - Get Customers.Paths[OLE DB Source Output]"
              endId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input]"
              name="OLE DB Source Output"
              startId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Loop thru Clients"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{2A012B50-11BF-45FD-AC6A-1C3A06172278}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Loop thru Clients">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachADOEnumerator"
        DTS:DTSID="{C3F2FF6B-D934-40CD-AB02-EE2F8F1FDB43}"
        DTS:ObjectName="{C3F2FF6B-D934-40CD-AB02-EE2F8F1FDB43}">
        <DTS:ObjectData>
          <FEEADO
            EnumType="EnumerateRowsInFirstTable"
            VarName="User::CustomerList" />
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Loop thru Clients\Campus Course"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:Disabled="True"
          DTS:DTSID="{4081d8bb-c425-4f85-9ef8-aad5c5392b25}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Campus Course"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">@[User::ProcessCampusCourse]==0</DTS:PropertyExpression>
          <DTS:ObjectData>
            <pipeline
              defaultBufferMaxRows="50000"
              version="1">
              <components>
                <component
                  refId="Package\Loop thru Clients\Campus Course\Derived Column"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Loop thru Clients\Campus Course\Derived Column.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Loop thru Clients\Campus Course\Derived Column.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Loop thru Clients\Campus Course\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop thru Clients\Campus Course\Derived Column.Outputs[Derived Column Output].Columns[ClientUID]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Loop thru Clients\Campus Course\Derived Column.Outputs[Derived Column Output].Columns[ClientUID]"
                          name="ClientUID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::ClientID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::ClientID]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Loop thru Clients\Campus Course\Derived Column.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Loop thru Clients\Campus Course\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop thru Clients\Campus Course\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Campus Course\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Campus Course\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Campus Course\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Loop thru Clients\Campus Course\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[PSCampusCourse]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Loop thru Clients\Campus Course\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[PowerSchoolAPIPlugIn]"
                      connectionManagerRefId="Package.ConnectionManagers[PowerSchoolAPIPlugIn]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Loop thru Clients\Campus Course\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Loop thru Clients\Campus Course\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[CourseID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="CourseID"
                          externalMetadataColumnId="Package\Loop thru Clients\Campus Course\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CourseID]"
                          lineageId="Package\Loop thru Clients\Campus Course\Script Component.Outputs[Output 0].Columns[CourseID]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Campus Course\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ClientUID]"
                          cachedDataType="i4"
                          cachedName="ClientUID"
                          externalMetadataColumnId="Package\Loop thru Clients\Campus Course\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientUID]"
                          lineageId="Package\Loop thru Clients\Campus Course\Derived Column.Outputs[Derived Column Output].Columns[ClientUID]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Campus Course\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[CampusID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="CampusID"
                          externalMetadataColumnId="Package\Loop thru Clients\Campus Course\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CampusID]"
                          lineageId="Package\Loop thru Clients\Campus Course\Script Component.Outputs[Output 0].Columns[CampusID]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Campus Course\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CourseID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="CourseID" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Campus Course\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientUID]"
                          dataType="i4"
                          name="ClientUID" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Campus Course\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CampusID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="CampusID" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Campus Course\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CampusCoursePSUID]"
                          dataType="i4"
                          name="CampusCoursePSUID" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Loop thru Clients\Campus Course\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Loop thru Clients\Campus Course\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop thru Clients\Campus Course\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Campus Course\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Campus Course\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Campus Course\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Loop thru Clients\Campus Course\Script Component"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;9"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Script Component"
                  version="9">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="33">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 PSDB
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"PSDB").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public Int32 ClientID
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["ClientID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientIDPS
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientIDPS"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientSecret
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientSecret"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientServer
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientServer"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String PageSize
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["PageSize"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces

using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.IO;
using System.Net;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Runtime.Serialization;
using System.Runtime.Serialization.Json;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading.Tasks;
using System.Web.Script.Serialization;
using System.Windows.Forms;



#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    static string pLocation = "/ws/schema/query/com.hayessoft.TIPWeb.campusCourse";
    static string tokenURI = "/oauth/access_token/";
    static string processType = "CampusCourse";

    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();

    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */
        ProcessCampusCourse().Wait();
    }


    public async Task<int> ProcessCampusCourse()
    {
        try
        {

            // The server base address
            string baseURL = Variables.ClientServer;

            //MessageBox.Show(uri);

            ServicePointManager.Expect100Continue = true;
            ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;


            /// The client information used to get the OAuth Access Token from the server.
            string clientId = Variables.ClientIDPS;
            string clientSecret = Variables.ClientSecret;
            string sendToken = EncodeTo64(Variables.ClientIDPS + ":" + Variables.ClientSecret);
            WriteToDatabase(0, "CampusCourse-sendToken", sendToken);
            // this will hold the Access Token returned from the server.
            //MessageBox.Show(sendToken, "sendToken");

            string accessToken = await GetAccessToken(baseURL, sendToken, clientId, clientSecret);
            //-->>>>>>>>>>>>>> Add : if returns null, stop
            if (accessToken == null)
            {
                WriteToDatabase(1, "Access Token", "GetAccessToken returned null");
                return 0;
            }
            //MessageBox.Show(accessToken, "access token");


            string FileSize = await GetFileSize(baseURL, accessToken);
            if (FileSize == null)
            {
                WriteToDatabase(1, "File Size", "GetFileSize returned null");
                return 0;
            }

            var jsonResponse = await GetCampusCourse(baseURL, accessToken, FileSize);

            return 0;
        }
        catch (Exception ex)
        {
            WriteToDatabase(1, "ProcessCampusCourse", ex.Message);
            return 0;
        }

    }


    /// <summary>
    /// Gets the list of Campus Courses.
    /// </summary>
    /// <param name="baseUrl">The url for the Campus Course list</param>
    /// <param name="accessToken">Acquired in the previous method</param>
    /// <returns>The page of articles.</returns>
    private async Task<dynamic> GetCampusCourse(string baseUrl, string accessToken, string FileSize)
    {
        try
        {
            int TotalRecords;
            string pageSize = Variables.PageSize;
            int intPageSize = Convert.ToInt32(pageSize);
            if (Int32.TryParse(FileSize, out TotalRecords))
            {
                int pages = ((TotalRecords - 1) / intPageSize) + 1;
                //MessageBox.Show(pages.ToString(), "pages");

                for (int i = 1; i <= pages; i++)
                {
                    string pagenum = i.ToString();
                    //MessageBox.Show(pagenum, "page number");

                    string uri = baseUrl + pLocation + "?pagesize=" + pageSize + "&page=" + pagenum;
                    var client = new HttpClient();

                    client.BaseAddress = new Uri(uri);

                    client.DefaultRequestHeaders.Accept.Clear();
                    client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));
                    client.DefaultRequestHeaders.Add("Authorization", "Bearer " + accessToken);

                    //MessageBox.Show(uri, "CampusCourse uri");

                    StringContent stringContent = new StringContent("", Encoding.UTF8, "application/json");
                    //StringContent stringContent = new StringContent("page=" + pagenum, Encoding.UTF8, "application/json");
                    //string content;

                    HttpResponseMessage response = await client.PostAsync(new Uri(uri), stringContent);

                    response.EnsureSuccessStatusCode();
                    string jsonString = await response.Content.ReadAsStringAsync();
                    //MessageBox.Show(jsonString, "jsonstring");

                    jsonString = cleanJsonString(jsonString);

                    //Deserialize our JSON
                    DataTable dt = JsonStringToDataTable(jsonString);
                    int numRows = 0;


                    foreach (DataRow row in dt.Rows)
                    {
                        Output0Buffer.AddRow();
                        Output0Buffer.CourseID = row["courseid"].ToString().Replace("\\", "");
                        Output0Buffer.CampusID = row["campusid"].ToString().Replace("\\", "");


                        numRows += 1;
                    }
                    WriteToDatabase(0, "GetCampusCourse - Row Count Page Num: " + pagenum, numRows.ToString());
                }
                return null;
            }
            return null;

        }
        catch (Exception ex)
        {
            WriteToDatabase(1, "GetCampusCourse", ex.Message);
            throw;
        }

    }


    private async Task<string> GetFileSize(string baseURL, string accessToken)
    {
        try
        {
            using (var client = new HttpClient())
            {
                string uri = baseURL + pLocation + "/count";
                client.BaseAddress = new Uri(uri);
                //MessageBox.Show(uri, "Campus Course uri");

                client.DefaultRequestHeaders.Accept.Clear();
                client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));
                client.DefaultRequestHeaders.Add("Authorization", "Bearer " + accessToken);

                var stringContent = new StringContent("", Encoding.UTF8, "application/json");

                //Get file size
                HttpResponseMessage response = await client.PostAsync(new Uri(uri), stringContent);

                response.EnsureSuccessStatusCode();
                string jsonString = await response.Content.ReadAsStringAsync();

                //string jsonString = response.Content.ToString();//.ReadAsStringAsync();
                //MessageBox.Show(jsonString, "jsonstring");

                //Deserialize our JSON
                var FileSizeObject = JsonHelper.JsonDeserialize<FileSize>(jsonString);

                // return the Access Token.
                var FileSize = FileSizeObject.count;
                //MessageBox.Show(FileSize, "File Size");
                WriteToDatabase(0, "RecordCount", FileSize);
                return FileSize;
            }
        }
        catch (Exception ex)
        {
            //MessageBox.Show(ex.Message);
            //MessageBox.Show(ex.StackTrace);
            WriteToDatabase(1, "GetFileSize", ex.Message);
            //return null;
            throw;
        }

    }

    /// <summary>
    /// This method uses the OAuth Client Credentials Flow to get an Access Token to provide
    /// Authorization to the APIs.
    /// </summary>
    /// <returns></returns>
    private static async Task<string> GetAccessToken(string baseURL, string sendToken, string clientId, string clientSecret)
    {
        try
        {
            using (var client = new HttpClient())
            {

                string uri = baseURL + tokenURI;
                client.BaseAddress = new Uri(uri);

                //MessageBox.Show(uri, "access token uri");

                client.DefaultRequestHeaders.Accept.Clear();
                client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/x-www-form-urlencoded"));
                client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Basic", sendToken);

                List<KeyValuePair<string, string>> postData = new List<KeyValuePair<string, string>>();
                postData.Add(new KeyValuePair<string, string>("grant_type", "client_credentials"));
                FormUrlEncodedContent content = new FormUrlEncodedContent(postData);

                // Post to the Server and parse the response.
                HttpResponseMessage response = await client.PostAsync(new Uri(uri), content);

                response.EnsureSuccessStatusCode();
                string jsonString = await response.Content.ReadAsStringAsync();

                //MessageBox.Show(jsonString, "jsonstring");

                //Deserialize our JSON
                var accessTokenObject = JsonHelper.JsonDeserialize<AccessToken>(jsonString);

                // return the Access Token.
                var token = accessTokenObject.access_token;
                //MessageBox.Show(token, "access token");
                return token;
            }
        }
        catch (Exception ex)
        {
            //WriteToDatabase(1, "GetAccessToken", ex.Message);
            //MessageBox.Show(ex.Message);
            //MessageBox.Show(ex.StackTrace);
            //return null;
            throw ex;
        }
    }

    public string EncodeTo64(string toEncode)
    {
        byte[] toEncodeAsBytes = System.Text.ASCIIEncoding.ASCII.GetBytes(toEncode);
        string returnValue = System.Convert.ToBase64String(toEncodeAsBytes);
        return returnValue;

    }
    public class JsonHelper
    {
        /// <summary>
        /// JSON Serialization
        /// </summary>
        public static string JsonSerializer<T>(T t)
        {
            DataContractJsonSerializer ser = new DataContractJsonSerializer(typeof(T));
            MemoryStream ms = new MemoryStream();
            ser.WriteObject(ms, t);
            string jsonString = Encoding.UTF8.GetString(ms.ToArray());
            ms.Close();
            return jsonString;
        }
        /// <summary>
        /// JSON Deserialization
        /// </summary>
        public static T JsonDeserialize<T>(string jsonString)
        {
            DataContractJsonSerializer ser = new DataContractJsonSerializer(typeof(T));
            MemoryStream ms = new MemoryStream(Encoding.UTF8.GetBytes(jsonString));
            T obj = (T)ser.ReadObject(ms);
            return obj;
        }
    }

    public class CampusCourse
    {
        public string CampusID { get; set; }
        public string CourseID { get; set; }

    }

    public class AccessToken
    {
        public string access_token { get; set; }
        public string token_type { get; set; }
        public string expires_in { get; set; }
    }

    public class FileSize
    {
        public string count { get; set; }

    }



    public DataTable JsonStringToDataTable(string jsonString)
    {
        try
        {
            DataTable dt = new DataTable();
            string[] jsonStringArray = Regex.Split(jsonString.Replace("[", "").Replace("]", ""), "},{");
            List<string> ColumnsName = new List<string>();
            foreach (string jSA in jsonStringArray)
            {
                string[] jsonStringData = Regex.Split(jSA.Replace("{", "").Replace("}", ""), ",");
                foreach (string ColumnsNameData in jsonStringData)
                {
                    try
                    {
                        int idx = ColumnsNameData.IndexOf(":");
                        string ColumnsNameString = ColumnsNameData.Substring(0, idx - 1).Replace("\"", "");
                        if (!ColumnsName.Contains(ColumnsNameString))
                        {
                            ColumnsName.Add(ColumnsNameString);
                        }
                    }
                    catch //(Exception ex)
                    {
                        WriteToDatabase(1, "JsonStringToDataTable: Columns", (string.Format("Error Parsing Column Name : {0}", ColumnsNameData)));
                    }
                }
                break;
            }
            foreach (string AddColumnName in ColumnsName)
            {
                dt.Columns.Add(AddColumnName);
            }
            foreach (string jSA in jsonStringArray)
            {
                string[] RowData = Regex.Split(jSA.Replace("{", "").Replace("}", ""), ",");
                DataRow nr = dt.NewRow();
                foreach (string rowData in RowData)
                {
                    try
                    {
                        int idx = rowData.IndexOf(":");
                        string RowColumns = rowData.Substring(0, idx - 1).Replace("\"", "").Replace("\\", "");
                        string RowDataString = rowData.Substring(idx + 1).Replace("\"", "").Replace("\\", "");
                        nr[RowColumns] = RowDataString;
                    }
                    catch //(Exception ex)
                    {
                        WriteToDatabase(1, "JsonStringToDataTable: For each row", (string.Format("Error Parsing Row  Name : {0}", rowData)));
                        continue;
                    }
                }
                dt.Rows.Add(nr);
            }
            return dt;
        }
        catch (Exception ex)
        {
            WriteToDatabase(1, "JsonStringToDataTable", ex.Message);
            return null;
        }
    }

    public string cleanJsonString(string jsonString)
    {

        jsonString = jsonString.Replace("{\"record\":[", "");
        jsonString = jsonString.Replace("],\"@extensions\": \"\"}", "");

        return jsonString;
    }


    public void WriteToDatabase(int Error, string Area, string LogInfo)
    {
        try
        {
            //MessageBox.Show("WriteToDatabase");
            var ConnString = Connections.PSDB.ConnectionString;

            using (SqlConnection conn = new SqlConnection(Connections.PSDB.ConnectionString))
            {
                if (conn.State != ConnectionState.Open) conn.Open();
                //string insertText = "Insert into PSLog (ClientUID, FileType, Area, LogInfo) Values (@ClientUID, @FileType, @Area, @LogInfo ) ";
                SqlCommand cmd = new SqlCommand("spLogInfo", conn);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("@ClientUID", SqlDbType.Int).Value = Variables.ClientID;
                cmd.Parameters.Add("@Error", SqlDbType.Int).Value = Error;
                cmd.Parameters.Add("@FileType", SqlDbType.VarChar, 50).Value = processType;
                cmd.Parameters.Add("@Area", SqlDbType.VarChar, 100).Value = Area;
                cmd.Parameters.Add("@LogInfo", SqlDbType.VarChar, 1000).Value = LogInfo;
                cmd.ExecuteNonQuery();
            }
        }
        catch //(Exception ex)
        {
            throw;
        }
    }
}




]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[packages.config]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="Newtonsoft.Json" version="12.0.3" targetFramework="net45" />
</packages>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_166304a2d4f649718955be76bd772ab1.Properties.Settings.get_Default():SC_166304a2d4f649718955be76bd772ab1.Properties.Sett" +
    "ings")]

namespace SC_166304a2d4f649718955be76bd772ab1.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_166304a2d4f649718955be76bd772ab1.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{8B7D44F2-6737-4DB9-9EA3-0590166846CB}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_166304a2d4f649718955be76bd772ab1</RootNamespace>
    <AssemblyName>SC_166304a2d4f649718955be76bd772ab1</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Newtonsoft.Json, Version=12.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <HintPath>C:\Users\nblakely\AppData\Local\Temp\Vsta\SSIS_SC120\VstaVjUxCgSrxkWiOo__BxhsiIw\packages\Newtonsoft.Json.12.0.3\lib\net45\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Runtime.Serialization" />
    <Reference Include="System.Web.Extensions" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
      <DesignTime>True</DesignTime>
    </Compile>
    <None Include="packages.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String CourseID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool CourseID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CampusID
    {
        set
        {
            this[1] = value;
        }
    }
    public bool CampusID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_166304a2d4f649718955be76bd772ab1</msb:CodeName>
		<msb:DisplayName>SC_166304a2d4f649718955be76bd772ab1</msb:DisplayName>
		<msb:ProjectId>{1B4A101D-CF74-4F58-ACFB-E3F7F1C77DE5}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_166304a2d4f649718955be76bd772ab1.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="packages.config"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_166304a2d4f649718955be76bd772ab1")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_166304a2d4f649718955be76bd772ab1")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_166304a2d4f649718955be76bd772ab1.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_166304a2d4f649718955be76bd772ab1.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_166304a2d4f649718955be76bd772ab1.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_166304a2d4f649718955be76bd772ab1.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_166304a2d4f649718955be76bd772ab1.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_166304a2d4f649718955be76bd772ab1.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[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
AAJ7MgAABBMEAnwyAAAE/hUNAAAbAhUlCn0tAAAEEgQohAAACiVvhQAACiZvhgAACm+HAAAKb2cA
AAoTBRIFKGgAAAotPgIXJQp9LQAABAIRBX0zAAAEAnwuAAAEEgUCKA0AACvedwJ7MwAABBMFAnwz
AAAE/hUIAAAbAhUlCn0tAAAEEgUoagAACigOAAArbzMAAAYL3jIGFi8TAnsxAAAELAsCezEAAARv
MgAACtx6EwYCH/59LQAABAJ8LgAABBEGKJEAAAreFAIf/n0tAAAEAnwuAAAEByiSAAAKKgBBTAAA
AgAAABwAAACAAQAAnAEAABgAAAAAAAAAAAAAAAwAAACoAQAAtAEAAAEAAAAYAAABAAAAAAcAAACu
AQAAtQEAABkAAAAYAAABNgJ8LgAABAMokwAACioAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5
AAAAAAUAbAAAABQRAAAjfgAAgBEAAHASAAAjU3RyaW5ncwAAAADwIwAAIAcAACNVUwAQKwAAEAAA
ACNHVUlEAAAAICsAAGwGAAAjQmxvYgAAAAAAAAACAAABVxeiCwkPAAAA+gEzABYAAAEAAABbAAAA
EAAAADMAAABEAAAAKgAAAAQAAACZAAAALwAAAAwAAAAIAAAAFAAAABsAAAAIAAAADwAAAAEAAAAK
AAAAAQAAAAgAAAACAAAADgAAAAAArwkBAAAAAAAGALMHKA4GAEcIKA4GAMwGFQ4PAJwOAAAGAPkG
OQsGAJYHOQsGAHcHOQsGAC4IOQsGANMHOQsGAOwHOQsGACsHOQsGAEYHFgkKAAcIDAUGAG0FQwoG
ABAHKA4GAL0AMQ8GAOAAKA4OAIMGKA4GAFwQQwoSAHgEswIGAAcB3gJXAPMNAAASAC0SswIGAOEL
QwoSALYLxhAGACQKkwIGAJQGKA4GAEcFQwoGANwEKA4GAPkAKA4GAF8HFQ4WAEMRkwwWAFgEkwwG
AOQNfA8GAIIEQwoWANwQkwwWAC0RkwwKANMMDAUaAMQMDAUKADQMDAUKAAURDAUeAGYAKQ0GAK8G
FQ4GAOQMSA4GACAM9QoiAFMGmQkiAOAGmQkiAN8F4AoGAJQJMQ8GAA0J3REGAJ8RQwoGAHsJQwoi
AEMSXQ8SAEsLswISAMsKswISAJcLswISAKkL6wsSAGgGswISAAgExhASAP4D6wsSADsFswISAIAL
xhASAIYNxhASAC0FswIGADQBQwoSAHoN6wsGAMQLQwomAAEAUQ0mACoAUQ0mAE0AUQ0eAH8AKQ0e
ABoAKQ2nAP0RAAAeAJAAKQ0GAI4EQwoGAFUSOQsqAK8N/gsqAMoNCgsGACoKkwIiAAoNYxAiAFEF
YxAiAIwJQwoWAL8Pmw8WAMQAmw8WAKAImw8WALMPmw8WAFERkwwSAMQFswIWAIYImw8GAGsB3gIG
AK8A3gIAAAAAGQIAAAAAAQABAAEAEADACgAAEAABAAEAAQAQALYMAACZAAQADgABABAA5xAAAKUA
BAAWAAEAEACPDwAATQAHABsAAQAQAOYOAABNAAgAHQAAABAATw6rDk0ACQAkAAABEAAeD6sOwQAL
ACgAAgAQAB4NAABNAAwAKwACABAANQYAAE0ADAAuAAIAEABjCgAATQAOADMAAgAQAOwIAABNABEA
OgADARAAuQEAAHEAEgA9AAMBEADTAQAAcQAZAD8AAwEQAPIBAABxACUAQQADARAABAIAAHEALQBD
ABEA1goHBBEAggIHBBEAZgUHBAYAjw8KBAYA5g4OBAYAtgwSBAEA9RAWBAEA9RAWBBEASgobBBEA
tAUgBBEAGwQlBAEAdwMHBAEAXQMHBAEArQMHBAEAkQMHBAEAywMHBAEA5wMHBAYAeAYpBAYAqQws
BAYAJw8zBAEAOgEHBAEAegEHBAEAqAA3BAEAZAE+BAYAeAYpBAYAqQxFBAYAJw8zBAYA7AgHBAYA
HAoHBAYAbwoHBAEASAEHBAEAjAEpBAEAowEpBAEAqwEHBAEAqABMBAEAZAE3BAYAeAYpBAYAqQxV
BAYAiwIHBAYAbwoHBAYAJw8zBAEAVwFcBAEAqABMBAEAZAE3BAYAeAYpBAYAqQxVBAYAiwIHBAYA
VgoHBAEAVwFcBAEAqABMBAEAZAE3BFAgAAAAAMYAZQgGAAEAWCAAAAAAxgBwCAYAAQBgIAAAAADG
ACoQBgABAHAgAAAAAIYAHgZhBAEAuCAAAAAAgQAyBmkEAQAYIQAAAACBAOkIdAQFAHAhAAAAAJEA
YAp+BAcAvSEAAAAAhgCYAYoECwDQIQAAAACGAGwEjwQMAJQkAAAAAIYAVAmKBA0AvCQAAAAAhgD3
BZUEDgDcJQAAAACGGP4NBgARAOQlAAAAAJEYBA6cBBEABCYAAAAAhhj+DX8BEQAPJgAAAACGCDgC
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
wQLwDUEDEQEVEUcDuQAxCksDmQBvCT4BEQHUER4BFADeC4ECFAC8EPEAFADvBCEAHAA2A1YCHADe
C4ECHAC8EPEAHADvBCEAyQL+DegCmQInC54DdAD+DQYAfAD+DbkDdAAeA/EAKQH+DcEDJABzAGAG
LgALAAMFLgATAAwFLgAbACsFLgAjADQFLgArAF0FLgAzAF0FLgA7AF0FLgBDADQFLgBLAGMFLgBT
AF0FLgBbAHoFQwBjAFsGgABrAMQFoABrAO4FwABrABQG4ABrADYG4wCbAFsGYQF7AFsGgQF7AFsG
iQGjACsFoQF7AFsGowF7AFsGqQGjACsFwQF7AFsGwwF7AFsG4QF7AFsG4wF7AFsGAQJ7AFsGAwJ7
AFsGIQJ7AFsGwAV7AFsG4AV7AFsGAAZ7AFsGIAZ7AFsGYAZ7AFsGgAZ7AFsGoAZ7AFsGwAZ7AFsG
4AZ7AFsGAAd7AFsGQAd7AFsGYAd7AFsGwAeTAFsGAAiTAFsGQAiTAFsGgAiTAFsGLgBdAHIAhwCo
AEIBkQHsARQChwJQA4cDAwABAAUABQAGAAYABwAMAAgADgAKAA8ACwARAAwAFAAAADwC4AQAANsJ
5AQAAFYC4AQAAO8J5AQAACYC6AQAAGMC7gQAAKEC4AQAALYE4AQAAHIQ4AQAAKIN4AQAAOAI4AQA
AOQM8gQAALwF+AQAAKoQ/gQAAFYC4AQAADwC4AQAAJAK4AQAAIUF4AQAALUK4AQAAGsR4AQBAA8A
AwABABAABQABABEABwABABIACQACABwACwACAB4ADQACAB8ADwACACAAEQACACEAEwACACIAFQAC
ACMAFwACACUAGQACACYAGwABACcAGwACACgAHQACAC4AHwABAC8AHwACADAAIQABADEAIQACADMA
IwABADQAIwACADUAJQABADYAJQACADcAJwABADgAJwACADoAKQABADsAKQANAHoAIQANAHwAIwAO
AH4AIQAOAIAAIwAPAIIAIQAPAIQAIwAQAIYAIQAQAIgAIwA4AGcAfADaAAYB8QFBAlACawJxAtkC
BwMPA6UDsQMEgAAAAQAAAMocJGIAAAAAAAAOAQAABAAAAAAAAAAAAAAA7APVAgAAAAAMAAAAAAAA
AAAAAAD1A3wRAAAAAAQAAAAAAAAAAAAAAOwDkAUAAAAABAAAAAAAAAAAAAAA7AOzAgAAAAAEAAAA
AAAAAAAAAAD+A5MMAAAAAAwAAAAAAAAAAAAAAPUDpxEAAAAADAAAAAAAAAAAAAAA9QNMDAAAAAAE
AAAAAAAAAAAAAADsA0MKAAAAAAwAAAAAAAAAAAAAAPUDbwwAAAAABAAAAAAAAAAAAAAA7AMKCwAA
AAAAAAAAAQAAAFkOAAAJAAIACgACAAsAAgAMAAIADQACAA4AAgAPAAIAEAACAAAAAABXAKwCAAAA
AFkArAIzAE8AOQBtAD8AggA/AJEA0wBhAtMAdwIHARcDBwE3AyEBbAMhAXgDWACCAyEB0QMhAd0D
WADnAwAAAAAASURUU0NvbXBvbmVudE1ldGFEYXRhMTAwAElEVFNWYXJpYWJsZTEwMABJRFRTUnVu
dGltZUNvbm5lY3Rpb25Db2xsZWN0aW9uMTAwAElEVFNSdW50aW1lQ29ubmVjdGlvbjEwMABJRFRT
Q29ubmVjdGlvbk1hbmFnZXIxMDAASURUU1ZhcmlhYmxlczEwMABJRFRTRXZhbHVhdG9yQ29udGV4
dDEwMAA8PnVfXzEASUVudW1lcmFibGVgMQBUYXNrYDEASHR0cEhlYWRlclZhbHVlQ29sbGVjdGlv
bmAxAEFzeW5jVGFza01ldGhvZEJ1aWxkZXJgMQBUYXNrQXdhaXRlcmAxAExpc3RgMQBTQ18xNjYz
MDRhMmQ0ZjY0OTcxODk1NWJlNzZiZDc3MmFiMQBUb0ludDMyADxiYXNlVVJMPjVfXzIAPHBhZ2VT
aXplPjVfXzIAPGNsaWVudD41X18yADw+dV9fMgBLZXlWYWx1ZVBhaXJgMgA8YWNjZXNzVG9rZW4+
NV9fMwA8cGFnZXM+NV9fMwBFbmNvZGVUbzY0ADxpPjVfXzQAPHBhZ2VudW0+NV9fNQA8UHJvY2Vz
c0NhbXB1c0NvdXJzZT5kX182ADxHZXRDYW1wdXNDb3Vyc2U+ZF9fNwBnZXRfVVRGOAA8R2V0Rmls
ZVNpemU+ZF9fOAA8R2V0QWNjZXNzVG9rZW4+ZF9fOQA8TW9kdWxlPgBnZXRfUFNEQgBnZXRfQ291
cnNlSUQAc2V0X0NvdXJzZUlEAGdldF9DYW1wdXNJRABzZXRfQ2FtcHVzSUQAZ2V0X0NsaWVudElE
AEdldE91dHB1dElEAGdldF9BU0NJSQB0b2tlblVSSQBiYXNlVVJMAFN5c3RlbS5JTwBnZXRfQ2xp
ZW50SURQUwBUAEFyZWEAU3lzdGVtLkRhdGEAZ2V0X0NvbXBvbmVudE1ldGFEYXRhAG1zY29ybGli
AFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljAFJlYWRBc1N0cmluZ0FzeW5jAFBvc3RBc3luYwBj
bGllbnRJZABBZGQATWFya091dHB1dHNGaW5pc2hlZABBd2FpdFVuc2FmZU9uQ29tcGxldGVkAGdl
dF9Jc0NvbXBsZXRlZAA8Q291cnNlSUQ+a19fQmFja2luZ0ZpZWxkADxDYW1wdXNJRD5rX19CYWNr
aW5nRmllbGQAPHRva2VuX3R5cGU+a19fQmFja2luZ0ZpZWxkADxhY2Nlc3NfdG9rZW4+a19fQmFj
a2luZ0ZpZWxkADxleHBpcmVzX2luPmtfX0JhY2tpbmdGaWVsZAA8Y291bnQ+a19fQmFja2luZ0Zp
ZWxkAERiQ29tbWFuZABTcWxDb21tYW5kAFJlcGxhY2UAZGVmYXVsdEluc3RhbmNlAEVuc3VyZVN1
Y2Nlc3NTdGF0dXNDb2RlAHRvRW5jb2RlAGdldF9NZXNzYWdlAEh0dHBSZXNwb25zZU1lc3NhZ2UA
SnNvblN0cmluZ1RvRGF0YVRhYmxlAElEaXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5
cGVGcm9tSGFuZGxlAGdldF9DbGllbnROYW1lAEdldFJ1bnRpbWVDb25uZWN0aW9uQnlOYW1lAElB
c3luY1N0YXRlTWFjaGluZQBTZXRTdGF0ZU1hY2hpbmUAc3RhdGVNYWNoaW5lAE1pY3Jvc29mdC5T
cWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFNxbERiVHlwZQBzZXRfQ29tbWFuZFR5cGUAVmFsdWVUeXBl
AFNlY3VyaXR5UHJvdG9jb2xUeXBlAHByb2Nlc3NUeXBlAGdldF90b2tlbl90eXBlAHNldF90b2tl
bl90eXBlAFN5c3RlbS5Db3JlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVy
ZQBJbnRlcm5hbERhdGFDb2xsZWN0aW9uQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBXcml0
ZVRvRGF0YWJhc2UAQ2xvc2UARGlzcG9zZQBUcnlQYXJzZQBQcm9jZXNzQ2FtcHVzQ291cnNlAEdl
dENhbXB1c0NvdXJzZQBDcmVhdGUAZ2V0X1N0YXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbm5l
Y3Rpb25TdGF0ZQA8PjFfX3N0YXRlAER5bmFtaWNBdHRyaWJ1dGUAQ29tcGlsZXJHZW5lcmF0ZWRB
dHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRl
AEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzeW5jU3Rh
dGVNYWNoaW5lQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1l
d29ya0F0dHJpYnV0ZQBEZWJ1Z2dlckhpZGRlbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRp
b25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4
YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdo
dEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJs
eUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0
ZQBQb3N0RXhlY3V0ZQBzZXRfVmFsdWUAQXV0aGVudGljYXRpb25IZWFkZXJWYWx1ZQBNZWRpYVR5
cGVXaXRoUXVhbGl0eUhlYWRlclZhbHVlAHZhbHVlAHNldF9FeHBlY3QxMDBDb250aW51ZQBnZXRf
UGFnZVNpemUAR2V0RmlsZVNpemUASnNvbkRlc2VyaWFsaXplAEluZGV4T2YARW5jb2RpbmcAU3lz
dGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb0Jhc2U2NFN0cmluZwBnZXRfQ29ubmVjdGlvblN0cmlu
ZwBjbGVhbkpzb25TdHJpbmcAanNvblN0cmluZwBUb1N0cmluZwBHZXRTdHJpbmcAU3Vic3RyaW5n
AFVyaQBnZXRfVGFzawBTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0NfMTY2MzA0YTJkNGY2NDk3MTg5
NTViZTc2YmQ3NzJhYjEuZGxsAHNldF9Db3Vyc2VJRF9Jc051bGwAc2V0X0NhbXB1c0lEX0lzTnVs
bABTZXROdWxsAHNldF9TZWN1cml0eVByb3RvY29sAGJhc2VVcmwATWVtb3J5U3RyZWFtAGdldF9J
dGVtAHNldF9JdGVtAFN5c3RlbQByZXNvdXJjZU1hbgBzZW5kVG9rZW4AR2V0QWNjZXNzVG9rZW4A
YWNjZXNzVG9rZW4AZ2V0X2FjY2Vzc190b2tlbgBzZXRfYWNjZXNzX3Rva2VuAE9wZW4AZ2V0X2V4
cGlyZXNfaW4Ac2V0X2V4cGlyZXNfaW4AU2NyaXB0TWFpbgBEYXRhQ29sdW1uAHBMb2NhdGlvbgBT
eXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUnVudGltZS5T
ZXJpYWxpemF0aW9uAHNldF9BdXRob3JpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAERhdGFDb2x1
bW5Db2xsZWN0aW9uAGdldF9SdW50aW1lQ29ubmVjdGlvbkNvbGxlY3Rpb24AU3FsUGFyYW1ldGVy
Q29sbGVjdGlvbgBEYXRhUm93Q29sbGVjdGlvbgBEYkNvbm5lY3Rpb24AU3FsQ29ubmVjdGlvbgBJ
bnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9uAFNldEV4Y2VwdGlvbgBTeXN0ZW0uRGF0YS5Db21tb24A
U3lzdGVtLlJ1bnRpbWUuU2VyaWFsaXphdGlvbi5Kc29uAEN1bHR1cmVJbmZvAExvZ0luZm8AT3V0
cHV0TmFtZU1hcABPdXRwdXRNYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNSdW50aW1lV3JhcABN
aWNyb3NvZnQuU3FsU2VydmVyLkRUU1BpcGVsaW5lV3JhcABTeXN0ZW0uTmV0Lkh0dHAAQ2xlYXIA
PD50X19idWlsZGVyAE91dHB1dDBCdWZmZXIAUGlwZWxpbmVCdWZmZXIAU2NyaXB0QnVmZmVyAGdl
dF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0Nvbm5lY3Rpb25NYW5hZ2VyAFNlcnZpY2VQb2ludE1hbmFn
ZXIASnNvbkhlbHBlcgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lLldyYXBwZXIATWlj
cm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUuV3JhcHBlcgBEYlBhcmFtZXRlcgBTcWxQYXJh
bWV0ZXIAR2V0QXdhaXRlcgBnZXRfQ2xpZW50U2VydmVyAERhdGFDb250cmFjdEpzb25TZXJpYWxp
emVyAFhtbE9iamVjdFNlcmlhbGl6ZXIARXJyb3IASUVudW1lcmF0b3IAR2V0RW51bWVyYXRvcgAu
Y3RvcgAuY2N0b3IAT3V0cHV0SURzAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5D
b21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU0NfMTY2MzA0YTJkNGY2NDk3MTg5NTVi
ZTc2YmQ3NzJhYjEuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVz
AFNDXzE2NjMwNGEyZDRmNjQ5NzE4OTU1YmU3NmJkNzcyYWIxLlByb3BlcnRpZXMAZ2V0X1JlYWRP
bmx5VmFyaWFibGVzAEdldEJ5dGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhl
cwBTZXR0aW5ncwA8PjRfX3RoaXMAU3lzdGVtLlRocmVhZGluZy5UYXNrcwBDb250YWlucwBnZXRf
Q29sdW1ucwBTeXN0ZW0uVGV4dC5SZWd1bGFyRXhwcmVzc2lvbnMAU3lzdGVtLkNvbGxlY3Rpb25z
AENvbm5lY3Rpb25zAFN5c3RlbS5OZXQuSHR0cC5IZWFkZXJzAEh0dHBIZWFkZXJzAEh0dHBSZXF1
ZXN0SGVhZGVycwBnZXRfRGVmYXVsdFJlcXVlc3RIZWFkZXJzAEJ1ZmZlcnMAZ2V0X1BhcmFtZXRl
cnMAc2V0X0Jhc2VBZGRyZXNzAEZpbmlzaE91dHB1dHMAZ2V0X1Jvd3MAQ3JlYXRlTmV3T3V0cHV0
Um93cwBDb25jYXQARm9ybWF0AFJlYWRPYmplY3QAV3JpdGVPYmplY3QAU3lzdGVtLk5ldABnZXRf
Q2xpZW50U2VjcmV0AGNsaWVudFNlY3JldABTZXRFbmRPZlJvd3NldABXYWl0AFNwbGl0AGdldF9E
ZWZhdWx0AEdldFJlc3VsdABTZXRSZXN1bHQAU3lzdGVtLkRhdGEuU3FsQ2xpZW50AEh0dHBDbGll
bnQAVXNlckNvbXBvbmVudABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9uZW50AGdldF9DdXJy
ZW50AGdldF9Db250ZW50AEZvcm1VcmxFbmNvZGVkQ29udGVudABTdHJpbmdDb250ZW50AEh0dHBD
b250ZW50AGdldF9jb3VudABzZXRfY291bnQAZ2V0X0FjY2VwdABNaWNyb3NvZnQuU3FsU2VydmVy
LlR4U2NyaXB0AFN0YXJ0AENvbnZlcnQATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QA
UHJpbWVPdXRwdXQATW92ZU5leHQAU3lzdGVtLlRleHQAR2V0VmFsdWVXaXRoQ29udGV4dABTY3Jp
cHRDb21wb25lbnRFdmFsQ29udGV4dABnZXRfRXZhbHVhdG9yQ29udGV4dABEYXRhUm93AEFkZFJv
dwBOZXdSb3cAUmVnZXgAVG9BcnJheQBnZXRfQXNzZW1ibHkARXhlY3V0ZU5vblF1ZXJ5AAAAAANb
AAABAANdAAAHfQAsAHsAAAN7AAADfQAAAywAAAM6AAADIgAAPUoAcwBvAG4AUwB0AHIAaQBuAGcA
VABvAEQAYQB0AGEAVABhAGIAbABlADoAIABDAG8AbAB1AG0AbgBzAAA/RQByAHIAbwByACAAUABh
AHIAcwBpAG4AZwAgAEMAbwBsAHUAbQBuACAATgBhAG0AZQAgADoAIAB7ADAAfQAAA1wAAEdKAHMA
bwBuAFMAdAByAGkAbgBnAFQAbwBEAGEAdABhAFQAYQBiAGwAZQA6ACAARgBvAHIAIABlAGEAYwBo
ACAAcgBvAHcAADtFAHIAcgBvAHIAIABQAGEAcgBzAGkAbgBnACAAUgBvAHcAIAAgAE4AYQBtAGUA
IAA6ACAAewAwAH0AACtKAHMAbwBuAFMAdAByAGkAbgBnAFQAbwBEAGEAdABhAFQAYQBiAGwAZQAA
F3sAIgByAGUAYwBvAHIAZAAiADoAWwAAKV0ALAAiAEAAZQB4AHQAZQBuAHMAaQBvAG4AcwAiADoA
IAAiACIAfQAAE3MAcABMAG8AZwBJAG4AZgBvAAAVQABDAGwAaQBlAG4AdABVAEkARAAADUAARQBy
AHIAbwByAAATQABGAGkAbABlAFQAeQBwAGUAAAtAAEEAcgBlAGEAABFAAEwAbwBnAEkAbgBmAG8A
AGUvAHcAcwAvAHMAYwBoAGUAbQBhAC8AcQB1AGUAcgB5AC8AYwBvAG0ALgBoAGEAeQBlAHMAcwBv
AGYAdAAuAFQASQBQAFcAZQBiAC4AYwBhAG0AcAB1AHMAQwBvAHUAcgBzAGUAACkvAG8AYQB1AHQA
aAAvAGEAYwBjAGUAcwBzAF8AdABvAGsAZQBuAC8AABlDAGEAbQBwAHUAcwBDAG8AdQByAHMAZQAA
gJtJAHMATgB1AGwAbAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBl
AHQAIAB0AG8AIABGAGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQA
bwAgAHQAaABlACAAYwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AABFPAHUAdABwAHUAdAAg
ADAAAAlQAFMARABCAAARQwBsAGkAZQBuAHQASQBEAAAVQwBsAGkAZQBuAHQASQBEAFAAUwAAFUMA
bABpAGUAbgB0AE4AYQBtAGUAABlDAGwAaQBlAG4AdABTAGUAYwByAGUAdAAAGUMAbABpAGUAbgB0
AFMAZQByAHYAZQByAAARUABhAGcAZQBTAGkAegBlAABxUwBDAF8AMQA2ADYAMwAwADQAYQAyAGQA
NABmADYANAA5ADcAMQA4ADkANQA1AGIAZQA3ADYAYgBkADcANwAyAGEAYgAxAC4AUAByAG8AcABl
AHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAtQwBhAG0AcAB1AHMAQwBvAHUAcgBzAGUA
LQBzAGUAbgBkAFQAbwBrAGUAbgABGUEAYwBjAGUAcwBzACAAVABvAGsAZQBuAAA5RwBlAHQAQQBj
AGMAZQBzAHMAVABvAGsAZQBuACAAcgBlAHQAdQByAG4AZQBkACAAbgB1AGwAbAAAE0YAaQBsAGUA
IABTAGkAegBlAAAzRwBlAHQARgBpAGwAZQBTAGkAegBlACAAcgBlAHQAdQByAG4AZQBkACAAbgB1
AGwAbAAAJ1AAcgBvAGMAZQBzAHMAQwBhAG0AcAB1AHMAQwBvAHUAcgBzAGUAABU/AHAAYQBnAGUA
cwBpAHoAZQA9AAANJgBwAGEAZwBlAD0AACFhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwBqAHMAbwBu
AAAbQQB1AHQAaABvAHIAaQB6AGEAdABpAG8AbgAAD0IAZQBhAHIAZQByACAAABFjAG8AdQByAHMA
ZQBpAGQAABFjAGEAbQBwAHUAcwBpAGQAAE1HAGUAdABDAGEAbQBwAHUAcwBDAG8AdQByAHMAZQAg
AC0AIABSAG8AdwAgAEMAbwB1AG4AdAAgAFAAYQBnAGUAIABOAHUAbQA6ACAAAR9HAGUAdABDAGEA
bQBwAHUAcwBDAG8AdQByAHMAZQAADS8AYwBvAHUAbgB0AAAXUgBlAGMAbwByAGQAQwBvAHUAbgB0
AAAXRwBlAHQARgBpAGwAZQBTAGkAegBlAABDYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AeAAtAHcA
dwB3AC0AZgBvAHIAbQAtAHUAcgBsAGUAbgBjAG8AZABlAGQAAQtCAGEAcwBpAGMAABVnAHIAYQBu
AHQAXwB0AHkAcABlAAAlYwBsAGkAZQBuAHQAXwBjAHIAZQBkAGUAbgB0AGkAYQBsAHMAAAAAue/C
JqYl5UCOA1u94etveAAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQESOQUgAQEdAgUgAQESdQYgAQER
gLkJBwIRNBURRQEIBRURRQEICAAAFRFFARMABzABAQEQHgAECgERNAggABUSQQETAAkHAhE4FRFF
ARwFFRFFARwECgEROAkHAhE8FRFFAQ4FFRFFAQ4ECgERPAkHAhFAFRFFAQ4ECgERQAUAABKAyQUg
AR0FDgUAAQ4dBSQHExJRHQ4VElUBDh0OCB0OCA4IDhURWQEODhJdDggODhJREmEFIAIODg4GAAId
Dg4OBRUSVQEOBCABCA4FIAIOCAgFIAECEwAFIAEBEwAFAAIODhwIIAAVEVkBEwAFFRFZAQ4EIAAT
AAUgABKA2QYgARKA3Q4DIAACBCAAEl0EIAEOCAUgAgEOHAUgABKA4QUgAQESXQMgAA4EBwESZQUg
ABGA6QYgAgEOEmUGIAEBEYD1BSAAEoD5CSACEoD9DhGBAQQgAQEcCiADEoD9DhGBAQgDIAAICyAD
ARKAnR0IEoChBSACAQgcAwcBCAcAAggSgKEOBSABHQgIBSAAEoERBSAAEoEVBiABEoEZDgUgABKA
qQUgABKBHQYgARKBIRwFAAASgSUGIAEcEoEpBwABEjkRgS0FIAASgTEHIAIBDhKBMQQHARJpAh4A
ByACARKBPRwEIAAdBQUgAQ4dBQUgAQEdBQYgARwSgT0ZBwwIEggIDg4ODg4VEXkBDhUReQEcEmES
YQQAAQECBgABARGBRQYAAw4ODg4FFRJBAQ4IIAAVEXkBEwAFFRF5AQ4KMAICARAeABAeAQkKAhUR
eQEOETQFFRJBARwFFRF5ARwJCgIVEXkBHBE0BSABARJhJwcRCBIIHAgIDhKAgQ4IFRF5ARKAhRUR
eQEOEoCJEl0SgI0IEmESYQQAAQgOBgACAg4QCAUAAQ4dDgYgAQESgUkFIAASgU0KIAAVEoFRARKB
VQgVEoFRARKBVQUAAg4ODgUgAgEODgggAwEOEoDJDg8gAhUSQQESgIUSgUkSgV0HFRJBARKAhQcV
EXkBEoCFCwoCFRF5ARKAhRE4BSAAEoCFBSAAEoFdByAAFRJBAQ4JCgIVEXkBDhE4BSAAEoCJAyAA
HAQgARwOGwcKCBIIDg4SgIEOFRF5ARKAhRUReQEOEmESYQsKAhUReQESgIURPAkKAhUReQEOETwE
CgESMBYHBwgODhKAlRUReQESgIUVEXkBDhJhBiABARKBZQsVElUBFRGBaQIODgcVEYFpAg4OByAC
ARMAEwEPIAEBFRKBbQEVEYFpAg4OCwoCFRF5ARKAhRFACQoCFRF5AQ4RQAQKARIsCLd6XFYZNOCJ
CImEXc2AgMyRCLA/X38R1Qo6AgYOAwYSFAMGEhgDBhIMBAYSgKUEBhKAsQQGEoC1AwYSIAIGCAYG
FRFFAQgDBhIIBgYVEXkBDgYGFRF5ARwGBhURRQEcCAYVEXkBEoCFBgYVEUUBDgQGEoCRByAAFRJB
AQgKIAMVEkEBHA4ODgkgAhUSQQEODg4LAAQVEkEBDg4ODg4EIAEODgUgARJRDgYgAwEIDg4DAAAB
BCABAQINIAQBCB0IHRKAnRKAoQYgAQESgKUFAAASgLEFAAASgLUGAAEBEoC1BAAAEiAGEAEBDh4A
BhABAR4ADgMoAA4DKAACBSgAEoCpAygACAUIABKAsQUIABKAtQQIABIgCAEACAAAAAAAHgEAAQBU
AhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTQ18xNjYzMDRhMmQ0ZjY0OTcx
ODk1NWJlNzZiZDc3MmFiMQAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDIwAABJAQAaLk5FVEZy
YW1ld29yayxWZXJzaW9uPXY0LjUBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3
b3JrIDQuNSkBACRTY3JpcHRNYWluKzxQcm9jZXNzQ2FtcHVzQ291cnNlPmRfXzYAACUBACBTY3Jp
cHRNYWluKzxHZXRDYW1wdXNDb3Vyc2U+ZF9fNwAAIQEAHFNjcmlwdE1haW4rPEdldEZpbGVTaXpl
PmRfXzgAACQBAB9TY3JpcHRNYWluKzxHZXRBY2Nlc3NUb2tlbj5kX185AAAEAQAAAAoBAAIAAAAA
AQAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNj
b3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1i
NzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAA
AAAAAAAAUEFEUEFEULQAAAAIZwAAAAAAAAAAAAAiZwAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
FGcAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAA
AAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYgAAAGgQAAAAAAAAAAAAAGgQ0AAAA
VgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEAAAABACRiyhwAAAEAJGLK
HD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8A
AAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBHoDAAABAFMAdAByAGkAbgBn
AEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAwADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0A
ZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBG
AGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8AMQA2ADYAMwAwADQAYQAyAGQA
NABmADYANAA5ADcAMQA4ADkANQA1AGIAZQA3ADYAYgBkADcANwAyAGEAYgAxAAAAPgAPAAEARgBp
AGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADcAMwA3ADAALgAyADUAMQAyADQAAAAAAHAA
KAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AMQA2ADYAMwAwADQAYQAyAGQANABm
ADYANAA5ADcAMQA4ADkANQA1AGIAZQA3ADYAYgBkADcANwAyAGEAYgAxAC4AZABsAGwAAABIABIA
AQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAg
ADIAMAAyADAAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgA
KAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwAxADYANgAzADAANABh
ADIAZAA0AGYANgA0ADkANwAxADgAOQA1ADUAYgBlADcANgBiAGQANwA3ADIAYQBiADEALgBkAGwA
bAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AMQA2ADYAMwAwADQAYQAy
AGQANABmADYANAA5ADcAMQA4ADkANQA1AGIAZQA3ADYAYgBkADcANwAyAGEAYgAxAAAAQgAPAAEA
UAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA3ADMANwAwAC4AMgA1ADEAMgA0
AAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA3ADMA
NwAwAC4AMgA1ADEAMgA0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAYAAADAAAADQ3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_166304a2d4f649718955be76bd772ab1</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::ClientID,User::ClientIDPS,User::ClientName,User::ClientSecret,User::ClientServer,User::PageSize</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">1b220b00794c6a63153494874d557add</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">58a51016c8a6e02236f941a9ec415d01c8e3cc57</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Loop thru Clients\Campus Course\Script Component.Connections[PSDB]"
                      connectionManagerID="Package.ConnectionManagers[ADO.NET_PowerSchoolAPIPlugIn]"
                      connectionManagerRefId="Package.ConnectionManagers[ADO.NET_PowerSchoolAPIPlugIn]"
                      name="PSDB" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Loop thru Clients\Campus Course\Script Component.Outputs[Output 0]"
                      hasSideEffects="true"
                      name="Output 0">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop thru Clients\Campus Course\Script Component.Outputs[Output 0].Columns[CourseID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Campus Course\Script Component.Outputs[Output 0].Columns[CourseID]"
                          name="CourseID" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Campus Course\Script Component.Outputs[Output 0].Columns[CampusID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Campus Course\Script Component.Outputs[Output 0].Columns[CampusID]"
                          name="CampusID" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Loop thru Clients\Campus Course.Paths[Derived Column Output]"
                  endId="Package\Loop thru Clients\Campus Course\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Loop thru Clients\Campus Course\Derived Column.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Loop thru Clients\Campus Course.Paths[Output 0]"
                  endId="Package\Loop thru Clients\Campus Course\Derived Column.Inputs[Derived Column Input]"
                  name="Output 0"
                  startId="Package\Loop thru Clients\Campus Course\Script Component.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Loop thru Clients\Classes"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:Disabled="True"
          DTS:DTSID="{5453662c-f8a3-4ba2-80fb-917c336ae9f0}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Classes"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">@[User::ProcessClasses]==0</DTS:PropertyExpression>
          <DTS:ObjectData>
            <pipeline
              defaultBufferMaxRows="50000"
              version="1">
              <components>
                <component
                  refId="Package\Loop thru Clients\Classes\Derived Column"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Loop thru Clients\Classes\Derived Column.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Loop thru Clients\Classes\Derived Column.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Loop thru Clients\Classes\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop thru Clients\Classes\Derived Column.Outputs[Derived Column Output].Columns[ClientUID]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Loop thru Clients\Classes\Derived Column.Outputs[Derived Column Output].Columns[ClientUID]"
                          name="ClientUID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::ClientID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::ClientID]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Loop thru Clients\Classes\Derived Column.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Loop thru Clients\Classes\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop thru Clients\Classes\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Classes\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Classes\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Classes\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Loop thru Clients\Classes\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[PSClasses]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Loop thru Clients\Classes\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[PowerSchoolAPIPlugIn]"
                      connectionManagerRefId="Package.ConnectionManagers[PowerSchoolAPIPlugIn]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Loop thru Clients\Classes\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Loop thru Clients\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[CourseID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="CourseID"
                          externalMetadataColumnId="Package\Loop thru Clients\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CourseID]"
                          lineageId="Package\Loop thru Clients\Classes\Script Component.Outputs[Output 0].Columns[CourseID]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[CampusID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="CampusID"
                          externalMetadataColumnId="Package\Loop thru Clients\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CampusID]"
                          lineageId="Package\Loop thru Clients\Classes\Script Component.Outputs[Output 0].Columns[CampusID]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ClassID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="ClassID"
                          externalMetadataColumnId="Package\Loop thru Clients\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClassID]"
                          lineageId="Package\Loop thru Clients\Classes\Script Component.Outputs[Output 0].Columns[ClassID]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ClassName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="ClassName"
                          externalMetadataColumnId="Package\Loop thru Clients\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClassName]"
                          lineageId="Package\Loop thru Clients\Classes\Script Component.Outputs[Output 0].Columns[ClassName]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Period]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Period"
                          externalMetadataColumnId="Package\Loop thru Clients\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Period]"
                          lineageId="Package\Loop thru Clients\Classes\Script Component.Outputs[Output 0].Columns[Period]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Section]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Section"
                          externalMetadataColumnId="Package\Loop thru Clients\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Section]"
                          lineageId="Package\Loop thru Clients\Classes\Script Component.Outputs[Output 0].Columns[Section]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[RoomLocation]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="RoomLocation"
                          externalMetadataColumnId="Package\Loop thru Clients\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[RoomLocation]"
                          lineageId="Package\Loop thru Clients\Classes\Script Component.Outputs[Output 0].Columns[RoomLocation]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ClientUID]"
                          cachedDataType="i4"
                          cachedName="ClientUID"
                          externalMetadataColumnId="Package\Loop thru Clients\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientUID]"
                          lineageId="Package\Loop thru Clients\Classes\Derived Column.Outputs[Derived Column Output].Columns[ClientUID]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CourseID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="CourseID" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CampusID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="CampusID" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClassID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="ClassID" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClassName]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="ClassName" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Period]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Period" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Section]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Section" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[RoomLocation]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="RoomLocation" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientUID]"
                          dataType="i4"
                          name="ClientUID" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClassesPSUID]"
                          dataType="i4"
                          name="ClassesPSUID" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Loop thru Clients\Classes\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Loop thru Clients\Classes\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop thru Clients\Classes\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Classes\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Classes\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Classes\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Loop thru Clients\Classes\Script Component"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;9"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Script Component"
                  version="9">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="33">
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[
#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces

using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.IO;
using System.Net;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Runtime.Serialization;
using System.Runtime.Serialization.Json;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading.Tasks;
using System.Web.Script.Serialization;
using System.Windows.Forms;



#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    static string pLocation = "/ws/schema/query/com.hayessoft.TIPWeb.classList";
    static string tokenURI = "/oauth/access_token/";
    static string processType = "classlist";

    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();

    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */
        ProcessClasses().Wait();
    }


    public async Task<int> ProcessClasses()
    {
        try
        {

            // The server base address
            string baseURL = Variables.ClientServer;

            //MessageBox.Show(baseURL);

            ServicePointManager.Expect100Continue = true;
            ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;


            /// The client information used to get the OAuth Access Token from the server.
            string clientId = Variables.ClientIDPS;
            string clientSecret = Variables.ClientSecret;
            string sendToken = EncodeTo64(Variables.ClientIDPS + ":" + Variables.ClientSecret);
            //WriteToDatabase(0, "CampusCourse-sendToken", sendToken);
            // this will hold the Access Token returned from the server.
            //MessageBox.Show(sendToken, "sendToken");

            string accessToken = await GetAccessToken(baseURL, sendToken, clientId, clientSecret);
            //-->>>>>>>>>>>>>> Add : if returns null, stop
            if (accessToken == null)
            {
                WriteToDatabase(1, "Access Token", "GetAccessToken returned null");
                return 0;
            }
            //MessageBox.Show(accessToken, "access token");


            string FileSize = await GetFileSize(baseURL, accessToken);
            if (FileSize == null)
            {
                WriteToDatabase(1, "File Size", "GetFileSize returned null");
                return 0;
            }

            var jsonResponse = await GetClasses(baseURL, accessToken, FileSize);

            return 0;
        }
        catch (Exception ex)
        {
            WriteToDatabase(1, "ProcessClasses", ex.Message);
            return 0;
        }

    }


    /// <summary>
    /// Gets the list of CampusCourse.
    /// </summary>
    /// <param name="baseUrl">The url for the Campus Course list</param>
    /// <param name="accessToken">Acquired in the previous method</param>
    /// <returns>The page of articles.</returns>
    private async Task<dynamic> GetClasses(string baseUrl, string accessToken, string FileSize)
    {
        try
        {
            int TotalRecords;
            string pageSize = Variables.PageSize;
            int intPageSize = Convert.ToInt32(pageSize);
            //MessageBox.Show(pageSize, "page size");
            if (Int32.TryParse(FileSize, out TotalRecords))
            {
                int pages = ((TotalRecords - 1) / intPageSize) + 1;
                //MessageBox.Show(pages.ToString(), "pages");


                for (int i = 1; i <= pages; i++)
                {
                    string pagenum = i.ToString();
                    //MessageBox.Show(pagenum, "page number");

                    string uri = baseUrl + pLocation + "?pagesize=" + pageSize + "&page=" + pagenum;
                    var client = new HttpClient();

                    client.BaseAddress = new Uri(uri);

                    client.DefaultRequestHeaders.Accept.Clear();
                    client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));
                    client.DefaultRequestHeaders.Add("Authorization", "Bearer " + accessToken);

                    //MessageBox.Show(uri, "courses uri");

                    StringContent stringContent = new StringContent("", Encoding.UTF8, "application/json");
                    //StringContent stringContent = new StringContent("page=" + pagenum, Encoding.UTF8, "application/json");
                    //string content;

                    HttpResponseMessage response = await client.PostAsync(new Uri(uri), stringContent);

                    response.EnsureSuccessStatusCode();
                    string jsonString = await response.Content.ReadAsStringAsync();
                    //MessageBox.Show(jsonString, "jsonstring");

                    jsonString = cleanJsonString(jsonString);

                    //Deserialize our JSON
                    DataTable dt = JsonStringToDataTable(jsonString);
                    int numRows = 0;


                    foreach (DataRow row in dt.Rows)
                    {
                        Output0Buffer.AddRow();
                        Output0Buffer.RoomLocation = row["roomlocation"].ToString().Replace("\\", "");
                        Output0Buffer.ClassID = row["classid"].ToString().Replace("\\", "");
                        Output0Buffer.Period = row["period"].ToString().Replace("\\", "");
                        Output0Buffer.ClassName = row["classname"].ToString().Replace("\\", "");
                        Output0Buffer.CampusID = row["campusid"].ToString().Replace("\\", "");
                        Output0Buffer.CourseID = row["courseid"].ToString().Replace("\\", "");
                        Output0Buffer.Section = row["section"].ToString().Replace("\\", "");



                        numRows += 1;
                    }
                    WriteToDatabase(0, "GetClasses - Row Count Page Num: " + pagenum, numRows.ToString());
                }
                return null;
            }
            return null;

        }
        catch (Exception ex)
        {
            WriteToDatabase(1, "GetClasses", ex.Message);
            throw;
        }

    }


    private async Task<string> GetFileSize(string baseURL, string accessToken)
    {
        try
        {
            using (var client = new HttpClient())
            {
                string uri = baseURL + pLocation + "/count";
                client.BaseAddress = new Uri(uri);
                //MessageBox.Show(uri, "Classes uri");

                client.DefaultRequestHeaders.Accept.Clear();
                client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));
                client.DefaultRequestHeaders.Add("Authorization", "Bearer " + accessToken);

                var stringContent = new StringContent("", Encoding.UTF8, "application/json");

                //Get file size
                HttpResponseMessage response = await client.PostAsync(new Uri(uri), stringContent);

                response.EnsureSuccessStatusCode();
                string jsonString = await response.Content.ReadAsStringAsync();

                //string jsonString = response.Content.ToString();//.ReadAsStringAsync();
                //MessageBox.Show(jsonString, "jsonstring");

                //Deserialize our JSON
                var FileSizeObject = JsonHelper.JsonDeserialize<FileSize>(jsonString);

                // return the Access Token.
                var FileSize = FileSizeObject.count;
                //MessageBox.Show(FileSize, "File Size");
                WriteToDatabase(0, "RecordCount", FileSize);
                return FileSize;
            }
        }
        catch (Exception ex)
        {
            //MessageBox.Show(ex.Message);
            //MessageBox.Show(ex.StackTrace);
            WriteToDatabase(1, "GetFileSize", ex.Message);
            //return null;
            throw;
        }

    }

    /// <summary>
    /// This method uses the OAuth Client Credentials Flow to get an Access Token to provide
    /// Authorization to the APIs.
    /// </summary>
    /// <returns></returns>
    private static async Task<string> GetAccessToken(string baseURL, string sendToken, string clientId, string clientSecret)
    {
        try
        {
            using (var client = new HttpClient())
            {

                string uri = baseURL + tokenURI;
                client.BaseAddress = new Uri(uri);

                //MessageBox.Show(uri, "access token uri");

                client.DefaultRequestHeaders.Accept.Clear();
                client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/x-www-form-urlencoded"));
                client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Basic", sendToken);

                List<KeyValuePair<string, string>> postData = new List<KeyValuePair<string, string>>();
                postData.Add(new KeyValuePair<string, string>("grant_type", "client_credentials"));
                FormUrlEncodedContent content = new FormUrlEncodedContent(postData);

                // Post to the Server and parse the response.
                HttpResponseMessage response = await client.PostAsync(new Uri(uri), content);

                response.EnsureSuccessStatusCode();
                string jsonString = await response.Content.ReadAsStringAsync();

                //MessageBox.Show(jsonString, "jsonstring");

                //Deserialize our JSON
                var accessTokenObject = JsonHelper.JsonDeserialize<AccessToken>(jsonString);

                // return the Access Token.
                var token = accessTokenObject.access_token;
                //MessageBox.Show(token, "access token");
                return token;
            }
        }
        catch (Exception ex)
        {
            //WriteToDatabase(1, "GetAccessToken", ex.Message);
            //MessageBox.Show(ex.Message);
            //MessageBox.Show(ex.StackTrace);
            //return null;
            throw ex;
        }
    }

    public string EncodeTo64(string toEncode)
    {
        byte[] toEncodeAsBytes = System.Text.ASCIIEncoding.ASCII.GetBytes(toEncode);
        string returnValue = System.Convert.ToBase64String(toEncodeAsBytes);
        return returnValue;

    }
    public class JsonHelper
    {
        /// <summary>
        /// JSON Serialization
        /// </summary>
        public static string JsonSerializer<T>(T t)
        {
            DataContractJsonSerializer ser = new DataContractJsonSerializer(typeof(T));
            MemoryStream ms = new MemoryStream();
            ser.WriteObject(ms, t);
            string jsonString = Encoding.UTF8.GetString(ms.ToArray());
            ms.Close();
            return jsonString;
        }
        /// <summary>
        /// JSON Deserialization
        /// </summary>
        public static T JsonDeserialize<T>(string jsonString)
        {
            DataContractJsonSerializer ser = new DataContractJsonSerializer(typeof(T));
            MemoryStream ms = new MemoryStream(Encoding.UTF8.GetBytes(jsonString));
            T obj = (T)ser.ReadObject(ms);
            return obj;
        }
    }

    public class CampusCourse
    {
        public string classID { get; set; }
        public string className { get; set; }
        public string campusID { get; set; }
        public string courseID { get; set; }
        public string section { get; set; }
        public string period { get; set; }
        public string roomLocation { get; set; }

    }

    public class AccessToken
    {
        public string access_token { get; set; }
        public string token_type { get; set; }
        public string expires_in { get; set; }
    }

    public class FileSize
    {
        public string count { get; set; }

    }



    public DataTable JsonStringToDataTable(string jsonString)
    {
        try
        {
            DataTable dt = new DataTable();
            string[] jsonStringArray = Regex.Split(jsonString.Replace("[", "").Replace("]", ""), "},{");
            List<string> ColumnsName = new List<string>();
            foreach (string jSA in jsonStringArray)
            {
                string[] jsonStringData = Regex.Split(jSA.Replace("{", "").Replace("}", ""), ",");
                foreach (string ColumnsNameData in jsonStringData)
                {
                    try
                    {
                        int idx = ColumnsNameData.IndexOf(":");
                        string ColumnsNameString = ColumnsNameData.Substring(0, idx - 1).Replace("\"", "");
                        if (!ColumnsName.Contains(ColumnsNameString))
                        {
                            ColumnsName.Add(ColumnsNameString);
                        }
                    }
                    catch //(Exception ex)
                    {
                        WriteToDatabase(1, "JsonStringToDataTable: Columns", (string.Format("Error Parsing Column Name : {0}", ColumnsNameData)));
                    }
                }
                break;
            }
            foreach (string AddColumnName in ColumnsName)
            {
                dt.Columns.Add(AddColumnName);
            }
            foreach (string jSA in jsonStringArray)
            {
                string[] RowData = Regex.Split(jSA.Replace("{", "").Replace("}", ""), ",");
                DataRow nr = dt.NewRow();
                foreach (string rowData in RowData)
                {
                    try
                    {
                        int idx = rowData.IndexOf(":");
                        string RowColumns = rowData.Substring(0, idx - 1).Replace("\"", "").Replace("\\", "");
                        string RowDataString = rowData.Substring(idx + 1).Replace("\"", "").Replace("\\", "");
                        nr[RowColumns] = RowDataString;
                    }
                    catch //(Exception ex)
                    {
                        WriteToDatabase(1, "JsonStringToDataTable: For each row", (string.Format("Error Parsing Row  Name : {0}", rowData)));
                        continue;
                    }
                }
                dt.Rows.Add(nr);
            }
            return dt;
        }
        catch (Exception ex)
        {
            WriteToDatabase(1, "JsonStringToDataTable", ex.Message);
            return null;
        }
    }

    public string cleanJsonString(string jsonString)
    {

        jsonString = jsonString.Replace("{\"record\":[", "");
        jsonString = jsonString.Replace("],\"@extensions\":\"\"", "");


        return jsonString;
    }


    public void WriteToDatabase(int Error, string Area, string LogInfo)
    {
        try
        {
            //MessageBox.Show("WriteToDatabase");
            var ConnString = Connections.PSDB.ConnectionString;

            using (SqlConnection conn = new SqlConnection(Connections.PSDB.ConnectionString))
            {
                if (conn.State != ConnectionState.Open) conn.Open();
                //string insertText = "Insert into PSLog (ClientUID, FileType, Area, LogInfo) Values (@ClientUID, @FileType, @Area, @LogInfo ) ";
                SqlCommand cmd = new SqlCommand("spLogInfo", conn);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("@ClientUID", SqlDbType.Int).Value = Variables.ClientID;
                cmd.Parameters.Add("@Error", SqlDbType.Int).Value = Error;
                cmd.Parameters.Add("@FileType", SqlDbType.VarChar, 50).Value = processType;
                cmd.Parameters.Add("@Area", SqlDbType.VarChar, 100).Value = Area;
                cmd.Parameters.Add("@LogInfo", SqlDbType.VarChar, 1000).Value = LogInfo;
                cmd.ExecuteNonQuery();
            }
        }
        catch //(Exception ex)
        {
            throw;
        }
    }
}




]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_ba0ed5b6a1944ce6abbe280afa1fbdb9.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{A31EAFA6-3BB6-4BAC-BD2B-0EFF247A5D52}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_ba0ed5b6a1944ce6abbe280afa1fbdb9</RootNamespace>
    <AssemblyName>SC_ba0ed5b6a1944ce6abbe280afa1fbdb9</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Newtonsoft.Json, Version=12.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <HintPath>C:\Users\nblakely\AppData\Local\Temp\Vsta\SSIS_SC120\Vstaa2x5hKK4rkOL2dONmWNU9g\packages\Newtonsoft.Json.12.0.3\lib\net45\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Runtime.Serialization" />
    <Reference Include="System.Web.Extensions" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
      <DesignTime>True</DesignTime>
    </Compile>
    <None Include="packages.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[packages.config]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="Newtonsoft.Json" version="12.0.3" targetFramework="net45" />
</packages>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_ba0ed5b6a1944ce6abbe280afa1fbdb9.Properties.Settings.get_Default():SC_ba0ed5b6a1944ce6abbe280afa1fbdb9.Properties.Sett" +
    "ings")]

namespace SC_ba0ed5b6a1944ce6abbe280afa1fbdb9.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 PSDB
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"PSDB").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public Int32 ClientID
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["ClientID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientIDPS
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientIDPS"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientSecret
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientSecret"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientServer
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientServer"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String PageSize
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["PageSize"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String ClassID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool ClassID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ClassName
    {
        set
        {
            this[1] = value;
        }
    }
    public bool ClassName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CampusID
    {
        set
        {
            this[2] = value;
        }
    }
    public bool CampusID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CourseID
    {
        set
        {
            this[3] = value;
        }
    }
    public bool CourseID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Section
    {
        set
        {
            this[4] = value;
        }
    }
    public bool Section_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Period
    {
        set
        {
            this[5] = value;
        }
    }
    public bool Period_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String RoomLocation
    {
        set
        {
            this[6] = value;
        }
    }
    public bool RoomLocation_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_ba0ed5b6a1944ce6abbe280afa1fbdb9</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_ba0ed5b6a1944ce6abbe280afa1fbdb9</msb:DisplayName>
		<msb:ProjectId>{C57C8670-A5AA-4DFB-BF18-B45428FF431D}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_ba0ed5b6a1944ce6abbe280afa1fbdb9.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="packages.config"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_ba0ed5b6a1944ce6abbe280afa1fbdb9")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_ba0ed5b6a1944ce6abbe280afa1fbdb9")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_ba0ed5b6a1944ce6abbe280afa1fbdb9.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_ba0ed5b6a1944ce6abbe280afa1fbdb9.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_ba0ed5b6a1944ce6abbe280afa1fbdb9.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_ba0ed5b6a1944ce6abbe280afa1fbdb9.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_ba0ed5b6a1944ce6abbe280afa1fbdb9.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_ba0ed5b6a1944ce6abbe280afa1fbdb9.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[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
AAAAAAAAAAAPAAAAuwEAAMoBAAABAAAAGAAAAQAAAAAHAAAAxAEAAMsBAAAZAAAAGAAAATYCfDMA
AAQDKJMAAAoqAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAADQEwAAI34AADwU
AAAwFAAAI1N0cmluZ3MAAAAAbCgAACAHAAAjVVMAjC8AABAAAAAjR1VJRAAAAJwvAABcBgAAI0Js
b2IAAAAAAAAAAgAAAVcXogsJDwAAAPoBMwAWAAABAAAAWwAAABAAAAA4AAAAWAAAADkAAAAEAAAA
mQAAAD4AAAAMAAAACAAAACMAAAAvAAAACAAAAA8AAAABAAAACgAAAAEAAAAIAAAAAgAAAA4AAAAA
AJoKAQAAAAAABgCeCM8PBgAyCc8PBgC3B7wPDwBDEAAABgDkB8gMBgCBCMgMBgBiCMgMBgAZCcgM
BgC+CMgMBgDXCMgMBgAWCMgMBgAxCAEKCgDyCA4GBgBvBpMLBgD7B88PBgDnAPIQBgAKAc8PDgBu
B88PBgAdEpMLEgBQBecCBgAxARIDVwCaDwAAEgDuE+cCBgCIDZMLEgBFDYcSBgB0C8cCBgB/B88P
BgBJBpMLBgDeBc8PBgAjAc8PBgBKCLwPFgAEEzoOFgAwBToOBgCLDz0RBgBaBZMLFgCdEjoOFgDu
EjoOCgB6Dg4GGgBrDg4GCgDbDQ4GCgDGEg4GHgBmANAOBgCaB7wPBgCLDu8PBgDHDXgMIgA+B4QK
IgDLB4QKIgDhBmMMBgB/CvIQBgD4CZ4TBgBgE5MLBgBmCpMLIgAEFB4REgDaDOcCEgAbDOcCEgAm
DecCEgA4DZINEgBTB+cCEgC/BIcSEgC1BJINEgA9BucCEgAPDYcSEgAtD4cSEgAvBucCBgA6AZML
EgAhD5INBgBrDZMLJgABAPgOJgAqAPgOJgBNAPgOHgB/ANAOHgAaANAOpwC+EwAAHgCQANAOBgBm
BZMLBgAWFMgMKgBWD6UNKgBxD40MBgB6C8cCIgCxDiQSIgBTBiQSIgB3CpMLFgCAEVwRFgDuAFwR
FgCLCVwRFgB0EVwRFgASEzoOEgDGBucCFgBxCVwRBgBnARIDBgDZABIDAAAAAA8CAAAAAAEAAQAB
ABAAEAwAABAAAQABAAEAEABdDgAAmQAEAA4AAQAQAKgSAAClAAQAIAABABAAUBEAAE0ABwAlAAEA
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
AgC6EAAAAwDpDQAAAQCrCQAAAQCrCQAAAQCrCQAAAQCrCQAAAQCrCQAAAQCrCQAAAQCrCQAAAQCr
CQAAAQCrCQAAAQCrCQAAAQCrCQAAAQCrCQAAAQCrCQAAAQCrCQAAAQDaEQAAAgCyDwAAAwCtEQAA
BADpDQAAAQDMEgAAAQDMEgAAAQCrCQAAAQDsEwAAAQBPCgAAAQCrCQAAAQCrCQAAAQCrCQAAAQCr
CQAAAQCrCQAAAQCrCQAAAQCrCQAAAQCrCQAAAQCrCQAAAQCrCQAAAQCrCQAAAQABBgAAAQABBgAA
AQABBgAAAQABBg0AdQAOAHUADwB1ABAAdQAJAKUPAQARAKUPBgAZAKUPCgApAKUPEAAxAKUPEAA5
AKUPEABBAKUPEABJAKUPEABRAKUPEABZAKUPEABhAKUPEABpAKUPBgB5AKUPFQCRAKUPGwDZAKUP
BgDpAJUTBgDpAPEFIQD5AKUPBgBZAaUPBgB5AaUPJwBJAVAJBgBJAVsJBgCJAVwSBgAMAC0HPgAM
AFoTRwAMAHsKVAAUAC0HPgAUAFoTRwAUAHsKVAAcAC0HPgAcAFoTRwAcAHsKVACRAawClgCRAbEQ
nACZARsKogChAKUPBgChAesEzQCpAWES0wAkAKUPBgChAfAJ4AChAW0K5QAkAAkR6wAkAFID8QCh
AQYS9wAkAJcP/QAsANYSDAGhABIREQGxAVIDFwEsAJUTHgEZAQ8HBgChAP0TIgGhAW0KJwG5AIoL
LAGhAOIRMgHBAVIDOAHBACQFPgFRASoKPgHJAKUPEADJATQHRwHJAe0LBgDZAaUPTQHhATkGVAHZ
AbURWwHxAVIDYQERAmcJawHxAVIDcAHhAR8UewExAaUPfwExAYoLiwExAU8LAQAZAqUPEAAxAfYT
BgAxAU0SBgAxAVASHgFJAaUPBgBJAaAClQFJAc4QnQGZAKUPBgBJAfMCowEhAu8MqQEpAsMFrwEx
ApsOtgFJAYEQvAE5AoELwgFJAdkTyQFBAqoTzwFxAHgF1gFxABIU3gFhAaUP5AGBAaUPBgBpAqUP
FQDRAKUPBgBxAhgS9AGRAbsBlgDRAAoU/AGRAWMKAQJ5AgkHBgDRAKUPBwJxAg0SDQKBArEJLAKB
AlcLMQKhAf8ROAI8ADoPRQJEAIEDHgEMAGoDVAJEAHMSDAFMADoPRQJUAIEDHgFUAHMSDAEMAIUN
fwIMAH0S8QAMAPEFIQCZATgBqwIJAhcHsAIJAloKPgGhAf8RtwIhAaUPBgCRAqUPEAAhAcQRvQIh
AZMRxAKZAjITygJcAEoOBgCpAqUPEABcAFID8QChAf8R3gKxAlID5AIBAaUP6gIhAT8D8wJkADoP
RQJsAIEDHgEUAGoDVAJsAHMSDAEJAQMFHwMJAeISJQO5Ai0DKwPBApcPPQMRAdYSQwO5AIELRwOZ
AFoKPgERAZUTHgEUAIUNfwIUAH0S8QAUAPEFIQAcAGoDVAIcAIUNfwIcAH0S8QAcAPEFIQDJAqUP
5AKZAqoMmAN0AKUPBgB8AKUPswN0AFID8QApAaUPuwMkAHMAUAYuAAsA/QQuABMABgUuABsAJQUu
ACMALgUuACsAVwUuADMAVwUuADsAVwUuAEMALgUuAEsAXQUuAFMAVwUuAFsAdAVDAGMASwaAAGsA
vgWgAGsA4wXAAGsABAbgAGsAJgbjAJsASwZhAXsASwaBAXsASwahAXsASwajAXsASwbBAXsASwbD
AXsASwbhAXsASwbjAXsASwYBAnsASwYDAnsASwYhAnsASwZBAnsASwZhAnsASwaBAnsASwahAnsA
SwbBAnsASwbJAqMAJQXpAqMAJQUAB3sASwYgB3sASwZAB3sASwZgB3sASwaAB3sASwagB3sASwbA
B3sASwbgB3sASwYACHsASwYgCHsASwZACHsASwZgCHsASwaACHsASwagCHsASwbgCHsASwYACXsA
SwYgCXsASwZACXsASwZgCXsASwaACXsASwbACXsASwbgCXsASwZACpMASwaACpMASwbACpMASwYA
C5MASwYuAF0AcgCHAKgAQgGRAewBFAKFAkwDgQMDAAEABQAPAAYAEAAHABYACAAYAAoAGQALACAA
DAAjAAAATALaBAAA2greBAAAjgXaBAAAEwveBAAAcALaBAAA7QreBAAAJQLaBAAAxgreBAAAwAza
BAAAQAveBAAAzgTaBAAAAQveBAAAKgzaBAAAKAveBAAAHALiBAAAlwLoBAAA1QLaBAAAuAXaBAAA
MxLaBAAASQ/aBAAAywnaBAAAiw7sBAAAvgbyBAAAaxL4BAAAZALaBAAAqgXaBAAAigLaBAAAPwLa
BAAAYw3aBAAA5ATaBAAATAzaBAAA4AvaBAAAhwbaBAAABQzaBAAALBPaBAEADwADAAEAEAAFAAEA
EQAHAAEAEgAJAAEAEwALAAEAFAANAAEAFQAPAAEAFgARAAEAFwATAAEAGAAVAAEAGQAXAAEAGgAZ
AAEAGwAbAAEAHAAdAAIAJgAfAAIAKAAhAAIAKQAjAAIAKgAlAAIAKwAnAAIALAApAAIALQArAAIA
LwAtAAIAMAAvAAEAMQAvAAIAMgAxAAIAOAAzAAEAOQAzAAIAOgA1AAEAOwA1AAIAPAA3AAEAPQA3
AAIAPgA5AAEAPwA5AAIAQAA7AAEAQQA7AAIAQgA9AAEAQwA9AAIARAA/AAEARQA/AAIARwBBAAEA
SABBAAIASQBDAAEASgBDAAIASwBFAAEATABFAAIATgBHAAEATwBHAA0AogAhAA0ApAAjAA4ApgAh
AA4AqAAjAA8AqgAhAA8ArAAjABAArgAhABAAsAAjADgAZwB8ANoABgHxAT8CTgJpAm8C1QIDAwsD
nwOrAwSAAAABAAAAHR00TQAAAAAAAOsBAAAEAAAAAAAAAAAAAADmAwkDAAAAAAwAAAAAAAAAAAAA
AO8DPRMAAAAABAAAAAAAAAAAAAAA5gOSBgAAAAAEAAAAAAAAAAAAAADmA+cCAAAAAAQAAAAAAAAA
AAAAAPgDOg4AAAAADAAAAAAAAAAAAAAA7wNoEwAAAAAMAAAAAAAAAAAAAADvA/MNAAAAAAQAAAAA
AAAAAAAAAOYDkwsAAAAADAAAAAAAAAAAAAAA7wMWDgAAAAAEAAAAAAAAAAAAAADmA40MAAAAAAAA
AAABAAAAABAAAAkAAgAKAAIACwACAAwAAgANAAIADgACAA8AAgAQAAIAAAAAAGsA4AIAAAAAbQDg
AjMATwA5AG0APwCCAD8AkQDTAF8C0wB1AgcBEwMHATMDIQFmAyEBcgNsAHwDIQHLAyEB1wNsAOED
AAAAAABJRFRTQ29tcG9uZW50TWV0YURhdGExMDAASURUU1ZhcmlhYmxlMTAwAElEVFNSdW50aW1l
Q29ubmVjdGlvbkNvbGxlY3Rpb24xMDAASURUU1J1bnRpbWVDb25uZWN0aW9uMTAwAElEVFNDb25u
ZWN0aW9uTWFuYWdlcjEwMABJRFRTVmFyaWFibGVzMTAwAElEVFNFdmFsdWF0b3JDb250ZXh0MTAw
ADxiYXNlVVJMPjVfXzEAPHBhZ2VTaXplPjVfXzEAPGNsaWVudD41X18xADw+dV9fMQBJRW51bWVy
YWJsZWAxAFRhc2tgMQBIdHRwSGVhZGVyVmFsdWVDb2xsZWN0aW9uYDEAQXN5bmNUYXNrTWV0aG9k
QnVpbGRlcmAxAFRhc2tBd2FpdGVyYDEATGlzdGAxAFRvSW50MzIAPHBhZ2VudW0+NV9fMgA8YWNj
ZXNzVG9rZW4+NV9fMgA8PnVfXzIAS2V5VmFsdWVQYWlyYDIAPGk+NV9fMwBFbmNvZGVUbzY0ADxw
YWdlcz41X180ADxQcm9jZXNzQ2xhc3Nlcz5kX182ADxHZXRDbGFzc2VzPmRfXzcAZ2V0X1VURjgA
PEdldEZpbGVTaXplPmRfXzgAPEdldEFjY2Vzc1Rva2VuPmRfXzkAU0NfYmEwZWQ1YjZhMTk0NGNl
NmFiYmUyODBhZmExZmJkYjkAPE1vZHVsZT4AZ2V0X1BTREIAc2V0X0NvdXJzZUlEAGdldF9jb3Vy
c2VJRABzZXRfY291cnNlSUQAc2V0X0NsYXNzSUQAZ2V0X2NsYXNzSUQAc2V0X2NsYXNzSUQAc2V0
X0NhbXB1c0lEAGdldF9jYW1wdXNJRABzZXRfY2FtcHVzSUQAZ2V0X0NsaWVudElEAEdldE91dHB1
dElEAGdldF9BU0NJSQB0b2tlblVSSQBiYXNlVVJMAFN5c3RlbS5JTwBnZXRfQ2xpZW50SURQUwBU
AEFyZWEAU3lzdGVtLkRhdGEAZ2V0X0NvbXBvbmVudE1ldGFEYXRhAG1zY29ybGliAFN5c3RlbS5D
b2xsZWN0aW9ucy5HZW5lcmljAFJlYWRBc1N0cmluZ0FzeW5jAFBvc3RBc3luYwBjbGllbnRJZABB
ZGQATWFya091dHB1dHNGaW5pc2hlZABBd2FpdFVuc2FmZU9uQ29tcGxldGVkAGdldF9Jc0NvbXBs
ZXRlZAA8Y291cnNlSUQ+a19fQmFja2luZ0ZpZWxkADxjbGFzc0lEPmtfX0JhY2tpbmdGaWVsZAA8
Y2FtcHVzSUQ+a19fQmFja2luZ0ZpZWxkADxwZXJpb2Q+a19fQmFja2luZ0ZpZWxkADxjbGFzc05h
bWU+a19fQmFja2luZ0ZpZWxkADx0b2tlbl90eXBlPmtfX0JhY2tpbmdGaWVsZAA8YWNjZXNzX3Rv
a2VuPmtfX0JhY2tpbmdGaWVsZAA8ZXhwaXJlc19pbj5rX19CYWNraW5nRmllbGQAPHJvb21Mb2Nh
dGlvbj5rX19CYWNraW5nRmllbGQAPHNlY3Rpb24+a19fQmFja2luZ0ZpZWxkADxjb3VudD5rX19C
YWNraW5nRmllbGQARGJDb21tYW5kAFNxbENvbW1hbmQAc2V0X1BlcmlvZABnZXRfcGVyaW9kAHNl
dF9wZXJpb2QAUmVwbGFjZQBkZWZhdWx0SW5zdGFuY2UARW5zdXJlU3VjY2Vzc1N0YXR1c0NvZGUA
dG9FbmNvZGUAZ2V0X01lc3NhZ2UASHR0cFJlc3BvbnNlTWVzc2FnZQBKc29uU3RyaW5nVG9EYXRh
VGFibGUASURpc3Bvc2FibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAc2V0
X0NsYXNzTmFtZQBnZXRfY2xhc3NOYW1lAHNldF9jbGFzc05hbWUAZ2V0X0NsaWVudE5hbWUAR2V0
UnVudGltZUNvbm5lY3Rpb25CeU5hbWUASUFzeW5jU3RhdGVNYWNoaW5lAFNldFN0YXRlTWFjaGlu
ZQBzdGF0ZU1hY2hpbmUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAU3FsRGJUeXBl
AHNldF9Db21tYW5kVHlwZQBWYWx1ZVR5cGUAU2VjdXJpdHlQcm90b2NvbFR5cGUAcHJvY2Vzc1R5
cGUAZ2V0X3Rva2VuX3R5cGUAc2V0X3Rva2VuX3R5cGUAU3lzdGVtLkNvcmUAZ2V0X0N1bHR1cmUA
c2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAEludGVybmFsRGF0YUNvbGxlY3Rpb25CYXNlAEFw
cGxpY2F0aW9uU2V0dGluZ3NCYXNlAFdyaXRlVG9EYXRhYmFzZQBDbG9zZQBEaXNwb3NlAFRyeVBh
cnNlAENhbXB1c0NvdXJzZQBDcmVhdGUAZ2V0X1N0YXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENv
bm5lY3Rpb25TdGF0ZQA8PjFfX3N0YXRlAER5bmFtaWNBdHRyaWJ1dGUAQ29tcGlsZXJHZW5lcmF0
ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmli
dXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzeW5j
U3RhdGVNYWNoaW5lQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZy
YW1ld29ya0F0dHJpYnV0ZQBEZWJ1Z2dlckhpZGRlbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3Vy
YXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJl
bGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHly
aWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3Nl
bWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhl
Y3V0ZQBQb3N0RXhlY3V0ZQBzZXRfVmFsdWUAQXV0aGVudGljYXRpb25IZWFkZXJWYWx1ZQBNZWRp
YVR5cGVXaXRoUXVhbGl0eUhlYWRlclZhbHVlAHZhbHVlAHNldF9FeHBlY3QxMDBDb250aW51ZQBn
ZXRfUGFnZVNpemUAR2V0RmlsZVNpemUASnNvbkRlc2VyaWFsaXplAEluZGV4T2YARW5jb2RpbmcA
U3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb0Jhc2U2NFN0cmluZwBnZXRfQ29ubmVjdGlvblN0
cmluZwBjbGVhbkpzb25TdHJpbmcAanNvblN0cmluZwBUb1N0cmluZwBHZXRTdHJpbmcAU3Vic3Ry
aW5nAFVyaQBnZXRfVGFzawBTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0NfYmEwZWQ1YjZhMTk0NGNl
NmFiYmUyODBhZmExZmJkYjkuZGxsAHNldF9Db3Vyc2VJRF9Jc051bGwAc2V0X0NsYXNzSURfSXNO
dWxsAHNldF9DYW1wdXNJRF9Jc051bGwAc2V0X1BlcmlvZF9Jc051bGwAc2V0X0NsYXNzTmFtZV9J
c051bGwAc2V0X1Jvb21Mb2NhdGlvbl9Jc051bGwAc2V0X1NlY3Rpb25fSXNOdWxsAFNldE51bGwA
c2V0X1NlY3VyaXR5UHJvdG9jb2wAYmFzZVVybABNZW1vcnlTdHJlYW0AZ2V0X0l0ZW0Ac2V0X0l0
ZW0AU3lzdGVtAHJlc291cmNlTWFuAHNlbmRUb2tlbgBHZXRBY2Nlc3NUb2tlbgBhY2Nlc3NUb2tl
bgBnZXRfYWNjZXNzX3Rva2VuAHNldF9hY2Nlc3NfdG9rZW4AT3BlbgBnZXRfZXhwaXJlc19pbgBz
ZXRfZXhwaXJlc19pbgBTY3JpcHRNYWluAERhdGFDb2x1bW4Ac2V0X1Jvb21Mb2NhdGlvbgBnZXRf
cm9vbUxvY2F0aW9uAHNldF9yb29tTG9jYXRpb24AcExvY2F0aW9uAFN5c3RlbS5Db25maWd1cmF0
aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SdW50aW1lLlNlcmlhbGl6YXRpb24Ac2V0
X0F1dGhvcml6YXRpb24Ac2V0X1NlY3Rpb24AU3lzdGVtLlJlZmxlY3Rpb24ARGF0YUNvbHVtbkNv
bGxlY3Rpb24AZ2V0X1J1bnRpbWVDb25uZWN0aW9uQ29sbGVjdGlvbgBTcWxQYXJhbWV0ZXJDb2xs
ZWN0aW9uAERhdGFSb3dDb2xsZWN0aW9uAERiQ29ubmVjdGlvbgBTcWxDb25uZWN0aW9uAGdldF9z
ZWN0aW9uAHNldF9zZWN0aW9uAEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24AU2V0RXhjZXB0aW9u
AFN5c3RlbS5EYXRhLkNvbW1vbgBTeXN0ZW0uUnVudGltZS5TZXJpYWxpemF0aW9uLkpzb24AQ3Vs
dHVyZUluZm8ATG9nSW5mbwBPdXRwdXROYW1lTWFwAE91dHB1dE1hcABNaWNyb3NvZnQuU3FsU2Vy
dmVyLkRUU1J1bnRpbWVXcmFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUGlwZWxpbmVXcmFwAFN5
c3RlbS5OZXQuSHR0cABDbGVhcgA8PnRfX2J1aWxkZXIAT3V0cHV0MEJ1ZmZlcgBQaXBlbGluZUJ1
ZmZlcgBTY3JpcHRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ29ubmVjdGlvbk1hbmFn
ZXIAU2VydmljZVBvaW50TWFuYWdlcgBKc29uSGVscGVyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRz
LlJ1bnRpbWUuV3JhcHBlcgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZS5XcmFwcGVy
AERiUGFyYW1ldGVyAFNxbFBhcmFtZXRlcgBHZXRBd2FpdGVyAGdldF9DbGllbnRTZXJ2ZXIARGF0
YUNvbnRyYWN0SnNvblNlcmlhbGl6ZXIAWG1sT2JqZWN0U2VyaWFsaXplcgBFcnJvcgBJRW51bWVy
YXRvcgBHZXRFbnVtZXJhdG9yAC5jdG9yAC5jY3RvcgBPdXRwdXRJRHMAU3lzdGVtLkRpYWdub3N0
aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTQ19i
YTBlZDViNmExOTQ0Y2U2YWJiZTI4MGFmYTFmYmRiOS5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNv
dXJjZXMARGVidWdnaW5nTW9kZXMAU0NfYmEwZWQ1YjZhMTk0NGNlNmFiYmUyODBhZmExZmJkYjku
UHJvcGVydGllcwBnZXRfUmVhZE9ubHlWYXJpYWJsZXMAUHJvY2Vzc0NsYXNzZXMAR2V0Q2xhc3Nl
cwBHZXRCeXRlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbkluZGV4ZXMAU2V0dGluZ3MA
PD40X190aGlzAFN5c3RlbS5UaHJlYWRpbmcuVGFza3MAQ29udGFpbnMAZ2V0X0NvbHVtbnMAU3lz
dGVtLlRleHQuUmVndWxhckV4cHJlc3Npb25zAFN5c3RlbS5Db2xsZWN0aW9ucwBDb25uZWN0aW9u
cwBTeXN0ZW0uTmV0Lkh0dHAuSGVhZGVycwBIdHRwSGVhZGVycwBIdHRwUmVxdWVzdEhlYWRlcnMA
Z2V0X0RlZmF1bHRSZXF1ZXN0SGVhZGVycwBCdWZmZXJzAGdldF9QYXJhbWV0ZXJzAHNldF9CYXNl
QWRkcmVzcwBGaW5pc2hPdXRwdXRzAGdldF9Sb3dzAENyZWF0ZU5ld091dHB1dFJvd3MAQ29uY2F0
AEZvcm1hdABSZWFkT2JqZWN0AFdyaXRlT2JqZWN0AFN5c3RlbS5OZXQAZ2V0X0NsaWVudFNlY3Jl
dABjbGllbnRTZWNyZXQAU2V0RW5kT2ZSb3dzZXQAV2FpdABTcGxpdABnZXRfRGVmYXVsdABHZXRS
ZXN1bHQAU2V0UmVzdWx0AFN5c3RlbS5EYXRhLlNxbENsaWVudABIdHRwQ2xpZW50AFVzZXJDb21w
b25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVudABnZXRfQ3VycmVudABnZXRfQ29u
dGVudABGb3JtVXJsRW5jb2RlZENvbnRlbnQAU3RyaW5nQ29udGVudABIdHRwQ29udGVudABnZXRf
Y291bnQAc2V0X2NvdW50AGdldF9BY2NlcHQATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABT
dGFydABDb252ZXJ0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AFByaW1lT3V0cHV0
AE1vdmVOZXh0AFN5c3RlbS5UZXh0AEdldFZhbHVlV2l0aENvbnRleHQAU2NyaXB0Q29tcG9uZW50
RXZhbENvbnRleHQAZ2V0X0V2YWx1YXRvckNvbnRleHQARGF0YVJvdwBBZGRSb3cATmV3Um93AFJl
Z2V4AFRvQXJyYXkAZ2V0X0Fzc2VtYmx5AEV4ZWN1dGVOb25RdWVyeQAAAANbAAABAANdAAAHfQAs
AHsAAAN7AAADfQAAAywAAAM6AAADIgAAPUoAcwBvAG4AUwB0AHIAaQBuAGcAVABvAEQAYQB0AGEA
VABhAGIAbABlADoAIABDAG8AbAB1AG0AbgBzAAA/RQByAHIAbwByACAAUABhAHIAcwBpAG4AZwAg
AEMAbwBsAHUAbQBuACAATgBhAG0AZQAgADoAIAB7ADAAfQAAA1wAAEdKAHMAbwBuAFMAdAByAGkA
bgBnAFQAbwBEAGEAdABhAFQAYQBiAGwAZQA6ACAARgBvAHIAIABlAGEAYwBoACAAcgBvAHcAADtF
AHIAcgBvAHIAIABQAGEAcgBzAGkAbgBnACAAUgBvAHcAIAAgAE4AYQBtAGUAIAA6ACAAewAwAH0A
ACtKAHMAbwBuAFMAdAByAGkAbgBnAFQAbwBEAGEAdABhAFQAYQBiAGwAZQAAF3sAIgByAGUAYwBv
AHIAZAAiADoAWwAAJV0ALAAiAEAAZQB4AHQAZQBuAHMAaQBvAG4AcwAiADoAIgAiAAATcwBwAEwA
bwBnAEkAbgBmAG8AABVAAEMAbABpAGUAbgB0AFUASQBEAAANQABFAHIAcgBvAHIAABNAAEYAaQBs
AGUAVAB5AHAAZQAAC0AAQQByAGUAYQAAEUAATABvAGcASQBuAGYAbwAAXy8AdwBzAC8AcwBjAGgA
ZQBtAGEALwBxAHUAZQByAHkALwBjAG8AbQAuAGgAYQB5AGUAcwBzAG8AZgB0AC4AVABJAFAAVwBl
AGIALgBjAGwAYQBzAHMATABpAHMAdAAAKS8AbwBhAHUAdABoAC8AYQBjAGMAZQBzAHMAXwB0AG8A
awBlAG4ALwAAE2MAbABhAHMAcwBsAGkAcwB0AACAm0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIA
dAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBz
AHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkA
bgBzAHQAZQBhAGQALgAAEU8AdQB0AHAAdQB0ACAAMAAACVAAUwBEAEIAABFDAGwAaQBlAG4AdABJ
AEQAABVDAGwAaQBlAG4AdABJAEQAUABTAAAVQwBsAGkAZQBuAHQATgBhAG0AZQAAGUMAbABpAGUA
bgB0AFMAZQBjAHIAZQB0AAAZQwBsAGkAZQBuAHQAUwBlAHIAdgBlAHIAABFQAGEAZwBlAFMAaQB6
AGUAAHFTAEMAXwBiAGEAMABlAGQANQBiADYAYQAxADkANAA0AGMAZQA2AGEAYgBiAGUAMgA4ADAA
YQBmAGEAMQBmAGIAZABiADkALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBl
AHMAABlBAGMAYwBlAHMAcwAgAFQAbwBrAGUAbgAAOUcAZQB0AEEAYwBjAGUAcwBzAFQAbwBrAGUA
bgAgAHIAZQB0AHUAcgBuAGUAZAAgAG4AdQBsAGwAABNGAGkAbABlACAAUwBpAHoAZQAAM0cAZQB0
AEYAaQBsAGUAUwBpAHoAZQAgAHIAZQB0AHUAcgBuAGUAZAAgAG4AdQBsAGwAAB1QAHIAbwBjAGUA
cwBzAEMAbABhAHMAcwBlAHMAABU/AHAAYQBnAGUAcwBpAHoAZQA9AAANJgBwAGEAZwBlAD0AACFh
AHAAcABsAGkAYwBhAHQAaQBvAG4ALwBqAHMAbwBuAAAbQQB1AHQAaABvAHIAaQB6AGEAdABpAG8A
bgAAD0IAZQBhAHIAZQByACAAABlyAG8AbwBtAGwAbwBjAGEAdABpAG8AbgAAD2MAbABhAHMAcwBp
AGQAAA1wAGUAcgBpAG8AZAAAE2MAbABhAHMAcwBuAGEAbQBlAAARYwBhAG0AcAB1AHMAaQBkAAAR
YwBvAHUAcgBzAGUAaQBkAAAPcwBlAGMAdABpAG8AbgAAQ0cAZQB0AEMAbABhAHMAcwBlAHMAIAAt
ACAAUgBvAHcAIABDAG8AdQBuAHQAIABQAGEAZwBlACAATgB1AG0AOgAgAAEVRwBlAHQAQwBsAGEA
cwBzAGUAcwAADS8AYwBvAHUAbgB0AAAXUgBlAGMAbwByAGQAQwBvAHUAbgB0AAAXRwBlAHQARgBp
AGwAZQBTAGkAegBlAABDYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AeAAtAHcAdwB3AC0AZgBvAHIA
bQAtAHUAcgBsAGUAbgBjAG8AZABlAGQAAQtCAGEAcwBpAGMAABVnAHIAYQBuAHQAXwB0AHkAcABl
AAAlYwBsAGkAZQBuAHQAXwBjAHIAZQBkAGUAbgB0AGkAYQBsAHMAAAAAnoMJipW2qUyraKk+SWeH
ggAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQESOQUgAQEdAgUgAQESdQYgAQERgLkJBwIRNBURRQEI
BRURRQEICAAAFRFFARMABzABAQEQHgAECgERNAggABUSQQETAAkHAhE4FRFFARwFFRFFARwECgER
OAkHAhE8FRFFAQ4FFRFFAQ4ECgERPAkHAhFAFRFFAQ4ECgERQAUAABKAyQUgAR0FDgUAAQ4dBSQH
ExJRHQ4VElUBDh0OCB0OCA4IDhURWQEODhJdDggODhJREmEFIAIODg4GAAIdDg4OBRUSVQEOBCAB
CA4FIAIOCAgFIAECEwAFIAEBEwAFAAIODhwIIAAVEVkBEwAFFRFZAQ4EIAATAAUgABKA2QYgARKA
3Q4DIAACBCAAEl0EIAEOCAUgAgEOHAUgABKA4QUgAQESXQMgAA4EBwESZQUgABGA6QYgAgEOEmUG
IAEBEYD1BSAAEoD5CSACEoD9DhGBAQQgAQEcCiADEoD9DhGBAQgDIAAICyADARKAnR0IEoChBSAC
AQgcAwcBCAcAAggSgKEOBSABHQgIBSAAEoERBSAAEoEVBiABEoEZDgUgABKAqQUgABKBHQYgARKB
IRwFAAASgSUGIAEcEoEpBwABEjkRgS0FIAASgTEHIAIBDhKBMQQHARJpAh4AByACARKBPRwEIAAd
BQUgAQ4dBQUgAQEdBQYgARwSgT0XBwsICA4ODg4OFRF5AQ4VEXkBHBJhEmEEAAEBAgYAAQERgUUG
AAMODg4OBRUSQQEOCCAAFRF5ARMABRUReQEOCjACAgEQHgAQHgEJCgIVEXkBDhE0BRUSQQEcBRUR
eQEcCQoCFRF5ARwRNAUgAQESYSUHEAgcCAgOEoCBDggVEXkBEoCFFRF5AQ4SgIkSXRKAjQgSYRJh
BAABCA4GAAICDhAIBQABDh0OBiABARKBSQUgABKBTQogABUSgVEBEoFVCBUSgVEBEoFVBQACDg4O
BSACAQ4OCCADAQ4SgMkODyACFRJBARKAhRKBSRKBXQcVEkEBEoCFBxUReQESgIULCgIVEXkBEoCF
ETgFIAASgIUFIAASgV0HIAAVEkEBDgkKAhUReQEOETgFIAASgIkDIAAcBCABHA4ZBwkIDg4SgIEO
FRF5ARKAhRUReQEOEmESYQsKAhUReQESgIURPAkKAhUReQEOETwECgESMBYHBwgODhKAlRUReQES
gIUVEXkBDhJhBiABARKBZQsVElUBFRGBaQIODgcVEYFpAg4OByACARMAEwEPIAEBFRKBbQEVEYFp
Ag4OCwoCFRF5ARKAhRFACQoCFRF5AQ4RQAQKARIsCLd6XFYZNOCJCImEXc2AgMyRCLA/X38R1Qo6
AgYOAwYSFAMGEhgDBhIMBAYSgKUEBhKAsQQGEoC1AwYSIAIGCAYGFRFFAQgDBhIIBgYVEXkBDgYG
FRF5ARwGBhURRQEcCAYVEXkBEoCFBgYVEUUBDgQGEoCRByAAFRJBAQgKIAMVEkEBHA4ODgkgAhUS
QQEODg4LAAQVEkEBDg4ODg4EIAEODgUgARJRDgYgAwEIDg4DAAABBCABAQINIAQBCB0IHRKAnRKA
oQYgAQESgKUFAAASgLEFAAASgLUGAAEBEoC1BAAAEiAGEAEBDh4ABhABAR4ADgMoAA4DKAACBSgA
EoCpAygACAUIABKAsQUIABKAtQQIABIgCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9u
VGhyb3dzAQgBAAIAAAAAACgBACNTQ19iYTBlZDViNmExOTQ0Y2U2YWJiZTI4MGFmYTFmYmRiOQAA
BQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDIwAABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0
LjUBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNSQBAB9TY3JpcHRN
YWluKzxQcm9jZXNzQ2xhc3Nlcz5kX182AAAgAQAbU2NyaXB0TWFpbis8R2V0Q2xhc3Nlcz5kX183
AAAhAQAcU2NyaXB0TWFpbis8R2V0RmlsZVNpemU+ZF9fOAAAJAEAH1NjcmlwdE1haW4rPEdldEFj
Y2Vzc1Rva2VuPmRfXzkAAAQBAAAACgEAAgAAAAABAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0u
UmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0
dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291
cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAAxuAAAAAAAAAAAA
ACZuAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYbgAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1z
Y29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQAB
AAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFiAAAAaBAAAAAAAAAAAAAAaBDQAAABWAFMA
XwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAAAAEANE0dHQAAAQA0TR0dPwAA
AAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAA
JAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAEegMAAAEAUwB0AHIAaQBuAGcARgBp
AGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAAMAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4A
dABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBs
AGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwBiAGEAMABlAGQANQBiADYAYQAxADkA
NAA0AGMAZQA2AGEAYgBiAGUAMgA4ADAAYQBmAGEAMQBmAGIAZABiADkAAAA+AA8AAQBGAGkAbABl
AFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANwA0ADUAMwAuADEAOQA3ADYANAAAAAAAcAAoAAEA
SQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwBiAGEAMABlAGQANQBiADYAYQAxADkANAA0
AGMAZQA2AGEAYgBiAGUAMgA4ADAAYQBmAGEAMQBmAGIAZABiADkALgBkAGwAbAAAAEgAEgABAEwA
ZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAw
ADIAMAAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEA
TwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfAGIAYQAwAGUAZAA1AGIANgBh
ADEAOQA0ADQAYwBlADYAYQBiAGIAZQAyADgAMABhAGYAYQAxAGYAYgBkAGIAOQAuAGQAbABsAAAA
aAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwBiAGEAMABlAGQANQBiADYAYQAx
ADkANAA0AGMAZQA2AGEAYgBiAGUAMgA4ADAAYQBmAGEAMQBmAGIAZABiADkAAABCAA8AAQBQAHIA
bwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADcANAA1ADMALgAxADkANwA2ADQAAAAA
AEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADcANAA1ADMA
LgAxADkANwA2ADQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAABgAAAMAAAAOD4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAA]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_ba0ed5b6a1944ce6abbe280afa1fbdb9</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::ClientID,User::ClientIDPS,User::ClientName,User::ClientSecret,User::ClientServer,User::PageSize</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">1b8ce7b4f28655059b02071fc3904c37</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">6064bf34441a21bb86469612e800c3ed1ab876ee</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Loop thru Clients\Classes\Script Component.Connections[PSDB]"
                      connectionManagerID="Package.ConnectionManagers[ADO.NET_PowerSchoolAPIPlugIn]"
                      connectionManagerRefId="Package.ConnectionManagers[ADO.NET_PowerSchoolAPIPlugIn]"
                      name="PSDB" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Loop thru Clients\Classes\Script Component.Outputs[Output 0]"
                      hasSideEffects="true"
                      name="Output 0">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop thru Clients\Classes\Script Component.Outputs[Output 0].Columns[ClassID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Classes\Script Component.Outputs[Output 0].Columns[ClassID]"
                          name="ClassID" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Classes\Script Component.Outputs[Output 0].Columns[ClassName]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          lineageId="Package\Loop thru Clients\Classes\Script Component.Outputs[Output 0].Columns[ClassName]"
                          name="ClassName" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Classes\Script Component.Outputs[Output 0].Columns[CampusID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Classes\Script Component.Outputs[Output 0].Columns[CampusID]"
                          name="CampusID" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Classes\Script Component.Outputs[Output 0].Columns[CourseID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Classes\Script Component.Outputs[Output 0].Columns[CourseID]"
                          name="CourseID" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Classes\Script Component.Outputs[Output 0].Columns[Section]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Classes\Script Component.Outputs[Output 0].Columns[Section]"
                          name="Section" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Classes\Script Component.Outputs[Output 0].Columns[Period]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Classes\Script Component.Outputs[Output 0].Columns[Period]"
                          name="Period" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Classes\Script Component.Outputs[Output 0].Columns[RoomLocation]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Classes\Script Component.Outputs[Output 0].Columns[RoomLocation]"
                          name="RoomLocation" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Loop thru Clients\Classes.Paths[Derived Column Output]"
                  endId="Package\Loop thru Clients\Classes\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Loop thru Clients\Classes\Derived Column.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Loop thru Clients\Classes.Paths[Output 0]"
                  endId="Package\Loop thru Clients\Classes\Derived Column.Inputs[Derived Column Input]"
                  name="Output 0"
                  startId="Package\Loop thru Clients\Classes\Script Component.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Loop thru Clients\Get Students"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:Disabled="True"
          DTS:DTSID="{AADE8312-3EC9-4E33-8918-8E6D2AB2FFE3}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Get Students"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">@[User::ProcessStudent]==0</DTS:PropertyExpression>
          <DTS:ObjectData>
            <pipeline
              defaultBufferMaxRows="50000"
              version="1">
              <components>
                <component
                  refId="Package\Loop thru Clients\Get Students\Derived Column"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Loop thru Clients\Get Students\Derived Column.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Loop thru Clients\Get Students\Derived Column.Inputs[Derived Column Input].Columns[State]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="State"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Loop thru Clients\Get Students\Script Component.Outputs[Output 0].Columns[State]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[LEFT](#{Package\Loop thru Clients\Get Students\Script Component.Outputs[Output 0].Columns[State]},2)</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">LEFT(State,2)</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Loop thru Clients\Get Students\Derived Column.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Loop thru Clients\Get Students\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop thru Clients\Get Students\Derived Column.Outputs[Derived Column Output].Columns[ClientUID]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Loop thru Clients\Get Students\Derived Column.Outputs[Derived Column Output].Columns[ClientUID]"
                          name="ClientUID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::ClientID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::ClientID]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Loop thru Clients\Get Students\Derived Column.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Loop thru Clients\Get Students\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop thru Clients\Get Students\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Get Students\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Get Students\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Get Students\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Loop thru Clients\Get Students\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[PSStudents]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Loop thru Clients\Get Students\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[PowerSchoolAPIPlugIn]"
                      connectionManagerRefId="Package.ConnectionManagers[PowerSchoolAPIPlugIn]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Loop thru Clients\Get Students\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Loop thru Clients\Get Students\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[StudentID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="StudentID"
                          externalMetadataColumnId="Package\Loop thru Clients\Get Students\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StudentID]"
                          lineageId="Package\Loop thru Clients\Get Students\Script Component.Outputs[Output 0].Columns[StudentID]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Get Students\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[CampusID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="CampusID"
                          externalMetadataColumnId="Package\Loop thru Clients\Get Students\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CampusID]"
                          lineageId="Package\Loop thru Clients\Get Students\Script Component.Outputs[Output 0].Columns[CampusID]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Get Students\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[FirstName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="FirstName"
                          externalMetadataColumnId="Package\Loop thru Clients\Get Students\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FirstName]"
                          lineageId="Package\Loop thru Clients\Get Students\Script Component.Outputs[Output 0].Columns[FirstName]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Get Students\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[LastName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="LastName"
                          externalMetadataColumnId="Package\Loop thru Clients\Get Students\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[LastName]"
                          lineageId="Package\Loop thru Clients\Get Students\Script Component.Outputs[Output 0].Columns[LastName]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Get Students\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[MiddleName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="MiddleName"
                          externalMetadataColumnId="Package\Loop thru Clients\Get Students\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[MiddleName]"
                          lineageId="Package\Loop thru Clients\Get Students\Script Component.Outputs[Output 0].Columns[MiddleName]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Get Students\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Grade]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Grade"
                          externalMetadataColumnId="Package\Loop thru Clients\Get Students\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Grade]"
                          lineageId="Package\Loop thru Clients\Get Students\Script Component.Outputs[Output 0].Columns[Grade]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Get Students\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[HomeRoom]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="HomeRoom"
                          externalMetadataColumnId="Package\Loop thru Clients\Get Students\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[HomeRoom]"
                          lineageId="Package\Loop thru Clients\Get Students\Script Component.Outputs[Output 0].Columns[HomeRoom]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Get Students\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Phone]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Phone"
                          externalMetadataColumnId="Package\Loop thru Clients\Get Students\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Phone]"
                          lineageId="Package\Loop thru Clients\Get Students\Script Component.Outputs[Output 0].Columns[Phone]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Get Students\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ParentPhone]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="ParentPhone"
                          externalMetadataColumnId="Package\Loop thru Clients\Get Students\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ParentPhone]"
                          lineageId="Package\Loop thru Clients\Get Students\Script Component.Outputs[Output 0].Columns[ParentPhone]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Get Students\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Email]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="Email"
                          externalMetadataColumnId="Package\Loop thru Clients\Get Students\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Email]"
                          lineageId="Package\Loop thru Clients\Get Students\Script Component.Outputs[Output 0].Columns[Email]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Get Students\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ParentEmail]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="ParentEmail"
                          externalMetadataColumnId="Package\Loop thru Clients\Get Students\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ParentEmail]"
                          lineageId="Package\Loop thru Clients\Get Students\Script Component.Outputs[Output 0].Columns[ParentEmail]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Get Students\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Address]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="Address"
                          externalMetadataColumnId="Package\Loop thru Clients\Get Students\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Address]"
                          lineageId="Package\Loop thru Clients\Get Students\Script Component.Outputs[Output 0].Columns[Address]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Get Students\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Address2]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="Address2"
                          externalMetadataColumnId="Package\Loop thru Clients\Get Students\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Address2]"
                          lineageId="Package\Loop thru Clients\Get Students\Script Component.Outputs[Output 0].Columns[Address2]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Get Students\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[City]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="City"
                          externalMetadataColumnId="Package\Loop thru Clients\Get Students\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[City]"
                          lineageId="Package\Loop thru Clients\Get Students\Script Component.Outputs[Output 0].Columns[City]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Get Students\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[State]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="State"
                          externalMetadataColumnId="Package\Loop thru Clients\Get Students\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[State]"
                          lineageId="Package\Loop thru Clients\Get Students\Script Component.Outputs[Output 0].Columns[State]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Get Students\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Zip]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="10"
                          cachedName="Zip"
                          externalMetadataColumnId="Package\Loop thru Clients\Get Students\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Zip]"
                          lineageId="Package\Loop thru Clients\Get Students\Script Component.Outputs[Output 0].Columns[Zip]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Get Students\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Deactivate]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Deactivate"
                          externalMetadataColumnId="Package\Loop thru Clients\Get Students\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Deactivate]"
                          lineageId="Package\Loop thru Clients\Get Students\Script Component.Outputs[Output 0].Columns[Deactivate]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Get Students\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ClientUID]"
                          cachedDataType="i4"
                          cachedName="ClientUID"
                          externalMetadataColumnId="Package\Loop thru Clients\Get Students\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientUID]"
                          lineageId="Package\Loop thru Clients\Get Students\Derived Column.Outputs[Derived Column Output].Columns[ClientUID]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Get Students\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StudentsPSUID]"
                          dataType="i4"
                          name="StudentsPSUID" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Get Students\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientUID]"
                          dataType="i4"
                          name="ClientUID" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Get Students\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StudentID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="StudentID" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Get Students\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CampusID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="CampusID" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Get Students\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FirstName]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="FirstName" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Get Students\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[LastName]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="LastName" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Get Students\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[MiddleName]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="MiddleName" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Get Students\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Grade]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Grade" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Get Students\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[HomeRoom]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="HomeRoom" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Get Students\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Phone]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Phone" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Get Students\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ParentPhone]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="ParentPhone" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Get Students\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Email]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Email" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Get Students\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ParentEmail]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="ParentEmail" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Get Students\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Address]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="Address" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Get Students\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Address2]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="Address2" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Get Students\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[City]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="City" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Get Students\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[State]"
                          codePage="1252"
                          dataType="str"
                          length="2"
                          name="State" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Get Students\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Zip]"
                          codePage="1252"
                          dataType="str"
                          length="10"
                          name="Zip" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Get Students\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Race]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Race" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Get Students\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Gender]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Gender" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Get Students\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Deactivate]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Deactivate" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Loop thru Clients\Get Students\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Loop thru Clients\Get Students\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop thru Clients\Get Students\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Get Students\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Get Students\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Get Students\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Loop thru Clients\Get Students\Script Component"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;11"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Script Component"
                  version="9">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 PSDB
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"PSDB").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public Int32 ClientID
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["ClientID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientIDPS
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientIDPS"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientSecret
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientSecret"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientServer
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientServer"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String PageSize
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["PageSize"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[
#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces

using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.IO;
using System.Net;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Runtime.Serialization;
using System.Runtime.Serialization.Json;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading.Tasks;
using System.Web.Script.Serialization;
using System.Windows.Forms;



#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    static string pLocation = "/ws/schema/query/com.hayessoft.TIPWeb.students";
    static string tokenURI = "/oauth/access_token/";
    static string processType = "Student";

    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();

    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */
        ProcessStudents().Wait();
    }


    public async Task<int> ProcessStudents()
    {
        try
        {

            // The server base address
            string baseURL = Variables.ClientServer;

            //MessageBox.Show(uri);

            ServicePointManager.Expect100Continue = true;
            ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;


            /// The client information used to get the OAuth Access Token from the server.
            string clientId = Variables.ClientIDPS;
            string clientSecret = Variables.ClientSecret;
            string sendToken = EncodeTo64(Variables.ClientIDPS + ":" + Variables.ClientSecret);
            //WriteToDatabase(0, "Student-sendToken", sendToken);
            // this will hold the Access Token returned from the server.
            //MessageBox.Show(sendToken, "sendToken");

            string accessToken = await GetAccessToken(baseURL, sendToken, clientId, clientSecret);
            //-->>>>>>>>>>>>>> Add : if returns null, stop
            if (accessToken == null)
            {
                WriteToDatabase(1, "Access Token", "GetAccessToken returned null");
                return 0;
            }
            //MessageBox.Show(accessToken, "access token");


            string FileSize = await GetFileSize(baseURL, accessToken);
            if (FileSize == null)
            {
                WriteToDatabase(1, "File Size", "GetFileSize returned null");
                return 0;
            }

            var jsonResponse = await GetStudents(baseURL, accessToken, FileSize);

            return 0;
        }
        catch (Exception ex)
        {
            WriteToDatabase(1, "ProcessStudents", ex.Message);
            return 0;
        }

    }


    /// <summary>
    /// Gets the list of Students.
    /// </summary>
    /// <param name="baseUrl">The url for the Student list</param>
    /// <param name="accessToken">Acquired in the previous method</param>
    /// <returns>The page of articles.</returns>
    private async Task<dynamic> GetStudents(string baseUrl, string accessToken, string FileSize)
    {
        try
        {
            int TotalRecords;
            string pageSize = Variables.PageSize;
            int intPageSize = Convert.ToInt32(pageSize);
            if (Int32.TryParse(FileSize, out TotalRecords))
            {
                int pages = ((TotalRecords - 1) / intPageSize) + 1;
                //MessageBox.Show(pages.ToString(), "pages");
                //MessageBox.Show(pageSize, "page size");

                for (int i = 1; i <= pages; i++)
                {
                    string pagenum = i.ToString();
                    //MessageBox.Show(pagenum, "page number");

                    string uri = baseUrl + pLocation + "?pagesize="+ pageSize + "&page=" + pagenum;
                    var client = new HttpClient();

                    client.BaseAddress = new Uri(uri);

                    client.DefaultRequestHeaders.Accept.Clear();
                    client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));
                    client.DefaultRequestHeaders.Add("Authorization", "Bearer " + accessToken);

                    //MessageBox.Show(uri, "Students uri");

                    StringContent stringContent = new StringContent("", Encoding.UTF8, "application/json");
                    //StringContent stringContent = new StringContent("page=" + pagenum, Encoding.UTF8, "application/json");
                    //string content;

                    HttpResponseMessage response = await client.PostAsync(new Uri(uri), stringContent);

                    response.EnsureSuccessStatusCode();
                    string jsonString = await response.Content.ReadAsStringAsync();
                    //MessageBox.Show(jsonString, "jsonstring");

                    jsonString = cleanJsonString(jsonString);

                    //Deserialize our JSON
                    DataTable dt = JsonStringToDataTable(jsonString);
                    int numRows = 0;


                    foreach (DataRow row in dt.Rows)
                    {
                        Output0Buffer.AddRow();
                        Output0Buffer.StudentID = row["StudentID"].ToString().Replace("\\", "");
                        Output0Buffer.CampusID = row["CampusID"].ToString().Replace("\\", "");
                        Output0Buffer.FirstName = row["FirstName"].ToString().Replace("\\", "");
                        Output0Buffer.LastName = row["LastName"].ToString().Replace("\\", "");
                        Output0Buffer.MiddleName = row["MiddleName"].ToString().Replace("\\", "");
                        Output0Buffer.Grade = row["Grade"].ToString().Replace("\\", "");
                        Output0Buffer.HomeRoom = row["HomeRoom"].ToString().Replace("\\", "");
                        Output0Buffer.Phone = row["Phone"].ToString().Replace("\\", "");
                        Output0Buffer.ParentPhone = row["ParentPhone"].ToString().Replace("\\", "");
                        Output0Buffer.Email = row["Email"].ToString().Replace("\\", "");
                        Output0Buffer.ParentEmail = row["ParentEmail"].ToString().Replace("\\", "");
                        Output0Buffer.Address = row["Address"].ToString().Replace("\\", "");
                        Output0Buffer.Address2 = row["Address2"].ToString().Replace("\\", "");
                        Output0Buffer.City = row["City"].ToString().Replace("\\", "");
                        Output0Buffer.State = row["State"].ToString().Replace("\\", "");
                        Output0Buffer.Zip = row["zip"].ToString().Replace("\\", "");
                        Output0Buffer.Deactivate = row["Deactivated"].ToString().Replace("\\", "");

                        numRows += 1;
                    }
                    WriteToDatabase(0, "GetStudents - Row Count Page Num: " + pagenum, numRows.ToString());
                }
                return null;
            }
            return null;

        }
        catch (Exception ex)
        {
            WriteToDatabase(1, "GetStudents", ex.Message);
            throw;
        }

    }


    private async Task<string> GetFileSize(string baseURL, string accessToken)
    {
        try
        {
            using (var client = new HttpClient())
            {
                string uri = baseURL + pLocation + "/count";
                client.BaseAddress = new Uri(uri);
                //MessageBox.Show(uri, "Students uri");

                client.DefaultRequestHeaders.Accept.Clear();
                client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));
                client.DefaultRequestHeaders.Add("Authorization", "Bearer " + accessToken);

                var stringContent = new StringContent("", Encoding.UTF8, "application/json");

                //Get file size
                HttpResponseMessage response = await client.PostAsync(new Uri(uri), stringContent);

                response.EnsureSuccessStatusCode();
                string jsonString = await response.Content.ReadAsStringAsync();

                //string jsonString = response.Content.ToString();//.ReadAsStringAsync();
                //MessageBox.Show(jsonString, "jsonstring");

                //Deserialize our JSON
                var FileSizeObject = JsonHelper.JsonDeserialize<FileSize>(jsonString);

                // return the Access Token.
                var FileSize = FileSizeObject.count;
                //MessageBox.Show(FileSize, "File Size");
                WriteToDatabase(0, "RecordCount", FileSize);
                return FileSize;
            }
        }
        catch (Exception ex)
        {
            //MessageBox.Show(ex.Message);
            //MessageBox.Show(ex.StackTrace);
            WriteToDatabase(1, "GetFileSize", ex.Message);
            //return null;
            throw;
        }

    }

    /// <summary>
    /// This method uses the OAuth Client Credentials Flow to get an Access Token to provide
    /// Authorization to the APIs.
    /// </summary>
    /// <returns></returns>
    private static async Task<string> GetAccessToken(string baseURL, string sendToken, string clientId, string clientSecret)
    {
        try
        {
            using (var client = new HttpClient())
            {

                string uri = baseURL + tokenURI;
                client.BaseAddress = new Uri(uri);

                //MessageBox.Show(uri, "access token uri");

                client.DefaultRequestHeaders.Accept.Clear();
                client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/x-www-form-urlencoded"));
                client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Basic", sendToken);

                List<KeyValuePair<string, string>> postData = new List<KeyValuePair<string, string>>();
                postData.Add(new KeyValuePair<string, string>("grant_type", "client_credentials"));
                FormUrlEncodedContent content = new FormUrlEncodedContent(postData);

                // Post to the Server and parse the response.
                HttpResponseMessage response = await client.PostAsync(new Uri(uri), content);

                response.EnsureSuccessStatusCode();
                string jsonString = await response.Content.ReadAsStringAsync();

                //MessageBox.Show(jsonString, "jsonstring");

                //Deserialize our JSON
                var accessTokenObject = JsonHelper.JsonDeserialize<AccessToken>(jsonString);

                // return the Access Token.
                var token = accessTokenObject.access_token;
                //MessageBox.Show(token, "access token");
                return token;
            }
        }
        catch (Exception ex)
        {
            //WriteToDatabase(1, "GetAccessToken", ex.Message);
            //MessageBox.Show(ex.Message);
            //MessageBox.Show(ex.StackTrace);
            //return null;
            throw ex;
        }
    }

    public string EncodeTo64(string toEncode)
    {
        byte[] toEncodeAsBytes = System.Text.ASCIIEncoding.ASCII.GetBytes(toEncode);
        string returnValue = System.Convert.ToBase64String(toEncodeAsBytes);
        return returnValue;

    }
    public class JsonHelper
    {
        /// <summary>
        /// JSON Serialization
        /// </summary>
        public static string JsonSerializer<T>(T t)
        {
            DataContractJsonSerializer ser = new DataContractJsonSerializer(typeof(T));
            MemoryStream ms = new MemoryStream();
            ser.WriteObject(ms, t);
            string jsonString = Encoding.UTF8.GetString(ms.ToArray());
            ms.Close();
            return jsonString;
        }
        /// <summary>
        /// JSON Deserialization
        /// </summary>
        public static T JsonDeserialize<T>(string jsonString)
        {
            DataContractJsonSerializer ser = new DataContractJsonSerializer(typeof(T));
            MemoryStream ms = new MemoryStream(Encoding.UTF8.GetBytes(jsonString));
            T obj = (T)ser.ReadObject(ms);
            return obj;
        }
    }

    public class Student
    {
        public string StudentID { get; set; }
        public string CampusID { get; set; }
        public string FirstName { get; set; }
        public string LastName { get; set; }
        public string MiddleName { get; set; }
        public string Grade { get; set; }
        public string HomeRoom { get; set; }
        public string Department { get; set; }
        public string Phone { get; set; }
        public string Email { get; set; }
        public string Address { get; set; }
        public string Address2 { get; set; }
        public string City { get; set; }
        public string State { get; set; }
        public string Zip { get; set; }
        public string Deactivate { get; set; }
    }

    public class AccessToken
    {
        public string access_token { get; set; }
        public string token_type { get; set; }
        public string expires_in { get; set; }
    }

    public class FileSize
    {
        public string count { get; set; }

    }



    public DataTable JsonStringToDataTable(string jsonString)
    {
        try
        {
            DataTable dt = new DataTable();
            string[] jsonStringArray = Regex.Split(jsonString.Replace("[", "").Replace("]", ""), "},{");
            List<string> ColumnsName = new List<string>();
            foreach (string jSA in jsonStringArray)
            {
                string[] jsonStringData = Regex.Split(jSA.Replace("{", "").Replace("}", ""), ",");
                foreach (string ColumnsNameData in jsonStringData)
                {
                    try
                    {
                        int idx = ColumnsNameData.IndexOf(":");
                        string ColumnsNameString = ColumnsNameData.Substring(0, idx - 1).Replace("\"", "");
                        if (!ColumnsName.Contains(ColumnsNameString))
                        {
                            ColumnsName.Add(ColumnsNameString);
                        }
                    }
                    catch //(Exception ex)
                    {
                        WriteToDatabase(1, "JsonStringToDataTable: Columns", (string.Format("Error Parsing Column Name : {0}", ColumnsNameData)));
                    }
                }
                break;
            }
            foreach (string AddColumnName in ColumnsName)
            {
                dt.Columns.Add(AddColumnName);
            }
            foreach (string jSA in jsonStringArray)
            {
                string[] RowData = Regex.Split(jSA.Replace("{", "").Replace("}", ""), ",");
                DataRow nr = dt.NewRow();
                foreach (string rowData in RowData)
                {
                    try
                    {
                        int idx = rowData.IndexOf(":");
                        string RowColumns = rowData.Substring(0, idx - 1).Replace("\"", "").Replace("\\", "");
                        string RowDataString = rowData.Substring(idx + 1).Replace("\"", "").Replace("\\", "");
                        nr[RowColumns] = RowDataString;
                    }
                    catch //(Exception ex)
                    {
                        WriteToDatabase(1, "JsonStringToDataTable: For each row", (string.Format("Error Parsing Row  Name : {0}", rowData)));
                        continue;
                    }
                }
                dt.Rows.Add(nr);
            }
            return dt;
        }
        catch (Exception ex)
        {
            WriteToDatabase(1, "JsonStringToDataTable", ex.Message);
            return null;
        }
    }

    public string cleanJsonString(string jsonString)
    {

        jsonString = jsonString.Replace("{\"name\":\"students\",\"record\":[", "");
        jsonString = jsonString.Replace("],\"@extensions\":\"activities,", "");
        jsonString = jsonString.Replace("u_student_extension_test,", "");
        jsonString = jsonString.Replace("u_student_new_ext,", "");
        jsonString = jsonString.Replace("studentcorefields,", "");
        jsonString = jsonString.Replace("u_students_extension,", "");
        jsonString = jsonString.Replace("s_stu_ncea_x,", "");
        jsonString = jsonString.Replace("s_stu_crdc_x,", "");
        jsonString = jsonString.Replace("u_ld_account_management,", "");
        jsonString = jsonString.Replace("c_studentlocator,", "");
        jsonString = jsonString.Replace("u_studentsuserfields,", "");
        jsonString = jsonString.Replace("u_customfields,", "");
        jsonString = jsonString.Replace("s_stu_edfi_x\"}", "");

        return jsonString;
    }


    public void WriteToDatabase(int Error, string Area, string LogInfo)
    {
        try
        {
            //MessageBox.Show("WriteToDatabase");
            var ConnString = Connections.PSDB.ConnectionString;

            using (SqlConnection conn = new SqlConnection(Connections.PSDB.ConnectionString))
            {
                if (conn.State != ConnectionState.Open) conn.Open();
                //string insertText = "Insert into PSLog (ClientUID, FileType, Area, LogInfo) Values (@ClientUID, @FileType, @Area, @LogInfo ) ";
                SqlCommand cmd = new SqlCommand("spLogInfo", conn);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("@ClientUID", SqlDbType.Int).Value = Variables.ClientID;
                cmd.Parameters.Add("@Error", SqlDbType.Int).Value = Error;
                cmd.Parameters.Add("@FileType", SqlDbType.VarChar, 50).Value = processType;
                cmd.Parameters.Add("@Area", SqlDbType.VarChar, 100).Value = Area;
                cmd.Parameters.Add("@LogInfo", SqlDbType.VarChar, 1000).Value = LogInfo;
                cmd.ExecuteNonQuery();
            }
        }
        catch //(Exception ex)
        {
            throw;
        }
    }
}




]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String StudentID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool StudentID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CampusID
    {
        set
        {
            this[1] = value;
        }
    }
    public bool CampusID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String FirstName
    {
        set
        {
            this[2] = value;
        }
    }
    public bool FirstName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String LastName
    {
        set
        {
            this[3] = value;
        }
    }
    public bool LastName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String MiddleName
    {
        set
        {
            this[4] = value;
        }
    }
    public bool MiddleName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Grade
    {
        set
        {
            this[5] = value;
        }
    }
    public bool Grade_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String HomeRoom
    {
        set
        {
            this[6] = value;
        }
    }
    public bool HomeRoom_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Phone
    {
        set
        {
            this[7] = value;
        }
    }
    public bool Phone_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ParentPhone
    {
        set
        {
            this[8] = value;
        }
    }
    public bool ParentPhone_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Email
    {
        set
        {
            this[9] = value;
        }
    }
    public bool Email_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ParentEmail
    {
        set
        {
            this[10] = value;
        }
    }
    public bool ParentEmail_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Address
    {
        set
        {
            this[11] = value;
        }
    }
    public bool Address_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Address2
    {
        set
        {
            this[12] = value;
        }
    }
    public bool Address2_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String City
    {
        set
        {
            this[13] = value;
        }
    }
    public bool City_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(13);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String State
    {
        set
        {
            this[14] = value;
        }
    }
    public bool State_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(14);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Zip
    {
        set
        {
            this[15] = value;
        }
    }
    public bool Zip_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(15);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Deactivate
    {
        set
        {
            this[16] = value;
        }
    }
    public bool Deactivate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(16);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_7fcaffc860d4432992f6f4f13b26c8a8.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{E0EF711B-0FB0-456C-8AFE-A24D0F785CA5}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_7fcaffc860d4432992f6f4f13b26c8a8</RootNamespace>
    <AssemblyName>SC_7fcaffc860d4432992f6f4f13b26c8a8</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Runtime.Serialization" />
    <Reference Include="System.Web" />
    <Reference Include="System.Web.Extensions" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <WCFMetadata Include="Service References\" />
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_7fcaffc860d4432992f6f4f13b26c8a8</msb:CodeName>
		<msb:DisplayName>SC_7fcaffc860d4432992f6f4f13b26c8a8</msb:DisplayName>
		<msb:ProjectId>{491D7CBF-C5B8-464F-B9A1-3597A7417533}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_7fcaffc860d4432992f6f4f13b26c8a8.csproj"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7fcaffc860d4432992f6f4f13b26c8a8.Properties.Settings.get_Default():SC_7fcaffc860d4432992f6f4f13b26c8a8.Properties.Sett" +
    "ings")]

namespace SC_7fcaffc860d4432992f6f4f13b26c8a8.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_7fcaffc860d4432992f6f4f13b26c8a8")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_7fcaffc860d4432992f6f4f13b26c8a8")]
[assembly: AssemblyCopyright("Copyright @  2019")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7fcaffc860d4432992f6f4f13b26c8a8.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7fcaffc860d4432992f6f4f13b26c8a8.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7fcaffc860d4432992f6f4f13b26c8a8.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_7fcaffc860d4432992f6f4f13b26c8a8.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_7fcaffc860d4432992f6f4f13b26c8a8.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_7fcaffc860d4432992f6f4f13b26c8a8.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[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
AApviwAACnKlAABwcgUAAHBvJQAACm8ZAAAGAnspAAAEewYAAAQRC3KqBwBwb4oAAApviwAACnKl
AABwcgUAAHBvJQAACm8bAAAGAnspAAAEewYAAAQRC3K8BwBwb4oAAApviwAACnKlAABwcgUAAHBv
JQAACm8dAAAGAnspAAAEewYAAAQRC3LIBwBwb4oAAApviwAACnKlAABwcgUAAHBvJQAACm8fAAAG
AnspAAAEewYAAAQRC3LgBwBwb4oAAApviwAACnKlAABwcgUAAHBvJQAACm8hAAAGAnspAAAEewYA
AAQRC3LsBwBwb4oAAApviwAACnKlAABwcgUAAHBvJQAACm8jAAAGAnspAAAEewYAAAQRC3IECABw
b4oAAApviwAACnKlAABwcgUAAHBvJQAACm8lAAAGAnspAAAEewYAAAQRC3IUCABwb4oAAApviwAA
CnKlAABwcgUAAHBvJQAACm8nAAAGAnspAAAEewYAAAQRC3ImCABwb4oAAApviwAACnKlAABwcgUA
AHBvJQAACm8pAAAGAnspAAAEewYAAAQRC3IwCABwb4oAAApviwAACnKlAABwcgUAAHBvJQAACm8r
AAAGAnspAAAEewYAAAQRC3I8CABwb4oAAApviwAACnKlAABwcgUAAHBvJQAACm8tAAAGAnspAAAE
ewYAAAQRC3JECABwb4oAAApviwAACnKlAABwcgUAAHBvJQAACm8vAAAGEQcXWBMHEQpvjAAACjqg
/P//3hkGFi8UEQp1IwAAARMMEQwsBxEMbzIAAArcAnspAAAEFnJcCABwAnsuAAAEKH0AAAoSByhz
AAAKbwsAAAYCFH0uAAAEAnsvAAAEEw0CEQ0XWH0vAAAEAnsvAAAEAnswAAAEPmT6//8UC945FAve
NRMOAnspAAAEF3KiCABwEQ5vOAAACm8LAAAG/hoTDwIf/n0nAAAEAnwoAAAEEQ8ojQAACt4UAh/+
fScAAAQCfCgAAAQHKI4AAAoqAEFMAAACAAAAOAIAAGcDAACfBQAAGQAAAAAAAAAAAAAADwAAAP4F
AAANBgAAHAAAABgAAAEAAAAABwAAACIGAAApBgAAGQAAABgAAAE2AnwoAAAEAyiPAAAKKgAAGzAE
AC0CAAALAAARAnszAAAECgYsBAYXJiYABiwPBhcuCwJzdQAACn04AAAEAAY54gAAAAYXO0wBAAAC
ezUAAAR+AQAABHK6CABwKGYAAAoMAns4AAAECHN2AAAKb3cAAAoCezgAAARveAAACm95AAAKb3oA
AAoCezgAAARveAAACm95AAAKcu4GAHBzewAACm98AAAKAns4AAAEb3gAAApyEAcAcHIsBwBwAns2
AAAEKH0AAApvfgAACnIFAABwKF4AAApy7gYAcHN/AAAKDQJ7OAAABAhzdgAACglvgAAACm+BAAAK
EwUSBSiCAAAKLUECFiUKfTMAAAQCEQV9OQAABAJ8NAAABBIFAigJAAAr3SIBAAACezkAAAQTBQJ8
OQAABP4VDQAAGwIVJQp9MwAABBIFKIQAAAoSBf4VDQAAGyVvhQAACiZvhgAACm+HAAAKb2cAAAoT
BhIGKGgAAAotQQIXJQp9MwAABAIRBn06AAAEAnw0AAAEEgYCKAoAACvdsQAAAAJ7OgAABBMGAnw6
AAAE/hUIAAAbAhUlCn0zAAAEEgYoagAAChIG/hUIAAAbKAsAACtvcwAABhMEAns3AAAEFnLICABw
EQRvCwAABhEEC95NBhYvEwJ7OAAABCwLAns4AAAEbzIAAArcEwcCezcAAAQXcuAIAHARB284AAAK
bwsAAAb+GhMIAh/+fTMAAAQCfDQAAAQRCCiRAAAK3hQCH/59MwAABAJ8NAAABAcokgAACioAAABB
TAAAAgAAACIAAACpAQAAywEAABgAAAAAAAAAAAAAAA8AAADUAQAA4wEAABwAAAAYAAABAAAAAAcA
AAD4AQAA/wEAABkAAAAYAAABNgJ8NAAABAMokwAACioAABswBAD5AQAADAAAEQJ7OwAABAoGLAQG
FyYmAAYsDwYXLgsCc3UAAAp9PwAABAAGOeMAAAAGFztKAQAAAns9AAAEfgIAAAQofQAACgwCez8A
AAQIc3YAAApvdwAACgJ7PwAABG94AAAKb3kAAApvegAACgJ7PwAABG94AAAKb3kAAApy+AgAcHN7
AAAKb3wAAAoCez8AAARveAAACnI8CQBwAns+AAAEc5QAAApvlQAACnOWAAAKJXJICQBwcl4JAHBz
lwAACm+YAAAKc5kAAAoNAns/AAAECHN2AAAKCW+AAAAKb4EAAAoTBBIEKIIAAAotQQIWJQp9OwAA
BAIRBH1AAAAEAnw8AAAEEgQCKAwAACvd7QAAAAJ7QAAABBMEAnxAAAAE/hUNAAAbAhUlCn07AAAE
EgQohAAAChIE/hUNAAAbJW+FAAAKJm+GAAAKb4cAAApvZwAAChMFEgUoaAAACi0+AhclCn07AAAE
AhEFfUEAAAQCfDwAAAQSBQIoDQAAK95/AntBAAAEEwUCfEEAAAT+FQgAABsCFSUKfTsAAAQSBShq
AAAKEgX+FQgAABsoDgAAK29sAAAGC94yBhYvEwJ7PwAABCwLAns/AAAEbzIAAArcehMGAh/+fTsA
AAQCfDwAAAQRBiiRAAAK3hQCH/59OwAABAJ8PAAABAcokgAACioAAABBTAAAAgAAACIAAACQAQAA
sgEAABgAAAAAAAAAAAAAAA8AAAC7AQAAygEAAAEAAAAYAAABAAAAAAcAAADEAQAAywEAABkAAAAY
AAABNgJ8PAAABAMokwAACioAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAOAY
AAAjfgAATBkAAEAWAAAjU3RyaW5ncwAAAACMLwAAhAkAACNVUwAQOQAAEAAAACNHVUlEAAAAIDkA
AGAGAAAjQmxvYgAAAAAAAAACAAABVxeiCwkPAAAA+gEzABYAAAEAAABbAAAAEAAAAEEAAAB9AAAA
VgAAAAQAAACZAAAAWQAAAAwAAAAIAAAAPwAAAFQAAAAIAAAADwAAAAEAAAAKAAAAAQAAAAgAAAAC
AAAADgAAAAAAxgsBAAAAAAAGAKYJixEGADoKixEGAL8IeBEPAP8RAAAGAOwIjA4GAIkJjA4GAGoJ
jA4GACEKjA4GAMYJjA4GAN8JjA4GAB4JjA4GADkJCQsKAPoJ1wYGAFwHfA0GAAMJixEGAOcAlBIG
AAoBixEOAHYIixEGAPMTfA0SAP4FxwIGADEB8gJXAFYRAAASAOoVxwIGADQPfA0SAAkPZRQGAF0N
pwIGAIcIixEGADYHfA0GAKcGixEGACMBixEGAFIJeBEWAAAV9g8WAN4F9g8GAEcR3xIGAAgGfA0W
AHsU9g8WAOoU9g8KADYQ1wYaACcQ1wYKAIcP1wYKAMIU1wYeAGYAjBAGAKIIeBEGAEcQqxEGAHMP
SA4iACgIjAsiANMIjAsiAM4HMw4GAIcLlBIGAAALmhUGAFwVfA0GAG4LfA0iAAAWwBISAJ4OxwIS
AB4OxwISAOoOxwISAPwOPg8SAD0IxwISAHoFZRQSAHAFPg8SACoHxwISANMOZRQSAOkQZRQSABwH
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
swoAAAEAswoAAAEAswoAAAEAswoAAAEAswoAAAEAswoAAAEAswoAAAEAswoAAAEAswoAAAEAswoA
AAEAswoAAAEAswoAAAEAswoAAAEAswoAAAEAswoAAAEAswoAAAEAswoAAAEAswoAAAEAswoAAAEA
sBMAAAIAbhEAAAMATxMAAAQAlQ8AAAEAyBQAAAEAyBQAAAEAswoAAAEA6BUAAAEAVwsAAAEAswoA
AAEAswoAAAEAswoAAAEAswoAAAEAswoAAAEAswoAAAEAswoAAAEAswoAAAEAswoAAAEAswoAAAEA
swoAAAEAswoAAAEAswoAAAEAswoAAAEAswoAAAEAswoAAAEAswoAAAEAswoAAAEAswoAAAEAswoA
AAEAygYAAAEAygYAAAEAygYAAAEAygYNAHUADgB1AA8AdQAQAHUACQBhEQEAEQBhEQYAGQBhEQoA
KQBhERAAMQBhERAAOQBhERAAQQBhERAASQBhERAAUQBhERAAWQBhERAAYQBhERAAaQBhEQYAeQBh
ERUAkQBhERsA2QBhEQYA6QCRFQYA6QC6BiEA+QBhEQYAWQFhEQYAeQFhEScASQFYCgYASQFjCgYA
iQEyFAYADAANCD4ADABWFUcADACDC1QAFAANCD4AFABWFUcAFACDC1QAHAANCD4AHABWFUcAHACD
C1QAkQGMApYAkQFTEpwAmQEjC6IAoQBhEQYAoQGFBc0AqQE3FNMAJABhEQYAoQH4CuAAoQF1C+UA
JACrEusAJAAyA/EAoQHcE/cAJABTEf0ALADSFAwBoQC0EhEBsQEyAxcBLACRFR4BGQH8BwYAoQD5
FSIBoQF1CycBuQBzDSwBoQC4EzIBwQEyAzgBwQDSBT4BUQEyCz4ByQBhERAAyQEUCEcByQHwDQYA
2QFhEU0B4QEmB1QB2QFXE1sB8QEyA2EBEQJvCmsB8QEyA3AB4QEbFnsBMQFhEX8BMQFzDYsBMQE4
DQEAGQJhERAAMQHyFQYAMQEjFAYAMQEmFB4BSQFhEQYASQGAApUBSQFwEp0BmQBhEQYASQHTAqMB
IQKzDqkBKQKMBq8BMQJXELYBSQE9ErwBOQJqDcIBSQHVFckBQQKmFc8BcQAmBtYBcQAOFt4BYQFh
EeQBgQFhEQYAaQJhERUA0QBhEQYAcQLuE/QBkQHXAZYA0QAGFvwBkQFrCwECeQL2BwYA0QBhEQcC
cQLjEw0CgQK5CiwCgQJADTECoQHVEzgCPAD2EEUCRABhAx4BDABKA1QCRABJFAwBTAD2EEUCVABh
Ax4BVABJFAwBDAAxD38CDABTFPEADAC6BiEAmQE4AasCCQIECLACCQJiCz4BoQHVE7cCIQFhEQYA
kQJhERAAIQF+E70CIQE1E8QCmQIuFcoCXAAGEAYAqQJhERAAXAAyA/EAoQHVE94CsQIyA+QCAQFh
EeoCIQEfA/MCZAD2EEUCbABhAx4BFABKA1QCbABJFAwBCQGxBR8DCQHeFCUDuQINAysDwQJTET0D
EQHSFEMDuQBqDUcDmQBiCz4BEQGRFR4BFAAxD38CFABTFPEAFAC6BiEAHABKA1QCHAAxD38CHABT
FPEAHAC6BiEAyQJhEeQCmQJ6DpgDdABhEQYAfABhEbMDdAAyA/EAKQFhEbsDJABzAFIGLgALAP0E
LgATAAYFLgAbACUFLgAjAC4FLgArAFcFLgAzAFcFLgA7AFcFLgBDAC4FLgBLAF0FLgBTAFcFLgBb
AHQFQwBjAE0GgABrAL4FoABrAOQFwABrAAYG4ABrACgG4wCbAE0GYQF7AE0GgQF7AE0GoQF7AE0G
owF7AE0GwQF7AE0GwwF7AE0G4QF7AE0G4wF7AE0GAQJ7AE0GAwJ7AE0GIQJ7AE0GQQJ7AE0GYQJ7
AE0GgQJ7AE0GoQJ7AE0GwQJ7AE0G4QJ7AE0GAQN7AE0GIQN7AE0GQQN7AE0GYQN7AE0GgQN7AE0G
oQN7AE0GwQN7AE0G4QN7AE0GKQWjACUFSQWjACUFYAl7AE0GgAl7AE0GoAl7AE0GwAl7AE0G4Al7
AE0GAAp7AE0GIAp7AE0GQAp7AE0GYAp7AE0GgAp7AE0GoAp7AE0GwAp7AE0G4Ap7AE0GAAt7AE0G
IAt7AE0GQAt7AE0GYAt7AE0GgAt7AE0GoAt7AE0GwAt7AE0G4At7AE0GAAx7AE0GIAx7AE0GQAx7
AE0GYAx7AE0GgAx7AE0GoAx7AE0GwAx7AE0G4Ax7AE0GAA17AE0GIA17AE0GQA17AE0GgA17AE0G
oA17AE0GwA17AE0G4A17AE0GAA57AE0GIA57AE0GYA57AE0GgA57AE0G4A6TAE0GIA+TAE0GYA+T
AE0GoA+TAE0GLgBdAHIAhwCoAEIBkQHsARQChQJMA4EDAwABAAUAIwAGACQABwApAAgAKwAKACwA
CwA8AAwAPwAAAGkC2gQAABoM3gQAAE4C2gQAAAYM3gQAAIIG2gQAAGoM3gQAAGcG2gQAAFYM3gQA
AEsG2gQAAEAM3gQAAKsF2gQAAC8M3gQAAJQN2gQAAPYM3gQAABYH2gQAAJYM3gQAABAH2gQAAJAM
3gQAAMAL2gQAAOUM3gQAALoL2gQAAN8M3gQAAIYT2gQAABkN3gQAAIcB2gQAAPIL3gQAADgW2gQA
ACwN3gQAAEcI2gQAAKcM3gQAAPIP2gQAAAoN3gQAAGsI2gQAALgM3gQAADgC4gQAAHcC6AQAALUC
2gQAAAkU2gQAAAUR2gQAANMK2gQAAEcQ7AQAAKsH8gQAAEEU+AQAAGkC2gQAAE4C2gQAAIIG2gQA
AGcG2gQAAEsG2gQAAKsF2gQAAJQN2gQAAJkU2gQAABYH2gQAAMAL2gQAAIYT2gQAAIcB2gQAADgW
2gQAAEcI2gQAAPIP2gQAAGsI2gQAAOMN2gQAAHQH2gQAAAgO2gQAACgV2gQBAA8AAwABABAABQAB
ABEABwABABIACQABABMACwABABQADQABABUADwABABYAEQABABcAEwABABgAFQABABkAFwABABoA
GQABABsAGwABABwAHQABAB0AHwABAB4AIQABAB8AIwABACAAJQABACEAJwABACIAKQABACMAKwAB
ACQALQABACUALwABACYAMQABACcAMwABACgANQABACkANwABACoAOQABACsAOwABACwAPQABAC0A
PwABAC4AQQABAC8AQwABADAARQACADoARwACADwASQACAD0ASwACAD4ATQACAD8ATwACAEAAUQAC
AEIAUwACAEMAVQABAEQAVQACAEUAVwACAEsAWQABAEwAWQACAE0AWwABAE4AWwACAE8AXQABAFAA
XQACAFEAXwABAFIAXwACAFMAYQABAFQAYQACAFUAYwABAFYAYwACAFcAZQABAFgAZQACAFkAZwAB
AFoAZwACAFsAaQABAFwAaQACAF0AawABAF4AawACAF8AbQABAGAAbQACAGEAbwABAGIAbwACAGMA
cQABAGQAcQACAGUAcwABAGYAcwACAGcAdQABAGgAdQACAGkAdwABAGoAdwACAGwAeQABAG0AeQAC
AG4AewABAG8AewACAHAAfQABAHEAfQACAHMAfwABAHQAfwANAOwAIQANAO4AIwAOAPAAIQAOAPIA
IwAPAPQAIQAPAPYAIwAQAPgAIQAQAPoAIwA4AGcAfADaAAYB8QE/Ak4CaQJvAtUCAwMLA58DqwME
gAAAAQAAAAAAAAAAAAAAAADyAQAABAAAAAAAAAAAAAAA5gPpAgAAAAAMAAAAAAAAAAAAAADvAzkV
AAAAAAQAAAAAAAAAAAAAAOYDfwcAAAAABAAAAAAAAAAAAAAA5gPHAgAAAAAEAAAAAAAAAAAAAAD4
A/YPAAAAAAwAAAAAAAAAAAAAAO8DZBUAAAAADAAAAAAAAAAAAAAA7wOfDwAAAAAEAAAAAAAAAAAA
AADmA3wNAAAAAAwAAAAAAAAAAAAAAO8Dwg8AAAAABAAAAAAAAAAAAAAA5gNdDgAAAAAAAAAAAQAA
ALwRAAAJAAIACgACAAsAAgAMAAIADQACAA4AAgAPAAIAEAACAAAAAACRAMACAAAAAJMAwAIzAE8A
OQBtAD8AggA/AJEA0wBfAtMAdQIHARMDBwEzAyEBZgMhAXIDkgB8AyEBywMhAdcDkgDhAwAAAElE
VFNDb21wb25lbnRNZXRhRGF0YTEwMABJRFRTVmFyaWFibGUxMDAASURUU1J1bnRpbWVDb25uZWN0
aW9uQ29sbGVjdGlvbjEwMABJRFRTUnVudGltZUNvbm5lY3Rpb24xMDAASURUU0Nvbm5lY3Rpb25N
YW5hZ2VyMTAwAElEVFNWYXJpYWJsZXMxMDAASURUU0V2YWx1YXRvckNvbnRleHQxMDAAPGJhc2VV
Ukw+NV9fMQA8cGFnZVNpemU+NV9fMQA8Y2xpZW50PjVfXzEAPD51X18xAElFbnVtZXJhYmxlYDEA
VGFza2AxAEh0dHBIZWFkZXJWYWx1ZUNvbGxlY3Rpb25gMQBBc3luY1Rhc2tNZXRob2RCdWlsZGVy
YDEAVGFza0F3YWl0ZXJgMQBMaXN0YDEAVG9JbnQzMgA8cGFnZW51bT41X18yADxhY2Nlc3NUb2tl
bj41X18yADw+dV9fMgBLZXlWYWx1ZVBhaXJgMgBnZXRfQWRkcmVzczIAc2V0X0FkZHJlc3MyADxp
PjVfXzMARW5jb2RlVG82NAA8cGFnZXM+NV9fNAA8UHJvY2Vzc1N0dWRlbnRzPmRfXzYAPEdldFN0
dWRlbnRzPmRfXzcAZ2V0X1VURjgAPEdldEZpbGVTaXplPmRfXzgAU0NfN2ZjYWZmYzg2MGQ0NDMy
OTkyZjZmNGYxM2IyNmM4YTgAPEdldEFjY2Vzc1Rva2VuPmRfXzkAPE1vZHVsZT4AZ2V0X1BTREIA
Z2V0X0NhbXB1c0lEAHNldF9DYW1wdXNJRABnZXRfU3R1ZGVudElEAHNldF9TdHVkZW50SUQAZ2V0
X0NsaWVudElEAEdldE91dHB1dElEAGdldF9BU0NJSQB0b2tlblVSSQBiYXNlVVJMAFN5c3RlbS5J
TwBnZXRfQ2xpZW50SURQUwBUAEFyZWEAU3lzdGVtLkRhdGEAZ2V0X0NvbXBvbmVudE1ldGFEYXRh
AG1zY29ybGliAFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljAFJlYWRBc1N0cmluZ0FzeW5jAFBv
c3RBc3luYwBjbGllbnRJZABBZGQATWFya091dHB1dHNGaW5pc2hlZABBd2FpdFVuc2FmZU9uQ29t
cGxldGVkAGdldF9Jc0NvbXBsZXRlZAA8QWRkcmVzczI+a19fQmFja2luZ0ZpZWxkADxDYW1wdXNJ
RD5rX19CYWNraW5nRmllbGQAPFN0dWRlbnRJRD5rX19CYWNraW5nRmllbGQAPEdyYWRlPmtfX0Jh
Y2tpbmdGaWVsZAA8TWlkZGxlTmFtZT5rX19CYWNraW5nRmllbGQAPExhc3ROYW1lPmtfX0JhY2tp
bmdGaWVsZAA8Rmlyc3ROYW1lPmtfX0JhY2tpbmdGaWVsZAA8UGhvbmU+a19fQmFja2luZ0ZpZWxk
ADx0b2tlbl90eXBlPmtfX0JhY2tpbmdGaWVsZAA8U3RhdGU+a19fQmFja2luZ0ZpZWxkADxEZWFj
dGl2YXRlPmtfX0JhY2tpbmdGaWVsZAA8RW1haWw+a19fQmFja2luZ0ZpZWxkADxIb21lUm9vbT5r
X19CYWNraW5nRmllbGQAPGFjY2Vzc190b2tlbj5rX19CYWNraW5nRmllbGQAPGV4cGlyZXNfaW4+
a19fQmFja2luZ0ZpZWxkADxaaXA+a19fQmFja2luZ0ZpZWxkADxBZGRyZXNzPmtfX0JhY2tpbmdG
aWVsZAA8RGVwYXJ0bWVudD5rX19CYWNraW5nRmllbGQAPGNvdW50PmtfX0JhY2tpbmdGaWVsZAA8
Q2l0eT5rX19CYWNraW5nRmllbGQARGJDb21tYW5kAFNxbENvbW1hbmQAUmVwbGFjZQBkZWZhdWx0
SW5zdGFuY2UAZ2V0X0dyYWRlAHNldF9HcmFkZQBFbnN1cmVTdWNjZXNzU3RhdHVzQ29kZQB0b0Vu
Y29kZQBnZXRfTWVzc2FnZQBIdHRwUmVzcG9uc2VNZXNzYWdlAEpzb25TdHJpbmdUb0RhdGFUYWJs
ZQBJRGlzcG9zYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBnZXRfTWlk
ZGxlTmFtZQBzZXRfTWlkZGxlTmFtZQBnZXRfTGFzdE5hbWUAc2V0X0xhc3ROYW1lAGdldF9GaXJz
dE5hbWUAc2V0X0ZpcnN0TmFtZQBHZXRSdW50aW1lQ29ubmVjdGlvbkJ5TmFtZQBJQXN5bmNTdGF0
ZU1hY2hpbmUAU2V0U3RhdGVNYWNoaW5lAHN0YXRlTWFjaGluZQBNaWNyb3NvZnQuU3FsU2VydmVy
LkR0cy5QaXBlbGluZQBnZXRfUGhvbmUAc2V0X1Bob25lAHNldF9QYXJlbnRQaG9uZQBTcWxEYlR5
cGUAc2V0X0NvbW1hbmRUeXBlAFZhbHVlVHlwZQBTZWN1cml0eVByb3RvY29sVHlwZQBwcm9jZXNz
VHlwZQBnZXRfdG9rZW5fdHlwZQBzZXRfdG9rZW5fdHlwZQBTeXN0ZW0uQ29yZQBnZXRfQ3VsdHVy
ZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUASW50ZXJuYWxEYXRhQ29sbGVjdGlvbkJhc2UA
QXBwbGljYXRpb25TZXR0aW5nc0Jhc2UAV3JpdGVUb0RhdGFiYXNlAENsb3NlAERpc3Bvc2UAVHJ5
UGFyc2UAQ3JlYXRlAGdldF9TdGF0ZQBzZXRfU3RhdGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29u
bmVjdGlvblN0YXRlADw+MV9fc3RhdGUAZ2V0X0RlYWN0aXZhdGUAc2V0X0RlYWN0aXZhdGUARHlu
YW1pY0F0dHJpYnV0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJD
b2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRl
AEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXN5bmNTdGF0ZU1hY2hpbmVBdHRyaWJ1dGUAQXNzZW1i
bHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAERlYnVnZ2VySGlk
ZGVuQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2Ny
aXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQ
cm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21w
b25lbnRFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1l
Q29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAHNldF9WYWx1ZQBB
dXRoZW50aWNhdGlvbkhlYWRlclZhbHVlAE1lZGlhVHlwZVdpdGhRdWFsaXR5SGVhZGVyVmFsdWUA
dmFsdWUAc2V0X0V4cGVjdDEwMENvbnRpbnVlAGdldF9QYWdlU2l6ZQBHZXRGaWxlU2l6ZQBKc29u
RGVzZXJpYWxpemUASW5kZXhPZgBFbmNvZGluZwBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRv
QmFzZTY0U3RyaW5nAGdldF9Db25uZWN0aW9uU3RyaW5nAGNsZWFuSnNvblN0cmluZwBqc29uU3Ry
aW5nAFRvU3RyaW5nAEdldFN0cmluZwBTdWJzdHJpbmcAVXJpAGdldF9UYXNrAFN5c3RlbS5Db21w
b25lbnRNb2RlbABnZXRfRW1haWwAc2V0X0VtYWlsAHNldF9QYXJlbnRFbWFpbABTQ183ZmNhZmZj
ODYwZDQ0MzI5OTJmNmY0ZjEzYjI2YzhhOC5kbGwAc2V0X0FkZHJlc3MyX0lzTnVsbABzZXRfQ2Ft
cHVzSURfSXNOdWxsAHNldF9TdHVkZW50SURfSXNOdWxsAHNldF9HcmFkZV9Jc051bGwAc2V0X01p
ZGRsZU5hbWVfSXNOdWxsAHNldF9MYXN0TmFtZV9Jc051bGwAc2V0X0ZpcnN0TmFtZV9Jc051bGwA
c2V0X1Bob25lX0lzTnVsbABzZXRfUGFyZW50UGhvbmVfSXNOdWxsAHNldF9TdGF0ZV9Jc051bGwA
c2V0X0RlYWN0aXZhdGVfSXNOdWxsAHNldF9FbWFpbF9Jc051bGwAc2V0X1BhcmVudEVtYWlsX0lz
TnVsbABzZXRfSG9tZVJvb21fSXNOdWxsAHNldF9aaXBfSXNOdWxsAHNldF9BZGRyZXNzX0lzTnVs
bABzZXRfQ2l0eV9Jc051bGwAU2V0TnVsbABzZXRfU2VjdXJpdHlQcm90b2NvbABiYXNlVXJsAE1l
bW9yeVN0cmVhbQBnZXRfSXRlbQBzZXRfSXRlbQBTeXN0ZW0AZ2V0X0hvbWVSb29tAHNldF9Ib21l
Um9vbQByZXNvdXJjZU1hbgBzZW5kVG9rZW4AR2V0QWNjZXNzVG9rZW4AYWNjZXNzVG9rZW4AZ2V0
X2FjY2Vzc190b2tlbgBzZXRfYWNjZXNzX3Rva2VuAE9wZW4AZ2V0X2V4cGlyZXNfaW4Ac2V0X2V4
cGlyZXNfaW4AU2NyaXB0TWFpbgBEYXRhQ29sdW1uAHBMb2NhdGlvbgBTeXN0ZW0uQ29uZmlndXJh
dGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUnVudGltZS5TZXJpYWxpemF0aW9uAHNl
dF9BdXRob3JpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAERhdGFDb2x1bW5Db2xsZWN0aW9uAGdl
dF9SdW50aW1lQ29ubmVjdGlvbkNvbGxlY3Rpb24AU3FsUGFyYW1ldGVyQ29sbGVjdGlvbgBEYXRh
Um93Q29sbGVjdGlvbgBEYkNvbm5lY3Rpb24AU3FsQ29ubmVjdGlvbgBJbnZhbGlkT3BlcmF0aW9u
RXhjZXB0aW9uAFNldEV4Y2VwdGlvbgBTeXN0ZW0uRGF0YS5Db21tb24AU3lzdGVtLlJ1bnRpbWUu
U2VyaWFsaXphdGlvbi5Kc29uAEN1bHR1cmVJbmZvAExvZ0luZm8AT3V0cHV0TmFtZU1hcABPdXRw
dXRNYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNSdW50aW1lV3JhcABNaWNyb3NvZnQuU3FsU2Vy
dmVyLkRUU1BpcGVsaW5lV3JhcABnZXRfWmlwAHNldF9aaXAAU3lzdGVtLk5ldC5IdHRwAENsZWFy
ADw+dF9fYnVpbGRlcgBPdXRwdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1ZmZlcgBn
ZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9Db25uZWN0aW9uTWFuYWdlcgBTZXJ2aWNlUG9pbnRNYW5h
Z2VyAEpzb25IZWxwZXIATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZS5XcmFwcGVyAE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lLldyYXBwZXIARGJQYXJhbWV0ZXIAU3FsUGFy
YW1ldGVyAEdldEF3YWl0ZXIAZ2V0X0NsaWVudFNlcnZlcgBEYXRhQ29udHJhY3RKc29uU2VyaWFs
aXplcgBYbWxPYmplY3RTZXJpYWxpemVyAEVycm9yAElFbnVtZXJhdG9yAEdldEVudW1lcmF0b3IA
LmN0b3IALmNjdG9yAE91dHB1dElEcwBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUu
Q29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDXzdmY2FmZmM4NjBkNDQzMjk5MmY2
ZjRmMTNiMjZjOGE4LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2Rl
cwBTQ183ZmNhZmZjODYwZDQ0MzI5OTJmNmY0ZjEzYjI2YzhhOC5Qcm9wZXJ0aWVzAGdldF9SZWFk
T25seVZhcmlhYmxlcwBHZXRCeXRlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbkluZGV4
ZXMAU2V0dGluZ3MAPD40X190aGlzAFN5c3RlbS5UaHJlYWRpbmcuVGFza3MAQ29udGFpbnMAZ2V0
X0NvbHVtbnMAU3lzdGVtLlRleHQuUmVndWxhckV4cHJlc3Npb25zAFN5c3RlbS5Db2xsZWN0aW9u
cwBDb25uZWN0aW9ucwBTeXN0ZW0uTmV0Lkh0dHAuSGVhZGVycwBIdHRwSGVhZGVycwBIdHRwUmVx
dWVzdEhlYWRlcnMAZ2V0X0RlZmF1bHRSZXF1ZXN0SGVhZGVycwBCdWZmZXJzAGdldF9QYXJhbWV0
ZXJzAGdldF9BZGRyZXNzAHNldF9BZGRyZXNzAHNldF9CYXNlQWRkcmVzcwBQcm9jZXNzU3R1ZGVu
dHMAR2V0U3R1ZGVudHMARmluaXNoT3V0cHV0cwBnZXRfUm93cwBDcmVhdGVOZXdPdXRwdXRSb3dz
AENvbmNhdABGb3JtYXQAUmVhZE9iamVjdABXcml0ZU9iamVjdABTeXN0ZW0uTmV0AGdldF9DbGll
bnRTZWNyZXQAY2xpZW50U2VjcmV0AFNldEVuZE9mUm93c2V0AFdhaXQAU3BsaXQAZ2V0X0RlZmF1
bHQAR2V0UmVzdWx0AFNldFJlc3VsdABTdHVkZW50AFN5c3RlbS5EYXRhLlNxbENsaWVudABIdHRw
Q2xpZW50AGdldF9EZXBhcnRtZW50AHNldF9EZXBhcnRtZW50AFVzZXJDb21wb25lbnQAUGFyZW50
Q29tcG9uZW50AFNjcmlwdENvbXBvbmVudABnZXRfQ3VycmVudABnZXRfQ29udGVudABGb3JtVXJs
RW5jb2RlZENvbnRlbnQAU3RyaW5nQ29udGVudABIdHRwQ29udGVudABnZXRfY291bnQAc2V0X2Nv
dW50AGdldF9BY2NlcHQATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABTdGFydABDb252ZXJ0
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AFByaW1lT3V0cHV0AE1vdmVOZXh0AFN5
c3RlbS5UZXh0AEdldFZhbHVlV2l0aENvbnRleHQAU2NyaXB0Q29tcG9uZW50RXZhbENvbnRleHQA
Z2V0X0V2YWx1YXRvckNvbnRleHQARGF0YVJvdwBBZGRSb3cATmV3Um93AFJlZ2V4AFRvQXJyYXkA
Z2V0X0Fzc2VtYmx5AEV4ZWN1dGVOb25RdWVyeQBnZXRfQ2l0eQBzZXRfQ2l0eQAAAAAAA1sAAAEA
A10AAAd9ACwAewAAA3sAAAN9AAADLAAAAzoAAAMiAAA9SgBzAG8AbgBTAHQAcgBpAG4AZwBUAG8A
RABhAHQAYQBUAGEAYgBsAGUAOgAgAEMAbwBsAHUAbQBuAHMAAD9FAHIAcgBvAHIAIABQAGEAcgBz
AGkAbgBnACAAQwBvAGwAdQBtAG4AIABOAGEAbQBlACAAOgAgAHsAMAB9AAADXAAAR0oAcwBvAG4A
UwB0AHIAaQBuAGcAVABvAEQAYQB0AGEAVABhAGIAbABlADoAIABGAG8AcgAgAGUAYQBjAGgAIABy
AG8AdwAAO0UAcgByAG8AcgAgAFAAYQByAHMAaQBuAGcAIABSAG8AdwAgACAATgBhAG0AZQAgADoA
IAB7ADAAfQAAK0oAcwBvAG4AUwB0AHIAaQBuAGcAVABvAEQAYQB0AGEAVABhAGIAbABlAAA7ewAi
AG4AYQBtAGUAIgA6ACIAcwB0AHUAZABlAG4AdABzACIALAAiAHIAZQBjAG8AcgBkACIAOgBbAAA5
XQAsACIAQABlAHgAdABlAG4AcwBpAG8AbgBzACIAOgAiAGEAYwB0AGkAdgBpAHQAaQBlAHMALAAA
M3UAXwBzAHQAdQBkAGUAbgB0AF8AZQB4AHQAZQBuAHMAaQBvAG4AXwB0AGUAcwB0ACwAACV1AF8A
cwB0AHUAZABlAG4AdABfAG4AZQB3AF8AZQB4AHQALAAAJXMAdAB1AGQAZQBuAHQAYwBvAHIAZQBm
AGkAZQBsAGQAcwAsAAArdQBfAHMAdAB1AGQAZQBuAHQAcwBfAGUAeAB0AGUAbgBzAGkAbwBuACwA
ABtzAF8AcwB0AHUAXwBuAGMAZQBhAF8AeAAsAAAbcwBfAHMAdAB1AF8AYwByAGQAYwBfAHgALAAA
MXUAXwBsAGQAXwBhAGMAYwBvAHUAbgB0AF8AbQBhAG4AYQBnAGUAbQBlAG4AdAAsAAAjYwBfAHMA
dAB1AGQAZQBuAHQAbABvAGMAYQB0AG8AcgAsAAArdQBfAHMAdAB1AGQAZQBuAHQAcwB1AHMAZQBy
AGYAaQBlAGwAZABzACwAAB91AF8AYwB1AHMAdABvAG0AZgBpAGUAbABkAHMALAAAHXMAXwBzAHQA
dQBfAGUAZABmAGkAXwB4ACIAfQAAE3MAcABMAG8AZwBJAG4AZgBvAAAVQABDAGwAaQBlAG4AdABV
AEkARAAADUAARQByAHIAbwByAAATQABGAGkAbABlAFQAeQBwAGUAAAtAAEEAcgBlAGEAABFAAEwA
bwBnAEkAbgBmAG8AAF0vAHcAcwAvAHMAYwBoAGUAbQBhAC8AcQB1AGUAcgB5AC8AYwBvAG0ALgBo
AGEAeQBlAHMAcwBvAGYAdAAuAFQASQBQAFcAZQBiAC4AcwB0AHUAZABlAG4AdABzAAApLwBvAGEA
dQB0AGgALwBhAGMAYwBlAHMAcwBfAHQAbwBrAGUAbgAvAAAPUwB0AHUAZABlAG4AdAAAgJtJAHMA
TgB1AGwAbAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0
AG8AIABGAGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQA
aABlACAAYwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AABFPAHUAdABwAHUAdAAgADAAAAlQ
AFMARABCAAARQwBsAGkAZQBuAHQASQBEAAAVQwBsAGkAZQBuAHQASQBEAFAAUwAAGUMAbABpAGUA
bgB0AFMAZQBjAHIAZQB0AAAZQwBsAGkAZQBuAHQAUwBlAHIAdgBlAHIAABFQAGEAZwBlAFMAaQB6
AGUAAHFTAEMAXwA3AGYAYwBhAGYAZgBjADgANgAwAGQANAA0ADMAMgA5ADkAMgBmADYAZgA0AGYA
MQAzAGIAMgA2AGMAOABhADgALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBl
AHMAABlBAGMAYwBlAHMAcwAgAFQAbwBrAGUAbgAAOUcAZQB0AEEAYwBjAGUAcwBzAFQAbwBrAGUA
bgAgAHIAZQB0AHUAcgBuAGUAZAAgAG4AdQBsAGwAABNGAGkAbABlACAAUwBpAHoAZQAAM0cAZQB0
AEYAaQBsAGUAUwBpAHoAZQAgAHIAZQB0AHUAcgBuAGUAZAAgAG4AdQBsAGwAAB9QAHIAbwBjAGUA
cwBzAFMAdAB1AGQAZQBuAHQAcwAAFT8AcABhAGcAZQBzAGkAegBlAD0AAA0mAHAAYQBnAGUAPQAA
IWEAcABwAGwAaQBjAGEAdABpAG8AbgAvAGoAcwBvAG4AABtBAHUAdABoAG8AcgBpAHoAYQB0AGkA
bwBuAAAPQgBlAGEAcgBlAHIAIAAAE1MAdAB1AGQAZQBuAHQASQBEAAARQwBhAG0AcAB1AHMASQBE
AAATRgBpAHIAcwB0AE4AYQBtAGUAABFMAGEAcwB0AE4AYQBtAGUAABVNAGkAZABkAGwAZQBOAGEA
bQBlAAALRwByAGEAZABlAAARSABvAG0AZQBSAG8AbwBtAAALUABoAG8AbgBlAAAXUABhAHIAZQBu
AHQAUABoAG8AbgBlAAALRQBtAGEAaQBsAAAXUABhAHIAZQBuAHQARQBtAGEAaQBsAAAPQQBkAGQA
cgBlAHMAcwAAEUEAZABkAHIAZQBzAHMAMgAACUMAaQB0AHkAAAtTAHQAYQB0AGUAAAd6AGkAcAAA
F0QAZQBhAGMAdABpAHYAYQB0AGUAZAAARUcAZQB0AFMAdAB1AGQAZQBuAHQAcwAgAC0AIABSAG8A
dwAgAEMAbwB1AG4AdAAgAFAAYQBnAGUAIABOAHUAbQA6ACAAARdHAGUAdABTAHQAdQBkAGUAbgB0
AHMAAA0vAGMAbwB1AG4AdAAAF1IAZQBjAG8AcgBkAEMAbwB1AG4AdAAAF0cAZQB0AEYAaQBsAGUA
UwBpAHoAZQAAQ2EAcABwAGwAaQBjAGEAdABpAG8AbgAvAHgALQB3AHcAdwAtAGYAbwByAG0ALQB1
AHIAbABlAG4AYwBvAGQAZQBkAAELQgBhAHMAaQBjAAAVZwByAGEAbgB0AF8AdAB5AHAAZQAAJWMA
bABpAGUAbgB0AF8AYwByAGUAZABlAG4AdABpAGEAbABzAACS/3VPBN6LRpw0PxsMsBrJAAQgAQEI
AyAAAQUgAQEREQQgAQEOBSABARI5BSABAR0CBSABARJ1BiABARGAuQkHAhE0FRFFAQgFFRFFAQgI
AAAVEUUBEwAHMAEBARAeAAQKARE0CCAAFRJBARMACQcCETgVEUUBHAUVEUUBHAQKARE4CQcCETwV
EUUBDgUVEUUBDgQKARE8CQcCEUAVEUUBDgQKARFABQAAEoDJBSABHQUOBQABDh0FJAcTElEdDhUS
VQEOHQ4IHQ4IDggOFRFZAQ4OEl0OCA4OElESYQUgAg4ODgYAAh0ODg4FFRJVAQ4EIAEIDgUgAg4I
CAUgAQITAAUgAQETAAUAAg4OHAggABURWQETAAUVEVkBDgQgABMABSAAEoDZBiABEoDdDgMgAAIE
IAASXQQgAQ4IBSACAQ4cBSAAEoDhBSABARJdAyAADgQHARJlBSAAEYDpBiACAQ4SZQYgAQERgPUF
IAASgPkJIAISgP0OEYEBBCABARwKIAMSgP0OEYEBCAMgAAgLIAMBEoCdHQgSgKEFIAIBCBwDBwEI
BwACCBKAoQ4FIAEdCAgFIAASgREFIAASgRUGIAESgRkOBSAAEoCpBSAAEoEdBiABEoEhHAUAABKB
JQYgARwSgSkHAAESORGBLQUgABKBMQcgAgEOEoExBAcBEmkCHgAHIAIBEoE9HAQgAB0FBSABDh0F
BSABAR0FBiABHBKBPRcHCwgIDg4ODg4VEXkBDhUReQEcEmESYQQAAQECBgABARGBRQYAAw4ODg4F
FRJBAQ4IIAAVEXkBEwAFFRF5AQ4KMAICARAeABAeAQkKAhUReQEOETQFFRJBARwFFRF5ARwJCgIV
EXkBHBE0BSABARJhJQcQCBwICA4SgIEOCBUReQESgIUVEXkBDhKAiRJdEoCNCBJhEmEEAAEIDgYA
AgIOEAgFAAEOHQ4GIAEBEoFJBSAAEoFNCiAAFRKBUQESgVUIFRKBUQESgVUFAAIODg4FIAIBDg4I
IAMBDhKAyQ4PIAIVEkEBEoCFEoFJEoFdBxUSQQESgIUHFRF5ARKAhQsKAhUReQESgIUROAUgABKA
hQUgABKBXQcgABUSQQEOCQoCFRF5AQ4ROAUgABKAiQMgABwEIAEcDhkHCQgODhKAgQ4VEXkBEoCF
FRF5AQ4SYRJhCwoCFRF5ARKAhRE8CQoCFRF5AQ4RPAQKARIwFgcHCA4OEoCVFRF5ARKAhRUReQEO
EmEGIAEBEoFlCxUSVQEVEYFpAg4OBxURgWkCDg4HIAIBEwATAQ8gAQEVEoFtARURgWkCDg4LCgIV
EXkBEoCFEUAJCgIVEXkBDhFABAoBEiwIt3pcVhk04IkIiYRdzYCAzJEIsD9ffxHVCjoCBg4DBhIU
AwYSGAMGEgwEBhKApQQGEoCxBAYSgLUDBhIgAgYIBgYVEUUBCAMGEggGBhUReQEOBgYVEXkBHAYG
FRFFARwIBhUReQESgIUGBhURRQEOBAYSgJEHIAAVEkEBCAogAxUSQQEcDg4OCSACFRJBAQ4ODgsA
BBUSQQEODg4ODgQgAQ4OBSABElEOBiADAQgODgMAAAEEIAEBAg0gBAEIHQgdEoCdEoChBiABARKA
pQUAABKAsQUAABKAtQYAAQESgLUEAAASIAYQAQEOHgAGEAEBHgAOAygADgMoAAIFKAASgKkDKAAI
BQgAEoCxBQgAEoC1BAgAEiAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MB
CAEAAgAAAAAAKAEAI1NDXzdmY2FmZmM4NjBkNDQzMjk5MmY2ZjRmMTNiMjZjOGE4AAAFAQAAAAAW
AQARQ29weXJpZ2h0IEAgIDIwMTkAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNQEAVA4U
RnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41JQEAIFNjcmlwdE1haW4rPFBy
b2Nlc3NTdHVkZW50cz5kX182AAAhAQAcU2NyaXB0TWFpbis8R2V0U3R1ZGVudHM+ZF9fNwAAIQEA
HFNjcmlwdE1haW4rPEdldEZpbGVTaXplPmRfXzgAACQBAB9TY3JpcHRNYWluKzxHZXRBY2Nlc3NU
b2tlbj5kX185AAAEAQAAAAoBAAIAAAAAAQAAAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVz
b3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJl
PW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNl
cy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAABB8AAAAAAAAAAAAACp8
AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcfAAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29y
ZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACA
AAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWIAAAOwDAAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBS
AFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQA
AAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABU
AHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsARMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkA
bgBmAG8AAAAoAwAAAQAwADAAMAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAA
AAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUA
cwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAQwBfADcAZgBjAGEAZgBmAGMAOAA2ADAAZAA0ADQAMwAy
ADkAOQAyAGYANgBmADQAZgAxADMAYgAyADYAYwA4AGEAOAAAADAACAABAEYAaQBsAGUAVgBlAHIA
cwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBl
AAAAUwBDAF8ANwBmAGMAYQBmAGYAYwA4ADYAMABkADQANAAzADIAOQA5ADIAZgA2AGYANABmADEA
MwBiADIANgBjADgAYQA4AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBo
AHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADkAAAAqAAEAAQBMAGUAZwBhAGwA
VAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABl
AG4AYQBtAGUAAABTAEMAXwA3AGYAYwBhAGYAZgBjADgANgAwAGQANAA0ADMAMgA5ADkAMgBmADYA
ZgA0AGYAMQAzAGIAMgA2AGMAOABhADgALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBh
AG0AZQAAAAAAUwBDAF8ANwBmAGMAYQBmAGYAYwA4ADYAMABkADQANAAzADIAOQA5ADIAZgA2AGYA
NABmADEAMwBiADIANgBjADgAYQA4AAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBu
AAAAMQAuADAALgAwAC4AMAAAADgACAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4A
AAAxAC4AMAAuADAALgAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAHAAAAwAAAA8PAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAA=]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_7fcaffc860d4432992f6f4f13b26c8a8</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::ClientID,User::ClientIDPS,User::ClientSecret,User::ClientServer,User::PageSize</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">D6</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">67274cf1c7682278eaf9d490ad5d3e9e2eeccf0e</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">30b83c820613423a710532da7d4c908b</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Loop thru Clients\Get Students\Script Component.Connections[PSDB]"
                      connectionManagerID="Package.ConnectionManagers[ADO.NET_PowerSchoolAPIPlugIn]"
                      connectionManagerRefId="Package.ConnectionManagers[ADO.NET_PowerSchoolAPIPlugIn]"
                      name="PSDB" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Loop thru Clients\Get Students\Script Component.Outputs[Output 0]"
                      hasSideEffects="true"
                      name="Output 0">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop thru Clients\Get Students\Script Component.Outputs[Output 0].Columns[StudentID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Get Students\Script Component.Outputs[Output 0].Columns[StudentID]"
                          name="StudentID" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Get Students\Script Component.Outputs[Output 0].Columns[CampusID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Get Students\Script Component.Outputs[Output 0].Columns[CampusID]"
                          name="CampusID" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Get Students\Script Component.Outputs[Output 0].Columns[FirstName]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Get Students\Script Component.Outputs[Output 0].Columns[FirstName]"
                          name="FirstName" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Get Students\Script Component.Outputs[Output 0].Columns[LastName]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Get Students\Script Component.Outputs[Output 0].Columns[LastName]"
                          name="LastName" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Get Students\Script Component.Outputs[Output 0].Columns[MiddleName]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Get Students\Script Component.Outputs[Output 0].Columns[MiddleName]"
                          name="MiddleName" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Get Students\Script Component.Outputs[Output 0].Columns[Grade]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Get Students\Script Component.Outputs[Output 0].Columns[Grade]"
                          name="Grade" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Get Students\Script Component.Outputs[Output 0].Columns[HomeRoom]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Get Students\Script Component.Outputs[Output 0].Columns[HomeRoom]"
                          name="HomeRoom" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Get Students\Script Component.Outputs[Output 0].Columns[Phone]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Get Students\Script Component.Outputs[Output 0].Columns[Phone]"
                          name="Phone" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Get Students\Script Component.Outputs[Output 0].Columns[ParentPhone]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Get Students\Script Component.Outputs[Output 0].Columns[ParentPhone]"
                          name="ParentPhone" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Get Students\Script Component.Outputs[Output 0].Columns[Email]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          lineageId="Package\Loop thru Clients\Get Students\Script Component.Outputs[Output 0].Columns[Email]"
                          name="Email" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Get Students\Script Component.Outputs[Output 0].Columns[ParentEmail]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          lineageId="Package\Loop thru Clients\Get Students\Script Component.Outputs[Output 0].Columns[ParentEmail]"
                          name="ParentEmail" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Get Students\Script Component.Outputs[Output 0].Columns[Address]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Loop thru Clients\Get Students\Script Component.Outputs[Output 0].Columns[Address]"
                          name="Address" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Get Students\Script Component.Outputs[Output 0].Columns[Address2]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Loop thru Clients\Get Students\Script Component.Outputs[Output 0].Columns[Address2]"
                          name="Address2" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Get Students\Script Component.Outputs[Output 0].Columns[City]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Get Students\Script Component.Outputs[Output 0].Columns[City]"
                          name="City" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Get Students\Script Component.Outputs[Output 0].Columns[State]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Get Students\Script Component.Outputs[Output 0].Columns[State]"
                          name="State" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Get Students\Script Component.Outputs[Output 0].Columns[Zip]"
                          codePage="1252"
                          dataType="str"
                          length="10"
                          lineageId="Package\Loop thru Clients\Get Students\Script Component.Outputs[Output 0].Columns[Zip]"
                          name="Zip" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Get Students\Script Component.Outputs[Output 0].Columns[Deactivate]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Get Students\Script Component.Outputs[Output 0].Columns[Deactivate]"
                          name="Deactivate" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Loop thru Clients\Get Students.Paths[Derived Column Output]"
                  endId="Package\Loop thru Clients\Get Students\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Loop thru Clients\Get Students\Derived Column.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Loop thru Clients\Get Students.Paths[Output 0]"
                  endId="Package\Loop thru Clients\Get Students\Derived Column.Inputs[Derived Column Input]"
                  name="Output 0"
                  startId="Package\Loop thru Clients\Get Students\Script Component.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Loop thru Clients\Get Teachers"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task - Get Teachers"
          DTS:Disabled="True"
          DTS:DTSID="{bfcdb790-a0f3-437c-8c58-eb44f129c2cb}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Get Teachers"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server v10; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">@[User::ProcessTeacher]==0</DTS:PropertyExpression>
          <DTS:ObjectData>
            <pipeline
              BLOBTempStoragePath=""
              bufferTempStoragePath=""
              version="1">
              <components>
                <component
                  refId="Package\Loop thru Clients\Get Teachers\Derived Column"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Loop thru Clients\Get Teachers\Derived Column.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Loop thru Clients\Get Teachers\Derived Column.Inputs[Derived Column Input].Columns[State]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="State"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Loop thru Clients\Get Teachers\Script Component.Outputs[Output 0].Columns[State]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[LEFT](#{Package\Loop thru Clients\Get Teachers\Script Component.Outputs[Output 0].Columns[State]},2)</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">LEFT(State,2)</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Loop thru Clients\Get Teachers\Derived Column.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Loop thru Clients\Get Teachers\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop thru Clients\Get Teachers\Derived Column.Outputs[Derived Column Output].Columns[CustomerID]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Loop thru Clients\Get Teachers\Derived Column.Outputs[Derived Column Output].Columns[CustomerID]"
                          name="CustomerID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::ClientID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::ClientID]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Loop thru Clients\Get Teachers\Derived Column.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Loop thru Clients\Get Teachers\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop thru Clients\Get Teachers\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Get Teachers\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Get Teachers\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Get Teachers\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Loop thru Clients\Get Teachers\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[PSTeachers]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Loop thru Clients\Get Teachers\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[PowerSchoolAPIPlugIn]"
                      connectionManagerRefId="Package.ConnectionManagers[PowerSchoolAPIPlugIn]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Loop thru Clients\Get Teachers\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Loop thru Clients\Get Teachers\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[TeacherID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="TeacherID"
                          externalMetadataColumnId="Package\Loop thru Clients\Get Teachers\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TeacherID]"
                          lineageId="Package\Loop thru Clients\Get Teachers\Script Component.Outputs[Output 0].Columns[TeacherID]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Get Teachers\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[CampusID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="CampusID"
                          externalMetadataColumnId="Package\Loop thru Clients\Get Teachers\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CampusID]"
                          lineageId="Package\Loop thru Clients\Get Teachers\Script Component.Outputs[Output 0].Columns[CampusID]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Get Teachers\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[FirstName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="FirstName"
                          externalMetadataColumnId="Package\Loop thru Clients\Get Teachers\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FirstName]"
                          lineageId="Package\Loop thru Clients\Get Teachers\Script Component.Outputs[Output 0].Columns[FirstName]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Get Teachers\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[LastName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="LastName"
                          externalMetadataColumnId="Package\Loop thru Clients\Get Teachers\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[LastName]"
                          lineageId="Package\Loop thru Clients\Get Teachers\Script Component.Outputs[Output 0].Columns[LastName]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Get Teachers\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[MiddleName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="MiddleName"
                          externalMetadataColumnId="Package\Loop thru Clients\Get Teachers\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[MiddleName]"
                          lineageId="Package\Loop thru Clients\Get Teachers\Script Component.Outputs[Output 0].Columns[MiddleName]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Get Teachers\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Grade]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Grade"
                          externalMetadataColumnId="Package\Loop thru Clients\Get Teachers\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Grade]"
                          lineageId="Package\Loop thru Clients\Get Teachers\Script Component.Outputs[Output 0].Columns[Grade]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Get Teachers\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[HomeRoom]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="HomeRoom"
                          externalMetadataColumnId="Package\Loop thru Clients\Get Teachers\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[HomeRoom]"
                          lineageId="Package\Loop thru Clients\Get Teachers\Script Component.Outputs[Output 0].Columns[HomeRoom]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Get Teachers\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Department]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="Department"
                          externalMetadataColumnId="Package\Loop thru Clients\Get Teachers\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Department]"
                          lineageId="Package\Loop thru Clients\Get Teachers\Script Component.Outputs[Output 0].Columns[Department]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Get Teachers\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Phone]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Phone"
                          externalMetadataColumnId="Package\Loop thru Clients\Get Teachers\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Phone]"
                          lineageId="Package\Loop thru Clients\Get Teachers\Script Component.Outputs[Output 0].Columns[Phone]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Get Teachers\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Email]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="Email"
                          externalMetadataColumnId="Package\Loop thru Clients\Get Teachers\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Email]"
                          lineageId="Package\Loop thru Clients\Get Teachers\Script Component.Outputs[Output 0].Columns[Email]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Get Teachers\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Address]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="Address"
                          externalMetadataColumnId="Package\Loop thru Clients\Get Teachers\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Address]"
                          lineageId="Package\Loop thru Clients\Get Teachers\Script Component.Outputs[Output 0].Columns[Address]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Get Teachers\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Address2]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="Address2"
                          externalMetadataColumnId="Package\Loop thru Clients\Get Teachers\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Address2]"
                          lineageId="Package\Loop thru Clients\Get Teachers\Script Component.Outputs[Output 0].Columns[Address2]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Get Teachers\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[City]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="City"
                          externalMetadataColumnId="Package\Loop thru Clients\Get Teachers\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[City]"
                          lineageId="Package\Loop thru Clients\Get Teachers\Script Component.Outputs[Output 0].Columns[City]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Get Teachers\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[State]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="State"
                          externalMetadataColumnId="Package\Loop thru Clients\Get Teachers\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[State]"
                          lineageId="Package\Loop thru Clients\Get Teachers\Script Component.Outputs[Output 0].Columns[State]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Get Teachers\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Zip]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Zip"
                          externalMetadataColumnId="Package\Loop thru Clients\Get Teachers\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Zip]"
                          lineageId="Package\Loop thru Clients\Get Teachers\Script Component.Outputs[Output 0].Columns[Zip]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Get Teachers\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Deactivate]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Deactivate"
                          externalMetadataColumnId="Package\Loop thru Clients\Get Teachers\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Deactivate]"
                          lineageId="Package\Loop thru Clients\Get Teachers\Script Component.Outputs[Output 0].Columns[Deactivate]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Get Teachers\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[CustomerID]"
                          cachedDataType="i4"
                          cachedName="CustomerID"
                          externalMetadataColumnId="Package\Loop thru Clients\Get Teachers\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientUID]"
                          lineageId="Package\Loop thru Clients\Get Teachers\Derived Column.Outputs[Derived Column Output].Columns[CustomerID]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Get Teachers\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TeacherPSUID]"
                          dataType="i4"
                          name="TeacherPSUID" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Get Teachers\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientUID]"
                          dataType="i4"
                          name="ClientUID" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Get Teachers\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TeacherID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="TeacherID" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Get Teachers\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CampusID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="CampusID" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Get Teachers\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FirstName]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="FirstName" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Get Teachers\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[LastName]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="LastName" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Get Teachers\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[MiddleName]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="MiddleName" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Get Teachers\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Grade]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Grade" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Get Teachers\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[HomeRoom]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="HomeRoom" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Get Teachers\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Department]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Department" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Get Teachers\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Phone]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Phone" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Get Teachers\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Email]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Email" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Get Teachers\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Address]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="Address" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Get Teachers\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Address2]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="Address2" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Get Teachers\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[City]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="City" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Get Teachers\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[State]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="State" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Get Teachers\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Zip]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Zip" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Get Teachers\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Race]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Race" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Get Teachers\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Gender]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Gender" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Get Teachers\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Deactivate]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Deactivate" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Loop thru Clients\Get Teachers\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Loop thru Clients\Get Teachers\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop thru Clients\Get Teachers\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Get Teachers\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Get Teachers\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Get Teachers\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Loop thru Clients\Get Teachers\Script Component"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;11"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Script Component"
                  version="9">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="33">
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces

 using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.IO;
using System.Net;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Runtime.Serialization;
using System.Runtime.Serialization.Json;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading.Tasks;
using System.Web.Script.Serialization;
using System.Windows.Forms;



#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    static string pLocation = "/ws/schema/query/com.hayessoft.TIPWeb.teachers";
    static string tokenURI = "/oauth/access_token/";
    static string processType = "Teacher";

    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();

    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */
        ProcessTeachers().Wait();
    }


    public async Task<int> ProcessTeachers()
    {
        try
        {

            // The server base address
            string baseURL = Variables.ClientServer;

            //MessageBox.Show(uri);

            ServicePointManager.Expect100Continue = true;
            ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;


            /// The client information used to get the OAuth Access Token from the server.
            string clientId = Variables.ClientIDPS;
            string clientSecret = Variables.ClientSecret;
            string sendToken = EncodeTo64(Variables.ClientIDPS + ":" + Variables.ClientSecret);
            WriteToDatabase(0, "TEACHER-sendToken", sendToken);
            // this will hold the Access Token returned from the server.
            //MessageBox.Show(sendToken, "sendToken");

            string accessToken = await GetAccessToken(baseURL, sendToken, clientId, clientSecret);
            //-->>>>>>>>>>>>>> Add : if returns null, stop
            if (accessToken == null)
            {
                WriteToDatabase(1, "Access Token", "GetAccessToken returned null");
                return 0;
            }
            //MessageBox.Show(accessToken, "access token");
           

            string FileSize = await GetFileSize(baseURL, accessToken);
            if (FileSize == null)
            {
                WriteToDatabase(1, "File Size", "GetFileSize returned null");
                return 0;
            }

            var jsonResponse = await GetTeachers(baseURL, accessToken, FileSize);

            return 0;
        }
        catch (Exception ex) { 
            WriteToDatabase(1, "ProcessTeachers", ex.Message);
            return 0;
        }

        }


    /// <summary>
    /// Gets the list of teachers.
    /// </summary>
    /// <param name="baseUrl">The url for the teacher list</param>
    /// <param name="accessToken">Acquired in the previous method</param>
    /// <returns>The page of articles.</returns>
    private async Task<dynamic> GetTeachers(string baseUrl, string accessToken, string FileSize)
    {
        try
        {
            int TotalRecords;
            string pageSize = Variables.PageSize;
            int intPageSize = Convert.ToInt32(pageSize);
            if (Int32.TryParse(FileSize, out TotalRecords))
            {
                int pages = ((TotalRecords - 1) / intPageSize) + 1;
                //MessageBox.Show(pages.ToString(), "pages");

                for (int i = 1; i <= pages; i++)
                {
                    string pagenum = i.ToString();
                    //MessageBox.Show(pagenum, "page number");

                    string uri = baseUrl + pLocation + "?pagesize="+ pageSize + "&page=" + pagenum;
                    var client = new HttpClient();

                    client.BaseAddress = new Uri(uri);

                    client.DefaultRequestHeaders.Accept.Clear();
                    client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));
                    client.DefaultRequestHeaders.Add("Authorization", "Bearer " + accessToken);

                    //MessageBox.Show(uri, "teachers uri");

                    StringContent stringContent = new StringContent("", Encoding.UTF8, "application/json");
                    //StringContent stringContent = new StringContent("page=" + pagenum, Encoding.UTF8, "application/json");
                    //string content;

                    HttpResponseMessage response = await client.PostAsync(new Uri(uri), stringContent);

                    response.EnsureSuccessStatusCode();
                    string jsonString = await response.Content.ReadAsStringAsync();
                    //MessageBox.Show(jsonString, "jsonstring");

                    jsonString = cleanJsonString(jsonString);

                    //Deserialize our JSON
                    DataTable dt = JsonStringToDataTable(jsonString);
                    int numRows = 0;


                    foreach (DataRow row in dt.Rows)
                    {
                        Output0Buffer.AddRow();
                        Output0Buffer.TeacherID = row["TeacherID"].ToString().Replace("\\", "");
                        Output0Buffer.CampusID = row["CampusID"].ToString().Replace("\\", "");
                        Output0Buffer.FirstName = row["FirstName"].ToString().Replace("\\", "");
                        Output0Buffer.LastName = row["LastName"].ToString().Replace("\\", "");
                        Output0Buffer.MiddleName = row["MiddleName"].ToString().Replace("\\", "");
                        Output0Buffer.Grade = row["Grade"].ToString().Replace("\\", "");
                        Output0Buffer.HomeRoom = row["HomeRoom"].ToString().Replace("\\", "");
                        Output0Buffer.Department = row["Department"].ToString().Replace("\\", "");
                        Output0Buffer.Phone = row["Phone"].ToString().Replace("\\", "");
                        Output0Buffer.Email = row["Email"].ToString().Replace("\\", "");
                        Output0Buffer.Address = row["Address"].ToString().Replace("\\", "");
                        Output0Buffer.Address2 = row["Address2"].ToString().Replace("\\", "");
                        Output0Buffer.City = row["City"].ToString().Replace("\\", "");
                        Output0Buffer.State = row["State"].ToString().Replace("\\", "");
                        Output0Buffer.Zip = row["zip"].ToString().Replace("\"", "");
                        Output0Buffer.Deactivate = row["Deactivate"].ToString().Replace("\\", "");

                        numRows += 1;
                    }
                    WriteToDatabase(0, "GetTeachers - Row Count Page Num: " + pagenum, numRows.ToString());
                }
                return null;
            }
            return null;

        }
        catch (Exception ex)
        {
            WriteToDatabase(1, "GetTeachers", ex.Message);
            throw;
        }

    }


    private async Task<string> GetFileSize(string baseURL, string accessToken)
    {
        try
        {
            using (var client = new HttpClient())
            {
                string uri = baseURL + pLocation + "/count";
                client.BaseAddress = new Uri(uri);
                //MessageBox.Show(uri, "teachers uri");

                client.DefaultRequestHeaders.Accept.Clear();
                client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));
                client.DefaultRequestHeaders.Add("Authorization", "Bearer " + accessToken);

                var stringContent = new StringContent("", Encoding.UTF8, "application/json");

                //Get file size
                HttpResponseMessage response = await client.PostAsync(new Uri(uri), stringContent);

                response.EnsureSuccessStatusCode();
                string jsonString = await response.Content.ReadAsStringAsync();

                //string jsonString = response.Content.ToString();//.ReadAsStringAsync();
                //MessageBox.Show(jsonString, "jsonstring");

                //Deserialize our JSON
                var FileSizeObject = JsonHelper.JsonDeserialize<FileSize>(jsonString);

                // return the Access Token.
                var FileSize = FileSizeObject.count;
                //MessageBox.Show(FileSize, "File Size");
                WriteToDatabase(0, "RecordCount", FileSize);
                return FileSize;
            }
        }
        catch (Exception ex)
        {
            //MessageBox.Show(ex.Message);
            //MessageBox.Show(ex.StackTrace);
            WriteToDatabase(1, "GetFileSize", ex.Message);
            //return null;
            throw;
        }

    }

    /// <summary>
    /// This method uses the OAuth Client Credentials Flow to get an Access Token to provide
    /// Authorization to the APIs.
    /// </summary>
    /// <returns></returns>
    private static async Task<string> GetAccessToken(string baseURL, string sendToken, string clientId, string clientSecret)
    {
        try
        {
            using (var client = new HttpClient())
            {

                string uri = baseURL + tokenURI;
                client.BaseAddress = new Uri(uri);

                //MessageBox.Show(uri, "access token uri");

                client.DefaultRequestHeaders.Accept.Clear();
                client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/x-www-form-urlencoded"));
                client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Basic", sendToken);

                List<KeyValuePair<string, string>> postData = new List<KeyValuePair<string, string>>();
                postData.Add(new KeyValuePair<string, string>("grant_type", "client_credentials"));
                FormUrlEncodedContent content = new FormUrlEncodedContent(postData);

                // Post to the Server and parse the response.
                HttpResponseMessage response = await client.PostAsync(new Uri(uri), content);

                response.EnsureSuccessStatusCode();
                string jsonString = await response.Content.ReadAsStringAsync();

                //MessageBox.Show(jsonString, "jsonstring");

                //Deserialize our JSON
                 var accessTokenObject = JsonHelper.JsonDeserialize<AccessToken>(jsonString);

                // return the Access Token.
                var token = accessTokenObject.access_token;
                //MessageBox.Show(token, "access token");
                return token;
            }
        }
        catch (Exception ex)
        {
            //WriteToDatabase(1, "GetAccessToken", ex.Message);
            //MessageBox.Show(ex.Message);
            //MessageBox.Show(ex.StackTrace);
            //return null;
            throw ex;
        }
    }

    public string EncodeTo64(string toEncode)
    {
        byte[] toEncodeAsBytes = System.Text.ASCIIEncoding.ASCII.GetBytes(toEncode);
        string returnValue = System.Convert.ToBase64String(toEncodeAsBytes);
        return returnValue;

    }
    public class JsonHelper
    {
        /// <summary>
        /// JSON Serialization
        /// </summary>
        public static string JsonSerializer<T>(T t)
        {
            DataContractJsonSerializer ser = new DataContractJsonSerializer(typeof(T));
            MemoryStream ms = new MemoryStream();
            ser.WriteObject(ms, t);
            string jsonString = Encoding.UTF8.GetString(ms.ToArray());
            ms.Close();
            return jsonString;
        }
        /// <summary>
        /// JSON Deserialization
        /// </summary>
        public static T JsonDeserialize<T>(string jsonString)
        {
            DataContractJsonSerializer ser = new DataContractJsonSerializer(typeof(T));
            MemoryStream ms = new MemoryStream(Encoding.UTF8.GetBytes(jsonString));
            T obj = (T)ser.ReadObject(ms);
            return obj;
        }
    }

    public class Teacher
    {
        public string TeacherID { get; set; }
        public string CampusID { get; set; }
        public string FirstName { get; set; }
        public string LastName { get; set; }
        public string MiddleName { get; set; }
        public string Grade { get; set; }
        public string HomeRoom { get; set; }
        public string Department { get; set; }
        public string Phone { get; set; }
        public string Email { get; set; }
        public string Address { get; set; }
        public string Address2 { get; set; }
        public string City { get; set; }
        public string State { get; set; }
        public string Zip { get; set; }
        public string Deactivate { get; set; }
    }

    public class AccessToken
    {
        public string access_token { get; set; }
        public string token_type { get; set; }
        public string expires_in { get; set; }
    }

    public class FileSize
    {
        public string count { get; set; }

    }



    public DataTable JsonStringToDataTable(string jsonString)
    {
        try
        {
            DataTable dt = new DataTable();
            string[] jsonStringArray = Regex.Split(jsonString.Replace("[", "").Replace("]", ""), "},{");
            List<string> ColumnsName = new List<string>();
            foreach (string jSA in jsonStringArray)
            {
                string[] jsonStringData = Regex.Split(jSA.Replace("{", "").Replace("}", ""), ",");
                foreach (string ColumnsNameData in jsonStringData)
                {
                    try
                    {
                        int idx = ColumnsNameData.IndexOf(":");
                        string ColumnsNameString = ColumnsNameData.Substring(0, idx - 1).Replace("\"", "");
                        if (!ColumnsName.Contains(ColumnsNameString))
                        {
                            ColumnsName.Add(ColumnsNameString);
                        }
                    }
                    catch //(Exception ex)
                    {
                        WriteToDatabase(1, "JsonStringToDataTable: Columns",(string.Format("Error Parsing Column Name : {0}", ColumnsNameData)));
                    }
                }
                break;
            }
            foreach (string AddColumnName in ColumnsName)
            {
                dt.Columns.Add(AddColumnName);
            }
            foreach (string jSA in jsonStringArray)
            {
                string[] RowData = Regex.Split(jSA.Replace("{", "").Replace("}", ""), ",");
                DataRow nr = dt.NewRow();
                foreach (string rowData in RowData)
                {
                    try
                    {
                        int idx = rowData.IndexOf(":");
                        string RowColumns = rowData.Substring(0, idx - 1).Replace("\"", "").Replace("\\", "");
                        string RowDataString = rowData.Substring(idx + 1).Replace("\"", "").Replace("\\", "");
                        nr[RowColumns] = RowDataString;
                    }
                    catch //(Exception ex)
                    {
                        WriteToDatabase(1, "JsonStringToDataTable: For each row", (string.Format("Error Parsing Row  Name : {0}", rowData)));
                        continue;
                    }
                }
                dt.Rows.Add(nr);
            }
            return dt;
        }
        catch (Exception ex)
        {
            WriteToDatabase(1, "JsonStringToDataTable", ex.Message);
            return null;
        }
    }

    public string cleanJsonString(string jsonString)
    {

        jsonString = jsonString.Replace("{\"name\":\"schoolstaff\",\"record\":[", "");
        jsonString = jsonString.Replace("\"_name\":\"schoolstaff\",", "");
        jsonString = jsonString.Replace("],\"@extensions\":\"s_ssf_ncea_x\"}", "");
        jsonString = jsonString.Replace(",\"@extensions\":\"u_schoolstaffuserfields,s_ssf_ncea_x\"", "");

        return jsonString;
    }


    public void WriteToDatabase(int Error, string Area, string LogInfo)
    {
        try
        {
            //MessageBox.Show("WriteToDatabase");
            var ConnString = Connections.PSDB.ConnectionString;

            using (SqlConnection conn = new SqlConnection(Connections.PSDB.ConnectionString))
            {
                if (conn.State != ConnectionState.Open) conn.Open();
                //string insertText = "Insert into PSLog (ClientUID, FileType, Area, LogInfo) Values (@ClientUID, @FileType, @Area, @LogInfo ) ";
                SqlCommand cmd = new SqlCommand("spLogInfo", conn);
                cmd.CommandType = CommandType.StoredProcedure;                
                cmd.Parameters.Add("@ClientUID", SqlDbType.Int).Value = Variables.ClientID;
                cmd.Parameters.Add("@Error", SqlDbType.Int).Value = Error;
                cmd.Parameters.Add("@FileType", SqlDbType.VarChar,50).Value = processType;
                cmd.Parameters.Add("@Area", SqlDbType.VarChar, 100).Value = Area;
                cmd.Parameters.Add("@LogInfo", SqlDbType.VarChar, 1000).Value = LogInfo;
                cmd.ExecuteNonQuery();
            }
        }
        catch //(Exception ex)
        {
            throw;
        }
    }
}




]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String TeacherID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool TeacherID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CampusID
    {
        set
        {
            this[1] = value;
        }
    }
    public bool CampusID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String FirstName
    {
        set
        {
            this[2] = value;
        }
    }
    public bool FirstName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String LastName
    {
        set
        {
            this[3] = value;
        }
    }
    public bool LastName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String MiddleName
    {
        set
        {
            this[4] = value;
        }
    }
    public bool MiddleName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Grade
    {
        set
        {
            this[5] = value;
        }
    }
    public bool Grade_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String HomeRoom
    {
        set
        {
            this[6] = value;
        }
    }
    public bool HomeRoom_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Department
    {
        set
        {
            this[7] = value;
        }
    }
    public bool Department_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Phone
    {
        set
        {
            this[8] = value;
        }
    }
    public bool Phone_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Email
    {
        set
        {
            this[9] = value;
        }
    }
    public bool Email_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Address
    {
        set
        {
            this[10] = value;
        }
    }
    public bool Address_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Address2
    {
        set
        {
            this[11] = value;
        }
    }
    public bool Address2_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String City
    {
        set
        {
            this[12] = value;
        }
    }
    public bool City_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String State
    {
        set
        {
            this[13] = value;
        }
    }
    public bool State_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(13);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Zip
    {
        set
        {
            this[14] = value;
        }
    }
    public bool Zip_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(14);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Deactivate
    {
        set
        {
            this[15] = value;
        }
    }
    public bool Deactivate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(15);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 PSDB
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"PSDB").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public Int32 ClientID
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["ClientID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientIDPS
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientIDPS"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientSecret
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientSecret"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientServer
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientServer"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String PageSize
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["PageSize"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_9cc764db5dc84a06abd71b37420e3e86.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{FF2D54D4-CBFE-43F2-A697-E0F017938BC8}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_9cc764db5dc84a06abd71b37420e3e86</RootNamespace>
    <AssemblyName>SC_9cc764db5dc84a06abd71b37420e3e86</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Runtime.Serialization" />
    <Reference Include="System.Security" />
    <Reference Include="System.Web" />
    <Reference Include="System.Web.Extensions" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="packages.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[packages.config]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="Newtonsoft.Json" version="12.0.1" targetFramework="net45" />
</packages>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_9cc764db5dc84a06abd71b37420e3e86</msb:CodeName>
		<msb:DisplayName>SC_9cc764db5dc84a06abd71b37420e3e86</msb:DisplayName>
		<msb:ProjectId>{5D0ACA6D-CD14-4AB5-AEFB-D9A5739AEB1C}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_9cc764db5dc84a06abd71b37420e3e86.csproj"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="packages.config"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_9cc764db5dc84a06abd71b37420e3e86.Properties.Settings.get_Default():SC_9cc764db5dc84a06abd71b37420e3e86.Properties.Sett" +
    "ings")]

namespace SC_9cc764db5dc84a06abd71b37420e3e86.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_9cc764db5dc84a06abd71b37420e3e86")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_9cc764db5dc84a06abd71b37420e3e86")]
[assembly: AssemblyCopyright("Copyright @  2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_9cc764db5dc84a06abd71b37420e3e86.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_9cc764db5dc84a06abd71b37420e3e86.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_9cc764db5dc84a06abd71b37420e3e86.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_9cc764db5dc84a06abd71b37420e3e86.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_9cc764db5dc84a06abd71b37420e3e86.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_9cc764db5dc84a06abd71b37420e3e86.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[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
kAEAALIBAAAYAAAAAAAAAAAAAAAPAAAAuwEAAMoBAAABAAAAGAAAAQAAAAAHAAAAxAEAAMsBAAAZ
AAAAGAAAATYCfDwAAAQDKJMAAAoqAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwA
AACgGAAAI34AAAwZAAAIFgAAI1N0cmluZ3MAAAAAFC8AAJAIAAAjVVMApDcAABAAAAAjR1VJRAAA
ALQ3AABgBgAAI0Jsb2IAAAAAAAAAAgAAAVcXogsJDwAAAPoBMwAWAAABAAAAWwAAABAAAABBAAAA
ewAAAFQAAAAEAAAAmQAAAFkAAAAMAAAACAAAAD0AAABSAAAACAAAAA8AAAABAAAACgAAAAEAAAAI
AAAAAgAAAA4AAAAAAKYLAQAAAAAABgCWCVsRBgAqClsRBgCvCEgRDwDPEQAABgDcCFQOBgB5CVQO
BgBaCVQOBgARClQOBgC2CVQOBgDPCVQOBgAOCVQOBgApCfkKCgDqCdcGBgBMB0QNBgDzCFsRBgDn
AGQSBgAKAVsRDgBmCFsRBgDDE0QNEgD+BccCBgAxAfICVwAmEQAAEgCyFccCBgD8DkQNEgDRDi0U
BgAlDacCBgB3CFsRBgAmB0QNBgCnBlsRBgAjAVsRBgBCCUgRFgDIFL4PFgDeBb4PBgAXEa8SBgAI
BkQNFgBDFL4PFgCyFL4PCgD+D9cGGgDvD9cGCgBPD9cGCgCKFNcGHgBmAFwQBgCSCEgRBgAPEHsR
BgA7DxAOIgAYCHwLIgDDCHwLIgC+B/sNBgB3C2QSBgDwCmIVBgAkFUQNBgBeC0QNIgDIFZASEgBm
DscCEgDmDccCEgCyDscCEgDEDgYPEgAtCMcCEgB6BS0UEgBwBQYPEgAaB8cCEgCbDi0UEgC5EC0U
EgAMB8cCBgA6AUQNEgCtEAYPBgDfDkQNJgABAIQQJgAqAIQQJgBNAIQQHgB/AFwQHgAaAFwQpwCC
FQAAHgCQAFwQBgAUBkQNBgDaFVQOKgDiEBkPKgD9ECUOBgArDacCIgA1EMoTIgAwB8oTIgBvC0QN
FgDyEs4SFgDuAM4SFgCDCs4SFgDmEs4SFgDWFL4PEgCjB8cCFgBpCs4SBgBnAfICBgDZAPICAAAA
ACsCAAAAAAEAAQABABAA2w0AABAAAQABAAEAEADhDwAAmQAEAA4AAQAQAGwUAAClAAQAMgABABAA
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
FAC6BiEAHABKA1QCHAD5Dn8CHAAjFPEAHAC6BiEAyQIxEeQCmQJCDpgDdAAxEQYAfAAxEbMDdAAy
A/EAKQExEbsDJABzAFIGLgALAP0ELgATAAYFLgAbACUFLgAjAC4FLgArAFcFLgAzAFcFLgA7AFcF
LgBDAC4FLgBLAF0FLgBTAFcFLgBbAHQFQwBjAE0GgABrAL4FoABrAOQFwABrAAYG4ABrACgG4wCb
AE0GYQF7AE0GgQF7AE0GoQF7AE0GowF7AE0GwQF7AE0GwwF7AE0G4QF7AE0G4wF7AE0GAQJ7AE0G
AwJ7AE0GIQJ7AE0GQQJ7AE0GYQJ7AE0GgQJ7AE0GoQJ7AE0GwQJ7AE0G4QJ7AE0GAQN7AE0GIQN7
AE0GQQN7AE0GYQN7AE0GgQN7AE0GoQN7AE0GwQN7AE0G4QN7AE0G6QSjACUFCQWjACUFIAl7AE0G
QAl7AE0GYAl7AE0GgAl7AE0GoAl7AE0GwAl7AE0G4Al7AE0GAAp7AE0GIAp7AE0GQAp7AE0GYAp7
AE0GgAp7AE0GoAp7AE0GwAp7AE0G4Ap7AE0GAAt7AE0GIAt7AE0GQAt7AE0GYAt7AE0GgAt7AE0G
oAt7AE0GwAt7AE0G4At7AE0GAAx7AE0GIAx7AE0GQAx7AE0GYAx7AE0GgAx7AE0GoAx7AE0GwAx7
AE0G4Ax7AE0GAA17AE0GQA17AE0GYA17AE0GgA17AE0GoA17AE0GwA17AE0G4A17AE0GIA57AE0G
QA57AE0GoA6TAE0G4A6TAE0GIA+TAE0GYA+TAE0GLgBdAHIAhwCoAEIBkQHsARQChQJMA4EDAwAB
AAUAIQAGACIABwAnAAgAKQAKACoACwA6AAwAPQAAAE8C2gQAAOYL3gQAAGoC2gQAAPsL3gQAAIIG
2gQAAEoM3gQAAGcG2gQAADYM3gQAAEsG2gQAACAM3gQAAKsF2gQAAA8M3gQAAFwN2gQAAKgM3gQA
AGEU2gQAAN4M3gQAAAYH2gQAAF8M3gQAAKAL2gQAAJcM3gQAAHIT2gQAAMsM3gQAAIcB2gQAANIL
3gQAAAAW2gQAAPQM3gQAADcI2gQAAHAM3gQAALoP2gQAALwM3gQAAFsI2gQAAIEM3gQAADgC4gQA
AHcC6AQAALUC2gQAANkT2gQAANUQ2gQAAMMK2gQAAA8Q7AQAAJsH8gQAABEU+AQAAE8C2gQAAGoC
2gQAAIIG2gQAAGcG2gQAAEsG2gQAAKsF2gQAAFwN2gQAAGEU2gQAAAYH2gQAAKAL2gQAAHIT2gQA
AIcB2gQAAAAW2gQAADcI2gQAALoP2gQAAFsI2gQAAKsN2gQAAGQH2gQAANAN2gQAAPAU2gQBAA8A
AwABABAABQABABEABwABABIACQABABMACwABABQADQABABUADwABABYAEQABABcAEwABABgAFQAB
ABkAFwABABoAGQABABsAGwABABwAHQABAB0AHwABAB4AIQABAB8AIwABACAAJQABACEAJwABACIA
KQABACMAKwABACQALQABACUALwABACYAMQABACcAMwABACgANQABACkANwABACoAOQABACsAOwAB
ACwAPQABAC0APwABAC4AQQACADgAQwACADoARQACADsARwACADwASQACAD0ASwACAD4ATQACAEAA
TwACAEEAUQABAEIAUQACAEMAUwACAEkAVQABAEoAVQACAEsAVwABAEwAVwACAE0AWQABAE4AWQAC
AE8AWwABAFAAWwACAFEAXQABAFIAXQACAFMAXwABAFQAXwACAFUAYQABAFYAYQACAFcAYwABAFgA
YwACAFkAZQABAFoAZQACAFsAZwABAFwAZwACAF0AaQABAF4AaQACAF8AawABAGAAawACAGEAbQAB
AGIAbQACAGMAbwABAGQAbwACAGUAcQABAGYAcQACAGcAcwABAGgAcwACAGoAdQABAGsAdQACAGwA
dwABAG0AdwACAG4AeQABAG8AeQACAHEAewABAHIAewANAOgAIQANAOoAIwAOAOwAIQAOAO4AIwAP
APAAIQAPAPIAIwAQAPQAIQAQAPYAIwA4AGcAfADaAAYB8QE/Ak4CaQJvAtUCAwMLA58DqwMEgAAA
AQAAAAAAAAAAAAAAAACvAQAABAAAAAAAAAAAAAAA5gPpAgAAAAAMAAAAAAAAAAAAAADvAwEVAAAA
AAQAAAAAAAAAAAAAAOYDbwcAAAAABAAAAAAAAAAAAAAA5gPHAgAAAAAEAAAAAAAAAAAAAAD4A74P
AAAAAAwAAAAAAAAAAAAAAO8DLBUAAAAADAAAAAAAAAAAAAAA7wNnDwAAAAAEAAAAAAAAAAAAAADm
A0QNAAAAAAwAAAAAAAAAAAAAAO8Dig8AAAAABAAAAAAAAAAAAAAA5gMlDgAAAAAAAAAAAQAAAIwR
AAAJAAIACgACAAsAAgAMAAIADQACAA4AAgAPAAIAEAACAAAAAACNAMACAAAAAI8AwAIzAE8AOQBt
AD8AggA/AJEA0wBfAtMAdQIHARMDBwEzAyEBZgMhAXIDjgB8AyEBywMhAdcDjgDhAwAAAElEVFND
b21wb25lbnRNZXRhRGF0YTEwMABJRFRTVmFyaWFibGUxMDAASURUU1J1bnRpbWVDb25uZWN0aW9u
Q29sbGVjdGlvbjEwMABJRFRTUnVudGltZUNvbm5lY3Rpb24xMDAASURUU0Nvbm5lY3Rpb25NYW5h
Z2VyMTAwAElEVFNWYXJpYWJsZXMxMDAASURUU0V2YWx1YXRvckNvbnRleHQxMDAAPGJhc2VVUkw+
NV9fMQA8cGFnZVNpemU+NV9fMQA8Y2xpZW50PjVfXzEAPD51X18xAElFbnVtZXJhYmxlYDEAVGFz
a2AxAEh0dHBIZWFkZXJWYWx1ZUNvbGxlY3Rpb25gMQBBc3luY1Rhc2tNZXRob2RCdWlsZGVyYDEA
VGFza0F3YWl0ZXJgMQBMaXN0YDEAVG9JbnQzMgA8cGFnZW51bT41X18yADxhY2Nlc3NUb2tlbj41
X18yADw+dV9fMgBLZXlWYWx1ZVBhaXJgMgBnZXRfQWRkcmVzczIAc2V0X0FkZHJlc3MyADxpPjVf
XzMARW5jb2RlVG82NAA8cGFnZXM+NV9fNABTQ185Y2M3NjRkYjVkYzg0YTA2YWJkNzFiMzc0MjBl
M2U4NgA8UHJvY2Vzc1RlYWNoZXJzPmRfXzYAPEdldFRlYWNoZXJzPmRfXzcAZ2V0X1VURjgAPEdl
dEZpbGVTaXplPmRfXzgAPEdldEFjY2Vzc1Rva2VuPmRfXzkAPE1vZHVsZT4AZ2V0X1BTREIAZ2V0
X1RlYWNoZXJJRABzZXRfVGVhY2hlcklEAGdldF9DYW1wdXNJRABzZXRfQ2FtcHVzSUQAZ2V0X0Ns
aWVudElEAEdldE91dHB1dElEAGdldF9BU0NJSQB0b2tlblVSSQBiYXNlVVJMAFN5c3RlbS5JTwBn
ZXRfQ2xpZW50SURQUwBUAEFyZWEAU3lzdGVtLkRhdGEAZ2V0X0NvbXBvbmVudE1ldGFEYXRhAG1z
Y29ybGliAFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljAFJlYWRBc1N0cmluZ0FzeW5jAFBvc3RB
c3luYwBjbGllbnRJZABBZGQATWFya091dHB1dHNGaW5pc2hlZABBd2FpdFVuc2FmZU9uQ29tcGxl
dGVkAGdldF9Jc0NvbXBsZXRlZAA8QWRkcmVzczI+a19fQmFja2luZ0ZpZWxkADxUZWFjaGVySUQ+
a19fQmFja2luZ0ZpZWxkADxDYW1wdXNJRD5rX19CYWNraW5nRmllbGQAPEdyYWRlPmtfX0JhY2tp
bmdGaWVsZAA8TWlkZGxlTmFtZT5rX19CYWNraW5nRmllbGQAPExhc3ROYW1lPmtfX0JhY2tpbmdG
aWVsZAA8Rmlyc3ROYW1lPmtfX0JhY2tpbmdGaWVsZAA8UGhvbmU+a19fQmFja2luZ0ZpZWxkADx0
b2tlbl90eXBlPmtfX0JhY2tpbmdGaWVsZAA8U3RhdGU+a19fQmFja2luZ0ZpZWxkADxEZWFjdGl2
YXRlPmtfX0JhY2tpbmdGaWVsZAA8RW1haWw+a19fQmFja2luZ0ZpZWxkADxIb21lUm9vbT5rX19C
YWNraW5nRmllbGQAPGFjY2Vzc190b2tlbj5rX19CYWNraW5nRmllbGQAPGV4cGlyZXNfaW4+a19f
QmFja2luZ0ZpZWxkADxaaXA+a19fQmFja2luZ0ZpZWxkADxBZGRyZXNzPmtfX0JhY2tpbmdGaWVs
ZAA8RGVwYXJ0bWVudD5rX19CYWNraW5nRmllbGQAPGNvdW50PmtfX0JhY2tpbmdGaWVsZAA8Q2l0
eT5rX19CYWNraW5nRmllbGQARGJDb21tYW5kAFNxbENvbW1hbmQAUmVwbGFjZQBkZWZhdWx0SW5z
dGFuY2UAZ2V0X0dyYWRlAHNldF9HcmFkZQBFbnN1cmVTdWNjZXNzU3RhdHVzQ29kZQB0b0VuY29k
ZQBnZXRfTWVzc2FnZQBIdHRwUmVzcG9uc2VNZXNzYWdlAEpzb25TdHJpbmdUb0RhdGFUYWJsZQBJ
RGlzcG9zYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBnZXRfTWlkZGxl
TmFtZQBzZXRfTWlkZGxlTmFtZQBnZXRfTGFzdE5hbWUAc2V0X0xhc3ROYW1lAGdldF9GaXJzdE5h
bWUAc2V0X0ZpcnN0TmFtZQBHZXRSdW50aW1lQ29ubmVjdGlvbkJ5TmFtZQBJQXN5bmNTdGF0ZU1h
Y2hpbmUAU2V0U3RhdGVNYWNoaW5lAHN0YXRlTWFjaGluZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0
cy5QaXBlbGluZQBnZXRfUGhvbmUAc2V0X1Bob25lAFNxbERiVHlwZQBzZXRfQ29tbWFuZFR5cGUA
VmFsdWVUeXBlAFNlY3VyaXR5UHJvdG9jb2xUeXBlAHByb2Nlc3NUeXBlAGdldF90b2tlbl90eXBl
AHNldF90b2tlbl90eXBlAFN5c3RlbS5Db3JlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291
cmNlQ3VsdHVyZQBJbnRlcm5hbERhdGFDb2xsZWN0aW9uQmFzZQBBcHBsaWNhdGlvblNldHRpbmdz
QmFzZQBXcml0ZVRvRGF0YWJhc2UAQ2xvc2UARGlzcG9zZQBUcnlQYXJzZQBDcmVhdGUAZ2V0X1N0
YXRlAHNldF9TdGF0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb25uZWN0aW9uU3RhdGUAPD4xX19z
dGF0ZQBnZXRfRGVhY3RpdmF0ZQBzZXRfRGVhY3RpdmF0ZQBEeW5hbWljQXR0cmlidXRlAENvbXBp
bGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdn
YWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJp
YnV0ZQBBc3luY1N0YXRlTWFjaGluZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0
ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUARGVidWdnZXJIaWRkZW5BdHRyaWJ1dGUAQXNzZW1i
bHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29t
cGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNz
ZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRy
aWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmli
dXRlAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAc2V0X1ZhbHVlAEF1dGhlbnRpY2F0aW9uSGVhZGVy
VmFsdWUATWVkaWFUeXBlV2l0aFF1YWxpdHlIZWFkZXJWYWx1ZQB2YWx1ZQBzZXRfRXhwZWN0MTAw
Q29udGludWUAZ2V0X1BhZ2VTaXplAEdldEZpbGVTaXplAEpzb25EZXNlcmlhbGl6ZQBJbmRleE9m
AEVuY29kaW5nAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVG9CYXNlNjRTdHJpbmcAZ2V0X0Nv
bm5lY3Rpb25TdHJpbmcAY2xlYW5Kc29uU3RyaW5nAGpzb25TdHJpbmcAVG9TdHJpbmcAR2V0U3Ry
aW5nAFN1YnN0cmluZwBVcmkAZ2V0X1Rhc2sAU3lzdGVtLkNvbXBvbmVudE1vZGVsAGdldF9FbWFp
bABzZXRfRW1haWwAU0NfOWNjNzY0ZGI1ZGM4NGEwNmFiZDcxYjM3NDIwZTNlODYuZGxsAHNldF9B
ZGRyZXNzMl9Jc051bGwAc2V0X1RlYWNoZXJJRF9Jc051bGwAc2V0X0NhbXB1c0lEX0lzTnVsbABz
ZXRfR3JhZGVfSXNOdWxsAHNldF9NaWRkbGVOYW1lX0lzTnVsbABzZXRfTGFzdE5hbWVfSXNOdWxs
AHNldF9GaXJzdE5hbWVfSXNOdWxsAHNldF9QaG9uZV9Jc051bGwAc2V0X1N0YXRlX0lzTnVsbABz
ZXRfRGVhY3RpdmF0ZV9Jc051bGwAc2V0X0VtYWlsX0lzTnVsbABzZXRfSG9tZVJvb21fSXNOdWxs
AHNldF9aaXBfSXNOdWxsAHNldF9BZGRyZXNzX0lzTnVsbABzZXRfRGVwYXJ0bWVudF9Jc051bGwA
c2V0X0NpdHlfSXNOdWxsAFNldE51bGwAc2V0X1NlY3VyaXR5UHJvdG9jb2wAYmFzZVVybABNZW1v
cnlTdHJlYW0AZ2V0X0l0ZW0Ac2V0X0l0ZW0AU3lzdGVtAGdldF9Ib21lUm9vbQBzZXRfSG9tZVJv
b20AcmVzb3VyY2VNYW4Ac2VuZFRva2VuAEdldEFjY2Vzc1Rva2VuAGFjY2Vzc1Rva2VuAGdldF9h
Y2Nlc3NfdG9rZW4Ac2V0X2FjY2Vzc190b2tlbgBPcGVuAGdldF9leHBpcmVzX2luAHNldF9leHBp
cmVzX2luAFNjcmlwdE1haW4ARGF0YUNvbHVtbgBwTG9jYXRpb24AU3lzdGVtLkNvbmZpZ3VyYXRp
b24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJ1bnRpbWUuU2VyaWFsaXphdGlvbgBzZXRf
QXV0aG9yaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBEYXRhQ29sdW1uQ29sbGVjdGlvbgBnZXRf
UnVudGltZUNvbm5lY3Rpb25Db2xsZWN0aW9uAFNxbFBhcmFtZXRlckNvbGxlY3Rpb24ARGF0YVJv
d0NvbGxlY3Rpb24ARGJDb25uZWN0aW9uAFNxbENvbm5lY3Rpb24ASW52YWxpZE9wZXJhdGlvbkV4
Y2VwdGlvbgBTZXRFeGNlcHRpb24AU3lzdGVtLkRhdGEuQ29tbW9uAFN5c3RlbS5SdW50aW1lLlNl
cmlhbGl6YXRpb24uSnNvbgBDdWx0dXJlSW5mbwBMb2dJbmZvAE91dHB1dE5hbWVNYXAAT3V0cHV0
TWFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUnVudGltZVdyYXAATWljcm9zb2Z0LlNxbFNlcnZl
ci5EVFNQaXBlbGluZVdyYXAAZ2V0X1ppcABzZXRfWmlwAFN5c3RlbS5OZXQuSHR0cABDbGVhcgA8
PnRfX2J1aWxkZXIAT3V0cHV0MEJ1ZmZlcgBQaXBlbGluZUJ1ZmZlcgBTY3JpcHRCdWZmZXIAZ2V0
X1Jlc291cmNlTWFuYWdlcgBnZXRfQ29ubmVjdGlvbk1hbmFnZXIAU2VydmljZVBvaW50TWFuYWdl
cgBUZWFjaGVyAEpzb25IZWxwZXIATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZS5XcmFw
cGVyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lLldyYXBwZXIARGJQYXJhbWV0ZXIA
U3FsUGFyYW1ldGVyAEdldEF3YWl0ZXIAZ2V0X0NsaWVudFNlcnZlcgBEYXRhQ29udHJhY3RKc29u
U2VyaWFsaXplcgBYbWxPYmplY3RTZXJpYWxpemVyAEVycm9yAElFbnVtZXJhdG9yAEdldEVudW1l
cmF0b3IALmN0b3IALmNjdG9yAE91dHB1dElEcwBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1
bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDXzljYzc2NGRiNWRjODRh
MDZhYmQ3MWIzNzQyMGUzZTg2LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dp
bmdNb2RlcwBTQ185Y2M3NjRkYjVkYzg0YTA2YWJkNzFiMzc0MjBlM2U4Ni5Qcm9wZXJ0aWVzAGdl
dF9SZWFkT25seVZhcmlhYmxlcwBHZXRCeXRlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVt
bkluZGV4ZXMAU2V0dGluZ3MAPD40X190aGlzAFN5c3RlbS5UaHJlYWRpbmcuVGFza3MAQ29udGFp
bnMAZ2V0X0NvbHVtbnMAU3lzdGVtLlRleHQuUmVndWxhckV4cHJlc3Npb25zAFN5c3RlbS5Db2xs
ZWN0aW9ucwBDb25uZWN0aW9ucwBTeXN0ZW0uTmV0Lkh0dHAuSGVhZGVycwBIdHRwSGVhZGVycwBI
dHRwUmVxdWVzdEhlYWRlcnMAZ2V0X0RlZmF1bHRSZXF1ZXN0SGVhZGVycwBCdWZmZXJzAFByb2Nl
c3NUZWFjaGVycwBHZXRUZWFjaGVycwBnZXRfUGFyYW1ldGVycwBnZXRfQWRkcmVzcwBzZXRfQWRk
cmVzcwBzZXRfQmFzZUFkZHJlc3MARmluaXNoT3V0cHV0cwBnZXRfUm93cwBDcmVhdGVOZXdPdXRw
dXRSb3dzAENvbmNhdABGb3JtYXQAUmVhZE9iamVjdABXcml0ZU9iamVjdABTeXN0ZW0uTmV0AGdl
dF9DbGllbnRTZWNyZXQAY2xpZW50U2VjcmV0AFNldEVuZE9mUm93c2V0AFdhaXQAU3BsaXQAZ2V0
X0RlZmF1bHQAR2V0UmVzdWx0AFNldFJlc3VsdABTeXN0ZW0uRGF0YS5TcWxDbGllbnQASHR0cENs
aWVudABnZXRfRGVwYXJ0bWVudABzZXRfRGVwYXJ0bWVudABVc2VyQ29tcG9uZW50AFBhcmVudENv
bXBvbmVudABTY3JpcHRDb21wb25lbnQAZ2V0X0N1cnJlbnQAZ2V0X0NvbnRlbnQARm9ybVVybEVu
Y29kZWRDb250ZW50AFN0cmluZ0NvbnRlbnQASHR0cENvbnRlbnQAZ2V0X2NvdW50AHNldF9jb3Vu
dABnZXRfQWNjZXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQAU3RhcnQAQ29udmVydABN
aWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABQcmltZU91dHB1dABNb3ZlTmV4dABTeXN0
ZW0uVGV4dABHZXRWYWx1ZVdpdGhDb250ZXh0AFNjcmlwdENvbXBvbmVudEV2YWxDb250ZXh0AGdl
dF9FdmFsdWF0b3JDb250ZXh0AERhdGFSb3cAQWRkUm93AE5ld1JvdwBSZWdleABUb0FycmF5AGdl
dF9Bc3NlbWJseQBFeGVjdXRlTm9uUXVlcnkAZ2V0X0NpdHkAc2V0X0NpdHkAAAAAAANbAAABAANd
AAAHfQAsAHsAAAN7AAADfQAAAywAAAM6AAADIgAAPUoAcwBvAG4AUwB0AHIAaQBuAGcAVABvAEQA
YQB0AGEAVABhAGIAbABlADoAIABDAG8AbAB1AG0AbgBzAAA/RQByAHIAbwByACAAUABhAHIAcwBp
AG4AZwAgAEMAbwBsAHUAbQBuACAATgBhAG0AZQAgADoAIAB7ADAAfQAAA1wAAEdKAHMAbwBuAFMA
dAByAGkAbgBnAFQAbwBEAGEAdABhAFQAYQBiAGwAZQA6ACAARgBvAHIAIABlAGEAYwBoACAAcgBv
AHcAADtFAHIAcgBvAHIAIABQAGEAcgBzAGkAbgBnACAAUgBvAHcAIAAgAE4AYQBtAGUAIAA6ACAA
ewAwAH0AACtKAHMAbwBuAFMAdAByAGkAbgBnAFQAbwBEAGEAdABhAFQAYQBiAGwAZQAAQXsAIgBu
AGEAbQBlACIAOgAiAHMAYwBoAG8AbwBsAHMAdABhAGYAZgAiACwAIgByAGUAYwBvAHIAZAAiADoA
WwAALSIAXwBuAGEAbQBlACIAOgAiAHMAYwBoAG8AbwBsAHMAdABhAGYAZgAiACwAAD9dACwAIgBA
AGUAeAB0AGUAbgBzAGkAbwBuAHMAIgA6ACIAcwBfAHMAcwBmAF8AbgBjAGUAYQBfAHgAIgB9AABr
LAAiAEAAZQB4AHQAZQBuAHMAaQBvAG4AcwAiADoAIgB1AF8AcwBjAGgAbwBvAGwAcwB0AGEAZgBm
AHUAcwBlAHIAZgBpAGUAbABkAHMALABzAF8AcwBzAGYAXwBuAGMAZQBhAF8AeAAiAAATcwBwAEwA
bwBnAEkAbgBmAG8AABVAAEMAbABpAGUAbgB0AFUASQBEAAANQABFAHIAcgBvAHIAABNAAEYAaQBs
AGUAVAB5AHAAZQAAC0AAQQByAGUAYQAAEUAATABvAGcASQBuAGYAbwAAXS8AdwBzAC8AcwBjAGgA
ZQBtAGEALwBxAHUAZQByAHkALwBjAG8AbQAuAGgAYQB5AGUAcwBzAG8AZgB0AC4AVABJAFAAVwBl
AGIALgB0AGUAYQBjAGgAZQByAHMAACkvAG8AYQB1AHQAaAAvAGEAYwBjAGUAcwBzAF8AdABvAGsA
ZQBuAC8AAA9UAGUAYQBjAGgAZQByAACAm0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAA
YwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBn
AG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQA
ZQBhAGQALgAAEU8AdQB0AHAAdQB0ACAAMAAACVAAUwBEAEIAABFDAGwAaQBlAG4AdABJAEQAABVD
AGwAaQBlAG4AdABJAEQAUABTAAAZQwBsAGkAZQBuAHQAUwBlAGMAcgBlAHQAABlDAGwAaQBlAG4A
dABTAGUAcgB2AGUAcgAAEVAAYQBnAGUAUwBpAHoAZQAAcVMAQwBfADkAYwBjADcANgA0AGQAYgA1
AGQAYwA4ADQAYQAwADYAYQBiAGQANwAxAGIAMwA3ADQAMgAwAGUAMwBlADgANgAuAFAAcgBvAHAA
ZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAI1QARQBBAEMASABFAFIALQBzAGUAbgBk
AFQAbwBrAGUAbgABGUEAYwBjAGUAcwBzACAAVABvAGsAZQBuAAA5RwBlAHQAQQBjAGMAZQBzAHMA
VABvAGsAZQBuACAAcgBlAHQAdQByAG4AZQBkACAAbgB1AGwAbAAAE0YAaQBsAGUAIABTAGkAegBl
AAAzRwBlAHQARgBpAGwAZQBTAGkAegBlACAAcgBlAHQAdQByAG4AZQBkACAAbgB1AGwAbAAAH1AA
cgBvAGMAZQBzAHMAVABlAGEAYwBoAGUAcgBzAAAVPwBwAGEAZwBlAHMAaQB6AGUAPQAADSYAcABh
AGcAZQA9AAAhYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AagBzAG8AbgAAG0EAdQB0AGgAbwByAGkA
egBhAHQAaQBvAG4AAA9CAGUAYQByAGUAcgAgAAATVABlAGEAYwBoAGUAcgBJAEQAABFDAGEAbQBw
AHUAcwBJAEQAABNGAGkAcgBzAHQATgBhAG0AZQAAEUwAYQBzAHQATgBhAG0AZQAAFU0AaQBkAGQA
bABlAE4AYQBtAGUAAAtHAHIAYQBkAGUAABFIAG8AbQBlAFIAbwBvAG0AABVEAGUAcABhAHIAdABt
AGUAbgB0AAALUABoAG8AbgBlAAALRQBtAGEAaQBsAAAPQQBkAGQAcgBlAHMAcwAAEUEAZABkAHIA
ZQBzAHMAMgAACUMAaQB0AHkAAAtTAHQAYQB0AGUAAAd6AGkAcAAAFUQAZQBhAGMAdABpAHYAYQB0
AGUAAEVHAGUAdABUAGUAYQBjAGgAZQByAHMAIAAtACAAUgBvAHcAIABDAG8AdQBuAHQAIABQAGEA
ZwBlACAATgB1AG0AOgAgAAEXRwBlAHQAVABlAGEAYwBoAGUAcgBzAAANLwBjAG8AdQBuAHQAABdS
AGUAYwBvAHIAZABDAG8AdQBuAHQAABdHAGUAdABGAGkAbABlAFMAaQB6AGUAAENhAHAAcABsAGkA
YwBhAHQAaQBvAG4ALwB4AC0AdwB3AHcALQBmAG8AcgBtAC0AdQByAGwAZQBuAGMAbwBkAGUAZAAB
C0IAYQBzAGkAYwAAFWcAcgBhAG4AdABfAHQAeQBwAGUAACVjAGwAaQBlAG4AdABfAGMAcgBlAGQA
ZQBuAHQAaQBhAGwAcwAAAACGI3Y8cUIcT7jJLlmz0E9AAAQgAQEIAyAAAQUgAQEREQQgAQEOBSAB
ARI5BSABAR0CBSABARJ1BiABARGAuQkHAhE0FRFFAQgFFRFFAQgIAAAVEUUBEwAHMAEBARAeAAQK
ARE0CCAAFRJBARMACQcCETgVEUUBHAUVEUUBHAQKARE4CQcCETwVEUUBDgUVEUUBDgQKARE8CQcC
EUAVEUUBDgQKARFABQAAEoDJBSABHQUOBQABDh0FJAcTElEdDhUSVQEOHQ4IHQ4IDggOFRFZAQ4O
El0OCA4OElESYQUgAg4ODgYAAh0ODg4FFRJVAQ4EIAEIDgUgAg4ICAUgAQITAAUgAQETAAUAAg4O
HAggABURWQETAAUVEVkBDgQgABMABSAAEoDZBiABEoDdDgMgAAIEIAASXQQgAQ4IBSACAQ4cBSAA
EoDhBSABARJdAyAADgQHARJlBSAAEYDpBiACAQ4SZQYgAQERgPUFIAASgPkJIAISgP0OEYEBBCAB
ARwKIAMSgP0OEYEBCAMgAAgLIAMBEoCdHQgSgKEFIAIBCBwDBwEIBwACCBKAoQ4FIAEdCAgFIAAS
gREFIAASgRUGIAESgRkOBSAAEoCpBSAAEoEdBiABEoEhHAUAABKBJQYgARwSgSkHAAESORGBLQUg
ABKBMQcgAgEOEoExBAcBEmkCHgAHIAIBEoE9HAQgAB0FBSABDh0FBSABAR0FBiABHBKBPRcHCwgI
Dg4ODg4VEXkBDhUReQEcEmESYQQAAQECBgABARGBRQYAAw4ODg4FFRJBAQ4IIAAVEXkBEwAFFRF5
AQ4KMAICARAeABAeAQkKAhUReQEOETQFFRJBARwFFRF5ARwJCgIVEXkBHBE0BSABARJhJQcQCBwI
CA4SgIEOCBUReQESgIUVEXkBDhKAiRJdEoCNCBJhEmEEAAEIDgYAAgIOEAgFAAEOHQ4GIAEBEoFJ
BSAAEoFNCiAAFRKBUQESgVUIFRKBUQESgVUFAAIODg4FIAIBDg4IIAMBDhKAyQ4PIAIVEkEBEoCF
EoFJEoFdBxUSQQESgIUHFRF5ARKAhQsKAhUReQESgIUROAUgABKAhQUgABKBXQcgABUSQQEOCQoC
FRF5AQ4ROAUgABKAiQMgABwEIAEcDhkHCQgODhKAgQ4VEXkBEoCFFRF5AQ4SYRJhCwoCFRF5ARKA
hRE8CQoCFRF5AQ4RPAQKARIwFgcHCA4OEoCVFRF5ARKAhRUReQEOEmEGIAEBEoFlCxUSVQEVEYFp
Ag4OBxURgWkCDg4HIAIBEwATAQ8gAQEVEoFtARURgWkCDg4LCgIVEXkBEoCFEUAJCgIVEXkBDhFA
BAoBEiwIt3pcVhk04IkIiYRdzYCAzJEIsD9ffxHVCjoCBg4DBhIUAwYSGAMGEgwEBhKApQQGEoCx
BAYSgLUDBhIgAgYIBgYVEUUBCAMGEggGBhUReQEOBgYVEXkBHAYGFRFFARwIBhUReQESgIUGBhUR
RQEOBAYSgJEHIAAVEkEBCAogAxUSQQEcDg4OCSACFRJBAQ4ODgsABBUSQQEODg4ODgQgAQ4OBSAB
ElEOBiADAQgODgMAAAEEIAEBAg0gBAEIHQgdEoCdEoChBiABARKApQUAABKAsQUAABKAtQYAAQES
gLUEAAASIAYQAQEOHgAGEAEBHgAOAygADgMoAAIFKAASgKkDKAAIBQgAEoCxBQgAEoC1BAgAEiAI
AQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NDXzlj
Yzc2NGRiNWRjODRhMDZhYmQ3MWIzNzQyMGUzZTg2AAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIw
MTgAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNQEAVA4URnJhbWV3b3JrRGlzcGxheU5h
bWUSLk5FVCBGcmFtZXdvcmsgNC41JQEAIFNjcmlwdE1haW4rPFByb2Nlc3NUZWFjaGVycz5kX182
AAAhAQAcU2NyaXB0TWFpbis8R2V0VGVhY2hlcnM+ZF9fNwAAIQEAHFNjcmlwdE1haW4rPEdldEZp
bGVTaXplPmRfXzgAACQBAB9TY3JpcHRNYWluKzxHZXRBY2Nlc3NUb2tlbj5kX185AAAEAQAAAAoB
AAIAAAAAAQAAAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVh
ZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tl
eVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VT
ZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAMR5AAAAAAAAAAAAAN55AAAAIAAAAAAAAAAAAAAAAAAA
AAAAAAAAAADQeQAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAA
AIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYgAAA7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBF
AFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAA
BAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAA
AFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUA
SQBuAGYAbwAAACgDAAABADAAMAAwADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAA
AAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQA
ZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8AOQBjAGMANwA2ADQAZABiADUAZABjADgANABh
ADAANgBhAGIAZAA3ADEAYgAzADcANAAyADAAZQAzAGUAOAA2AAAAMAAIAAEARgBpAGwAZQBWAGUA
cgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAwAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBt
AGUAAABTAEMAXwA5AGMAYwA3ADYANABkAGIANQBkAGMAOAA0AGEAMAA2AGEAYgBkADcAMQBiADMA
NwA0ADIAMABlADMAZQA4ADYALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBn
AGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADEAOAAAACoAAQABAEwAZQBnAGEA
bABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBs
AGUAbgBhAG0AZQAAAFMAQwBfADkAYwBjADcANgA0AGQAYgA1AGQAYwA4ADQAYQAwADYAYQBiAGQA
NwAxAGIAMwA3ADQAMgAwAGUAMwBlADgANgAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABO
AGEAbQBlAAAAAABTAEMAXwA5AGMAYwA3ADYANABkAGIANQBkAGMAOAA0AGEAMAA2AGEAYgBkADcA
MQBiADMANwA0ADIAMABlADMAZQA4ADYAAAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBv
AG4AAAAxAC4AMAAuADAALgAwAAAAOAAIAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8A
bgAAADEALgAwAC4AMAAuADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAcAAADAAAAPA5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAA==]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_9cc764db5dc84a06abd71b37420e3e86</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::ClientID,User::ClientIDPS,User::ClientSecret,User::ClientServer,User::PageSize</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">CE</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">338550b5789e62119da99eaa83870fbeb037e669</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">c70361c448dc120b23e5510d6ca6f6ae</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Loop thru Clients\Get Teachers\Script Component.Connections[PSDB]"
                      connectionManagerID="Package.ConnectionManagers[ADO.NET_PowerSchoolAPIPlugIn]"
                      connectionManagerRefId="Package.ConnectionManagers[ADO.NET_PowerSchoolAPIPlugIn]"
                      description="Process Log"
                      name="PSDB" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Loop thru Clients\Get Teachers\Script Component.Outputs[Output 0]"
                      hasSideEffects="true"
                      name="Output 0">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop thru Clients\Get Teachers\Script Component.Outputs[Output 0].Columns[TeacherID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Get Teachers\Script Component.Outputs[Output 0].Columns[TeacherID]"
                          name="TeacherID" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Get Teachers\Script Component.Outputs[Output 0].Columns[CampusID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Get Teachers\Script Component.Outputs[Output 0].Columns[CampusID]"
                          name="CampusID" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Get Teachers\Script Component.Outputs[Output 0].Columns[FirstName]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Get Teachers\Script Component.Outputs[Output 0].Columns[FirstName]"
                          name="FirstName" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Get Teachers\Script Component.Outputs[Output 0].Columns[LastName]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Get Teachers\Script Component.Outputs[Output 0].Columns[LastName]"
                          name="LastName" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Get Teachers\Script Component.Outputs[Output 0].Columns[MiddleName]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Get Teachers\Script Component.Outputs[Output 0].Columns[MiddleName]"
                          name="MiddleName" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Get Teachers\Script Component.Outputs[Output 0].Columns[Grade]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Get Teachers\Script Component.Outputs[Output 0].Columns[Grade]"
                          name="Grade" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Get Teachers\Script Component.Outputs[Output 0].Columns[HomeRoom]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Get Teachers\Script Component.Outputs[Output 0].Columns[HomeRoom]"
                          name="HomeRoom" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Get Teachers\Script Component.Outputs[Output 0].Columns[Department]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          lineageId="Package\Loop thru Clients\Get Teachers\Script Component.Outputs[Output 0].Columns[Department]"
                          name="Department" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Get Teachers\Script Component.Outputs[Output 0].Columns[Phone]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Get Teachers\Script Component.Outputs[Output 0].Columns[Phone]"
                          name="Phone" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Get Teachers\Script Component.Outputs[Output 0].Columns[Email]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          lineageId="Package\Loop thru Clients\Get Teachers\Script Component.Outputs[Output 0].Columns[Email]"
                          name="Email" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Get Teachers\Script Component.Outputs[Output 0].Columns[Address]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Loop thru Clients\Get Teachers\Script Component.Outputs[Output 0].Columns[Address]"
                          name="Address" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Get Teachers\Script Component.Outputs[Output 0].Columns[Address2]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Loop thru Clients\Get Teachers\Script Component.Outputs[Output 0].Columns[Address2]"
                          name="Address2" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Get Teachers\Script Component.Outputs[Output 0].Columns[City]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Get Teachers\Script Component.Outputs[Output 0].Columns[City]"
                          name="City" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Get Teachers\Script Component.Outputs[Output 0].Columns[State]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Get Teachers\Script Component.Outputs[Output 0].Columns[State]"
                          name="State" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Get Teachers\Script Component.Outputs[Output 0].Columns[Zip]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Get Teachers\Script Component.Outputs[Output 0].Columns[Zip]"
                          name="Zip" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Get Teachers\Script Component.Outputs[Output 0].Columns[Deactivate]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Get Teachers\Script Component.Outputs[Output 0].Columns[Deactivate]"
                          name="Deactivate" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Loop thru Clients\Get Teachers.Paths[Derived Column Output]"
                  endId="Package\Loop thru Clients\Get Teachers\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Loop thru Clients\Get Teachers\Derived Column.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Loop thru Clients\Get Teachers.Paths[Output 0]"
                  endId="Package\Loop thru Clients\Get Teachers\Derived Column.Inputs[Derived Column Input]"
                  name="Output 0"
                  startId="Package\Loop thru Clients\Get Teachers\Script Component.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Loop thru Clients\Master Course"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:Disabled="True"
          DTS:DTSID="{b54bb2ba-f1b4-4753-a27d-3d20c5dbc243}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Master Course"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">@[User::ProcessMasterCourse]==0</DTS:PropertyExpression>
          <DTS:ObjectData>
            <pipeline
              defaultBufferMaxRows="50000"
              version="1">
              <components>
                <component
                  refId="Package\Loop thru Clients\Master Course\Derived Column"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Loop thru Clients\Master Course\Derived Column.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Loop thru Clients\Master Course\Derived Column.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Loop thru Clients\Master Course\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop thru Clients\Master Course\Derived Column.Outputs[Derived Column Output].Columns[ClientUID]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Loop thru Clients\Master Course\Derived Column.Outputs[Derived Column Output].Columns[ClientUID]"
                          name="ClientUID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::ClientID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::ClientID]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Loop thru Clients\Master Course\Derived Column.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Loop thru Clients\Master Course\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop thru Clients\Master Course\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Master Course\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Master Course\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Master Course\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Loop thru Clients\Master Course\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[PSMasterCourse]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Loop thru Clients\Master Course\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[PowerSchoolAPIPlugIn]"
                      connectionManagerRefId="Package.ConnectionManagers[PowerSchoolAPIPlugIn]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Loop thru Clients\Master Course\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Loop thru Clients\Master Course\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ClientUID]"
                          cachedDataType="i4"
                          cachedName="ClientUID"
                          externalMetadataColumnId="Package\Loop thru Clients\Master Course\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientUID]"
                          lineageId="Package\Loop thru Clients\Master Course\Derived Column.Outputs[Derived Column Output].Columns[ClientUID]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Master Course\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[CourseID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="CourseID"
                          externalMetadataColumnId="Package\Loop thru Clients\Master Course\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CourseID]"
                          lineageId="Package\Loop thru Clients\Master Course\Script Component.Outputs[Output 0].Columns[CourseID]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Master Course\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[CourseName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="CourseName"
                          externalMetadataColumnId="Package\Loop thru Clients\Master Course\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CourseName]"
                          lineageId="Package\Loop thru Clients\Master Course\Script Component.Outputs[Output 0].Columns[CourseName]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Master Course\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CourseID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="CourseID" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Master Course\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CourseName]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="CourseName" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Master Course\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientUID]"
                          dataType="i4"
                          name="ClientUID" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Master Course\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[MasterCoursePSUID]"
                          dataType="i4"
                          name="MasterCoursePSUID" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Loop thru Clients\Master Course\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Loop thru Clients\Master Course\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop thru Clients\Master Course\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Master Course\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Master Course\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Master Course\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Loop thru Clients\Master Course\Script Component"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;9"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Script Component"
                  version="9">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="33">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 PSDB
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"PSDB").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public Int32 ClientID
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["ClientID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientIDPS
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientIDPS"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientSecret
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientSecret"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientServer
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientServer"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String PageSize
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["PageSize"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces

using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.IO;
using System.Net;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Runtime.Serialization;
using System.Runtime.Serialization.Json;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading.Tasks;
using System.Web.Script.Serialization;
using System.Windows.Forms;



#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    static string pLocation = "/ws/schema/query/com.hayessoft.TIPWeb.courses";
    static string tokenURI = "/oauth/access_token/";
    static string processType = "Teacher";

    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();

    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */
        ProcessMasterCourse().Wait();
    }


    public async Task<int> ProcessMasterCourse()
    {
        try
        {

            // The server base address
            string baseURL = Variables.ClientServer;

            //MessageBox.Show(uri);

            ServicePointManager.Expect100Continue = true;
            ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;


            /// The client information used to get the OAuth Access Token from the server.
            string clientId = Variables.ClientIDPS;
            string clientSecret = Variables.ClientSecret;
            string sendToken = EncodeTo64(Variables.ClientIDPS + ":" + Variables.ClientSecret);
            WriteToDatabase(0, "MasterCourse-sendToken", sendToken);
            // this will hold the Access Token returned from the server.
            //MessageBox.Show(sendToken, "sendToken");

            string accessToken = await GetAccessToken(baseURL, sendToken, clientId, clientSecret);
            //-->>>>>>>>>>>>>> Add : if returns null, stop
            if (accessToken == null)
            {
                WriteToDatabase(1, "Access Token", "GetAccessToken returned null");
                return 0;
            }
            //MessageBox.Show(accessToken, "access token");


            string FileSize = await GetFileSize(baseURL, accessToken);
            if (FileSize == null)
            {
                WriteToDatabase(1, "File Size", "GetFileSize returned null");
                return 0;
            }

            var jsonResponse = await GetMasterCourse(baseURL, accessToken, FileSize);

            return 0;
        }
        catch (Exception ex)
        {
            WriteToDatabase(1, "ProcessMasterCourse", ex.Message);
            return 0;
        }

    }


    /// <summary>
    /// Gets the list of courses.
    /// </summary>
    /// <param name="baseUrl">The url for the teacher list</param>
    /// <param name="accessToken">Acquired in the previous method</param>
    /// <returns>The page of articles.</returns>
    private async Task<dynamic> GetMasterCourse(string baseUrl, string accessToken, string FileSize)
    {
        try
        {
            int TotalRecords;
            string pageSize = Variables.PageSize;
            int intPageSize = Convert.ToInt32(pageSize);
            if (Int32.TryParse(FileSize, out TotalRecords))
            {
                int pages = ((TotalRecords - 1) / intPageSize) + 1;
                //MessageBox.Show(pages.ToString(), "pages");

                for (int i = 1; i <= pages; i++)
                {
                    string pagenum = i.ToString();
                    //MessageBox.Show(pagenum, "page number");

                    string uri = baseUrl + pLocation + "?pagesize=" + pageSize + "&page=" + pagenum;
                    var client = new HttpClient();

                    client.BaseAddress = new Uri(uri);

                    client.DefaultRequestHeaders.Accept.Clear();
                    client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));
                    client.DefaultRequestHeaders.Add("Authorization", "Bearer " + accessToken);

                    //MessageBox.Show(uri, "Master Course uri");

                    StringContent stringContent = new StringContent("", Encoding.UTF8, "application/json");
                    //StringContent stringContent = new StringContent("page=" + pagenum, Encoding.UTF8, "application/json");
                    //string content;

                    HttpResponseMessage response = await client.PostAsync(new Uri(uri), stringContent);

                    response.EnsureSuccessStatusCode();
                    string jsonString = await response.Content.ReadAsStringAsync();
                    //MessageBox.Show(jsonString, "jsonstring");

                    jsonString = cleanJsonString(jsonString);

                    //Deserialize our JSON
                    DataTable dt = JsonStringToDataTable(jsonString);
                    int numRows = 0;


                    foreach (DataRow row in dt.Rows)
                    {
                        Output0Buffer.AddRow();
                        Output0Buffer.CourseName = row["coursename"].ToString().Replace("\\", "");
                        Output0Buffer.CourseID = row["courseid"].ToString().Replace("\\", "");

                        numRows += 1;
                    }
                    WriteToDatabase(0, "GetMasterCourse - Row Count Page Num: " + pagenum, numRows.ToString());
                }
                return null;
            }
            return null;

        }
        catch (Exception ex)
        {
            WriteToDatabase(1, "GetMasterCourse", ex.Message);
            throw;
        }

    }


    private async Task<string> GetFileSize(string baseURL, string accessToken)
    {
        try
        {
            using (var client = new HttpClient())
            {
                string uri = baseURL + pLocation + "/count";
                client.BaseAddress = new Uri(uri);
                //MessageBox.Show(uri, "Master Course uri");

                client.DefaultRequestHeaders.Accept.Clear();
                client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));
                client.DefaultRequestHeaders.Add("Authorization", "Bearer " + accessToken);

                var stringContent = new StringContent("", Encoding.UTF8, "application/json");

                //Get file size
                HttpResponseMessage response = await client.PostAsync(new Uri(uri), stringContent);

                response.EnsureSuccessStatusCode();
                string jsonString = await response.Content.ReadAsStringAsync();

                //string jsonString = response.Content.ToString();//.ReadAsStringAsync();
                //MessageBox.Show(jsonString, "jsonstring");

                //Deserialize our JSON
                var FileSizeObject = JsonHelper.JsonDeserialize<FileSize>(jsonString);

                // return the Access Token.
                var FileSize = FileSizeObject.count;
                //MessageBox.Show(FileSize, "File Size");
                WriteToDatabase(0, "RecordCount", FileSize);
                return FileSize;
            }
        }
        catch (Exception ex)
        {
            //MessageBox.Show(ex.Message);
            //MessageBox.Show(ex.StackTrace);
            WriteToDatabase(1, "GetFileSize", ex.Message);
            //return null;
            throw;
        }

    }

    /// <summary>
    /// This method uses the OAuth Client Credentials Flow to get an Access Token to provide
    /// Authorization to the APIs.
    /// </summary>
    /// <returns></returns>
    private static async Task<string> GetAccessToken(string baseURL, string sendToken, string clientId, string clientSecret)
    {
        try
        {
            using (var client = new HttpClient())
            {

                string uri = baseURL + tokenURI;
                client.BaseAddress = new Uri(uri);

                //MessageBox.Show(uri, "access token uri");

                client.DefaultRequestHeaders.Accept.Clear();
                client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/x-www-form-urlencoded"));
                client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Basic", sendToken);

                List<KeyValuePair<string, string>> postData = new List<KeyValuePair<string, string>>();
                postData.Add(new KeyValuePair<string, string>("grant_type", "client_credentials"));
                FormUrlEncodedContent content = new FormUrlEncodedContent(postData);

                // Post to the Server and parse the response.
                HttpResponseMessage response = await client.PostAsync(new Uri(uri), content);

                response.EnsureSuccessStatusCode();
                string jsonString = await response.Content.ReadAsStringAsync();

                //MessageBox.Show(jsonString, "jsonstring");

                //Deserialize our JSON
                var accessTokenObject = JsonHelper.JsonDeserialize<AccessToken>(jsonString);

                // return the Access Token.
                var token = accessTokenObject.access_token;
                //MessageBox.Show(token, "access token");
                return token;
            }
        }
        catch (Exception ex)
        {
            //WriteToDatabase(1, "GetAccessToken", ex.Message);
            //MessageBox.Show(ex.Message);
            //MessageBox.Show(ex.StackTrace);
            //return null;
            throw ex;
        }
    }

    public string EncodeTo64(string toEncode)
    {
        byte[] toEncodeAsBytes = System.Text.ASCIIEncoding.ASCII.GetBytes(toEncode);
        string returnValue = System.Convert.ToBase64String(toEncodeAsBytes);
        return returnValue;

    }
    public class JsonHelper
    {
        /// <summary>
        /// JSON Serialization
        /// </summary>
        public static string JsonSerializer<T>(T t)
        {
            DataContractJsonSerializer ser = new DataContractJsonSerializer(typeof(T));
            MemoryStream ms = new MemoryStream();
            ser.WriteObject(ms, t);
            string jsonString = Encoding.UTF8.GetString(ms.ToArray());
            ms.Close();
            return jsonString;
        }
        /// <summary>
        /// JSON Deserialization
        /// </summary>
        public static T JsonDeserialize<T>(string jsonString)
        {
            DataContractJsonSerializer ser = new DataContractJsonSerializer(typeof(T));
            MemoryStream ms = new MemoryStream(Encoding.UTF8.GetBytes(jsonString));
            T obj = (T)ser.ReadObject(ms);
            return obj;
        }
    }

    public class MasterCourse
    {
        public string CourseName { get; set; }
        public string CourseID { get; set; }

    }

    public class AccessToken
    {
        public string access_token { get; set; }
        public string token_type { get; set; }
        public string expires_in { get; set; }
    }

    public class FileSize
    {
        public string count { get; set; }

    }



    public DataTable JsonStringToDataTable(string jsonString)
    {
        try
        {
            DataTable dt = new DataTable();
            string[] jsonStringArray = Regex.Split(jsonString.Replace("[", "").Replace("]", ""), "},{");
            List<string> ColumnsName = new List<string>();
            foreach (string jSA in jsonStringArray)
            {
                string[] jsonStringData = Regex.Split(jSA.Replace("{", "").Replace("}", ""), ",");
                foreach (string ColumnsNameData in jsonStringData)
                {
                    try
                    {
                        int idx = ColumnsNameData.IndexOf(":");
                        string ColumnsNameString = ColumnsNameData.Substring(0, idx - 1).Replace("\"", "");
                        if (!ColumnsName.Contains(ColumnsNameString))
                        {
                            ColumnsName.Add(ColumnsNameString);
                        }
                    }
                    catch //(Exception ex)
                    {
                        WriteToDatabase(1, "JsonStringToDataTable: Columns", (string.Format("Error Parsing Column Name : {0}", ColumnsNameData)));
                    }
                }
                break;
            }
            foreach (string AddColumnName in ColumnsName)
            {
                dt.Columns.Add(AddColumnName);
            }
            foreach (string jSA in jsonStringArray)
            {
                string[] RowData = Regex.Split(jSA.Replace("{", "").Replace("}", ""), ",");
                DataRow nr = dt.NewRow();
                foreach (string rowData in RowData)
                {
                    try
                    {
                        int idx = rowData.IndexOf(":");
                        string RowColumns = rowData.Substring(0, idx - 1).Replace("\"", "").Replace("\\", "");
                        string RowDataString = rowData.Substring(idx + 1).Replace("\"", "").Replace("\\", "");
                        nr[RowColumns] = RowDataString;
                    }
                    catch //(Exception ex)
                    {
                        WriteToDatabase(1, "JsonStringToDataTable: For each row", (string.Format("Error Parsing Row  Name : {0}", rowData)));
                        continue;
                    }
                }
                dt.Rows.Add(nr);
            }
            return dt;
        }
        catch (Exception ex)
        {
            WriteToDatabase(1, "JsonStringToDataTable", ex.Message);
            return null;
        }
    }

    public string cleanJsonString(string jsonString)
    {

        jsonString = jsonString.Replace("{\"record\":[", "");
        jsonString = jsonString.Replace(",\"@extensions\"", "");

        return jsonString;
    }


    public void WriteToDatabase(int Error, string Area, string LogInfo)
    {
        try
        {
            //MessageBox.Show("WriteToDatabase");
            var ConnString = Connections.PSDB.ConnectionString;

            using (SqlConnection conn = new SqlConnection(Connections.PSDB.ConnectionString))
            {
                if (conn.State != ConnectionState.Open) conn.Open();
                //string insertText = "Insert into PSLog (ClientUID, FileType, Area, LogInfo) Values (@ClientUID, @FileType, @Area, @LogInfo ) ";
                SqlCommand cmd = new SqlCommand("spLogInfo", conn);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("@ClientUID", SqlDbType.Int).Value = Variables.ClientID;
                cmd.Parameters.Add("@Error", SqlDbType.Int).Value = Error;
                cmd.Parameters.Add("@FileType", SqlDbType.VarChar, 50).Value = processType;
                cmd.Parameters.Add("@Area", SqlDbType.VarChar, 100).Value = Area;
                cmd.Parameters.Add("@LogInfo", SqlDbType.VarChar, 1000).Value = LogInfo;
                cmd.ExecuteNonQuery();
            }
        }
        catch //(Exception ex)
        {
            throw;
        }
    }
}




]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[packages.config]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="Newtonsoft.Json" version="12.0.3" targetFramework="net40" />
</packages>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_85d82eb1c3e64ceaa0f450c13f44ddbf.Properties.Settings.get_Default():SC_85d82eb1c3e64ceaa0f450c13f44ddbf.Properties.Sett" +
    "ings")]

namespace SC_85d82eb1c3e64ceaa0f450c13f44ddbf.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_85d82eb1c3e64ceaa0f450c13f44ddbf.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{911C85E7-CD69-4B69-A23C-BEFEC041366E}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_85d82eb1c3e64ceaa0f450c13f44ddbf</RootNamespace>
    <AssemblyName>SC_85d82eb1c3e64ceaa0f450c13f44ddbf</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Newtonsoft.Json, Version=12.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <HintPath>C:\Users\nblakely\AppData\Local\Temp\Vsta\SSIS_SC120\VstaoOe7POQvdkmEMBxCfd49EQ\packages\Newtonsoft.Json.12.0.3\lib\net40\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Net" />
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Runtime.Serialization" />
    <Reference Include="System.Web" />
    <Reference Include="System.Web.Extensions" />
    <Reference Include="System.Web.Services" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
      <DesignTime>True</DesignTime>
    </Compile>
    <None Include="packages.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String CourseName
    {
        set
        {
            this[0] = value;
        }
    }
    public bool CourseName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CourseID
    {
        set
        {
            this[1] = value;
        }
    }
    public bool CourseID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_85d82eb1c3e64ceaa0f450c13f44ddbf</msb:CodeName>
		<msb:DisplayName>SC_85d82eb1c3e64ceaa0f450c13f44ddbf</msb:DisplayName>
		<msb:ProjectId>{A17640F7-141F-4C7A-B683-D2D7A3290D6D}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_85d82eb1c3e64ceaa0f450c13f44ddbf.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="packages.config"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_85d82eb1c3e64ceaa0f450c13f44ddbf")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_85d82eb1c3e64ceaa0f450c13f44ddbf")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_85d82eb1c3e64ceaa0f450c13f44ddbf.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_85d82eb1c3e64ceaa0f450c13f44ddbf.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_85d82eb1c3e64ceaa0f450c13f44ddbf.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_85d82eb1c3e64ceaa0f450c13f44ddbf.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_85d82eb1c3e64ceaa0f450c13f44ddbf.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_85d82eb1c3e64ceaa0f450c13f44ddbf.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[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
zhASAI4NzhASAA8FdQIGABABSwoSAIIN8wsGAMwLSwomAAEAWQ0mACoAWQ0mAE0AWQ0eAH8AMQ0e
ABoAMQ2nAAUSAAAeAJAAMQ0GAFIESwoGAF0SQQsqALcNBgwqANINEgsGADIKVQIiABINaxAiADMF
axAiAJIJSwoWAMcPow8WAMQAow8WAIIIow8WALsPow8WAFkRmwwSAKYFdQIWAGgIow8GAEcBoAIG
AK8AoAIAAAAA9QEAAAAAAQABAAEAEADICgAAEAABAAEAAQAQAL4MAACZAAQADgABABAA7xAAAKUA
BAAWAAEAEACXDwAATQAHABsAAQAQAO4OAABNAAgAHQAAABAAVw6zDk0ACQAkAAABEAAmD7MOwQAL
ACgAAgAQACYNAABNAAwAKwACABAAFwYAAE0ADAAuAAIAEABrCgAATQAOADMAAgAQAM4IAABNABEA
OgADARAAlQEAAHEAEgA9AAMBEACvAQAAcQAZAD8AAwEQAM4BAABxACUAQQADARAA4AEAAHEALQBD
ABEA3goHBBEARAIHBBEASAUHBAYAlw8KBAYA7g4OBAYAvgwSBAEA/RAWBAEA/RAWBBEAUgobBBEA
lgUgBBEA3wMlBAEAOQMHBAEAHwMHBAEAcQMHBAEAVQMHBAEAjwMHBAEAqwMHBAYAWgYpBAYAsQws
BAYALw8zBAEAFgEHBAEAVgEHBAEAqAA3BAEAQAE+BAYAWgYpBAYAsQxFBAYALw8zBAYAzggHBAYA
JAoHBAYAdwoHBAEAJAEHBAEAaAEpBAEAfwEpBAEAhwEHBAEAqABMBAEAQAE3BAYAWgYpBAYAsQxV
BAYATQIHBAYAdwoHBAYALw8zBAEAMwFcBAEAqABMBAEAQAE3BAYAWgYpBAYAsQxVBAYATQIHBAYA
XgoHBAEAMwFcBAEAqABMBAEAQAE3BFAgAAAAAMYARwgGAAEAWCAAAAAAxgBSCAYAAQBgIAAAAADG
ADIQBgABAHAgAAAAAIYAAAZhBAEAuCAAAAAAgQAUBmkEAQAYIQAAAACBAMsIdAQFAHAhAAAAAJEA
aAp+BAcAvSEAAAAAhgB0AYoECwDQIQAAAACGADAEjwQMAJQkAAAAAIYAWgmKBA0AvCQAAAAAhgDZ
BZUEDgDcJQAAAACGGAYOBgARAOQlAAAAAJEYDA6cBBEABCYAAAAAhhgGDn8BEQAPJgAAAACGCIUE
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
wQL4DUEDEQEdEUcDuQA5CksDmQB1CT4BEQHcER4BFADmC4ECFADEEPEAFADRBCEAHAD4AlYCHADm
C4ECHADEEPEAHADRBCEAyQIGDugCmQIvC54DdAAGDgYAfAAGDrkDdADgAvEAKQEGDsEDJABzAGAG
LgALAAMFLgATAAwFLgAbACsFLgAjADQFLgArAF0FLgAzAF0FLgA7AF0FLgBDADQFLgBLAGMFLgBT
AF0FLgBbAHoFQwBjAFsGgABrAMQFoABrAO4FwABrABQG4ABrADYG4wCbAFsGYQF7AFsGgQF7AFsG
iQGjACsFoQF7AFsGowF7AFsGqQGjACsFwQF7AFsGwwF7AFsG4QF7AFsG4wF7AFsGAQJ7AFsGAwJ7
AFsGIQJ7AFsGwAV7AFsG4AV7AFsGAAZ7AFsGIAZ7AFsGYAZ7AFsGgAZ7AFsGoAZ7AFsGwAZ7AFsG
4AZ7AFsGAAd7AFsGQAd7AFsGYAd7AFsGwAeTAFsGAAiTAFsGQAiTAFsGgAiTAFsGLgBdAHIAhwCo
AEIBkQHsARQChwJQA4cDAwABAAUABQAGAAYABwAMAAgADgAKAA8ACwARAAwAFAAAAIkE4AQAAPUJ
5AQAABgC4AQAAOEJ5AQAAAIC6AQAACUC7gQAAGMC4AQAAJgE4AQAAHoQ4AQAAKoN4AQAAMII4AQA
AOwM8gQAAJ4F+AQAALIQ/gQAAIkE4AQAABgC4AQAAJgK4AQAAGcF4AQAAL0K4AQAAHMR4AQBAA8A
AwABABAABQABABEABwABABIACQACABwACwACAB4ADQACAB8ADwACACAAEQACACEAEwACACIAFQAC
ACMAFwACACUAGQACACYAGwABACcAGwACACgAHQACAC4AHwABAC8AHwACADAAIQABADEAIQACADMA
IwABADQAIwACADUAJQABADYAJQACADcAJwABADgAJwACADoAKQABADsAKQANAHoAIQANAHwAIwAO
AH4AIQAOAIAAIwAPAIIAIQAPAIQAIwAQAIYAIQAQAIgAIwA4AGcAfADaAAYB8QFBAlACawJxAtkC
BwMPA6UDsQMEgAAAAQAAAMocVWEAAAAAAADvCAAABAAAAAAAAAAAAAAA7AOXAgAAAAAMAAAAAAAA
AAAAAAD1A4QRAAAAAAQAAAAAAAAAAAAAAOwDcgUAAAAABAAAAAAAAAAAAAAA7AN1AgAAAAAEAAAA
AAAAAAAAAAD+A5sMAAAAAAwAAAAAAAAAAAAAAPUDrxEAAAAADAAAAAAAAAAAAAAA9QNUDAAAAAAE
AAAAAAAAAAAAAADsA0sKAAAAAAwAAAAAAAAAAAAAAPUDdwwAAAAABAAAAAAAAAAAAAAA7AMSCwAA
AAAAAAAAAQAAAGEOAAAJAAIACgACAAsAAgAMAAIADQACAA4AAgAPAAIAEAACAAAAAABXAG4CAAAA
AFkAbgIzAE8AOQBtAD8AggA/AJEA0wBhAtMAdwIHARcDBwE3AyEBbAMhAXgDWACCAyEB0QMhAd0D
WADnAwAAAAAASURUU0NvbXBvbmVudE1ldGFEYXRhMTAwAElEVFNWYXJpYWJsZTEwMABJRFRTUnVu
dGltZUNvbm5lY3Rpb25Db2xsZWN0aW9uMTAwAElEVFNSdW50aW1lQ29ubmVjdGlvbjEwMABJRFRT
Q29ubmVjdGlvbk1hbmFnZXIxMDAASURUU1ZhcmlhYmxlczEwMABJRFRTRXZhbHVhdG9yQ29udGV4
dDEwMAA8PnVfXzEASUVudW1lcmFibGVgMQBUYXNrYDEASHR0cEhlYWRlclZhbHVlQ29sbGVjdGlv
bmAxAEFzeW5jVGFza01ldGhvZEJ1aWxkZXJgMQBUYXNrQXdhaXRlcmAxAExpc3RgMQBUb0ludDMy
ADxiYXNlVVJMPjVfXzIAPHBhZ2VTaXplPjVfXzIAPGNsaWVudD41X18yADw+dV9fMgBLZXlWYWx1
ZVBhaXJgMgA8YWNjZXNzVG9rZW4+NV9fMwA8cGFnZXM+NV9fMwBFbmNvZGVUbzY0ADxpPjVfXzQA
PHBhZ2VudW0+NV9fNQA8UHJvY2Vzc01hc3RlckNvdXJzZT5kX182ADxHZXRNYXN0ZXJDb3Vyc2U+
ZF9fNwBnZXRfVVRGOAA8R2V0RmlsZVNpemU+ZF9fOAA8R2V0QWNjZXNzVG9rZW4+ZF9fOQA8TW9k
dWxlPgBnZXRfUFNEQgBnZXRfQ291cnNlSUQAc2V0X0NvdXJzZUlEAGdldF9DbGllbnRJRABHZXRP
dXRwdXRJRABnZXRfQVNDSUkAdG9rZW5VUkkAYmFzZVVSTABTeXN0ZW0uSU8AZ2V0X0NsaWVudElE
UFMAVABBcmVhAFN5c3RlbS5EYXRhAGdldF9Db21wb25lbnRNZXRhRGF0YQBtc2NvcmxpYgBTeXN0
ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYwBSZWFkQXNTdHJpbmdBc3luYwBQb3N0QXN5bmMAY2xpZW50
SWQAQWRkAE1hcmtPdXRwdXRzRmluaXNoZWQAQXdhaXRVbnNhZmVPbkNvbXBsZXRlZABnZXRfSXND
b21wbGV0ZWQAPENvdXJzZUlEPmtfX0JhY2tpbmdGaWVsZAA8Q291cnNlTmFtZT5rX19CYWNraW5n
RmllbGQAPHRva2VuX3R5cGU+a19fQmFja2luZ0ZpZWxkADxhY2Nlc3NfdG9rZW4+a19fQmFja2lu
Z0ZpZWxkADxleHBpcmVzX2luPmtfX0JhY2tpbmdGaWVsZAA8Y291bnQ+a19fQmFja2luZ0ZpZWxk
AERiQ29tbWFuZABTcWxDb21tYW5kAFJlcGxhY2UAZGVmYXVsdEluc3RhbmNlAEVuc3VyZVN1Y2Nl
c3NTdGF0dXNDb2RlAHRvRW5jb2RlAGdldF9NZXNzYWdlAEh0dHBSZXNwb25zZU1lc3NhZ2UASnNv
blN0cmluZ1RvRGF0YVRhYmxlAElEaXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVG
cm9tSGFuZGxlAGdldF9Db3Vyc2VOYW1lAHNldF9Db3Vyc2VOYW1lAGdldF9DbGllbnROYW1lAEdl
dFJ1bnRpbWVDb25uZWN0aW9uQnlOYW1lAElBc3luY1N0YXRlTWFjaGluZQBTZXRTdGF0ZU1hY2hp
bmUAc3RhdGVNYWNoaW5lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFNxbERiVHlw
ZQBzZXRfQ29tbWFuZFR5cGUAVmFsdWVUeXBlAFNlY3VyaXR5UHJvdG9jb2xUeXBlAHByb2Nlc3NU
eXBlAGdldF90b2tlbl90eXBlAHNldF90b2tlbl90eXBlAFN5c3RlbS5Db3JlAGdldF9DdWx0dXJl
AHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBJbnRlcm5hbERhdGFDb2xsZWN0aW9uQmFzZQBB
cHBsaWNhdGlvblNldHRpbmdzQmFzZQBXcml0ZVRvRGF0YWJhc2UAQ2xvc2UARGlzcG9zZQBUcnlQ
YXJzZQBQcm9jZXNzTWFzdGVyQ291cnNlAEdldE1hc3RlckNvdXJzZQBDcmVhdGUAZ2V0X1N0YXRl
AEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbm5lY3Rpb25TdGF0ZQA8PjFfX3N0YXRlAER5bmFtaWNB
dHRyaWJ1dGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0
dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3Nl
bWJseVRpdGxlQXR0cmlidXRlAEFzeW5jU3RhdGVNYWNoaW5lQXR0cmlidXRlAEFzc2VtYmx5VHJh
ZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBEZWJ1Z2dlckhpZGRlbkF0
dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlv
bkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVj
dEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50
RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBh
dGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQBzZXRfVmFsdWUAQXV0aGVu
dGljYXRpb25IZWFkZXJWYWx1ZQBNZWRpYVR5cGVXaXRoUXVhbGl0eUhlYWRlclZhbHVlAHZhbHVl
AHNldF9FeHBlY3QxMDBDb250aW51ZQBnZXRfUGFnZVNpemUAR2V0RmlsZVNpemUASnNvbkRlc2Vy
aWFsaXplAEluZGV4T2YAU0NfODVkODJlYjFjM2U2NGNlYWEwZjQ1MGMxM2Y0NGRkYmYARW5jb2Rp
bmcAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb0Jhc2U2NFN0cmluZwBnZXRfQ29ubmVjdGlv
blN0cmluZwBjbGVhbkpzb25TdHJpbmcAanNvblN0cmluZwBUb1N0cmluZwBHZXRTdHJpbmcAU3Vi
c3RyaW5nAFVyaQBnZXRfVGFzawBTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0NfODVkODJlYjFjM2U2
NGNlYWEwZjQ1MGMxM2Y0NGRkYmYuZGxsAHNldF9Db3Vyc2VJRF9Jc051bGwAc2V0X0NvdXJzZU5h
bWVfSXNOdWxsAFNldE51bGwAc2V0X1NlY3VyaXR5UHJvdG9jb2wAYmFzZVVybABNZW1vcnlTdHJl
YW0AZ2V0X0l0ZW0Ac2V0X0l0ZW0AU3lzdGVtAHJlc291cmNlTWFuAHNlbmRUb2tlbgBHZXRBY2Nl
c3NUb2tlbgBhY2Nlc3NUb2tlbgBnZXRfYWNjZXNzX3Rva2VuAHNldF9hY2Nlc3NfdG9rZW4AT3Bl
bgBnZXRfZXhwaXJlc19pbgBzZXRfZXhwaXJlc19pbgBTY3JpcHRNYWluAERhdGFDb2x1bW4AcExv
Y2F0aW9uAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5S
dW50aW1lLlNlcmlhbGl6YXRpb24Ac2V0X0F1dGhvcml6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24A
RGF0YUNvbHVtbkNvbGxlY3Rpb24AZ2V0X1J1bnRpbWVDb25uZWN0aW9uQ29sbGVjdGlvbgBTcWxQ
YXJhbWV0ZXJDb2xsZWN0aW9uAERhdGFSb3dDb2xsZWN0aW9uAERiQ29ubmVjdGlvbgBTcWxDb25u
ZWN0aW9uAEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24AU2V0RXhjZXB0aW9uAFN5c3RlbS5EYXRh
LkNvbW1vbgBTeXN0ZW0uUnVudGltZS5TZXJpYWxpemF0aW9uLkpzb24AQ3VsdHVyZUluZm8ATG9n
SW5mbwBPdXRwdXROYW1lTWFwAE91dHB1dE1hcABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1J1bnRp
bWVXcmFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUGlwZWxpbmVXcmFwAFN5c3RlbS5OZXQuSHR0
cABDbGVhcgA8PnRfX2J1aWxkZXIAT3V0cHV0MEJ1ZmZlcgBQaXBlbGluZUJ1ZmZlcgBTY3JpcHRC
dWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ29ubmVjdGlvbk1hbmFnZXIAU2VydmljZVBv
aW50TWFuYWdlcgBKc29uSGVscGVyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUuV3Jh
cHBlcgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZS5XcmFwcGVyAERiUGFyYW1ldGVy
AFNxbFBhcmFtZXRlcgBHZXRBd2FpdGVyAGdldF9DbGllbnRTZXJ2ZXIARGF0YUNvbnRyYWN0SnNv
blNlcmlhbGl6ZXIAWG1sT2JqZWN0U2VyaWFsaXplcgBFcnJvcgBJRW51bWVyYXRvcgBHZXRFbnVt
ZXJhdG9yAC5jdG9yAC5jY3RvcgBPdXRwdXRJRHMAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5S
dW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTQ184NWQ4MmViMWMzZTY0
Y2VhYTBmNDUwYzEzZjQ0ZGRiZi5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdn
aW5nTW9kZXMAU0NfODVkODJlYjFjM2U2NGNlYWEwZjQ1MGMxM2Y0NGRkYmYuUHJvcGVydGllcwBn
ZXRfUmVhZE9ubHlWYXJpYWJsZXMAR2V0Qnl0ZXMAQnVmZmVyQ29sdW1uSW5kZXhlcwBHZXRDb2x1
bW5JbmRleGVzAFNldHRpbmdzADw+NF9fdGhpcwBTeXN0ZW0uVGhyZWFkaW5nLlRhc2tzAENvbnRh
aW5zAGdldF9Db2x1bW5zAFN5c3RlbS5UZXh0LlJlZ3VsYXJFeHByZXNzaW9ucwBTeXN0ZW0uQ29s
bGVjdGlvbnMAQ29ubmVjdGlvbnMAU3lzdGVtLk5ldC5IdHRwLkhlYWRlcnMASHR0cEhlYWRlcnMA
SHR0cFJlcXVlc3RIZWFkZXJzAGdldF9EZWZhdWx0UmVxdWVzdEhlYWRlcnMAQnVmZmVycwBnZXRf
UGFyYW1ldGVycwBzZXRfQmFzZUFkZHJlc3MARmluaXNoT3V0cHV0cwBnZXRfUm93cwBDcmVhdGVO
ZXdPdXRwdXRSb3dzAENvbmNhdABGb3JtYXQAUmVhZE9iamVjdABXcml0ZU9iamVjdABTeXN0ZW0u
TmV0AGdldF9DbGllbnRTZWNyZXQAY2xpZW50U2VjcmV0AFNldEVuZE9mUm93c2V0AFdhaXQAU3Bs
aXQAZ2V0X0RlZmF1bHQAR2V0UmVzdWx0AFNldFJlc3VsdABTeXN0ZW0uRGF0YS5TcWxDbGllbnQA
SHR0cENsaWVudABVc2VyQ29tcG9uZW50AFBhcmVudENvbXBvbmVudABTY3JpcHRDb21wb25lbnQA
Z2V0X0N1cnJlbnQAZ2V0X0NvbnRlbnQARm9ybVVybEVuY29kZWRDb250ZW50AFN0cmluZ0NvbnRl
bnQASHR0cENvbnRlbnQAZ2V0X2NvdW50AHNldF9jb3VudABnZXRfQWNjZXB0AE1pY3Jvc29mdC5T
cWxTZXJ2ZXIuVHhTY3JpcHQAU3RhcnQAQ29udmVydABNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVs
aW5lSG9zdABQcmltZU91dHB1dABNb3ZlTmV4dABTeXN0ZW0uVGV4dABHZXRWYWx1ZVdpdGhDb250
ZXh0AFNjcmlwdENvbXBvbmVudEV2YWxDb250ZXh0AGdldF9FdmFsdWF0b3JDb250ZXh0AERhdGFS
b3cAQWRkUm93AE5ld1JvdwBSZWdleABUb0FycmF5AGdldF9Bc3NlbWJseQBFeGVjdXRlTm9uUXVl
cnkAAAAAA1sAAAEAA10AAAd9ACwAewAAA3sAAAN9AAADLAAAAzoAAAMiAAA9SgBzAG8AbgBTAHQA
cgBpAG4AZwBUAG8ARABhAHQAYQBUAGEAYgBsAGUAOgAgAEMAbwBsAHUAbQBuAHMAAD9FAHIAcgBv
AHIAIABQAGEAcgBzAGkAbgBnACAAQwBvAGwAdQBtAG4AIABOAGEAbQBlACAAOgAgAHsAMAB9AAAD
XAAAR0oAcwBvAG4AUwB0AHIAaQBuAGcAVABvAEQAYQB0AGEAVABhAGIAbABlADoAIABGAG8AcgAg
AGUAYQBjAGgAIAByAG8AdwAAO0UAcgByAG8AcgAgAFAAYQByAHMAaQBuAGcAIABSAG8AdwAgACAA
TgBhAG0AZQAgADoAIAB7ADAAfQAAK0oAcwBvAG4AUwB0AHIAaQBuAGcAVABvAEQAYQB0AGEAVABh
AGIAbABlAAAXewAiAHIAZQBjAG8AcgBkACIAOgBbAAAdLAAiAEAAZQB4AHQAZQBuAHMAaQBvAG4A
cwAiAAATcwBwAEwAbwBnAEkAbgBmAG8AABVAAEMAbABpAGUAbgB0AFUASQBEAAANQABFAHIAcgBv
AHIAABNAAEYAaQBsAGUAVAB5AHAAZQAAC0AAQQByAGUAYQAAEUAATABvAGcASQBuAGYAbwAAWy8A
dwBzAC8AcwBjAGgAZQBtAGEALwBxAHUAZQByAHkALwBjAG8AbQAuAGgAYQB5AGUAcwBzAG8AZgB0
AC4AVABJAFAAVwBlAGIALgBjAG8AdQByAHMAZQBzAAApLwBvAGEAdQB0AGgALwBhAGMAYwBlAHMA
cwBfAHQAbwBrAGUAbgAvAAAPVABlAGEAYwBoAGUAcgAAgJtJAHMATgB1AGwAbAAgAHAAcgBvAHAA
ZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABGAGEAbABzAGUALgAg
AEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAAYwBvAGwAdQBtAG4A
IABpAG4AcwB0AGUAYQBkAC4AABFPAHUAdABwAHUAdAAgADAAAAlQAFMARABCAAARQwBsAGkAZQBu
AHQASQBEAAAVQwBsAGkAZQBuAHQASQBEAFAAUwAAFUMAbABpAGUAbgB0AE4AYQBtAGUAABlDAGwA
aQBlAG4AdABTAGUAYwByAGUAdAAAGUMAbABpAGUAbgB0AFMAZQByAHYAZQByAAARUABhAGcAZQBT
AGkAegBlAABxUwBDAF8AOAA1AGQAOAAyAGUAYgAxAGMAMwBlADYANABjAGUAYQBhADAAZgA0ADUA
MABjADEAMwBmADQANABkAGQAYgBmAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQBy
AGMAZQBzAAAtTQBhAHMAdABlAHIAQwBvAHUAcgBzAGUALQBzAGUAbgBkAFQAbwBrAGUAbgABGUEA
YwBjAGUAcwBzACAAVABvAGsAZQBuAAA5RwBlAHQAQQBjAGMAZQBzAHMAVABvAGsAZQBuACAAcgBl
AHQAdQByAG4AZQBkACAAbgB1AGwAbAAAE0YAaQBsAGUAIABTAGkAegBlAAAzRwBlAHQARgBpAGwA
ZQBTAGkAegBlACAAcgBlAHQAdQByAG4AZQBkACAAbgB1AGwAbAAAJ1AAcgBvAGMAZQBzAHMATQBh
AHMAdABlAHIAQwBvAHUAcgBzAGUAABU/AHAAYQBnAGUAcwBpAHoAZQA9AAANJgBwAGEAZwBlAD0A
ACFhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwBqAHMAbwBuAAAbQQB1AHQAaABvAHIAaQB6AGEAdABp
AG8AbgAAD0IAZQBhAHIAZQByACAAABVjAG8AdQByAHMAZQBuAGEAbQBlAAARYwBvAHUAcgBzAGUA
aQBkAABNRwBlAHQATQBhAHMAdABlAHIAQwBvAHUAcgBzAGUAIAAtACAAUgBvAHcAIABDAG8AdQBu
AHQAIABQAGEAZwBlACAATgB1AG0AOgAgAAEfRwBlAHQATQBhAHMAdABlAHIAQwBvAHUAcgBzAGUA
AA0vAGMAbwB1AG4AdAAAF1IAZQBjAG8AcgBkAEMAbwB1AG4AdAAAF0cAZQB0AEYAaQBsAGUAUwBp
AHoAZQAAQ2EAcABwAGwAaQBjAGEAdABpAG8AbgAvAHgALQB3AHcAdwAtAGYAbwByAG0ALQB1AHIA
bABlAG4AYwBvAGQAZQBkAAELQgBhAHMAaQBjAAAVZwByAGEAbgB0AF8AdAB5AHAAZQAAJWMAbABp
AGUAbgB0AF8AYwByAGUAZABlAG4AdABpAGEAbABzAAAAAC6CR2wWey9Jq3cxfupGGKMABCABAQgD
IAABBSABARERBCABAQ4FIAEBEjkFIAEBHQIFIAEBEnUGIAEBEYC5CQcCETQVEUUBCAUVEUUBCAgA
ABURRQETAAcwAQEBEB4ABAoBETQIIAAVEkEBEwAJBwIROBURRQEcBRURRQEcBAoBETgJBwIRPBUR
RQEOBRURRQEOBAoBETwJBwIRQBURRQEOBAoBEUAFAAASgMkFIAEdBQ4FAAEOHQUkBxMSUR0OFRJV
AQ4dDggdDggOCA4VEVkBDg4SXQ4IDg4SURJhBSACDg4OBgACHQ4ODgUVElUBDgQgAQgOBSACDggI
BSABAhMABSABARMABQACDg4cCCAAFRFZARMABRURWQEOBCAAEwAFIAASgNkGIAESgN0OAyAAAgQg
ABJdBCABDggFIAIBDhwFIAASgOEFIAEBEl0DIAAOBAcBEmUFIAARgOkGIAIBDhJlBiABARGA9QUg
ABKA+QkgAhKA/Q4RgQEEIAEBHAogAxKA/Q4RgQEIAyAACAsgAwESgJ0dCBKAoQUgAgEIHAMHAQgH
AAIIEoChDgUgAR0ICAUgABKBEQUgABKBFQYgARKBGQ4FIAASgKkFIAASgR0GIAESgSEcBQAAEoEl
BiABHBKBKQcAARI5EYEtBSAAEoExByACAQ4SgTEEBwESaQIeAAcgAgESgT0cBCAAHQUFIAEOHQUF
IAEBHQUGIAEcEoE9GQcMCBIICA4ODg4OFRF5AQ4VEXkBHBJhEmEEAAEBAgYAAQERgUUGAAMODg4O
BRUSQQEOCCAAFRF5ARMABRUReQEOCjACAgEQHgAQHgEJCgIVEXkBDhE0BRUSQQEcBRUReQEcCQoC
FRF5ARwRNAUgAQESYScHEQgSCBwICA4SgIEOCBUReQESgIUVEXkBDhKAiRJdEoCNCBJhEmEEAAEI
DgYAAgIOEAgFAAEOHQ4GIAEBEoFJBSAAEoFNCiAAFRKBUQESgVUIFRKBUQESgVUFAAIODg4FIAIB
Dg4IIAMBDhKAyQ4PIAIVEkEBEoCFEoFJEoFdBxUSQQESgIUHFRF5ARKAhQsKAhUReQESgIUROAUg
ABKAhQUgABKBXQcgABUSQQEOCQoCFRF5AQ4ROAUgABKAiQMgABwEIAEcDhsHCggSCA4OEoCBDhUR
eQESgIUVEXkBDhJhEmELCgIVEXkBEoCFETwJCgIVEXkBDhE8BAoBEjAWBwcIDg4SgJUVEXkBEoCF
FRF5AQ4SYQYgAQESgWULFRJVARURgWkCDg4HFRGBaQIODgcgAgETABMBDyABARUSgW0BFRGBaQIO
DgsKAhUReQESgIURQAkKAhUReQEOEUAECgESLAi3elxWGTTgiQiJhF3NgIDMkQiwP19/EdUKOgIG
DgMGEhQDBhIYAwYSDAQGEoClBAYSgLEEBhKAtQMGEiACBggGBhURRQEIAwYSCAYGFRF5AQ4GBhUR
eQEcBgYVEUUBHAgGFRF5ARKAhQYGFRFFAQ4EBhKAkQcgABUSQQEICiADFRJBARwODg4JIAIVEkEB
Dg4OCwAEFRJBAQ4ODg4OBCABDg4FIAESUQ4GIAMBCA4OAwAAAQQgAQECDSAEAQgdCB0SgJ0SgKEG
IAEBEoClBQAAEoCxBQAAEoC1BgABARKAtQQAABIgBhABAQ4eAAYQAQEeAA4DKAAOAygAAgUoABKA
qQMoAAgFCAASgLEFCAASgLUECAASIAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRo
cm93cwEIAQACAAAAAAAoAQAjU0NfODVkODJlYjFjM2U2NGNlYWEwZjQ1MGMxM2Y0NGRkYmYAAAUB
AAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMAAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC41
AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjUpAQAkU2NyaXB0TWFp
bis8UHJvY2Vzc01hc3RlckNvdXJzZT5kX182AAAlAQAgU2NyaXB0TWFpbis8R2V0TWFzdGVyQ291
cnNlPmRfXzcAACEBABxTY3JpcHRNYWluKzxHZXRGaWxlU2l6ZT5kX184AAAkAQAfU2NyaXB0TWFp
bis8R2V0QWNjZXNzVG9rZW4+ZF9fOQAABAEAAAAKAQACAAAAAAEAAAC0AAAAzsrvvgEAAACRAAAA
bFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4w
LjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0
ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAA9GYA
AAAAAAAAAAAADmcAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABnAAAAAAAAAAAAAAAAX0NvckRs
bE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAA
AAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYgAAAGgQAAAAAAAAAAAAAGgQ0AAAA
VgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEAAAABAFVhyhwAAAEAVWHK
HD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8A
AAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBHoDAAABAFMAdAByAGkAbgBn
AEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAwADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0A
ZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBG
AGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8AOAA1AGQAOAAyAGUAYgAxAGMA
MwBlADYANABjAGUAYQBhADAAZgA0ADUAMABjADEAMwBmADQANABkAGQAYgBmAAAAPgAPAAEARgBp
AGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADcAMwA3ADAALgAyADQAOQAxADcAAAAAAHAA
KAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AOAA1AGQAOAAyAGUAYgAxAGMAMwBl
ADYANABjAGUAYQBhADAAZgA0ADUAMABjADEAMwBmADQANABkAGQAYgBmAC4AZABsAGwAAABIABIA
AQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAg
ADIAMAAyADAAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgA
KAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwA4ADUAZAA4ADIAZQBi
ADEAYwAzAGUANgA0AGMAZQBhAGEAMABmADQANQAwAGMAMQAzAGYANAA0AGQAZABiAGYALgBkAGwA
bAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AOAA1AGQAOAAyAGUAYgAx
AGMAMwBlADYANABjAGUAYQBhADAAZgA0ADUAMABjADEAMwBmADQANABkAGQAYgBmAAAAQgAPAAEA
UAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA3ADMANwAwAC4AMgA0ADkAMQA3
AAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA3ADMA
NwAwAC4AMgA0ADkAMQA3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAYAAADAAAACA3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_85d82eb1c3e64ceaa0f450c13f44ddbf</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::ClientID,User::ClientIDPS,User::ClientName,User::ClientSecret,User::ClientServer,User::PageSize</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">60711c1a44e5d677e52518f51a973d9f</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">cb3017b385276176ff67132301cc3054f4ea0647</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Loop thru Clients\Master Course\Script Component.Connections[PSDB]"
                      connectionManagerID="Package.ConnectionManagers[ADO.NET_PowerSchoolAPIPlugIn]"
                      connectionManagerRefId="Package.ConnectionManagers[ADO.NET_PowerSchoolAPIPlugIn]"
                      name="PSDB" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Loop thru Clients\Master Course\Script Component.Outputs[Output 0]"
                      hasSideEffects="true"
                      name="Output 0">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop thru Clients\Master Course\Script Component.Outputs[Output 0].Columns[CourseName]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          lineageId="Package\Loop thru Clients\Master Course\Script Component.Outputs[Output 0].Columns[CourseName]"
                          name="CourseName" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Master Course\Script Component.Outputs[Output 0].Columns[CourseID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Master Course\Script Component.Outputs[Output 0].Columns[CourseID]"
                          name="CourseID" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Loop thru Clients\Master Course.Paths[Derived Column Output]"
                  endId="Package\Loop thru Clients\Master Course\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Loop thru Clients\Master Course\Derived Column.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Loop thru Clients\Master Course.Paths[Output 0]"
                  endId="Package\Loop thru Clients\Master Course\Derived Column.Inputs[Derived Column Input]"
                  name="Output 0"
                  startId="Package\Loop thru Clients\Master Course\Script Component.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Loop thru Clients\Student Schedule"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:Disabled="True"
          DTS:DTSID="{e3ed9491-d0ed-4401-9740-9e77d13b7453}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Student Schedule"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">@[User::ProcessStudentSchedule]==0</DTS:PropertyExpression>
          <DTS:ObjectData>
            <pipeline
              defaultBufferMaxRows="50000"
              version="1">
              <components>
                <component
                  refId="Package\Loop thru Clients\Student Schedule\Derived Column"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Loop thru Clients\Student Schedule\Derived Column.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Loop thru Clients\Student Schedule\Derived Column.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Loop thru Clients\Student Schedule\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop thru Clients\Student Schedule\Derived Column.Outputs[Derived Column Output].Columns[ClientUID]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Loop thru Clients\Student Schedule\Derived Column.Outputs[Derived Column Output].Columns[ClientUID]"
                          name="ClientUID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::ClientID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::ClientID]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Loop thru Clients\Student Schedule\Derived Column.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Loop thru Clients\Student Schedule\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop thru Clients\Student Schedule\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Student Schedule\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Student Schedule\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Student Schedule\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Loop thru Clients\Student Schedule\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[PSStudentSchedule]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Loop thru Clients\Student Schedule\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[PowerSchoolAPIPlugIn]"
                      connectionManagerRefId="Package.ConnectionManagers[PowerSchoolAPIPlugIn]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Loop thru Clients\Student Schedule\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Loop thru Clients\Student Schedule\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ClientUID]"
                          cachedDataType="i4"
                          cachedName="ClientUID"
                          externalMetadataColumnId="Package\Loop thru Clients\Student Schedule\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientUID]"
                          lineageId="Package\Loop thru Clients\Student Schedule\Derived Column.Outputs[Derived Column Output].Columns[ClientUID]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Student Schedule\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[StudentID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="StudentID"
                          externalMetadataColumnId="Package\Loop thru Clients\Student Schedule\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StudentID]"
                          lineageId="Package\Loop thru Clients\Student Schedule\Script Component.Outputs[Output 0].Columns[StudentID]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Student Schedule\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ClassID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="ClassID"
                          externalMetadataColumnId="Package\Loop thru Clients\Student Schedule\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClassID]"
                          lineageId="Package\Loop thru Clients\Student Schedule\Script Component.Outputs[Output 0].Columns[ClassID]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Student Schedule\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientUID]"
                          dataType="i4"
                          name="ClientUID" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Student Schedule\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StudentSchedulePSUID]"
                          dataType="i4"
                          name="StudentSchedulePSUID" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Student Schedule\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StudentID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="StudentID" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Student Schedule\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClassID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="ClassID" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Loop thru Clients\Student Schedule\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Loop thru Clients\Student Schedule\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop thru Clients\Student Schedule\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Student Schedule\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Student Schedule\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Student Schedule\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Loop thru Clients\Student Schedule\Script Component"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;9"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Script Component"
                  version="9">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="33">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 PSDB
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"PSDB").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public Int32 ClientID
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["ClientID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientIDPS
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientIDPS"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientSecret
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientSecret"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientServer
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientServer"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String PageSize
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["PageSize"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[
#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces

using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.IO;
using System.Net;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Runtime.Serialization;
using System.Runtime.Serialization.Json;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading.Tasks;
using System.Web.Script.Serialization;
using System.Windows.Forms;



#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    static string pLocation = "/ws/schema/query/com.hayessoft.TIPWeb.studentSchedule";
    static string tokenURI = "/oauth/access_token/";
    static string processType = "studentSchedule";

    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();

    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */
        ProcessStudentSchedule().Wait();
    }


    public async Task<int> ProcessStudentSchedule()
    {
        try
        {

            // The server base address
            string baseURL = Variables.ClientServer;

            //MessageBox.Show(baseURL);

            ServicePointManager.Expect100Continue = true;
            ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;


            /// The client information used to get the OAuth Access Token from the server.
            string clientId = Variables.ClientIDPS;
            string clientSecret = Variables.ClientSecret;
            string sendToken = EncodeTo64(Variables.ClientIDPS + ":" + Variables.ClientSecret);

            //WriteToDatabase(0, "Student Schedule-sendToken", sendToken);
            // this will hold the Access Token returned from the server.
            //MessageBox.Show(sendToken, "sendToken");

            string accessToken = await GetAccessToken(baseURL, sendToken, clientId, clientSecret);
            //-->>>>>>>>>>>>>> Add : if returns null, stop
            if (accessToken == null)
            {
                WriteToDatabase(1, "Access Token", "GetAccessToken returned null");
                return 0;
            }
            //MessageBox.Show(accessToken, "access token");


            string FileSize = await GetFileSize(baseURL, accessToken);
            if (FileSize == null)
            {
                WriteToDatabase(1, "File Size", "GetFileSize returned null");
                return 0;
            }

            var jsonResponse = await GetStudentSchedule(baseURL, accessToken, FileSize);

            return 0;
        }
        catch (Exception ex)
        {
            WriteToDatabase(1, "ProcessStudentSchedule", ex.Message);
            return 0;
        }

    }


    /// <summary>
    /// Gets the list of Student Schedules.
    /// </summary>
    /// <param name="baseUrl">The url for the Student Schedule list</param>
    /// <param name="accessToken">Acquired in the previous method</param>
    /// <returns>The page of articles.</returns>
    private async Task<dynamic> GetStudentSchedule(string baseUrl, string accessToken, string FileSize)
    {
        try
        {
            int TotalRecords;
            string pageSize = Variables.PageSize;
            int intPageSize = Convert.ToInt32(pageSize);
            //MessageBox.Show(pageSize, "page size");
            if (Int32.TryParse(FileSize, out TotalRecords))
            {
                int pages = ((TotalRecords - 1) / intPageSize) + 1;
                //MessageBox.Show(pages.ToString(), "pages");


                for (int i = 1; i <= pages; i++)
                {
                    string pagenum = i.ToString();
                    //MessageBox.Show(pagenum, "page number");

                    string uri = baseUrl + pLocation + "?pagesize=" + pageSize + "&page=" + pagenum;
                    var client = new HttpClient();

                    client.BaseAddress = new Uri(uri);

                    client.DefaultRequestHeaders.Accept.Clear();
                    client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));
                    client.DefaultRequestHeaders.Add("Authorization", "Bearer " + accessToken);

                    //MessageBox.Show(uri, "courses uri");

                    StringContent stringContent = new StringContent("", Encoding.UTF8, "application/json");
                    //StringContent stringContent = new StringContent("page=" + pagenum, Encoding.UTF8, "application/json");
                    //string content;

                    HttpResponseMessage response = await client.PostAsync(new Uri(uri), stringContent);

                    response.EnsureSuccessStatusCode();
                    string jsonString = await response.Content.ReadAsStringAsync();
                    //MessageBox.Show(jsonString, "jsonstring");

                    jsonString = cleanJsonString(jsonString);

                    //Deserialize our JSON
                    DataTable dt = JsonStringToDataTable(jsonString);
                    int numRows = 0;


                    foreach (DataRow row in dt.Rows)
                    {
                        Output0Buffer.AddRow();
                        Output0Buffer.StudentID = row["studentid"].ToString().Replace("\\", "");
                        Output0Buffer.ClassID = row["classID"].ToString().Replace("\\", "");


                        numRows += 1;
                    }
                    WriteToDatabase(0, "GetStudentSchedule - Row Count Page Num: " + pagenum, numRows.ToString());
                }
                return null;
            }
            return null;

        }
        catch (Exception ex)
        {
            WriteToDatabase(1, "GetStudentSchedule", ex.Message);
            throw;
        }

    }


    private async Task<string> GetFileSize(string baseURL, string accessToken)
    {
        try
        {
            using (var client = new HttpClient())
            {
                string uri = baseURL + pLocation + "/count";
                client.BaseAddress = new Uri(uri);
                //MessageBox.Show(uri, "Students uri");

                client.DefaultRequestHeaders.Accept.Clear();
                client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));
                client.DefaultRequestHeaders.Add("Authorization", "Bearer " + accessToken);

                var stringContent = new StringContent("", Encoding.UTF8, "application/json");

                //Get file size
                HttpResponseMessage response = await client.PostAsync(new Uri(uri), stringContent);

                response.EnsureSuccessStatusCode();
                string jsonString = await response.Content.ReadAsStringAsync();

                //string jsonString = response.Content.ToString();//.ReadAsStringAsync();
                //MessageBox.Show(jsonString, "jsonstring");

                //Deserialize our JSON
                var FileSizeObject = JsonHelper.JsonDeserialize<FileSize>(jsonString);

                // return the Access Token.
                var FileSize = FileSizeObject.count;
                //MessageBox.Show(FileSize, "File Size");
                WriteToDatabase(0, "RecordCount", FileSize);
                return FileSize;
            }
        }
        catch (Exception ex)
        {
            //MessageBox.Show(ex.Message);
            //MessageBox.Show(ex.StackTrace);
            WriteToDatabase(1, "GetFileSize", ex.Message);
            //return null;
            throw;
        }

    }

    /// <summary>
    /// This method uses the OAuth Client Credentials Flow to get an Access Token to provide
    /// Authorization to the APIs.
    /// </summary>
    /// <returns></returns>
    private static async Task<string> GetAccessToken(string baseURL, string sendToken, string clientId, string clientSecret)
    {
        try
        {
            using (var client = new HttpClient())
            {

                string uri = baseURL + tokenURI;
                client.BaseAddress = new Uri(uri);

                //MessageBox.Show(uri, "access token uri");

                client.DefaultRequestHeaders.Accept.Clear();
                client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/x-www-form-urlencoded"));
                client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Basic", sendToken);

                List<KeyValuePair<string, string>> postData = new List<KeyValuePair<string, string>>();
                postData.Add(new KeyValuePair<string, string>("grant_type", "client_credentials"));
                FormUrlEncodedContent content = new FormUrlEncodedContent(postData);

                // Post to the Server and parse the response.
                HttpResponseMessage response = await client.PostAsync(new Uri(uri), content);

                response.EnsureSuccessStatusCode();
                string jsonString = await response.Content.ReadAsStringAsync();

                //MessageBox.Show(jsonString, "jsonstring");

                //Deserialize our JSON
                var accessTokenObject = JsonHelper.JsonDeserialize<AccessToken>(jsonString);

                // return the Access Token.
                var token = accessTokenObject.access_token;
                //MessageBox.Show(token, "access token");
                return token;
            }
        }
        catch (Exception ex)
        {
            //WriteToDatabase(1, "GetAccessToken", ex.Message);
            //MessageBox.Show(ex.Message);
            //MessageBox.Show(ex.StackTrace);
            //return null;
            throw ex;
        }
    }

    public string EncodeTo64(string toEncode)
    {
        byte[] toEncodeAsBytes = System.Text.ASCIIEncoding.ASCII.GetBytes(toEncode);
        string returnValue = System.Convert.ToBase64String(toEncodeAsBytes);
        return returnValue;

    }
    public class JsonHelper
    {
        /// <summary>
        /// JSON Serialization
        /// </summary>
        public static string JsonSerializer<T>(T t)
        {
            DataContractJsonSerializer ser = new DataContractJsonSerializer(typeof(T));
            MemoryStream ms = new MemoryStream();
            ser.WriteObject(ms, t);
            string jsonString = Encoding.UTF8.GetString(ms.ToArray());
            ms.Close();
            return jsonString;
        }
        /// <summary>
        /// JSON Deserialization
        /// </summary>
        public static T JsonDeserialize<T>(string jsonString)
        {
            DataContractJsonSerializer ser = new DataContractJsonSerializer(typeof(T));
            MemoryStream ms = new MemoryStream(Encoding.UTF8.GetBytes(jsonString));
            T obj = (T)ser.ReadObject(ms);
            return obj;
        }
    }

    public class StudentSchedule
    {
        public string StudentID { get; set; }
        public string ClassID { get; set; }

    }

    public class AccessToken
    {
        public string access_token { get; set; }
        public string token_type { get; set; }
        public string expires_in { get; set; }
    }

    public class FileSize
    {
        public string count { get; set; }

    }



    public DataTable JsonStringToDataTable(string jsonString)
    {
        try
        {
            DataTable dt = new DataTable();
            string[] jsonStringArray = Regex.Split(jsonString.Replace("[", "").Replace("]", ""), "},{");
            List<string> ColumnsName = new List<string>();
            foreach (string jSA in jsonStringArray)
            {
                string[] jsonStringData = Regex.Split(jSA.Replace("{", "").Replace("}", ""), ",");
                foreach (string ColumnsNameData in jsonStringData)
                {
                    try
                    {
                        int idx = ColumnsNameData.IndexOf(":");
                        string ColumnsNameString = ColumnsNameData.Substring(0, idx - 1).Replace("\"", "");
                        if (!ColumnsName.Contains(ColumnsNameString))
                        {
                            ColumnsName.Add(ColumnsNameString);
                        }
                    }
                    catch //(Exception ex)
                    {
                        WriteToDatabase(1, "JsonStringToDataTable: Columns", (string.Format("Error Parsing Column Name : {0}", ColumnsNameData)));
                    }
                }
                break;
            }
            foreach (string AddColumnName in ColumnsName)
            {
                dt.Columns.Add(AddColumnName);
            }
            foreach (string jSA in jsonStringArray)
            {
                string[] RowData = Regex.Split(jSA.Replace("{", "").Replace("}", ""), ",");
                DataRow nr = dt.NewRow();
                foreach (string rowData in RowData)
                {
                    try
                    {
                        int idx = rowData.IndexOf(":");
                        string RowColumns = rowData.Substring(0, idx - 1).Replace("\"", "").Replace("\\", "");
                        string RowDataString = rowData.Substring(idx + 1).Replace("\"", "").Replace("\\", "");
                        nr[RowColumns] = RowDataString;
                    }
                    catch //(Exception ex)
                    {
                        WriteToDatabase(1, "JsonStringToDataTable: For each row", (string.Format("Error Parsing Row  Name : {0}", rowData)));
                        continue;
                    }
                }
                dt.Rows.Add(nr);
            }
            return dt;
        }
        catch (Exception ex)
        {
            WriteToDatabase(1, "JsonStringToDataTable", ex.Message);
            return null;
        }
    }

    public string cleanJsonString(string jsonString)
    {

        jsonString = jsonString.Replace("{\"record\":[", "");
        jsonString = jsonString.Replace("],\"@extensions\":\"\"", "");

        return jsonString;
    }


    public void WriteToDatabase(int Error, string Area, string LogInfo)
    {
        try
        {
            //MessageBox.Show("WriteToDatabase");
            var ConnString = Connections.PSDB.ConnectionString;

            using (SqlConnection conn = new SqlConnection(Connections.PSDB.ConnectionString))
            {
                if (conn.State != ConnectionState.Open) conn.Open();
                //string insertText = "Insert into PSLog (ClientUID, FileType, Area, LogInfo) Values (@ClientUID, @FileType, @Area, @LogInfo ) ";
                SqlCommand cmd = new SqlCommand("spLogInfo", conn);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("@ClientUID", SqlDbType.Int).Value = Variables.ClientID;
                cmd.Parameters.Add("@Error", SqlDbType.Int).Value = Error;
                cmd.Parameters.Add("@FileType", SqlDbType.VarChar, 50).Value = processType;
                cmd.Parameters.Add("@Area", SqlDbType.VarChar, 100).Value = Area;
                cmd.Parameters.Add("@LogInfo", SqlDbType.VarChar, 1000).Value = LogInfo;
                cmd.ExecuteNonQuery();
            }
        }
        catch //(Exception ex)
        {
            throw;
        }
    }
}




]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[packages.config]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="Newtonsoft.Json" version="12.0.3" targetFramework="net45" />
</packages>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_57087533ec3c475197ee7653fd27a2a9.Properties.Settings.get_Default():SC_57087533ec3c475197ee7653fd27a2a9.Properties.Sett" +
    "ings")]

namespace SC_57087533ec3c475197ee7653fd27a2a9.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_57087533ec3c475197ee7653fd27a2a9.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{6E3DB39C-C786-46D5-83F1-75185127A49C}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_57087533ec3c475197ee7653fd27a2a9</RootNamespace>
    <AssemblyName>SC_57087533ec3c475197ee7653fd27a2a9</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Newtonsoft.Json, Version=12.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <HintPath>C:\Users\nblakely\AppData\Local\Temp\Vsta\SSIS_SC120\VstacsQ0uAhdqUy24CMRioW_IA\packages\Newtonsoft.Json.12.0.3\lib\net45\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Runtime.Serialization" />
    <Reference Include="System.Web.Extensions" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
      <DesignTime>True</DesignTime>
    </Compile>
    <None Include="packages.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String StudentID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool StudentID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ClassID
    {
        set
        {
            this[1] = value;
        }
    }
    public bool ClassID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_57087533ec3c475197ee7653fd27a2a9</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_57087533ec3c475197ee7653fd27a2a9</msb:DisplayName>
		<msb:ProjectId>{BA08928F-3EC8-4245-9A1E-7498A0A2C7D9}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_57087533ec3c475197ee7653fd27a2a9.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="packages.config"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_57087533ec3c475197ee7653fd27a2a9")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_57087533ec3c475197ee7653fd27a2a9")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_57087533ec3c475197ee7653fd27a2a9.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_57087533ec3c475197ee7653fd27a2a9.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_57087533ec3c475197ee7653fd27a2a9.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_57087533ec3c475197ee7653fd27a2a9.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_57087533ec3c475197ee7653fd27a2a9.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_57087533ec3c475197ee7653fd27a2a9.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[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
uQA9CksDmQB7CT4BEQHgER4BFADqC4ECFADIEPEAFAAfBSEAHAA8A1YCHADqC4ECHADIEPEAHAAf
BSEAyQIKDugCmQIzC54DdAAKDgYAfAAKDrkDdAAkA/EAKQEKDsEDJABzAGYGLgALAAMFLgATAAwF
LgAbACsFLgAjADQFLgArAF0FLgAzAF0FLgA7AF0FLgBDADQFLgBLAGMFLgBTAF0FLgBbAHoFQwBj
AGEGgABrAMQFoABrAPEFwABrABoG4ABrADwG4wCbAGEGYQF7AGEGgQF7AGEGiQGjACsFoQF7AGEG
owF7AGEGqQGjACsFwQF7AGEGwwF7AGEG4QF7AGEG4wF7AGEGAQJ7AGEGAwJ7AGEGIQJ7AGEGwAV7
AGEG4AV7AGEGAAZ7AGEGIAZ7AGEGYAZ7AGEGgAZ7AGEGoAZ7AGEGwAZ7AGEG4AZ7AGEGAAd7AGEG
QAd7AGEGYAd7AGEGwAeTAGEGAAiTAGEGQAiTAGEGgAiTAGEGLgBdAHIAhwCoAEIBkQHsARQChwJQ
A4cDAwABAAUABQAGAAYABwAMAAgADgAKAA8ACwARAAwAFAAAAFsC4AQAAPoJ5AQAAEEC4AQAAOcJ
5AQAACwC6AQAAGkC7gQAAKcC4AQAAOYE4AQAAH4Q4AQAAK4N4AQAAOwI4AQAAPAM8gQAAOwF+AQA
ALYQ/gQAAFsC4AQAAEEC4AQAAJwK4AQAALUF4AQAAMEK4AQAAHcR4AQBAA8AAwABABAABQABABEA
BwABABIACQACABwACwACAB4ADQACAB8ADwACACAAEQACACEAEwACACIAFQACACMAFwACACUAGQAC
ACYAGwABACcAGwACACgAHQACAC4AHwABAC8AHwACADAAIQABADEAIQACADMAIwABADQAIwACADUA
JQABADYAJQACADcAJwABADgAJwACADoAKQABADsAKQANAHoAIQANAHwAIwAOAH4AIQAOAIAAIwAP
AIIAIQAPAIQAIwAQAIYAIQAQAIgAIwA4AGcAfADaAAYB8QFBAlACawJxAtkCBwMPA6UDsQMEgAAA
AQAAAMoc/moAAAAAAAD7AQAABAAAAAAAAAAAAAAA7APbAgAAAAAMAAAAAAAAAAAAAAD1A4gRAAAA
AAQAAAAAAAAAAAAAAOwDwAUAAAAABAAAAAAAAAAAAAAA7AO5AgAAAAAEAAAAAAAAAAAAAAD+A58M
AAAAAAwAAAAAAAAAAAAAAPUDsxEAAAAADAAAAAAAAAAAAAAA9QNYDAAAAAAEAAAAAAAAAAAAAADs
A08KAAAAAAwAAAAAAAAAAAAAAPUDewwAAAAABAAAAAAAAAAAAAAA7AMWCwAAAAAAAAAAAQAAAGUO
AAAJAAIACgACAAsAAgAMAAIADQACAA4AAgAPAAIAEAACAAAAAABXALICAAAAAFkAsgIzAE8AOQBt
AD8AggA/AJEA0wBhAtMAdwIHARcDBwE3AyEBbAMhAXgDWACCAyEB0QMhAd0DWADnAwAAAAAASURU
U0NvbXBvbmVudE1ldGFEYXRhMTAwAElEVFNWYXJpYWJsZTEwMABJRFRTUnVudGltZUNvbm5lY3Rp
b25Db2xsZWN0aW9uMTAwAElEVFNSdW50aW1lQ29ubmVjdGlvbjEwMABJRFRTQ29ubmVjdGlvbk1h
bmFnZXIxMDAASURUU1ZhcmlhYmxlczEwMABJRFRTRXZhbHVhdG9yQ29udGV4dDEwMAA8PnVfXzEA
SUVudW1lcmFibGVgMQBUYXNrYDEASHR0cEhlYWRlclZhbHVlQ29sbGVjdGlvbmAxAEFzeW5jVGFz
a01ldGhvZEJ1aWxkZXJgMQBUYXNrQXdhaXRlcmAxAExpc3RgMQBUb0ludDMyADxiYXNlVVJMPjVf
XzIAPHBhZ2VTaXplPjVfXzIAPGNsaWVudD41X18yADw+dV9fMgBLZXlWYWx1ZVBhaXJgMgA8YWNj
ZXNzVG9rZW4+NV9fMwA8cGFnZXM+NV9fMwBFbmNvZGVUbzY0ADxpPjVfXzQAPHBhZ2VudW0+NV9f
NQA8UHJvY2Vzc1N0dWRlbnRTY2hlZHVsZT5kX182ADxHZXRTdHVkZW50U2NoZWR1bGU+ZF9fNwBn
ZXRfVVRGOAA8R2V0RmlsZVNpemU+ZF9fOAA8R2V0QWNjZXNzVG9rZW4+ZF9fOQBTQ181NzA4NzUz
M2VjM2M0NzUxOTdlZTc2NTNmZDI3YTJhOQA8TW9kdWxlPgBnZXRfUFNEQgBnZXRfQ2xhc3NJRABz
ZXRfQ2xhc3NJRABnZXRfU3R1ZGVudElEAHNldF9TdHVkZW50SUQAZ2V0X0NsaWVudElEAEdldE91
dHB1dElEAGdldF9BU0NJSQB0b2tlblVSSQBiYXNlVVJMAFN5c3RlbS5JTwBnZXRfQ2xpZW50SURQ
UwBUAEFyZWEAU3lzdGVtLkRhdGEAZ2V0X0NvbXBvbmVudE1ldGFEYXRhAG1zY29ybGliAFN5c3Rl
bS5Db2xsZWN0aW9ucy5HZW5lcmljAFJlYWRBc1N0cmluZ0FzeW5jAFBvc3RBc3luYwBjbGllbnRJ
ZABBZGQATWFya091dHB1dHNGaW5pc2hlZABBd2FpdFVuc2FmZU9uQ29tcGxldGVkAGdldF9Jc0Nv
bXBsZXRlZAA8Q2xhc3NJRD5rX19CYWNraW5nRmllbGQAPFN0dWRlbnRJRD5rX19CYWNraW5nRmll
bGQAPHRva2VuX3R5cGU+a19fQmFja2luZ0ZpZWxkADxhY2Nlc3NfdG9rZW4+a19fQmFja2luZ0Zp
ZWxkADxleHBpcmVzX2luPmtfX0JhY2tpbmdGaWVsZAA8Y291bnQ+a19fQmFja2luZ0ZpZWxkAERi
Q29tbWFuZABTcWxDb21tYW5kAFJlcGxhY2UAZGVmYXVsdEluc3RhbmNlAEVuc3VyZVN1Y2Nlc3NT
dGF0dXNDb2RlAHRvRW5jb2RlAGdldF9NZXNzYWdlAEh0dHBSZXNwb25zZU1lc3NhZ2UASnNvblN0
cmluZ1RvRGF0YVRhYmxlAElEaXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9t
SGFuZGxlAFByb2Nlc3NTdHVkZW50U2NoZWR1bGUAR2V0U3R1ZGVudFNjaGVkdWxlAGdldF9DbGll
bnROYW1lAEdldFJ1bnRpbWVDb25uZWN0aW9uQnlOYW1lAElBc3luY1N0YXRlTWFjaGluZQBTZXRT
dGF0ZU1hY2hpbmUAc3RhdGVNYWNoaW5lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5l
AFNxbERiVHlwZQBzZXRfQ29tbWFuZFR5cGUAVmFsdWVUeXBlAFNlY3VyaXR5UHJvdG9jb2xUeXBl
AHByb2Nlc3NUeXBlAGdldF90b2tlbl90eXBlAHNldF90b2tlbl90eXBlAFN5c3RlbS5Db3JlAGdl
dF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBJbnRlcm5hbERhdGFDb2xsZWN0
aW9uQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBXcml0ZVRvRGF0YWJhc2UAQ2xvc2UARGlz
cG9zZQBUcnlQYXJzZQBDcmVhdGUAZ2V0X1N0YXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbm5l
Y3Rpb25TdGF0ZQA8PjFfX3N0YXRlAER5bmFtaWNBdHRyaWJ1dGUAQ29tcGlsZXJHZW5lcmF0ZWRB
dHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRl
AEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzeW5jU3Rh
dGVNYWNoaW5lQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1l
d29ya0F0dHJpYnV0ZQBEZWJ1Z2dlckhpZGRlbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRp
b25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4
YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdo
dEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJs
eUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0
ZQBQb3N0RXhlY3V0ZQBzZXRfVmFsdWUAQXV0aGVudGljYXRpb25IZWFkZXJWYWx1ZQBNZWRpYVR5
cGVXaXRoUXVhbGl0eUhlYWRlclZhbHVlAHZhbHVlAHNldF9FeHBlY3QxMDBDb250aW51ZQBnZXRf
UGFnZVNpemUAR2V0RmlsZVNpemUASnNvbkRlc2VyaWFsaXplAEluZGV4T2YARW5jb2RpbmcAU3lz
dGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb0Jhc2U2NFN0cmluZwBnZXRfQ29ubmVjdGlvblN0cmlu
ZwBjbGVhbkpzb25TdHJpbmcAanNvblN0cmluZwBUb1N0cmluZwBHZXRTdHJpbmcAU3Vic3RyaW5n
AFVyaQBnZXRfVGFzawBTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0NfNTcwODc1MzNlYzNjNDc1MTk3
ZWU3NjUzZmQyN2EyYTkuZGxsAHNldF9DbGFzc0lEX0lzTnVsbABzZXRfU3R1ZGVudElEX0lzTnVs
bABTZXROdWxsAHNldF9TZWN1cml0eVByb3RvY29sAGJhc2VVcmwATWVtb3J5U3RyZWFtAGdldF9J
dGVtAHNldF9JdGVtAFN5c3RlbQByZXNvdXJjZU1hbgBzZW5kVG9rZW4AR2V0QWNjZXNzVG9rZW4A
YWNjZXNzVG9rZW4AZ2V0X2FjY2Vzc190b2tlbgBzZXRfYWNjZXNzX3Rva2VuAE9wZW4AZ2V0X2V4
cGlyZXNfaW4Ac2V0X2V4cGlyZXNfaW4AU2NyaXB0TWFpbgBEYXRhQ29sdW1uAHBMb2NhdGlvbgBT
eXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUnVudGltZS5T
ZXJpYWxpemF0aW9uAHNldF9BdXRob3JpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAERhdGFDb2x1
bW5Db2xsZWN0aW9uAGdldF9SdW50aW1lQ29ubmVjdGlvbkNvbGxlY3Rpb24AU3FsUGFyYW1ldGVy
Q29sbGVjdGlvbgBEYXRhUm93Q29sbGVjdGlvbgBEYkNvbm5lY3Rpb24AU3FsQ29ubmVjdGlvbgBJ
bnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9uAFNldEV4Y2VwdGlvbgBTeXN0ZW0uRGF0YS5Db21tb24A
U3lzdGVtLlJ1bnRpbWUuU2VyaWFsaXphdGlvbi5Kc29uAEN1bHR1cmVJbmZvAExvZ0luZm8AT3V0
cHV0TmFtZU1hcABPdXRwdXRNYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNSdW50aW1lV3JhcABN
aWNyb3NvZnQuU3FsU2VydmVyLkRUU1BpcGVsaW5lV3JhcABTeXN0ZW0uTmV0Lkh0dHAAQ2xlYXIA
PD50X19idWlsZGVyAE91dHB1dDBCdWZmZXIAUGlwZWxpbmVCdWZmZXIAU2NyaXB0QnVmZmVyAGdl
dF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0Nvbm5lY3Rpb25NYW5hZ2VyAFNlcnZpY2VQb2ludE1hbmFn
ZXIASnNvbkhlbHBlcgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lLldyYXBwZXIATWlj
cm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUuV3JhcHBlcgBEYlBhcmFtZXRlcgBTcWxQYXJh
bWV0ZXIAR2V0QXdhaXRlcgBnZXRfQ2xpZW50U2VydmVyAERhdGFDb250cmFjdEpzb25TZXJpYWxp
emVyAFhtbE9iamVjdFNlcmlhbGl6ZXIARXJyb3IASUVudW1lcmF0b3IAR2V0RW51bWVyYXRvcgAu
Y3RvcgAuY2N0b3IAT3V0cHV0SURzAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5D
b21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU0NfNTcwODc1MzNlYzNjNDc1MTk3ZWU3
NjUzZmQyN2EyYTkuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVz
AFNDXzU3MDg3NTMzZWMzYzQ3NTE5N2VlNzY1M2ZkMjdhMmE5LlByb3BlcnRpZXMAZ2V0X1JlYWRP
bmx5VmFyaWFibGVzAEdldEJ5dGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhl
cwBTZXR0aW5ncwA8PjRfX3RoaXMAU3lzdGVtLlRocmVhZGluZy5UYXNrcwBDb250YWlucwBnZXRf
Q29sdW1ucwBTeXN0ZW0uVGV4dC5SZWd1bGFyRXhwcmVzc2lvbnMAU3lzdGVtLkNvbGxlY3Rpb25z
AENvbm5lY3Rpb25zAFN5c3RlbS5OZXQuSHR0cC5IZWFkZXJzAEh0dHBIZWFkZXJzAEh0dHBSZXF1
ZXN0SGVhZGVycwBnZXRfRGVmYXVsdFJlcXVlc3RIZWFkZXJzAEJ1ZmZlcnMAZ2V0X1BhcmFtZXRl
cnMAc2V0X0Jhc2VBZGRyZXNzAEZpbmlzaE91dHB1dHMAZ2V0X1Jvd3MAQ3JlYXRlTmV3T3V0cHV0
Um93cwBDb25jYXQARm9ybWF0AFJlYWRPYmplY3QAV3JpdGVPYmplY3QAU3lzdGVtLk5ldABnZXRf
Q2xpZW50U2VjcmV0AGNsaWVudFNlY3JldABTZXRFbmRPZlJvd3NldABXYWl0AFNwbGl0AGdldF9E
ZWZhdWx0AEdldFJlc3VsdABTZXRSZXN1bHQAU3lzdGVtLkRhdGEuU3FsQ2xpZW50AEh0dHBDbGll
bnQAVXNlckNvbXBvbmVudABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9uZW50AGdldF9DdXJy
ZW50AGdldF9Db250ZW50AEZvcm1VcmxFbmNvZGVkQ29udGVudABTdHJpbmdDb250ZW50AEh0dHBD
b250ZW50AGdldF9jb3VudABzZXRfY291bnQAZ2V0X0FjY2VwdABNaWNyb3NvZnQuU3FsU2VydmVy
LlR4U2NyaXB0AFN0YXJ0AENvbnZlcnQATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QA
UHJpbWVPdXRwdXQATW92ZU5leHQAU3lzdGVtLlRleHQAR2V0VmFsdWVXaXRoQ29udGV4dABTY3Jp
cHRDb21wb25lbnRFdmFsQ29udGV4dABnZXRfRXZhbHVhdG9yQ29udGV4dABEYXRhUm93AEFkZFJv
dwBOZXdSb3cAUmVnZXgAVG9BcnJheQBnZXRfQXNzZW1ibHkARXhlY3V0ZU5vblF1ZXJ5AAAAAANb
AAABAANdAAAHfQAsAHsAAAN7AAADfQAAAywAAAM6AAADIgAAPUoAcwBvAG4AUwB0AHIAaQBuAGcA
VABvAEQAYQB0AGEAVABhAGIAbABlADoAIABDAG8AbAB1AG0AbgBzAAA/RQByAHIAbwByACAAUABh
AHIAcwBpAG4AZwAgAEMAbwBsAHUAbQBuACAATgBhAG0AZQAgADoAIAB7ADAAfQAAA1wAAEdKAHMA
bwBuAFMAdAByAGkAbgBnAFQAbwBEAGEAdABhAFQAYQBiAGwAZQA6ACAARgBvAHIAIABlAGEAYwBo
ACAAcgBvAHcAADtFAHIAcgBvAHIAIABQAGEAcgBzAGkAbgBnACAAUgBvAHcAIAAgAE4AYQBtAGUA
IAA6ACAAewAwAH0AACtKAHMAbwBuAFMAdAByAGkAbgBnAFQAbwBEAGEAdABhAFQAYQBiAGwAZQAA
F3sAIgByAGUAYwBvAHIAZAAiADoAWwAAJV0ALAAiAEAAZQB4AHQAZQBuAHMAaQBvAG4AcwAiADoA
IgAiAAATcwBwAEwAbwBnAEkAbgBmAG8AABVAAEMAbABpAGUAbgB0AFUASQBEAAANQABFAHIAcgBv
AHIAABNAAEYAaQBsAGUAVAB5AHAAZQAAC0AAQQByAGUAYQAAEUAATABvAGcASQBuAGYAbwAAay8A
dwBzAC8AcwBjAGgAZQBtAGEALwBxAHUAZQByAHkALwBjAG8AbQAuAGgAYQB5AGUAcwBzAG8AZgB0
AC4AVABJAFAAVwBlAGIALgBzAHQAdQBkAGUAbgB0AFMAYwBoAGUAZAB1AGwAZQAAKS8AbwBhAHUA
dABoAC8AYQBjAGMAZQBzAHMAXwB0AG8AawBlAG4ALwAAH3MAdAB1AGQAZQBuAHQAUwBjAGgAZQBk
AHUAbABlAACAm0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABi
AGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwA
dQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAEU8AdQB0
AHAAdQB0ACAAMAAACVAAUwBEAEIAABFDAGwAaQBlAG4AdABJAEQAABVDAGwAaQBlAG4AdABJAEQA
UABTAAAVQwBsAGkAZQBuAHQATgBhAG0AZQAAGUMAbABpAGUAbgB0AFMAZQBjAHIAZQB0AAAZQwBs
AGkAZQBuAHQAUwBlAHIAdgBlAHIAABFQAGEAZwBlAFMAaQB6AGUAAHFTAEMAXwA1ADcAMAA4ADcA
NQAzADMAZQBjADMAYwA0ADcANQAxADkANwBlAGUANwA2ADUAMwBmAGQAMgA3AGEAMgBhADkALgBQ
AHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAABlBAGMAYwBlAHMAcwAgAFQA
bwBrAGUAbgAAOUcAZQB0AEEAYwBjAGUAcwBzAFQAbwBrAGUAbgAgAHIAZQB0AHUAcgBuAGUAZAAg
AG4AdQBsAGwAABNGAGkAbABlACAAUwBpAHoAZQAAM0cAZQB0AEYAaQBsAGUAUwBpAHoAZQAgAHIA
ZQB0AHUAcgBuAGUAZAAgAG4AdQBsAGwAAC1QAHIAbwBjAGUAcwBzAFMAdAB1AGQAZQBuAHQAUwBj
AGgAZQBkAHUAbABlAAAVPwBwAGEAZwBlAHMAaQB6AGUAPQAADSYAcABhAGcAZQA9AAAhYQBwAHAA
bABpAGMAYQB0AGkAbwBuAC8AagBzAG8AbgAAG0EAdQB0AGgAbwByAGkAegBhAHQAaQBvAG4AAA9C
AGUAYQByAGUAcgAgAAATcwB0AHUAZABlAG4AdABpAGQAAA9jAGwAYQBzAHMASQBEAABTRwBlAHQA
UwB0AHUAZABlAG4AdABTAGMAaABlAGQAdQBsAGUAIAAtACAAUgBvAHcAIABDAG8AdQBuAHQAIABQ
AGEAZwBlACAATgB1AG0AOgAgAAElRwBlAHQAUwB0AHUAZABlAG4AdABTAGMAaABlAGQAdQBsAGUA
AA0vAGMAbwB1AG4AdAAAF1IAZQBjAG8AcgBkAEMAbwB1AG4AdAAAF0cAZQB0AEYAaQBsAGUAUwBp
AHoAZQAAQ2EAcABwAGwAaQBjAGEAdABpAG8AbgAvAHgALQB3AHcAdwAtAGYAbwByAG0ALQB1AHIA
bABlAG4AYwBvAGQAZQBkAAELQgBhAHMAaQBjAAAVZwByAGEAbgB0AF8AdAB5AHAAZQAAJWMAbABp
AGUAbgB0AF8AYwByAGUAZABlAG4AdABpAGEAbABzAAAAAJPgGTNxnGRPuhICHYGDnNkABCABAQgD
IAABBSABARERBCABAQ4FIAEBEjkFIAEBHQIFIAEBEnUGIAEBEYC5CQcCETQVEUUBCAUVEUUBCAgA
ABURRQETAAcwAQEBEB4ABAoBETQIIAAVEkEBEwAJBwIROBURRQEcBRURRQEcBAoBETgJBwIRPBUR
RQEOBRURRQEOBAoBETwJBwIRQBURRQEOBAoBEUAFAAASgMkFIAEdBQ4FAAEOHQUkBxMSUR0OFRJV
AQ4dDggdDggOCA4VEVkBDg4SXQ4IDg4SURJhBSACDg4OBgACHQ4ODgUVElUBDgQgAQgOBSACDggI
BSABAhMABSABARMABQACDg4cCCAAFRFZARMABRURWQEOBCAAEwAFIAASgNkGIAESgN0OAyAAAgQg
ABJdBCABDggFIAIBDhwFIAASgOEFIAEBEl0DIAAOBAcBEmUFIAARgOkGIAIBDhJlBiABARGA9QUg
ABKA+QkgAhKA/Q4RgQEEIAEBHAogAxKA/Q4RgQEIAyAACAsgAwESgJ0dCBKAoQUgAgEIHAMHAQgH
AAIIEoChDgUgAR0ICAUgABKBEQUgABKBFQYgARKBGQ4FIAASgKkFIAASgR0GIAESgSEcBQAAEoEl
BiABHBKBKQcAARI5EYEtBSAAEoExByACAQ4SgTEEBwESaQIeAAcgAgESgT0cBCAAHQUFIAEOHQUF
IAEBHQUGIAEcEoE9GQcMCBIICA4ODg4OFRF5AQ4VEXkBHBJhEmEEAAEBAgYAAQERgUUGAAMODg4O
BRUSQQEOCCAAFRF5ARMABRUReQEOCjACAgEQHgAQHgEJCgIVEXkBDhE0BRUSQQEcBRUReQEcCQoC
FRF5ARwRNAUgAQESYScHEQgSCBwICA4SgIEOCBUReQESgIUVEXkBDhKAiRJdEoCNCBJhEmEEAAEI
DgYAAgIOEAgFAAEOHQ4GIAEBEoFJBSAAEoFNCiAAFRKBUQESgVUIFRKBUQESgVUFAAIODg4FIAIB
Dg4IIAMBDhKAyQ4PIAIVEkEBEoCFEoFJEoFdBxUSQQESgIUHFRF5ARKAhQsKAhUReQESgIUROAUg
ABKAhQUgABKBXQcgABUSQQEOCQoCFRF5AQ4ROAUgABKAiQMgABwEIAEcDhsHCggSCA4OEoCBDhUR
eQESgIUVEXkBDhJhEmELCgIVEXkBEoCFETwJCgIVEXkBDhE8BAoBEjAWBwcIDg4SgJUVEXkBEoCF
FRF5AQ4SYQYgAQESgWULFRJVARURgWkCDg4HFRGBaQIODgcgAgETABMBDyABARUSgW0BFRGBaQIO
DgsKAhUReQESgIURQAkKAhUReQEOEUAECgESLAi3elxWGTTgiQiJhF3NgIDMkQiwP19/EdUKOgIG
DgMGEhQDBhIYAwYSDAQGEoClBAYSgLEEBhKAtQMGEiACBggGBhURRQEIAwYSCAYGFRF5AQ4GBhUR
eQEcBgYVEUUBHAgGFRF5ARKAhQYGFRFFAQ4EBhKAkQcgABUSQQEICiADFRJBARwODg4JIAIVEkEB
Dg4OCwAEFRJBAQ4ODg4OBCABDg4FIAESUQ4GIAMBCA4OAwAAAQQgAQECDSAEAQgdCB0SgJ0SgKEG
IAEBEoClBQAAEoCxBQAAEoC1BgABARKAtQQAABIgBhABAQ4eAAYQAQEeAA4DKAAOAygAAgUoABKA
qQMoAAgFCAASgLEFCAASgLUECAASIAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRo
cm93cwEIAQACAAAAAAAoAQAjU0NfNTcwODc1MzNlYzNjNDc1MTk3ZWU3NjUzZmQyN2EyYTkAAAUB
AAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMAAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC41
AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjUsAQAnU2NyaXB0TWFp
bis8UHJvY2Vzc1N0dWRlbnRTY2hlZHVsZT5kX182AAAoAQAjU2NyaXB0TWFpbis8R2V0U3R1ZGVu
dFNjaGVkdWxlPmRfXzcAACEBABxTY3JpcHRNYWluKzxHZXRGaWxlU2l6ZT5kX184AAAkAQAfU2Ny
aXB0TWFpbis8R2V0QWNjZXNzVG9rZW4+ZF9fOQAABAEAAAAKAQACAAAAAAEAAAAAALQAAADOyu++
AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNp
b249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRl
MDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFE
ULQAAAD8ZgAAAAAAAAAAAAAWZwAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACGcAAAAAAAAAAAAA
AABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAA
AAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYgAAAGgQAAAAAAAAAAAAAGgQ0AAAA
VgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEAAAABAP5qyhwAAAEA/mrK
HD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8A
AAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBHoDAAABAFMAdAByAGkAbgBn
AEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAwADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0A
ZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBG
AGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8ANQA3ADAAOAA3ADUAMwAzAGUA
YwAzAGMANAA3ADUAMQA5ADcAZQBlADcANgA1ADMAZgBkADIANwBhADIAYQA5AAAAPgAPAAEARgBp
AGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADcAMwA3ADAALgAyADcAMwA5ADAAAAAAAHAA
KAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8ANQA3ADAAOAA3ADUAMwAzAGUAYwAz
AGMANAA3ADUAMQA5ADcAZQBlADcANgA1ADMAZgBkADIANwBhADIAYQA5AC4AZABsAGwAAABIABIA
AQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAg
ADIAMAAyADAAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgA
KAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwA1ADcAMAA4ADcANQAz
ADMAZQBjADMAYwA0ADcANQAxADkANwBlAGUANwA2ADUAMwBmAGQAMgA3AGEAMgBhADkALgBkAGwA
bAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8ANQA3ADAAOAA3ADUAMwAz
AGUAYwAzAGMANAA3ADUAMQA5ADcAZQBlADcANgA1ADMAZgBkADIANwBhADIAYQA5AAAAQgAPAAEA
UAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA3ADMANwAwAC4AMgA3ADMAOQAw
AAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA3ADMA
NwAwAC4AMgA3ADMAOQAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAYAAADAAAACg3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_57087533ec3c475197ee7653fd27a2a9</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::ClientID,User::ClientIDPS,User::ClientName,User::ClientSecret,User::ClientServer,User::PageSize</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">9ed65264e005660c67d1ab6964aafe85</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">b17539ee4143533165505668e85ef05df2ffd931</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Loop thru Clients\Student Schedule\Script Component.Connections[PSDB]"
                      connectionManagerID="Package.ConnectionManagers[ADO.NET_PowerSchoolAPIPlugIn]"
                      connectionManagerRefId="Package.ConnectionManagers[ADO.NET_PowerSchoolAPIPlugIn]"
                      name="PSDB" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Loop thru Clients\Student Schedule\Script Component.Outputs[Output 0]"
                      hasSideEffects="true"
                      name="Output 0">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop thru Clients\Student Schedule\Script Component.Outputs[Output 0].Columns[StudentID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Student Schedule\Script Component.Outputs[Output 0].Columns[StudentID]"
                          name="StudentID" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Student Schedule\Script Component.Outputs[Output 0].Columns[ClassID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Student Schedule\Script Component.Outputs[Output 0].Columns[ClassID]"
                          name="ClassID" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Loop thru Clients\Student Schedule.Paths[Derived Column Output]"
                  endId="Package\Loop thru Clients\Student Schedule\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Loop thru Clients\Student Schedule\Derived Column.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Loop thru Clients\Student Schedule.Paths[Output 0]"
                  endId="Package\Loop thru Clients\Student Schedule\Derived Column.Inputs[Derived Column Input]"
                  name="Output 0"
                  startId="Package\Loop thru Clients\Student Schedule\Script Component.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Loop thru Clients\Teacher Schedule"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:Disabled="True"
          DTS:DTSID="{9eed309a-b0f9-45f8-95c6-c85e62b554a1}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Teacher Schedule"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">@[User::ProcessTeacherSchedule]==0</DTS:PropertyExpression>
          <DTS:ObjectData>
            <pipeline
              defaultBufferMaxRows="50000"
              version="1">
              <components>
                <component
                  refId="Package\Loop thru Clients\Teacher Schedule\Derived Column"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Loop thru Clients\Teacher Schedule\Derived Column.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Loop thru Clients\Teacher Schedule\Derived Column.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Loop thru Clients\Teacher Schedule\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop thru Clients\Teacher Schedule\Derived Column.Outputs[Derived Column Output].Columns[ClientUID]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Loop thru Clients\Teacher Schedule\Derived Column.Outputs[Derived Column Output].Columns[ClientUID]"
                          name="ClientUID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::ClientID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::ClientID]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Loop thru Clients\Teacher Schedule\Derived Column.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Loop thru Clients\Teacher Schedule\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop thru Clients\Teacher Schedule\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Teacher Schedule\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Teacher Schedule\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Teacher Schedule\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Loop thru Clients\Teacher Schedule\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[PSTeacherSchedule]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Loop thru Clients\Teacher Schedule\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[PowerSchoolAPIPlugIn]"
                      connectionManagerRefId="Package.ConnectionManagers[PowerSchoolAPIPlugIn]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Loop thru Clients\Teacher Schedule\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Loop thru Clients\Teacher Schedule\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ClientUID]"
                          cachedDataType="i4"
                          cachedName="ClientUID"
                          externalMetadataColumnId="Package\Loop thru Clients\Teacher Schedule\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientUID]"
                          lineageId="Package\Loop thru Clients\Teacher Schedule\Derived Column.Outputs[Derived Column Output].Columns[ClientUID]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Teacher Schedule\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ClassID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="ClassID"
                          externalMetadataColumnId="Package\Loop thru Clients\Teacher Schedule\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClassID]"
                          lineageId="Package\Loop thru Clients\Teacher Schedule\Script Component.Outputs[Output 0].Columns[ClassID]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Teacher Schedule\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[TeacherID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="TeacherID"
                          externalMetadataColumnId="Package\Loop thru Clients\Teacher Schedule\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TeachersID]"
                          lineageId="Package\Loop thru Clients\Teacher Schedule\Script Component.Outputs[Output 0].Columns[TeacherID]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Teacher Schedule\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientUID]"
                          dataType="i4"
                          name="ClientUID" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Teacher Schedule\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TeacherSchedulePSUID]"
                          dataType="i4"
                          name="TeacherSchedulePSUID" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Teacher Schedule\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClassID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="ClassID" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Teacher Schedule\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TeachersID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="TeachersID" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Loop thru Clients\Teacher Schedule\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Loop thru Clients\Teacher Schedule\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop thru Clients\Teacher Schedule\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Teacher Schedule\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Teacher Schedule\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Teacher Schedule\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Loop thru Clients\Teacher Schedule\Script Component"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;9"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Script Component"
                  version="9">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="33">
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[
#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces

using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.IO;
using System.Net;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Runtime.Serialization;
using System.Runtime.Serialization.Json;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading.Tasks;
using System.Web.Script.Serialization;
using System.Windows.Forms;



#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    static string pLocation = "/ws/schema/query/com.hayessoft.TIPWeb.TeacherSchedule";
    static string tokenURI = "/oauth/access_token/";
    static string processType = "TeacherSchedule";

    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();

    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */
        ProcessTeacherSchedule().Wait();
    }


    public async Task<int> ProcessTeacherSchedule()
    {
        try
        {

            // The server base address
            string baseURL = Variables.ClientServer;

            //MessageBox.Show(baseURL);

            ServicePointManager.Expect100Continue = true;
            ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;


            /// The client information used to get the OAuth Access Token from the server.
            string clientId = Variables.ClientIDPS;
            string clientSecret = Variables.ClientSecret;
            string sendToken = EncodeTo64(Variables.ClientIDPS + ":" + Variables.ClientSecret);
            //WriteToDatabase(0, "TeacherSchedule-sendToken", sendToken);
            // this will hold the Access Token returned from the server.
            //MessageBox.Show(sendToken, "sendToken");

            string accessToken = await GetAccessToken(baseURL, sendToken, clientId, clientSecret);
            //-->>>>>>>>>>>>>> Add : if returns null, stop
            if (accessToken == null)
            {
                WriteToDatabase(1, "Access Token", "GetAccessToken returned null");
                return 0;
            }
            //MessageBox.Show(accessToken, "access token");


            string FileSize = await GetFileSize(baseURL, accessToken);
            if (FileSize == null)
            {
                WriteToDatabase(1, "File Size", "GetFileSize returned null");
                return 0;
            }

            var jsonResponse = await GetTeacherSchedule(baseURL, accessToken, FileSize);

            return 0;
        }
        catch (Exception ex)
        {
            WriteToDatabase(1, "ProcessTeacherSchedule", ex.Message);
            return 0;
        }

    }


    /// <summary>
    /// Gets the list of TeacherSchedule.
    /// </summary>
    /// <param name="baseUrl">The url for the TeacherSchedule list</param>
    /// <param name="accessToken">Acquired in the previous method</param>
    /// <returns>The page of articles.</returns>
    private async Task<dynamic> GetTeacherSchedule(string baseUrl, string accessToken, string FileSize)
    {
        try
        {
            int TotalRecords;
            string pageSize = Variables.PageSize;
            int intPageSize = Convert.ToInt32(pageSize);
            //MessageBox.Show(pageSize, "page size");
            if (Int32.TryParse(FileSize, out TotalRecords))
            {
                int pages = ((TotalRecords - 1) / intPageSize) + 1;
                //MessageBox.Show(pages.ToString(), "pages");


                for (int i = 1; i <= pages; i++)
                {
                    string pagenum = i.ToString();
                    //MessageBox.Show(pagenum, "page number");

                    string uri = baseUrl + pLocation + "?pagesize=" + pageSize + "&page=" + pagenum;
                    var client = new HttpClient();

                    client.BaseAddress = new Uri(uri);

                    client.DefaultRequestHeaders.Accept.Clear();
                    client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));
                    client.DefaultRequestHeaders.Add("Authorization", "Bearer " + accessToken);

                    //MessageBox.Show(uri, "Teacher Sched uri");

                    StringContent stringContent = new StringContent("", Encoding.UTF8, "application/json");
                    //StringContent stringContent = new StringContent("page=" + pagenum, Encoding.UTF8, "application/json");
                    //string content;

                    HttpResponseMessage response = await client.PostAsync(new Uri(uri), stringContent);

                    response.EnsureSuccessStatusCode();
                    string jsonString = await response.Content.ReadAsStringAsync();
                    //MessageBox.Show(jsonString, "jsonstring");

                    jsonString = cleanJsonString(jsonString);

                    //Deserialize our JSON
                    DataTable dt = JsonStringToDataTable(jsonString);
                    int numRows = 0;


                    foreach (DataRow row in dt.Rows)
                    {
                        Output0Buffer.AddRow();
                        Output0Buffer.TeacherID = row["teacherID"].ToString().Replace("\\", "");
                        Output0Buffer.ClassID = row["classID"].ToString().Replace("\\", "");


                        numRows += 1;
                    }
                    WriteToDatabase(0, "GetTeacherSchedule - Row Count Page Num: " + pagenum, numRows.ToString());
                }
                return null;
            }
            return null;

        }
        catch (Exception ex)
        {
            WriteToDatabase(1, "GetTeacherSchedule", ex.Message);
            throw;
        }

    }


    private async Task<string> GetFileSize(string baseURL, string accessToken)
    {
        try
        {
            using (var client = new HttpClient())
            {
                string uri = baseURL + pLocation + "/count";
                client.BaseAddress = new Uri(uri);
                //MessageBox.Show(uri, "Students uri");

                client.DefaultRequestHeaders.Accept.Clear();
                client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));
                client.DefaultRequestHeaders.Add("Authorization", "Bearer " + accessToken);

                var stringContent = new StringContent("", Encoding.UTF8, "application/json");

                //Get file size
                HttpResponseMessage response = await client.PostAsync(new Uri(uri), stringContent);

                response.EnsureSuccessStatusCode();
                string jsonString = await response.Content.ReadAsStringAsync();

                //string jsonString = response.Content.ToString();//.ReadAsStringAsync();
                //MessageBox.Show(jsonString, "jsonstring");

                //Deserialize our JSON
                var FileSizeObject = JsonHelper.JsonDeserialize<FileSize>(jsonString);

                // return the Access Token.
                var FileSize = FileSizeObject.count;
                //MessageBox.Show(FileSize, "File Size");
                WriteToDatabase(0, "RecordCount", FileSize);
                return FileSize;
            }
        }
        catch (Exception ex)
        {
            //MessageBox.Show(ex.Message);
            //MessageBox.Show(ex.StackTrace);
            WriteToDatabase(1, "GetFileSize", ex.Message);
            //return null;
            throw;
        }

    }

    /// <summary>
    /// This method uses the OAuth Client Credentials Flow to get an Access Token to provide
    /// Authorization to the APIs.
    /// </summary>
    /// <returns></returns>
    private static async Task<string> GetAccessToken(string baseURL, string sendToken, string clientId, string clientSecret)
    {
        try
        {
            using (var client = new HttpClient())
            {

                string uri = baseURL + tokenURI;
                client.BaseAddress = new Uri(uri);

                //MessageBox.Show(uri, "access token uri");

                client.DefaultRequestHeaders.Accept.Clear();
                client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/x-www-form-urlencoded"));
                client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Basic", sendToken);

                List<KeyValuePair<string, string>> postData = new List<KeyValuePair<string, string>>();
                postData.Add(new KeyValuePair<string, string>("grant_type", "client_credentials"));
                FormUrlEncodedContent content = new FormUrlEncodedContent(postData);

                // Post to the Server and parse the response.
                HttpResponseMessage response = await client.PostAsync(new Uri(uri), content);

                response.EnsureSuccessStatusCode();
                string jsonString = await response.Content.ReadAsStringAsync();

                //MessageBox.Show(jsonString, "jsonstring");

                //Deserialize our JSON
                var accessTokenObject = JsonHelper.JsonDeserialize<AccessToken>(jsonString);

                // return the Access Token.
                var token = accessTokenObject.access_token;
                //MessageBox.Show(token, "access token");
                return token;
            }
        }
        catch (Exception ex)
        {
            //WriteToDatabase(1, "GetAccessToken", ex.Message);
            //MessageBox.Show(ex.Message);
            //MessageBox.Show(ex.StackTrace);
            //return null;
            throw ex;
        }
    }

    public string EncodeTo64(string toEncode)
    {
        byte[] toEncodeAsBytes = System.Text.ASCIIEncoding.ASCII.GetBytes(toEncode);
        string returnValue = System.Convert.ToBase64String(toEncodeAsBytes);
        return returnValue;

    }
    public class JsonHelper
    {
        /// <summary>
        /// JSON Serialization
        /// </summary>
        public static string JsonSerializer<T>(T t)
        {
            DataContractJsonSerializer ser = new DataContractJsonSerializer(typeof(T));
            MemoryStream ms = new MemoryStream();
            ser.WriteObject(ms, t);
            string jsonString = Encoding.UTF8.GetString(ms.ToArray());
            ms.Close();
            return jsonString;
        }
        /// <summary>
        /// JSON Deserialization
        /// </summary>
        public static T JsonDeserialize<T>(string jsonString)
        {
            DataContractJsonSerializer ser = new DataContractJsonSerializer(typeof(T));
            MemoryStream ms = new MemoryStream(Encoding.UTF8.GetBytes(jsonString));
            T obj = (T)ser.ReadObject(ms);
            return obj;
        }
    }

    public class TeacherSchedule
    {
        public string TeacherID { get; set; }
        public string ClassID { get; set; }

    }

    public class AccessToken
    {
        public string access_token { get; set; }
        public string token_type { get; set; }
        public string expires_in { get; set; }
    }

    public class FileSize
    {
        public string count { get; set; }

    }



    public DataTable JsonStringToDataTable(string jsonString)
    {
        try
        {
            DataTable dt = new DataTable();
            string[] jsonStringArray = Regex.Split(jsonString.Replace("[", "").Replace("]", ""), "},{");
            List<string> ColumnsName = new List<string>();
            foreach (string jSA in jsonStringArray)
            {
                string[] jsonStringData = Regex.Split(jSA.Replace("{", "").Replace("}", ""), ",");
                foreach (string ColumnsNameData in jsonStringData)
                {
                    try
                    {
                        int idx = ColumnsNameData.IndexOf(":");
                        string ColumnsNameString = ColumnsNameData.Substring(0, idx - 1).Replace("\"", "");
                        if (!ColumnsName.Contains(ColumnsNameString))
                        {
                            ColumnsName.Add(ColumnsNameString);
                        }
                    }
                    catch //(Exception ex)
                    {
                        WriteToDatabase(1, "JsonStringToDataTable: Columns", (string.Format("Error Parsing Column Name : {0}", ColumnsNameData)));
                    }
                }
                break;
            }
            foreach (string AddColumnName in ColumnsName)
            {
                dt.Columns.Add(AddColumnName);
            }
            foreach (string jSA in jsonStringArray)
            {
                string[] RowData = Regex.Split(jSA.Replace("{", "").Replace("}", ""), ",");
                DataRow nr = dt.NewRow();
                foreach (string rowData in RowData)
                {
                    try
                    {
                        int idx = rowData.IndexOf(":");
                        string RowColumns = rowData.Substring(0, idx - 1).Replace("\"", "").Replace("\\", "");
                        string RowDataString = rowData.Substring(idx + 1).Replace("\"", "").Replace("\\", "");
                        nr[RowColumns] = RowDataString;
                    }
                    catch //(Exception ex)
                    {
                        WriteToDatabase(1, "JsonStringToDataTable: For each row", (string.Format("Error Parsing Row  Name : {0}", rowData)));
                        continue;
                    }
                }
                dt.Rows.Add(nr);
            }
            return dt;
        }
        catch (Exception ex)
        {
            WriteToDatabase(1, "JsonStringToDataTable", ex.Message);
            return null;
        }
    }

    public string cleanJsonString(string jsonString)
    {

        jsonString = jsonString.Replace("{\"record\":[", "");
        jsonString = jsonString.Replace("],\"@extensions\":\"\"", "");


        return jsonString;
    }


    public void WriteToDatabase(int Error, string Area, string LogInfo)
    {
        try
        {
            //MessageBox.Show("WriteToDatabase");
            var ConnString = Connections.PSDB.ConnectionString;

            using (SqlConnection conn = new SqlConnection(Connections.PSDB.ConnectionString))
            {
                if (conn.State != ConnectionState.Open) conn.Open();
                //string insertText = "Insert into PSLog (ClientUID, FileType, Area, LogInfo) Values (@ClientUID, @FileType, @Area, @LogInfo ) ";
                SqlCommand cmd = new SqlCommand("spLogInfo", conn);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("@ClientUID", SqlDbType.Int).Value = Variables.ClientID;
                cmd.Parameters.Add("@Error", SqlDbType.Int).Value = Error;
                cmd.Parameters.Add("@FileType", SqlDbType.VarChar, 50).Value = processType;
                cmd.Parameters.Add("@Area", SqlDbType.VarChar, 100).Value = Area;
                cmd.Parameters.Add("@LogInfo", SqlDbType.VarChar, 1000).Value = LogInfo;
                cmd.ExecuteNonQuery();
            }
        }
        catch //(Exception ex)
        {
            throw;
        }
    }
}




]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_af8a601764c24620b46f349d337c2342.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{C4EDC755-D216-4088-AD8F-BFD38F342BBF}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_af8a601764c24620b46f349d337c2342</RootNamespace>
    <AssemblyName>SC_af8a601764c24620b46f349d337c2342</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Newtonsoft.Json, Version=12.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <HintPath>C:\Users\nblakely\AppData\Local\Temp\Vsta\SSIS_SC120\Vsta_b98dGzWa0yVrsAMDoBk3A\packages\Newtonsoft.Json.12.0.3\lib\net45\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Runtime.Serialization" />
    <Reference Include="System.Web.Extensions" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
      <DesignTime>True</DesignTime>
    </Compile>
    <None Include="packages.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[packages.config]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="Newtonsoft.Json" version="12.0.3" targetFramework="net45" />
</packages>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_af8a601764c24620b46f349d337c2342.Properties.Settings.get_Default():SC_af8a601764c24620b46f349d337c2342.Properties.Sett" +
    "ings")]

namespace SC_af8a601764c24620b46f349d337c2342.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 PSDB
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"PSDB").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public Int32 ClientID
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["ClientID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientIDPS
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientIDPS"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientSecret
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientSecret"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientServer
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientServer"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String PageSize
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["PageSize"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String TeacherID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool TeacherID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ClassID
    {
        set
        {
            this[1] = value;
        }
    }
    public bool ClassID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_af8a601764c24620b46f349d337c2342</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_af8a601764c24620b46f349d337c2342</msb:DisplayName>
		<msb:ProjectId>{84E101A3-33A1-4597-8754-6F22DD331B68}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_af8a601764c24620b46f349d337c2342.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="packages.config"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_af8a601764c24620b46f349d337c2342")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_af8a601764c24620b46f349d337c2342")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_af8a601764c24620b46f349d337c2342.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_af8a601764c24620b46f349d337c2342.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_af8a601764c24620b46f349d337c2342.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_af8a601764c24620b46f349d337c2342.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_af8a601764c24620b46f349d337c2342.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_af8a601764c24620b46f349d337c2342.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[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
uQA9CksDmQB7CT4BEQHgER4BFADqC4ECFADIEPEAFAAfBSEAHAA8A1YCHADqC4ECHADIEPEAHAAf
BSEAyQIKDugCmQIzC54DdAAKDgYAfAAKDrkDdAAkA/EAKQEKDsEDJABzAGYGLgALAAMFLgATAAwF
LgAbACsFLgAjADQFLgArAF0FLgAzAF0FLgA7AF0FLgBDADQFLgBLAGMFLgBTAF0FLgBbAHoFQwBj
AGEGgABrAMQFoABrAPEFwABrABoG4ABrADwG4wCbAGEGYQF7AGEGgQF7AGEGiQGjACsFoQF7AGEG
owF7AGEGqQGjACsFwQF7AGEGwwF7AGEG4QF7AGEG4wF7AGEGAQJ7AGEGAwJ7AGEGIQJ7AGEGwAV7
AGEG4AV7AGEGAAZ7AGEGIAZ7AGEGYAZ7AGEGgAZ7AGEGoAZ7AGEGwAZ7AGEG4AZ7AGEGAAd7AGEG
QAd7AGEGYAd7AGEGwAeTAGEGAAiTAGEGQAiTAGEGgAiTAGEGLgBdAHIAhwCoAEIBkQHsARQChwJQ
A4cDAwABAAUABQAGAAYABwAMAAgADgAKAA8ACwARAAwAFAAAAEMC4AQAAOcJ5AQAAF0C4AQAAPwJ
5AQAACwC6AQAAGkC7gQAAKcC4AQAAOYE4AQAAH4Q4AQAAK4N4AQAAOwI4AQAAPAM8gQAAOwF+AQA
ALYQ/gQAAEMC4AQAAF0C4AQAAJwK4AQAALUF4AQAAMEK4AQAAHcR4AQBAA8AAwABABAABQABABEA
BwABABIACQACABwACwACAB4ADQACAB8ADwACACAAEQACACEAEwACACIAFQACACMAFwACACUAGQAC
ACYAGwABACcAGwACACgAHQACAC4AHwABAC8AHwACADAAIQABADEAIQACADMAIwABADQAIwACADUA
JQABADYAJQACADcAJwABADgAJwACADoAKQABADsAKQANAHoAIQANAHwAIwAOAH4AIQAOAIAAIwAP
AIIAIQAPAIQAIwAQAIYAIQAQAIgAIwA4AGcAfADaAAYB8QFBAlACawJxAtkCBwMPA6UDsQMEgAAA
AQAAAMoc92gAAAAAAAAWAQAABAAAAAAAAAAAAAAA7APbAgAAAAAMAAAAAAAAAAAAAAD1A4gRAAAA
AAQAAAAAAAAAAAAAAOwDwAUAAAAABAAAAAAAAAAAAAAA7AO5AgAAAAAEAAAAAAAAAAAAAAD+A58M
AAAAAAwAAAAAAAAAAAAAAPUDsxEAAAAADAAAAAAAAAAAAAAA9QNYDAAAAAAEAAAAAAAAAAAAAADs
A08KAAAAAAwAAAAAAAAAAAAAAPUDewwAAAAABAAAAAAAAAAAAAAA7AMWCwAAAAAAAAAAAQAAAGUO
AAAJAAIACgACAAsAAgAMAAIADQACAA4AAgAPAAIAEAACAAAAAABXALICAAAAAFkAsgIzAE8AOQBt
AD8AggA/AJEA0wBhAtMAdwIHARcDBwE3AyEBbAMhAXgDWACCAyEB0QMhAd0DWADnAwAAAAAASURU
U0NvbXBvbmVudE1ldGFEYXRhMTAwAElEVFNWYXJpYWJsZTEwMABJRFRTUnVudGltZUNvbm5lY3Rp
b25Db2xsZWN0aW9uMTAwAElEVFNSdW50aW1lQ29ubmVjdGlvbjEwMABJRFRTQ29ubmVjdGlvbk1h
bmFnZXIxMDAASURUU1ZhcmlhYmxlczEwMABJRFRTRXZhbHVhdG9yQ29udGV4dDEwMAA8PnVfXzEA
SUVudW1lcmFibGVgMQBUYXNrYDEASHR0cEhlYWRlclZhbHVlQ29sbGVjdGlvbmAxAEFzeW5jVGFz
a01ldGhvZEJ1aWxkZXJgMQBUYXNrQXdhaXRlcmAxAExpc3RgMQBUb0ludDMyAFNDX2FmOGE2MDE3
NjRjMjQ2MjBiNDZmMzQ5ZDMzN2MyMzQyADxiYXNlVVJMPjVfXzIAPHBhZ2VTaXplPjVfXzIAPGNs
aWVudD41X18yADw+dV9fMgBLZXlWYWx1ZVBhaXJgMgA8YWNjZXNzVG9rZW4+NV9fMwA8cGFnZXM+
NV9fMwBFbmNvZGVUbzY0ADxpPjVfXzQAPHBhZ2VudW0+NV9fNQA8UHJvY2Vzc1RlYWNoZXJTY2hl
ZHVsZT5kX182ADxHZXRUZWFjaGVyU2NoZWR1bGU+ZF9fNwBnZXRfVVRGOAA8R2V0RmlsZVNpemU+
ZF9fOAA8R2V0QWNjZXNzVG9rZW4+ZF9fOQA8TW9kdWxlPgBnZXRfUFNEQgBnZXRfVGVhY2hlcklE
AHNldF9UZWFjaGVySUQAZ2V0X0NsYXNzSUQAc2V0X0NsYXNzSUQAZ2V0X0NsaWVudElEAEdldE91
dHB1dElEAGdldF9BU0NJSQB0b2tlblVSSQBiYXNlVVJMAFN5c3RlbS5JTwBnZXRfQ2xpZW50SURQ
UwBUAEFyZWEAU3lzdGVtLkRhdGEAZ2V0X0NvbXBvbmVudE1ldGFEYXRhAG1zY29ybGliAFN5c3Rl
bS5Db2xsZWN0aW9ucy5HZW5lcmljAFJlYWRBc1N0cmluZ0FzeW5jAFBvc3RBc3luYwBjbGllbnRJ
ZABBZGQATWFya091dHB1dHNGaW5pc2hlZABBd2FpdFVuc2FmZU9uQ29tcGxldGVkAGdldF9Jc0Nv
bXBsZXRlZAA8VGVhY2hlcklEPmtfX0JhY2tpbmdGaWVsZAA8Q2xhc3NJRD5rX19CYWNraW5nRmll
bGQAPHRva2VuX3R5cGU+a19fQmFja2luZ0ZpZWxkADxhY2Nlc3NfdG9rZW4+a19fQmFja2luZ0Zp
ZWxkADxleHBpcmVzX2luPmtfX0JhY2tpbmdGaWVsZAA8Y291bnQ+a19fQmFja2luZ0ZpZWxkAERi
Q29tbWFuZABTcWxDb21tYW5kAFJlcGxhY2UAZGVmYXVsdEluc3RhbmNlAEVuc3VyZVN1Y2Nlc3NT
dGF0dXNDb2RlAHRvRW5jb2RlAGdldF9NZXNzYWdlAEh0dHBSZXNwb25zZU1lc3NhZ2UASnNvblN0
cmluZ1RvRGF0YVRhYmxlAElEaXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9t
SGFuZGxlAFByb2Nlc3NUZWFjaGVyU2NoZWR1bGUAR2V0VGVhY2hlclNjaGVkdWxlAGdldF9DbGll
bnROYW1lAEdldFJ1bnRpbWVDb25uZWN0aW9uQnlOYW1lAElBc3luY1N0YXRlTWFjaGluZQBTZXRT
dGF0ZU1hY2hpbmUAc3RhdGVNYWNoaW5lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5l
AFNxbERiVHlwZQBzZXRfQ29tbWFuZFR5cGUAVmFsdWVUeXBlAFNlY3VyaXR5UHJvdG9jb2xUeXBl
AHByb2Nlc3NUeXBlAGdldF90b2tlbl90eXBlAHNldF90b2tlbl90eXBlAFN5c3RlbS5Db3JlAGdl
dF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBJbnRlcm5hbERhdGFDb2xsZWN0
aW9uQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBXcml0ZVRvRGF0YWJhc2UAQ2xvc2UARGlz
cG9zZQBUcnlQYXJzZQBDcmVhdGUAZ2V0X1N0YXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbm5l
Y3Rpb25TdGF0ZQA8PjFfX3N0YXRlAER5bmFtaWNBdHRyaWJ1dGUAQ29tcGlsZXJHZW5lcmF0ZWRB
dHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRl
AEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzeW5jU3Rh
dGVNYWNoaW5lQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1l
d29ya0F0dHJpYnV0ZQBEZWJ1Z2dlckhpZGRlbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRp
b25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4
YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdo
dEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJs
eUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0
ZQBQb3N0RXhlY3V0ZQBzZXRfVmFsdWUAQXV0aGVudGljYXRpb25IZWFkZXJWYWx1ZQBNZWRpYVR5
cGVXaXRoUXVhbGl0eUhlYWRlclZhbHVlAHZhbHVlAHNldF9FeHBlY3QxMDBDb250aW51ZQBnZXRf
UGFnZVNpemUAR2V0RmlsZVNpemUASnNvbkRlc2VyaWFsaXplAEluZGV4T2YARW5jb2RpbmcAU3lz
dGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb0Jhc2U2NFN0cmluZwBnZXRfQ29ubmVjdGlvblN0cmlu
ZwBjbGVhbkpzb25TdHJpbmcAanNvblN0cmluZwBUb1N0cmluZwBHZXRTdHJpbmcAU3Vic3RyaW5n
AFVyaQBnZXRfVGFzawBTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0NfYWY4YTYwMTc2NGMyNDYyMGI0
NmYzNDlkMzM3YzIzNDIuZGxsAHNldF9UZWFjaGVySURfSXNOdWxsAHNldF9DbGFzc0lEX0lzTnVs
bABTZXROdWxsAHNldF9TZWN1cml0eVByb3RvY29sAGJhc2VVcmwATWVtb3J5U3RyZWFtAGdldF9J
dGVtAHNldF9JdGVtAFN5c3RlbQByZXNvdXJjZU1hbgBzZW5kVG9rZW4AR2V0QWNjZXNzVG9rZW4A
YWNjZXNzVG9rZW4AZ2V0X2FjY2Vzc190b2tlbgBzZXRfYWNjZXNzX3Rva2VuAE9wZW4AZ2V0X2V4
cGlyZXNfaW4Ac2V0X2V4cGlyZXNfaW4AU2NyaXB0TWFpbgBEYXRhQ29sdW1uAHBMb2NhdGlvbgBT
eXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUnVudGltZS5T
ZXJpYWxpemF0aW9uAHNldF9BdXRob3JpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAERhdGFDb2x1
bW5Db2xsZWN0aW9uAGdldF9SdW50aW1lQ29ubmVjdGlvbkNvbGxlY3Rpb24AU3FsUGFyYW1ldGVy
Q29sbGVjdGlvbgBEYXRhUm93Q29sbGVjdGlvbgBEYkNvbm5lY3Rpb24AU3FsQ29ubmVjdGlvbgBJ
bnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9uAFNldEV4Y2VwdGlvbgBTeXN0ZW0uRGF0YS5Db21tb24A
U3lzdGVtLlJ1bnRpbWUuU2VyaWFsaXphdGlvbi5Kc29uAEN1bHR1cmVJbmZvAExvZ0luZm8AT3V0
cHV0TmFtZU1hcABPdXRwdXRNYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNSdW50aW1lV3JhcABN
aWNyb3NvZnQuU3FsU2VydmVyLkRUU1BpcGVsaW5lV3JhcABTeXN0ZW0uTmV0Lkh0dHAAQ2xlYXIA
PD50X19idWlsZGVyAE91dHB1dDBCdWZmZXIAUGlwZWxpbmVCdWZmZXIAU2NyaXB0QnVmZmVyAGdl
dF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0Nvbm5lY3Rpb25NYW5hZ2VyAFNlcnZpY2VQb2ludE1hbmFn
ZXIASnNvbkhlbHBlcgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lLldyYXBwZXIATWlj
cm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUuV3JhcHBlcgBEYlBhcmFtZXRlcgBTcWxQYXJh
bWV0ZXIAR2V0QXdhaXRlcgBnZXRfQ2xpZW50U2VydmVyAERhdGFDb250cmFjdEpzb25TZXJpYWxp
emVyAFhtbE9iamVjdFNlcmlhbGl6ZXIARXJyb3IASUVudW1lcmF0b3IAR2V0RW51bWVyYXRvcgAu
Y3RvcgAuY2N0b3IAT3V0cHV0SURzAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5D
b21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU0NfYWY4YTYwMTc2NGMyNDYyMGI0NmYz
NDlkMzM3YzIzNDIuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVz
AFNDX2FmOGE2MDE3NjRjMjQ2MjBiNDZmMzQ5ZDMzN2MyMzQyLlByb3BlcnRpZXMAZ2V0X1JlYWRP
bmx5VmFyaWFibGVzAEdldEJ5dGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhl
cwBTZXR0aW5ncwA8PjRfX3RoaXMAU3lzdGVtLlRocmVhZGluZy5UYXNrcwBDb250YWlucwBnZXRf
Q29sdW1ucwBTeXN0ZW0uVGV4dC5SZWd1bGFyRXhwcmVzc2lvbnMAU3lzdGVtLkNvbGxlY3Rpb25z
AENvbm5lY3Rpb25zAFN5c3RlbS5OZXQuSHR0cC5IZWFkZXJzAEh0dHBIZWFkZXJzAEh0dHBSZXF1
ZXN0SGVhZGVycwBnZXRfRGVmYXVsdFJlcXVlc3RIZWFkZXJzAEJ1ZmZlcnMAZ2V0X1BhcmFtZXRl
cnMAc2V0X0Jhc2VBZGRyZXNzAEZpbmlzaE91dHB1dHMAZ2V0X1Jvd3MAQ3JlYXRlTmV3T3V0cHV0
Um93cwBDb25jYXQARm9ybWF0AFJlYWRPYmplY3QAV3JpdGVPYmplY3QAU3lzdGVtLk5ldABnZXRf
Q2xpZW50U2VjcmV0AGNsaWVudFNlY3JldABTZXRFbmRPZlJvd3NldABXYWl0AFNwbGl0AGdldF9E
ZWZhdWx0AEdldFJlc3VsdABTZXRSZXN1bHQAU3lzdGVtLkRhdGEuU3FsQ2xpZW50AEh0dHBDbGll
bnQAVXNlckNvbXBvbmVudABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9uZW50AGdldF9DdXJy
ZW50AGdldF9Db250ZW50AEZvcm1VcmxFbmNvZGVkQ29udGVudABTdHJpbmdDb250ZW50AEh0dHBD
b250ZW50AGdldF9jb3VudABzZXRfY291bnQAZ2V0X0FjY2VwdABNaWNyb3NvZnQuU3FsU2VydmVy
LlR4U2NyaXB0AFN0YXJ0AENvbnZlcnQATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QA
UHJpbWVPdXRwdXQATW92ZU5leHQAU3lzdGVtLlRleHQAR2V0VmFsdWVXaXRoQ29udGV4dABTY3Jp
cHRDb21wb25lbnRFdmFsQ29udGV4dABnZXRfRXZhbHVhdG9yQ29udGV4dABEYXRhUm93AEFkZFJv
dwBOZXdSb3cAUmVnZXgAVG9BcnJheQBnZXRfQXNzZW1ibHkARXhlY3V0ZU5vblF1ZXJ5AAAAAANb
AAABAANdAAAHfQAsAHsAAAN7AAADfQAAAywAAAM6AAADIgAAPUoAcwBvAG4AUwB0AHIAaQBuAGcA
VABvAEQAYQB0AGEAVABhAGIAbABlADoAIABDAG8AbAB1AG0AbgBzAAA/RQByAHIAbwByACAAUABh
AHIAcwBpAG4AZwAgAEMAbwBsAHUAbQBuACAATgBhAG0AZQAgADoAIAB7ADAAfQAAA1wAAEdKAHMA
bwBuAFMAdAByAGkAbgBnAFQAbwBEAGEAdABhAFQAYQBiAGwAZQA6ACAARgBvAHIAIABlAGEAYwBo
ACAAcgBvAHcAADtFAHIAcgBvAHIAIABQAGEAcgBzAGkAbgBnACAAUgBvAHcAIAAgAE4AYQBtAGUA
IAA6ACAAewAwAH0AACtKAHMAbwBuAFMAdAByAGkAbgBnAFQAbwBEAGEAdABhAFQAYQBiAGwAZQAA
F3sAIgByAGUAYwBvAHIAZAAiADoAWwAAJV0ALAAiAEAAZQB4AHQAZQBuAHMAaQBvAG4AcwAiADoA
IgAiAAATcwBwAEwAbwBnAEkAbgBmAG8AABVAAEMAbABpAGUAbgB0AFUASQBEAAANQABFAHIAcgBv
AHIAABNAAEYAaQBsAGUAVAB5AHAAZQAAC0AAQQByAGUAYQAAEUAATABvAGcASQBuAGYAbwAAay8A
dwBzAC8AcwBjAGgAZQBtAGEALwBxAHUAZQByAHkALwBjAG8AbQAuAGgAYQB5AGUAcwBzAG8AZgB0
AC4AVABJAFAAVwBlAGIALgBUAGUAYQBjAGgAZQByAFMAYwBoAGUAZAB1AGwAZQAAKS8AbwBhAHUA
dABoAC8AYQBjAGMAZQBzAHMAXwB0AG8AawBlAG4ALwAAH1QAZQBhAGMAaABlAHIAUwBjAGgAZQBk
AHUAbABlAACAm0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABi
AGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwA
dQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAEU8AdQB0
AHAAdQB0ACAAMAAACVAAUwBEAEIAABFDAGwAaQBlAG4AdABJAEQAABVDAGwAaQBlAG4AdABJAEQA
UABTAAAVQwBsAGkAZQBuAHQATgBhAG0AZQAAGUMAbABpAGUAbgB0AFMAZQBjAHIAZQB0AAAZQwBs
AGkAZQBuAHQAUwBlAHIAdgBlAHIAABFQAGEAZwBlAFMAaQB6AGUAAHFTAEMAXwBhAGYAOABhADYA
MAAxADcANgA0AGMAMgA0ADYAMgAwAGIANAA2AGYAMwA0ADkAZAAzADMANwBjADIAMwA0ADIALgBQ
AHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAABlBAGMAYwBlAHMAcwAgAFQA
bwBrAGUAbgAAOUcAZQB0AEEAYwBjAGUAcwBzAFQAbwBrAGUAbgAgAHIAZQB0AHUAcgBuAGUAZAAg
AG4AdQBsAGwAABNGAGkAbABlACAAUwBpAHoAZQAAM0cAZQB0AEYAaQBsAGUAUwBpAHoAZQAgAHIA
ZQB0AHUAcgBuAGUAZAAgAG4AdQBsAGwAAC1QAHIAbwBjAGUAcwBzAFQAZQBhAGMAaABlAHIAUwBj
AGgAZQBkAHUAbABlAAAVPwBwAGEAZwBlAHMAaQB6AGUAPQAADSYAcABhAGcAZQA9AAAhYQBwAHAA
bABpAGMAYQB0AGkAbwBuAC8AagBzAG8AbgAAG0EAdQB0AGgAbwByAGkAegBhAHQAaQBvAG4AAA9C
AGUAYQByAGUAcgAgAAATdABlAGEAYwBoAGUAcgBJAEQAAA9jAGwAYQBzAHMASQBEAABTRwBlAHQA
VABlAGEAYwBoAGUAcgBTAGMAaABlAGQAdQBsAGUAIAAtACAAUgBvAHcAIABDAG8AdQBuAHQAIABQ
AGEAZwBlACAATgB1AG0AOgAgAAElRwBlAHQAVABlAGEAYwBoAGUAcgBTAGMAaABlAGQAdQBsAGUA
AA0vAGMAbwB1AG4AdAAAF1IAZQBjAG8AcgBkAEMAbwB1AG4AdAAAF0cAZQB0AEYAaQBsAGUAUwBp
AHoAZQAAQ2EAcABwAGwAaQBjAGEAdABpAG8AbgAvAHgALQB3AHcAdwAtAGYAbwByAG0ALQB1AHIA
bABlAG4AYwBvAGQAZQBkAAELQgBhAHMAaQBjAAAVZwByAGEAbgB0AF8AdAB5AHAAZQAAJWMAbABp
AGUAbgB0AF8AYwByAGUAZABlAG4AdABpAGEAbABzAAAAAM9fTM+Azr1LocB/x326NhUABCABAQgD
IAABBSABARERBCABAQ4FIAEBEjkFIAEBHQIFIAEBEnUGIAEBEYC5CQcCETQVEUUBCAUVEUUBCAgA
ABURRQETAAcwAQEBEB4ABAoBETQIIAAVEkEBEwAJBwIROBURRQEcBRURRQEcBAoBETgJBwIRPBUR
RQEOBRURRQEOBAoBETwJBwIRQBURRQEOBAoBEUAFAAASgMkFIAEdBQ4FAAEOHQUkBxMSUR0OFRJV
AQ4dDggdDggOCA4VEVkBDg4SXQ4IDg4SURJhBSACDg4OBgACHQ4ODgUVElUBDgQgAQgOBSACDggI
BSABAhMABSABARMABQACDg4cCCAAFRFZARMABRURWQEOBCAAEwAFIAASgNkGIAESgN0OAyAAAgQg
ABJdBCABDggFIAIBDhwFIAASgOEFIAEBEl0DIAAOBAcBEmUFIAARgOkGIAIBDhJlBiABARGA9QUg
ABKA+QkgAhKA/Q4RgQEEIAEBHAogAxKA/Q4RgQEIAyAACAsgAwESgJ0dCBKAoQUgAgEIHAMHAQgH
AAIIEoChDgUgAR0ICAUgABKBEQUgABKBFQYgARKBGQ4FIAASgKkFIAASgR0GIAESgSEcBQAAEoEl
BiABHBKBKQcAARI5EYEtBSAAEoExByACAQ4SgTEEBwESaQIeAAcgAgESgT0cBCAAHQUFIAEOHQUF
IAEBHQUGIAEcEoE9GQcMCBIICA4ODg4OFRF5AQ4VEXkBHBJhEmEEAAEBAgYAAQERgUUGAAMODg4O
BRUSQQEOCCAAFRF5ARMABRUReQEOCjACAgEQHgAQHgEJCgIVEXkBDhE0BRUSQQEcBRUReQEcCQoC
FRF5ARwRNAUgAQESYScHEQgSCBwICA4SgIEOCBUReQESgIUVEXkBDhKAiRJdEoCNCBJhEmEEAAEI
DgYAAgIOEAgFAAEOHQ4GIAEBEoFJBSAAEoFNCiAAFRKBUQESgVUIFRKBUQESgVUFAAIODg4FIAIB
Dg4IIAMBDhKAyQ4PIAIVEkEBEoCFEoFJEoFdBxUSQQESgIUHFRF5ARKAhQsKAhUReQESgIUROAUg
ABKAhQUgABKBXQcgABUSQQEOCQoCFRF5AQ4ROAUgABKAiQMgABwEIAEcDhsHCggSCA4OEoCBDhUR
eQESgIUVEXkBDhJhEmELCgIVEXkBEoCFETwJCgIVEXkBDhE8BAoBEjAWBwcIDg4SgJUVEXkBEoCF
FRF5AQ4SYQYgAQESgWULFRJVARURgWkCDg4HFRGBaQIODgcgAgETABMBDyABARUSgW0BFRGBaQIO
DgsKAhUReQESgIURQAkKAhUReQEOEUAECgESLAi3elxWGTTgiQiJhF3NgIDMkQiwP19/EdUKOgIG
DgMGEhQDBhIYAwYSDAQGEoClBAYSgLEEBhKAtQMGEiACBggGBhURRQEIAwYSCAYGFRF5AQ4GBhUR
eQEcBgYVEUUBHAgGFRF5ARKAhQYGFRFFAQ4EBhKAkQcgABUSQQEICiADFRJBARwODg4JIAIVEkEB
Dg4OCwAEFRJBAQ4ODg4OBCABDg4FIAESUQ4GIAMBCA4OAwAAAQQgAQECDSAEAQgdCB0SgJ0SgKEG
IAEBEoClBQAAEoCxBQAAEoC1BgABARKAtQQAABIgBhABAQ4eAAYQAQEeAA4DKAAOAygAAgUoABKA
qQMoAAgFCAASgLEFCAASgLUECAASIAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRo
cm93cwEIAQACAAAAAAAoAQAjU0NfYWY4YTYwMTc2NGMyNDYyMGI0NmYzNDlkMzM3YzIzNDIAAAUB
AAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMAAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC41
AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjUsAQAnU2NyaXB0TWFp
bis8UHJvY2Vzc1RlYWNoZXJTY2hlZHVsZT5kX182AAAoAQAjU2NyaXB0TWFpbis8R2V0VGVhY2hl
clNjaGVkdWxlPmRfXzcAACEBABxTY3JpcHRNYWluKzxHZXRGaWxlU2l6ZT5kX184AAAkAQAfU2Ny
aXB0TWFpbis8R2V0QWNjZXNzVG9rZW4+ZF9fOQAABAEAAAAKAQACAAAAAAEAAAAAALQAAADOyu++
AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNp
b249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRl
MDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFE
ULQAAAD8ZgAAAAAAAAAAAAAWZwAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACGcAAAAAAAAAAAAA
AABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAA
AAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYgAAAGgQAAAAAAAAAAAAAGgQ0AAAA
VgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEAAAABAPdoyhwAAAEA92jK
HD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8A
AAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBHoDAAABAFMAdAByAGkAbgBn
AEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAwADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0A
ZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBG
AGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8AYQBmADgAYQA2ADAAMQA3ADYA
NABjADIANAA2ADIAMABiADQANgBmADMANAA5AGQAMwAzADcAYwAyADMANAAyAAAAPgAPAAEARgBp
AGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADcAMwA3ADAALgAyADYAOAA3ADEAAAAAAHAA
KAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AYQBmADgAYQA2ADAAMQA3ADYANABj
ADIANAA2ADIAMABiADQANgBmADMANAA5AGQAMwAzADcAYwAyADMANAAyAC4AZABsAGwAAABIABIA
AQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAg
ADIAMAAyADAAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgA
KAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwBhAGYAOABhADYAMAAx
ADcANgA0AGMAMgA0ADYAMgAwAGIANAA2AGYAMwA0ADkAZAAzADMANwBjADIAMwA0ADIALgBkAGwA
bAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AYQBmADgAYQA2ADAAMQA3
ADYANABjADIANAA2ADIAMABiADQANgBmADMANAA5AGQAMwAzADcAYwAyADMANAAyAAAAQgAPAAEA
UAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA3ADMANwAwAC4AMgA2ADgANwAx
AAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA3ADMA
NwAwAC4AMgA2ADgANwAxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAYAAADAAAACg3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_af8a601764c24620b46f349d337c2342</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::ClientID,User::ClientIDPS,User::ClientName,User::ClientSecret,User::ClientServer,User::PageSize</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">e5cc4b815296fb807736d27f7bb1d921</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">230a251b59514238d8c90d37e5c600f496584e0b</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Loop thru Clients\Teacher Schedule\Script Component.Connections[PSDB]"
                      connectionManagerID="Package.ConnectionManagers[ADO.NET_PowerSchoolAPIPlugIn]"
                      connectionManagerRefId="Package.ConnectionManagers[ADO.NET_PowerSchoolAPIPlugIn]"
                      name="PSDB" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Loop thru Clients\Teacher Schedule\Script Component.Outputs[Output 0]"
                      hasSideEffects="true"
                      name="Output 0">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop thru Clients\Teacher Schedule\Script Component.Outputs[Output 0].Columns[TeacherID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Teacher Schedule\Script Component.Outputs[Output 0].Columns[TeacherID]"
                          name="TeacherID" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Teacher Schedule\Script Component.Outputs[Output 0].Columns[ClassID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Teacher Schedule\Script Component.Outputs[Output 0].Columns[ClassID]"
                          name="ClassID" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Loop thru Clients\Teacher Schedule.Paths[Derived Column Output]"
                  endId="Package\Loop thru Clients\Teacher Schedule\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Loop thru Clients\Teacher Schedule\Derived Column.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Loop thru Clients\Teacher Schedule.Paths[Output 0]"
                  endId="Package\Loop thru Clients\Teacher Schedule\Derived Column.Inputs[Derived Column Input]"
                  name="Output 0"
                  startId="Package\Loop thru Clients\Teacher Schedule\Script Component.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Loop thru Clients.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{04B764C8-6206-4D16-BE47-582ECD40F353}"
          DTS:From="Package\Loop thru Clients\Get Students"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Loop thru Clients\Master Course" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Loop thru Clients.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{E7CE472C-F83F-4F73-9183-022403BAC79E}"
          DTS:Expression="@[User::ProcessStudent]==1"
          DTS:From="Package\Loop thru Clients\Get Teachers"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Loop thru Clients\Get Students" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Loop thru Clients.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{E313A3B1-425E-4F25-8C02-CAFC63FD5F9D}"
          DTS:From="Package\Loop thru Clients\Master Course"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Loop thru Clients\Campus Course" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Loop thru Clients.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{FC1A6B53-37BB-460B-AE2C-3BD0AF799CA9}"
          DTS:From="Package\Loop thru Clients\Campus Course"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\Loop thru Clients\Classes" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Loop thru Clients.PrecedenceConstraints[Constraint 4]"
          DTS:CreationName=""
          DTS:DTSID="{E7F3F9B6-98BE-4770-8E7C-0A26CD59EC71}"
          DTS:From="Package\Loop thru Clients\Classes"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 4"
          DTS:To="Package\Loop thru Clients\Teacher Schedule" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Loop thru Clients.PrecedenceConstraints[Constraint 5]"
          DTS:CreationName=""
          DTS:DTSID="{9D2A5E79-B8A2-4402-BB91-A122CD72BD56}"
          DTS:From="Package\Loop thru Clients\Teacher Schedule"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 5"
          DTS:To="Package\Loop thru Clients\Student Schedule" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{C4A0E04E-9706-4F25-AC81-65592A42082E}"
          DTS:ObjectName="{C4A0E04E-9706-4F25-AC81-65592A42082E}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::ClientID" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{58077981-FF07-47F2-86A2-37CD4A6018C2}"
          DTS:ObjectName="{58077981-FF07-47F2-86A2-37CD4A6018C2}"
          DTS:ValueIndex="1"
          DTS:VariableName="User::ClientName" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{A424CCE2-E130-452A-9C3C-9DBE70B0BD00}"
          DTS:ObjectName="{A424CCE2-E130-452A-9C3C-9DBE70B0BD00}"
          DTS:ValueIndex="2"
          DTS:VariableName="User::ClientTipWebDatabase" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{24A4E533-39A6-4E13-9C68-43FEB23A40ED}"
          DTS:ObjectName="{24A4E533-39A6-4E13-9C68-43FEB23A40ED}"
          DTS:ValueIndex="3"
          DTS:VariableName="User::ClientServer" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{FBC372D9-F1F7-48CE-A8D6-DD9BA182129A}"
          DTS:ObjectName="{FBC372D9-F1F7-48CE-A8D6-DD9BA182129A}"
          DTS:ValueIndex="4"
          DTS:VariableName="User::ClientIDPS" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{7A2266CF-CB12-4FF3-A4C8-801A90FD2EA1}"
          DTS:ObjectName="{7A2266CF-CB12-4FF3-A4C8-801A90FD2EA1}"
          DTS:ValueIndex="5"
          DTS:VariableName="User::ClientSecret" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{0298F412-CE95-4D46-82B3-B853442BC130}"
          DTS:ObjectName="{0298F412-CE95-4D46-82B3-B853442BC130}"
          DTS:ValueIndex="6"
          DTS:VariableName="User::ProcessTeacher" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{CC5F25E7-BE8B-4D47-B1F6-A953050B7C76}"
          DTS:ObjectName="{CC5F25E7-BE8B-4D47-B1F6-A953050B7C76}"
          DTS:ValueIndex="7"
          DTS:VariableName="User::ProcessStudent" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{24430034-99C8-4512-968E-B4DCA616DEFE}"
          DTS:ObjectName="{24430034-99C8-4512-968E-B4DCA616DEFE}"
          DTS:ValueIndex="8"
          DTS:VariableName="User::ProcessStaff" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{42011A26-375D-4315-AF3C-42ECD0F52B84}"
          DTS:ObjectName="{42011A26-375D-4315-AF3C-42ECD0F52B84}"
          DTS:ValueIndex="9"
          DTS:VariableName="User::ProcessMasterCourse" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{11963327-A2F4-4A1D-AE6B-BE24803522FB}"
          DTS:ObjectName="{11963327-A2F4-4A1D-AE6B-BE24803522FB}"
          DTS:ValueIndex="10"
          DTS:VariableName="User::ProcessCampusCourse" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{CA9DFD12-016C-4644-A81B-32DBAADFB0D6}"
          DTS:ObjectName="{CA9DFD12-016C-4644-A81B-32DBAADFB0D6}"
          DTS:ValueIndex="11"
          DTS:VariableName="User::ProcessClasses" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{CC82D933-4254-4E23-90EC-3067E0123D54}"
          DTS:ObjectName="{CC82D933-4254-4E23-90EC-3067E0123D54}"
          DTS:ValueIndex="12"
          DTS:VariableName="User::ProcessTeacherSchedule" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{1C028F55-7A6C-481B-B458-269179A77917}"
          DTS:ObjectName="{1C028F55-7A6C-481B-B458-269179A77917}"
          DTS:ValueIndex="13"
          DTS:VariableName="User::ProcessStudentSchedule" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{C055008B-5ED6-4D86-9389-37E98075F56A}"
          DTS:ObjectName="{C055008B-5ED6-4D86-9389-37E98075F56A}"
          DTS:ValueIndex="14"
          DTS:VariableName="User::PageSize" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Truncate Log"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{F8E399DF-13AE-4D20-BE90-2E834E6194DA}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Truncate Log"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{D9F81E43-3162-4FB0-804B-765E691F46A1}"
          SQLTask:SqlStatementSource="--Select * &#xA;delete&#xA;from pslog&#xA;where getdate() &gt; dateadd(d, 14, logdate) " xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Truncate Tables"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{ABC08FBB-7F05-4E55-BA24-CB33D8B30E3A}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Truncate Tables"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{D9F81E43-3162-4FB0-804B-765E691F46A1}"
          SQLTask:SqlStatementSource="TRUNCATE TABLE PSTeachers&#xA;GO&#xA;&#xA;TRUNCATE TABLE PSStudents&#xA;GO&#xA;&#xA;TRUNCATE TABLE PSMasterCourse&#xA;GO&#xA;&#xA;TRUNCATE TABLE PSCampusCourse&#xA;GO&#xA;&#xA;TRUNCATE TABLE PSClasses&#xA;GO&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{3FE84EBD-24A9-41AB-AD52-CDE0C0633031}"
      DTS:From="Package\Data Flow Task - Get Customers"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Truncate Tables" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{EF013E67-D15D-49FF-8652-60EAE54F2B50}"
      DTS:From="Package\Truncate Tables"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Truncate Log" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{7639FA07-1F7B-43A6-8FB7-2935EF59AB52}"
      DTS:From="Package\Truncate Log"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Loop thru Clients" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql12">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="346,44"
          Id="Package\Data Flow Task - Get Customers"
          TopLeft="153.971698113208,29.518867924528" />
        <NodeLayout
          Size="152,42"
          Id="Package\Loop thru Clients\Campus Course"
          TopLeft="661,25" />
        <NodeLayout
          Size="124,42"
          Id="Package\Loop thru Clients\Classes"
          TopLeft="109,111" />
        <NodeLayout
          Size="142,42"
          Id="Package\Loop thru Clients\Get Students"
          TopLeft="278,29" />
        <NodeLayout
          Size="143,42"
          Id="Package\Loop thru Clients\Get Teachers"
          TopLeft="74,29" />
        <NodeLayout
          Size="146,42"
          Id="Package\Loop thru Clients\Master Course"
          TopLeft="467,27" />
        <NodeLayout
          Size="161,42"
          Id="Package\Loop thru Clients\Student Schedule"
          TopLeft="562,119" />
        <NodeLayout
          Size="162,42"
          Id="Package\Loop thru Clients\Teacher Schedule"
          TopLeft="324,115" />
        <EdgeLayout
          Id="Package\Loop thru Clients.PrecedenceConstraints[Constraint]"
          TopLeft="420,49">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="47,0"
              Start="0,0"
              End="39.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="39.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Loop thru Clients.PrecedenceConstraints[Constraint 1]"
          TopLeft="217,50">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="61,0"
              Start="0,0"
              End="53.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="53.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Loop thru Clients.PrecedenceConstraints[Constraint 2]"
          TopLeft="613,47">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="48,0"
              Start="0,0"
              End="40.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="40.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Loop thru Clients.PrecedenceConstraints[Constraint 3]"
          TopLeft="737,67">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-566,44"
              Start="0,0"
              End="-566,36.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18"
                    Point2="0,22"
                    Point3="-4,22" />
                  <mssgle:LineSegment
                    End="-562,22" />
                  <mssgle:CubicBezierSegment
                    Point1="-562,22"
                    Point2="-566,22"
                    Point3="-566,26" />
                  <mssgle:LineSegment
                    End="-566,36.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Loop thru Clients.PrecedenceConstraints[Constraint 4]"
          TopLeft="233,134">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="91,0"
              Start="0,0"
              End="83.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="83.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Loop thru Clients.PrecedenceConstraints[Constraint 5]"
          TopLeft="486,138">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="76,0"
              Start="0,0"
              End="68.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="68.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43.924528301886795"
          IsExpanded="True"
          PanelSize="1072,245"
          Size="1072,289"
          Id="Package\Loop thru Clients"
          TopLeft="82.5,245.990566037736" />
        <NodeLayout
          Size="143,42"
          Id="Package\Truncate Log"
          TopLeft="379,136" />
        <NodeLayout
          Size="146,42"
          Id="Package\Truncate Tables"
          TopLeft="186.858490566038,129.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="326.971698113208,73.518867924528">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-67.1132075471701,55.981132075472"
              Start="0,0"
              End="-67.1132075471701,48.481132075472">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.990566037736" />
                  <mssgle:CubicBezierSegment
                    Point1="0,23.990566037736"
                    Point2="0,27.990566037736"
                    Point3="-4,27.990566037736" />
                  <mssgle:LineSegment
                    End="-63.1132075471701,27.990566037736" />
                  <mssgle:CubicBezierSegment
                    Point1="-63.1132075471701,27.990566037736"
                    Point2="-67.1132075471701,27.990566037736"
                    Point3="-67.1132075471701,31.990566037736" />
                  <mssgle:LineSegment
                    End="-67.1132075471701,48.481132075472" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="332.858490566038,153.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="46.141509433962,0"
              Start="0,0"
              End="38.641509433962,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="38.641509433962,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="450.5,178">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="168,67.990566037736"
              Start="0,0"
              End="168,60.490566037736">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.995283018868" />
                  <mssgle:CubicBezierSegment
                    Point1="0,29.995283018868"
                    Point2="0,33.995283018868"
                    Point3="4,33.995283018868" />
                  <mssgle:LineSegment
                    End="164,33.995283018868" />
                  <mssgle:CubicBezierSegment
                    Point1="164,33.995283018868"
                    Point2="168,33.995283018868"
                    Point3="168,37.995283018868" />
                  <mssgle:LineSegment
                    End="168,60.490566037736" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="Here are the next steps:&#xA;&#xA;• Update the code to catch exceptions; stop processing if error and write to the logs&#xA;• Determine how to bring data over in batches&#xA;o PowerSchool recommends that we bring no more than 100 records at a time – which could take ages&#xA;o RJ recommends that we do this by schools (which is a good idea) and we can use the UFA locations to bring in data only from valid (for IM/IT) sites&#xA;• Log quantity of records received vs. available records&#xA;• Evaluate use of a central database for the data – or populate UFA tables directly&#xA;• Determine the best way to integrate with UFA&#xA;• Repeat for student data&#xA;• Set up UFA to handle the import option&#xA;"
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="599,231"
          Id="e2d5833a-1df1-41d0-aaa5-bc85e36756d3"
          TopLeft="741,19" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Data Flow Task - Get Customers">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="184,42"
          Id="Package\Data Flow Task - Get Customers\Recordset Destination"
          TopLeft="95,202" />
        <NodeLayout
          Size="152,42"
          Id="Package\Data Flow Task - Get Customers\OLE DB Source"
          TopLeft="113,65" />
        <EdgeLayout
          Id="Package\Data Flow Task - Get Customers.Paths[OLE DB Source Output]"
          TopLeft="188,107">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,95"
              Start="0,0"
              End="0,87.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,87.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Data Flow Task - Get Customers\OLE DB Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Loop thru Clients\Campus Course">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="173,42"
          Id="Package\Loop thru Clients\Campus Course\OLE DB Destination"
          TopLeft="348,351" />
        <NodeLayout
          Size="156,42"
          Id="Package\Loop thru Clients\Campus Course\Derived Column"
          TopLeft="368,166" />
        <NodeLayout
          Size="167,42"
          Id="Package\Loop thru Clients\Campus Course\Script Component"
          TopLeft="386,34" />
        <EdgeLayout
          Id="Package\Loop thru Clients\Campus Course.Paths[Output 0]"
          TopLeft="469.5,76">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-23.5,90"
              Start="0,0"
              End="-23.5,82.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41" />
                  <mssgle:CubicBezierSegment
                    Point1="0,41"
                    Point2="0,45"
                    Point3="-4,45" />
                  <mssgle:LineSegment
                    End="-19.5,45" />
                  <mssgle:CubicBezierSegment
                    Point1="-19.5,45"
                    Point2="-23.5,45"
                    Point3="-23.5,49" />
                  <mssgle:LineSegment
                    End="-23.5,82.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Loop thru Clients\Campus Course.Paths[Derived Column Output]"
          TopLeft="446,208">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-11.5,143"
              Start="0,0"
              End="-11.5,135.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,67.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,67.5"
                    Point2="0,71.5"
                    Point3="-4,71.5" />
                  <mssgle:LineSegment
                    End="-7.5,71.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-7.5,71.5"
                    Point2="-11.5,71.5"
                    Point3="-11.5,75.5" />
                  <mssgle:LineSegment
                    End="-11.5,135.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Loop thru Clients\Campus Course\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Loop thru Clients\Classes">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="173,42"
          Id="Package\Loop thru Clients\Classes\OLE DB Destination"
          TopLeft="348,351" />
        <NodeLayout
          Size="167,42"
          Id="Package\Loop thru Clients\Classes\Script Component"
          TopLeft="366,39" />
        <NodeLayout
          Size="156,42"
          Id="Package\Loop thru Clients\Classes\Derived Column"
          TopLeft="368,166" />
        <EdgeLayout
          Id="Package\Loop thru Clients\Classes.Paths[Output 0]"
          TopLeft="447.75,81">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,85"
              Start="0,0"
              End="0,77.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,77.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Loop thru Clients\Classes.Paths[Derived Column Output]"
          TopLeft="446,208">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-11.5,143"
              Start="0,0"
              End="-11.5,135.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,67.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,67.5"
                    Point2="0,71.5"
                    Point3="-4,71.5" />
                  <mssgle:LineSegment
                    End="-7.5,71.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-7.5,71.5"
                    Point2="-11.5,71.5"
                    Point3="-11.5,75.5" />
                  <mssgle:LineSegment
                    End="-11.5,135.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Loop thru Clients\Classes\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Loop thru Clients\Get Students">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="165,42"
          Id="Package\Loop thru Clients\Get Students\Script Component"
          TopLeft="364,64" />
        <NodeLayout
          Size="156,42"
          Id="Package\Loop thru Clients\Get Students\Derived Column"
          TopLeft="372,139" />
        <NodeLayout
          Size="173,42"
          Id="Package\Loop thru Clients\Get Students\OLE DB Destination"
          TopLeft="354,228" />
        <EdgeLayout
          Id="Package\Loop thru Clients\Get Students.Paths[Output 0]"
          TopLeft="448.25,106">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33"
              Start="0,0"
              End="0,25.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Loop thru Clients\Get Students.Paths[Derived Column Output]"
          TopLeft="450,181">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-9.5,47"
              Start="0,0"
              End="-9.5,39.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,19.5"
                    Point2="0,23.5"
                    Point3="-4,23.5" />
                  <mssgle:LineSegment
                    End="-5.5,23.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-5.5,23.5"
                    Point2="-9.5,23.5"
                    Point3="-9.5,27.5" />
                  <mssgle:LineSegment
                    End="-9.5,39.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Loop thru Clients\Get Students\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Loop thru Clients\Get Teachers">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="165,42"
          Id="Package\Loop thru Clients\Get Teachers\Script Component"
          TopLeft="305,94" />
        <NodeLayout
          Size="156,42"
          Id="Package\Loop thru Clients\Get Teachers\Derived Column"
          TopLeft="303,182" />
        <NodeLayout
          Size="173,42"
          Id="Package\Loop thru Clients\Get Teachers\OLE DB Destination"
          TopLeft="300,282" />
        <EdgeLayout
          Id="Package\Loop thru Clients\Get Teachers.Paths[Output 0]"
          TopLeft="384.25,136">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,46"
              Start="0,0"
              End="0,38.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,38.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Loop thru Clients\Get Teachers.Paths[Derived Column Output]"
          TopLeft="383.75,224">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,58"
              Start="0,0"
              End="0,50.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,50.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Loop thru Clients\Get Teachers\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Loop thru Clients\Master Course">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="173,42"
          Id="Package\Loop thru Clients\Master Course\OLE DB Destination"
          TopLeft="348,351" />
        <NodeLayout
          Size="156,42"
          Id="Package\Loop thru Clients\Master Course\Derived Column"
          TopLeft="368,166" />
        <NodeLayout
          Size="167,42"
          Id="Package\Loop thru Clients\Master Course\Script Component"
          TopLeft="373,33" />
        <EdgeLayout
          Id="Package\Loop thru Clients\Master Course.Paths[Output 0]"
          TopLeft="456.5,75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-10.5,91"
              Start="0,0"
              End="-10.5,83.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,41.5"
                    Point2="0,45.5"
                    Point3="-4,45.5" />
                  <mssgle:LineSegment
                    End="-6.5,45.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-6.5,45.5"
                    Point2="-10.5,45.5"
                    Point3="-10.5,49.5" />
                  <mssgle:LineSegment
                    End="-10.5,83.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Loop thru Clients\Master Course.Paths[Derived Column Output]"
          TopLeft="446,208">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-11.5,143"
              Start="0,0"
              End="-11.5,135.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,67.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,67.5"
                    Point2="0,71.5"
                    Point3="-4,71.5" />
                  <mssgle:LineSegment
                    End="-7.5,71.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-7.5,71.5"
                    Point2="-11.5,71.5"
                    Point3="-11.5,75.5" />
                  <mssgle:LineSegment
                    End="-11.5,135.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Loop thru Clients\Master Course\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Loop thru Clients\Student Schedule">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="173,42"
          Id="Package\Loop thru Clients\Student Schedule\OLE DB Destination"
          TopLeft="348,351" />
        <NodeLayout
          Size="156,42"
          Id="Package\Loop thru Clients\Student Schedule\Derived Column"
          TopLeft="368,166" />
        <NodeLayout
          Size="167,42"
          Id="Package\Loop thru Clients\Student Schedule\Script Component"
          TopLeft="380,22" />
        <EdgeLayout
          Id="Package\Loop thru Clients\Student Schedule.Paths[Output 0]"
          TopLeft="463.5,64">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-17.5,102"
              Start="0,0"
              End="-17.5,94.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,47" />
                  <mssgle:CubicBezierSegment
                    Point1="0,47"
                    Point2="0,51"
                    Point3="-4,51" />
                  <mssgle:LineSegment
                    End="-13.5,51" />
                  <mssgle:CubicBezierSegment
                    Point1="-13.5,51"
                    Point2="-17.5,51"
                    Point3="-17.5,55" />
                  <mssgle:LineSegment
                    End="-17.5,94.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Loop thru Clients\Student Schedule.Paths[Derived Column Output]"
          TopLeft="446,208">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-11.5,143"
              Start="0,0"
              End="-11.5,135.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,67.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,67.5"
                    Point2="0,71.5"
                    Point3="-4,71.5" />
                  <mssgle:LineSegment
                    End="-7.5,71.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-7.5,71.5"
                    Point2="-11.5,71.5"
                    Point3="-11.5,75.5" />
                  <mssgle:LineSegment
                    End="-11.5,135.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Loop thru Clients\Student Schedule\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Loop thru Clients\Teacher Schedule">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="173,42"
          Id="Package\Loop thru Clients\Teacher Schedule\OLE DB Destination"
          TopLeft="348,351" />
        <NodeLayout
          Size="156,42"
          Id="Package\Loop thru Clients\Teacher Schedule\Derived Column"
          TopLeft="368,166" />
        <NodeLayout
          Size="167,42"
          Id="Package\Loop thru Clients\Teacher Schedule\Script Component"
          TopLeft="345,52" />
        <EdgeLayout
          Id="Package\Loop thru Clients\Teacher Schedule.Paths[Output 0]"
          TopLeft="428.5,94">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="17.5,72"
              Start="0,0"
              End="17.5,64.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,32" />
                  <mssgle:CubicBezierSegment
                    Point1="0,32"
                    Point2="0,36"
                    Point3="4,36" />
                  <mssgle:LineSegment
                    End="13.5,36" />
                  <mssgle:CubicBezierSegment
                    Point1="13.5,36"
                    Point2="17.5,36"
                    Point3="17.5,40" />
                  <mssgle:LineSegment
                    End="17.5,64.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Loop thru Clients\Teacher Schedule.Paths[Derived Column Output]"
          TopLeft="446,208">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-11.5,143"
              Start="0,0"
              End="-11.5,135.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,67.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,67.5"
                    Point2="0,71.5"
                    Point3="-4,71.5" />
                  <mssgle:LineSegment
                    End="-7.5,71.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-7.5,71.5"
                    Point2="-11.5,71.5"
                    Point3="-11.5,75.5" />
                  <mssgle:LineSegment
                    End="-11.5,135.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Loop thru Clients\Teacher Schedule\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>