<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="10/30/2014 10:52:01 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="WLAFRANCE-PC"
  DTS:CreatorName="HAYESSOFT\Warrenla"
  DTS:DTSID="{DB8181E6-109B-460A-9551-AA1F602FCCEC}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="14.0.0800.90"
  DTS:LocaleID="1033"
  DTS:ObjectName="PowerSchool"
  DTS:PackageType="5"
  DTS:VersionBuild="322"
  DTS:VersionGUID="{04FDBFD0-3ED6-4B09-A4B6-25152B167A01}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[ClientTipWebDatabase]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{F67B245E-5E1B-4185-B07F-CCBF8725632E}"
      DTS:ObjectName="ClientTipWebDatabase">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[User::ClientTipWebDatabase]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[$Project::Server]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=CSS-NBLAKELY\MSSQLSERVER2014;Initial Catalog=TipWeb_Edinburg_1102;Integrated Security=True;Application Name=SSIS-PowerSchool-{F67B245E-5E1B-4185-B07F-CCBF8725632E}CSS-NBLAKELY\MSSQLSERVER2014.TipWeb_Edinburg_1102;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[_PowerSchoolAPIPlugIn]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{A1AB3856-6B26-4C4E-86D5-BA4981555C44}"
      DTS:ObjectName="_PowerSchoolAPIPlugIn">
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[$Project::Server]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=CSS-NBLAKELY\MSSQLSERVER2014;Initial Catalog=_PowerSchoolAPIPlugIn;Integrated Security=True;Application Name=SSIS-Package-{A1AB3856-6B26-4C4E-86D5-BA4981555C44}LocalHost.AeriesSSISImport;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EB9B1590-E645-40D8-814B-95466CF14B92}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ClientID">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{318D8286-9EAD-49E4-A27C-D60FEE2EE444}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ClientIDPS">
      <DTS:VariableValue
        DTS:DataType="8">8a351221-f974-4d36-be48-24a98ebeb7b8</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{44A310A0-48C5-4208-83F8-D73E821CACD1}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ClientName">
      <DTS:VariableValue
        DTS:DataType="8">Test</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0E371210-57CB-40F7-A9E1-73DD556FFE16}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ClientSecret">
      <DTS:VariableValue
        DTS:DataType="8">94cb3e50-fd9f-4924-8e40-4b9eac079b87</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{02A9780D-6462-4F5C-BA01-031FE02DB1C2}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ClientServer">
      <DTS:VariableValue
        DTS:DataType="8">https://partnerdev2.powerschool.com/</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E7E5AB34-C1E6-4D76-8FDF-E66A100CD13F}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ClientTipWebDatabase">
      <DTS:VariableValue
        DTS:DataType="8">TipWeb_Edinburg_1102</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{65A87B55-2BAF-40F2-A8A1-AD49DBDC75E3}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="CustomerID">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A1E468F6-D830-4E92-8DC5-849F70ACE1B7}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="CustomerList">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6D1AB504-054D-45E9-A922-4B3B376DE13B}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Error">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{AB1A5055-0E8D-41CB-BB39-8070C35D19B0}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ErrorMessage">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Data Flow Task - Get Customers"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{DDD2C420-E739-49C6-9311-0651AF353D42}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Data Flow Task - Get Customers"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server v10; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          BLOBTempStoragePath=""
          bufferTempStoragePath=""
          version="1">
          <components>
            <component
              refId="Package\Data Flow Task - Get Customers\ADO NET Source"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Extracts data from a relational database by using a .NET provider.;Microsoft Corporation; Microsoft SqlServer v10; © 2007 Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="Extracts data from a relational database by using a .NET provider."
              name="ADO NET Source"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement used by the component to extract data."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select ID, Name, TIPWebDatabase, ClientServer, ClientID, ClientSecret
from PSCustomer
where Active = 1
order by ProcessOrder</property>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">30</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether to allow non-string external columns to be implicitly converted to strings at the output columns."
                  name="AllowImplicitStringConversion">true</property>
                <property
                  dataType="System.String"
                  description="The Destination database table name."
                  expressionType="Notify"
                  name="TableOrViewName"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">"dbo"."AeriesCustomer"</property>
                <property
                  dataType="System.Int32"
                  description="Specify the mode to retrieve external column information"
                  name="AccessMode"
                  typeConverter="Microsoft.SqlServer.Dts.Pipeline.DataReaderSourceAdapter+EnumToStringConverter">2</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.DataReaderSourceAdapter</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task - Get Customers\ADO NET Source.Connections[IDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[_PowerSchoolAPIPlugIn]"
                  connectionManagerRefId="Package.ConnectionManagers[_PowerSchoolAPIPlugIn]"
                  description="Managed connection manager"
                  name="IDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Data Flow Task - Get Customers\ADO NET Source.Outputs[ADO NET Source Output]"
                  name="ADO NET Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\ADO NET Source.Outputs[ADO NET Source Output].Columns[ID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[ID]"
                      lineageId="Package\Data Flow Task - Get Customers\ADO NET Source.Outputs[ADO NET Source Output].Columns[ID]"
                      name="ID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\ADO NET Source.Outputs[ADO NET Source Output].Columns[Name]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[Name]"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\ADO NET Source.Outputs[ADO NET Source Output].Columns[Name]"
                      name="Name"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\ADO NET Source.Outputs[ADO NET Source Output].Columns[TIPWebDatabase]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[TIPWebDatabase]"
                      length="200"
                      lineageId="Package\Data Flow Task - Get Customers\ADO NET Source.Outputs[ADO NET Source Output].Columns[TIPWebDatabase]"
                      name="TIPWebDatabase"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\ADO NET Source.Outputs[ADO NET Source Output].Columns[ClientServer]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[ClientServer]"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\ADO NET Source.Outputs[ADO NET Source Output].Columns[ClientServer]"
                      name="ClientServer"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\ADO NET Source.Outputs[ADO NET Source Output].Columns[ClientID]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[ClientID]"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\ADO NET Source.Outputs[ADO NET Source Output].Columns[ClientID]"
                      name="ClientID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\ADO NET Source.Outputs[ADO NET Source Output].Columns[ClientSecret]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[ClientSecret]"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\ADO NET Source.Outputs[ADO NET Source Output].Columns[ClientSecret]"
                      name="ClientSecret"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[ID]"
                      dataType="i4"
                      name="ID" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[Name]"
                      dataType="wstr"
                      length="150"
                      name="Name" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[TIPWebDatabase]"
                      dataType="wstr"
                      length="200"
                      name="TIPWebDatabase" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[ClientServer]"
                      dataType="wstr"
                      length="150"
                      name="ClientServer" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[ClientID]"
                      dataType="wstr"
                      length="150"
                      name="ClientID" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[ClientSecret]"
                      dataType="wstr"
                      length="150"
                      name="ClientSecret" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Data Flow Task - Get Customers\ADO NET Source.Outputs[ADO NET Source Error Output]"
                  isErrorOut="true"
                  name="ADO NET Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ID]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task - Get Customers\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ID]"
                      name="ID" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[Name]"
                      dataType="wstr"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[Name]"
                      name="Name" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[TIPWebDatabase]"
                      dataType="wstr"
                      length="200"
                      lineageId="Package\Data Flow Task - Get Customers\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[TIPWebDatabase]"
                      name="TIPWebDatabase" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ClientServer]"
                      dataType="wstr"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ClientServer]"
                      name="ClientServer" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ClientID]"
                      dataType="wstr"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ClientID]"
                      name="ClientID" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ClientSecret]"
                      dataType="wstr"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ClientSecret]"
                      name="ClientSecret" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task - Get Customers\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task - Get Customers\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task - Get Customers\Recordset Destination"
              componentClassID="Microsoft.RecordsetDestination"
              contactInfo="Recordset Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates and populates an in-memory ADO recordset that is available outside of the data flow. Scripts and other package elements can use the recordset. For example, use a recordset to store the names of files that will be loaded into the data warehouse."
              name="Recordset Destination">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the recordset."
                  name="VariableName">User::CustomerList</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input]"
                  hasSideEffects="true"
                  name="Recordset Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[ID]"
                      cachedDataType="i4"
                      cachedName="ID"
                      lineageId="Package\Data Flow Task - Get Customers\ADO NET Source.Outputs[ADO NET Source Output].Columns[ID]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[Name]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="Name"
                      lineageId="Package\Data Flow Task - Get Customers\ADO NET Source.Outputs[ADO NET Source Output].Columns[Name]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[TIPWebDatabase]"
                      cachedDataType="wstr"
                      cachedLength="200"
                      cachedName="TIPWebDatabase"
                      lineageId="Package\Data Flow Task - Get Customers\ADO NET Source.Outputs[ADO NET Source Output].Columns[TIPWebDatabase]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[ClientServer]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="ClientServer"
                      lineageId="Package\Data Flow Task - Get Customers\ADO NET Source.Outputs[ADO NET Source Output].Columns[ClientServer]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[ClientID]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="ClientID"
                      lineageId="Package\Data Flow Task - Get Customers\ADO NET Source.Outputs[ADO NET Source Output].Columns[ClientID]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[ClientSecret]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="ClientSecret"
                      lineageId="Package\Data Flow Task - Get Customers\ADO NET Source.Outputs[ADO NET Source Output].Columns[ClientSecret]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Data Flow Task - Get Customers.Paths[ADO NET Source Output]"
              endId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input]"
              name="ADO NET Source Output"
              startId="Package\Data Flow Task - Get Customers\ADO NET Source.Outputs[ADO NET Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Loop thru Clients"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{2A012B50-11BF-45FD-AC6A-1C3A06172278}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Loop thru Clients">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachADOEnumerator"
        DTS:DTSID="{C3F2FF6B-D934-40CD-AB02-EE2F8F1FDB43}"
        DTS:ObjectName="{C3F2FF6B-D934-40CD-AB02-EE2F8F1FDB43}">
        <DTS:ObjectData>
          <FEEADO
            EnumType="EnumerateRowsInFirstTable"
            VarName="User::CustomerList" />
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Loop thru Clients\Data Flow Task - Get Teachers"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task - Get Teachers"
          DTS:DTSID="{bfcdb790-a0f3-437c-8c58-eb44f129c2cb}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Data Flow Task - Get Teachers"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server v10; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              BLOBTempStoragePath=""
              bufferTempStoragePath=""
              version="1">
              <components>
                <component
                  refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Writes to a database using ADO.NET provider.;Microsoft Corporation; Microsoft SqlServer v10; © 2007 Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Writes to a database using ADO.NET provider."
                  name="ADO NET Destination"
                  usesDispositions="true"
                  version="2">
                  <properties>
                    <property
                      dataType="System.String"
                      description="The Destination database table name."
                      expressionType="Notify"
                      name="TableOrViewName"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">"dbo"."_IMS_Teachers"</property>
                    <property
                      dataType="System.Int32"
                      description="Specify the number of rows per batch. The default is 0 which uses the same size as SSIS internal buffer. "
                      expressionType="Notify"
                      name="BatchSize">0</property>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out. A value of 0 indicates infinite time-out. "
                      expressionType="Notify"
                      name="CommandTimeout">30</property>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether to use the SqlBulkCopy interface to improve the performance of bulk insert operations. Only certain providers support this interface."
                      expressionType="Notify"
                      name="UseBulkInsertWhenPossible">true</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ADONETDestination</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Connections[IDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[ClientTipWebDatabase]"
                      connectionManagerRefId="Package.ConnectionManagers[ClientTipWebDatabase]"
                      description="Managed connection manager"
                      name="IDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Inputs[ADO NET Destination Input]"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="ADO NET Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Inputs[ADO NET Destination Input].Columns[TeacherID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="TeacherID"
                          externalMetadataColumnId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[TeacherID]"
                          lineageId="Package\Loop thru Clients\Data Flow Task - Get Teachers\Script Component.Outputs[Output 0].Columns[TeacherID]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Inputs[ADO NET Destination Input].Columns[CampusID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="CampusID"
                          externalMetadataColumnId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[CampusID]"
                          lineageId="Package\Loop thru Clients\Data Flow Task - Get Teachers\Script Component.Outputs[Output 0].Columns[CampusID]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Inputs[ADO NET Destination Input].Columns[FirstName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="FirstName"
                          externalMetadataColumnId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[FirstName]"
                          lineageId="Package\Loop thru Clients\Data Flow Task - Get Teachers\Script Component.Outputs[Output 0].Columns[FirstName]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Inputs[ADO NET Destination Input].Columns[LastName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="LastName"
                          externalMetadataColumnId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[LastName]"
                          lineageId="Package\Loop thru Clients\Data Flow Task - Get Teachers\Script Component.Outputs[Output 0].Columns[LastName]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Inputs[ADO NET Destination Input].Columns[MiddleName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="MiddleName"
                          externalMetadataColumnId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[MiddleName]"
                          lineageId="Package\Loop thru Clients\Data Flow Task - Get Teachers\Script Component.Outputs[Output 0].Columns[MiddleName]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Inputs[ADO NET Destination Input].Columns[Grade]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Grade"
                          externalMetadataColumnId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[Grade]"
                          lineageId="Package\Loop thru Clients\Data Flow Task - Get Teachers\Script Component.Outputs[Output 0].Columns[Grade]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Inputs[ADO NET Destination Input].Columns[HomeRoom]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="HomeRoom"
                          externalMetadataColumnId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[HomeRoom]"
                          lineageId="Package\Loop thru Clients\Data Flow Task - Get Teachers\Script Component.Outputs[Output 0].Columns[HomeRoom]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Inputs[ADO NET Destination Input].Columns[Department]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="Department"
                          externalMetadataColumnId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[Department]"
                          lineageId="Package\Loop thru Clients\Data Flow Task - Get Teachers\Script Component.Outputs[Output 0].Columns[Department]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Inputs[ADO NET Destination Input].Columns[Phone]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Phone"
                          externalMetadataColumnId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[Phone]"
                          lineageId="Package\Loop thru Clients\Data Flow Task - Get Teachers\Script Component.Outputs[Output 0].Columns[Phone]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Inputs[ADO NET Destination Input].Columns[Email]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="Email"
                          externalMetadataColumnId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[Email]"
                          lineageId="Package\Loop thru Clients\Data Flow Task - Get Teachers\Script Component.Outputs[Output 0].Columns[Email]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Inputs[ADO NET Destination Input].Columns[Address]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="Address"
                          externalMetadataColumnId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[Address]"
                          lineageId="Package\Loop thru Clients\Data Flow Task - Get Teachers\Script Component.Outputs[Output 0].Columns[Address]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Inputs[ADO NET Destination Input].Columns[Address2]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="Address2"
                          externalMetadataColumnId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[Address2]"
                          lineageId="Package\Loop thru Clients\Data Flow Task - Get Teachers\Script Component.Outputs[Output 0].Columns[Address2]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Inputs[ADO NET Destination Input].Columns[City]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="City"
                          externalMetadataColumnId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[City]"
                          lineageId="Package\Loop thru Clients\Data Flow Task - Get Teachers\Script Component.Outputs[Output 0].Columns[City]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Inputs[ADO NET Destination Input].Columns[State]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="State"
                          externalMetadataColumnId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[State]"
                          lineageId="Package\Loop thru Clients\Data Flow Task - Get Teachers\Script Component.Outputs[Output 0].Columns[State]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Inputs[ADO NET Destination Input].Columns[Zip]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="10"
                          cachedName="Zip"
                          externalMetadataColumnId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[Zip]"
                          lineageId="Package\Loop thru Clients\Data Flow Task - Get Teachers\Script Component.Outputs[Output 0].Columns[Zip]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Inputs[ADO NET Destination Input].Columns[Deactivate]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Deactivate"
                          externalMetadataColumnId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[Deactivate]"
                          lineageId="Package\Loop thru Clients\Data Flow Task - Get Teachers\Script Component.Outputs[Output 0].Columns[Deactivate]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[IMS_TeacherID]"
                          dataType="i4"
                          name="IMS_TeacherID" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[TeacherID]"
                          dataType="wstr"
                          length="50"
                          name="TeacherID" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[CampusID]"
                          dataType="wstr"
                          length="50"
                          name="CampusID" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[FirstName]"
                          dataType="wstr"
                          length="50"
                          name="FirstName" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[LastName]"
                          dataType="wstr"
                          length="50"
                          name="LastName" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[MiddleName]"
                          dataType="wstr"
                          length="50"
                          name="MiddleName" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[Grade]"
                          dataType="wstr"
                          length="50"
                          name="Grade" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[HomeRoom]"
                          dataType="wstr"
                          length="50"
                          name="HomeRoom" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[Department]"
                          dataType="wstr"
                          length="100"
                          name="Department" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[Phone]"
                          dataType="wstr"
                          length="50"
                          name="Phone" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[Email]"
                          dataType="wstr"
                          length="100"
                          name="Email" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[Address]"
                          dataType="wstr"
                          length="500"
                          name="Address" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[Address2]"
                          dataType="wstr"
                          length="500"
                          name="Address2" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[City]"
                          dataType="wstr"
                          length="50"
                          name="City" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[State]"
                          dataType="wstr"
                          length="2"
                          name="State" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[Zip]"
                          dataType="wstr"
                          length="10"
                          name="Zip" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[Race]"
                          dataType="wstr"
                          length="50"
                          name="Race" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[Gender]"
                          dataType="wstr"
                          length="50"
                          name="Gender" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[Deactivate]"
                          dataType="bool"
                          name="Deactivate" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[Import]"
                          dataType="bool"
                          name="Import" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[New]"
                          dataType="bool"
                          name="New" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[RejectMessage]"
                          dataType="wstr"
                          length="1000"
                          name="RejectMessage" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[TeachersUID]"
                          dataType="i4"
                          name="TeachersUID" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[RoomUID]"
                          dataType="i4"
                          name="RoomUID" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[TeacherStatus]"
                          dataType="wstr"
                          length="100"
                          name="TeacherStatus" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[PrimarySite]"
                          dataType="wstr"
                          length="50"
                          name="PrimarySite" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Outputs[ADO NET Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="ADO NET Destination Error Output"
                      synchronousInputId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Inputs[ADO NET Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Outputs[ADO NET Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Outputs[ADO NET Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Outputs[ADO NET Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Outputs[ADO NET Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\Script Component"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;11"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Script Component"
                  version="11">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="39">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_2b2c349c44254c909779ba0fe2c6cdf8.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{24732CD6-299E-4FA4-A4D4-5A62C5CE99CC}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_2b2c349c44254c909779ba0fe2c6cdf8</RootNamespace>
    <AssemblyName>SC_2b2c349c44254c909779ba0fe2c6cdf8</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|x64'">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\x64\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <DebugType>full</DebugType>
    <PlatformTarget>x64</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release|x64'">
    <OutputPath>bin\x64\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <Optimize>true</Optimize>
    <PlatformTarget>x64</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Net" />
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Net.Http.WebRequest" />
    <Reference Include="System.Security" />
    <Reference Include="System.Web" />
    <Reference Include="System.Web.Extensions" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="PowerSchoolTeachers.cs" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <WCFMetadata Include="Service References\" />
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces

using System;
using System.Data;
using System.Data.SqlClient;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using System.Security.Cryptography;
using System.Collections.Generic;
using System.Text;
using System.Net;
using System.IO;
using System.Collections.Specialized;
using System.Web;
using System.Web.Script.Serialization;

#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */
        ProcessTeachers();
    }

    public void ProcessTeachers()
    {
        string uri = Variables.ClientServer;
        string query = "";
        OAuthBase.Method method = OAuthBase.Method.GET;

        OAuthBase oAuth = new OAuthBase();
        oAuth.ConsumerKey = Variables.ClientIDPS;
        oAuth.ConsumerSecret = Variables.ClientSecret;
        oAuth.Token = "token_959b3659b65ddbb6f8552c3401";
        //oAuth.TokenSecret = "secret_40ec1d3617e7f58811c2f1e4416dcf2f7";

        /*
        System.Console.WriteLine("Sending a " + method.ToString() + " request to:");
        System.Console.WriteLine(uri);

        if (query.Length > 0 && (method == OAuthBase.Method.POST || method == OAuthBase.Method.DELETE))
        {
            System.Console.WriteLine("With the following data:");
            System.Console.WriteLine(query);
        }

        System.Console.WriteLine("XML response:");
        */


        //string xml = oAuth.oAuthWebRequest(method, uri, query);
        //System.Console.WriteLine(xml);
        //var TeacherList = RetrieveList(uri, oAuth.ConsumerKey, oAuth.ConsumerSecret);
        string respStr = oAuth.oAuthWebRequest(method, uri, query);
        ProcessData(respStr);

        //<?xml version="1.0" encoding="UTF-8"?>
        //<response status="ok">
        //<reports page="1" records_per_page="50" total_record_count="1" page_count="1">
        //	<report id="1" report_type="Grades" name="This Year's Grades" created_at="2010-09-20 19:04:42" last_viewed_at="2010-09-25 19:04:42">
        //		<csv status="Ready" generated_at="2010-09-28 01:29:51" url="https://my-domain.myhaikuclass.com/example/report_export.csv" />
        //	</report>
        //</reports>
        //</response>
    }

    private void ProcessData(string respStr)
    {
        Teachers[] TeacherList = ProcessList(respStr);
        try
        {
            var myConnectionString = this.Connections.ClientDatabse.ConnectionString;

            using (SqlConnection conn = new SqlConnection(this.Connections.ClientDatabse.ConnectionString))
            {
                if (conn.State != ConnectionState.Open) conn.Open();
                using (SqlCommand command = conn.CreateCommand())
                {

                    foreach (Teachers item in TeacherList)
                    {
                        Output0Buffer.AddRow();
                        Output0Buffer.TeacherID = item.TeacherID;
                        Output0Buffer.CampusID = item.CampusID;
                        Output0Buffer.FirstName = item.FirstName;
                        Output0Buffer.LastName = item.FirstName;
                        Output0Buffer.MiddleName = item.MiddleName;
                        Output0Buffer.Grade = item.Grade;
                        Output0Buffer.HomeRoom = item.HomeRoom;
                        Output0Buffer.Department = item.Department;
                        Output0Buffer.Phone = item.Phone;
                        Output0Buffer.Email = item.Email;
                        Output0Buffer.Address = item.Address;
                        Output0Buffer.Address2 = item.Address2;
                        Output0Buffer.City = item.City;
                        Output0Buffer.State = item.State;
                        Output0Buffer.Zip = item.Zip;
                        Output0Buffer.Deactivate = item.Deactivate;
                    }
                }
                if (conn.State != ConnectionState.Closed) conn.Close();
            }
        }
        catch (Exception ex)
        {
            FailComponent("ProcessData", "Error: " + ex.Message);
        }
    }

    private Teachers[] ProcessList(string TeacherList)
    {

        //string wsUrl = ClientServerURL;
        Teachers[] jsonReponse = null;

        try
        {
             if (TeacherList.Length > 0)
            {
                //MessageBox.Show("Waiting for response : OK");
                string jsonString = null;

                //MessageBox.Show("WStream read");
                //Deserialize our JSON
                JavaScriptSerializer sr = new JavaScriptSerializer();
                sr.MaxJsonLength = Int32.MaxValue;
                jsonReponse = sr.Deserialize<Teachers[]>(jsonString);

            }
            else
            {
                //string errorMessage = "Web service response Failed with Status Code: " + httpWResp.StatusCode;

                //FailComponent("GetWebSerbiceResult", "Web Service Url: " + wsUrl + "  " + errorMessage);
                //MessageBox.Show(errorMessage);
            }
        }
        catch (WebException ex)
        {
            //MessageBox.Show("WebException " + ex.ToString());
            FailComponent("GetWebServiceResult", "WebException: " + ex.Message);
        }
        catch (Exception ex)
        {
            //MessageBox.Show("Generic EX " + ex.ToString());

            FailComponent("GetWebServiceResult", "General Exception: " + ex.Message);
        }
        //  //MessageBox.Show(jsonResponse.Length.ToString());
        //MessageBox.Show("Got JSON Info");

        return jsonReponse;
    }

    private void FailComponent(string SubComponent, string message)
    {
        bool fail = false;
        IDTSComponentMetaData100 compMetadata = this.ComponentMetaData;
        compMetadata.FireError(1, SubComponent, message, "", 0, out fail);
    }


    public class OAuthBase
    {
        /// <summary>
        /// Provides a predefined set of algorithms that are supported officially by the protocol
        /// </summary>
        public enum SignatureTypes
        {
            HMACSHA1,
            PLAINTEXT,
            RSASHA1
        }

        /// <summary>
        /// Provides an internal structure to sort the query parameter
        /// </summary>
        protected class QueryParameter
        {
            private string name = null;
            private string value = null;

            public QueryParameter(string name, string value)
            {
                this.name = name;
                this.value = value;
            }

            public string Name
            {
                get { return name; }
            }

            public string Value
            {
                get { return value; }
            }
        }

        /// <summary>
        /// Comparer class used to perform the sorting of the query parameters
        /// </summary>
        protected class QueryParameterComparer : IComparer<QueryParameter>
        {

            #region IComparer<QueryParameter> Members

            public int Compare(QueryParameter x, QueryParameter y)
            {
                if (x.Name == y.Name)
                {
                    return string.Compare(x.Value, y.Value);
                }
                else
                {
                    return string.Compare(x.Name, y.Name);
                }
            }

            #endregion
        }

        protected const string OAuthVersion = "1.0";
        protected const string OAuthParameterPrefix = "oauth_";

        //
        // List of know and used oauth parameters' names
        //		
        protected const string OAuthConsumerKeyKey = "oauth_consumer_key";
        protected const string OAuthCallbackKey = "oauth_callback";
        protected const string OAuthVersionKey = "oauth_version";
        protected const string OAuthSignatureMethodKey = "oauth_signature_method";
        protected const string OAuthSignatureKey = "oauth_signature";
        protected const string OAuthTimestampKey = "oauth_timestamp";
        protected const string OAuthNonceKey = "oauth_nonce";
        protected const string OAuthTokenKey = "oauth_token";
        protected const string OAuthTokenSecretKey = "oauth_token_secret";
        protected const string OAuthVerifierKey = "oauth_verifier";

        protected const string HMACSHA1SignatureType = "HMAC-SHA1";
        protected const string PlainTextSignatureType = "PLAINTEXT";
        protected const string RSASHA1SignatureType = "RSA-SHA1";

        protected Random random = new Random();

        protected string unreservedChars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789-_.~";

        /// <summary>
        /// Helper function to compute a hash value
        /// </summary>
        /// <param name="hashAlgorithm">The hashing algoirhtm used. If that algorithm needs some initialization, like HMAC and its derivatives, they should be initialized prior to passing it to this function</param>
        /// <param name="data">The data to hash</param>
        /// <returns>a Base64 string of the hash value</returns>
        private string ComputeHash(HashAlgorithm hashAlgorithm, string data)
        {
            if (hashAlgorithm == null)
            {
                throw new ArgumentNullException("hashAlgorithm");
            }

            if (string.IsNullOrEmpty(data))
            {
                throw new ArgumentNullException("data");
            }

            byte[] dataBuffer = System.Text.Encoding.ASCII.GetBytes(data);
            byte[] hashBytes = hashAlgorithm.ComputeHash(dataBuffer);

            return Convert.ToBase64String(hashBytes);
        }

        /// <summary>
        /// Internal function to cut out all non oauth query string parameters (all parameters not begining with "oauth_")
        /// </summary>
        /// <param name="parameters">The query string part of the Url</param>
        /// <returns>A list of QueryParameter each containing the parameter name and value</returns>
        private List<QueryParameter> GetQueryParameters(string parameters)
        {
            if (parameters.StartsWith("?"))
            {
                parameters = parameters.Remove(0, 1);
            }

            List<QueryParameter> result = new List<QueryParameter>();

            if (!string.IsNullOrEmpty(parameters))
            {
                string[] p = parameters.Split('&');
                foreach (string s in p)
                {
                    if (!string.IsNullOrEmpty(s) && !s.StartsWith(OAuthParameterPrefix))
                    {
                        if (s.IndexOf('=') > -1)
                        {
                            string[] temp = s.Split('=');
                            result.Add(new QueryParameter(temp[0], temp[1]));
                        }
                        else
                        {
                            result.Add(new QueryParameter(s, string.Empty));
                        }
                    }
                }
            }

            return result;
        }

        /// <summary>
        /// This is a different Url Encode implementation since the default .NET one outputs the percent encoding in lower case.
        /// While this is not a problem with the percent encoding spec, it is used in upper case throughout OAuth
        /// </summary>
        /// <param name="value">The value to Url encode</param>
        /// <returns>Returns a Url encoded string</returns>
        public string UrlEncode(string value)
        {
            StringBuilder result = new StringBuilder();

            foreach (char symbol in value)
            {
                if (unreservedChars.IndexOf(symbol) != -1)
                {
                    result.Append(symbol);
                }
                else
                {
                    result.Append('%' + String.Format("{0:X2}", (int)symbol));
                }
            }

            return result.ToString();
        }

        /// <summary>
        /// Normalizes the request parameters according to the spec
        /// </summary>
        /// <param name="parameters">The list of parameters already sorted</param>
        /// <returns>a string representing the normalized parameters</returns>
        protected string NormalizeRequestParameters(IList<QueryParameter> parameters)
        {
            StringBuilder sb = new StringBuilder();
            QueryParameter p = null;
            for (int i = 0; i < parameters.Count; i++)
            {
                p = parameters[i];
                sb.AppendFormat("{0}={1}", p.Name, p.Value);

                if (i < parameters.Count - 1)
                {
                    sb.Append("&");
                }
            }

            return sb.ToString();
        }

        /// <summary>
        /// Generate the signature base that is used to produce the signature
        /// </summary>
        /// <param name="url">The full url that needs to be signed including its non OAuth url parameters</param>
        /// <param name="callBackUrl">The callback URL (for OAuth 1.0a).If your client cannot accept callbacks, the value MUST be 'oob' </param>
        /// <param name="oauthVerifier">This value MUST be included when exchanging Request Tokens for Access Tokens. Otherwise pass a null or an empty string</param>
        /// <param name="httpMethod">The http method used. Must be a valid HTTP method verb (POST,GET,PUT, etc)</param>
        /// <param name="signatureType">The signature type. To use the default values use <see cref="OAuthBase.SignatureTypes">OAuthBase.SignatureTypes</see>.</param>
        /// <returns>The signature base</returns>
        public string GenerateSignatureBase(Uri url, string callBackUrl, string oauthVerifier, string httpMethod, string timeStamp, string nonce, string signatureType, out string normalizedUrl, out string normalizedRequestParameters)
        {
            if (this.Token == null)
            {
                this.Token = string.Empty;
            }

            if (this.TokenSecret == null)
            {
                this.TokenSecret = string.Empty;
            }

            if (string.IsNullOrEmpty(this.ConsumerKey))
            {
                throw new ArgumentNullException("consumerKey");
            }

            if (string.IsNullOrEmpty(httpMethod))
            {
                throw new ArgumentNullException("httpMethod");
            }

            if (string.IsNullOrEmpty(signatureType))
            {
                throw new ArgumentNullException("signatureType");
            }

            normalizedUrl = null;
            normalizedRequestParameters = null;

            List<QueryParameter> parameters = GetQueryParameters(url.Query);
            parameters.Add(new QueryParameter(OAuthVersionKey, OAuthVersion));
            parameters.Add(new QueryParameter(OAuthNonceKey, nonce));
            parameters.Add(new QueryParameter(OAuthTimestampKey, timeStamp));
            parameters.Add(new QueryParameter(OAuthSignatureMethodKey, signatureType));
            parameters.Add(new QueryParameter(OAuthConsumerKeyKey, this.ConsumerKey));

            if (!string.IsNullOrEmpty(callBackUrl))
            {
                parameters.Add(new QueryParameter(OAuthCallbackKey, UrlEncode(callBackUrl)));
            }


            if (!string.IsNullOrEmpty(oauthVerifier))
            {
                parameters.Add(new QueryParameter(OAuthVerifierKey, oauthVerifier));
            }

            if (!string.IsNullOrEmpty(this.Token))
            {
                parameters.Add(new QueryParameter(OAuthTokenKey, this.Token));
            }

            parameters.Sort(new QueryParameterComparer());

            normalizedUrl = string.Format("{0}://{1}", url.Scheme, url.Host);
            if (!((url.Scheme == "http" && url.Port == 80) || (url.Scheme == "https" && url.Port == 443)))
            {
                normalizedUrl += ":" + url.Port;
            }
            normalizedUrl += url.AbsolutePath;
            normalizedRequestParameters = NormalizeRequestParameters(parameters);

            StringBuilder signatureBase = new StringBuilder();
            signatureBase.AppendFormat("{0}&", httpMethod.ToUpper());
            signatureBase.AppendFormat("{0}&", UrlEncode(normalizedUrl));
            signatureBase.AppendFormat("{0}", UrlEncode(normalizedRequestParameters));

            return signatureBase.ToString();
        }

        /// <summary>
        /// Generate the signature value based on the given signature base and hash algorithm
        /// </summary>
        /// <param name="signatureBase">The signature based as produced by the GenerateSignatureBase method or by any other means</param>
        /// <param name="hash">The hash algorithm used to perform the hashing. If the hashing algorithm requires initialization or a key it should be set prior to calling this method</param>
        /// <returns>A base64 string of the hash value</returns>
        public string GenerateSignatureUsingHash(string signatureBase, HashAlgorithm hash)
        {
            return ComputeHash(hash, signatureBase);
        }

        /// <summary>
        /// Generates a signature using the HMAC-SHA1 algorithm
        /// </summary>	
        /// <param name="url">The full url that needs to be signed including its non OAuth url parameters</param>
        /// <param name="callBackUrl">The callback URL (for OAuth 1.0a).If your client cannot accept callbacks, the value MUST be 'oob' </param>
        /// <param name="oauthVerifier">This value MUST be included when exchanging Request Tokens for Access Tokens. Otherwise pass a null or an empty string</param>
        /// <param name="httpMethod">The http method used. Must be a valid HTTP method verb (POST,GET,PUT, etc)</param>
        /// <returns>A base64 string of the hash value</returns>
        public string GenerateSignature(Uri url, string callBackUrl, string oauthVerifier, string httpMethod, string timeStamp, string nonce, out string normalizedUrl, out string normalizedRequestParameters)
        {
            return GenerateSignature(url, callBackUrl, oauthVerifier, httpMethod, timeStamp, nonce, SignatureTypes.HMACSHA1, out normalizedUrl, out normalizedRequestParameters);
        }

        /// <summary>
        /// Generates a signature using the specified signatureType 
        /// </summary>	
        /// <param name="url">The full url that needs to be signed including its non OAuth url parameters</param>
        /// <param name="callBackUrl">The callback URL (for OAuth 1.0a).If your client cannot accept callbacks, the value MUST be 'oob' </param>
        /// <param name="oauthVerifier">This value MUST be included when exchanging Request Tokens for Access Tokens. Otherwise pass a null or an empty string</param>
        /// <param name="httpMethod">The http method used. Must be a valid HTTP method verb (POST,GET,PUT, etc)</param>
        /// <param name="signatureType">The type of signature to use</param>
        /// <returns>A base64 string of the hash value</returns>
        public string GenerateSignature(Uri url, string callBackUrl, string oauthVerifier, string httpMethod, string timeStamp, string nonce, SignatureTypes signatureType, out string normalizedUrl, out string normalizedRequestParameters)
        {
            normalizedUrl = null;
            normalizedRequestParameters = null;

            switch (signatureType)
            {
                case SignatureTypes.PLAINTEXT:
                    return HttpUtility.UrlEncode(string.Format("{0}&{1}", this.ConsumerSecret, this.TokenSecret));
                case SignatureTypes.HMACSHA1:
                    string signatureBase = GenerateSignatureBase(url, callBackUrl, oauthVerifier, httpMethod, timeStamp, nonce, HMACSHA1SignatureType, out normalizedUrl, out normalizedRequestParameters);

                    HMACSHA1 hmacsha1 = new HMACSHA1();
                    hmacsha1.Key = Encoding.ASCII.GetBytes(string.Format("{0}&{1}", UrlEncode(this.ConsumerSecret), string.IsNullOrEmpty(this.TokenSecret) ? "" : UrlEncode(this.TokenSecret)));

                    return GenerateSignatureUsingHash(signatureBase, hmacsha1);
                case SignatureTypes.RSASHA1:
                    throw new NotImplementedException();
                default:
                    throw new ArgumentException("Unknown signature type", "signatureType");
            }
        }

        /// <summary>
        /// Generate the timestamp for the signature		
        /// </summary>
        /// <returns></returns>
        public virtual string GenerateTimeStamp()
        {
            // Default implementation of UNIX time of the current UTC time
            TimeSpan ts = DateTime.UtcNow - new DateTime(1970, 1, 1, 0, 0, 0, 0);
            return Convert.ToInt64(ts.TotalSeconds).ToString();
        }

        /// <summary>
        /// Generate a nonce
        /// </summary>
        /// <returns></returns>
        public virtual string GenerateNonce()
        {
            // Just a simple implementation of a random number between 123400 and 9999999
            return random.Next(123400, 9999999).ToString();
        }

        public enum Method { GET, POST, PUT, DELETE };
        private string _consumerKey = "asdf";
        private string _consumerSecret = "ghjk";
        private string _token = "";
        private string _tokenSecret = "";
        private string _callBackUrl = "oob";
        private string _oauthVerifier = "";

        public string ConsumerKey { get { return _consumerKey; } set { _consumerKey = value; } }
        public string ConsumerSecret { get { return _consumerSecret; } set { _consumerSecret = value; } }
        public string Token { get { return _token; } set { _token = value; } }
        public string TokenSecret { get { return _tokenSecret; } set { _tokenSecret = value; } }
        public string CallBackUrl { get { return _callBackUrl; } set { _callBackUrl = value; } }
        public string OAuthVerifier { get { return _oauthVerifier; } set { _oauthVerifier = value; } }


        /// <summary>
        /// Submit a web request using oAuth.
        /// </summary>
        /// <param name="method">GET or POST</param>
        /// <param name="url">The full url, including the querystring.</param>
        /// <param name="postData">Data to post (querystring format)</param>
        /// <returns>The web server response.</returns>
        public string oAuthWebRequest(Method method, string url, string postData)
        {
            string outUrl = "";
            string querystring = "";
            string ret = "";


            //Setup postData for signing.
            //Add the postData to the querystring.
            if (method == Method.POST || method == Method.DELETE)
            {
                if (postData.Length > 0)
                {
                    //Decode the parameters and re-encode using the oAuth UrlEncode method.
                    NameValueCollection qs = HttpUtility.ParseQueryString(postData);
                    postData = "";
                    foreach (string key in qs.AllKeys)
                    {
                        if (postData.Length > 0)
                        {
                            postData += "&";
                        }
                        qs[key] = HttpUtility.UrlDecode(qs[key]);
                        qs[key] = this.UrlEncode(qs[key]);
                        postData += key + "=" + qs[key];

                    }
                    if (url.IndexOf("?") > 0)
                    {
                        url += "&";
                    }
                    else
                    {
                        url += "?";
                    }
                    url += postData;
                }
            }

            Uri uri = new Uri(url);

            string nonce = this.GenerateNonce();
            string timeStamp = this.GenerateTimeStamp();

            //Generate Signature
            string sig = this.GenerateSignature(uri,
                this.CallBackUrl,
                this.OAuthVerifier,
                method.ToString(),
                timeStamp,
                nonce,
                out outUrl,
                out querystring);

            querystring += "&oauth_signature=" + this.UrlEncode(sig);

            //Convert the querystring to postData
            if (method == Method.POST || method == Method.DELETE)
            {
                postData = querystring;
                querystring = "";
            }

            if (querystring.Length > 0)
            {
                outUrl += "?";
            }

            ret = WebRequest(method, outUrl + querystring, postData);

            return ret;
        }

        /// <summary>
        /// Web Request Wrapper
        /// </summary>
        /// <param name="method">Http Method</param>
        /// <param name="url">Full url to the web resource</param>
        /// <param name="postData">Data to post in querystring format</param>
        /// <returns>The web server response.</returns>
        public string WebRequest(Method method, string url, string postData)
        {
            HttpWebRequest webRequest = null;
            StreamWriter requestWriter = null;
            string responseData = "";

            webRequest = System.Net.WebRequest.Create(url) as HttpWebRequest;
            webRequest.Method = method.ToString();
            webRequest.ServicePoint.Expect100Continue = false;
            //webRequest.UserAgent	= "Identify your application please.";
            //webRequest.Timeout = 20000;

            if (method == Method.POST || method == Method.DELETE)
            {

                webRequest.ContentType = "application/x-www-form-urlencoded";

                //POST the data.
                requestWriter = new StreamWriter(webRequest.GetRequestStream());
                try
                {
                    requestWriter.Write(postData);
                }
                catch
                {
                    throw;
                }
                finally
                {
                    requestWriter.Close();
                    requestWriter = null;
                }
            }

            responseData = WebResponseGet(webRequest);

            webRequest = null;

            return responseData;

        }

        /// <summary>
        /// Process the web response.
        /// </summary>
        /// <param name="webRequest">The request object.</param>
        /// <returns>The response data.</returns>
        public string WebResponseGet(HttpWebRequest webRequest)
        {
            StreamReader responseReader = null;
            string responseData = "";

            try
            {
                responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream());
                responseData = responseReader.ReadToEnd();
            }
            catch
            {
                throw;
            }
            finally
            {
                webRequest.GetResponse().GetResponseStream().Close();
                responseReader.Close();
                responseReader = null;
            }

            return responseData;
        }
    }


    public class Teachers
    {
        public int Id { get; set; }
        public int CustomerId { get; set; }
        public string TeacherID { get; set; }
        public string CampusID { get; set; }
        public string FirstName { get; set; }
        public string LastName { get; set; }
        public string MiddleName { get; set; }
        public string Grade { get; set; }
        public string HomeRoom { get; set; }
        public string Department { get; set; }
        public string Phone { get; set; }
        public string Email { get; set; }
        public string Address { get; set; }
        public string Address2 { get; set; }
        public string City { get; set; }
        public string State { get; set; }
        public string Zip { get; set; }
        public string Deactivate { get; set; }
    }

}





]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String TeacherID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool TeacherID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CampusID
    {
        set
        {
            this[1] = value;
        }
    }
    public bool CampusID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String FirstName
    {
        set
        {
            this[2] = value;
        }
    }
    public bool FirstName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String LastName
    {
        set
        {
            this[3] = value;
        }
    }
    public bool LastName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String MiddleName
    {
        set
        {
            this[4] = value;
        }
    }
    public bool MiddleName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Grade
    {
        set
        {
            this[5] = value;
        }
    }
    public bool Grade_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String HomeRoom
    {
        set
        {
            this[6] = value;
        }
    }
    public bool HomeRoom_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Department
    {
        set
        {
            this[7] = value;
        }
    }
    public bool Department_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Phone
    {
        set
        {
            this[8] = value;
        }
    }
    public bool Phone_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Email
    {
        set
        {
            this[9] = value;
        }
    }
    public bool Email_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Address
    {
        set
        {
            this[10] = value;
        }
    }
    public bool Address_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Address2
    {
        set
        {
            this[11] = value;
        }
    }
    public bool Address2_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String City
    {
        set
        {
            this[12] = value;
        }
    }
    public bool City_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String State
    {
        set
        {
            this[13] = value;
        }
    }
    public bool State_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(13);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Zip
    {
        set
        {
            this[14] = value;
        }
    }
    public bool Zip_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(14);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Deactivate
    {
        set
        {
            this[15] = value;
        }
    }
    public bool Deactivate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(15);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_2b2c349c44254c909779ba0fe2c6cdf8.Properties.Settings.get_Default():SC_2b2c349c44254c909779ba0fe2c6cdf8.Properties.Sett" +
    "ings")]

namespace SC_2b2c349c44254c909779ba0fe2c6cdf8.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 ClientDatabse
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"ClientDatabse").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String ClientIDPS
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientIDPS"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientSecret
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientSecret"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientServer
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientServer"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_2b2c349c44254c909779ba0fe2c6cdf8</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_2b2c349c44254c909779ba0fe2c6cdf8</msb:DisplayName>
		<msb:ProjectId>{6E597D31-D443-42AE-8EBD-562A6C56847C}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_2b2c349c44254c909779ba0fe2c6cdf8.csproj"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="PowerSchoolTeachers.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_2b2c349c44254c909779ba0fe2c6cdf8")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_2b2c349c44254c909779ba0fe2c6cdf8")]
[assembly: AssemblyCopyright("Copyright @  2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_2b2c349c44254c909779ba0fe2c6cdf8.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_2b2c349c44254c909779ba0fe2c6cdf8.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_2b2c349c44254c909779ba0fe2c6cdf8.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_2b2c349c44254c909779ba0fe2c6cdf8.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_2b2c349c44254c909779ba0fe2c6cdf8.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Teachers.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SC_2b2c349c44254c909779ba0fe2c6cdf8
{
    public class PowerSchoolTeachers
    {
        public int Id { get; set; }
        public int CustomerId { get; set; }
        public string TeacherID { get; set; }
        public string CampusID { get; set; }
        public string FirstName { get; set; }
        public string LastName { get; set; }
        public string MiddleName { get; set; }
        public string Grade { get; set; }
        public string HomeRoom { get; set; }
        public string Department { get; set; }
        public string Phone { get; set; }
        public string Email { get; set; }
        public string Address { get; set; }
        public string Address2 { get; set; }
        public string City { get; set; }
        public string State { get; set; }
        public string Zip { get; set; }
        public string Deactivate { get; set; }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ClassDiagram1.cd]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<ClassDiagram MajorVersion="1" MinorVersion="1">
  <Class Name="Output0Buffer" Collapsed="true">
    <Position X="6.5" Y="0.5" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AGggAHAAACBAAAAIgAARGAAkEABAAAQCUACoJQEAABg=</HashCode>
      <FileName>BufferWrapper.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="UserComponent" Collapsed="true">
    <Position X="0.5" Y="0.5" Width="1.5" />
    <TypeIdentifier>
      <HashCode>CAAAABAAAAAAAAAACAAAAAAAAAAAAAQAAAQAgCAAAAA=</HashCode>
      <FileName>ComponentWrapper.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="Connections" Collapsed="true">
    <Position X="3" Y="0.5" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>ComponentWrapper.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="Variables" Collapsed="true">
    <Position X="3" Y="2.5" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAABAAAAAEAAAAAAAAAAAAAgAgAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>ComponentWrapper.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="ScriptMain" Collapsed="true">
    <Position X="0.5" Y="2" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAABAQACAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>main.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="OAuthBase" Collapsed="true">
    <Position X="4.75" Y="0.5" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AwBAQAAITAAACYAMAgABNgVHAIAAMAUAAA1ACgwBAEA=</HashCode>
      <FileName>main.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="SC_2b2c349c44254c909779ba0fe2c6cdf8.PowerSchoolTeachers" Collapsed="true">
    <Position X="3" Y="1.5" Width="1.5" />
    <TypeIdentifier>
      <HashCode>ACACAEAAACBAAAAIAAARCAAAEAAAABACAAAAJQEAAAg=</HashCode>
      <FileName>PowerSchoolTeachers.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="SC_2b2c349c44254c909779ba0fe2c6cdf8.Properties.Resources" Collapsed="true">
    <Position X="4.75" Y="1.5" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAAAAABEAAAAQAAAAAAAAAAAAAAAIA=</HashCode>
    </TypeIdentifier>
  </Class>
  <Class Name="SC_2b2c349c44254c909779ba0fe2c6cdf8.Properties.Settings" Collapsed="true">
    <Position X="6.5" Y="1.5" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAAAAAAIAAAAAABAAAAAAAAAAAAAAA=</HashCode>
    </TypeIdentifier>
  </Class>
  <Font Name="Segoe UI" Size="9" />
</ClassDiagram>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[PowerSchoolTeachers.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SC_2b2c349c44254c909779ba0fe2c6cdf8
{
    public class PowerSchoolTeachers
    {
        public int Id { get; set; }
        public int CustomerId { get; set; }
        public string TeacherID { get; set; }
        public string CampusID { get; set; }
        public string FirstName { get; set; }
        public string LastName { get; set; }
        public string MiddleName { get; set; }
        public string Grade { get; set; }
        public string HomeRoom { get; set; }
        public string Department { get; set; }
        public string Phone { get; set; }
        public string Email { get; set; }
        public string Address { get; set; }
        public string Address2 { get; set; }
        public string City { get; set; }
        public string State { get; set; }
        public string Zip { get; set; }
        public string Deactivate { get; set; }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_2b2c349c44254c909779ba0fe2c6cdf8.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDANyH/VsAAAAAAAAAAOAAIiALATAAAFYAAAAIAAAAAAAABnQA
AAAgAAAAgAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAADAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAALRzAABPAAAAAIAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAKAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAADFQAAAAgAAAAVgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAgAAAAAYAAABYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAKAAAAACAAAAXgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADo
cwAAAAAAAEgAAAACAAUA/DIAAABAAAABAAAAAAAAAPxyAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioeAigEAAAGKhMwBABXAAAAAQAA
EQJ7AgAABG83AAAGCnIBAABwCxYMc30AAAYlAnsCAAAEbzUAAAZvbwAABiUCewIAAARvNgAABm9x
AAAGJXIDAABwb3MAAAYIBgdvegAABg0CCSgFAAAGKgAbMAQA2QEAAAIAABECAygGAAAGCgJ7AQAA
BG8zAAAGbxIAAAomAnsBAAAEbzMAAAZvEgAACnMTAAAKCwdvFAAAChcuBgdvFQAACgdvFgAACgwG
DRYTBDg3AQAACREEmhMFAnsDAAAEbyoAAAYCewMAAAQRBW+CAAAGbwoAAAYCewMAAAQRBW+EAAAG
bwwAAAYCewMAAAQRBW+GAAAGbw4AAAYCewMAAAQRBW+GAAAGbxAAAAYCewMAAAQRBW+KAAAGbxIA
AAYCewMAAAQRBW+MAAAGbxQAAAYCewMAAAQRBW+OAAAGbxYAAAYCewMAAAQRBW+QAAAGbxgAAAYC
ewMAAAQRBW+SAAAGbxoAAAYCewMAAAQRBW+UAAAGbxwAAAYCewMAAAQRBW+WAAAGbx4AAAYCewMA
AAQRBW+YAAAGbyAAAAYCewMAAAQRBW+aAAAGbyIAAAYCewMAAAQRBW+cAAAGbyQAAAYCewMAAAQR
BW+eAAAGbyYAAAYCewMAAAQRBW+gAAAGbygAAAYRBBdYEwQRBAmOaT+//v//3goILAYIbxcAAArc
B28UAAAKLAYHbxgAAAreCgcsBgdvFwAACtzeIBMGAnJFAABwcl0AAHARBm8ZAAAKKBoAAAooBwAA
Bt4AKgAAAEFMAAACAAAARQAAAE0BAACSAQAACgAAAAAAAAACAAAALwAAAH0BAACsAQAACgAAAAAA
AAAAAAAACAAAALABAAC4AQAAIAAAABAAAAEbMAQAZAAAAAMAABEUCgNvGwAAChYxGRQLcxwAAAol
IP///39vHQAACgdvAQAAKwrePAwCcm0AAHBylQAAcAhvGQAACigaAAAKKAcAAAbeHg0Ccm0AAHBy
swAAcAlvGQAACigaAAAKKAcAAAbeAAYqARwAAAAAAgAkJgAeEQAAAQAAAgAkRAAeEAAAARMwBwAZ
AAAABAAAERYKAigfAAAKFwMEcgEAAHAWEgBvIAAACioeAigtAAAGKioCAwQFKCEAAAoqJgIWAygi
AAAKKloDLAgCFigjAAAKKnLbAABwcyQAAAp6JgIXAygiAAAKKloDLAgCFygjAAAKKnLbAABwcyQA
AAp6JgIYAygiAAAKKloDLAgCGCgjAAAKKnLbAABwcyQAAAp6JgIZAygiAAAKKloDLAgCGSgjAAAK
KnLbAABwcyQAAAp6JgIaAygiAAAKKloDLAgCGigjAAAKKnLbAABwcyQAAAp6JgIbAygiAAAKKloD
LAgCGygjAAAKKnLbAABwcyQAAAp6JgIcAygiAAAKKloDLAgCHCgjAAAKKnLbAABwcyQAAAp6JgId
AygiAAAKKloDLAgCHSgjAAAKKnLbAABwcyQAAAp6JgIeAygiAAAKKloDLAgCHigjAAAKKnLbAABw
cyQAAAp6KgIfCQMoIgAACipeAywJAh8JKCMAAAoqctsAAHBzJAAACnoqAh8KAygiAAAKKl4DLAkC
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
I0Jsb2IAAAAAAAAAAgAAAVcfogkJCwAAAPoBMwAWAAABAAAATgAAAA8AAABOAAAApwAAAIQAAAAB
AAAAfgAAABYAAAB8AAAADwAAAAkAAABTAAAAfgAAAAQAAAABAAAACQAAAAEAAAAGAAAAAQAAAAAA
VgoBAAAAAAAGAFgIVRAGAOwIVRAGAKQHMRAPAMkQAAAGANEHJw0GADsIJw0GABwIJw0GANMIJw0G
AHgIJw0GAJEIJw0GAOgHJw0GAAMIawkKAKwIswUOAHoNMBMOAGMEMBMGAOUNLAwSAIgNkBIGAHoS
LAwGAFQMLAwGADgM1hUGANQACwIGALYOeBQGANMACwISACgKLAwGALAA1hUGAI0MLAwSADkNagIS
AAsUkBIGAMoPgwEGAJ4OgwEGAHwMLAwGAMcACwIGAGwHVRAKAOEOswUWANIOswUKAA4OswUKAJ0T
swUaAGYAUw8GAIcHMRAGAPIOdRAGAAIO4wwSACMHLAoSALgHLAoSALgGzgwOAG0N7w0OADgHuwEG
APIELAwGALwJLAweAPMP+AwiAAEAew8GAMMNLAwiACoAew8iAE0Aew8aAH8AUw8aABoAUw+XAJgU
AAAaAJAAUw8GAEMGLAwGAP4ELAwGAPcVJw0GAK0NLAwGAGIJeBQGAOUTLAwGAJkOLAwGANsALAwG
ALkACwImACgW9wEGADMM1hUGAJUNLAwGAN0NLAwGAKoFLAwGAP0ALAwSAA8UkBISALETkBIGABMM
gwEGANcPgwESAOIGkBIGAKsOgwEAAAAAJwEAAAAAAQABAAEAEAC2DAAAEAABAAEAAQAQAMQOAACJ
AAEACQABABAAfxMAAJUAAQAtAAEAEAB5EQAASQAEADIAAQAQABMRAABJAAUANAABABAApxEDAUkA
BgA4AAAAEAB8ENgQSQAYAF0AAAEQAFoR2BCxABoAYQACABAArgYAAEkAGwBkAAIAEADCEQAASQAy
AH4AAgEAAB0RAAB9AEQAowAEABAAuw8AAEkASACjAAQAEACkDwAASQBKAKYAAgEAAIQEAAB9AEoA
qAAGAHkRKwQGABMRLwQGAMQOMwQBAI0TNwQBAI0TNwQBANgCPAQBAOwCPAQBAKMCRgEBAL4CRgEB
AFUDRgEBADsDRgEBAB8DRgEBAAgDRgEBANEDRgEBABkERgEBAHADRgEBALoDRgEBAAAERgEBAIkC
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
AAABACsJAAABACsJAAABACsJAAABACsJAAABACsJAAABACsJAAABACsJAAABACsJAAABACsJAAAB
ACsJAAABACsJAAABACsJAAABACsJAAABACsJAAABACsJAAABACsJAAABACsJAAABACsJAAABACsJ
AAABACsJAAABACsJAAABACsJAAABACsJAAABACsJAAABACsJAAABACsJAAABACsJAAABACsJAAAB
ACsJAAABACsJAAABACsJAAABACsJAAABAD4SAAACACcQAAADAJ8RAAAEABwOAAABAKMTAAABAKMT
AAABACsJAAABACsJAAABACsJAAABACsJAAABACsJAAABACsJAAABACsJAAABACsJAAABACsJAAAB
ACsJAAABACsJAAABACsJAAABACsJAAABACsJAAABACsJAAABACsJAAABACsJAAABACsJAAABACsJ
AAABAEYMAAACAPIBAAABABUSAAABACsJAAABABUSAAABAPMLAAACAOcLAAADAD0PAAAEAIAEAAAF
AI8OAAAGALAEAAAHACoGAgAIALgLAgAJAMsRAAABAKAGAAACAOoJAAABAPMLAAACAOcLAAADAD0P
AAAEAIAEAAAFAI8OAAAGALAEAgAHALgLAgAIAMsRAAABAPMLAAACAOcLAAADAD0PAAAEAIAEAAAF
AI8OAAAGALAEAAAHACoGAgAIALgLAgAJAMsRAAABACsJAAABACsJAAABACsJAAABACsJAAABACsJ
AAABACsJAAABAIsEAAACAPMLAAADAOkBAAABAIsEAAACAPMLAAADAOkBAAABABoUAAABACsJAAAB
ACsJAAABACsJAAABACsJAAABACsJAAABACsJAAABACsJAAABACsJAAABACsJAAABACsJAAABACsJ
AAABACsJAAABACsJAAABACsJAAABACsJAAABACsJAAABACsJAAABACsJAAABAJoFAAACACsJAAAB
AO0UAAACAEAWDgAGAAkAEhABABEAEhAGABkAEhAKACkAEhAQADEAEhAQADkAEhAQAEEAEhAQAEkA
EhAQAFEAEhAQAFkAEhAQAGEAEhAQAGkAEhAGAAkBEhAGADkBEhAGAFkBEhAdACkBCgkGACkBFQkG
ADEBlAk+AHEAEhAQAGkBDwdCAGkBsQwGAHEAVQRIAHkBAAcGAGkB+gYGAIEA3gQ+AIEBZhJNAIEB
AApeAIkBEhAGAIkBCwoBAIkBTgliACkBxwFzAJEBCBB5ABEBEhCEABEBIwyQABEBsAsBAJkBEhAQ
ABEB0xQGABEBDxMGABEBEhOWACkBEhAGACkBZgGeACkBSRGmAJEAEhAGAJEBTQ2sAKEBfwWyAKkB
Ag+5ACkBBxG/ALEBGgzFACkBsxTMALkBhBTSANEBEAXZANEB8xXiAEEBEhDoAGEBEhAGAOkBEhAQ
AIEBNBb1APEBeQH6APEBLBEAAaEAwwkGAfkBhQkNAYEBHQoiAYEBRwknARQAEhAGAIEBHhM0AYEB
Wgk7ARQAUgJAAYEBPBZGAbEAEhAGAIEBhRFRAbEAbgRWAYEBcxJcAbEAbgRiAZEAqQk+ABwAGgx3
AbEAbRJ9ASQAvhNeAMEAABY+ABQA9hOWAcEAnwU+AMEAPRQ+AIEBcxKhAYEBHBaoAcEA7RNeAIEB
ZhKuAcEA7wk+AIEBSw8+ALEAbRK1ARkC1ATCAckAEhAGACEC7xTHASkCEhAGADECEhDNATkCyBTZ
ATkCEhDfATkCGA3qAdEARBD1AfkB+wD5AUECqQk+AJkAcxT+AQkCqQk+ABkCsgkUAtkAWhIaAtkA
GgwfAhkCygTCAdkAIwzNAYEBZhIkAoEBWgksAsEAEhAQAIEBZhIxAkkCCAc/AkkCdQQQAOEArRNG
AlECMQlMAkkCOAYQAEkCCQxRAukAEhBXAmECZgcQAGEC+gYGAEkC7gZkAmkC9wtRAvEAEhBXAnEC
SwQ+AFkC+gYGAHEC+gYGAJkAEhAGAIEBSAZqAg4AbACUAg4AcACbAg4AdACoAg4AeADNAg4AfADq
Ag4AgAAFAw4AhAAyAw4AiABRAw4AjABwAw4AkACHAw4AlACeAw4AmADDAw4AnADgAw4AoADzAw4A
pAAGBAgAFAEXBAgAGAEcBAgAHAEhBAgALAEXBAgAMAEcBAgANAEhBAgAOAEmBC4ACwAcBS4AEwAl
BS4AGwBEBS4AIwBNBS4AKwB2BS4AMwB2BS4AOwB2BS4AQwBNBS4ASwB8BS4AUwB2BS4AWwCTBUMA
YwAcBMEAawAcBOEAawAcBAEBawAcBAMBcwAcBCEBawAcBEEBawAcBGEBawAcBIEBawAcBKEBawAc
BMEBawAcBOEBawAcBAECawAcBCECawAcBEECawAcBGECawAcBIECawAcBKECawAcBMECawAcBOEC
awAcBEEDawAcBEEGawAcBGEGawAcBIEGawAcBKEGawAcBMEGawAcBOEGawAcBOkGewBEBQAHawAc
BAEHawAcBAkHewBEBSAHawAcBCEHawAcBEAHawAcBEEHawAcBGAHawAcBGEHawAcBIAHawAcBIEH
awAcBKAHawAcBKEHawAcBMAHawAcBMEHawAcBOAHawAcBOEHawAcBAAIawAcBAEIawAcBCAIawAc
BCEIawAcBEAIawAcBEEIawAcBGAIawAcBGEIawAcBIAIawAcBKAIawAcBMAIawAcBOAIawAcBAAJ
awAcBCAJawAcBEAJawAcBGAJawAcBIAJawAcBKAJawAcBMAJawAcBOAJawAcBAAKawAcBCAKawAc
BEAKawAcBGAKawAcBIAKawAcBKAKawAcBMAKawAcBOAKawAcBAALawAcBCALawAcBEALawAcBGAL
awAcBMAPawAcBOAPawAcBAAQawAcBCAQawAcBEAQawAcBGAQawAcBIAQawAcBKAQawAcBMAQawAc
BOAQawAcBAARawAcBCARawAcBEARawAcBGARawAcBIARawAcBKARawAcBMARawAcBOARawAcBAAS
awAcBCASawAcBEASawAcBGASawAcBIASawAcBKASawAcBMASawAcBOASawAcBAATawAcBCATawAc
BEATawAcBGATawAcBIATawAcBKATawAcBMATawAcBOATawAcBAAUawAcBCAUawAcBCQALABTAG8A
mgDwABMBSQFoAY0BvAHTAQQCOAJeAgMAAQAFACEABgAiAAcAJQAIADcACQA5AAoAOgALAEAADQBS
AAAAQgH5BAAAlgr9BAAAXQH5BAAAqwr9BAAAdQX5BAAA+gr9BAAAWgX5BAAA5gr9BAAAPgX5BAAA
0Ar9BAAAxAT5BAAAvwr9BAAAcwz5BAAAWAv9BAAAWRP5BAAAjgv9BAAA4gX5BAAADwv9BAAAUAr5
BAAARwv9BAAAMBL5BAAAewv9BAAA8gD5BAAAggr9BAAAFxb5BAAApAv9BAAAQgf5BAAAIAv9BAAA
eQ75BAAAbAv9BAAAWwf5BAAAMQv9BAAA1AYBBQAAkQH5BAAAAhP5BAAA5g/5BAAATwIHBQAARwIH
BQAAQgH5BAAAXQH5BAAAdQX5BAAAWgX5BAAAPgX5BAAAxAT5BAAAcwz5BAAAWRP5BAAA4gX5BAAA
UAr5BAAAMBL5BAAA8gD5BAAAFxb5BAAAQgf5BAAAeQ75BAAAWwf5BAAA8g4LBQAAggYRBQAAKBMX
BQAAlRX5BAAA3xL5BAAApAz5BAAArxL5BAAA2gv5BAAALg/5BAAATwIHBQAARwIHBQAAQgH5BAAA
XQH5BAAAdQX5BAAAWgX5BAAAPgX5BAAAxAT5BAAAcwz5BAAAWRP5BAAA4gX5BAAAUAr5BAAAMBL5
BAAA8gD5BAAAFxb5BAAAQgf5BAAAeQ75BAAAWwf5BAAAlQX5BAAAJQn5BAEACgADAAEACwAFAAEA
DAAHAAEADQAJAAEADgALAAEADwANAAEAEAAPAAEAEQARAAEAEgATAAEAEwAVAAEAFAAXAAEAFQAZ
AAEAFgAbAAEAFwAdAAEAGAAfAAEAGQAhAAEAGgAjAAEAGwAlAAEAHAAnAAEAHQApAAEAHgArAAEA
HwAtAAEAIAAvAAEAIQAxAAEAIgAzAAEAIwA1AAEAJAA3AAEAJQA5AAEAJgA7AAEAJwA9AAEAKAA/
AAEAKQBBAAIAMwBDAAIANQBFAAIANgBHAAIANwBJAAIAOABLAAEAOQBLAAIAOgBNAAEAOwBNAAIA
PABPAAEAPQBPAAIAPgBRAAEAPwBRAAIAQABTAAEAQQBTAAIAQgBVAAEAQwBVAAIARABXAAEARQBX
AAIARgBZAAEARwBZAAIASABbAAEASQBbAAIASgBdAAEASwBdAAIATABfAAEATQBfAAIATgBhAAEA
TwBhAAIAUABjAAEAUQBjAAIAUgBlAAEAUwBlAAIAVABnAAEAVQBnAAIAVgBpAAEAVwBpAAIAWABr
AAEAWQBrAAIAWgBtAAEAWwBtAAIAXgBvAAIAXwBxAAEAYABxAAIAYQBzAAIAbgB1AAEAbwB1AAIA
cAB3AAEAcQB3AAIAcgB5AAEAcwB5AAIAdAB7AAEAdQB7AAIAdgB9AAEAdwB9AAIAeAB/AAEAeQB/
AAIAfgCBAAEAfwCBAAIAgACDAAEAgQCDAAIAggCFAAEAgwCFAAIAhACHAAEAhQCHAAIAhgCJAAEA
hwCJAAIAiACLAAEAiQCLAAIAigCNAAEAiwCNAAIAjACPAAEAjQCPAAIAjgCRAAEAjwCRAAIAkACT
AAEAkQCTAAIAkgCVAAEAkwCVAAIAlACXAAEAlQCXAAIAlgCZAAEAlwCZAAIAmACbAAEAmQCbAAIA
mgCdAAEAmwCdAAIAnACfAAEAnQCfAAIAngChAAEAnwChAAIAoACjAAEAoQCjAAIApAClAAIApQCn
ABUALQFwAYUBBIAAAAEAAAAAAAAAAAAAAAAAAwEAAAQAAAAAAAAAAAAAAHACAgIAAAAADgAAAAAA
AAAAAAAAeQLIEwAAAAAEAAAAAAAAAAAAAABwArsBAAAAAAQAAAAAAAAAAAAAAHACLAwAAAAADgAA
AAAAAAAAAAAAeQJGFAAAAAAOAAAAAAAAAAAAAAB5AiYOAAAAAAQAAAAAAAAAAAAAAIICYxEAAAAA
DgAAAAAAAAAAAAAAeQJJDgAAAAAEAAAAAAAAAAAAAACLAvcBAAAAAAAAAAABAAAAhhAAAAoAAgAL
AAIADAAKAA0ACgAOAAoADwAKAD0AaQAAAAAAAElEVFNDb21wb25lbnRNZXRhRGF0YTEwMABJRFRT
VmFyaWFibGUxMDAASURUU1J1bnRpbWVDb25uZWN0aW9uQ29sbGVjdGlvbjEwMABJRFRTUnVudGlt
ZUNvbm5lY3Rpb24xMDAASURUU0Nvbm5lY3Rpb25NYW5hZ2VyMTAwAElEVFNWYXJpYWJsZXMxMDAA
SURUU0V2YWx1YXRvckNvbnRleHQxMDAAUlNBU0hBMQBITUFDU0hBMQBJQ29sbGVjdGlvbmAxAElD
b21wYXJlcmAxAElMaXN0YDEASW50MzIAZ2V0X0FkZHJlc3MyAHNldF9BZGRyZXNzMgBUb0ludDY0
AFNDXzJiMmMzNDljNDQyNTRjOTA5Nzc5YmEwZmUyYzZjZGY4ADxNb2R1bGU+AGdldF9UZWFjaGVy
SUQAc2V0X1RlYWNoZXJJRABnZXRfQ2FtcHVzSUQAc2V0X0NhbXB1c0lEAEdldE91dHB1dElEAERF
TEVURQBnZXRfQVNDSUkAU3lzdGVtLklPAGdldF9DbGllbnRJRFBTAEdFVABQT1NUAFBVVABQTEFJ
TlRFWFQAdmFsdWVfXwBTeXN0ZW0uRGF0YQBnZXRfQ29tcG9uZW50TWV0YURhdGEAUHJvY2Vzc0Rh
dGEAcG9zdERhdGEAZGF0YQBTeXN0ZW0uV2ViAG1zY29ybGliAFN5c3RlbS5Db2xsZWN0aW9ucy5H
ZW5lcmljAGdldF9JZABzZXRfSWQAZ2V0X0N1c3RvbWVySWQAc2V0X0N1c3RvbWVySWQAQWRkAE1h
cmtPdXRwdXRzRmluaXNoZWQAU3lzdGVtLkNvbGxlY3Rpb25zLlNwZWNpYWxpemVkADxBZGRyZXNz
Mj5rX19CYWNraW5nRmllbGQAPFRlYWNoZXJJRD5rX19CYWNraW5nRmllbGQAPENhbXB1c0lEPmtf
X0JhY2tpbmdGaWVsZAA8SWQ+a19fQmFja2luZ0ZpZWxkADxDdXN0b21lcklkPmtfX0JhY2tpbmdG
aWVsZAA8R3JhZGU+a19fQmFja2luZ0ZpZWxkADxNaWRkbGVOYW1lPmtfX0JhY2tpbmdGaWVsZAA8
TGFzdE5hbWU+a19fQmFja2luZ0ZpZWxkADxGaXJzdE5hbWU+a19fQmFja2luZ0ZpZWxkADxQaG9u
ZT5rX19CYWNraW5nRmllbGQAPFN0YXRlPmtfX0JhY2tpbmdGaWVsZAA8RGVhY3RpdmF0ZT5rX19C
YWNraW5nRmllbGQAPEVtYWlsPmtfX0JhY2tpbmdGaWVsZAA8SG9tZVJvb20+a19fQmFja2luZ0Zp
ZWxkADxaaXA+a19fQmFja2luZ0ZpZWxkADxBZGRyZXNzPmtfX0JhY2tpbmdGaWVsZAA8RGVwYXJ0
bWVudD5rX19CYWNraW5nRmllbGQAPENpdHk+a19fQmFja2luZ0ZpZWxkAFJlYWRUb0VuZABDcmVh
dGVDb21tYW5kAFNxbENvbW1hbmQAQXBwZW5kAHNldF9NZXRob2QAaHR0cE1ldGhvZABtZXRob2QA
ZGVmYXVsdEluc3RhbmNlAEdlbmVyYXRlTm9uY2UAbm9uY2UAZ2V0X0dyYWRlAHNldF9HcmFkZQBV
cmxEZWNvZGUAVXJsRW5jb2RlAGdldF9NZXNzYWdlAG1lc3NhZ2UASURpc3Bvc2FibGUAUnVudGlt
ZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAZ2V0X05hbWUAZ2V0X01pZGRsZU5hbWUAc2V0
X01pZGRsZU5hbWUAZ2V0X0xhc3ROYW1lAHNldF9MYXN0TmFtZQBnZXRfRmlyc3ROYW1lAHNldF9G
aXJzdE5hbWUAR2V0UnVudGltZUNvbm5lY3Rpb25CeU5hbWUAbmFtZQBnZXRfU2NoZW1lAERhdGVU
aW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAGdldF9QaG9uZQBzZXRfUGhvbmUA
UlNBU0hBMVNpZ25hdHVyZVR5cGUASE1BQ1NIQTFTaWduYXR1cmVUeXBlAFBsYWluVGV4dFNpZ25h
dHVyZVR5cGUAc2lnbmF0dXJlVHlwZQBzZXRfQ29udGVudFR5cGUAQ29tcGFyZQBHZW5lcmF0ZVNp
Z25hdHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAR2VuZXJhdGVT
aWduYXR1cmVCYXNlAHNpZ25hdHVyZUJhc2UAT0F1dGhCYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NC
YXNlAGdldF9DbGllbnREYXRhYnNlAFdlYlJlc3BvbnNlAEdldFJlc3BvbnNlAENsb3NlAERpc3Bv
c2UAQ3JlYXRlAGdldF9TdGF0ZQBzZXRfU3RhdGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29ubmVj
dGlvblN0YXRlAGdldF9EZWFjdGl2YXRlAHNldF9EZWFjdGl2YXRlAFdyaXRlAENvbXBpbGVyR2Vu
ZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0
dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBB
c3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1i
bHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29t
cGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNz
ZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRy
aWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmli
dXRlAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAZ2V0X1ZhbHVlAHZhbHVlAHNldF9FeHBlY3QxMDBD
b250aW51ZQBSZW1vdmUARGVzZXJpYWxpemUASW5kZXhPZgBFbmNvZGluZwBTeXN0ZW0uUnVudGlt
ZS5WZXJzaW9uaW5nAFRvQmFzZTY0U3RyaW5nAGdldF9Db25uZWN0aW9uU3RyaW5nAFRvU3RyaW5n
AFBhcnNlUXVlcnlTdHJpbmcAQ29tcHV0ZUhhc2gAR2VuZXJhdGVTaWduYXR1cmVVc2luZ0hhc2gA
aGFzaABnZXRfQWJzb2x1dGVQYXRoAGdldF9MZW5ndGgAc2V0X01heEpzb25MZW5ndGgAU3RhcnRz
V2l0aABVcmkAU3lzdGVtLkNvbXBvbmVudE1vZGVsAGdldF9FbWFpbABzZXRfRW1haWwAU0NfMmIy
YzM0OWM0NDI1NGM5MDk3NzliYTBmZTJjNmNkZjguZGxsAHNldF9BZGRyZXNzMl9Jc051bGwAc2V0
X1RlYWNoZXJJRF9Jc051bGwAc2V0X0NhbXB1c0lEX0lzTnVsbABzZXRfR3JhZGVfSXNOdWxsAHNl
dF9NaWRkbGVOYW1lX0lzTnVsbABzZXRfTGFzdE5hbWVfSXNOdWxsAHNldF9GaXJzdE5hbWVfSXNO
dWxsAHNldF9QaG9uZV9Jc051bGwAc2V0X1N0YXRlX0lzTnVsbABzZXRfRGVhY3RpdmF0ZV9Jc051
bGwAc2V0X0VtYWlsX0lzTnVsbABzZXRfSG9tZVJvb21fSXNOdWxsAHNldF9aaXBfSXNOdWxsAHNl
dF9BZGRyZXNzX0lzTnVsbABzZXRfRGVwYXJ0bWVudF9Jc051bGwAc2V0X0NpdHlfSXNOdWxsAFNl
dE51bGwAbm9ybWFsaXplZFVybABnZXRfQ2FsbEJhY2tVcmwAc2V0X0NhbGxCYWNrVXJsAF9jYWxs
QmFja1VybAB1cmwAR2V0UmVzcG9uc2VTdHJlYW0AR2V0UmVxdWVzdFN0cmVhbQBnZXRfSXRlbQBz
ZXRfSXRlbQBTeXN0ZW0AS2V5ZWRIYXNoQWxnb3JpdGhtAGhhc2hBbGdvcml0aG0AUmFuZG9tAHJh
bmRvbQBnZXRfSG9tZVJvb20Ac2V0X0hvbWVSb29tAEVudW0AcmVzb3VyY2VNYW4AVGltZVNwYW4A
Z2V0X1Rva2VuAHNldF9Ub2tlbgBfdG9rZW4AT3BlbgBTY3JpcHRNYWluAE9BdXRoVmVyc2lvbgBT
eXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uV2ViLlNjcmlw
dC5TZXJpYWxpemF0aW9uAG9wX1N1YnRyYWN0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAE5hbWVWYWx1
ZUNvbGxlY3Rpb24AZ2V0X1J1bnRpbWVDb25uZWN0aW9uQ29sbGVjdGlvbgBEYkNvbm5lY3Rpb24A
U3FsQ29ubmVjdGlvbgBXZWJFeGNlcHRpb24ATm90SW1wbGVtZW50ZWRFeGNlcHRpb24AQXJndW1l
bnROdWxsRXhjZXB0aW9uAEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24AQXJndW1lbnRFeGNlcHRp
b24AU3lzdGVtLkRhdGEuQ29tbW9uAEN1bHR1cmVJbmZvAE91dHB1dE5hbWVNYXAAT3V0cHV0TWFw
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUnVudGltZVdyYXAATWljcm9zb2Z0LlNxbFNlcnZlci5E
VFNQaXBlbGluZVdyYXAAZ2V0X1ppcABzZXRfWmlwAEdlbmVyYXRlVGltZVN0YW1wAHRpbWVTdGFt
cABDaGFyAFN0cmVhbVJlYWRlcgBUZXh0UmVhZGVyAFN0cmluZ0J1aWxkZXIAT3V0cHV0MEJ1ZmZl
cgBQaXBlbGluZUJ1ZmZlcgBTY3JpcHRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ29u
bmVjdGlvbk1hbmFnZXIAZ2V0X09BdXRoVmVyaWZpZXIAc2V0X09BdXRoVmVyaWZpZXIAX29hdXRo
VmVyaWZpZXIAVG9VcHBlcgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lLldyYXBwZXIA
TWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUuV3JhcHBlcgBRdWVyeVBhcmFtZXRlckNv
bXBhcmVyAFF1ZXJ5UGFyYW1ldGVyAFN0cmVhbVdyaXRlcgBUZXh0V3JpdGVyAGdldF9DbGllbnRT
ZXJ2ZXIASmF2YVNjcmlwdFNlcmlhbGl6ZXIARmlyZUVycm9yAC5jdG9yAC5jY3RvcgByZXNwU3Ry
AE91dHB1dElEcwBTeXN0ZW0uRGlhZ25vc3RpY3MAZ2V0X1RvdGFsU2Vjb25kcwBTeXN0ZW0uUnVu
dGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU0NfMmIyYzM0OWM0NDI1NGM5
MDk3NzliYTBmZTJjNmNkZjguUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2lu
Z01vZGVzAFNDXzJiMmMzNDljNDQyNTRjOTA5Nzc5YmEwZmUyYzZjZGY4LlByb3BlcnRpZXMAZ2V0
X1JlYWRPbmx5VmFyaWFibGVzAFNpZ25hdHVyZVR5cGVzAEdldEJ5dGVzAEJ1ZmZlckNvbHVtbklu
ZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBTeXN0ZW0uV2ViLkV4dGVuc2lvbnMAQ29u
bmVjdGlvbnMAZ2V0X0NoYXJzAHVucmVzZXJ2ZWRDaGFycwBCdWZmZXJzAFBvd2VyU2Nob29sVGVh
Y2hlcnMAUHJvY2Vzc1RlYWNoZXJzAG5vcm1hbGl6ZWRSZXF1ZXN0UGFyYW1ldGVycwBOb3JtYWxp
emVSZXF1ZXN0UGFyYW1ldGVycwBHZXRRdWVyeVBhcmFtZXRlcnMAcGFyYW1ldGVycwBnZXRfQWRk
cmVzcwBzZXRfQWRkcmVzcwBGaW5pc2hPdXRwdXRzAENyZWF0ZU5ld091dHB1dFJvd3MAZ2V0X0Fs
bEtleXMAQ29uY2F0AEFwcGVuZEZvcm1hdABPYmplY3QAV2ViUmVzcG9uc2VHZXQAU3lzdGVtLk5l
dABnZXRfVG9rZW5TZWNyZXQAc2V0X1Rva2VuU2VjcmV0AF90b2tlblNlY3JldABnZXRfQ29uc3Vt
ZXJTZWNyZXQAc2V0X0NvbnN1bWVyU2VjcmV0AF9jb25zdW1lclNlY3JldABnZXRfQ2xpZW50U2Vj
cmV0AFNldEVuZE9mUm93c2V0AFNwbGl0AGdldF9EZWZhdWx0AFN5c3RlbS5EYXRhLlNxbENsaWVu
dABnZXRfRGVwYXJ0bWVudABzZXRfRGVwYXJ0bWVudABTdWJDb21wb25lbnQARmFpbENvbXBvbmVu
dABVc2VyQ29tcG9uZW50AFBhcmVudENvbXBvbmVudABTY3JpcHRDb21wb25lbnQAZ2V0X1NlcnZp
Y2VQb2ludABnZXRfQ291bnQATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABDb252ZXJ0AGdl
dF9Qb3J0AFNvcnQAb0F1dGhXZWJSZXF1ZXN0AEh0dHBXZWJSZXF1ZXN0AHdlYlJlcXVlc3QAVGVh
Y2hlckxpc3QAUHJvY2Vzc0xpc3QAZ2V0X0hvc3QATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGlu
ZUhvc3QAUHJpbWVPdXRwdXQATmV4dABTeXN0ZW0uVGV4dABHZXRWYWx1ZVdpdGhDb250ZXh0AFNj
cmlwdENvbXBvbmVudEV2YWxDb250ZXh0AGdldF9FdmFsdWF0b3JDb250ZXh0AGdldF9VdGNOb3cA
QWRkUm93AE9BdXRoUGFyYW1ldGVyUHJlZml4AHNldF9LZXkAT0F1dGhTaWduYXR1cmVNZXRob2RL
ZXkAT0F1dGhOb25jZUtleQBPQXV0aFNpZ25hdHVyZUtleQBPQXV0aENhbGxiYWNrS2V5AE9BdXRo
VG9rZW5LZXkAT0F1dGhWZXJzaW9uS2V5AE9BdXRoVGltZXN0YW1wS2V5AE9BdXRoVmVyaWZpZXJL
ZXkAZ2V0X0NvbnN1bWVyS2V5AHNldF9Db25zdW1lcktleQBfY29uc3VtZXJLZXkAT0F1dGhUb2tl
blNlY3JldEtleQBPQXV0aENvbnN1bWVyS2V5S2V5AFN5c3RlbS5TZWN1cml0eS5DcnlwdG9ncmFw
aHkAZ2V0X0Fzc2VtYmx5AGdldF9RdWVyeQBnZXRfQ2l0eQBzZXRfQ2l0eQBvcF9FcXVhbGl0eQBI
dHRwVXRpbGl0eQBJc051bGxPckVtcHR5AAAAAAEAQXQAbwBrAGUAbgBfADkANQA5AGIAMwA2ADUA
OQBiADYANQBkAGQAYgBiADYAZgA4ADUANQAyAGMAMwA0ADAAMQAAF1AAcgBvAGMAZQBzAHMARABh
AHQAYQAAD0UAcgByAG8AcgA6ACAAACdHAGUAdABXAGUAYgBTAGUAcgB2AGkAYwBlAFIAZQBzAHUA
bAB0AAAdVwBlAGIARQB4AGMAZQBwAHQAaQBvAG4AOgAgAAAnRwBlAG4AZQByAGEAbAAgAEUAeABj
AGUAcAB0AGkAbwBuADoAIAAAgJtJAHMATgB1AGwAbAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBu
AG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABGAGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAA
YQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAAYwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBk
AC4AABFPAHUAdABwAHUAdAAgADAAABtDAGwAaQBlAG4AdABEAGEAdABhAGIAcwBlAAAVQwBsAGkA
ZQBuAHQASQBEAFAAUwAAGUMAbABpAGUAbgB0AFMAZQBjAHIAZQB0AAAZQwBsAGkAZQBuAHQAUwBl
AHIAdgBlAHIAAHFTAEMAXwAyAGIAMgBjADMANAA5AGMANAA0ADIANQA0AGMAOQAwADkANwA3ADkA
YgBhADAAZgBlADIAYwA2AGMAZABmADgALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1
AHIAYwBlAHMAABtoAGEAcwBoAEEAbABnAG8AcgBpAHQAaABtAAAJZABhAHQAYQAAAz8AAA1vAGEA
dQB0AGgAXwAAAyUAAA17ADAAOgBYADIAfQAAD3sAMAB9AD0AewAxAH0AAAMmAAAXYwBvAG4AcwB1
AG0AZQByAEsAZQB5AAAVaAB0AHQAcABNAGUAdABoAG8AZAAAG3MAaQBnAG4AYQB0AHUAcgBlAFQA
eQBwAGUAABtvAGEAdQB0AGgAXwB2AGUAcgBzAGkAbwBuAAAHMQAuADAAABdvAGEAdQB0AGgAXwBu
AG8AbgBjAGUAAB9vAGEAdQB0AGgAXwB0AGkAbQBlAHMAdABhAG0AcAAALW8AYQB1AHQAaABfAHMA
aQBnAG4AYQB0AHUAcgBlAF8AbQBlAHQAaABvAGQAACVvAGEAdQB0AGgAXwBjAG8AbgBzAHUAbQBl
AHIAXwBrAGUAeQAAHW8AYQB1AHQAaABfAGMAYQBsAGwAYgBhAGMAawAAHW8AYQB1AHQAaABfAHYA
ZQByAGkAZgBpAGUAcgAAF28AYQB1AHQAaABfAHQAbwBrAGUAbgAAE3sAMAB9ADoALwAvAHsAMQB9
AAAJaAB0AHQAcAAAC2gAdAB0AHAAcwAAAzoAAAl7ADAAfQAmAAAHewAwAH0AAA97ADAAfQAmAHsA
MQB9AAATSABNAEEAQwAtAFMASABBADEAAS1VAG4AawBuAG8AdwBuACAAcwBpAGcAbgBhAHQAdQBy
AGUAIAB0AHkAcABlAAADPQAAIyYAbwBhAHUAdABoAF8AcwBpAGcAbgBhAHQAdQByAGUAPQAAQ2EA
cABwAGwAaQBjAGEAdABpAG8AbgAvAHgALQB3AHcAdwAtAGYAbwByAG0ALQB1AHIAbABlAG4AYwBv
AGQAZQBkAAGAhWEAYgBjAGQAZQBmAGcAaABpAGoAawBsAG0AbgBvAHAAcQByAHMAdAB1AHYAdwB4
AHkAegBBAEIAQwBEAEUARgBHAEgASQBKAEsATABNAE4ATwBQAFEAUgBTAFQAVQBWAFcAWABZAFoA
MAAxADIAMwA0ADUANgA3ADgAOQAtAF8ALgB+AAEJYQBzAGQAZgAACWcAaABqAGsAAAdvAG8AYgAA
ANUY3sv/ohZHkKcjabImivcABCABAQgDIAABBSABARERBCABAQ4HFRKAgQESNAYgAQERgKkHBwQO
DhE8DhEHBx0SLBI5Ej0dEiwIEiwSQQMgAA4FIAARgLkEIAASPQUAAg4ODgoHBB0SLA4SRRJBAyAA
CAYwAQEeAA4FCgEdEiwDBwECBSAAEoDJCiAGAQgODg4IEAILIAMBEoCNHQgSgJEFIAIBCBwDIAAC
AwcBCAcAAggSgJEOBSABHQgIBSAAEoDRBiABEoDVDgUgABKAmQUgABKA2QYgARKA3RwFAAASgOEG
IAEcEoDlCAABEoDpEYDtBSAAEoDxByACAQ4SgPEEBwEdBQQAAQIOBQAAEoD5BSABHQUOBiABHQUd
BQUAAQ4dBQ4HBRUSVQESNB0OCA4dDgQgAQIOBSACDggIBhUSVQESNAYgAR0OHQMEIAEIAwUgAQET
AAIGDgcHBBJZDggDBCABAwgFIAESWQMFAAIODhwFIAESWQ4HBwMSWRI0CAYVEl0BEjQFIAETAAgH
IAMSWQ4cHAcVEoEJARI0CAcBFRJVARI0CiABARUSgIEBEwAGAAMODhwcBQACAg4OBgADDhwcHAYg
AhJZDhwFBwIOEmUEAAEODgUgAQEdBQUgAgEODgUHAhFpCgUAABGBHQogBwEICAgICAgICgACEWkR
gR0RgR0DIAANBAABCg0FIAIICAgPBwoODhJhDg4OEm0dDggOBQABEm0OBCAAHQ4EIAEODgcABA4O
Dg4OBCABCA4GAAMODg4OBgcCEnESdQYAARKBJQ4FIAASgSkEIAEBAgUgABKBLQYgAQESgS0FBwIS
eQ4FIAASgTUFAAIIDg4It3pcVhk04IkIiYRdzYCAzJEIMb84Vq02TjUIsD9ffxHVCjoGMQAuADAA
DG8AYQB1AHQAaABfACRvAGEAdQB0AGgAXwBjAG8AbgBzAHUAbQBlAHIAXwBrAGUAeQAcbwBhAHUA
dABoAF8AYwBhAGwAbABiAGEAYwBrABpvAGEAdQB0AGgAXwB2AGUAcgBzAGkAbwBuACxvAGEAdQB0
AGgAXwBzAGkAZwBuAGEAdAB1AHIAZQBfAG0AZQB0AGgAbwBkAB5vAGEAdQB0AGgAXwBzAGkAZwBu
AGEAdAB1AHIAZQAebwBhAHUAdABoAF8AdABpAG0AZQBzAHQAYQBtAHAAFm8AYQB1AHQAaABfAG4A
bwBuAGMAZQAWbwBhAHUAdABoAF8AdABvAGsAZQBuACRvAGEAdQB0AGgAXwB0AG8AawBlAG4AXwBz
AGUAYwByAGUAdAAcbwBhAHUAdABoAF8AdgBlAHIAaQBmAGkAZQByABJIAE0AQQBDAC0AUwBIAEEA
MQASUABMAEEASQBOAFQARQBYAFQAEFIAUwBBAC0AUwBIAEEAMQAEAAAAAAQBAAAABAIAAAAEAwAA
AAMGEhQDBhIYAwYSDAQGEoCVAgYIBAYSgKEEBhKApQMGEiQDBhJNAwYRMAMGETwGIAEdEiwODSAE
AQgdCB0SgI0SgJEGIAEBEoCVBQAAEoChBQAAEoClBgABARKApQQAABIkAwAAAQYgAg4SUQ4JIAEV
ElUBEjQOCSABDhUSXQESNA8gCQ4SYQ4ODg4ODhAOEA4GIAIODhJRDiAIDhJhDg4ODg4QDhAOECAJ
DhJhDg4ODg4RMBAOEA4HIAMOETwODgUgAQ4ScQcgAggSNBI0AygADgMoAAIFKAASgJkDKAAIBQgA
EoChBQgAEoClBAgAEiQIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEA
AgAAAAAAKAEAI1NDXzJiMmMzNDljNDQyNTRjOTA5Nzc5YmEwZmUyYzZjZGY4AAAFAQAAAAAWAQAR
Q29weXJpZ2h0IEAgIDIwMTgAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNQEAVA4URnJh
bWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41AAAAtAAAAM7K774BAAAAkQAAAGxT
eXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4w
LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVt
LlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAANxzAAAA
AAAAAAAAAPZzAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAADocwAAAAAAAAAAAAAAAF9Db3JEbGxN
YWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAA
MAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFiAAADsAwAAAAAAAAAAAADsAzQAAABWAFMAXwBW
AEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAA
AAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAE
AAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAETAMAAAEAUwB0AHIAaQBuAGcARgBpAGwA
ZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABz
AAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUA
RABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwAyAGIAMgBjADMANAA5AGMANAA0ADIANQA0
AGMAOQAwADkANwA3ADkAYgBhADAAZgBlADIAYwA2AGMAZABmADgAAAAwAAgAAQBGAGkAbABlAFYA
ZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBh
AG0AZQAAAFMAQwBfADIAYgAyAGMAMwA0ADkAYwA0ADQAMgA1ADQAYwA5ADAAOQA3ADcAOQBiAGEA
MABmAGUAMgBjADYAYwBkAGYAOAAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBp
AGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA4AAAAKgABAAEATABlAGcA
YQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBp
AGwAZQBuAGEAbQBlAAAAUwBDAF8AMgBiADIAYwAzADQAOQBjADQANAAyADUANABjADkAMAA5ADcA
NwA5AGIAYQAwAGYAZQAyAGMANgBjAGQAZgA4AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0
AE4AYQBtAGUAAAAAAFMAQwBfADIAYgAyAGMAMwA0ADkAYwA0ADQAMgA1ADQAYwA5ADAAOQA3ADcA
OQBiAGEAMABmAGUAMgBjADYAYwBkAGYAOAAAADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBp
AG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgAAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkA
bwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAABwAAAMAAAACDQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAA]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_2b2c349c44254c909779ba0fe2c6cdf8</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::ClientIDPS,User::ClientSecret,User::ClientServer</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">8D</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\Script Component.Connections[ClientDatabse]"
                      connectionManagerID="Package.ConnectionManagers[ClientTipWebDatabase]"
                      connectionManagerRefId="Package.ConnectionManagers[ClientTipWebDatabase]"
                      name="ClientDatabse" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\Script Component.Outputs[Output 0]"
                      hasSideEffects="true"
                      name="Output 0">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\Script Component.Outputs[Output 0].Columns[TeacherID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Data Flow Task - Get Teachers\Script Component.Outputs[Output 0].Columns[TeacherID]"
                          name="TeacherID" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\Script Component.Outputs[Output 0].Columns[CampusID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Data Flow Task - Get Teachers\Script Component.Outputs[Output 0].Columns[CampusID]"
                          name="CampusID" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\Script Component.Outputs[Output 0].Columns[FirstName]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Data Flow Task - Get Teachers\Script Component.Outputs[Output 0].Columns[FirstName]"
                          name="FirstName" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\Script Component.Outputs[Output 0].Columns[LastName]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Data Flow Task - Get Teachers\Script Component.Outputs[Output 0].Columns[LastName]"
                          name="LastName" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\Script Component.Outputs[Output 0].Columns[MiddleName]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Data Flow Task - Get Teachers\Script Component.Outputs[Output 0].Columns[MiddleName]"
                          name="MiddleName" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\Script Component.Outputs[Output 0].Columns[Grade]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Data Flow Task - Get Teachers\Script Component.Outputs[Output 0].Columns[Grade]"
                          name="Grade" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\Script Component.Outputs[Output 0].Columns[HomeRoom]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Data Flow Task - Get Teachers\Script Component.Outputs[Output 0].Columns[HomeRoom]"
                          name="HomeRoom" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\Script Component.Outputs[Output 0].Columns[Department]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          lineageId="Package\Loop thru Clients\Data Flow Task - Get Teachers\Script Component.Outputs[Output 0].Columns[Department]"
                          name="Department" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\Script Component.Outputs[Output 0].Columns[Phone]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Data Flow Task - Get Teachers\Script Component.Outputs[Output 0].Columns[Phone]"
                          name="Phone" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\Script Component.Outputs[Output 0].Columns[Email]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          lineageId="Package\Loop thru Clients\Data Flow Task - Get Teachers\Script Component.Outputs[Output 0].Columns[Email]"
                          name="Email" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\Script Component.Outputs[Output 0].Columns[Address]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Loop thru Clients\Data Flow Task - Get Teachers\Script Component.Outputs[Output 0].Columns[Address]"
                          name="Address" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\Script Component.Outputs[Output 0].Columns[Address2]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Loop thru Clients\Data Flow Task - Get Teachers\Script Component.Outputs[Output 0].Columns[Address2]"
                          name="Address2" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\Script Component.Outputs[Output 0].Columns[City]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Data Flow Task - Get Teachers\Script Component.Outputs[Output 0].Columns[City]"
                          name="City" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\Script Component.Outputs[Output 0].Columns[State]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Data Flow Task - Get Teachers\Script Component.Outputs[Output 0].Columns[State]"
                          name="State" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\Script Component.Outputs[Output 0].Columns[Zip]"
                          codePage="1252"
                          dataType="str"
                          length="10"
                          lineageId="Package\Loop thru Clients\Data Flow Task - Get Teachers\Script Component.Outputs[Output 0].Columns[Zip]"
                          name="Zip" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Data Flow Task - Get Teachers\Script Component.Outputs[Output 0].Columns[Deactivate]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Data Flow Task - Get Teachers\Script Component.Outputs[Output 0].Columns[Deactivate]"
                          name="Deactivate" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Loop thru Clients\Data Flow Task - Get Teachers.Paths[Output 0]"
                  endId="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination.Inputs[ADO NET Destination Input]"
                  name="Output 0"
                  startId="Package\Loop thru Clients\Data Flow Task - Get Teachers\Script Component.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{86FAF5CD-2D4E-4CEF-8945-08635EBD66F4}"
          DTS:ObjectName="{86FAF5CD-2D4E-4CEF-8945-08635EBD66F4}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::CustomerID" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{F6BF4AB2-32B5-46DD-B7ED-EDF2479EA2C9}"
          DTS:ObjectName="{F6BF4AB2-32B5-46DD-B7ED-EDF2479EA2C9}"
          DTS:ValueIndex="1"
          DTS:VariableName="User::ClientName" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{7B90A1B2-661B-4640-9E87-34C127D83724}"
          DTS:ObjectName="{7B90A1B2-661B-4640-9E87-34C127D83724}"
          DTS:ValueIndex="2"
          DTS:VariableName="User::ClientTipWebDatabase" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{8A1F7486-9944-45B7-AB6F-01AB11E95264}"
          DTS:ObjectName="{8A1F7486-9944-45B7-AB6F-01AB11E95264}"
          DTS:ValueIndex="3"
          DTS:VariableName="User::ClientServer" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{664F0089-09CB-403D-AFA7-B19D590F4E9A}"
          DTS:ObjectName="{664F0089-09CB-403D-AFA7-B19D590F4E9A}"
          DTS:ValueIndex="4"
          DTS:VariableName="User::ClientIDPS" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{B55BDED3-CE51-4A99-AC32-728E09FA4FD6}"
          DTS:ObjectName="{B55BDED3-CE51-4A99-AC32-728E09FA4FD6}"
          DTS:ValueIndex="5"
          DTS:VariableName="User::ClientSecret" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Truncate Tables"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{ABC08FBB-7F05-4E55-BA24-CB33D8B30E3A}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Truncate Tables"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{F67B245E-5E1B-4185-B07F-CCBF8725632E}"
          SQLTask:SqlStatementSource="TRUNCATE TABLE _IMS_Teachers&#xA;GO&#xA;&#xA;TRUNCATE TABLE _IMS_Students&#xA;GO&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{3FE84EBD-24A9-41AB-AD52-CDE0C0633031}"
      DTS:From="Package\Data Flow Task - Get Customers"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Truncate Tables" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{65FB9924-9F9E-4567-8CAF-D8F9478825FA}"
      DTS:From="Package\Truncate Tables"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Loop thru Clients" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="346,44"
          Id="Package\Data Flow Task - Get Customers"
          TopLeft="325.971698113208,50.518867924528" />
        <NodeLayout
          Size="226,42"
          Id="Package\Loop thru Clients\Data Flow Task - Get Teachers"
          TopLeft="66,41" />
        <ContainerLayout
          HeaderHeight="43.924528301886795"
          IsExpanded="True"
          PanelSize="840,246"
          Size="840,290"
          Id="Package\Loop thru Clients"
          TopLeft="88.5,251.990566037736" />
        <NodeLayout
          Size="146,42"
          Id="Package\Truncate Tables"
          TopLeft="414.858490566038,137.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="498.971698113208,94.518867924528">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-11.1132075471701,42.981132075472"
              Start="0,0"
              End="-11.1132075471701,35.481132075472">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.490566037736" />
                  <mssgle:CubicBezierSegment
                    Point1="0,17.490566037736"
                    Point2="0,21.490566037736"
                    Point3="-4,21.490566037736" />
                  <mssgle:LineSegment
                    End="-7.11320754717008,21.490566037736" />
                  <mssgle:CubicBezierSegment
                    Point1="-7.11320754717008,21.490566037736"
                    Point2="-11.1132075471701,21.490566037736"
                    Point3="-11.1132075471701,25.490566037736" />
                  <mssgle:LineSegment
                    End="-11.1132075471701,35.481132075472" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="487.858490566038,179.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="20.641509433962,72.490566037736"
              Start="0,0"
              End="20.641509433962,64.990566037736">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,32.245283018868" />
                  <mssgle:CubicBezierSegment
                    Point1="0,32.245283018868"
                    Point2="0,36.245283018868"
                    Point3="4,36.245283018868" />
                  <mssgle:LineSegment
                    End="16.641509433962,36.245283018868" />
                  <mssgle:CubicBezierSegment
                    Point1="16.641509433962,36.245283018868"
                    Point2="20.641509433962,36.245283018868"
                    Point3="20.641509433962,40.245283018868" />
                  <mssgle:LineSegment
                    End="20.641509433962,64.990566037736" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Data Flow Task - Get Customers">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="184,42"
          Id="Package\Data Flow Task - Get Customers\Recordset Destination"
          TopLeft="101,189" />
        <NodeLayout
          Size="136,44"
          Id="Package\Data Flow Task - Get Customers\ADO NET Source"
          TopLeft="134.292452830189,54.5" />
        <EdgeLayout
          Id="Package\Data Flow Task - Get Customers.Paths[ADO NET Source Output]"
          TopLeft="202.292452830189,98.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-9.29245283018901,90.5"
              Start="0,0"
              End="-9.29245283018901,83">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41.25" />
                  <mssgle:CubicBezierSegment
                    Point1="0,41.25"
                    Point2="0,45.25"
                    Point3="-4,45.25" />
                  <mssgle:LineSegment
                    End="-5.29245283018901,45.25" />
                  <mssgle:CubicBezierSegment
                    Point1="-5.29245283018901,45.25"
                    Point2="-9.29245283018901,45.25"
                    Point3="-9.29245283018901,49.25" />
                  <mssgle:LineSegment
                    End="-9.29245283018901,83" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Data Flow Task - Get Customers\ADO NET Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Loop thru Clients\Data Flow Task - Get Teachers">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="165,42"
          Id="Package\Loop thru Clients\Data Flow Task - Get Teachers\Script Component"
          TopLeft="170,50" />
        <NodeLayout
          Size="136,44"
          Id="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination"
          TopLeft="186.216981132075,190.330188679245" />
        <EdgeLayout
          Id="Package\Loop thru Clients\Data Flow Task - Get Teachers.Paths[Output 0]"
          TopLeft="253.358490566038,92">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,98.330188679245"
              Start="0,0"
              End="0,90.830188679245">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,90.830188679245" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,37.4150943396225,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Loop thru Clients\Data Flow Task - Get Teachers\ADO NET Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>