<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="3/21/2019 12:01:54 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="RND-RGAILEY"
  DTS:CreatorName="HAYESSOFT\rgailey"
  DTS:DTSID="{A4CB55F8-F6B5-42E3-BE25-71DDFB2D3956}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.68"
  DTS:LocaleID="1033"
  DTS:ObjectName="Genesys_Charges_Import"
  DTS:PackageType="5"
  DTS:VersionBuild="645"
  DTS:VersionGUID="{B52062AD-93A1-42A4-B24A-736CA0888417}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[ReportServer]"
      DTS:CreationName="HTTP"
      DTS:DTSID="{0C1C89E9-B5D5-46FE-9DB0-7689F6D37314}"
      DTS:ObjectName="ReportServer">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="http://hayessqlsvr/Reports/Pages/Report.aspx?ItemPath=%2fDataIntergration%2fIntegrationDefaultReportImport">
          <DTS:HttpConnection
            DTS:ServerURL="http://hayessqlsvr/Reports/Pages/Report.aspx?ItemPath=%2fDataIntergration%2fIntegrationDefaultReportImport"
            DTS:UseServerCredentials="True"
            DTS:ServerUserName="IntegerationReports"
            DTS:ServerDomain="hayessqlsvr"
            DTS:TimeOut="300"
            DTS:ChunkSize="50"
            DTS:ProxyUserName="RGailey">
            <DTS:Property
              DTS:Name="ServerPassword"
              Sensitive="1"
              Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAR8EqNzCuWkSt+A0vSDGGoAAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAACyQY+2gP61QEjuQ7T8RPogAAAAAASAAACgAAAAEAAAAGGXHU0nnOmJJK56fowppxsQAAAAywI1bigPGyi/1SJSHigWbBQAAAA6Es9lL1/3bXRfoPn5tIDmG2rgIw</DTS:Property>
            <DTS:Property
              DTS:Name="ProxyPassword"
              Sensitive="1"
              Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAR8EqNzCuWkSt+A0vSDGGoAAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAAAt8WzchCC1fSPWuJWCp8E1AAAAAASAAACgAAAAEAAAAFNK8pD+89LZHuDVItoyWu0IAAAApRyhM5dhCLcUAAAA02DpZ0wrCgW18I49fHS4AjSgB74</DTS:Property>
          </DTS:HttpConnection>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Source - Charges Delimited File]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{023956E4-027A-4FA6-ADA0-F27112C55074}"
      DTS:ObjectName="Source - Charges Delimited File">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::RootPath] +  @[User::FilePath] +  @[User::FileName]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x0022_"
          DTS:CodePage="1252"
          DTS:ConnectionString="D:\EZImportFiles\PembertonTSD_SFTP_User\Integrations\Charges\Import\FineandFees with BuildingCode.xlsx">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Id"
              DTS:DTSID="{D49395DA-5353-46AF-8AFE-06648E3A3068}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="StudentNumber"
              DTS:DTSID="{81294A9D-092D-42BE-B930-A1CCE89090F2}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="100"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="StudentName"
              DTS:DTSID="{2BC83325-E76B-4E58-AF78-81628F7F7ACE}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="100"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="HomeroomName"
              DTS:DTSID="{670E844B-CB8C-42CE-B0D8-A7EF62A77E38}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Total"
              DTS:DTSID="{322920FD-CF83-4FCF-ACE6-176A77A54522}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Paid"
              DTS:DTSID="{CBF4D472-6214-4B5A-882B-DF2AC8BD4A57}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Waived"
              DTS:DTSID="{A9E52436-9003-41D5-A65E-5EBDCF059DB6}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Refunded"
              DTS:DTSID="{9F2EB2E0-03DF-4CC5-BAB0-D7E56E880DEE}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Owing"
              DTS:DTSID="{01A7245B-0867-44B3-BC85-941F62D7BAD0}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="DatePurchased"
              DTS:DTSID="{657EBD3B-402F-4090-9522-A4765A157C9E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="100"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="ItemName"
              DTS:DTSID="{502F14DC-310A-4035-A9FD-BA87FE23DE2B}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Payments"
              DTS:DTSID="{36C2B42B-49B9-4DE9-99CA-ECC7FCF2AC1A}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="StudentGrade"
              DTS:DTSID="{707B806D-4D97-4F19-A1CC-B5AB9873F61A}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="SchoolYear"
              DTS:DTSID="{4CFBAACD-4A0B-43A9-8291-B0ACEA831D3B}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Source - Charges Excel File]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{73294746-BAD1-46F2-99CA-92E23A2F174D}"
      DTS:ObjectName="Source - Charges Excel File">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=D:\EZImportFiles\PembertonTSD_SFTP_User\Integrations\Charges\Import\FineandFees with BuildingCode.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Target - IntegrationMiddleWay]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{76645D34-473D-4E9D-8DC9-2FDA13261849}"
      DTS:ObjectName="Target - IntegrationMiddleWay">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=RND-RGAILEY\MSSQL2014;Initial Catalog=IntegrationMiddleWay;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Target - IntergrationDashboard]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{3F5E885E-905E-466B-84BA-DF3DFCEE43D0}"
      DTS:ObjectName="Target - IntergrationDashboard">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=RND-RGAILEY\MSSQL2014;Initial Catalog=_IntegrationDashboard;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Target - TIPWeb]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{1C14C91E-C8CF-4164-8C85-B3A818B6CECD}"
      DTS:ObjectName="Target - TIPWeb">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=HSS-NP-SQL-01;Initial Catalog=Int_TIPWebHostedPembertonTSD;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E374C3AB-50A3-462F-B89A-8B8D89F4B115}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ApplicationUID">
      <DTS:VariableValue
        DTS:DataType="3">2</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CE988D40-C3C9-4794-A987-035295E438AC}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ArchiveFilePath">
      <DTS:VariableValue
        DTS:DataType="8">Archive\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3714DE31-4DFA-47E9-ADCA-3C568C458906}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CustomerCode">
      <DTS:VariableValue
        DTS:DataType="8">PembertionTSD</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D8C5EAD8-C4A8-4429-AFCB-01D647AC8793}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CustomerFullName">
      <DTS:VariableValue
        DTS:DataType="8">PembertionTSD</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F8598F58-1432-4100-B07D-CF4DA0D09BB6}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="DaysToKeep">
      <DTS:VariableValue
        DTS:DataType="3">24</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A14D9AE4-186E-4ABA-B596-3276D2FD3F31}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Debug">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D29BEB72-2DD2-422F-9905-14F19412C4DF}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="EMailCC">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D9D4F552-9688-4C10-99A8-B4B25C012752}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="EmailSend">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{460659AD-939C-46DF-9511-6A589CCAFAE7}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="EmailTo">
      <DTS:VariableValue
        DTS:DataType="8">integration_results@hayessoft.com</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{AB969D43-5BAB-4810-A24A-4B1A4E9D1DD6}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ExcelFullFilePathName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6F80D24D-1FFD-4098-8F0D-EF19425CCFC0}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileExtension">
      <DTS:VariableValue
        DTS:DataType="8">xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{96B4E675-7FC2-4320-8B69-EB248E983685}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileName">
      <DTS:VariableValue
        DTS:DataType="8">FineandFees with BuildingCode.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B7005F08-DDDB-412D-88B0-F8EB6486EBE7}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FilePath">
      <DTS:VariableValue
        DTS:DataType="8">Import\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{43F07756-C784-4D27-96DF-01C85CFE6913}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileSize">
      <DTS:VariableValue
        DTS:DataType="8">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F64ECDDC-3FD4-4290-B573-2E6F5DDBB7B3}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="FixedAssetsCreateInventory">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FA0139ED-9350-4129-93B2-75461C97AC94}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="FixedAssetsCustomFields">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2FA0D4F7-5BCB-4636-B8E5-900ACF1CED95}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="FixedAssetsDetails">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8FC004ED-3C8A-4291-B56F-FE3F92391BCD}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FixedAssetsHistory">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8B70D0AE-91F6-44FC-88BE-857D2EF5B99B}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="FixedAssetsUpdateFundingSource">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{28D969F7-4363-4EB2-95BB-4E613F18EA5F}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="FixedAssetsUpdateProduct">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5C88C093-3BFE-40C2-A79C-ED5FC787C557}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="FixedAssetsUpdateSerial">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{14348C83-E20A-4A44-B853-37044AE6748A}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="FixedAssetsUpdateTag">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{984FD754-09DF-4FF2-86EA-9D1073FAAA39}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Integration">
      <DTS:VariableValue
        DTS:DataType="8">GenesysChargesPayments</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0D3C2BF9-7CD6-418C-8144-FFC17F407E18}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="IntegrationDataType">
      <DTS:VariableValue
        DTS:DataType="8">Charges</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{59D51923-20A5-4CAA-8B57-392490AFB53D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="IntegrationType">
      <DTS:VariableValue
        DTS:DataType="8">Import</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D5E87935-7097-4FC6-AC85-6B356171E752}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="IntegrationUserID">
      <DTS:VariableValue
        DTS:DataType="3">-11</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2D9F0CAE-AC34-47E3-A12C-38B622FCE9EC}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="JobName">
      <DTS:VariableValue
        DTS:DataType="8">int_CustomerCode_Integration_IntegerationType</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8A8C6222-F5CC-45A8-89CF-DF7208685EAF}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="PurchaseOders">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8974D29A-7A22-487C-9641-220231586E9D}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="PurchaseOdersDetails">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C129D68C-867B-457E-80A8-B1432E2F41F3}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="PurchaseOdersDetailsUpdateAccountCode">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3BC75887-45FC-4BDD-A4BA-DF9933EF7B44}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="PurchaseOdersDetailsUpdateAmount">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9A01CA0F-3AB4-43AB-921F-06A5E557D17A}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="PurchaseOdersDetailsUpdateFundingSource">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9021EB26-F301-4A4F-9DDB-5E7E3051F057}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="PurchaseOdersInventory">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{29F984F7-E534-49F4-8D27-EF4AF8EB8A5C}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="PurchaseOdersShipments">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8EFCE322-D846-49BA-8D95-2C18C28E32B8}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="PurchaseOrdersUpdateDate">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{999127D5-D123-4650-A72B-2A62092A06B4}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="PurchaseOrdersUpdateVendor">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{78DA19DE-00F9-4A0F-A5EE-05BC110443A0}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ReportHideExceptionColumnsInventory">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{77218D16-FB52-4E3F-8EC5-978C52938375}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ReportHideExceptionColumnsPurchaseOrder">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3EEEE768-2972-4F41-B8BE-383FA73CDAB7}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ReportHideExceptionColumnsStatus">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1825A00B-587A-423D-A568-208E86E849F7}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ReportsPath">
      <DTS:VariableValue
        DTS:DataType="8">D:\EZImportFiles\PembertonTSD_SFTP_User\Integrations\Charges\Import\Reports\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{47C931DB-9D07-4A23-9D05-582BD7D582A8}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="RootPath">
      <DTS:VariableValue
        DTS:DataType="8">D:\EZImportFiles\PembertonTSD_SFTP_User\Integrations\Charges\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{025B8009-8A05-40EB-BF7C-53EE1651FD7F}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="RowCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4FCE5C7E-262D-49EE-9702-D82D54A971BE}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Success">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Archive File Process"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{7E6C5832-7791-47A7-AA1E-92D296E0481E}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Archive File Process">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Archive File Process\Archive File"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{9509377A-27BF-461F-B9A6-D02F4505DA24}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Archive File"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_93e128b7ee7d4732806bbf62d9fc0f8a"
              VSTAMajorVersion="15"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::ArchiveFilePath,User::CustomerCode,User::DaysToKeep,User::Debug,User::FilePath,User::Integration,User::IntegrationType,User::ReportsPath,User::RootPath">
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
#endregion

namespace ST_ca442df88e994ae6b41dcdcf9629823a
{

	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		public void Main()
		{
            //User::ArchiveFilePath,User::CustomerCode,User::Debug,User::FilePath,User::KeepDays,User::RootPath
            string CustomerCode = Dts.Variables["User::CustomerCode"].Value.ToString();
            string ReportPath = Dts.Variables["User::ReportsPath"].Value.ToString();
            string Integration = Dts.Variables["Integration"].Value.ToString();
            string IntegrationType = Dts.Variables["IntegrationType"].Value.ToString();
            string RootPath = Dts.Variables["User::RootPath"].Value.ToString();
            string FilePath =Dts.Variables["User::FilePath"].Value.ToString();
            string ArchivePath = Dts.Variables["User::ArchiveFilePath"].Value.ToString();
            Int32 FileRetentionDays = Convert.ToInt32(Dts.Variables["User::DaysToKeep"].Value) * -1;

            string ReportFileName = ReportPath + CustomerCode + "_" + Integration + "_" + IntegrationType + "_Report_" + DateTime.Now.ToString("MMddyyyy").ToString() + "_" + DateTime.Now.ToString("HHmm").ToString() + ".xls";
            string FileNameCheck = "";
            string FileToBeMoved = "";
            string FileToExt = "";
            int n;

            //FileToBeMoved = ReportFileName;

            //if (Convert.ToBoolean(Dts.Variables["User::Debug"].Value) == true)
            //{
            //    MessageBox.Show("ReportFileName and Path: " + FileToBeMoved);
            //}

            //if (File.Exists(FileToBeMoved))
            //{
            //    File.Delete(FileToBeMoved);
            //}

            FilePath = RootPath + FilePath;

            if (Convert.ToBoolean(Dts.Variables["User::Debug"].Value) == true)
            {
                MessageBox.Show("FilePath: " + FilePath);
            }

                // Move File(s) to Arhive Folder
                string[] Archivefiles = Directory.GetFiles(FilePath);
            foreach (string file in Archivefiles)
            {
                if (Convert.ToBoolean(Dts.Variables["User::Debug"].Value) == true)
                {
                    MessageBox.Show("*** Sending to Archive Folder ***\r\n\r\n" +
                        "File From: (" + file + ")\r\n\r\n" +
                        "File To: (" + file.Replace(FilePath, FilePath + ArchivePath) + ")\r\n\r\n" +
                      "File Size: (" + file.Length.ToString() + ")\r\n");
                }
                FileNameCheck = file.Replace(FilePath, "");

                if (Convert.ToBoolean(Dts.Variables["User::Debug"].Value) == true)
                {
                    MessageBox.Show("*** FileName Check: " + FileNameCheck.Substring(FileNameCheck.Length - 12, 8));
                }

                //Test if Date is in File Name
                bool isNumeric = int.TryParse(FileNameCheck.Substring(FileNameCheck.Length - 12, 8), out n);

                if (isNumeric == true)
                {
                    FileToBeMoved = file.Replace(FilePath, FilePath + ArchivePath);
                }
                else
                {
                    FileToBeMoved = file.Replace(FilePath, FilePath + ArchivePath);
                    FileToExt = FileToBeMoved.Substring(FileToBeMoved.Length - 4, 4);
                    FileToBeMoved = FileToBeMoved.Replace(FileToExt, "") + "_" + DateTime.Now.ToString("MM") + DateTime.Now.ToString("dd") + DateTime.Now.ToString("yyyy") + FileToExt;

                    if (Convert.ToBoolean(Dts.Variables["User::Debug"].Value) == true)
                    {
                        MessageBox.Show("*** File Does NOT have Date in Name  ***\r\n\r\n" +
                                        "New File Name: (" + FileToBeMoved + ")\r\n");
                    }

                }

                if (File.Exists(FileToBeMoved))
                {
                    File.Delete(FileToBeMoved);
                }

                if (isNumeric == true)
                {
                    File.Move(file, file.Replace(FilePath, FilePath + ArchivePath));
                }
                else
                {
                    File.Move(file, FileToBeMoved);
                }
            }

           
           // Archive folder cleanup of old files 
            string[] Cleanupfiles = Directory.GetFiles(FilePath + ArchivePath);
            foreach (string file in Cleanupfiles)
            {
                FileInfo fi = new FileInfo(file);
                if (File.GetCreationTime(fi.ToString()) < DateTime.Now.AddDays(FileRetentionDays))
                {
                    if (Convert.ToBoolean(Dts.Variables["User::Debug"].Value) == true)
                    {
                        MessageBox.Show("*** Cleaning up Archive Folder ***\r\n" +
                            "Deleting File Name: (" + file + ")\r\n" +
                            "      To Directory: (" + RootPath + CustomerCode + "\\" + FilePath + ArchivePath + ")\r\n");
                    }

                    fi.Delete();
                }
                    
            }

            // Reports folder cleanup of old files
             Cleanupfiles = Directory.GetFiles(FilePath + "Reports");
            foreach (string file in Cleanupfiles)
            {
                FileInfo fi = new FileInfo(file);
                if (File.GetCreationTime(fi.ToString()) < DateTime.Now.AddDays(FileRetentionDays))
                {
                    if (Convert.ToBoolean(Dts.Variables["User::Debug"].Value) == true)
                    {
                        MessageBox.Show("*** Cleaning up Reports Folder ***\r\n" +
                            "Deleting File Name: (" + file + ")\r\n" +
                            "      To Directory: (" + RootPath + CustomerCode + "\\" + FilePath + ArchivePath + ")\r\n");
                    }

                    fi.Delete();
                }

            }

            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="ST_93e128b7ee7d4732806bbf62d9fc0f8a.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{4BF8AAE1-8271-4806-833F-A82E91B722BF}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_ca442df88e994ae6b41dcdcf9629823a</RootNamespace>
    <AssemblyName>ST_93e128b7ee7d4732806bbf62d9fc0f8a</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_93e128b7ee7d4732806bbf62d9fc0f8a</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_93e128b7ee7d4732806bbf62d9fc0f8a</msb:DisplayName>
    <msb:ProjectId>{EFAF15B4-D157-4D7D-8906-C363A12C17FE}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_93e128b7ee7d4732806bbf62d9fc0f8a.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ca442df88e994ae6b41dcdcf9629823a.Properties.Settings.get_Default():ST_ca442df88e994ae6b41dcdcf9629823a.Properties.Sett" +
    "ings")]

namespace ST_ca442df88e994ae6b41dcdcf9629823a.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_ca442df88e994ae6b41dcdcf9629823a")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_ca442df88e994ae6b41dcdcf9629823a")]
[assembly: AssemblyCopyright("Copyright @  2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ca442df88e994ae6b41dcdcf9629823a.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ca442df88e994ae6b41dcdcf9629823a.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ca442df88e994ae6b41dcdcf9629823a.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_ca442df88e994ae6b41dcdcf9629823a.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_ca442df88e994ae6b41dcdcf9629823a.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_93e128b7ee7d4732806bbf62d9fc0f8a.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAApDhl4AAAAAAAAAAOAAIiALATAAABoAAAAIAAAAAAAAhjkA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAADQ5AABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAjBkAAAAgAAAAGgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAcAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABo
OQAAAAAAAEgAAAACAAUAgCYAAPwRAAABAAAAAAAAAHw4AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwBwC7BQAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAAoKAigQAAAKbxEAAApyJwAAcG8SAAAKbxMAAApvFAAACgsCKBAAAApvEQAACnJLAABw
bxIAAApvEwAACm8UAAAKDAIoEAAACm8RAAAKcmMAAHBvEgAACm8TAAAKbxQAAAoNAigQAAAKbxEA
AApygwAAcG8SAAAKbxMAAApvFAAAChMEAigQAAAKbxEAAApyoQAAcG8SAAAKbxMAAApvFAAAChMF
AigQAAAKbxEAAApyvwAAcG8SAAAKbxMAAApvFAAAChMGAigQAAAKbxEAAApy6wAAcG8SAAAKbxMA
AAooFQAAChVaEwcfC40eAAABJRYHoiUXBqIlGHINAQBwoiUZCKIlGnINAQBwoiUbCaIlHHIRAQBw
oiUdKBYAAAoTDBIMciMBAHAoFwAACm8UAAAKoiUecg0BAHCiJR8JKBYAAAoTDBIMcjUBAHAoFwAA
Cm8UAAAKoiUfCnI/AQBwoigYAAAKJnJJAQBwEwhySQEAcBMJckkBAHATChEEEQUoGQAAChMFAigQ
AAAKbxEAAApySwEAcG8SAAAKbxMAAAooGgAACiwScmMBAHARBSgZAAAKKBsAAAomEQUoHAAAChMN
FhMOOBsCAAARDREOmhMPAigQAAAKbxEAAApySwEAcG8SAAAKbxMAAAooGgAACixeHY0eAAABJRZy
eQEAcKIlFxEPoiUYct0BAHCiJRkRDxEFEQURBigZAAAKbx0AAAqiJRpy/QEAcKIlGxEPbx4AAAoT
ERIRKB8AAAqiJRxyIQIAcKIoGAAACigbAAAKJhEPEQVySQEAcG8dAAAKEwgCKBAAAApvEQAACnJL
AQBwbxIAAApvEwAACigaAAAKLCJyKQIAcBEIEQhvHgAACh8MWR5vIAAACigZAAAKKBsAAAomEQgR
CG8eAAAKHwxZHm8gAAAKEgsoIQAAChMQERAsGREPEQURBREGKBkAAApvHQAAChMJOMwAAAARDxEF
EQURBigZAAAKbx0AAAoTCREJEQlvHgAAChpZGm8gAAAKEwocjR4AAAElFhEJEQpySQEAcG8dAAAK
oiUXcg0BAHCiJRgoFgAAChMMEgxyUwIAcCgXAAAKoiUZKBYAAAoTDBIMclkCAHAoFwAACqIlGigW
AAAKEwwSDHJfAgBwKBcAAAqiJRsRCqIoGAAAChMJAigQAAAKbxEAAApySwEAcG8SAAAKbxMAAAoo
GgAACiwXcmkCAHARCXIhAgBwKCIAAAooGwAACiYRCSgjAAAKLAcRCSgkAAAKERAsGxEPEQ8RBREF
EQYoGQAACm8dAAAKKCUAAAorCREPEQkoJQAAChEOF1gTDhEOEQ2OaT/a/f//EQURBigZAAAKKBwA
AAoTDRYTDjisAAAAEQ0RDpoTEhEScyYAAAoTExETbxQAAAooJwAACigWAAAKEwwSDBEHbCgoAAAK
KCkAAAoscgIoEAAACm8RAAAKcksBAHBvEgAACm8TAAAKKBoAAAosSh8JjR4AAAElFnLjAgBwoiUX
ERKiJRhyVwMAcKIlGREEoiUaBqIlG3KJAwBwoiUcEQWiJR0RBqIlHnIhAgBwoigYAAAKKBsAAAom
ERNvKgAAChEOF1gTDhEOEQ2OaT9J////EQVyjQMAcCgZAAAKKBwAAAoTDRYTDjisAAAAEQ0RDpoT
FBEUcyYAAAoTFREVbxQAAAooJwAACigWAAAKEwwSDBEHbCgoAAAKKCkAAAoscgIoEAAACm8RAAAK
cksBAHBvEgAACm8TAAAKKBoAAAosSh8JjR4AAAElFnKdAwBwoiUXERSiJRhyVwMAcKIlGREEoiUa
BqIlG3KJAwBwoiUcEQWiJR0RBqIlHnIhAgBwoigYAAAKKBsAAAomERVvKgAAChEOF1gTDhEOEQ2O
aT9J////AigQAAAKFm8rAAAKKh4CKCwAAAoqHgIoLQAACiqufgEAAAQtHnIRBABw0AMAAAIoLgAA
Cm8vAAAKczAAAAqAAQAABH4BAAAEKhp+AgAABCoeAoACAAAEKhp+AwAABCoeAigxAAAKKi5zCAAA
BoADAAAEKgAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAJAEAAAjfgAA/AQA
AHwGAAAjU3RyaW5ncwAAAAB4CwAAhAQAACNVUwD8DwAAEAAAACNHVUlEAAAADBAAAPABAAAjQmxv
YgAAAAAAAAACAAABVx2iAQkDAAAA+gEzABYAAAEAAAAnAAAABQAAAAYAAAAJAAAAAQAAADEAAAAC
AAAAEAAAAAEAAAACAAAAAwAAAAQAAAABAAAABQAAAAEAAAABAAAAAAD7AwEAAAAAAAYAkQL5BAYA
IAP5BAYA3QHmBA8AbQUAAAYACgKPBAYAdAKPBAYAVQKPBAYABwOPBAYAsQKPBAYAygKPBAYAIQKP
BAYAPAJTAwoA5QKqAwoATAGqAwYA3gAsBAYAoQQSAAYAMwQsBAYAwAHmBAYAFAYsBAYAyQQZBQYA
qgR6BA4AiQHlAw4A8QHlAw4AaAFlBAYApQH5BAoA0wOqAxIArwX3ABIArAD3AAYAQwYsBAYAbwMs
BBYAWAbLBRYAJwbLBQYAcAYSAAYAAwAsBAYA2QASAAYAtgQSAAYAFwEsBAYAtQAsBAYAZwaPBAAA
AAAJAAAAAAABAAEAAQAQAFoEQwA5AAEAAQAAABAAIAV8BU0AAQADAAABEADCBXwFYQADAAcAAwEA
APAFAABFAAQACgARADgE8gARADwB9gARAJwA+gAGBjsA/gBWgOAFAQFWgBwBAQFQIAAAAACGAGAE
BgABABcmAAAAAIYY2QQGAAEAHyYAAAAAgxjZBAYAAQAnJgAAAACTCMUEBQEBAFMmAAAAAJMIJAEK
AQEAWiYAAAAAkwgwAQ8BAQBiJgAAAACWCBsGFQECAGkmAAAAAIYY2QQGAAIAcSYAAAAAkRjfBBoB
AgAAAAEASAMJANkEAQARANkEBgAZANkECgApANkEEAAxANkEEAA5ANkEEABBANkEEABJANkEEABR
ANkEEABZANkEEABhANkEEABpANkEBgCRANkEBgC5ANkEFQDJANkEBgBxAOgFOADRAKsFPQDZACME
QgDhAD4DSACZAG0DTADpAAEAUAB5AEsGVQB5AG0DWgDxAA0GXwDxAA0GZQDpAEQEawD5AFMGcAAJ
AbkFdwDxAJQAfQDxAIADgwARAW0DTADxAHYDhwARAYABjQDxAA0GlAAZAf4FmwAZAZ4BoAAZAU4D
pQCBANkEEAAZAecAqwB5AAUGsQB5AE4EtwAhAZ4BBgDRADQGAQBxANkEBgCZANkEBgApAccAvwAp
AWMGyAChANkEzgDBANkEBgAIABQA6AAIABgA7QApAHMAVQEuAAsALQEuABMANgEuABsAVQEuACMA
XgEuACsAhwEuADMAhwEuADsAhwEuAEMAXgEuAEsAjQEuAFMAhwEuAFsApAFDAGMA7QBJAHMAVQFh
AHsA7QBjAGsA7QAbAAMAAQAEAAMAAADJBB4BAABEASMBAAAfBigBAgAEAAMAAgAFAAUAAQAGAAUA
AgAHAAcABIAAAAEAAADlHN1oAAAAAAAAZwAAAAQAAAAAAAAAAAAAANYAiwAAAAAADgAAAAAAAAAA
AAAA3wCLAwAAAAAEAAAAAAAAAAAAAADWACwEAAAAAA4AAAAAAAAAAAAAAN8AHAAAAAAABAAAAAAA
AAAAAAAA1gDLBQAAAAAAAAAAAQAAACoFAAAFAAIAAAAAVG9JbnQzMgA8TW9kdWxlPgBTeXN0ZW0u
SU8ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AU1RfY2E0NDJkZjg4ZTk5
NGFlNmI0MWRjZGNmOTYyOTgyM2EAU1RfOTNlMTI4YjdlZTdkNDczMjgwNmJiZjYyZDlmYzBmOGEA
bXNjb3JsaWIAUmVwbGFjZQBkZWZhdWx0SW5zdGFuY2UAVmFyaWFibGUAUnVudGltZVR5cGVIYW5k
bGUAR2V0VHlwZUZyb21IYW5kbGUARmlsZQBEYXRlVGltZQBHZXRDcmVhdGlvblRpbWUATWljcm9z
b2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1
bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNh
dGlvblNldHRpbmdzQmFzZQBUcnlQYXJzZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBEZWxldGUAQ29t
cGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1
Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0
cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0
ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJp
YnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJp
YnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRB
dHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0
cmlidXRlAGdldF9WYWx1ZQB2YWx1ZQBNb3ZlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVG9T
dHJpbmcAU3Vic3RyaW5nAGdldF9MZW5ndGgATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNr
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9k
ZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUXzkzZTEyOGI3ZWU3ZDQ3MzI4MDZiYmY2MmQ5ZmMw
ZjhhLmRsbABnZXRfSXRlbQBTeXN0ZW0ARW51bQByZXNvdXJjZU1hbgBUb0Jvb2xlYW4Ab3BfTGVz
c1RoYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlv
bgBTeXN0ZW0uUmVmbGVjdGlvbgBGaWxlSW5mbwBDdWx0dXJlSW5mbwBGaWxlU3lzdGVtSW5mbwBn
ZXRfUmVzb3VyY2VNYW5hZ2VyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVt
LlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUX2NhNDQyZGY4OGU5
OTRhZTZiNDFkY2RjZjk2Mjk4MjNhLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1
Z2dpbmdNb2RlcwBTVF9jYTQ0MmRmODhlOTk0YWU2YjQxZGNkY2Y5NjI5ODIzYS5Qcm9wZXJ0aWVz
AGdldF9WYXJpYWJsZXMAR2V0RmlsZXMAU2V0dGluZ3MAU3lzdGVtLldpbmRvd3MuRm9ybXMAU3Vj
Y2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMARXhpc3RzAEFkZERheXMAQ29uY2F0AE9iamVjdABn
ZXRfRGVmYXVsdABEaWFsb2dSZXN1bHQAc2V0X1Rhc2tSZXN1bHQAQ29udmVydABnZXRfTm93AFNo
b3cATWVzc2FnZUJveABnZXRfQXNzZW1ibHkARGlyZWN0b3J5AAAAACVVAHMAZQByADoAOgBDAHUA
cwB0AG8AbQBlAHIAQwBvAGQAZQAAI1UAcwBlAHIAOgA6AFIAZQBwAG8AcgB0AHMAUABhAHQAaAAA
F0kAbgB0AGUAZwByAGEAdABpAG8AbgAAH0kAbgB0AGUAZwByAGEAdABpAG8AbgBUAHkAcABlAAAd
VQBzAGUAcgA6ADoAUgBvAG8AdABQAGEAdABoAAAdVQBzAGUAcgA6ADoARgBpAGwAZQBQAGEAdABo
AAArVQBzAGUAcgA6ADoAQQByAGMAaABpAHYAZQBGAGkAbABlAFAAYQB0AGgAACFVAHMAZQByADoA
OgBEAGEAeQBzAFQAbwBLAGUAZQBwAAADXwAAEV8AUgBlAHAAbwByAHQAXwAAEU0ATQBkAGQAeQB5
AHkAeQAACUgASABtAG0AAAkuAHgAbABzAAABABdVAHMAZQByADoAOgBEAGUAYgB1AGcAABVGAGkA
bABlAFAAYQB0AGgAOgAgAABjKgAqACoAIABTAGUAbgBkAGkAbgBnACAAdABvACAAQQByAGMAaABp
AHYAZQAgAEYAbwBsAGQAZQByACAAKgAqACoADQAKAA0ACgBGAGkAbABlACAARgByAG8AbQA6ACAA
KAAAHykADQAKAA0ACgBGAGkAbABlACAAVABvADoAIAAoAAAjKQANAAoADQAKAEYAaQBsAGUAIABT
AGkAegBlADoAIAAoAAAHKQANAAoAACkqACoAKgAgAEYAaQBsAGUATgBhAG0AZQAgAEMAaABlAGMA
awA6ACAAAAVNAE0AAAVkAGQAAAl5AHkAeQB5AAB5KgAqACoAIABGAGkAbABlACAARABvAGUAcwAg
AE4ATwBUACAAaABhAHYAZQAgAEQAYQB0AGUAIABpAG4AIABOAGEAbQBlACAAIAAqACoAKgANAAoA
DQAKAE4AZQB3ACAARgBpAGwAZQAgAE4AYQBtAGUAOgAgACgAAHMqACoAKgAgAEMAbABlAGEAbgBp
AG4AZwAgAHUAcAAgAEEAcgBjAGgAaQB2AGUAIABGAG8AbABkAGUAcgAgACoAKgAqAA0ACgBEAGUA
bABlAHQAaQBuAGcAIABGAGkAbABlACAATgBhAG0AZQA6ACAAKAAAMSkADQAKACAAIAAgACAAIAAg
AFQAbwAgAEQAaQByAGUAYwB0AG8AcgB5ADoAIAAoAAADXAAAD1IAZQBwAG8AcgB0AHMAAHMqACoA
KgAgAEMAbABlAGEAbgBpAG4AZwAgAHUAcAAgAFIAZQBwAG8AcgB0AHMAIABGAG8AbABkAGUAcgAg
ACoAKgAqAA0ACgBEAGUAbABlAHQAaQBuAGcAIABGAGkAbABlACAATgBhAG0AZQA6ACAAKAAAcVMA
VABfAGMAYQA0ADQAMgBkAGYAOAA4AGUAOQA5ADQAYQBlADYAYgA0ADEAZABjAGQAYwBmADkANgAy
ADkAOAAyADMAYQAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAACSA
0LpQaNlBvSnbtDoq5gMABCABAQgDIAABBSABARERBCABAQ4FIAEBEVkcBxYODg4ODg4OCA4ODggR
PR0OCA4CCA4SQQ4SQQQgABJpBCAAEm0FIAEScRwDIAAcAyAADgQAAQgcBAAAET0EIAEODgUAAQ4d
DgUAAg4ODgQAAQIcBgABEYCBDgUAAR0ODgUgAg4ODgMgAAgFIAIOCAgGAAICDhAIBgADDg4ODgQA
AQIOBAABAQ4FAAIBDg4FAAERPQ4FIAERPQ0HAAICET0RPQgAARKAlRGAmQUgABKAnQcgAgEOEoCd
CLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMGElEDBhJVAwYSEAIGCAMGERQEAAASUQQAABJV
BQABARJVBAAAEhADAAABBAgAElEECAASVQQIABIQCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhj
ZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF9jYTQ0MmRmODhlOTk0YWU2YjQxZGNkY2Y5NjI5
ODIzYQAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDE4AABJAQAaLk5FVEZyYW1ld29yayxWZXJz
aW9uPXY0LjUBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNQAAtAAA
AM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwg
VmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2
MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQ
QURQQURQtAAAAFw5AAAAAAAAAAAAAHY5AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAABoOQAAAAAA
AAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAA
AFhAAAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAA
vQTv/gAAAQAAAAEA3WjlHAAAAQDdaOUcPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAAB
AFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAA
AAAAALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAAMAAw
ADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkA
TgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABT
AFQAXwBjAGEANAA0ADIAZABmADgAOABlADkAOQA0AGEAZQA2AGIANAAxAGQAYwBkAGMAZgA5ADYA
MgA5ADgAMgAzAGEAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANwAz
ADkANwAuADIANgA4ADQANQAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQA
XwA5ADMAZQAxADIAOABiADcAZQBlADcAZAA0ADcAMwAyADgAMAA2AGIAYgBmADYAMgBkADkAZgBj
ADAAZgA4AGEALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMA
bwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADEAOAAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBk
AGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0A
ZQAAAFMAVABfADkAMwBlADEAMgA4AGIANwBlAGUANwBkADQANwAzADIAOAAwADYAYgBiAGYANgAy
AGQAOQBmAGMAMABmADgAYQAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAA
AABTAFQAXwBjAGEANAA0ADIAZABmADgAOABlADkAOQA0AGEAZQA2AGIANAAxAGQAYwBkAGMAZgA5
ADYAMgA5ADgAMgAzAGEAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4A
MAAuADcAMwA5ADcALgAyADYAOAA0ADUAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQBy
AHMAaQBvAG4AAAAxAC4AMAAuADcAMwA5ADcALgAyADYAOAA0ADUAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAiDkAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Charges and Payments"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{B7E81890-2841-439F-B90D-B5F65C20F838}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Charges and Payments">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Charges and Payments\Charges"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{FC203C17-C76C-41E8-9348-A480080C8D4C}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Charges"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Charges and Payments\Charges\Check if Charges Exists"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Check if Charges Exists"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT RTRIM(LTRIM(CAST(SUBSTRING(Notes,21,6) AS VARCHAR(50)))) AS ReferenceID
FROM tblUnvCharges
WHERE Notes LIKE 'Genesys ReferenceID: %'</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (SELECT RTRIM(LTRIM(CAST(SUBSTRING(Notes,21,6) AS VARCHAR(50)))) AS ReferenceID
FROM tblUnvCharges
WHERE Notes LIKE 'Genesys ReferenceID: %') [refTable]
where [refTable].[ReferenceID] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">2</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ReferenceID" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Output].Columns[TransactionReference]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Charges and Payments\Charges\Check if Charges Exists.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Target - TIPWeb]"
                      connectionManagerRefId="Package.ConnectionManagers[Target - TIPWeb]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Charges and Payments\Charges\Check if Charges Exists.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Charges and Payments\Charges\Check if Charges Exists.Inputs[Lookup Input].Columns[TransactionReference]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="TransactionReference"
                          lineageId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Output].Columns[TransactionReference]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">ReferenceID</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Charges and Payments\Charges\Check if Charges Exists.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Charges and Payments\Charges\Check if Charges Exists.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Charges and Payments\Charges\Check if Charges Exists.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Charges and Payments\Charges\Check if Charges Exists.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Charges and Payments\Charges\Check if Charges Exists.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Charges and Payments\Charges\Check if Charges Exists.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Charges and Payments\Charges\Check if Charges Exists.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Charges and Payments\Charges\Check if Charges Exists.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Charges and Payments\Charges\Check if Charges Exists.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Charges and Payments\Charges\Check if Charges Exists.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Charges and Payments\Charges\Derived Column"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Charges and Payments\Charges\Derived Column.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Charges and Payments\Charges\Derived Column.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Charges and Payments\Charges\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Charges and Payments\Charges\Derived Column.Outputs[Derived Column Output].Columns[ApplicatonUID]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Charges and Payments\Charges\Derived Column.Outputs[Derived Column Output].Columns[ApplicatonUID]"
                          name="ApplicatonUID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::ApplicationUID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::ApplicationUID]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Charges and Payments\Charges\Derived Column.Outputs[Derived Column Output].Columns[CreateUserID]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Charges and Payments\Charges\Derived Column.Outputs[Derived Column Output].Columns[CreateUserID]"
                          name="CreateUserID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::IntegrationUserID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::IntegrationUserID]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Charges and Payments\Charges\Derived Column.Outputs[Derived Column Output].Columns[LastModifiedByUserID]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Charges and Payments\Charges\Derived Column.Outputs[Derived Column Output].Columns[LastModifiedByUserID]"
                          name="LastModifiedByUserID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::IntegrationUserID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::IntegrationUserID]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Charges and Payments\Charges\Derived Column.Outputs[Derived Column Output].Columns[EnityTypeUID]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Charges and Payments\Charges\Derived Column.Outputs[Derived Column Output].Columns[EnityTypeUID]"
                          name="EnityTypeUID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">4</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">4</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Charges and Payments\Charges\Derived Column.Outputs[Derived Column Output].Columns[Description]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Charges and Payments\Charges\Derived Column.Outputs[Derived Column Output].Columns[Description]"
                          name="Description"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::Integration]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::Integration]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Charges and Payments\Charges\Derived Column.Outputs[Derived Column Output].Columns[ItemTypeUID]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Charges and Payments\Charges\Derived Column.Outputs[Derived Column Output].Columns[ItemTypeUID]"
                          name="ItemTypeUID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">5</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">5</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Charges and Payments\Charges\Derived Column.Outputs[Derived Column Output].Columns[ItemUID]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Charges and Payments\Charges\Derived Column.Outputs[Derived Column Output].Columns[ItemUID]"
                          name="ItemUID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">0</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">0</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Charges and Payments\Charges\Derived Column.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Charges and Payments\Charges\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Charges and Payments\Charges\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Charges and Payments\Charges\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Charges and Payments\Charges\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Charges and Payments\Charges\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Charges and Payments\Charges\Get Changes"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="Get Changes"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT DISTINCT CAST(ChargeReferenceID AS INT) AS TransactionReference, CAST(ChargeDate AS datetime) AS TransactionDate,ChargeType,
ItemCode,ISNULL(ItemDescription,'') AS ItemDescription,'TIPWEB-IT Charge' AS ItemType,StudentID,SchoolID,
CAST(ChargeAmount AS money) AS ChargeAmount,GETDATE() AS LastModifiedDate,
ISNULL(Comment,'') AS Comments,
'Genesys ReferenceID: ' + CAST(ChargeReferenceID AS varchar(50)) + '  ' + 'Fee Name: ' + ItemCode AS Notes

FROM Genesys.StagingCharagesPayments
WHERE Exception = 0</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Charges and Payments\Charges\Get Changes.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Target - IntegrationMiddleWay]"
                      connectionManagerRefId="Package.ConnectionManagers[Target - IntegrationMiddleWay]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Output].Columns[TransactionReference]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Output].ExternalColumns[TransactionReference]"
                          length="50"
                          lineageId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Output].Columns[TransactionReference]"
                          name="TransactionReference"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Output].Columns[TransactionDate]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Output].ExternalColumns[TransactionDate]"
                          lineageId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Output].Columns[TransactionDate]"
                          name="TransactionDate"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Output].Columns[ChargeType]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Output].ExternalColumns[ChargeType]"
                          length="7"
                          lineageId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Output].Columns[ChargeType]"
                          name="ChargeType"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Output].Columns[ItemCode]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Output].ExternalColumns[ItemCode]"
                          length="100"
                          lineageId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Output].Columns[ItemCode]"
                          name="ItemCode"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Output].Columns[ItemDescription]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Output].ExternalColumns[ItemDescription]"
                          length="500"
                          lineageId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Output].Columns[ItemDescription]"
                          name="ItemDescription"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Output].Columns[ItemType]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Output].ExternalColumns[ItemType]"
                          length="16"
                          lineageId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Output].Columns[ItemType]"
                          name="ItemType"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Output].Columns[ChargeAmount]"
                          dataType="cy"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Output].ExternalColumns[ChargeAmount]"
                          lineageId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Output].Columns[ChargeAmount]"
                          name="ChargeAmount"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Output].Columns[LastModifiedDate]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Output].ExternalColumns[LastModifiedDate]"
                          lineageId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Output].Columns[LastModifiedDate]"
                          name="LastModifiedDate"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Output].Columns[Comments]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Output].ExternalColumns[Comments]"
                          length="500"
                          lineageId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Output].Columns[Comments]"
                          name="Comments"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Output].Columns[StudentID]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Output].ExternalColumns[StudentID]"
                          length="50"
                          lineageId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Output].Columns[StudentID]"
                          name="StudentID"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Output].Columns[SchoolID]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Output].ExternalColumns[SchoolID]"
                          length="50"
                          lineageId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Output].Columns[SchoolID]"
                          name="SchoolID"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Output].Columns[Notes]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Output].ExternalColumns[Notes]"
                          length="573"
                          lineageId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Output].Columns[Notes]"
                          name="Notes"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Output].ExternalColumns[TransactionReference]"
                          dataType="i4"
                          name="TransactionReference" />
                        <externalMetadataColumn
                          refId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Output].ExternalColumns[TransactionDate]"
                          dataType="dbTimeStamp"
                          name="TransactionDate" />
                        <externalMetadataColumn
                          refId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Output].ExternalColumns[ChargeType]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="ChargeType" />
                        <externalMetadataColumn
                          refId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Output].ExternalColumns[ItemCode]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="ItemCode" />
                        <externalMetadataColumn
                          refId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Output].ExternalColumns[ItemDescription]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="ItemDescription" />
                        <externalMetadataColumn
                          refId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Output].ExternalColumns[ItemType]"
                          codePage="1252"
                          dataType="str"
                          length="16"
                          name="ItemType" />
                        <externalMetadataColumn
                          refId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Output].ExternalColumns[ChargeAmount]"
                          dataType="cy"
                          name="ChargeAmount" />
                        <externalMetadataColumn
                          refId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Output].ExternalColumns[LastModifiedDate]"
                          dataType="dbTimeStamp"
                          name="LastModifiedDate" />
                        <externalMetadataColumn
                          refId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Output].ExternalColumns[Comments]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="Comments" />
                        <externalMetadataColumn
                          refId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Output].ExternalColumns[StudentID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="StudentID" />
                        <externalMetadataColumn
                          refId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Output].ExternalColumns[SchoolID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="SchoolID" />
                        <externalMetadataColumn
                          refId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Output].ExternalColumns[Notes]"
                          codePage="1252"
                          dataType="str"
                          length="183"
                          name="Notes" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Error Output].Columns[TransactionReference]"
                          dataType="i4"
                          lineageId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Error Output].Columns[TransactionReference]"
                          name="TransactionReference" />
                        <outputColumn
                          refId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Error Output].Columns[TransactionDate]"
                          dataType="dbTimeStamp"
                          lineageId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Error Output].Columns[TransactionDate]"
                          name="TransactionDate" />
                        <outputColumn
                          refId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Error Output].Columns[ChargeType]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Error Output].Columns[ChargeType]"
                          name="ChargeType" />
                        <outputColumn
                          refId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Error Output].Columns[ItemCode]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          lineageId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Error Output].Columns[ItemCode]"
                          name="ItemCode" />
                        <outputColumn
                          refId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Error Output].Columns[ItemDescription]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Error Output].Columns[ItemDescription]"
                          name="ItemDescription" />
                        <outputColumn
                          refId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Error Output].Columns[ItemType]"
                          codePage="1252"
                          dataType="str"
                          length="16"
                          lineageId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Error Output].Columns[ItemType]"
                          name="ItemType" />
                        <outputColumn
                          refId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Error Output].Columns[StudentID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Error Output].Columns[StudentID]"
                          name="StudentID" />
                        <outputColumn
                          refId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Error Output].Columns[SchoolID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Error Output].Columns[SchoolID]"
                          name="SchoolID" />
                        <outputColumn
                          refId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Error Output].Columns[ChargeAmount]"
                          dataType="cy"
                          lineageId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Error Output].Columns[ChargeAmount]"
                          name="ChargeAmount" />
                        <outputColumn
                          refId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Error Output].Columns[LastModifiedDate]"
                          dataType="dbTimeStamp"
                          lineageId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Error Output].Columns[LastModifiedDate]"
                          name="LastModifiedDate" />
                        <outputColumn
                          refId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Error Output].Columns[Comments]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Error Output].Columns[Comments]"
                          name="Comments" />
                        <outputColumn
                          refId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Error Output].Columns[Notes]"
                          codePage="1252"
                          dataType="str"
                          length="183"
                          lineageId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Error Output].Columns[Notes]"
                          name="Notes" />
                        <outputColumn
                          refId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Charges and Payments\Charges\Insert Chages"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="Insert Chages"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[tblUnvCharges]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">CHECK_CONSTRAINTS,ROWS_PER_BATCH = 500</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Charges and Payments\Charges\Insert Chages.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Target - TIPWeb]"
                      connectionManagerRefId="Package.ConnectionManagers[Target - TIPWeb]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Charges and Payments\Charges\Insert Chages.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Charges and Payments\Charges\Insert Chages.Inputs[OLE DB Destination Input].Columns[ApplicatonUID]"
                          cachedDataType="i4"
                          cachedName="ApplicatonUID"
                          externalMetadataColumnId="Package\Charges and Payments\Charges\Insert Chages.Inputs[OLE DB Destination Input].ExternalColumns[ApplicationUID]"
                          lineageId="Package\Charges and Payments\Charges\Derived Column.Outputs[Derived Column Output].Columns[ApplicatonUID]" />
                        <inputColumn
                          refId="Package\Charges and Payments\Charges\Insert Chages.Inputs[OLE DB Destination Input].Columns[CreateUserID]"
                          cachedDataType="i4"
                          cachedName="CreateUserID"
                          externalMetadataColumnId="Package\Charges and Payments\Charges\Insert Chages.Inputs[OLE DB Destination Input].ExternalColumns[CreatedByUserID]"
                          lineageId="Package\Charges and Payments\Charges\Derived Column.Outputs[Derived Column Output].Columns[CreateUserID]" />
                        <inputColumn
                          refId="Package\Charges and Payments\Charges\Insert Chages.Inputs[OLE DB Destination Input].Columns[LastModifiedByUserID]"
                          cachedDataType="i4"
                          cachedName="LastModifiedByUserID"
                          externalMetadataColumnId="Package\Charges and Payments\Charges\Insert Chages.Inputs[OLE DB Destination Input].ExternalColumns[LastModifiedByUserID]"
                          lineageId="Package\Charges and Payments\Charges\Derived Column.Outputs[Derived Column Output].Columns[LastModifiedByUserID]" />
                        <inputColumn
                          refId="Package\Charges and Payments\Charges\Insert Chages.Inputs[OLE DB Destination Input].Columns[ChargeAmount]"
                          cachedDataType="cy"
                          cachedName="ChargeAmount"
                          externalMetadataColumnId="Package\Charges and Payments\Charges\Insert Chages.Inputs[OLE DB Destination Input].ExternalColumns[ChargeAmount]"
                          lineageId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Output].Columns[ChargeAmount]" />
                        <inputColumn
                          refId="Package\Charges and Payments\Charges\Insert Chages.Inputs[OLE DB Destination Input].Columns[TransactionDate]"
                          cachedDataType="dbTimeStamp"
                          cachedName="TransactionDate"
                          externalMetadataColumnId="Package\Charges and Payments\Charges\Insert Chages.Inputs[OLE DB Destination Input].ExternalColumns[CreatedDate]"
                          lineageId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Output].Columns[TransactionDate]" />
                        <inputColumn
                          refId="Package\Charges and Payments\Charges\Insert Chages.Inputs[OLE DB Destination Input].Columns[ChargeTypeUID]"
                          cachedDataType="i4"
                          cachedName="ChargeTypeUID"
                          externalMetadataColumnId="Package\Charges and Payments\Charges\Insert Chages.Inputs[OLE DB Destination Input].ExternalColumns[ChargeTypeUID]"
                          lineageId="Package\Charges and Payments\Charges\Lookup ChargeTypeID.Outputs[Lookup Match Output].Columns[ChargeTypeUID]" />
                        <inputColumn
                          refId="Package\Charges and Payments\Charges\Insert Chages.Inputs[OLE DB Destination Input].Columns[StudentsUID]"
                          cachedDataType="i4"
                          cachedName="StudentsUID"
                          externalMetadataColumnId="Package\Charges and Payments\Charges\Insert Chages.Inputs[OLE DB Destination Input].ExternalColumns[EntityUID]"
                          lineageId="Package\Charges and Payments\Charges\Lookup StudentID.Outputs[Lookup Match Output].Columns[StudentsUID]" />
                        <inputColumn
                          refId="Package\Charges and Payments\Charges\Insert Chages.Inputs[OLE DB Destination Input].Columns[EnityTypeUID]"
                          cachedDataType="i4"
                          cachedName="EnityTypeUID"
                          externalMetadataColumnId="Package\Charges and Payments\Charges\Insert Chages.Inputs[OLE DB Destination Input].ExternalColumns[EntityTypeUID]"
                          lineageId="Package\Charges and Payments\Charges\Derived Column.Outputs[Derived Column Output].Columns[EnityTypeUID]" />
                        <inputColumn
                          refId="Package\Charges and Payments\Charges\Insert Chages.Inputs[OLE DB Destination Input].Columns[LastModifiedDate]"
                          cachedDataType="dbTimeStamp"
                          cachedName="LastModifiedDate"
                          externalMetadataColumnId="Package\Charges and Payments\Charges\Insert Chages.Inputs[OLE DB Destination Input].ExternalColumns[LastModifiedDate]"
                          lineageId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Output].Columns[LastModifiedDate]" />
                        <inputColumn
                          refId="Package\Charges and Payments\Charges\Insert Chages.Inputs[OLE DB Destination Input].Columns[Description]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Description"
                          externalMetadataColumnId="Package\Charges and Payments\Charges\Insert Chages.Inputs[OLE DB Destination Input].ExternalColumns[Description]"
                          lineageId="Package\Charges and Payments\Charges\Derived Column.Outputs[Derived Column Output].Columns[Description]" />
                        <inputColumn
                          refId="Package\Charges and Payments\Charges\Insert Chages.Inputs[OLE DB Destination Input].Columns[ItemTypeUID]"
                          cachedDataType="i4"
                          cachedName="ItemTypeUID"
                          externalMetadataColumnId="Package\Charges and Payments\Charges\Insert Chages.Inputs[OLE DB Destination Input].ExternalColumns[ItemTypeUID]"
                          lineageId="Package\Charges and Payments\Charges\Derived Column.Outputs[Derived Column Output].Columns[ItemTypeUID]" />
                        <inputColumn
                          refId="Package\Charges and Payments\Charges\Insert Chages.Inputs[OLE DB Destination Input].Columns[ItemUID]"
                          cachedDataType="i4"
                          cachedName="ItemUID"
                          externalMetadataColumnId="Package\Charges and Payments\Charges\Insert Chages.Inputs[OLE DB Destination Input].ExternalColumns[ItemUID]"
                          lineageId="Package\Charges and Payments\Charges\Derived Column.Outputs[Derived Column Output].Columns[ItemUID]" />
                        <inputColumn
                          refId="Package\Charges and Payments\Charges\Insert Chages.Inputs[OLE DB Destination Input].Columns[SiteUID]"
                          cachedDataType="i4"
                          cachedName="SiteUID"
                          externalMetadataColumnId="Package\Charges and Payments\Charges\Insert Chages.Inputs[OLE DB Destination Input].ExternalColumns[ChargeSiteUID]"
                          lineageId="Package\Charges and Payments\Charges\Lookup SiteUID.Outputs[Lookup Match Output].Columns[SiteUID]" />
                        <inputColumn
                          refId="Package\Charges and Payments\Charges\Insert Chages.Inputs[OLE DB Destination Input].Columns[Notes]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="573"
                          cachedName="Notes"
                          externalMetadataColumnId="Package\Charges and Payments\Charges\Insert Chages.Inputs[OLE DB Destination Input].ExternalColumns[Notes]"
                          lineageId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Output].Columns[Notes]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Charges and Payments\Charges\Insert Chages.Inputs[OLE DB Destination Input].ExternalColumns[ApplicationUID]"
                          dataType="i4"
                          name="ApplicationUID" />
                        <externalMetadataColumn
                          refId="Package\Charges and Payments\Charges\Insert Chages.Inputs[OLE DB Destination Input].ExternalColumns[ChargeUID]"
                          dataType="i4"
                          name="ChargeUID" />
                        <externalMetadataColumn
                          refId="Package\Charges and Payments\Charges\Insert Chages.Inputs[OLE DB Destination Input].ExternalColumns[ChargeAmount]"
                          dataType="cy"
                          name="ChargeAmount" />
                        <externalMetadataColumn
                          refId="Package\Charges and Payments\Charges\Insert Chages.Inputs[OLE DB Destination Input].ExternalColumns[Void]"
                          dataType="bool"
                          name="Void" />
                        <externalMetadataColumn
                          refId="Package\Charges and Payments\Charges\Insert Chages.Inputs[OLE DB Destination Input].ExternalColumns[Description]"
                          codePage="1252"
                          dataType="text"
                          name="Description" />
                        <externalMetadataColumn
                          refId="Package\Charges and Payments\Charges\Insert Chages.Inputs[OLE DB Destination Input].ExternalColumns[Notes]"
                          codePage="1252"
                          dataType="text"
                          name="Notes" />
                        <externalMetadataColumn
                          refId="Package\Charges and Payments\Charges\Insert Chages.Inputs[OLE DB Destination Input].ExternalColumns[CreatedByUserID]"
                          dataType="i4"
                          name="CreatedByUserID" />
                        <externalMetadataColumn
                          refId="Package\Charges and Payments\Charges\Insert Chages.Inputs[OLE DB Destination Input].ExternalColumns[CreatedDate]"
                          dataType="dbTimeStamp"
                          name="CreatedDate" />
                        <externalMetadataColumn
                          refId="Package\Charges and Payments\Charges\Insert Chages.Inputs[OLE DB Destination Input].ExternalColumns[LastModifiedByUserID]"
                          dataType="i4"
                          name="LastModifiedByUserID" />
                        <externalMetadataColumn
                          refId="Package\Charges and Payments\Charges\Insert Chages.Inputs[OLE DB Destination Input].ExternalColumns[LastModifiedDate]"
                          dataType="dbTimeStamp"
                          name="LastModifiedDate" />
                        <externalMetadataColumn
                          refId="Package\Charges and Payments\Charges\Insert Chages.Inputs[OLE DB Destination Input].ExternalColumns[ChargeTypeUID]"
                          dataType="i4"
                          name="ChargeTypeUID" />
                        <externalMetadataColumn
                          refId="Package\Charges and Payments\Charges\Insert Chages.Inputs[OLE DB Destination Input].ExternalColumns[EntityUID]"
                          dataType="i4"
                          name="EntityUID" />
                        <externalMetadataColumn
                          refId="Package\Charges and Payments\Charges\Insert Chages.Inputs[OLE DB Destination Input].ExternalColumns[EntityTypeUID]"
                          dataType="i4"
                          name="EntityTypeUID" />
                        <externalMetadataColumn
                          refId="Package\Charges and Payments\Charges\Insert Chages.Inputs[OLE DB Destination Input].ExternalColumns[ChargeSiteUID]"
                          dataType="i4"
                          name="ChargeSiteUID" />
                        <externalMetadataColumn
                          refId="Package\Charges and Payments\Charges\Insert Chages.Inputs[OLE DB Destination Input].ExternalColumns[UniversalID]"
                          codePage="1252"
                          dataType="str"
                          length="150"
                          name="UniversalID" />
                        <externalMetadataColumn
                          refId="Package\Charges and Payments\Charges\Insert Chages.Inputs[OLE DB Destination Input].ExternalColumns[ItemUID]"
                          dataType="i4"
                          name="ItemUID" />
                        <externalMetadataColumn
                          refId="Package\Charges and Payments\Charges\Insert Chages.Inputs[OLE DB Destination Input].ExternalColumns[ItemTypeUID]"
                          dataType="i4"
                          name="ItemTypeUID" />
                        <externalMetadataColumn
                          refId="Package\Charges and Payments\Charges\Insert Chages.Inputs[OLE DB Destination Input].ExternalColumns[DateSatisfied]"
                          dataType="dbTimeStamp"
                          name="DateSatisfied" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Charges and Payments\Charges\Insert Chages.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Charges and Payments\Charges\Insert Chages.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Charges and Payments\Charges\Insert Chages.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Charges and Payments\Charges\Insert Chages.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Charges and Payments\Charges\Insert Chages.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Charges and Payments\Charges\Insert Chages.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Charges and Payments\Charges\Lookup ChargeTypeID"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Lookup ChargeTypeID"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[tblUnvChargeTypes]</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[tblUnvChargeTypes]) [refTable]
where [refTable].[Name] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">2</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ChargeTypeUID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ApplicationUID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Description" dataType="DT_TEXT" length="0" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="ChargeAmount" dataType="DT_R8" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Percentage" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="AllowPriceChanges" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Name" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Active" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="CreatedByUserID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="CreatedDate" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="LastModifiedByUserID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="LastModifiedDate" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Output].Columns[ChargeType]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Charges and Payments\Charges\Lookup ChargeTypeID.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Target - TIPWeb]"
                      connectionManagerRefId="Package.ConnectionManagers[Target - TIPWeb]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Charges and Payments\Charges\Lookup ChargeTypeID.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Charges and Payments\Charges\Lookup ChargeTypeID.Inputs[Lookup Input].Columns[ChargeType]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="7"
                          cachedName="ChargeType"
                          lineageId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Output].Columns[ChargeType]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">Name</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Charges and Payments\Charges\Lookup ChargeTypeID.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Charges and Payments\Charges\Lookup ChargeTypeID.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Charges and Payments\Charges\Lookup ChargeTypeID.Outputs[Lookup Match Output].Columns[ChargeTypeUID]"
                          dataType="i4"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Charges and Payments\Charges\Lookup ChargeTypeID.Outputs[Lookup Match Output].Columns[ChargeTypeUID]"
                          name="ChargeTypeUID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">ChargeTypeUID</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Charges and Payments\Charges\Lookup ChargeTypeID.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Charges and Payments\Charges\Lookup ChargeTypeID.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Charges and Payments\Charges\Lookup ChargeTypeID.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Charges and Payments\Charges\Lookup ChargeTypeID.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Charges and Payments\Charges\Lookup ChargeTypeID.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Charges and Payments\Charges\Lookup ChargeTypeID.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Charges and Payments\Charges\Lookup ChargeTypeID.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Charges and Payments\Charges\Lookup ChargeTypeID.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Charges and Payments\Charges\Lookup SiteUID"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Lookup SiteUID"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[tblTechSites]</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[tblTechSites]) [refTable]
where [refTable].[SiteID] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">2</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="SiteUID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="SiteID" dataType="DT_STR" length="100" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Active" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="SiteName" dataType="DT_STR" length="100" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Contact" dataType="DT_STR" length="150" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Phone" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Email" dataType="DT_STR" length="100" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="SiteTypeUID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="RegionID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Notes" dataType="DT_TEXT" length="0" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="ShippingAddress1" dataType="DT_STR" length="100" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="ShippingAddress2" dataType="DT_STR" length="100" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="ShippingCity" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="ShippingStateID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ShippingZip" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="ShippingInstructions" dataType="DT_STR" length="1000" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="BillingAddress1" dataType="DT_STR" length="100" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="BillingAddress2" dataType="DT_STR" length="100" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="BillingCity" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="BillingStateID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="BillingZip" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="BillingInstructions" dataType="DT_STR" length="1000" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="CreatedByUserID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="CreatedDate" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="LastModifiedDate" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="LastModifiedByUserID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="IsWarehouse" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="IsDesignatedTransferSite" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="FacilityID" dataType="DT_STR" length="25" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Output].Columns[SchoolID]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Charges and Payments\Charges\Lookup SiteUID.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Target - TIPWeb]"
                      connectionManagerRefId="Package.ConnectionManagers[Target - TIPWeb]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Charges and Payments\Charges\Lookup SiteUID.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Charges and Payments\Charges\Lookup SiteUID.Inputs[Lookup Input].Columns[SchoolID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="SchoolID"
                          lineageId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Output].Columns[SchoolID]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">SiteID</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Charges and Payments\Charges\Lookup SiteUID.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Charges and Payments\Charges\Lookup SiteUID.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Charges and Payments\Charges\Lookup SiteUID.Outputs[Lookup Match Output].Columns[SiteUID]"
                          dataType="i4"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Charges and Payments\Charges\Lookup SiteUID.Outputs[Lookup Match Output].Columns[SiteUID]"
                          name="SiteUID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">SiteUID</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Charges and Payments\Charges\Lookup SiteUID.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Charges and Payments\Charges\Lookup SiteUID.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Charges and Payments\Charges\Lookup SiteUID.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Charges and Payments\Charges\Lookup SiteUID.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Charges and Payments\Charges\Lookup SiteUID.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Charges and Payments\Charges\Lookup SiteUID.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Charges and Payments\Charges\Lookup SiteUID.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Charges and Payments\Charges\Lookup SiteUID.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Charges and Payments\Charges\Lookup StudentID"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Lookup StudentID"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[tblStudents]</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[tblStudents]) [refTable]
where [refTable].[StudentID] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">2</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="StudentID" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="CampusID" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="FirstName" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="MiddleName" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="LastName" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="FullName" dataType="DT_STR" length="150" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Grade" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="HomeRoom" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Address" dataType="DT_STR" length="500" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Address2" dataType="DT_STR" length="500" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="City" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="State" dataType="DT_STR" length="2" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Zip" dataType="DT_STR" length="10" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Phone" dataType="DT_STR" length="15" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Race" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Gender" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Notes" dataType="DT_STR" length="6000" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="ParentEmail" dataType="DT_STR" length="100" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="UserID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ModifiedDate" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Status" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="StudentsUID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="StudentSIFGuid" dataType="DT_GUID" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Archived" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="New" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="NotesIT" dataType="DT_STR" length="6000" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="ActiveIT" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="StudentEmail" dataType="DT_STR" length="100" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Output].Columns[StudentID]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Charges and Payments\Charges\Lookup StudentID.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Target - TIPWeb]"
                      connectionManagerRefId="Package.ConnectionManagers[Target - TIPWeb]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Charges and Payments\Charges\Lookup StudentID.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Charges and Payments\Charges\Lookup StudentID.Inputs[Lookup Input].Columns[StudentID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="StudentID"
                          lineageId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Output].Columns[StudentID]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">StudentID</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Charges and Payments\Charges\Lookup StudentID.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Charges and Payments\Charges\Lookup StudentID.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Charges and Payments\Charges\Lookup StudentID.Outputs[Lookup Match Output].Columns[StudentsUID]"
                          dataType="i4"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Charges and Payments\Charges\Lookup StudentID.Outputs[Lookup Match Output].Columns[StudentsUID]"
                          name="StudentsUID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">StudentsUID</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Charges and Payments\Charges\Lookup StudentID.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Charges and Payments\Charges\Lookup StudentID.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Charges and Payments\Charges\Lookup StudentID.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Charges and Payments\Charges\Lookup StudentID.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Charges and Payments\Charges\Lookup StudentID.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Charges and Payments\Charges\Lookup StudentID.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Charges and Payments\Charges\Lookup StudentID.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Charges and Payments\Charges\Lookup StudentID.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Charges and Payments\Charges.Paths[Derived Column Output]"
                  endId="Package\Charges and Payments\Charges\Check if Charges Exists.Inputs[Lookup Input]"
                  name="Derived Column Output"
                  startId="Package\Charges and Payments\Charges\Derived Column.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Charges and Payments\Charges.Paths[Lookup Match Output]"
                  endId="Package\Charges and Payments\Charges\Lookup ChargeTypeID.Inputs[Lookup Input]"
                  name="Lookup Match Output"
                  startId="Package\Charges and Payments\Charges\Lookup StudentID.Outputs[Lookup Match Output]" />
                <path
                  refId="Package\Charges and Payments\Charges.Paths[Lookup Match Output1]"
                  endId="Package\Charges and Payments\Charges\Lookup StudentID.Inputs[Lookup Input]"
                  name="Lookup Match Output"
                  startId="Package\Charges and Payments\Charges\Lookup SiteUID.Outputs[Lookup Match Output]" />
                <path
                  refId="Package\Charges and Payments\Charges.Paths[Lookup Match Output2]"
                  endId="Package\Charges and Payments\Charges\Insert Chages.Inputs[OLE DB Destination Input]"
                  name="Lookup Match Output"
                  startId="Package\Charges and Payments\Charges\Lookup ChargeTypeID.Outputs[Lookup Match Output]" />
                <path
                  refId="Package\Charges and Payments\Charges.Paths[Lookup No Match Output]"
                  endId="Package\Charges and Payments\Charges\Lookup SiteUID.Inputs[Lookup Input]"
                  name="Lookup No Match Output"
                  startId="Package\Charges and Payments\Charges\Check if Charges Exists.Outputs[Lookup No Match Output]" />
                <path
                  refId="Package\Charges and Payments\Charges.Paths[OLE DB Source Output]"
                  endId="Package\Charges and Payments\Charges\Derived Column.Inputs[Derived Column Input]"
                  name="OLE DB Source Output"
                  startId="Package\Charges and Payments\Charges\Get Changes.Outputs[OLE DB Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Charges and Payments\Charges Statified for Non Waved"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{B7A381F4-1C7C-4935-BA2B-1DD777E6A6DB}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Charges Statified for Non Waved"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{1C14C91E-C8CF-4164-8C85-B3A818B6CECD}"
              SQLTask:SqlStatementSource="DECLARE @LastModifiedByUserID&#x9;INT = ?&#xA;DECLARE @ApplicationUID&#x9;&#x9;&#x9;INT = ?&#xA;&#xA;&#xA;UPDATE tblUnvCharges&#xA;&#xA;SET DateSatisfied = GETDATE(),&#xA;    LastModifiedByUserID = @LastModifiedByUserID,&#xA;&#x9;LastModifiedDate = GETDATE()&#xA;&#xA;WHERE ChargeUID IN&#xA;(&#xA;SELECT A.ChargeUID&#xA;&#xA;FROM tblUnvCharges AS A WITH (NOLOCK)&#xA;&#xA;INNER JOIN tblUnvChargePayments AS B WITH (NOLOCK)&#xA;ON A.ChargeUID=B.ChargeUID AND A.ApplicationUID = @ApplicationUID AND B.Void = 0&#xA;&#xA;WHERE A.DateSatisfied IS NULL&#xA;&#xA;GROUP BY A.ChargeUID,A.ChargeAmount&#xA;&#xA;HAVING SUM(B.ChargeAmount) = A.ChargeAmount&#xA;)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::IntegrationUserID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="131"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::ApplicationUID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="131"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Charges and Payments\Charges Statified for Wavied"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{55219CAC-87FE-4E53-8490-0A56F0EFCD95}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Charges Statified for Wavied"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Charges and Payments\Charges Statified for Wavied\Check if Charges Exists"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Check if Charges Exists"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT RTRIM(LTRIM(CAST(SUBSTRING(Notes,21,6) AS VARCHAR(50)))) AS ReferenceID
, ChargeUID FROM tblUnvCharges
WHERE Notes LIKE 'Genesys ReferenceID: %'</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (SELECT RTRIM(LTRIM(CAST(SUBSTRING(Notes,21,6) AS VARCHAR(50)))) AS ReferenceID
, ChargeUID FROM tblUnvCharges
WHERE Notes LIKE 'Genesys ReferenceID: %') [refTable]
where [refTable].[ReferenceID] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">2</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ReferenceID" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="ChargeUID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Charges and Payments\Charges Statified for Wavied\Get Waived Chages.Outputs[OLE DB Source Output].Columns[TransactionReference]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Charges and Payments\Charges Statified for Wavied\Check if Charges Exists.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Target - TIPWeb]"
                      connectionManagerRefId="Package.ConnectionManagers[Target - TIPWeb]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Charges and Payments\Charges Statified for Wavied\Check if Charges Exists.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Charges and Payments\Charges Statified for Wavied\Check if Charges Exists.Inputs[Lookup Input].Columns[TransactionReference]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="TransactionReference"
                          lineageId="Package\Charges and Payments\Charges Statified for Wavied\Get Waived Chages.Outputs[OLE DB Source Output].Columns[TransactionReference]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">ReferenceID</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Charges and Payments\Charges Statified for Wavied\Check if Charges Exists.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Charges and Payments\Charges Statified for Wavied\Check if Charges Exists.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Charges and Payments\Charges Statified for Wavied\Check if Charges Exists.Outputs[Lookup Match Output].Columns[ChargeUID]"
                          dataType="i4"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Charges and Payments\Charges Statified for Wavied\Check if Charges Exists.Outputs[Lookup Match Output].Columns[ChargeUID]"
                          name="ChargeUID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">ChargeUID</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Charges and Payments\Charges Statified for Wavied\Check if Charges Exists.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Charges and Payments\Charges Statified for Wavied\Check if Charges Exists.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Charges and Payments\Charges Statified for Wavied\Check if Charges Exists.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Charges and Payments\Charges Statified for Wavied\Check if Charges Exists.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Charges and Payments\Charges Statified for Wavied\Check if Charges Exists.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Charges and Payments\Charges Statified for Wavied\Check if Charges Exists.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Charges and Payments\Charges Statified for Wavied\Check if Charges Exists.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Charges and Payments\Charges Statified for Wavied\Check if Charges Exists.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Charges and Payments\Charges Statified for Wavied\Derived Column"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Charges and Payments\Charges Statified for Wavied\Derived Column.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Charges and Payments\Charges Statified for Wavied\Derived Column.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Charges and Payments\Charges Statified for Wavied\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Charges and Payments\Charges Statified for Wavied\Derived Column.Outputs[Derived Column Output].Columns[ApplicatonUID]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Charges and Payments\Charges Statified for Wavied\Derived Column.Outputs[Derived Column Output].Columns[ApplicatonUID]"
                          name="ApplicatonUID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::ApplicationUID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::ApplicationUID]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Charges and Payments\Charges Statified for Wavied\Derived Column.Outputs[Derived Column Output].Columns[CreateUserID]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Charges and Payments\Charges Statified for Wavied\Derived Column.Outputs[Derived Column Output].Columns[CreateUserID]"
                          name="CreateUserID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::IntegrationUserID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::IntegrationUserID]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Charges and Payments\Charges Statified for Wavied\Derived Column.Outputs[Derived Column Output].Columns[LastModifiedByUserID]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Charges and Payments\Charges Statified for Wavied\Derived Column.Outputs[Derived Column Output].Columns[LastModifiedByUserID]"
                          name="LastModifiedByUserID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::IntegrationUserID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::IntegrationUserID]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Charges and Payments\Charges Statified for Wavied\Derived Column.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Charges and Payments\Charges Statified for Wavied\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Charges and Payments\Charges Statified for Wavied\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Charges and Payments\Charges Statified for Wavied\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Charges and Payments\Charges Statified for Wavied\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Charges and Payments\Charges Statified for Wavied\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Charges and Payments\Charges Statified for Wavied\Get Waived Chages"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="Get Waived Chages"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT DISTINCT ChargeReferenceID AS TransactionReference,'Balanced Waived ' + CAST(CAST(GETDATE() AS date) AS varchar(50)) AS Notes

FROM Genesys.StagingCharagesPayments WITH (NOLOCK)
WHERE Exception = 0
AND Waived = 'Y'</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Charges and Payments\Charges Statified for Wavied\Get Waived Chages.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Target - IntegrationMiddleWay]"
                      connectionManagerRefId="Package.ConnectionManagers[Target - IntegrationMiddleWay]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Charges and Payments\Charges Statified for Wavied\Get Waived Chages.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Charges and Payments\Charges Statified for Wavied\Get Waived Chages.Outputs[OLE DB Source Output].Columns[TransactionReference]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Charges and Payments\Charges Statified for Wavied\Get Waived Chages.Outputs[OLE DB Source Output].ExternalColumns[TransactionReference]"
                          length="50"
                          lineageId="Package\Charges and Payments\Charges Statified for Wavied\Get Waived Chages.Outputs[OLE DB Source Output].Columns[TransactionReference]"
                          name="TransactionReference"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Charges and Payments\Charges Statified for Wavied\Get Waived Chages.Outputs[OLE DB Source Output].Columns[Notes]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Charges and Payments\Charges Statified for Wavied\Get Waived Chages.Outputs[OLE DB Source Output].ExternalColumns[Notes]"
                          length="66"
                          lineageId="Package\Charges and Payments\Charges Statified for Wavied\Get Waived Chages.Outputs[OLE DB Source Output].Columns[Notes]"
                          name="Notes"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Charges and Payments\Charges Statified for Wavied\Get Waived Chages.Outputs[OLE DB Source Output].ExternalColumns[TransactionReference]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="TransactionReference" />
                        <externalMetadataColumn
                          refId="Package\Charges and Payments\Charges Statified for Wavied\Get Waived Chages.Outputs[OLE DB Source Output].ExternalColumns[Notes]"
                          codePage="1252"
                          dataType="str"
                          length="66"
                          name="Notes" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Charges and Payments\Charges Statified for Wavied\Get Waived Chages.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Charges and Payments\Charges Statified for Wavied\Get Waived Chages.Outputs[OLE DB Source Error Output].Columns[TransactionReference]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Charges and Payments\Charges Statified for Wavied\Get Waived Chages.Outputs[OLE DB Source Error Output].Columns[TransactionReference]"
                          name="TransactionReference" />
                        <outputColumn
                          refId="Package\Charges and Payments\Charges Statified for Wavied\Get Waived Chages.Outputs[OLE DB Source Error Output].Columns[Notes]"
                          codePage="1252"
                          dataType="str"
                          length="66"
                          lineageId="Package\Charges and Payments\Charges Statified for Wavied\Get Waived Chages.Outputs[OLE DB Source Error Output].Columns[Notes]"
                          name="Notes" />
                        <outputColumn
                          refId="Package\Charges and Payments\Charges Statified for Wavied\Get Waived Chages.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Charges and Payments\Charges Statified for Wavied\Get Waived Chages.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Charges and Payments\Charges Statified for Wavied\Get Waived Chages.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Charges and Payments\Charges Statified for Wavied\Get Waived Chages.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Charges and Payments\Charges Statified for Wavied\Update Charges"
                  componentClassID="Microsoft.OLEDBCommand"
                  contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                  description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
                  name="Update Charges"
                  usesDispositions="true"
                  version="2">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">DECLARE @LastModifiedUserID INT = ?
DECLARE @ChargeUID INT = ?
DECLARE @Notes VARCHAR(100) = ?

UPDATE tblUnvCharges
SET LastModifiedByUserID = @LastModifiedUserID,
    LastModifiedDate = GETDATE(),
	Notes = Notes + ' ' + @Notes,
	Void = 1
WHERE ChargeUID = @ChargeUID</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Charges and Payments\Charges Statified for Wavied\Update Charges.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Target - TIPWeb]"
                      connectionManagerRefId="Package.ConnectionManagers[Target - TIPWeb]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Charges and Payments\Charges Statified for Wavied\Update Charges.Inputs[OLE DB Command Input]"
                      errorOrTruncationOperation="Command Execution"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Command Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Charges and Payments\Charges Statified for Wavied\Update Charges.Inputs[OLE DB Command Input].Columns[LastModifiedByUserID]"
                          cachedDataType="i4"
                          cachedName="LastModifiedByUserID"
                          externalMetadataColumnId="Package\Charges and Payments\Charges Statified for Wavied\Update Charges.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                          lineageId="Package\Charges and Payments\Charges Statified for Wavied\Derived Column.Outputs[Derived Column Output].Columns[LastModifiedByUserID]" />
                        <inputColumn
                          refId="Package\Charges and Payments\Charges Statified for Wavied\Update Charges.Inputs[OLE DB Command Input].Columns[ChargeUID]"
                          cachedDataType="i4"
                          cachedName="ChargeUID"
                          externalMetadataColumnId="Package\Charges and Payments\Charges Statified for Wavied\Update Charges.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                          lineageId="Package\Charges and Payments\Charges Statified for Wavied\Check if Charges Exists.Outputs[Lookup Match Output].Columns[ChargeUID]" />
                        <inputColumn
                          refId="Package\Charges and Payments\Charges Statified for Wavied\Update Charges.Inputs[OLE DB Command Input].Columns[Notes]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="66"
                          cachedName="Notes"
                          externalMetadataColumnId="Package\Charges and Payments\Charges Statified for Wavied\Update Charges.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                          lineageId="Package\Charges and Payments\Charges Statified for Wavied\Get Waived Chages.Outputs[OLE DB Source Output].Columns[Notes]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Charges and Payments\Charges Statified for Wavied\Update Charges.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                          dataType="i4"
                          name="Param_0">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Charges and Payments\Charges Statified for Wavied\Update Charges.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                          dataType="i4"
                          name="Param_1">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Charges and Payments\Charges Statified for Wavied\Update Charges.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Param_2">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Charges and Payments\Charges Statified for Wavied\Update Charges.Outputs[OLE DB Command Output]"
                      exclusionGroup="1"
                      name="OLE DB Command Output"
                      synchronousInputId="Package\Charges and Payments\Charges Statified for Wavied\Update Charges.Inputs[OLE DB Command Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Charges and Payments\Charges Statified for Wavied\Update Charges.Outputs[OLE DB Command Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Command Error Output"
                      synchronousInputId="Package\Charges and Payments\Charges Statified for Wavied\Update Charges.Inputs[OLE DB Command Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Charges and Payments\Charges Statified for Wavied\Update Charges.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Charges and Payments\Charges Statified for Wavied\Update Charges.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Charges and Payments\Charges Statified for Wavied\Update Charges.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Charges and Payments\Charges Statified for Wavied\Update Charges.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Charges and Payments\Charges Statified for Wavied.Paths[Derived Column Output]"
                  endId="Package\Charges and Payments\Charges Statified for Wavied\Check if Charges Exists.Inputs[Lookup Input]"
                  name="Derived Column Output"
                  startId="Package\Charges and Payments\Charges Statified for Wavied\Derived Column.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Charges and Payments\Charges Statified for Wavied.Paths[Lookup Match Output]"
                  endId="Package\Charges and Payments\Charges Statified for Wavied\Update Charges.Inputs[OLE DB Command Input]"
                  name="Lookup Match Output"
                  startId="Package\Charges and Payments\Charges Statified for Wavied\Check if Charges Exists.Outputs[Lookup Match Output]" />
                <path
                  refId="Package\Charges and Payments\Charges Statified for Wavied.Paths[OLE DB Source Output]"
                  endId="Package\Charges and Payments\Charges Statified for Wavied\Derived Column.Inputs[Derived Column Input]"
                  name="OLE DB Source Output"
                  startId="Package\Charges and Payments\Charges Statified for Wavied\Get Waived Chages.Outputs[OLE DB Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Charges and Payments\Payments"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{118BDE5D-89C0-4E7A-BF67-79C314C0B2B4}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Payments"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Charges and Payments\Payments\Check if Charges Exists"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Check if Charges Exists"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT RTRIM(LTRIM(CAST(SUBSTRING(Notes,21,6) AS VARCHAR(50)))) AS ReferenceID, ChargeUID, ChargeSiteUID
FROM tblUnvCharges
WHERE Notes LIKE 'Genesys ReferenceID: %'</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (SELECT RTRIM(LTRIM(CAST(SUBSTRING(Notes,21,6) AS VARCHAR(50)))) AS ReferenceID, ChargeUID, ChargeSiteUID
FROM tblUnvCharges
WHERE Notes LIKE 'Genesys ReferenceID: %') [refTable]
where [refTable].[ReferenceID] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">2</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ReferenceID" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="ChargeUID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ChargeSiteUID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Charges and Payments\Payments\Get Payments.Outputs[OLE DB Source Output].Columns[TransactionReference]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Charges and Payments\Payments\Check if Charges Exists.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Target - TIPWeb]"
                      connectionManagerRefId="Package.ConnectionManagers[Target - TIPWeb]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Charges and Payments\Payments\Check if Charges Exists.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Charges and Payments\Payments\Check if Charges Exists.Inputs[Lookup Input].Columns[TransactionReference]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="TransactionReference"
                          lineageId="Package\Charges and Payments\Payments\Get Payments.Outputs[OLE DB Source Output].Columns[TransactionReference]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">ReferenceID</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Charges and Payments\Payments\Check if Charges Exists.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Charges and Payments\Payments\Check if Charges Exists.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Charges and Payments\Payments\Check if Charges Exists.Outputs[Lookup Match Output].Columns[ChargeUID]"
                          dataType="i4"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Charges and Payments\Payments\Check if Charges Exists.Outputs[Lookup Match Output].Columns[ChargeUID]"
                          name="ChargeUID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">ChargeUID</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Charges and Payments\Payments\Check if Charges Exists.Outputs[Lookup Match Output].Columns[ChargeSiteUID]"
                          dataType="i4"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Charges and Payments\Payments\Check if Charges Exists.Outputs[Lookup Match Output].Columns[ChargeSiteUID]"
                          name="ChargeSiteUID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">ChargeSiteUID</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Charges and Payments\Payments\Check if Charges Exists.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Charges and Payments\Payments\Check if Charges Exists.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Charges and Payments\Payments\Check if Charges Exists.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Charges and Payments\Payments\Check if Charges Exists.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Charges and Payments\Payments\Check if Charges Exists.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Charges and Payments\Payments\Check if Charges Exists.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Charges and Payments\Payments\Check if Charges Exists.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Charges and Payments\Payments\Check if Charges Exists.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Charges and Payments\Payments\Check if Payment Exists"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Check if Payment Exists"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[tblUnvChargePayments]</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[tblUnvChargePayments]) [refTable]
where [refTable].[ChargeAmount] = ? and [refTable].[ApplicationUID] = ? and [refTable].[ChargeUID] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">2</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ChargePaymentUID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ApplicationUID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ChargeUID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="PaymentSiteUID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ChargeAmount" dataType="DT_CY" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Void" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Description" dataType="DT_TEXT" length="0" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Notes" dataType="DT_TEXT" length="0" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="CreatedByUserID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="CreatedDate" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="LastModifiedByUserID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="LastModifiedDate" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Charges and Payments\Payments\Get Payments.Outputs[OLE DB Source Output].Columns[PaymentAmount]};#{Package\Charges and Payments\Payments\Derived Column Payments.Outputs[Derived Column Output].Columns[ApplicatonUID]};#{Package\Charges and Payments\Payments\Check if Charges Exists.Outputs[Lookup Match Output].Columns[ChargeUID]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Charges and Payments\Payments\Check if Payment Exists.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Target - TIPWeb]"
                      connectionManagerRefId="Package.ConnectionManagers[Target - TIPWeb]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Charges and Payments\Payments\Check if Payment Exists.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Charges and Payments\Payments\Check if Payment Exists.Inputs[Lookup Input].Columns[ChargeUID]"
                          cachedDataType="i4"
                          cachedName="ChargeUID"
                          lineageId="Package\Charges and Payments\Payments\Check if Charges Exists.Outputs[Lookup Match Output].Columns[ChargeUID]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">ChargeUID</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Charges and Payments\Payments\Check if Payment Exists.Inputs[Lookup Input].Columns[ApplicatonUID]"
                          cachedDataType="i4"
                          cachedName="ApplicatonUID"
                          lineageId="Package\Charges and Payments\Payments\Derived Column Payments.Outputs[Derived Column Output].Columns[ApplicatonUID]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">ApplicationUID</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Charges and Payments\Payments\Check if Payment Exists.Inputs[Lookup Input].Columns[PaymentAmount]"
                          cachedDataType="cy"
                          cachedName="PaymentAmount"
                          lineageId="Package\Charges and Payments\Payments\Get Payments.Outputs[OLE DB Source Output].Columns[PaymentAmount]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">ChargeAmount</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Charges and Payments\Payments\Check if Payment Exists.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Charges and Payments\Payments\Check if Payment Exists.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Charges and Payments\Payments\Check if Payment Exists.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Charges and Payments\Payments\Check if Payment Exists.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Charges and Payments\Payments\Check if Payment Exists.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Charges and Payments\Payments\Check if Payment Exists.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Charges and Payments\Payments\Check if Payment Exists.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Charges and Payments\Payments\Check if Payment Exists.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Charges and Payments\Payments\Check if Payment Exists.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Charges and Payments\Payments\Check if Payment Exists.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Charges and Payments\Payments\Derived Column Payments"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column Payments"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Charges and Payments\Payments\Derived Column Payments.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Charges and Payments\Payments\Derived Column Payments.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Charges and Payments\Payments\Derived Column Payments.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Charges and Payments\Payments\Derived Column Payments.Outputs[Derived Column Output].Columns[ApplicatonUID]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Charges and Payments\Payments\Derived Column Payments.Outputs[Derived Column Output].Columns[ApplicatonUID]"
                          name="ApplicatonUID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::ApplicationUID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::ApplicationUID]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Charges and Payments\Payments\Derived Column Payments.Outputs[Derived Column Output].Columns[CreateUserID]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Charges and Payments\Payments\Derived Column Payments.Outputs[Derived Column Output].Columns[CreateUserID]"
                          name="CreateUserID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::IntegrationUserID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::IntegrationUserID]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Charges and Payments\Payments\Derived Column Payments.Outputs[Derived Column Output].Columns[LastModifiedByUserID]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Charges and Payments\Payments\Derived Column Payments.Outputs[Derived Column Output].Columns[LastModifiedByUserID]"
                          name="LastModifiedByUserID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::IntegrationUserID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::IntegrationUserID]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Charges and Payments\Payments\Derived Column Payments.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Charges and Payments\Payments\Derived Column Payments.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Charges and Payments\Payments\Derived Column Payments.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Charges and Payments\Payments\Derived Column Payments.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Charges and Payments\Payments\Derived Column Payments.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Charges and Payments\Payments\Derived Column Payments.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Charges and Payments\Payments\Get Payments"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="Get Payments"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT DISTINCT ChargeReferenceID AS TransactionReference,ChargeType AS ChargeType,
CAST(PaymentAmount AS MONEY) AS PaymentAmount,'TIPWEB-IT Genesys Payment' AS Description,ISNULL(PaymentDate,GETDATE()) AS PaymentDate,
'PaymentMethod: ' + PaymentMethod AS Notes,GETDATE() AS LastModifiedDate

FROM Genesys.StagingCharagesPayments WITH (NOLOCK)
WHERE Exception = 0
AND CAST(PaymentAmount AS MONEY) &gt; 0</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Charges and Payments\Payments\Get Payments.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Target - IntegrationMiddleWay]"
                      connectionManagerRefId="Package.ConnectionManagers[Target - IntegrationMiddleWay]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Charges and Payments\Payments\Get Payments.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Charges and Payments\Payments\Get Payments.Outputs[OLE DB Source Output].Columns[TransactionReference]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Charges and Payments\Payments\Get Payments.Outputs[OLE DB Source Output].ExternalColumns[TransactionReference]"
                          length="50"
                          lineageId="Package\Charges and Payments\Payments\Get Payments.Outputs[OLE DB Source Output].Columns[TransactionReference]"
                          name="TransactionReference"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Charges and Payments\Payments\Get Payments.Outputs[OLE DB Source Output].Columns[ChargeType]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Charges and Payments\Payments\Get Payments.Outputs[OLE DB Source Output].ExternalColumns[ChargeType]"
                          length="50"
                          lineageId="Package\Charges and Payments\Payments\Get Payments.Outputs[OLE DB Source Output].Columns[ChargeType]"
                          name="ChargeType"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Charges and Payments\Payments\Get Payments.Outputs[OLE DB Source Output].Columns[PaymentAmount]"
                          dataType="cy"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Charges and Payments\Payments\Get Payments.Outputs[OLE DB Source Output].ExternalColumns[PaymentAmount]"
                          lineageId="Package\Charges and Payments\Payments\Get Payments.Outputs[OLE DB Source Output].Columns[PaymentAmount]"
                          name="PaymentAmount"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Charges and Payments\Payments\Get Payments.Outputs[OLE DB Source Output].Columns[Description]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Charges and Payments\Payments\Get Payments.Outputs[OLE DB Source Output].ExternalColumns[Description]"
                          length="25"
                          lineageId="Package\Charges and Payments\Payments\Get Payments.Outputs[OLE DB Source Output].Columns[Description]"
                          name="Description"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Charges and Payments\Payments\Get Payments.Outputs[OLE DB Source Output].Columns[PaymentDate]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Charges and Payments\Payments\Get Payments.Outputs[OLE DB Source Output].ExternalColumns[PaymentDate]"
                          length="50"
                          lineageId="Package\Charges and Payments\Payments\Get Payments.Outputs[OLE DB Source Output].Columns[PaymentDate]"
                          name="PaymentDate"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Charges and Payments\Payments\Get Payments.Outputs[OLE DB Source Output].Columns[Notes]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Charges and Payments\Payments\Get Payments.Outputs[OLE DB Source Output].ExternalColumns[Notes]"
                          length="65"
                          lineageId="Package\Charges and Payments\Payments\Get Payments.Outputs[OLE DB Source Output].Columns[Notes]"
                          name="Notes"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Charges and Payments\Payments\Get Payments.Outputs[OLE DB Source Output].Columns[LastModifiedDate]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Charges and Payments\Payments\Get Payments.Outputs[OLE DB Source Output].ExternalColumns[LastModifiedDate]"
                          lineageId="Package\Charges and Payments\Payments\Get Payments.Outputs[OLE DB Source Output].Columns[LastModifiedDate]"
                          name="LastModifiedDate"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Charges and Payments\Payments\Get Payments.Outputs[OLE DB Source Output].ExternalColumns[TransactionReference]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="TransactionReference" />
                        <externalMetadataColumn
                          refId="Package\Charges and Payments\Payments\Get Payments.Outputs[OLE DB Source Output].ExternalColumns[ChargeType]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="ChargeType" />
                        <externalMetadataColumn
                          refId="Package\Charges and Payments\Payments\Get Payments.Outputs[OLE DB Source Output].ExternalColumns[PaymentAmount]"
                          dataType="cy"
                          name="PaymentAmount" />
                        <externalMetadataColumn
                          refId="Package\Charges and Payments\Payments\Get Payments.Outputs[OLE DB Source Output].ExternalColumns[Description]"
                          codePage="1252"
                          dataType="str"
                          length="25"
                          name="Description" />
                        <externalMetadataColumn
                          refId="Package\Charges and Payments\Payments\Get Payments.Outputs[OLE DB Source Output].ExternalColumns[PaymentDate]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="PaymentDate" />
                        <externalMetadataColumn
                          refId="Package\Charges and Payments\Payments\Get Payments.Outputs[OLE DB Source Output].ExternalColumns[Notes]"
                          codePage="1252"
                          dataType="str"
                          length="65"
                          name="Notes" />
                        <externalMetadataColumn
                          refId="Package\Charges and Payments\Payments\Get Payments.Outputs[OLE DB Source Output].ExternalColumns[LastModifiedDate]"
                          dataType="dbTimeStamp"
                          name="LastModifiedDate" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Charges and Payments\Payments\Get Payments.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Charges and Payments\Payments\Get Payments.Outputs[OLE DB Source Error Output].Columns[TransactionReference]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Charges and Payments\Payments\Get Payments.Outputs[OLE DB Source Error Output].Columns[TransactionReference]"
                          name="TransactionReference" />
                        <outputColumn
                          refId="Package\Charges and Payments\Payments\Get Payments.Outputs[OLE DB Source Error Output].Columns[ChargeType]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Charges and Payments\Payments\Get Payments.Outputs[OLE DB Source Error Output].Columns[ChargeType]"
                          name="ChargeType" />
                        <outputColumn
                          refId="Package\Charges and Payments\Payments\Get Payments.Outputs[OLE DB Source Error Output].Columns[PaymentAmount]"
                          dataType="cy"
                          lineageId="Package\Charges and Payments\Payments\Get Payments.Outputs[OLE DB Source Error Output].Columns[PaymentAmount]"
                          name="PaymentAmount" />
                        <outputColumn
                          refId="Package\Charges and Payments\Payments\Get Payments.Outputs[OLE DB Source Error Output].Columns[Description]"
                          codePage="1252"
                          dataType="str"
                          length="25"
                          lineageId="Package\Charges and Payments\Payments\Get Payments.Outputs[OLE DB Source Error Output].Columns[Description]"
                          name="Description" />
                        <outputColumn
                          refId="Package\Charges and Payments\Payments\Get Payments.Outputs[OLE DB Source Error Output].Columns[PaymentDate]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Charges and Payments\Payments\Get Payments.Outputs[OLE DB Source Error Output].Columns[PaymentDate]"
                          name="PaymentDate" />
                        <outputColumn
                          refId="Package\Charges and Payments\Payments\Get Payments.Outputs[OLE DB Source Error Output].Columns[Notes]"
                          codePage="1252"
                          dataType="str"
                          length="65"
                          lineageId="Package\Charges and Payments\Payments\Get Payments.Outputs[OLE DB Source Error Output].Columns[Notes]"
                          name="Notes" />
                        <outputColumn
                          refId="Package\Charges and Payments\Payments\Get Payments.Outputs[OLE DB Source Error Output].Columns[LastModifiedDate]"
                          dataType="dbTimeStamp"
                          lineageId="Package\Charges and Payments\Payments\Get Payments.Outputs[OLE DB Source Error Output].Columns[LastModifiedDate]"
                          name="LastModifiedDate" />
                        <outputColumn
                          refId="Package\Charges and Payments\Payments\Get Payments.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Charges and Payments\Payments\Get Payments.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Charges and Payments\Payments\Get Payments.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Charges and Payments\Payments\Get Payments.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Charges and Payments\Payments\Insert Payment"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="Insert Payment"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[tblUnvChargePayments]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Charges and Payments\Payments\Insert Payment.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Target - TIPWeb]"
                      connectionManagerRefId="Package.ConnectionManagers[Target - TIPWeb]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Charges and Payments\Payments\Insert Payment.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Charges and Payments\Payments\Insert Payment.Inputs[OLE DB Destination Input].Columns[Description]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="25"
                          cachedName="Description"
                          externalMetadataColumnId="Package\Charges and Payments\Payments\Insert Payment.Inputs[OLE DB Destination Input].ExternalColumns[Description]"
                          lineageId="Package\Charges and Payments\Payments\Get Payments.Outputs[OLE DB Source Output].Columns[Description]" />
                        <inputColumn
                          refId="Package\Charges and Payments\Payments\Insert Payment.Inputs[OLE DB Destination Input].Columns[LastModifiedByUserID]"
                          cachedDataType="i4"
                          cachedName="LastModifiedByUserID"
                          externalMetadataColumnId="Package\Charges and Payments\Payments\Insert Payment.Inputs[OLE DB Destination Input].ExternalColumns[LastModifiedByUserID]"
                          lineageId="Package\Charges and Payments\Payments\Derived Column Payments.Outputs[Derived Column Output].Columns[LastModifiedByUserID]" />
                        <inputColumn
                          refId="Package\Charges and Payments\Payments\Insert Payment.Inputs[OLE DB Destination Input].Columns[ChargeUID]"
                          cachedDataType="i4"
                          cachedName="ChargeUID"
                          externalMetadataColumnId="Package\Charges and Payments\Payments\Insert Payment.Inputs[OLE DB Destination Input].ExternalColumns[ChargeUID]"
                          lineageId="Package\Charges and Payments\Payments\Check if Charges Exists.Outputs[Lookup Match Output].Columns[ChargeUID]" />
                        <inputColumn
                          refId="Package\Charges and Payments\Payments\Insert Payment.Inputs[OLE DB Destination Input].Columns[PaymentAmount]"
                          cachedDataType="cy"
                          cachedName="PaymentAmount"
                          externalMetadataColumnId="Package\Charges and Payments\Payments\Insert Payment.Inputs[OLE DB Destination Input].ExternalColumns[ChargeAmount]"
                          lineageId="Package\Charges and Payments\Payments\Get Payments.Outputs[OLE DB Source Output].Columns[PaymentAmount]" />
                        <inputColumn
                          refId="Package\Charges and Payments\Payments\Insert Payment.Inputs[OLE DB Destination Input].Columns[ApplicatonUID]"
                          cachedDataType="i4"
                          cachedName="ApplicatonUID"
                          externalMetadataColumnId="Package\Charges and Payments\Payments\Insert Payment.Inputs[OLE DB Destination Input].ExternalColumns[ApplicationUID]"
                          lineageId="Package\Charges and Payments\Payments\Derived Column Payments.Outputs[Derived Column Output].Columns[ApplicatonUID]" />
                        <inputColumn
                          refId="Package\Charges and Payments\Payments\Insert Payment.Inputs[OLE DB Destination Input].Columns[CreateUserID]"
                          cachedDataType="i4"
                          cachedName="CreateUserID"
                          externalMetadataColumnId="Package\Charges and Payments\Payments\Insert Payment.Inputs[OLE DB Destination Input].ExternalColumns[CreatedByUserID]"
                          lineageId="Package\Charges and Payments\Payments\Derived Column Payments.Outputs[Derived Column Output].Columns[CreateUserID]" />
                        <inputColumn
                          refId="Package\Charges and Payments\Payments\Insert Payment.Inputs[OLE DB Destination Input].Columns[LastModifiedDate]"
                          cachedDataType="dbTimeStamp"
                          cachedName="LastModifiedDate"
                          externalMetadataColumnId="Package\Charges and Payments\Payments\Insert Payment.Inputs[OLE DB Destination Input].ExternalColumns[LastModifiedDate]"
                          lineageId="Package\Charges and Payments\Payments\Get Payments.Outputs[OLE DB Source Output].Columns[LastModifiedDate]" />
                        <inputColumn
                          refId="Package\Charges and Payments\Payments\Insert Payment.Inputs[OLE DB Destination Input].Columns[Notes]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="65"
                          cachedName="Notes"
                          externalMetadataColumnId="Package\Charges and Payments\Payments\Insert Payment.Inputs[OLE DB Destination Input].ExternalColumns[Notes]"
                          lineageId="Package\Charges and Payments\Payments\Get Payments.Outputs[OLE DB Source Output].Columns[Notes]" />
                        <inputColumn
                          refId="Package\Charges and Payments\Payments\Insert Payment.Inputs[OLE DB Destination Input].Columns[ChargeSiteUID]"
                          cachedDataType="i4"
                          cachedName="ChargeSiteUID"
                          externalMetadataColumnId="Package\Charges and Payments\Payments\Insert Payment.Inputs[OLE DB Destination Input].ExternalColumns[PaymentSiteUID]"
                          lineageId="Package\Charges and Payments\Payments\Check if Charges Exists.Outputs[Lookup Match Output].Columns[ChargeSiteUID]" />
                        <inputColumn
                          refId="Package\Charges and Payments\Payments\Insert Payment.Inputs[OLE DB Destination Input].Columns[PaymentDate]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="PaymentDate"
                          externalMetadataColumnId="Package\Charges and Payments\Payments\Insert Payment.Inputs[OLE DB Destination Input].ExternalColumns[CreatedDate]"
                          lineageId="Package\Charges and Payments\Payments\Get Payments.Outputs[OLE DB Source Output].Columns[PaymentDate]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Charges and Payments\Payments\Insert Payment.Inputs[OLE DB Destination Input].ExternalColumns[ChargeUID]"
                          dataType="i4"
                          name="ChargeUID" />
                        <externalMetadataColumn
                          refId="Package\Charges and Payments\Payments\Insert Payment.Inputs[OLE DB Destination Input].ExternalColumns[ChargeAmount]"
                          dataType="cy"
                          name="ChargeAmount" />
                        <externalMetadataColumn
                          refId="Package\Charges and Payments\Payments\Insert Payment.Inputs[OLE DB Destination Input].ExternalColumns[Void]"
                          dataType="bool"
                          name="Void" />
                        <externalMetadataColumn
                          refId="Package\Charges and Payments\Payments\Insert Payment.Inputs[OLE DB Destination Input].ExternalColumns[Description]"
                          codePage="1252"
                          dataType="text"
                          name="Description" />
                        <externalMetadataColumn
                          refId="Package\Charges and Payments\Payments\Insert Payment.Inputs[OLE DB Destination Input].ExternalColumns[Notes]"
                          codePage="1252"
                          dataType="text"
                          name="Notes" />
                        <externalMetadataColumn
                          refId="Package\Charges and Payments\Payments\Insert Payment.Inputs[OLE DB Destination Input].ExternalColumns[ApplicationUID]"
                          dataType="i4"
                          name="ApplicationUID" />
                        <externalMetadataColumn
                          refId="Package\Charges and Payments\Payments\Insert Payment.Inputs[OLE DB Destination Input].ExternalColumns[CreatedByUserID]"
                          dataType="i4"
                          name="CreatedByUserID" />
                        <externalMetadataColumn
                          refId="Package\Charges and Payments\Payments\Insert Payment.Inputs[OLE DB Destination Input].ExternalColumns[CreatedDate]"
                          dataType="dbTimeStamp"
                          name="CreatedDate" />
                        <externalMetadataColumn
                          refId="Package\Charges and Payments\Payments\Insert Payment.Inputs[OLE DB Destination Input].ExternalColumns[LastModifiedByUserID]"
                          dataType="i4"
                          name="LastModifiedByUserID" />
                        <externalMetadataColumn
                          refId="Package\Charges and Payments\Payments\Insert Payment.Inputs[OLE DB Destination Input].ExternalColumns[LastModifiedDate]"
                          dataType="dbTimeStamp"
                          name="LastModifiedDate" />
                        <externalMetadataColumn
                          refId="Package\Charges and Payments\Payments\Insert Payment.Inputs[OLE DB Destination Input].ExternalColumns[ChargePaymentUID]"
                          dataType="i4"
                          name="ChargePaymentUID" />
                        <externalMetadataColumn
                          refId="Package\Charges and Payments\Payments\Insert Payment.Inputs[OLE DB Destination Input].ExternalColumns[PaymentSiteUID]"
                          dataType="i4"
                          name="PaymentSiteUID" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Charges and Payments\Payments\Insert Payment.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Charges and Payments\Payments\Insert Payment.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Charges and Payments\Payments\Insert Payment.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Charges and Payments\Payments\Insert Payment.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Charges and Payments\Payments\Insert Payment.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Charges and Payments\Payments\Insert Payment.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Charges and Payments\Payments.Paths[Derived Column Output]"
                  endId="Package\Charges and Payments\Payments\Check if Charges Exists.Inputs[Lookup Input]"
                  name="Derived Column Output"
                  startId="Package\Charges and Payments\Payments\Derived Column Payments.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Charges and Payments\Payments.Paths[Lookup Match Output]"
                  endId="Package\Charges and Payments\Payments\Check if Payment Exists.Inputs[Lookup Input]"
                  name="Lookup Match Output"
                  startId="Package\Charges and Payments\Payments\Check if Charges Exists.Outputs[Lookup Match Output]" />
                <path
                  refId="Package\Charges and Payments\Payments.Paths[Lookup No Match Output]"
                  endId="Package\Charges and Payments\Payments\Insert Payment.Inputs[OLE DB Destination Input]"
                  name="Lookup No Match Output"
                  startId="Package\Charges and Payments\Payments\Check if Payment Exists.Outputs[Lookup No Match Output]" />
                <path
                  refId="Package\Charges and Payments\Payments.Paths[OLE DB Source Output]"
                  endId="Package\Charges and Payments\Payments\Derived Column Payments.Inputs[Derived Column Input]"
                  name="OLE DB Source Output"
                  startId="Package\Charges and Payments\Payments\Get Payments.Outputs[OLE DB Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Charges and Payments.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{4C67098C-3587-4804-AC37-8FEB93DA28AE}"
          DTS:From="Package\Charges and Payments\Charges"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Charges and Payments\Payments" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Charges and Payments.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{4963B510-8B7C-4014-BC5C-9D806E67A866}"
          DTS:From="Package\Charges and Payments\Payments"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Charges and Payments\Charges Statified for Non Waved" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Charges and Payments.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{9B3914DC-11A6-4975-BB06-35ADAECE9D37}"
          DTS:From="Package\Charges and Payments\Charges Statified for Non Waved"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Charges and Payments\Charges Statified for Wavied" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Exceptions"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{77C356EE-EB23-42AA-B77C-FBF416047597}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Exceptions">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Exceptions\ChargeAmount"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{D52FB162-7C40-4E43-B58C-D53BB3EB1C8C}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="ChargeAmount"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Exceptions\ChargeAmount\Bad Charge Amounts"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="Bad Charge Amounts"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT DISTINCT ChargeAmount AS ExceptionValue
FROM Genesys.StagingCharagesPayments 
WHERE ISNUMERIC(ChargeAmount ) = 0
OR ChargeAmount IS NULL</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Exceptions\ChargeAmount\Bad Charge Amounts.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Target - IntegrationMiddleWay]"
                      connectionManagerRefId="Package.ConnectionManagers[Target - IntegrationMiddleWay]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Exceptions\ChargeAmount\Bad Charge Amounts.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Exceptions\ChargeAmount\Bad Charge Amounts.Outputs[OLE DB Source Output].Columns[ExceptionValue]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Exceptions\ChargeAmount\Bad Charge Amounts.Outputs[OLE DB Source Output].ExternalColumns[ExceptionValue]"
                          length="255"
                          lineageId="Package\Exceptions\ChargeAmount\Bad Charge Amounts.Outputs[OLE DB Source Output].Columns[ExceptionValue]"
                          name="ExceptionValue"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Exceptions\ChargeAmount\Bad Charge Amounts.Outputs[OLE DB Source Output].ExternalColumns[ExceptionValue]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="ExceptionValue" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Exceptions\ChargeAmount\Bad Charge Amounts.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Exceptions\ChargeAmount\Bad Charge Amounts.Outputs[OLE DB Source Error Output].Columns[ExceptionValue]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Exceptions\ChargeAmount\Bad Charge Amounts.Outputs[OLE DB Source Error Output].Columns[ExceptionValue]"
                          name="ExceptionValue" />
                        <outputColumn
                          refId="Package\Exceptions\ChargeAmount\Bad Charge Amounts.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Exceptions\ChargeAmount\Bad Charge Amounts.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Exceptions\ChargeAmount\Bad Charge Amounts.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Exceptions\ChargeAmount\Bad Charge Amounts.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Exceptions\ChargeAmount\Data Conversion"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Data Conversion"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Exceptions\ChargeAmount\Data Conversion.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Exceptions\ChargeAmount\Data Conversion.Inputs[Data Conversion Input].Columns[Customer]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="Customer"
                          lineageId="Package\Exceptions\ChargeAmount\Set Defaults.Outputs[Derived Column Output].Columns[Customer]" />
                        <inputColumn
                          refId="Package\Exceptions\ChargeAmount\Data Conversion.Inputs[Data Conversion Input].Columns[ExceptionColumn]"
                          cachedDataType="wstr"
                          cachedLength="12"
                          cachedName="ExceptionColumn"
                          lineageId="Package\Exceptions\ChargeAmount\Set Defaults.Outputs[Derived Column Output].Columns[ExceptionColumn]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Exceptions\ChargeAmount\Data Conversion.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Exceptions\ChargeAmount\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Exceptions\ChargeAmount\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Customer]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Exceptions\ChargeAmount\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Customer]"
                          name="DC.Customer"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Exceptions\ChargeAmount\Set Defaults.Outputs[Derived Column Output].Columns[Customer]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Exceptions\ChargeAmount\Data Conversion.Outputs[Data Conversion Output].Columns[DC.ExceptionColumn]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Exceptions\ChargeAmount\Data Conversion.Outputs[Data Conversion Output].Columns[DC.ExceptionColumn]"
                          name="DC.ExceptionColumn"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Exceptions\ChargeAmount\Set Defaults.Outputs[Derived Column Output].Columns[ExceptionColumn]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Exceptions\ChargeAmount\Data Conversion.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Exceptions\ChargeAmount\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Exceptions\ChargeAmount\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Exceptions\ChargeAmount\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Exceptions\ChargeAmount\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Exceptions\ChargeAmount\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Exceptions\ChargeAmount\Insert Exceptions"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="Insert Exceptions"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[Genesys].[StagingCharagesPaymentsExceptions]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">ROWS_PER_BATCH = 100</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Exceptions\ChargeAmount\Insert Exceptions.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Target - IntegrationMiddleWay]"
                      connectionManagerRefId="Package.ConnectionManagers[Target - IntegrationMiddleWay]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Exceptions\ChargeAmount\Insert Exceptions.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Exceptions\ChargeAmount\Insert Exceptions.Inputs[OLE DB Destination Input].Columns[DC.Customer]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="DC.Customer"
                          externalMetadataColumnId="Package\Exceptions\ChargeAmount\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[CustomerCode]"
                          lineageId="Package\Exceptions\ChargeAmount\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Customer]" />
                        <inputColumn
                          refId="Package\Exceptions\ChargeAmount\Insert Exceptions.Inputs[OLE DB Destination Input].Columns[DC.ExceptionColumn]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="DC.ExceptionColumn"
                          externalMetadataColumnId="Package\Exceptions\ChargeAmount\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[ExceptionColumn]"
                          lineageId="Package\Exceptions\ChargeAmount\Data Conversion.Outputs[Data Conversion Output].Columns[DC.ExceptionColumn]" />
                        <inputColumn
                          refId="Package\Exceptions\ChargeAmount\Insert Exceptions.Inputs[OLE DB Destination Input].Columns[ExceptionValue]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="ExceptionValue"
                          externalMetadataColumnId="Package\Exceptions\ChargeAmount\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[ExceptionValue]"
                          lineageId="Package\Exceptions\ChargeAmount\Bad Charge Amounts.Outputs[OLE DB Source Output].Columns[ExceptionValue]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Exceptions\ChargeAmount\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[CustomerCode]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="CustomerCode" />
                        <externalMetadataColumn
                          refId="Package\Exceptions\ChargeAmount\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[ExceptionColumn]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="ExceptionColumn" />
                        <externalMetadataColumn
                          refId="Package\Exceptions\ChargeAmount\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[ExceptionRefColumn]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="ExceptionRefColumn" />
                        <externalMetadataColumn
                          refId="Package\Exceptions\ChargeAmount\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[ExceptionValue]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="ExceptionValue" />
                        <externalMetadataColumn
                          refId="Package\Exceptions\ChargeAmount\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[ExceptionRefValue]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="ExceptionRefValue" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Exceptions\ChargeAmount\Insert Exceptions.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Exceptions\ChargeAmount\Insert Exceptions.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Exceptions\ChargeAmount\Insert Exceptions.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Exceptions\ChargeAmount\Insert Exceptions.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Exceptions\ChargeAmount\Insert Exceptions.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Exceptions\ChargeAmount\Insert Exceptions.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Exceptions\ChargeAmount\Set Defaults"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Set Defaults"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Exceptions\ChargeAmount\Set Defaults.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Exceptions\ChargeAmount\Set Defaults.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Exceptions\ChargeAmount\Set Defaults.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Exceptions\ChargeAmount\Set Defaults.Outputs[Derived Column Output].Columns[Customer]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Exceptions\ChargeAmount\Set Defaults.Outputs[Derived Column Output].Columns[Customer]"
                          name="Customer"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::CustomerCode]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::CustomerCode]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Exceptions\ChargeAmount\Set Defaults.Outputs[Derived Column Output].Columns[ExceptionColumn]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="12"
                          lineageId="Package\Exceptions\ChargeAmount\Set Defaults.Outputs[Derived Column Output].Columns[ExceptionColumn]"
                          name="ExceptionColumn"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"ChargeAmount"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"ChargeAmount"</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Exceptions\ChargeAmount\Set Defaults.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Exceptions\ChargeAmount\Set Defaults.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Exceptions\ChargeAmount\Set Defaults.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Exceptions\ChargeAmount\Set Defaults.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Exceptions\ChargeAmount\Set Defaults.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Exceptions\ChargeAmount\Set Defaults.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Exceptions\ChargeAmount.Paths[Data Conversion Output]"
                  endId="Package\Exceptions\ChargeAmount\Insert Exceptions.Inputs[OLE DB Destination Input]"
                  name="Data Conversion Output"
                  startId="Package\Exceptions\ChargeAmount\Data Conversion.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Exceptions\ChargeAmount.Paths[Derived Column Output]"
                  endId="Package\Exceptions\ChargeAmount\Data Conversion.Inputs[Data Conversion Input]"
                  name="Derived Column Output"
                  startId="Package\Exceptions\ChargeAmount\Set Defaults.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Exceptions\ChargeAmount.Paths[OLE DB Source Output]"
                  endId="Package\Exceptions\ChargeAmount\Set Defaults.Inputs[Derived Column Input]"
                  name="OLE DB Source Output"
                  startId="Package\Exceptions\ChargeAmount\Bad Charge Amounts.Outputs[OLE DB Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Exceptions\Mark Exceptions"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{49749434-BC35-40C5-BB55-1EE3F6EF506D}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Mark Exceptions"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{76645D34-473D-4E9D-8DC9-2FDA13261849}"
              SQLTask:SqlStatementSource="&#xA;-- StudentID&#xA;UPDATE A&#xA;SET Exception=1,&#xA;    ExceptionReason=CASE WHEN ISNULL(ExceptionReason,'') = '' THEN 'StudentID does not exist' ELSE ExceptionReason + ',StudentID does not exist' END &#xA;FROM Genesys.StagingCharagesPayments AS A&#xA;INNER JOIN Genesys.StagingCharagesPaymentsExceptions AS B&#xA;ON ISNULL(A.StudentID,'')=ISNULL(B.ExceptionValue,'') AND B.ExceptionColumn='StudentID' &#xA;AND A.CustomerCode=B.CustomerCode&#xA;&#xA;-- ChargeAmount&#xA;UPDATE A&#xA;SET Exception=1,&#xA;    ExceptionReason=CASE WHEN ISNULL(ExceptionReason,'') = '' THEN 'Charge Amount is &lt;= 0' ELSE ExceptionReason + ',Charge Amount is &lt;= 0' END &#xA;FROM Genesys.StagingCharagesPayments AS A&#xA;INNER JOIN  Genesys.StagingCharagesPaymentsExceptions AS B&#xA;ON ISNULL(A.ChargeAmount,'')=ISNULL(B.ExceptionValue,'') AND B.ExceptionColumn='ChargeAmount' &#xA;AND A.CustomerCode=B.CustomerCode&#xA;&#xA;-- Transaction Date&#xA;UPDATE A&#xA;SET Exception=1,&#xA;    ExceptionReason=CASE WHEN ISNULL(ExceptionReason,'') = '' THEN 'TransactionDate is not a valid date' ELSE ExceptionReason + ',TransactionDate is not a valid date' END &#xA;FROM Genesys.StagingCharagesPayments AS A&#xA;INNER JOIN  Genesys.StagingCharagesPaymentsExceptions AS B&#xA;ON ISNULL(A.ChargeDate ,'')=ISNULL(B.ExceptionValue,'') AND B.ExceptionColumn='TransactionDate' &#xA;AND A.CustomerCode=B.CustomerCode&#xA;&#xA;-- ChargeUID&#xA;UPDATE A&#xA;SET Exception=1,&#xA;    ExceptionReason=CASE WHEN ISNULL(ExceptionReason,'') = '' THEN 'TransactionReference it not valid' ELSE ExceptionReason + ',TransactionReference it not valid' END &#xA;FROM Genesys.StagingCharagesPayments AS A&#xA;INNER JOIN  Genesys.StagingCharagesPaymentsExceptions AS B&#xA;ON ISNULL(A.ChargeReferenceID ,'')=ISNULL(B.ExceptionValue,'') AND B.ExceptionColumn='ChargeUID' &#xA;AND A.CustomerCode=B.CustomerCode&#xA;&#xA;-- SiteUID&#xA;UPDATE A&#xA;SET Exception=1,&#xA;    ExceptionReason=CASE WHEN ISNULL(ExceptionReason,'') = '' THEN 'SiteID it not valid' ELSE ExceptionReason + ',SiteID it not valid' END &#xA;FROM Genesys.StagingCharagesPayments AS A&#xA;INNER JOIN  Genesys.StagingCharagesPaymentsExceptions AS B&#xA;ON ISNULL(A.SchoolID ,'')=ISNULL(B.ExceptionValue,'') AND B.ExceptionColumn='SiteID' &#xA;AND A.CustomerCode=B.CustomerCode" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Exceptions\SiteUIDs"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{5282E550-5883-49BC-9B5F-E16111D5DCE1}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="SiteUIDs"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Exceptions\SiteUIDs\Bad SiteIDs"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="Bad SiteIDs"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT DISTINCT SchoolID AS ExceptionValue 
FROM Genesys.StagingCharagesPayments</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Exceptions\SiteUIDs\Bad SiteIDs.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Target - IntegrationMiddleWay]"
                      connectionManagerRefId="Package.ConnectionManagers[Target - IntegrationMiddleWay]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Exceptions\SiteUIDs\Bad SiteIDs.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Exceptions\SiteUIDs\Bad SiteIDs.Outputs[OLE DB Source Output].Columns[ExceptionValue]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Exceptions\SiteUIDs\Bad SiteIDs.Outputs[OLE DB Source Output].ExternalColumns[ExceptionValue]"
                          length="255"
                          lineageId="Package\Exceptions\SiteUIDs\Bad SiteIDs.Outputs[OLE DB Source Output].Columns[ExceptionValue]"
                          name="ExceptionValue"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Exceptions\SiteUIDs\Bad SiteIDs.Outputs[OLE DB Source Output].ExternalColumns[ExceptionValue]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="ExceptionValue" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Exceptions\SiteUIDs\Bad SiteIDs.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Exceptions\SiteUIDs\Bad SiteIDs.Outputs[OLE DB Source Error Output].Columns[ExceptionValue]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Exceptions\SiteUIDs\Bad SiteIDs.Outputs[OLE DB Source Error Output].Columns[ExceptionValue]"
                          name="ExceptionValue" />
                        <outputColumn
                          refId="Package\Exceptions\SiteUIDs\Bad SiteIDs.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Exceptions\SiteUIDs\Bad SiteIDs.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Exceptions\SiteUIDs\Bad SiteIDs.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Exceptions\SiteUIDs\Bad SiteIDs.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Exceptions\SiteUIDs\Data Conversion"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Data Conversion"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Exceptions\SiteUIDs\Data Conversion.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Exceptions\SiteUIDs\Data Conversion.Inputs[Data Conversion Input].Columns[Customer]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="Customer"
                          lineageId="Package\Exceptions\SiteUIDs\Set Defaults.Outputs[Derived Column Output].Columns[Customer]" />
                        <inputColumn
                          refId="Package\Exceptions\SiteUIDs\Data Conversion.Inputs[Data Conversion Input].Columns[ExceptionColumn]"
                          cachedDataType="wstr"
                          cachedLength="6"
                          cachedName="ExceptionColumn"
                          lineageId="Package\Exceptions\SiteUIDs\Set Defaults.Outputs[Derived Column Output].Columns[ExceptionColumn]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Exceptions\SiteUIDs\Data Conversion.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Exceptions\SiteUIDs\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Exceptions\SiteUIDs\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Customer]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Exceptions\SiteUIDs\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Customer]"
                          name="DC.Customer"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Exceptions\SiteUIDs\Set Defaults.Outputs[Derived Column Output].Columns[Customer]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Exceptions\SiteUIDs\Data Conversion.Outputs[Data Conversion Output].Columns[DC.ExceptionColumn]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Exceptions\SiteUIDs\Data Conversion.Outputs[Data Conversion Output].Columns[DC.ExceptionColumn]"
                          name="DC.ExceptionColumn"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Exceptions\SiteUIDs\Set Defaults.Outputs[Derived Column Output].Columns[ExceptionColumn]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Exceptions\SiteUIDs\Data Conversion.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Exceptions\SiteUIDs\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Exceptions\SiteUIDs\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Exceptions\SiteUIDs\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Exceptions\SiteUIDs\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Exceptions\SiteUIDs\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Exceptions\SiteUIDs\Insert Exceptions"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="Insert Exceptions"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[Genesys].[StagingCharagesPaymentsExceptions]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">ROWS_PER_BATCH = 100</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Exceptions\SiteUIDs\Insert Exceptions.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Target - IntegrationMiddleWay]"
                      connectionManagerRefId="Package.ConnectionManagers[Target - IntegrationMiddleWay]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Exceptions\SiteUIDs\Insert Exceptions.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Exceptions\SiteUIDs\Insert Exceptions.Inputs[OLE DB Destination Input].Columns[DC.Customer]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="DC.Customer"
                          externalMetadataColumnId="Package\Exceptions\SiteUIDs\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[CustomerCode]"
                          lineageId="Package\Exceptions\SiteUIDs\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Customer]" />
                        <inputColumn
                          refId="Package\Exceptions\SiteUIDs\Insert Exceptions.Inputs[OLE DB Destination Input].Columns[DC.ExceptionColumn]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="DC.ExceptionColumn"
                          externalMetadataColumnId="Package\Exceptions\SiteUIDs\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[ExceptionColumn]"
                          lineageId="Package\Exceptions\SiteUIDs\Data Conversion.Outputs[Data Conversion Output].Columns[DC.ExceptionColumn]" />
                        <inputColumn
                          refId="Package\Exceptions\SiteUIDs\Insert Exceptions.Inputs[OLE DB Destination Input].Columns[ExceptionValue]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="ExceptionValue"
                          externalMetadataColumnId="Package\Exceptions\SiteUIDs\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[ExceptionValue]"
                          lineageId="Package\Exceptions\SiteUIDs\Bad SiteIDs.Outputs[OLE DB Source Output].Columns[ExceptionValue]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Exceptions\SiteUIDs\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[CustomerCode]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="CustomerCode" />
                        <externalMetadataColumn
                          refId="Package\Exceptions\SiteUIDs\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[ExceptionColumn]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="ExceptionColumn" />
                        <externalMetadataColumn
                          refId="Package\Exceptions\SiteUIDs\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[ExceptionRefColumn]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="ExceptionRefColumn" />
                        <externalMetadataColumn
                          refId="Package\Exceptions\SiteUIDs\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[ExceptionValue]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="ExceptionValue" />
                        <externalMetadataColumn
                          refId="Package\Exceptions\SiteUIDs\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[ExceptionRefValue]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="ExceptionRefValue" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Exceptions\SiteUIDs\Insert Exceptions.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Exceptions\SiteUIDs\Insert Exceptions.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Exceptions\SiteUIDs\Insert Exceptions.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Exceptions\SiteUIDs\Insert Exceptions.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Exceptions\SiteUIDs\Insert Exceptions.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Exceptions\SiteUIDs\Insert Exceptions.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Exceptions\SiteUIDs\Lookup SiteUID"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Lookup SiteUID"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[tblTechSites]</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[tblTechSites]) [refTable]
where [refTable].[SiteID] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">2</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="SiteUID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="SiteID" dataType="DT_STR" length="100" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Active" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="SiteName" dataType="DT_STR" length="100" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Contact" dataType="DT_STR" length="150" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Phone" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Email" dataType="DT_STR" length="100" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="SiteTypeUID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="RegionID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Notes" dataType="DT_TEXT" length="0" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="ShippingAddress1" dataType="DT_STR" length="100" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="ShippingAddress2" dataType="DT_STR" length="100" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="ShippingCity" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="ShippingStateID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ShippingZip" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="ShippingInstructions" dataType="DT_STR" length="1000" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="BillingAddress1" dataType="DT_STR" length="100" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="BillingAddress2" dataType="DT_STR" length="100" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="BillingCity" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="BillingStateID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="BillingZip" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="BillingInstructions" dataType="DT_STR" length="1000" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="CreatedByUserID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="CreatedDate" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="LastModifiedDate" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="LastModifiedByUserID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="IsWarehouse" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="IsDesignatedTransferSite" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="FacilityID" dataType="DT_STR" length="25" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Exceptions\SiteUIDs\Bad SiteIDs.Outputs[OLE DB Source Output].Columns[ExceptionValue]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Exceptions\SiteUIDs\Lookup SiteUID.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Target - TIPWeb]"
                      connectionManagerRefId="Package.ConnectionManagers[Target - TIPWeb]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Exceptions\SiteUIDs\Lookup SiteUID.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Exceptions\SiteUIDs\Lookup SiteUID.Inputs[Lookup Input].Columns[ExceptionValue]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="ExceptionValue"
                          lineageId="Package\Exceptions\SiteUIDs\Bad SiteIDs.Outputs[OLE DB Source Output].Columns[ExceptionValue]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">SiteID</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Exceptions\SiteUIDs\Lookup SiteUID.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Exceptions\SiteUIDs\Lookup SiteUID.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Exceptions\SiteUIDs\Lookup SiteUID.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Exceptions\SiteUIDs\Lookup SiteUID.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Exceptions\SiteUIDs\Lookup SiteUID.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Exceptions\SiteUIDs\Lookup SiteUID.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Exceptions\SiteUIDs\Lookup SiteUID.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Exceptions\SiteUIDs\Lookup SiteUID.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Exceptions\SiteUIDs\Lookup SiteUID.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Exceptions\SiteUIDs\Lookup SiteUID.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Exceptions\SiteUIDs\Set Defaults"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Set Defaults"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Exceptions\SiteUIDs\Set Defaults.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Exceptions\SiteUIDs\Set Defaults.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Exceptions\SiteUIDs\Set Defaults.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Exceptions\SiteUIDs\Set Defaults.Outputs[Derived Column Output].Columns[Customer]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Exceptions\SiteUIDs\Set Defaults.Outputs[Derived Column Output].Columns[Customer]"
                          name="Customer"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::CustomerCode]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::CustomerCode]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Exceptions\SiteUIDs\Set Defaults.Outputs[Derived Column Output].Columns[ExceptionColumn]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="6"
                          lineageId="Package\Exceptions\SiteUIDs\Set Defaults.Outputs[Derived Column Output].Columns[ExceptionColumn]"
                          name="ExceptionColumn"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"SiteID"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"SiteID"</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Exceptions\SiteUIDs\Set Defaults.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Exceptions\SiteUIDs\Set Defaults.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Exceptions\SiteUIDs\Set Defaults.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Exceptions\SiteUIDs\Set Defaults.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Exceptions\SiteUIDs\Set Defaults.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Exceptions\SiteUIDs\Set Defaults.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Exceptions\SiteUIDs.Paths[Data Conversion Output]"
                  endId="Package\Exceptions\SiteUIDs\Lookup SiteUID.Inputs[Lookup Input]"
                  name="Data Conversion Output"
                  startId="Package\Exceptions\SiteUIDs\Data Conversion.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Exceptions\SiteUIDs.Paths[Derived Column Output]"
                  endId="Package\Exceptions\SiteUIDs\Data Conversion.Inputs[Data Conversion Input]"
                  name="Derived Column Output"
                  startId="Package\Exceptions\SiteUIDs\Set Defaults.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Exceptions\SiteUIDs.Paths[Lookup No Match Output]"
                  endId="Package\Exceptions\SiteUIDs\Insert Exceptions.Inputs[OLE DB Destination Input]"
                  name="Lookup No Match Output"
                  startId="Package\Exceptions\SiteUIDs\Lookup SiteUID.Outputs[Lookup No Match Output]" />
                <path
                  refId="Package\Exceptions\SiteUIDs.Paths[OLE DB Source Output]"
                  endId="Package\Exceptions\SiteUIDs\Set Defaults.Inputs[Derived Column Input]"
                  name="OLE DB Source Output"
                  startId="Package\Exceptions\SiteUIDs\Bad SiteIDs.Outputs[OLE DB Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Exceptions\StudentID"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{120E0EED-1E16-49EA-AB46-3B8C5CDDE7E1}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="StudentID"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Exceptions\StudentID\Data Conversion"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Data Conversion"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Exceptions\StudentID\Data Conversion.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Exceptions\StudentID\Data Conversion.Inputs[Data Conversion Input].Columns[Customer]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="Customer"
                          lineageId="Package\Exceptions\StudentID\Set Defaults.Outputs[Derived Column Output].Columns[Customer]" />
                        <inputColumn
                          refId="Package\Exceptions\StudentID\Data Conversion.Inputs[Data Conversion Input].Columns[ExceptionColumn]"
                          cachedDataType="wstr"
                          cachedLength="9"
                          cachedName="ExceptionColumn"
                          lineageId="Package\Exceptions\StudentID\Set Defaults.Outputs[Derived Column Output].Columns[ExceptionColumn]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Exceptions\StudentID\Data Conversion.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Exceptions\StudentID\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Exceptions\StudentID\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Customer]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Exceptions\StudentID\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Customer]"
                          name="DC.Customer"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Exceptions\StudentID\Set Defaults.Outputs[Derived Column Output].Columns[Customer]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Exceptions\StudentID\Data Conversion.Outputs[Data Conversion Output].Columns[DC.ExceptionColumn]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Exceptions\StudentID\Data Conversion.Outputs[Data Conversion Output].Columns[DC.ExceptionColumn]"
                          name="DC.ExceptionColumn"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Exceptions\StudentID\Set Defaults.Outputs[Derived Column Output].Columns[ExceptionColumn]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Exceptions\StudentID\Data Conversion.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Exceptions\StudentID\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Exceptions\StudentID\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Exceptions\StudentID\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Exceptions\StudentID\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Exceptions\StudentID\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Exceptions\StudentID\Insert Exceptions"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="Insert Exceptions"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[Genesys].[StagingCharagesPaymentsExceptions]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">ROWS_PER_BATCH = 100</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Exceptions\StudentID\Insert Exceptions.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Target - IntegrationMiddleWay]"
                      connectionManagerRefId="Package.ConnectionManagers[Target - IntegrationMiddleWay]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Exceptions\StudentID\Insert Exceptions.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Exceptions\StudentID\Insert Exceptions.Inputs[OLE DB Destination Input].Columns[DC.ExceptionColumn]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="DC.ExceptionColumn"
                          externalMetadataColumnId="Package\Exceptions\StudentID\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[ExceptionColumn]"
                          lineageId="Package\Exceptions\StudentID\Data Conversion.Outputs[Data Conversion Output].Columns[DC.ExceptionColumn]" />
                        <inputColumn
                          refId="Package\Exceptions\StudentID\Insert Exceptions.Inputs[OLE DB Destination Input].Columns[ExceptionValue]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="ExceptionValue"
                          externalMetadataColumnId="Package\Exceptions\StudentID\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[ExceptionValue]"
                          lineageId="Package\Exceptions\StudentID\StudentIDs.Outputs[OLE DB Source Output].Columns[ExceptionValue]" />
                        <inputColumn
                          refId="Package\Exceptions\StudentID\Insert Exceptions.Inputs[OLE DB Destination Input].Columns[DC.Customer]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="DC.Customer"
                          externalMetadataColumnId="Package\Exceptions\StudentID\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[CustomerCode]"
                          lineageId="Package\Exceptions\StudentID\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Customer]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Exceptions\StudentID\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[ExceptionColumn]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="ExceptionColumn" />
                        <externalMetadataColumn
                          refId="Package\Exceptions\StudentID\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[ExceptionRefColumn]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="ExceptionRefColumn" />
                        <externalMetadataColumn
                          refId="Package\Exceptions\StudentID\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[ExceptionValue]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="ExceptionValue" />
                        <externalMetadataColumn
                          refId="Package\Exceptions\StudentID\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[ExceptionRefValue]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="ExceptionRefValue" />
                        <externalMetadataColumn
                          refId="Package\Exceptions\StudentID\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[CustomerCode]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="CustomerCode" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Exceptions\StudentID\Insert Exceptions.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Exceptions\StudentID\Insert Exceptions.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Exceptions\StudentID\Insert Exceptions.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Exceptions\StudentID\Insert Exceptions.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Exceptions\StudentID\Insert Exceptions.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Exceptions\StudentID\Insert Exceptions.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Exceptions\StudentID\Lookup StudentID"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Lookup StudentID"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[tblStudents]</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[tblStudents]) [refTable]
where [refTable].[StudentID] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">2</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="StudentID" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="CampusID" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="FirstName" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="MiddleName" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="LastName" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="FullName" dataType="DT_STR" length="150" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Grade" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="HomeRoom" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Address" dataType="DT_STR" length="500" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Address2" dataType="DT_STR" length="500" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="City" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="State" dataType="DT_STR" length="2" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Zip" dataType="DT_STR" length="10" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Phone" dataType="DT_STR" length="15" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Race" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Gender" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Notes" dataType="DT_STR" length="6000" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="ParentEmail" dataType="DT_STR" length="100" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="UserID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ModifiedDate" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Status" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="StudentsUID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="StudentSIFGuid" dataType="DT_GUID" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Archived" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="New" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="NotesIT" dataType="DT_STR" length="6000" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="ActiveIT" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="StudentEmail" dataType="DT_STR" length="100" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Exceptions\StudentID\StudentIDs.Outputs[OLE DB Source Output].Columns[ExceptionValue]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Exceptions\StudentID\Lookup StudentID.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Target - TIPWeb]"
                      connectionManagerRefId="Package.ConnectionManagers[Target - TIPWeb]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Exceptions\StudentID\Lookup StudentID.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Exceptions\StudentID\Lookup StudentID.Inputs[Lookup Input].Columns[ExceptionValue]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="ExceptionValue"
                          lineageId="Package\Exceptions\StudentID\StudentIDs.Outputs[OLE DB Source Output].Columns[ExceptionValue]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">StudentID</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Exceptions\StudentID\Lookup StudentID.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Exceptions\StudentID\Lookup StudentID.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Exceptions\StudentID\Lookup StudentID.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Exceptions\StudentID\Lookup StudentID.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Exceptions\StudentID\Lookup StudentID.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Exceptions\StudentID\Lookup StudentID.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Exceptions\StudentID\Lookup StudentID.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Exceptions\StudentID\Lookup StudentID.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Exceptions\StudentID\Lookup StudentID.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Exceptions\StudentID\Lookup StudentID.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Exceptions\StudentID\Set Defaults"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Set Defaults"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Exceptions\StudentID\Set Defaults.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Exceptions\StudentID\Set Defaults.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Exceptions\StudentID\Set Defaults.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Exceptions\StudentID\Set Defaults.Outputs[Derived Column Output].Columns[Customer]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Exceptions\StudentID\Set Defaults.Outputs[Derived Column Output].Columns[Customer]"
                          name="Customer"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::CustomerCode]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::CustomerCode]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Exceptions\StudentID\Set Defaults.Outputs[Derived Column Output].Columns[ExceptionColumn]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="9"
                          lineageId="Package\Exceptions\StudentID\Set Defaults.Outputs[Derived Column Output].Columns[ExceptionColumn]"
                          name="ExceptionColumn"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"StudentID"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"StudentID"</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Exceptions\StudentID\Set Defaults.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Exceptions\StudentID\Set Defaults.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Exceptions\StudentID\Set Defaults.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Exceptions\StudentID\Set Defaults.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Exceptions\StudentID\Set Defaults.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Exceptions\StudentID\Set Defaults.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Exceptions\StudentID\StudentIDs"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="StudentIDs"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT DISTINCT StudentID AS ExceptionValue
FROM Genesys.StagingCharagesPayments</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Exceptions\StudentID\StudentIDs.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Target - IntegrationMiddleWay]"
                      connectionManagerRefId="Package.ConnectionManagers[Target - IntegrationMiddleWay]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Exceptions\StudentID\StudentIDs.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Exceptions\StudentID\StudentIDs.Outputs[OLE DB Source Output].Columns[ExceptionValue]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Exceptions\StudentID\StudentIDs.Outputs[OLE DB Source Output].ExternalColumns[ExceptionValue]"
                          length="50"
                          lineageId="Package\Exceptions\StudentID\StudentIDs.Outputs[OLE DB Source Output].Columns[ExceptionValue]"
                          name="ExceptionValue"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Exceptions\StudentID\StudentIDs.Outputs[OLE DB Source Output].ExternalColumns[ExceptionValue]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="ExceptionValue" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Exceptions\StudentID\StudentIDs.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Exceptions\StudentID\StudentIDs.Outputs[OLE DB Source Error Output].Columns[ExceptionValue]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Exceptions\StudentID\StudentIDs.Outputs[OLE DB Source Error Output].Columns[ExceptionValue]"
                          name="ExceptionValue" />
                        <outputColumn
                          refId="Package\Exceptions\StudentID\StudentIDs.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Exceptions\StudentID\StudentIDs.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Exceptions\StudentID\StudentIDs.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Exceptions\StudentID\StudentIDs.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Exceptions\StudentID.Paths[Data Conversion Output]"
                  endId="Package\Exceptions\StudentID\Insert Exceptions.Inputs[OLE DB Destination Input]"
                  name="Data Conversion Output"
                  startId="Package\Exceptions\StudentID\Data Conversion.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Exceptions\StudentID.Paths[Derived Column Output]"
                  endId="Package\Exceptions\StudentID\Data Conversion.Inputs[Data Conversion Input]"
                  name="Derived Column Output"
                  startId="Package\Exceptions\StudentID\Set Defaults.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Exceptions\StudentID.Paths[Lookup No Match Output]"
                  endId="Package\Exceptions\StudentID\Set Defaults.Inputs[Derived Column Input]"
                  name="Lookup No Match Output"
                  startId="Package\Exceptions\StudentID\Lookup StudentID.Outputs[Lookup No Match Output]" />
                <path
                  refId="Package\Exceptions\StudentID.Paths[OLE DB Source Output]"
                  endId="Package\Exceptions\StudentID\Lookup StudentID.Inputs[Lookup Input]"
                  name="OLE DB Source Output"
                  startId="Package\Exceptions\StudentID\StudentIDs.Outputs[OLE DB Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Exceptions\TransactionDate"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{9065422B-D43D-4670-9EFD-C7F0A1E4AEB3}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="TransactionDate"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Exceptions\TransactionDate\Bad Transaction Dates"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="Bad Transaction Dates"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT ChargeDate AS ExceptionValue 
FROM Genesys.StagingCharagesPayments
WHERE ISDATE(ChargeDate ) = 0 OR 
CASE WHEN ISDATE(ChargeDate ) = 0 THEN NULL ELSE CAST(ChargeDate  AS DATE) END &lt; '1/1/1960'</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Exceptions\TransactionDate\Bad Transaction Dates.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Target - IntegrationMiddleWay]"
                      connectionManagerRefId="Package.ConnectionManagers[Target - IntegrationMiddleWay]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Exceptions\TransactionDate\Bad Transaction Dates.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Exceptions\TransactionDate\Bad Transaction Dates.Outputs[OLE DB Source Output].Columns[ExceptionValue]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Exceptions\TransactionDate\Bad Transaction Dates.Outputs[OLE DB Source Output].ExternalColumns[ExceptionValue]"
                          length="255"
                          lineageId="Package\Exceptions\TransactionDate\Bad Transaction Dates.Outputs[OLE DB Source Output].Columns[ExceptionValue]"
                          name="ExceptionValue"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Exceptions\TransactionDate\Bad Transaction Dates.Outputs[OLE DB Source Output].ExternalColumns[ExceptionValue]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="ExceptionValue" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Exceptions\TransactionDate\Bad Transaction Dates.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Exceptions\TransactionDate\Bad Transaction Dates.Outputs[OLE DB Source Error Output].Columns[ExceptionValue]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Exceptions\TransactionDate\Bad Transaction Dates.Outputs[OLE DB Source Error Output].Columns[ExceptionValue]"
                          name="ExceptionValue" />
                        <outputColumn
                          refId="Package\Exceptions\TransactionDate\Bad Transaction Dates.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Exceptions\TransactionDate\Bad Transaction Dates.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Exceptions\TransactionDate\Bad Transaction Dates.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Exceptions\TransactionDate\Bad Transaction Dates.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Exceptions\TransactionDate\Data Conversion"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Data Conversion"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Exceptions\TransactionDate\Data Conversion.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Exceptions\TransactionDate\Data Conversion.Inputs[Data Conversion Input].Columns[Customer]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="Customer"
                          lineageId="Package\Exceptions\TransactionDate\Set Defaults.Outputs[Derived Column Output].Columns[Customer]" />
                        <inputColumn
                          refId="Package\Exceptions\TransactionDate\Data Conversion.Inputs[Data Conversion Input].Columns[ExceptionColumn]"
                          cachedDataType="wstr"
                          cachedLength="15"
                          cachedName="ExceptionColumn"
                          lineageId="Package\Exceptions\TransactionDate\Set Defaults.Outputs[Derived Column Output].Columns[ExceptionColumn]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Exceptions\TransactionDate\Data Conversion.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Exceptions\TransactionDate\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Exceptions\TransactionDate\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Customer]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Exceptions\TransactionDate\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Customer]"
                          name="DC.Customer"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Exceptions\TransactionDate\Set Defaults.Outputs[Derived Column Output].Columns[Customer]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Exceptions\TransactionDate\Data Conversion.Outputs[Data Conversion Output].Columns[DC.ExceptionColumn]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Exceptions\TransactionDate\Data Conversion.Outputs[Data Conversion Output].Columns[DC.ExceptionColumn]"
                          name="DC.ExceptionColumn"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Exceptions\TransactionDate\Set Defaults.Outputs[Derived Column Output].Columns[ExceptionColumn]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Exceptions\TransactionDate\Data Conversion.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Exceptions\TransactionDate\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Exceptions\TransactionDate\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Exceptions\TransactionDate\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Exceptions\TransactionDate\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Exceptions\TransactionDate\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Exceptions\TransactionDate\Insert Exceptions"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="Insert Exceptions"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[Genesys].[StagingCharagesPaymentsExceptions]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">ROWS_PER_BATCH = 100</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Exceptions\TransactionDate\Insert Exceptions.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Target - IntegrationMiddleWay]"
                      connectionManagerRefId="Package.ConnectionManagers[Target - IntegrationMiddleWay]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Exceptions\TransactionDate\Insert Exceptions.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Exceptions\TransactionDate\Insert Exceptions.Inputs[OLE DB Destination Input].Columns[DC.Customer]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="DC.Customer"
                          externalMetadataColumnId="Package\Exceptions\TransactionDate\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[CustomerCode]"
                          lineageId="Package\Exceptions\TransactionDate\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Customer]" />
                        <inputColumn
                          refId="Package\Exceptions\TransactionDate\Insert Exceptions.Inputs[OLE DB Destination Input].Columns[DC.ExceptionColumn]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="DC.ExceptionColumn"
                          externalMetadataColumnId="Package\Exceptions\TransactionDate\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[ExceptionColumn]"
                          lineageId="Package\Exceptions\TransactionDate\Data Conversion.Outputs[Data Conversion Output].Columns[DC.ExceptionColumn]" />
                        <inputColumn
                          refId="Package\Exceptions\TransactionDate\Insert Exceptions.Inputs[OLE DB Destination Input].Columns[ExceptionValue]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="ExceptionValue"
                          externalMetadataColumnId="Package\Exceptions\TransactionDate\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[ExceptionValue]"
                          lineageId="Package\Exceptions\TransactionDate\Bad Transaction Dates.Outputs[OLE DB Source Output].Columns[ExceptionValue]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Exceptions\TransactionDate\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[CustomerCode]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="CustomerCode" />
                        <externalMetadataColumn
                          refId="Package\Exceptions\TransactionDate\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[ExceptionColumn]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="ExceptionColumn" />
                        <externalMetadataColumn
                          refId="Package\Exceptions\TransactionDate\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[ExceptionRefColumn]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="ExceptionRefColumn" />
                        <externalMetadataColumn
                          refId="Package\Exceptions\TransactionDate\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[ExceptionValue]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="ExceptionValue" />
                        <externalMetadataColumn
                          refId="Package\Exceptions\TransactionDate\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[ExceptionRefValue]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="ExceptionRefValue" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Exceptions\TransactionDate\Insert Exceptions.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Exceptions\TransactionDate\Insert Exceptions.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Exceptions\TransactionDate\Insert Exceptions.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Exceptions\TransactionDate\Insert Exceptions.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Exceptions\TransactionDate\Insert Exceptions.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Exceptions\TransactionDate\Insert Exceptions.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Exceptions\TransactionDate\Set Defaults"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Set Defaults"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Exceptions\TransactionDate\Set Defaults.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Exceptions\TransactionDate\Set Defaults.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Exceptions\TransactionDate\Set Defaults.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Exceptions\TransactionDate\Set Defaults.Outputs[Derived Column Output].Columns[Customer]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Exceptions\TransactionDate\Set Defaults.Outputs[Derived Column Output].Columns[Customer]"
                          name="Customer"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::CustomerCode]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::CustomerCode]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Exceptions\TransactionDate\Set Defaults.Outputs[Derived Column Output].Columns[ExceptionColumn]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="15"
                          lineageId="Package\Exceptions\TransactionDate\Set Defaults.Outputs[Derived Column Output].Columns[ExceptionColumn]"
                          name="ExceptionColumn"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"TransactionDate"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"TransactionDate"</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Exceptions\TransactionDate\Set Defaults.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Exceptions\TransactionDate\Set Defaults.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Exceptions\TransactionDate\Set Defaults.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Exceptions\TransactionDate\Set Defaults.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Exceptions\TransactionDate\Set Defaults.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Exceptions\TransactionDate\Set Defaults.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Exceptions\TransactionDate.Paths[Data Conversion Output]"
                  endId="Package\Exceptions\TransactionDate\Insert Exceptions.Inputs[OLE DB Destination Input]"
                  name="Data Conversion Output"
                  startId="Package\Exceptions\TransactionDate\Data Conversion.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Exceptions\TransactionDate.Paths[Derived Column Output]"
                  endId="Package\Exceptions\TransactionDate\Data Conversion.Inputs[Data Conversion Input]"
                  name="Derived Column Output"
                  startId="Package\Exceptions\TransactionDate\Set Defaults.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Exceptions\TransactionDate.Paths[OLE DB Source Output]"
                  endId="Package\Exceptions\TransactionDate\Set Defaults.Inputs[Derived Column Input]"
                  name="OLE DB Source Output"
                  startId="Package\Exceptions\TransactionDate\Bad Transaction Dates.Outputs[OLE DB Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Exceptions\TransactionReference"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{5E94F4F8-DE13-410B-BEA2-5645066D86FD}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="TransactionReference"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Exceptions\TransactionReference\Bad TransactionReference"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="Bad TransactionReference"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT DISTINCT ChargeReferenceID AS ExceptionValue
FROM Genesys.StagingCharagesPayments
WHERE ISNUMERIC(ChargeReferenceID ) = 0
OR ISNULL(ChargeReferenceID,'')  = ''</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Exceptions\TransactionReference\Bad TransactionReference.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Target - IntegrationMiddleWay]"
                      connectionManagerRefId="Package.ConnectionManagers[Target - IntegrationMiddleWay]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Exceptions\TransactionReference\Bad TransactionReference.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Exceptions\TransactionReference\Bad TransactionReference.Outputs[OLE DB Source Output].Columns[ExceptionValue]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Exceptions\TransactionReference\Bad TransactionReference.Outputs[OLE DB Source Output].ExternalColumns[ExceptionValue]"
                          length="255"
                          lineageId="Package\Exceptions\TransactionReference\Bad TransactionReference.Outputs[OLE DB Source Output].Columns[ExceptionValue]"
                          name="ExceptionValue"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Exceptions\TransactionReference\Bad TransactionReference.Outputs[OLE DB Source Output].ExternalColumns[ExceptionValue]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="ExceptionValue" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Exceptions\TransactionReference\Bad TransactionReference.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Exceptions\TransactionReference\Bad TransactionReference.Outputs[OLE DB Source Error Output].Columns[ExceptionValue]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Exceptions\TransactionReference\Bad TransactionReference.Outputs[OLE DB Source Error Output].Columns[ExceptionValue]"
                          name="ExceptionValue" />
                        <outputColumn
                          refId="Package\Exceptions\TransactionReference\Bad TransactionReference.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Exceptions\TransactionReference\Bad TransactionReference.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Exceptions\TransactionReference\Bad TransactionReference.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Exceptions\TransactionReference\Bad TransactionReference.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Exceptions\TransactionReference\Data Conversion"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Data Conversion"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Exceptions\TransactionReference\Data Conversion.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Exceptions\TransactionReference\Data Conversion.Inputs[Data Conversion Input].Columns[Customer]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="Customer"
                          lineageId="Package\Exceptions\TransactionReference\Set Defaults.Outputs[Derived Column Output].Columns[Customer]" />
                        <inputColumn
                          refId="Package\Exceptions\TransactionReference\Data Conversion.Inputs[Data Conversion Input].Columns[ExceptionColumn]"
                          cachedDataType="wstr"
                          cachedLength="20"
                          cachedName="ExceptionColumn"
                          lineageId="Package\Exceptions\TransactionReference\Set Defaults.Outputs[Derived Column Output].Columns[ExceptionColumn]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Exceptions\TransactionReference\Data Conversion.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Exceptions\TransactionReference\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Exceptions\TransactionReference\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Customer]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Exceptions\TransactionReference\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Customer]"
                          name="DC.Customer"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Exceptions\TransactionReference\Set Defaults.Outputs[Derived Column Output].Columns[Customer]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Exceptions\TransactionReference\Data Conversion.Outputs[Data Conversion Output].Columns[DC.ExceptionColumn]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Exceptions\TransactionReference\Data Conversion.Outputs[Data Conversion Output].Columns[DC.ExceptionColumn]"
                          name="DC.ExceptionColumn"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Exceptions\TransactionReference\Set Defaults.Outputs[Derived Column Output].Columns[ExceptionColumn]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Exceptions\TransactionReference\Data Conversion.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Exceptions\TransactionReference\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Exceptions\TransactionReference\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Exceptions\TransactionReference\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Exceptions\TransactionReference\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Exceptions\TransactionReference\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Exceptions\TransactionReference\Insert Exceptions"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="Insert Exceptions"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[Genesys].[StagingCharagesPaymentsExceptions]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">ROWS_PER_BATCH = 100</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Exceptions\TransactionReference\Insert Exceptions.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Target - IntegrationMiddleWay]"
                      connectionManagerRefId="Package.ConnectionManagers[Target - IntegrationMiddleWay]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Exceptions\TransactionReference\Insert Exceptions.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Exceptions\TransactionReference\Insert Exceptions.Inputs[OLE DB Destination Input].Columns[DC.Customer]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="DC.Customer"
                          externalMetadataColumnId="Package\Exceptions\TransactionReference\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[CustomerCode]"
                          lineageId="Package\Exceptions\TransactionReference\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Customer]" />
                        <inputColumn
                          refId="Package\Exceptions\TransactionReference\Insert Exceptions.Inputs[OLE DB Destination Input].Columns[DC.ExceptionColumn]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="DC.ExceptionColumn"
                          externalMetadataColumnId="Package\Exceptions\TransactionReference\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[ExceptionColumn]"
                          lineageId="Package\Exceptions\TransactionReference\Data Conversion.Outputs[Data Conversion Output].Columns[DC.ExceptionColumn]" />
                        <inputColumn
                          refId="Package\Exceptions\TransactionReference\Insert Exceptions.Inputs[OLE DB Destination Input].Columns[ExceptionValue]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="ExceptionValue"
                          externalMetadataColumnId="Package\Exceptions\TransactionReference\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[ExceptionValue]"
                          lineageId="Package\Exceptions\TransactionReference\Bad TransactionReference.Outputs[OLE DB Source Output].Columns[ExceptionValue]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Exceptions\TransactionReference\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[CustomerCode]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="CustomerCode" />
                        <externalMetadataColumn
                          refId="Package\Exceptions\TransactionReference\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[ExceptionColumn]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="ExceptionColumn" />
                        <externalMetadataColumn
                          refId="Package\Exceptions\TransactionReference\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[ExceptionRefColumn]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="ExceptionRefColumn" />
                        <externalMetadataColumn
                          refId="Package\Exceptions\TransactionReference\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[ExceptionValue]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="ExceptionValue" />
                        <externalMetadataColumn
                          refId="Package\Exceptions\TransactionReference\Insert Exceptions.Inputs[OLE DB Destination Input].ExternalColumns[ExceptionRefValue]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="ExceptionRefValue" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Exceptions\TransactionReference\Insert Exceptions.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Exceptions\TransactionReference\Insert Exceptions.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Exceptions\TransactionReference\Insert Exceptions.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Exceptions\TransactionReference\Insert Exceptions.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Exceptions\TransactionReference\Insert Exceptions.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Exceptions\TransactionReference\Insert Exceptions.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Exceptions\TransactionReference\Set Defaults"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Set Defaults"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Exceptions\TransactionReference\Set Defaults.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Exceptions\TransactionReference\Set Defaults.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Exceptions\TransactionReference\Set Defaults.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Exceptions\TransactionReference\Set Defaults.Outputs[Derived Column Output].Columns[Customer]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Exceptions\TransactionReference\Set Defaults.Outputs[Derived Column Output].Columns[Customer]"
                          name="Customer"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::CustomerCode]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::CustomerCode]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Exceptions\TransactionReference\Set Defaults.Outputs[Derived Column Output].Columns[ExceptionColumn]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="20"
                          lineageId="Package\Exceptions\TransactionReference\Set Defaults.Outputs[Derived Column Output].Columns[ExceptionColumn]"
                          name="ExceptionColumn"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"TransactionReference"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"TransactionReference"</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Exceptions\TransactionReference\Set Defaults.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Exceptions\TransactionReference\Set Defaults.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Exceptions\TransactionReference\Set Defaults.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Exceptions\TransactionReference\Set Defaults.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Exceptions\TransactionReference\Set Defaults.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Exceptions\TransactionReference\Set Defaults.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Exceptions\TransactionReference.Paths[Data Conversion Output]"
                  endId="Package\Exceptions\TransactionReference\Insert Exceptions.Inputs[OLE DB Destination Input]"
                  name="Data Conversion Output"
                  startId="Package\Exceptions\TransactionReference\Data Conversion.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Exceptions\TransactionReference.Paths[Derived Column Output]"
                  endId="Package\Exceptions\TransactionReference\Data Conversion.Inputs[Data Conversion Input]"
                  name="Derived Column Output"
                  startId="Package\Exceptions\TransactionReference\Set Defaults.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Exceptions\TransactionReference.Paths[OLE DB Source Output]"
                  endId="Package\Exceptions\TransactionReference\Set Defaults.Inputs[Derived Column Input]"
                  name="OLE DB Source Output"
                  startId="Package\Exceptions\TransactionReference\Bad TransactionReference.Outputs[OLE DB Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Exceptions.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{B8159AE5-0E3E-4C11-9D21-AB635612EC8A}"
          DTS:From="Package\Exceptions\StudentID"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Exceptions\Mark Exceptions"
          DTS:Value="2" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Exceptions.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{3607D8D5-88AF-401B-B609-BEB1C6B30C59}"
          DTS:From="Package\Exceptions\TransactionDate"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Exceptions\Mark Exceptions"
          DTS:Value="2" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Exceptions.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{818D45E8-E343-473F-B818-412C2815E3FC}"
          DTS:From="Package\Exceptions\ChargeAmount"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Exceptions\Mark Exceptions"
          DTS:Value="2" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Exceptions.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{D88E30DB-D0C6-4FA9-BF91-353DA779614F}"
          DTS:From="Package\Exceptions\TransactionReference"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\Exceptions\Mark Exceptions"
          DTS:Value="2" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Exceptions.PrecedenceConstraints[Constraint 4]"
          DTS:CreationName=""
          DTS:DTSID="{6A2533F8-DC3A-44FC-9527-ABD29AE8D60A}"
          DTS:From="Package\Exceptions\SiteUIDs"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 4"
          DTS:To="Package\Exceptions\Mark Exceptions"
          DTS:Value="2" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Failure - Dashbaord and Integration Reporting"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{816D80A3-725B-4261-8A5D-25DAD6402AF6}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Failure - Dashbaord and Integration Reporting">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Failure - Dashbaord and Integration Reporting\Archive File"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{6A1D17B3-9954-484B-9F85-5A39C3D5B4AE}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Archive File"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_5458193880e942c989b556e5cb4cdd9a"
              VSTAMajorVersion="15"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::ArchiveFilePath,User::CustomerCode,User::DaysToKeep,User::Debug,User::FilePath,User::Integration,User::IntegrationType,User::ReportsPath,User::RootPath">
              <ProjectItem
                Name="ST_5458193880e942c989b556e5cb4cdd9a.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{4BF8AAE1-8271-4806-833F-A82E91B722BF}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_ca442df88e994ae6b41dcdcf9629823a</RootNamespace>
    <AssemblyName>ST_5458193880e942c989b556e5cb4cdd9a</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
#endregion

namespace ST_ca442df88e994ae6b41dcdcf9629823a
{

	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		public void Main()
		{
            //User::ArchiveFilePath,User::CustomerCode,User::Debug,User::FilePath,User::KeepDays,User::RootPath
            string CustomerCode = Dts.Variables["User::CustomerCode"].Value.ToString();
            string ReportPath = Dts.Variables["User::ReportsPath"].Value.ToString();
            string Integration = Dts.Variables["Integration"].Value.ToString();
            string IntegrationType = Dts.Variables["IntegrationType"].Value.ToString();
            string RootPath = Dts.Variables["User::RootPath"].Value.ToString();
            string FilePath =Dts.Variables["User::FilePath"].Value.ToString();
            string ArchivePath = Dts.Variables["User::ArchiveFilePath"].Value.ToString();
            Int32 FileRetentionDays = Convert.ToInt32(Dts.Variables["User::DaysToKeep"].Value) * -1;

            string ReportFileName = ReportPath + CustomerCode + "_" + Integration + "_" + IntegrationType + "_Report_" + DateTime.Now.ToString("MMddyyyy").ToString() + "_" + DateTime.Now.ToString("MMddyyyy").ToString() + ".xls";
            string FileNameCheck = "";
            string FileToBeMoved = "";
            string FileToExt = "";
            int n;

            //FileToBeMoved = ReportFileName;

            //if (Convert.ToBoolean(Dts.Variables["User::Debug"].Value) == true)
            //{
            //    MessageBox.Show("ReportFileName and Path: " + FileToBeMoved);
            //}

            //if (File.Exists(FileToBeMoved))
            //{
            //    File.Delete(FileToBeMoved);
            //}

            FilePath = RootPath + FilePath;

            if (Convert.ToBoolean(Dts.Variables["User::Debug"].Value) == true)
            {
                MessageBox.Show("FilePath: " + FilePath);
            }

                // Move File(s) to Arhive Folder
                string[] Archivefiles = Directory.GetFiles(FilePath);
            foreach (string file in Archivefiles)
            {
                if (Convert.ToBoolean(Dts.Variables["User::Debug"].Value) == true)
                {
                    MessageBox.Show("*** Sending to Archive Folder ***\r\n\r\n" +
                        "File From: (" + file + ")\r\n\r\n" +
                        "File To: (" + file.Replace(FilePath, FilePath + ArchivePath) + ")\r\n\r\n" +
                      "File Size: (" + file.Length.ToString() + ")\r\n");
                }
                FileNameCheck = file.Replace(FilePath, "");

                if (Convert.ToBoolean(Dts.Variables["User::Debug"].Value) == true)
                {
                    MessageBox.Show("*** FileName Check: " + FileNameCheck.Substring(FileNameCheck.Length - 12, 8));
                }

                //Test if Date is in File Name
                bool isNumeric = int.TryParse(FileNameCheck.Substring(FileNameCheck.Length - 12, 8), out n);

                if (isNumeric == true)
                {
                    FileToBeMoved = file.Replace(FilePath, FilePath + ArchivePath);
                }
                else
                {
                    FileToBeMoved = file.Replace(FilePath, FilePath + ArchivePath);
                    FileToExt = FileToBeMoved.Substring(FileToBeMoved.Length - 4, 4);
                    FileToBeMoved = FileToBeMoved.Replace(FileToExt, "") + "_" + DateTime.Now.ToString("MM") + DateTime.Now.ToString("dd") + DateTime.Now.ToString("yyyy") + FileToExt;

                    if (Convert.ToBoolean(Dts.Variables["User::Debug"].Value) == true)
                    {
                        MessageBox.Show("*** File Does NOT have Date in Name  ***\r\n\r\n" +
                                        "New File Name: (" + FileToBeMoved + ")\r\n");
                    }

                }

                if (File.Exists(FileToBeMoved))
                {
                    File.Delete(FileToBeMoved);
                }

                if (isNumeric == true)
                {
                    File.Move(file, file.Replace(FilePath, FilePath + ArchivePath));
                }
                else
                {
                    File.Move(file, FileToBeMoved);
                }
            }

           
           // Archive folder cleanup of old files 
            string[] Cleanupfiles = Directory.GetFiles(FilePath + ArchivePath);
            foreach (string file in Cleanupfiles)
            {
                FileInfo fi = new FileInfo(file);
                if (File.GetCreationTime(fi.ToString()) < DateTime.Now.AddDays(FileRetentionDays))
                {
                    if (Convert.ToBoolean(Dts.Variables["User::Debug"].Value) == true)
                    {
                        MessageBox.Show("*** Cleaning up Archive Folder ***\r\n" +
                            "Deleting File Name: (" + file + ")\r\n" +
                            "      To Directory: (" + RootPath + CustomerCode + "\\" + FilePath + ArchivePath + ")\r\n");
                    }

                    fi.Delete();
                }
                    
            }

            // Reports folder cleanup of old files
             Cleanupfiles = Directory.GetFiles(FilePath + "Reports");
            foreach (string file in Cleanupfiles)
            {
                FileInfo fi = new FileInfo(file);
                if (File.GetCreationTime(fi.ToString()) < DateTime.Now.AddDays(FileRetentionDays))
                {
                    if (Convert.ToBoolean(Dts.Variables["User::Debug"].Value) == true)
                    {
                        MessageBox.Show("*** Cleaning up Reports Folder ***\r\n" +
                            "Deleting File Name: (" + file + ")\r\n" +
                            "      To Directory: (" + RootPath + CustomerCode + "\\" + FilePath + ArchivePath + ")\r\n");
                    }

                    fi.Delete();
                }

            }

            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_5458193880e942c989b556e5cb4cdd9a</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_5458193880e942c989b556e5cb4cdd9a</msb:DisplayName>
    <msb:ProjectId>{DD6BAD64-80A0-4329-8086-3132F6027ABE}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_5458193880e942c989b556e5cb4cdd9a.csproj" />
    <msb:File Include="ScriptMain.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ca442df88e994ae6b41dcdcf9629823a.Properties.Settings.get_Default():ST_ca442df88e994ae6b41dcdcf9629823a.Properties.Sett" +
    "ings")]

namespace ST_ca442df88e994ae6b41dcdcf9629823a.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_ca442df88e994ae6b41dcdcf9629823a")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_ca442df88e994ae6b41dcdcf9629823a")]
[assembly: AssemblyCopyright("Copyright @  2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ca442df88e994ae6b41dcdcf9629823a.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ca442df88e994ae6b41dcdcf9629823a.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ca442df88e994ae6b41dcdcf9629823a.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_ca442df88e994ae6b41dcdcf9629823a.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_ca442df88e994ae6b41dcdcf9629823a.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_5458193880e942c989b556e5cb4cdd9a.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDABFDhl4AAAAAAAAAAOAAIiALATAAABoAAAAIAAAAAAAAfjkA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAACw5AABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAhBkAAAAgAAAAGgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAcAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABg
OQAAAAAAAEgAAAACAAUAgCYAAPQRAAABAAAAAAAAAHQ4AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwBwC7BQAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAAoKAigQAAAKbxEAAApyJwAAcG8SAAAKbxMAAApvFAAACgsCKBAAAApvEQAACnJLAABw
bxIAAApvEwAACm8UAAAKDAIoEAAACm8RAAAKcmMAAHBvEgAACm8TAAAKbxQAAAoNAigQAAAKbxEA
AApygwAAcG8SAAAKbxMAAApvFAAAChMEAigQAAAKbxEAAApyoQAAcG8SAAAKbxMAAApvFAAAChMF
AigQAAAKbxEAAApyvwAAcG8SAAAKbxMAAApvFAAAChMGAigQAAAKbxEAAApy6wAAcG8SAAAKbxMA
AAooFQAAChVaEwcfC40eAAABJRYHoiUXBqIlGHINAQBwoiUZCKIlGnINAQBwoiUbCaIlHHIRAQBw
oiUdKBYAAAoTDBIMciMBAHAoFwAACm8UAAAKoiUecg0BAHCiJR8JKBYAAAoTDBIMciMBAHAoFwAA
Cm8UAAAKoiUfCnI1AQBwoigYAAAKJnI/AQBwEwhyPwEAcBMJcj8BAHATChEEEQUoGQAAChMFAigQ
AAAKbxEAAApyQQEAcG8SAAAKbxMAAAooGgAACiwSclkBAHARBSgZAAAKKBsAAAomEQUoHAAAChMN
FhMOOBsCAAARDREOmhMPAigQAAAKbxEAAApyQQEAcG8SAAAKbxMAAAooGgAACixeHY0eAAABJRZy
bwEAcKIlFxEPoiUYctMBAHCiJRkRDxEFEQURBigZAAAKbx0AAAqiJRpy8wEAcKIlGxEPbx4AAAoT
ERIRKB8AAAqiJRxyFwIAcKIoGAAACigbAAAKJhEPEQVyPwEAcG8dAAAKEwgCKBAAAApvEQAACnJB
AQBwbxIAAApvEwAACigaAAAKLCJyHwIAcBEIEQhvHgAACh8MWR5vIAAACigZAAAKKBsAAAomEQgR
CG8eAAAKHwxZHm8gAAAKEgsoIQAAChMQERAsGREPEQURBREGKBkAAApvHQAAChMJOMwAAAARDxEF
EQURBigZAAAKbx0AAAoTCREJEQlvHgAAChpZGm8gAAAKEwocjR4AAAElFhEJEQpyPwEAcG8dAAAK
oiUXcg0BAHCiJRgoFgAAChMMEgxySQIAcCgXAAAKoiUZKBYAAAoTDBIMck8CAHAoFwAACqIlGigW
AAAKEwwSDHJVAgBwKBcAAAqiJRsRCqIoGAAAChMJAigQAAAKbxEAAApyQQEAcG8SAAAKbxMAAAoo
GgAACiwXcl8CAHARCXIXAgBwKCIAAAooGwAACiYRCSgjAAAKLAcRCSgkAAAKERAsGxEPEQ8RBREF
EQYoGQAACm8dAAAKKCUAAAorCREPEQkoJQAAChEOF1gTDhEOEQ2OaT/a/f//EQURBigZAAAKKBwA
AAoTDRYTDjisAAAAEQ0RDpoTEhEScyYAAAoTExETbxQAAAooJwAACigWAAAKEwwSDBEHbCgoAAAK
KCkAAAoscgIoEAAACm8RAAAKckEBAHBvEgAACm8TAAAKKBoAAAosSh8JjR4AAAElFnLZAgBwoiUX
ERKiJRhyTQMAcKIlGREEoiUaBqIlG3J/AwBwoiUcEQWiJR0RBqIlHnIXAgBwoigYAAAKKBsAAAom
ERNvKgAAChEOF1gTDhEOEQ2OaT9J////EQVygwMAcCgZAAAKKBwAAAoTDRYTDjisAAAAEQ0RDpoT
FBEUcyYAAAoTFREVbxQAAAooJwAACigWAAAKEwwSDBEHbCgoAAAKKCkAAAoscgIoEAAACm8RAAAK
ckEBAHBvEgAACm8TAAAKKBoAAAosSh8JjR4AAAElFnKTAwBwoiUXERSiJRhyTQMAcKIlGREEoiUa
BqIlG3J/AwBwoiUcEQWiJR0RBqIlHnIXAgBwoigYAAAKKBsAAAomERVvKgAAChEOF1gTDhEOEQ2O
aT9J////AigQAAAKFm8rAAAKKh4CKCwAAAoqHgIoLQAACiqufgEAAAQtHnIHBABw0AMAAAIoLgAA
Cm8vAAAKczAAAAqAAQAABH4BAAAEKhp+AgAABCoeAoACAAAEKhp+AwAABCoeAigxAAAKKi5zCAAA
BoADAAAEKgAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAJAEAAAjfgAA/AQA
AHwGAAAjU3RyaW5ncwAAAAB4CwAAfAQAACNVUwD0DwAAEAAAACNHVUlEAAAABBAAAPABAAAjQmxv
YgAAAAAAAAACAAABVx2iAQkDAAAA+gEzABYAAAEAAAAnAAAABQAAAAYAAAAJAAAAAQAAADEAAAAC
AAAAEAAAAAEAAAACAAAAAwAAAAQAAAABAAAABQAAAAEAAAABAAAAAAD7AwEAAAAAAAYAkQL5BAYA
IAP5BAYA3QHmBA8AbQUAAAYACgKPBAYAdAKPBAYAVQKPBAYABwOPBAYAsQKPBAYAygKPBAYAIQKP
BAYAPAJTAwoA5QKqAwoATAGqAwYA3gAsBAYAoQQSAAYAMwQsBAYAwAHmBAYAFAYsBAYAyQQZBQYA
qgR6BA4AiQHlAw4A8QHlAw4AaAFlBAYApQH5BAoA0wOqAxIArwX3ABIArAD3AAYAQwYsBAYAbwMs
BBYAWAbLBRYAJwbLBQYAcAYSAAYAAwAsBAYA2QASAAYAtgQSAAYAFwEsBAYAtQAsBAYAZwaPBAAA
AAAJAAAAAAABAAEAAQAQAFoEQwA5AAEAAQAAABAAIAV8BU0AAQADAAABEADCBXwFYQADAAcAAwEA
APAFAABFAAQACgARADgE8gARADwB9gARAJwA+gAGBjsA/gBWgOAFAQFWgBwBAQFQIAAAAACGAGAE
BgABABcmAAAAAIYY2QQGAAEAHyYAAAAAgxjZBAYAAQAnJgAAAACTCMUEBQEBAFMmAAAAAJMIJAEK
AQEAWiYAAAAAkwgwAQ8BAQBiJgAAAACWCBsGFQECAGkmAAAAAIYY2QQGAAIAcSYAAAAAkRjfBBoB
AgAAAAEASAMJANkEAQARANkEBgAZANkECgApANkEEAAxANkEEAA5ANkEEABBANkEEABJANkEEABR
ANkEEABZANkEEABhANkEEABpANkEBgCRANkEBgC5ANkEFQDJANkEBgBxAOgFOADRAKsFPQDZACME
QgDhAD4DSACZAG0DTADpAAEAUAB5AEsGVQB5AG0DWgDxAA0GXwDxAA0GZQDpAEQEawD5AFMGcAAJ
AbkFdwDxAJQAfQDxAIADgwARAW0DTADxAHYDhwARAYABjQDxAA0GlAAZAf4FmwAZAZ4BoAAZAU4D
pQCBANkEEAAZAecAqwB5AAUGsQB5AE4EtwAhAZ4BBgDRADQGAQBxANkEBgCZANkEBgApAccAvwAp
AWMGyAChANkEzgDBANkEBgAIABQA6AAIABgA7QApAHMAVQEuAAsALQEuABMANgEuABsAVQEuACMA
XgEuACsAhwEuADMAhwEuADsAhwEuAEMAXgEuAEsAjQEuAFMAhwEuAFsApAFDAGMA7QBJAHMAVQFh
AHsA7QBjAGsA7QAbAAMAAQAEAAMAAADJBB4BAABEASMBAAAfBigBAgAEAAMAAgAFAAUAAQAGAAUA
AgAHAAcABIAAAAEAAADlHOBoAAAAAAAAZwAAAAQAAAAAAAAAAAAAANYAiwAAAAAADgAAAAAAAAAA
AAAA3wCLAwAAAAAEAAAAAAAAAAAAAADWACwEAAAAAA4AAAAAAAAAAAAAAN8AHAAAAAAABAAAAAAA
AAAAAAAA1gDLBQAAAAAAAAAAAQAAACoFAAAFAAIAAAAAVG9JbnQzMgA8TW9kdWxlPgBTeXN0ZW0u
SU8ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AU1RfY2E0NDJkZjg4ZTk5
NGFlNmI0MWRjZGNmOTYyOTgyM2EAU1RfNTQ1ODE5Mzg4MGU5NDJjOTg5YjU1NmU1Y2I0Y2RkOWEA
bXNjb3JsaWIAUmVwbGFjZQBkZWZhdWx0SW5zdGFuY2UAVmFyaWFibGUAUnVudGltZVR5cGVIYW5k
bGUAR2V0VHlwZUZyb21IYW5kbGUARmlsZQBEYXRlVGltZQBHZXRDcmVhdGlvblRpbWUATWljcm9z
b2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1
bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNh
dGlvblNldHRpbmdzQmFzZQBUcnlQYXJzZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBEZWxldGUAQ29t
cGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1
Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0
cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0
ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJp
YnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJp
YnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRB
dHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0
cmlidXRlAGdldF9WYWx1ZQB2YWx1ZQBNb3ZlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVG9T
dHJpbmcAU3Vic3RyaW5nAGdldF9MZW5ndGgATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNr
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9k
ZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUXzU0NTgxOTM4ODBlOTQyYzk4OWI1NTZlNWNiNGNk
ZDlhLmRsbABnZXRfSXRlbQBTeXN0ZW0ARW51bQByZXNvdXJjZU1hbgBUb0Jvb2xlYW4Ab3BfTGVz
c1RoYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlv
bgBTeXN0ZW0uUmVmbGVjdGlvbgBGaWxlSW5mbwBDdWx0dXJlSW5mbwBGaWxlU3lzdGVtSW5mbwBn
ZXRfUmVzb3VyY2VNYW5hZ2VyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVt
LlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUX2NhNDQyZGY4OGU5
OTRhZTZiNDFkY2RjZjk2Mjk4MjNhLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1
Z2dpbmdNb2RlcwBTVF9jYTQ0MmRmODhlOTk0YWU2YjQxZGNkY2Y5NjI5ODIzYS5Qcm9wZXJ0aWVz
AGdldF9WYXJpYWJsZXMAR2V0RmlsZXMAU2V0dGluZ3MAU3lzdGVtLldpbmRvd3MuRm9ybXMAU3Vj
Y2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMARXhpc3RzAEFkZERheXMAQ29uY2F0AE9iamVjdABn
ZXRfRGVmYXVsdABEaWFsb2dSZXN1bHQAc2V0X1Rhc2tSZXN1bHQAQ29udmVydABnZXRfTm93AFNo
b3cATWVzc2FnZUJveABnZXRfQXNzZW1ibHkARGlyZWN0b3J5AAAAACVVAHMAZQByADoAOgBDAHUA
cwB0AG8AbQBlAHIAQwBvAGQAZQAAI1UAcwBlAHIAOgA6AFIAZQBwAG8AcgB0AHMAUABhAHQAaAAA
F0kAbgB0AGUAZwByAGEAdABpAG8AbgAAH0kAbgB0AGUAZwByAGEAdABpAG8AbgBUAHkAcABlAAAd
VQBzAGUAcgA6ADoAUgBvAG8AdABQAGEAdABoAAAdVQBzAGUAcgA6ADoARgBpAGwAZQBQAGEAdABo
AAArVQBzAGUAcgA6ADoAQQByAGMAaABpAHYAZQBGAGkAbABlAFAAYQB0AGgAACFVAHMAZQByADoA
OgBEAGEAeQBzAFQAbwBLAGUAZQBwAAADXwAAEV8AUgBlAHAAbwByAHQAXwAAEU0ATQBkAGQAeQB5
AHkAeQAACS4AeABsAHMAAAEAF1UAcwBlAHIAOgA6AEQAZQBiAHUAZwAAFUYAaQBsAGUAUABhAHQA
aAA6ACAAAGMqACoAKgAgAFMAZQBuAGQAaQBuAGcAIAB0AG8AIABBAHIAYwBoAGkAdgBlACAARgBv
AGwAZABlAHIAIAAqACoAKgANAAoADQAKAEYAaQBsAGUAIABGAHIAbwBtADoAIAAoAAAfKQANAAoA
DQAKAEYAaQBsAGUAIABUAG8AOgAgACgAACMpAA0ACgANAAoARgBpAGwAZQAgAFMAaQB6AGUAOgAg
ACgAAAcpAA0ACgAAKSoAKgAqACAARgBpAGwAZQBOAGEAbQBlACAAQwBoAGUAYwBrADoAIAAABU0A
TQAABWQAZAAACXkAeQB5AHkAAHkqACoAKgAgAEYAaQBsAGUAIABEAG8AZQBzACAATgBPAFQAIABo
AGEAdgBlACAARABhAHQAZQAgAGkAbgAgAE4AYQBtAGUAIAAgACoAKgAqAA0ACgANAAoATgBlAHcA
IABGAGkAbABlACAATgBhAG0AZQA6ACAAKAAAcyoAKgAqACAAQwBsAGUAYQBuAGkAbgBnACAAdQBw
ACAAQQByAGMAaABpAHYAZQAgAEYAbwBsAGQAZQByACAAKgAqACoADQAKAEQAZQBsAGUAdABpAG4A
ZwAgAEYAaQBsAGUAIABOAGEAbQBlADoAIAAoAAAxKQANAAoAIAAgACAAIAAgACAAVABvACAARABp
AHIAZQBjAHQAbwByAHkAOgAgACgAAANcAAAPUgBlAHAAbwByAHQAcwAAcyoAKgAqACAAQwBsAGUA
YQBuAGkAbgBnACAAdQBwACAAUgBlAHAAbwByAHQAcwAgAEYAbwBsAGQAZQByACAAKgAqACoADQAK
AEQAZQBsAGUAdABpAG4AZwAgAEYAaQBsAGUAIABOAGEAbQBlADoAIAAoAABxUwBUAF8AYwBhADQA
NAAyAGQAZgA4ADgAZQA5ADkANABhAGUANgBiADQAMQBkAGMAZABjAGYAOQA2ADIAOQA4ADIAMwBh
AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAAABUT5cpML1eTZWO
MBNlz+wWAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFZHAcWDg4ODg4ODggODg4IET0dDggOAggO
EkEOEkEEIAASaQQgABJtBSABEnEcAyAAHAMgAA4EAAEIHAQAABE9BCABDg4FAAEOHQ4FAAIODg4E
AAECHAYAARGAgQ4FAAEdDg4FIAIODg4DIAAIBSACDggIBgACAg4QCAYAAw4ODg4EAAECDgQAAQEO
BQACAQ4OBQABET0OBSABET0NBwACAhE9ET0IAAESgJURgJkFIAASgJ0HIAIBDhKAnQi3elxWGTTg
iQiJhF3NgIDMkQQAAAAABAEAAAADBhJRAwYSVQMGEhACBggDBhEUBAAAElEEAAASVQUAAQESVQQA
ABIQAwAAAQQIABJRBAgAElUECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRo
cm93cwEIAQACAAAAAAAoAQAjU1RfY2E0NDJkZjg4ZTk5NGFlNmI0MWRjZGNmOTYyOTgyM2EAAAUB
AAAAABYBABFDb3B5cmlnaHQgQCAgMjAxOAAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC41
AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjUAALQAAADOyu++AQAA
AJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249
NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5
I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQA
AABUOQAAAAAAAAAAAABuOQAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYDkAAAAAAAAAAAAAAABf
Q29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAA
AFhAAAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAA
vQTv/gAAAQAAAAEA4GjlHAAAAQDgaOUcPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAAB
AFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAA
AAAAALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAAMAAw
ADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkA
TgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABT
AFQAXwBjAGEANAA0ADIAZABmADgAOABlADkAOQA0AGEAZQA2AGIANAAxAGQAYwBkAGMAZgA5ADYA
MgA5ADgAMgAzAGEAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANwAz
ADkANwAuADIANgA4ADQAOAAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQA
XwA1ADQANQA4ADEAOQAzADgAOAAwAGUAOQA0ADIAYwA5ADgAOQBiADUANQA2AGUANQBjAGIANABj
AGQAZAA5AGEALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMA
bwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADEAOAAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBk
AGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0A
ZQAAAFMAVABfADUANAA1ADgAMQA5ADMAOAA4ADAAZQA5ADQAMgBjADkAOAA5AGIANQA1ADYAZQA1
AGMAYgA0AGMAZABkADkAYQAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAA
AABTAFQAXwBjAGEANAA0ADIAZABmADgAOABlADkAOQA0AGEAZQA2AGIANAAxAGQAYwBkAGMAZgA5
ADYAMgA5ADgAMgAzAGEAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4A
MAAuADcAMwA5ADcALgAyADYAOAA0ADgAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQBy
AHMAaQBvAG4AAAAxAC4AMAAuADcAMwA5ADcALgAyADYAOAA0ADgAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAgDkAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Failure - Dashbaord and Integration Reporting\Create Report - Failure"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{DFADB576-3B9A-4027-BBE1-DD21CCB881EC}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create Report - Failure"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_edb9a9b5e2664cb39ba7567cabe61a41"
              VSTAMajorVersion="15"
              VSTAMinorVersion="0"
              Language="VisualBasic"
              ReadOnlyVariables="User::CustomerCode,User::CustomerFullName,User::Debug,User::FileName,User::FileSize,User::Integration,User::IntegrationType,User::ReportHideExceptionColumnsInventory,User::ReportHideExceptionColumnsPurchaseOrder,User::ReportHideExceptionColumnsStatus,User::ReportsPath,User::RowCount">
              <ProjectItem
                Name="My Project\AssemblyInfo.vb"
                Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("ST_8a64a78dc3a14df19e76c1106e01c2b8")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("ST_8a64a78dc3a14df19e76c1106e01c2b8")> 
<Assembly: AssemblyCopyright("Copyright @  2019")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("ed9e13df-5893-4099-9b0a-40a2bc478d99")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
              <ProjectItem
                Name="My Project\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Settings.Designer.vb"
                Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_edb9a9b5e2664cb39ba7567cabe61a41</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_edb9a9b5e2664cb39ba7567cabe61a41</msb:DisplayName>
    <msb:ProjectId>{B9E095E7-80FC-413C-AD90-36CB9A338860}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_edb9a9b5e2664cb39ba7567cabe61a41.vbproj" />
    <msb:File Include="My Project\Settings.Designer.vb" />
    <msb:File Include="My Project\AssemblyInfo.vb" />
    <msb:File Include="ScriptMain.vb" />
    <msb:File Include="My Project\Resources.resx" />
    <msb:File Include="My Project\Resources.Designer.vb" />
    <msb:File Include="My Project\Settings.settings" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.vb"
                Encoding="UTF8"><![CDATA[#Region "Help:  Introduction to the script task"
'The Script Task allows you to perform virtually any operation that can be accomplished in
'a .Net application within the context of an Integration Services control flow. 

'Expand the other regions which have "Help" prefixes for examples of specific ways to use
'Integration Services features within this script task.
#End Region


#Region "Imports"
Imports System
Imports System.Data
Imports System.Math
Imports Microsoft.SqlServer.Dts.Runtime
#End Region

'ScriptMain is the entry point class of the script.  Do not change the name, attributes,
'or parent of this class.
<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute()> _
<System.CLSCompliantAttribute(False)> _
Partial Public Class ScriptMain
    Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

#Region "Help:  Using Integration Services variables and parameters in a script"
    'To use a variable in this script, first ensure that the variable has been added to 
    'either the list contained in the ReadOnlyVariables property or the list contained in 
    'the ReadWriteVariables property of this script task, according to whether or not your
    'code needs to write to the variable.  To add the variable, save this script, close this instance of
    'Visual Studio, and update the ReadOnlyVariables and 
    'ReadWriteVariables properties in the Script Transformation Editor window.
    'To use a parameter in this script, follow the same steps. Parameters are always read-only.

    'Example of reading from a variable:
    ' startTime = Dts.Variables("System::StartTime").Value

    'Example of writing to a variable:
    ' Dts.Variables("User::myStringVariable").Value = "new value"

    'Example of reading from a package parameter:
    ' batchId = Dts.Variables("$Package::batchId").Value

    'Example of reading from a project parameter:
    ' batchId = Dts.Variables("$Project::batchId").Value

    'Example of reading from a sensitive project parameter:
    ' batchId = Dts.Variables("$Project::batchId").GetSensitiveValue()
#End Region

#Region "Help:  Firing Integration Services events from a script"
    'This script task can fire events for logging purposes.

    'Example of firing an error event:
    ' Dts.Events.FireError(18, "Process Values", "Bad value", "", 0)

    'Example of firing an information event:
    ' Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, fireAgain)

    'Example of firing a warning event:
    ' Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0)
#End Region

#Region "Help:  Using Integration Services connection managers in a script"
    'Some types of connection managers can be used in this script task.  See the topic 
    '"Working with Connection Managers Programatically" for details.

    'Example of using an ADO.Net connection manager:
    ' Dim rawConnection As Object = Dts.Connections("Sales DB").AcquireConnection(Dts.Transaction)
    ' Dim myADONETConnection As SqlConnection = CType(rawConnection, SqlConnection)
    ' <Use the connection in some code here, then release the connection>
    ' Dts.Connections("Sales DB").ReleaseConnection(rawConnection)

    'Example of using a File connection manager
    ' Dim rawConnection As Object = Dts.Connections("Prices.zip").AcquireConnection(Dts.Transaction)
    ' Dim filePath As String = CType(rawConnection, String)
    ' <Use the connection in some code here, then release the connection>
    ' Dts.Connections("Prices.zip").ReleaseConnection(rawConnection)
#End Region

    'This method is called when this script task executes in the control flow.
    'Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
    'To open Help, press F1.

    Public Sub Main()
        Dim ReportPath As String = CType(Dts.Variables("ReportsPath").Value, String)
        Dim HideExceptionColumnsInventory As String = CType(Dts.Variables("ReportHideExceptionColumnsInventory").Value, String)
        Dim HideExceptionColumnsPurchaseOrder As String = CType(Dts.Variables("ReportHideExceptionColumnsPurchaseOrder").Value, String)
        Dim HideExceptionColumnsStatus As String = CType(Dts.Variables("ReportHideExceptionColumnsStatus").Value, String)
        Dim RowCount As String = CType(Dts.Variables("RowCount").Value, String)
        Dim CustomerCode As String = CType(Dts.Variables("CustomerCode").Value, String)
        Dim CustomerFullName As String = CType(Dts.Variables("CustomerFullName").Value, String)
        Dim Integration As String = CType(Dts.Variables("Integration").Value, String)
        Dim IntegrationType As String = CType(Dts.Variables("IntegrationType").Value, String)
        Dim FileNames As String = CType(Dts.Variables("FileName").Value, String)
        Dim FileSize As String = CType(Dts.Variables("FileSize").Value, String)
        Dim ReportDate As String = Today.ToShortDateString.ToString()

        Dim URL As String = "http://hayessqlsvr/ReportServer/Pages/ReportViewer.aspx?%2fDataIntergration%2fIntegrationDefaultReportImport&rs:Command=Render"

        'Parm 1
        URL = URL + "&RowCount=" + RowCount

        'Parm 2 
        URL = URL + "&IntegrationName=" + Integration

        'Parm 3
        URL = URL + "&IntegrationType=" + IntegrationType

        'Parm 4
        URL = URL + "&ReportDate=" + ReportDate

        'Parm 5
        URL = URL + "&FileNames=" + FileNames

        'Parm 6
        URL = URL + "&CustomerFullName=" + CustomerFullName

        'Parm 7
        URL = URL + "&CustomerCode=" + CustomerCode

        'Parm 8
        URL = URL + "&IntegrationStatus=Failure"

        'Parm 9
        URL = URL + "&DisplayExceptionColumnsStatus=" + HideExceptionColumnsStatus

        'Parm 10
        URL = URL + "&DisplayExceptionColumnsInventory=" + HideExceptionColumnsInventory

        'Parm 11
        URL = URL + "&DisplayExceptionColumnsPurchaseOrder=" + HideExceptionColumnsPurchaseOrder

        'Appending Export to Excel and Toolbar
        URL = URL + "&rs:Format=Excel&rc:Toolbar=False"

        'for Testing
        'MessageBox.Show(URL, "URL for Report", MessageBoxButtons.OK)

        Dim httpConn As ConnectionManager = Dts.Connections("ReportServer")
        Dim clientConn As HttpClientConnection = New HttpClientConnection(httpConn.AcquireConnection(Nothing))

        Dim ReportFileName As String = ReportPath + CustomerCode + "_" + Integration + "_" + IntegrationType + "_Report_" + Format(Now, "MMddyyyy") + "_" + Format(Now, "HHmm") + ".xls"

        clientConn.ServerURL = URL

        clientConn.DownloadFile(ReportFileName, True)

        Dts.TaskResult = ScriptResults.Success
    End Sub

#Region "ScriptResults declaration"
    'This enum provides a convenient shorthand within the scope of this class for setting the
    'result of the script.

    'This code was generated automatically.
    Enum ScriptResults
        Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
        Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
    End Enum

#End Region

End Class]]></ProjectItem>
              <ProjectItem
                Name="My Project\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Resources.Designer.vb"
                Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
              <ProjectItem
                Name="ST_edb9a9b5e2664cb39ba7567cabe61a41.vbproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{5F8123A6-B37B-45C0-A49E-367FFC845768}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>My Project</AppDesignerFolder>
    <RootNamespace>ST_8a64a78dc3a14df19e76c1106e01c2b8</RootNamespace>
    <AssemblyName>ST_edb9a9b5e2664cb39ba7567cabe61a41</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ScriptMain.vb">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <BinaryItem
                Name="ST_edb9a9b5e2664cb39ba7567cabe61a41.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDABhDhl4AAAAAAAAAAOAAIiALAVAAACIAAAAIAAAAAAAAqkEA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAFhBAABPAAAAAGAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAsCEAAAAgAAAAIgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAYAAAAAYAAAAkAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAKgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACM
QQAAAAAAAEgAAAACAAUAKCUAAHgbAAABAAAAAAAAAKBAAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBgAAAoqHgIoGQAACiqmcxoAAAqAAQAABHMbAAAKgAIA
AARzHAAACoADAAAEcx0AAAqABAAABCoufgEAAARvHgAACioufgIAAARvHwAACioufgMAAARvIAAA
CioufgQAAARvIQAACioeAigiAAAKKq5+BQAABC0ecgEAAHDQBQAAAigjAAAKbyQAAApzJQAACoAF
AAAEfgUAAAQqGn4GAAAEKh4CgAYAAAQqQnMiAAAKKCYAAAqACAAABCoeAignAAAKKgAAGzABAD8A
AAAAAAAAfgcAAAQtMn4IAAAEKCYAAAooKAAACn4HAAAELRxzDQAABoAHAAAE3hB+CAAABCgmAAAK
KCkAAArcfgcAAAQqAAEQAAACAB0ADCkAEAAAAAAeAigqAAAKKhMwBQD/AgAAAQAAEQIoKwAACm8s
AAAKcjMAAHBvLQAACm8uAAAKKC8AAAoKAigrAAAKbywAAApySwAAcG8tAAAKby4AAAooLwAACgsC
KCsAAApvLAAACnKTAABwby0AAApvLgAACigvAAAKDAIoKwAACm8sAAAKcuMAAHBvLQAACm8uAAAK
KC8AAAoNAigrAAAKbywAAApyJQEAcG8tAAAKby4AAAooLwAAChMEAigrAAAKbywAAApyNwEAcG8t
AAAKby4AAAooLwAAChMFAigrAAAKbywAAApyUQEAcG8tAAAKby4AAAooLwAAChMGAigrAAAKbywA
AApycwEAcG8tAAAKby4AAAooLwAAChMHAigrAAAKbywAAApyiwEAcG8tAAAKby4AAAooLwAAChMI
AigrAAAKbywAAApyqwEAcG8tAAAKby4AAAooLwAAChMJAigrAAAKbywAAApyvQEAcG8tAAAKby4A
AAooLwAACiYoMAAAChMPEg8oMQAACm8yAAAKEwpyzwEAcBMLEQtyzgIAcBEEKDMAAAoTCxELcuQC
AHARBygzAAAKEwsRC3IIAwBwEQgoMwAAChMLEQtyLAMAcBEKKDMAAAoTCxELckYDAHARCSgzAAAK
EwsRC3JeAwBwEQYoMwAAChMLEQtyhAMAcBEFKDMAAAoTCxELcqIDAHAoNAAAChMLEQty2AMAcAko
MwAAChMLEQtyGAQAcAcoMwAAChMLEQtyXgQAcAgoMwAAChMLEQtyrAQAcCg0AAAKEwsCKCsAAApv
NQAACnLwBABwbzYAAAoTDBEMFG83AAAKKCYAAApzOAAAChMNHwuNMgAAASUWBqIlFxEFoiUYcgoF
AHCiJRkRB6IlGnIKBQBwoiUbEQiiJRxyDgUAcKIlHSg5AAAKjCcAAAFyIAUAcCg6AAAKoiUecgoF
AHCiJR8JKDkAAAqMJwAAAXIyBQBwKDoAAAqiJR8KcjwFAHCiKDsAAAoTDhENEQtvPAAAChENEQ4X
bz0AAAoCKCsAAAoWbz4AAAoqNgIDKCYAAAooPwAACioeAihAAAAKKi7QCAAAAigjAAAKKh4CKEEA
AAoqAAAAEzABABQAAAACAAARAowFAAAbLQgoAQAAKworAgIKBioiA/4VBQAAGyoAAAATMAIAKAAA
AAMAABECe0MAAApvRAAACgoGjAgAABstEigCAAArCgJ7QwAACgZvRQAACgYqSgIoIgAACgJzRgAA
Cn1DAAAKKgBCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAA0CAAAI34AAKAIAADI
CQAAI1N0cmluZ3MAAAAAaBIAAEgFAAAjVVMAsBcAABAAAAAjR1VJRAAAAMAXAAC4AwAAI0Jsb2IA
AAAAAAAAAgAAAVcdogkJDwAAAPoBMwAWAAABAAAANQAAAAoAAAAMAAAAGQAAAAQAAABGAAAAAgAA
ADcAAAADAAAABAAAAAgAAAAJAAAACAAAAAEAAAAFAAAAAQAAAAMAAAADAAAAAgAAAAAAfAUBAAAA
AAAGAKkDGQgGAE4EGQgGAIACWgcPAL8IAAAGAMECKQYGAIwDKQYGADUEKQYGAMkDKQYGAOIDKQYG
AAgDKQYGAP0DrQUGAK0C0wcGACkC0wcGAFQDKQYGACMDqAQKAEwC9AYKABQCZgUKAJQCZgUOAOwB
qQcOACoHbQcGADwDWgcOANgC8gcOAPAC4wAGAFMJrQUOABAHqQcOAHED4wAGAJ8BrQUOACUAKgUK
ADcCuQUGANIGOQgGAGIGFAYKAPwB/wUGAGMCWgcSABMEAQUSANABAQUGAN0ErQUWAOIGfAEWAE0G
fAEGAHMBrQUGALQFrQUGADYBrQUGAL8JKQYGABIJGQgGAFIHlwQSAFQFAQUWANIIfAEWAC0BfAEO
APYI8gcOAGcB4wAGANYErQUWAAYJfAEOANwI4wAGADsHrQUAAAAAcwAAAAAAAQABAAAAAADxBYoJ
TQABAAEAAAAAACgHiglRAAEAAgAAARAAWgmKCWEAAQADAAAAAAB7CEoIYQAFAAgAAAEQAOQITwCB
AAcADAABAAAA1gVPAI0ACQAPAAUBAACbBwAAYQAJABEABQEAADQAAABhAAkAGAACAQAAMQkAAKEA
CgAaADEAlwZOATEAbgZWATEAggZeATEAsAZmAREAMwduAREAxAFyAREAbAR2AREATQl6ASEAeAkM
AQYG0gB9AVaAIQmAAVaApAGAAVAgAAAAAAYYRQcGAAEAWCAAAAAABhhFBwYAAQBgIAAAAAARGEsH
hAEBAIogAAAAABMIGweIAQEAliAAAAAAEwjhBY0BAQCiIAAAAAATCAwHkgEBAK4gAAAAABMIiweX
AQEAuiAAAAAAAxhFBwYAAQDCIAAAAAAWCM4GnAEBAO4gAAAAABYIrAGhAQEA9SAAAAAAFgi4AaYB
AQD9IAAAAAARGEsHhAECAA4hAAAAAAYYRQcGAAIAGCEAAAAAFgh0BKwBAgB0IQAAAAAGGEUHBgAC
AHwhAAAAAAYA3AUGAAIAhyQAAAAAxgLvCOQAAgCVJAAAAADGAiEB6QADAJ0kAAAAAIMAnAGxAQMA
qSQAAAAAxgLUBKoAAwC0JAAAAAARAL8AtgEDANQkAAAAAAEAqwC+AQQAuiAAAAAABhhFBwYABQDg
JAAAAAADCAgBSgAFABQlAAAAAAYYRQcGAAUAAAABAJEEAAABAGwGAAABABgBAAABABgBCQBFBwEA
EQBFBwYAGQBFBwoAKQBFBxAAMQBFBxAAOQBFBxAAQQBFBxAASQBFBxAAUQBFBxAAWQBFBxUAYQBF
BxUAaQBFBxAAcQBFBxAAeQBFBxAAgQBFBxoAkQBFByAAqQBFBwYAsQBFBwYAuQBFBwYA0QBFByYA
6QBFBxAACQFFBwYAEQFFBwYAmQBFBwYAoQBFBwYADABFBwYAFABFBwYAHABFBwYAJABFBwYADAAI
AUoAFAAIAUoAHAAIAUoAJAAIAUoAwQBFBwYA2QBIAU8A2QC7CVcA8QBFB10AWQGIBGUAAQFFBwYA
YQEVB2oAYQFkCWoAGQFFBwYAGQEpCYgAaQHOCI4AcQGkBZQAeQF0BJsAgQHUBJ8AiQGxCaQAOQHC
BKoAkQHUBKoAkQE/Ca4AkQE/CbUAaQECCbsAmQGkBcEAKQE7BsgAMQFFB80AiQGCCaQAoQFGCdIA
kQE/CdgAMQF8ABAAMQFaAd4AaQFpCQEAwQDvCOQAwQAhAekAwQDUBKoAqQH5APUANAB4CQwBPAB0
BEoAPAB+BCMBPABFBwYACAAsAEQBCAAwAEkBKQCrAHADLgALAO4BLgATAPcBLgAbABYCLgAjAB8C
LgArAEgCLgAzAEgCLgA7AB8CLgBDAE4CLgBLAEgCLgBTAGUCLgBbAEgCLgBjAGsCLgBrAJUCLgBz
AKICQACLAEkBQACDAOwCQwB7APUCQwCDAOwCSQCrAIEDYwB7APUCYwCDAOwCaQCrAJUDgACLAEkB
gwCTAEkBgwCbAEkBgwB7APUCiQCrAKIDoACLAEkBqQCDABYCwACLAEkByQCDABYC4ACLAEkB4wC7
AEkB4wBTAEgC6QCzAEkBAwGDAOwCAwGjAA4DIwGDAOwCIwFbAEgCIAKDAOwCIAKLAEkBQAKDAOwC
QAKLAEkBYAKDAOwCYAKLAEkBgAKDAOwCgAKLAEkBoAKLAEkBwAKLAEkB4AKLAEkB4AKDAOwCAAOL
AEkBIAOLAEkBIAODAOwCbwDtAAABBAABAAUABQAGAAcACQAIAAAAKgfGAQAA8wXLAQAAEAfQAQAA
nQfVAQAA0gbaAQAAyAHfAQAAkQTkAQAADAHpAQIABAADAAIABQAFAAIABgAHAAIABwAJAAIACQAL
AAIACgANAAEACwANAAIADgAPAAIAGAARAC4ANQA8AEMA8gAFARQBGwEEgAAAAQAAAAAAAAAAAAAA
AAABAAAABAAAAAAAAAAAAAAAKQHaAAAAAAAEAAAAAAAAAAAAAAApAa0FAAAAAAoAAAAAAAAAAAAA
ADIB4wAAAAAADgAAAAAAAAAAAAAAOwHiBAAAAAAOAAAAAAAAAAAAAAA7AYoAAAAAAAAAAAABAAAA
hwgAAAgABAAJAAQACgAHAAAAEAASAKkAAAAQACsAqQAAAAAALQCpAIUA+wCFAB4BAAAAU1RfZWRi
OWE5YjVlMjY2NGNiMzliYTc1NjdjYWJlNjFhNDEAQ29udGV4dFZhbHVlYDEAVGhyZWFkU2FmZU9i
amVjdFByb3ZpZGVyYDEAU1RfOGE2NGE3OGRjM2ExNGRmMTllNzZjMTEwNmUwMWMyYjgAPE1vZHVs
ZT4Ac2V0X1NlcnZlclVSTABNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAVABEaXNwb3Nl
X19JbnN0YW5jZV9fAENyZWF0ZV9fSW5zdGFuY2VfXwB2YWx1ZV9fAG1zY29ybGliAE1pY3Jvc29m
dC5WaXN1YWxCYXNpYwBDcmVhdGVJbnN0YW5jZQBnZXRfR2V0SW5zdGFuY2UAaW5zdGFuY2UAR2V0
SGFzaENvZGUAVmFyaWFibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUARG93
bmxvYWRGaWxlAERhdGVBbmRUaW1lAERhdGVUaW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1
bnRpbWUAR2V0VHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAF9yZXNDdWx0dXJl
AFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvbkJhc2UAQXBwbGljYXRpb25T
ZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAR3VpZEF0dHJpYnV0ZQBIZWxwS2V5d29y
ZEF0dHJpYnV0ZQBHZW5lcmF0ZWRDb2RlQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRy
aWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQ29tVmlz
aWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAFN0YW5kYXJkTW9kdWxlQXR0cmli
dXRlAEhpZGVNb2R1bGVOYW1lQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRh
cmdldEZyYW1ld29ya0F0dHJpYnV0ZQBEZWJ1Z2dlckhpZGRlbkF0dHJpYnV0ZQBBc3NlbWJseUZp
bGVWZXJzaW9uQXR0cmlidXRlAE15R3JvdXBDb2xsZWN0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVz
Y3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJs
eVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQ0xTQ29tcGxpYW50
QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBh
bnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAbV9WYWx1ZQBnZXRfVmFs
dWUAc2V0X1ZhbHVlAEdldE9iamVjdFZhbHVlAFN5c3RlbS5UaHJlYWRpbmcAU3lzdGVtLlJ1bnRp
bWUuVmVyc2lvbmluZwBUb1Nob3J0RGF0ZVN0cmluZwBUb1N0cmluZwBNYXRoAE1pY3Jvc29mdC5T
cWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRU
YXNrAE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5NeVNlcnZpY2VzLkludGVybmFsAFNjcmlwdE9iamVj
dE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF9lZGI5YTliNWUyNjY0Y2IzOWJhNzU2N2Nh
YmU2MWE0MS5kbGwAZ2V0X0l0ZW0AU3lzdGVtAEVudW0AU3lzdGVtLkNvbXBvbmVudE1vZGVsLkRl
c2lnbgBTY3JpcHRNYWluAGdldF9BcHBsaWNhdGlvbgBNeUFwcGxpY2F0aW9uAFN5c3RlbS5Db25m
aWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEFjcXVpcmVD
b25uZWN0aW9uAEh0dHBDbGllbnRDb25uZWN0aW9uAEN1bHR1cmVJbmZvAG1fQXBwT2JqZWN0UHJv
dmlkZXIAbV9Vc2VyT2JqZWN0UHJvdmlkZXIAbV9Db21wdXRlck9iamVjdFByb3ZpZGVyAG1fTXlX
ZWJTZXJ2aWNlc09iamVjdFByb3ZpZGVyAGdldF9SZXNvdXJjZU1hbmFnZXIAQ29ubmVjdGlvbk1h
bmFnZXIAU3lzdGVtLkNvZGVEb20uQ29tcGlsZXIAZ2V0X1VzZXIARW50ZXIAZ2V0X0NvbXB1dGVy
AE15Q29tcHV0ZXIAX3Jlc01ncgBBY3RpdmF0b3IALmN0b3IALmNjdG9yAE1vbml0b3IAU3lzdGVt
LkRpYWdub3N0aWNzAE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5EZXZpY2VzAGdldF9XZWJTZXJ2aWNl
cwBNeVdlYlNlcnZpY2VzAE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5BcHBsaWNhdGlvblNlcnZpY2Vz
AFN5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcwBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuQ29t
cGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNv
dXJjZXMAU1RfOGE2NGE3OGRjM2ExNGRmMTllNzZjMTEwNmUwMWMyYjguTXkuUmVzb3VyY2VzAE15
UmVzb3VyY2VzAFNUXzhhNjRhNzhkYzNhMTRkZjE5ZTc2YzExMDZlMDFjMmI4LlJlc291cmNlcy5y
ZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAZ2V0X1ZhcmlhYmxlcwBTdHJpbmdzAE15U2V0dGluZ3MA
RXF1YWxzAENvbnZlcnNpb25zAGdldF9Db25uZWN0aW9ucwBSdW50aW1lSGVscGVycwBTdWNjZXNz
AGdldF9EdHMAU2NyaXB0UmVzdWx0cwBDb25jYXQARm9ybWF0AG1fU3luY09iamVjdABNeVByb2pl
Y3QARXhpdABzZXRfVGFza1Jlc3VsdABtX0NvbnRleHQAZ2V0X05vdwBTVF84YTY0YTc4ZGMzYTE0
ZGYxOWU3NmMxMTA2ZTAxYzJiOC5NeQBnZXRfVG9kYXkAZ2V0X0Fzc2VtYmx5AAAxTQB5AC4AUgBl
AHMAbwB1AHIAYwBlAHMALgBNAHkAUgBlAHMAbwB1AHIAYwBlAHMAABdSAGUAcABvAHIAdABzAFAA
YQB0AGgAAEdSAGUAcABvAHIAdABIAGkAZABlAEUAeABjAGUAcAB0AGkAbwBuAEMAbwBsAHUAbQBu
AHMASQBuAHYAZQBuAHQAbwByAHkAAE9SAGUAcABvAHIAdABIAGkAZABlAEUAeABjAGUAcAB0AGkA
bwBuAEMAbwBsAHUAbQBuAHMAUAB1AHIAYwBoAGEAcwBlAE8AcgBkAGUAcgAAQVIAZQBwAG8AcgB0
AEgAaQBkAGUARQB4AGMAZQBwAHQAaQBvAG4AQwBvAGwAdQBtAG4AcwBTAHQAYQB0AHUAcwAAEVIA
bwB3AEMAbwB1AG4AdAAAGUMAdQBzAHQAbwBtAGUAcgBDAG8AZABlAAAhQwB1AHMAdABvAG0AZQBy
AEYAdQBsAGwATgBhAG0AZQAAF0kAbgB0AGUAZwByAGEAdABpAG8AbgAAH0kAbgB0AGUAZwByAGEA
dABpAG8AbgBUAHkAcABlAAARRgBpAGwAZQBOAGEAbQBlAAARRgBpAGwAZQBTAGkAegBlAACA/WgA
dAB0AHAAOgAvAC8AaABhAHkAZQBzAHMAcQBsAHMAdgByAC8AUgBlAHAAbwByAHQAUwBlAHIAdgBl
AHIALwBQAGEAZwBlAHMALwBSAGUAcABvAHIAdABWAGkAZQB3AGUAcgAuAGEAcwBwAHgAPwAlADIA
ZgBEAGEAdABhAEkAbgB0AGUAcgBnAHIAYQB0AGkAbwBuACUAMgBmAEkAbgB0AGUAZwByAGEAdABp
AG8AbgBEAGUAZgBhAHUAbAB0AFIAZQBwAG8AcgB0AEkAbQBwAG8AcgB0ACYAcgBzADoAQwBvAG0A
bQBhAG4AZAA9AFIAZQBuAGQAZQByAAAVJgBSAG8AdwBDAG8AdQBuAHQAPQAAIyYASQBuAHQAZQBn
AHIAYQB0AGkAbwBuAE4AYQBtAGUAPQAAIyYASQBuAHQAZQBnAHIAYQB0AGkAbwBuAFQAeQBwAGUA
PQAAGSYAUgBlAHAAbwByAHQARABhAHQAZQA9AAAXJgBGAGkAbABlAE4AYQBtAGUAcwA9AAAlJgBD
AHUAcwB0AG8AbQBlAHIARgB1AGwAbABOAGEAbQBlAD0AAB0mAEMAdQBzAHQAbwBtAGUAcgBDAG8A
ZABlAD0AADUmAEkAbgB0AGUAZwByAGEAdABpAG8AbgBTAHQAYQB0AHUAcwA9AEYAYQBpAGwAdQBy
AGUAAD8mAEQAaQBzAHAAbABhAHkARQB4AGMAZQBwAHQAaQBvAG4AQwBvAGwAdQBtAG4AcwBTAHQA
YQB0AHUAcwA9AABFJgBEAGkAcwBwAGwAYQB5AEUAeABjAGUAcAB0AGkAbwBuAEMAbwBsAHUAbQBu
AHMASQBuAHYAZQBuAHQAbwByAHkAPQAATSYARABpAHMAcABsAGEAeQBFAHgAYwBlAHAAdABpAG8A
bgBDAG8AbAB1AG0AbgBzAFAAdQByAGMAaABhAHMAZQBPAHIAZABlAHIAPQAAQyYAcgBzADoARgBv
AHIAbQBhAHQAPQBFAHgAYwBlAGwAJgByAGMAOgBUAG8AbwBsAGIAYQByAD0ARgBhAGwAcwBlAAAZ
UgBlAHAAbwByAHQAUwBlAHIAdgBlAHIAAANfAAARXwBSAGUAcABvAHIAdABfAAARTQBNAGQAZAB5
AHkAeQB5AAAJSABIAG0AbQAACS4AeABsAHMAAAAAeEF3rahHuka7DljqnVFa0AAEIAEBCAMgAAEF
IAEBEREEIAEBDgQgAQECBSACAQ4OBSABARFFByAEAQ4ODg4GFRIkARIMBhUSJAESCAYVEiQBEmUG
FRIkARIgBCAAEwAHAAESbRGApQUgABKAqQcgAgEOEoCpBAABHBwEAAEBHBgHEA4ODg4ODg4ODg4O
DhKAlRKAmQ4RgJ0FIAASgLUFIAASgLkGIAESgL0cAyAAHAQAAQ4cBQAAEYCdAyAADgYAAw4ODg4F
AAIODg4FIAASgM0GIAESgJUcBCABHBwEIAEBHAUAAg4cDgUAAQ4dDgUgAgEOAgQgAQIcAyAACAQH
AR4AAh4ABRABAB4ABAoBHgAEBwETAAYVEiQBEwAHBhUScQETAAYVEnEBEwACEwAECgETAAUgAQET
AAi3elxWGTTgiQiwP19/EdUKOgiJhF3NgIDMkQQAAAAABAEAAAAHBhUSJAESDAcGFRIkARIIBwYV
EiQBEmUHBhUSJAESIAMGEnkDBhJ9AwYSGAIGHAIGCAMGESgDAAABBAAAEgwEAAASCAQAABJlBAAA
EiAEAAASeQQAABJ9BQABARJ9BAAAEhgEIAASbQcQAQEeAB4ABzABAQEQHgAECAASDAQIABIIBAgA
EmUECAASIAQIABJ5BAgAEn0ECAASGAQoABMACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0
aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF84YTY0YTc4ZGMzYTE0ZGYxOWU3NmMxMTA2ZTAxYzJi
OAAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDE5AAAFAQABAAApAQAkZWQ5ZTEzZGYtNTg5My00
MDk5LTliMGEtNDBhMmJjNDc4ZDk5AAAMAQAHMS4wLjAuMAAASQEAGi5ORVRGcmFtZXdvcmssVmVy
c2lvbj12NC41AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjUIAQAB
AAAAAAAYAQAKTXlUZW1wbGF0ZQgxMS4wLjAuMAAAYQEANFN5c3RlbS5XZWIuU2VydmljZXMuUHJv
dG9jb2xzLlNvYXBIdHRwQ2xpZW50UHJvdG9jb2wSQ3JlYXRlX19JbnN0YW5jZV9fE0Rpc3Bvc2Vf
X0luc3RhbmNlX18AAAAQAQALTXkuQ29tcHV0ZXIAABMBAA5NeS5BcHBsaWNhdGlvbgAADAEAB015
LlVzZXIAABMBAA5NeS5XZWJTZXJ2aWNlcwAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNv
dXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9
bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2Vz
LlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAgEEAAAAAAAAAAAAAmkEA
AAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIxBAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3Jl
ZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAA
AAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAA
AOwDAAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+
AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBh
AHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAA
sARMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAwADAANABi
ADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEA
bQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABf
ADgAYQA2ADQAYQA3ADgAZABjADMAYQAxADQAZABmADEAOQBlADcANgBjADEAMQAwADYAZQAwADEA
YwAyAGIAOAAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAA
AHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8AZQBkAGIAOQBhADkAYgA1AGUA
MgA2ADYANABjAGIAMwA5AGIAYQA3ADUANgA3AGMAYQBiAGUANgAxAGEANAAxAC4AZABsAGwAAABI
ABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAA
IAAgADIAMAAxADkAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAA
AHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAFQAXwBlAGQAYgA5AGEA
OQBiADUAZQAyADYANgA0AGMAYgAzADkAYgBhADcANQA2ADcAYwBhAGIAZQA2ADEAYQA0ADEALgBk
AGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBUAF8AOABhADYANABhADcA
OABkAGMAMwBhADEANABkAGYAMQA5AGUANwA2AGMAMQAxADAANgBlADAAMQBjADIAYgA4AAAANAAI
AAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgACAABAEEA
cwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAACsMQAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Failure - Dashbaord and Integration Reporting\Email Report"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:Disabled="True"
          DTS:DTSID="{2D3660A6-F212-497D-8807-A7918CC03E00}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Email Report"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{1C14C91E-C8CF-4164-8C85-B3A818B6CECD}"
              SQLTask:SqlStatementSource="DECLARE @EmailCC&#x9;&#x9;VARCHAR(200) = ?&#xA;DECLARE @EmailTo&#x9;&#x9;VARCHAR(100) = ?&#xA;DECLARE @FilePath&#x9;&#x9;VARCHAR(200) = ?&#xA;DECLARE @CustomerCode&#x9;VARCHAR(50)  = ?&#xA;DECLARE @IntegrationType VARCHAR(200) = ?&#xA;DECLARE @Integration&#x9;VARCHAR(200) = ?&#xA;DECLARE @EmailSubject&#x9;VARCHAR(200)&#xA;&#xA;DECLARE @Body  VARCHAR(500) = 'Attached is your Hayes Software Systems Report for ' &#xA;DECLARE @FileName VARCHAR(200) &#xA;&#xA;&#xA;SELECT @Body = @Body + CAST(CAST(GETDATE() AS DATE) AS VARCHAR(50)),@FileName= @FilePath + @CustomerCode + '_' + @Integration + '_' + @IntegrationType + '_Report_' +&#xA;replicate('0', 2 - len(DATEPART(mm,GETDATE()))) + cast (DATEPART(mm,GETDATE()) as varchar) +&#xA;replicate('0', 2 - len(DATEPART(DD,GETDATE()))) + cast (DATEPART(DD,GETDATE()) as varchar) +&#xA;replicate('0', 4 - len(DATEPART(YYYY,GETDATE()))) + cast (DATEPART(YYYY,GETDATE()) as varchar) + '_' +&#xA;replicate('0', 2 - len(DATEPART(HH,GETDATE()))) + cast (DATEPART(HH,GETDATE()) as varchar) +&#xA;replicate('0', 2 - len(DATEPART(MI,GETDATE()))) + cast (DATEPART(MI,GETDATE()) as varchar) +&#xA;'.xls',@EmailSubject =  @CustomerCode + ' ' + @Integration + ' ' + @IntegrationType + ' Integration Report'&#xA;&#xA;IF @EmailCC IS NOT NULL&#xA;BEGIN&#xA; EXEC msdb.dbo.sp_send_dbmail @profile_name='TIPWEBIMEmail',&#xA; @recipients=@EmailTo,&#xA; @copy_recipients =@EmailCC,&#xA; @subject= @EmailSubject,&#xA; @file_attachments=@FileName,&#xA; @body=@Body&#xA;END &#xA;ELSE&#xA;BEGIN&#xA; EXEC msdb.dbo.sp_send_dbmail @profile_name='TIPWEBIMEmail',&#xA; @recipients=@EmailTo,&#xA; @copy_recipients =@EmailTo,&#xA; @subject=@EmailSubject,&#xA; @file_attachments=@FileName,&#xA; @body=@Body&#xA;END&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::EMailCC"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::EmailTo"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::ReportsPath"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="User::CustomerCode"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="User::IntegrationType"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="5"
                SQLTask:DtsVariableName="User::Integration"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Failure - Dashbaord and Integration Reporting\Insert File Details in Dashboard"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{10F1F60A-CB01-4DBA-933F-952C1C22C6B7}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Insert File Details in Dashboard"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{3F5E885E-905E-466B-84BA-DF3DFCEE43D0}"
              SQLTask:SqlStatementSource="&#xA;DECLARE @CustomerName   VARCHAR(100) = ?&#xA;DECLARE @JobName    VARCHAR(100) = ?&#xA;DECLARE @IntergrationType  VARCHAR(100) = ?&#xA;DECLARE @FileSize    INT = ?&#xA;DECLARE @RootPath    VARCHAR(200) = ?&#xA;DECLARE @ExportPath    VARCHAR(100) = ?&#xA;DECLARE @ArchivePath   VARCHAR(100) = ?&#xA;DECLARE @FileName    VARCHAR(100) = ?&#xA;DECLARE @TaskFailure   BIT = ?&#xA;DECLARE @JobID     INT &#xA;DECLARE @TaskErrorMessage  VARCHAR(MAX) = 'Error In Creating File'&#xA;DECLARE @TaskName    VARCHAR(100) = 'Export'&#xA;&#xA;SELECT @JobID=id FROM FileExist WHERE Job_Name=@JobName AND client=@CustomerName AND category=@IntergrationType&#xA;&#xA;IF (@JobID IS NULL)&#xA;BEGIN&#xA;&#xA;  IF @TaskFailure=0&#xA;  BEGIN&#xA;   INSERT INTO TaskOnError&#xA;   (Client,JobName,Error_ID,StartTime,EndTime,Message,TaskName,LastModifiedDate,Category)&#xA;   VALUES&#xA;   (@CustomerName,@JobName,1,GETDATE(),GETDATE(),@TaskErrorMessage,@TaskName,GETDATE(),@IntergrationType)&#xA;  END &#xA;&#xA; INSERT INTO FileExist&#xA; (Client,Job_Name,FileCheck,FileName,FileSize,File_Rcvd_Date,Check_Time,Category)&#xA; VALUES&#xA; (@CustomerName,@JobName,CASE WHEN @TaskFailure = 1 THEN 0 ELSE 1 END,&#xA; ISNULL(@RootPath + @ExportPath + @ArchivePath + @FileName,'No File Was Created'),&#xA; ISNULL(@FileSize,0),GETDATE(),GETDATE(),@IntergrationType)&#xA;&#xA;END&#xA;ELSE&#xA;BEGIN&#xA;&#xA;  IF @TaskFailure=0&#xA;  BEGIN&#xA;   INSERT INTO TaskOnError&#xA;   (Client,JobName,Error_ID,StartTime,EndTime,Message,TaskName,LastModifiedDate,Category)&#xA;   VALUES&#xA;   (@CustomerName,@JobName,1,GETDATE(),GETDATE(),@TaskErrorMessage,@TaskName,GETDATE(),@IntergrationType)&#xA;  END &#xA;&#xA;  UPDATE FileExist&#xA;  SET filesize = @FileSize,&#xA;      filename = ISNULL(@RootPath + @ExportPath + @ArchivePath + @FileName,'No File Was Created'),&#xA;   file_rcvd_date = GETDATE(),&#xA;   check_time = GETDATE(),&#xA;   filecheck = CASE WHEN @TaskFailure = 1 THEN 0 ELSE 1 END&#xA;  WHERE id = @JobID&#xA;&#xA;END" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::CustomerCode"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::JobName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::IntegrationDataType"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="User::FileSize"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="131"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="User::RootPath"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="5"
                SQLTask:DtsVariableName="User::FilePath"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="6"
                SQLTask:DtsVariableName="User::ArchiveFilePath"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="7"
                SQLTask:DtsVariableName="User::FileName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="8"
                SQLTask:DtsVariableName="User::Success"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="17"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Failure - Dashbaord and Integration Reporting.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{AA21F355-1104-4BE5-B6E3-5DC148EADDE0}"
          DTS:From="Package\Failure - Dashbaord and Integration Reporting\Create Report - Failure"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Failure - Dashbaord and Integration Reporting\Insert File Details in Dashboard" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Failure - Dashbaord and Integration Reporting.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{30A57E52-9B84-40BD-9B90-B9FE80F9FD3E}"
          DTS:EvalOp="3"
          DTS:Expression="@EmailSend == True"
          DTS:From="Package\Failure - Dashbaord and Integration Reporting\Archive File"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Failure - Dashbaord and Integration Reporting\Email Report" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Failure - Dashbaord and Integration Reporting.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{BFCB80E9-798F-4A8B-A186-91C787568817}"
          DTS:From="Package\Failure - Dashbaord and Integration Reporting\Insert File Details in Dashboard"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Failure - Dashbaord and Integration Reporting\Archive File" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\General Data Cleanup"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{F8799710-F2C7-45BA-91D9-6522FF208830}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="General Data Cleanup">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\General Data Cleanup\R and L Trim"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{3B24A321-6CB3-4DE5-AD32-85395E99E4DF}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="R and L Trim"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{76645D34-473D-4E9D-8DC9-2FDA13261849}"
              SQLTask:SqlStatementSource="UPDATE Genesys.StagingCharagesPayments&#xA;SET StudentID=RTRIM(LTRIM(StudentID))&#xA;,SchoolID=RTRIM(LTRIM(SchoolID))&#xA;,ItemCode=RTRIM(LTRIM(ItemCode))&#xA;,ItemDescription=RTRIM(LTRIM(ItemDescription))&#xA;,ChargeReferenceID=RTRIM(LTRIM(ChargeReferenceID))&#xA;,ChargeType=RTRIM(LTRIM(ChargeType))&#xA;,ChargeDate=RTRIM(LTRIM(ChargeDate))&#xA;,ChargeAmount=RTRIM(LTRIM(ChargeAmount))&#xA;,ChargeStatus=RTRIM(LTRIM(ChargeStatus))&#xA;,PaymentDate=RTRIM(LTRIM(PaymentDate))&#xA;,PaymentAmount=RTRIM(LTRIM(PaymentAmount))&#xA;,PaymentMethod=RTRIM(LTRIM(PaymentMethod))&#xA;,Comment=RTRIM(LTRIM(Comment))&#xA;,Voided=RTRIM(LTRIM(Voided))&#xA;,Waived=RTRIM(LTRIM(Waived))" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Get File Information"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{834639F3-7D06-4242-B297-CD74233733C9}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get File Information">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Get File Information\Get File Name"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{B6374E8B-86BB-4D8F-9524-9C41B11B6C54}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Get File Name"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_72ae857c5ac041bd913d8d044da544ab"
              VSTAMajorVersion="15"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::CustomerCode,User::Debug,User::FileExtension,User::Integration,User::IntegrationType"
              ReadWriteVariables="User::ArchiveFilePath,User::ExcelFullFilePathName,User::FileName,User::FilePath,User::FileSize,User::JobName,User::RootPath,User::Success">
              <ProjectItem
                Name="ST_72ae857c5ac041bd913d8d044da544ab.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{B6931281-CA95-422F-820D-4B6FA13F6D77}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_618e2f78b43a4604afe30f3f311921cd</RootNamespace>
    <AssemblyName>ST_72ae857c5ac041bd913d8d044da544ab</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.IO;
using System.Linq;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_618e2f78b43a4604afe30f3f311921cd
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
        {
            bool Debug = Convert.ToBoolean(Dts.Variables["Debug"].Value);
            string CustomerCode = Dts.Variables["CustomerCode"].Value.ToString();
            string FilePath = Dts.Variables["FilePath"].Value.ToString();
            string FileExtension = Dts.Variables["FileExtension"].Value.ToString();
            string RootPath = Dts.Variables["RootPath"].Value.ToString();
            string ArchivePath = Dts.Variables["ArchiveFilePath"].Value.ToString();
            string Integration = Dts.Variables["Integration"].Value.ToString();
            string IntegrationType = Dts.Variables["IntegrationType"].Value.ToString();
            string JobName = Dts.Variables["JobName"].Value.ToString();
            string FileName = "";
            string TargetFilePath = "";
            string ToGetFileSize = "";

            // Setting Job Name 
            Dts.Variables["JobName"].Value = JobName.Replace("Integration", Integration).Replace("IntegerationType", IntegrationType).Replace("CustomerCode", CustomerCode);

            // Check to make sure "\" is at the end of Root path
            if (RootPath.Substring(RootPath.Length - 1, 1) != "\\")
            {
                RootPath = RootPath + "\\";
                Dts.Variables["RootPath"].Value = RootPath;
            }

            if (Convert.ToBoolean(Dts.Variables["User::Debug"].Value) == true)
            {
                MessageBox.Show("RootPath: (" + RootPath + ")");
            }

            // Check to make sure "\" is at the end of File path
            if (FilePath.Substring(FilePath.Length - 1, 1) != "\\")
            {
                FilePath = FilePath + "\\";
                Dts.Variables["FilePath"].Value = FilePath;
            }

            if (Convert.ToBoolean(Dts.Variables["User::Debug"].Value) == true)
            {
                MessageBox.Show("FilePath: (" + FilePath + ")");
            }

            // Check to make sure "\" is at the end of Archive path
            if (ArchivePath.Substring(ArchivePath.Length - 1, 1) != "\\")
            {
                ArchivePath = ArchivePath + "\\";
                Dts.Variables["ArchiveFilePath"].Value = ArchivePath;
            }

            if (Convert.ToBoolean(Dts.Variables["User::Debug"].Value) == true)
            {
                MessageBox.Show("ArchiveFilePath: (" + ArchivePath + ")");
            }


            // Does Archive path exists?
            bool DirectoryExists = Directory.Exists(RootPath + FilePath + ArchivePath);

            // Create Directory if it does not exists
            if (!DirectoryExists)
            {
                Directory.CreateDirectory(RootPath + FilePath + ArchivePath);
            }


            if (Debug == true)
            {
                MessageBox.Show("File Path: " + RootPath + FilePath);
            }

            TargetFilePath = RootPath + FilePath;

             FileName = Directory.GetFiles(TargetFilePath, "*." + FileExtension)
                            .Where(f => f.Length > 0)
                            .OrderByDescending(f => new FileInfo(f).CreationTime)
                            .LastOrDefault();

            if (Debug == true)
            {
                MessageBox.Show("Setting File Parms");
            }

            if (FileName == null)
            {
                FileName = "NoFileExist";
                Dts.Variables["Success"].Value = false;
            }
            else
            {
                FileName = FileName.Replace(TargetFilePath, "");
                Dts.Variables["Success"].Value = true;
            }

            Dts.Variables["FileName"].Value = FileName;
            ToGetFileSize = TargetFilePath + FileName;
            Dts.Variables["ExcelFullFilePathName"].Value = RootPath + FilePath + FileName;


            if (Convert.ToBoolean(Dts.Variables["User::Debug"].Value) == true)
            {
                MessageBox.Show("File Name " + FileName);
                //MessageBox.Show("About to get file size for " + ToGetFileSize);
            }

            if (FileName != "NoFileExist")
            {
                Dts.Variables["User::FileSize"].Value = new FileInfo(ToGetFileSize).Length.ToString();
            }
            else
            {
                Dts.Variables["User::FileSize"].Value = "0";
            }

            if (Convert.ToBoolean(Dts.Variables["User::Debug"].Value) == true)
            {
                MessageBox.Show("FileSize Varable: " + Dts.Variables["User::FileSize"].Value.ToString());
            }

            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_72ae857c5ac041bd913d8d044da544ab</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_72ae857c5ac041bd913d8d044da544ab</msb:DisplayName>
    <msb:ProjectId>{EA07C413-B2ED-4A91-924E-9D786D2B0E55}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_72ae857c5ac041bd913d8d044da544ab.csproj" />
    <msb:File Include="ScriptMain.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_618e2f78b43a4604afe30f3f311921cd.Properties.Settings.get_Default():ST_618e2f78b43a4604afe30f3f311921cd.Properties.Sett" +
    "ings")]

namespace ST_618e2f78b43a4604afe30f3f311921cd.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_618e2f78b43a4604afe30f3f311921cd")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_618e2f78b43a4604afe30f3f311921cd")]
[assembly: AssemblyCopyright("Copyright @  2019")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_618e2f78b43a4604afe30f3f311921cd.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_618e2f78b43a4604afe30f3f311921cd.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_618e2f78b43a4604afe30f3f311921cd.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_618e2f78b43a4604afe30f3f311921cd.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_618e2f78b43a4604afe30f3f311921cd.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_72ae857c5ac041bd913d8d044da544ab.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDACBDhl4AAAAAAAAAAOAAIiALATAAABoAAAAIAAAAAAAAMjkA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAOA4AABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAOBkAAAAgAAAAGgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAcAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAU
OQAAAAAAAEgAAAACAAUAECYAABgSAAABAAAAAAAAACg4AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwBQAoBQAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKKBQAAAoCKBAAAApvEQAACnINAABwbxIAAApvEwAACm8VAAAKCgIoEAAACm8RAAAKcicAAHBv
EgAACm8TAAAKbxUAAAoLAigQAAAKbxEAAApyOQAAcG8SAAAKbxMAAApvFQAACgwCKBAAAApvEQAA
CnJVAABwbxIAAApvEwAACm8VAAAKDQIoEAAACm8RAAAKcmcAAHBvEgAACm8TAAAKbxUAAAoTBAIo
EAAACm8RAAAKcocAAHBvEgAACm8TAAAKbxUAAAoTBQIoEAAACm8RAAAKcp8AAHBvEgAACm8TAAAK
bxUAAAoTBgIoEAAACm8RAAAKcr8AAHBvEgAACm8TAAAKbxUAAAoTB3LPAABwEwhyzwAAcBMJcs8A
AHATCgIoEAAACm8RAAAKcr8AAHBvEgAAChEHcocAAHARBW8WAAAKctEAAHARBm8WAAAKcg0AAHAG
bxYAAApvFwAACgkJbxgAAAoXWRdvGQAACnLzAABwKBoAAAosJwly8wAAcCgbAAAKDQIoEAAACm8R
AAAKclUAAHBvEgAACglvFwAACgIoEAAACm8RAAAKcvcAAHBvEgAACm8TAAAKKBQAAAosFnIPAQBw
CXInAQBwKBwAAAooHQAACiYHB28YAAAKF1kXbxkAAApy8wAAcCgaAAAKLCcHcvMAAHAoGwAACgsC
KBAAAApvEQAACnInAABwbxIAAAoHbxcAAAoCKBAAAApvEQAACnL3AABwbxIAAApvEwAACigUAAAK
LBZyKwEAcAdyJwEAcCgcAAAKKB0AAAomEQQRBG8YAAAKF1kXbxkAAApy8wAAcCgaAAAKLCoRBHLz
AABwKBsAAAoTBAIoEAAACm8RAAAKcmcAAHBvEgAAChEEbxcAAAoCKBAAAApvEQAACnL3AABwbxIA
AApvEwAACigUAAAKLBdyQwEAcBEEcicBAHAoHAAACigdAAAKJgkHEQQoHAAACigeAAAKLQ8JBxEE
KBwAAAooHwAACiYlLBJyaQEAcAkHKBwAAAooHQAACiYJBygbAAAKEwkRCXKBAQBwCCgbAAAKKCAA
AAp+CAAABCUtFyZ+BwAABP4GDAAABnMhAAAKJYAIAAAEKAEAACt+CQAABCUtFyZ+BwAABP4GDQAA
BnMjAAAKJYAJAAAEKAIAACsoAwAAKxMILAtyhwEAcCgdAAAKJhEILSlyrQEAcBMIAigQAAAKbxEA
AApyxQEAcG8SAAAKFowmAAABbxcAAAorMBEIEQlyzwAAcG8WAAAKEwgCKBAAAApvEQAACnLFAQBw
bxIAAAoXjCYAAAFvFwAACgIoEAAACm8RAAAKctUBAHBvEgAAChEIbxcAAAoRCREIKBsAAAoTCgIo
EAAACm8RAAAKcucBAHBvEgAACgkHEQgoHAAACm8XAAAKAigQAAAKbxEAAApy9wAAcG8SAAAKbxMA
AAooFAAACiwSchMCAHARCCgbAAAKKB0AAAomEQhyrQEAcCgaAAAKLDECKBAAAApvEQAACnIpAgBw
bxIAAAoRCnMmAAAKKCcAAAoTCxILKCgAAApvFwAACisfAigQAAAKbxEAAApyKQIAcG8SAAAKckcC
AHBvFwAACgIoEAAACm8RAAAKcvcAAHBvEgAACm8TAAAKKBQAAAosL3JLAgBwAigQAAAKbxEAAApy
KQIAcG8SAAAKbxMAAApvFQAACigbAAAKKB0AAAomAigQAAAKFm8pAAAKKh4CKCoAAAoqHgIoKwAA
CiqufgEAAAQtHnJxAgBw0AMAAAIoLAAACm8tAAAKcy4AAAqAAQAABH4BAAAEKhp+AgAABCoeAoAC
AAAEKhp+AwAABCoeAigvAAAKKi5zCAAABoADAAAEKi5zCwAABoAHAAAEKioDbxgAAAoW/gIqMgNz
JgAACigwAAAKKgAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAARAUAACN+AACw
BQAANAcAACNTdHJpbmdzAAAAAOQMAADkAgAAI1VTAMgPAAAQAAAAI0dVSUQAAADYDwAAQAIAACNC
bG9iAAAAAAAAAAIAAAFXHaIJCQsAAAD6ATMAFgAAAQAAACwAAAAGAAAACQAAAA0AAAADAAAAMAAA
AAIAAAARAAAAAQAAAAIAAAADAAAABAAAAAIAAAABAAAABgAAAAEAAAACAAAAAwAAAAAAlAQBAAAA
AAAGABEDoAUGAKADoAUGAF0CjQUPABQGAAAGAIoCHAUGAPQCHAUGANUCHAUGAIcDHAUGADEDHAUG
AEoDHAUGAKECHAUGALwC7AMKAGUDQwQKANwBQwQGAMwExQQGACUCoAUGALMGxQQGAFAAxQQGAFsB
xQQGAEACjQUGAHAFwAUGADcFBwUOABACfgQOAHECfgQOAPgB8gQKAGwEQwQSAFYGdQESACMBdQEG
APAGxQQGAAgExQQWAP0GcgYWANQGcgYGABsHagAGAFIFagAaACwBYAUGAC0AzAAaADsAYAUGAN8E
xQQGAC4FagAGAFcAxQQGAJUBxQQGADcBxQQGAAwHHAUGAEMFagAAAAAAYQAAAAAAAQABAAEAEADn
BOcAOQABAAEAAAAQAMcFIwZFAAEAAwAAARAAaQYjBmUAAwAHAAMBAACXBgAAPQAEAAoAAyEQAMgA
AABFAAcACgARANEEJAERAMwBKAERABMBLAEGBpMAMAFWgIcGMwFWgKwBMwE2AF0ANwEWAAEAOwEW
ABcAQwFQIAAAAACGAO0EBgABAIQlAAAAAIYYgAUGAAEAjCUAAAAAgxiABQYAAQCUJQAAAACTCGwF
TAEBAMAlAAAAAJMItAFRAQEAxyUAAAAAkwjAAVYBAQDPJQAAAACWCLoGXAECANYlAAAAAIYYgAUG
AAIA3iUAAAAAkRiGBWEBAgDqJQAAAACRGIYFYQECAIwlAAAAAIYYgAUGAAIA9iUAAAAAgwAKAGUB
AgABJgAAAACDACAAagEDAAAAAQDSAwAAAQDYAwAAAQDYAwkAgAUBABEAgAUGABkAgAUKACkAgAUQ
ADEAgAUQADkAgAUQAEEAgAUQAEkAgAUQAFEAgAUQAFkAgAUQAGEAgAUQAGkAgAUGAIEAgAUGAKEA
gAUGAMEAgAUVAHEAjwYqANEAUgYvANkAvAQ0AOEAvgM6AOkA3QQ+AIkABgRDAPEACwFHAOEAyANN
APEAGQRSAPEADwRWAPEAJQdcAPEArAZiAPEArAZoAPkA+AZvAAkBpQZ2AAkBFQd7AAkBYAaCAAwA
gAWQABkBmgGWABQAgAWQABkB2gO7ABkBxgbbADkBgAUQADkBGQToAEEBBgRDANEA4QYBAHEAgAUG
AIkAgAUGAEkBSQHsAEkBCAf1AKkAgAX7AMkAgAUGAGEBZAEDAQgAFAAaAQgAGAAfASkAewCnAS4A
CwB/AS4AEwCIAS4AGwCnAS4AIwCwAS4AKwDZAS4AMwDZAS4AOwDZAS4AQwCwAS4ASwDfAS4AUwDZ
AS4AWwD2AUMAYwAfAUkAewCnAWEAawAfAWMAcwAfAcMAawAfARsAAwABAAQAAwAAAHAFcAEAANQB
dQEAAMwGegECAAQAAwACAAUABQABAAYABQACAAcABwCJALMABIAAAAEAAADlHOhoAAAAAAAAmwAA
AAQAAAAAAAAAAAAAAAgBvwAAAAAADgAAAAAAAAAAAAAAEQEkBAAAAAAEAAAAAAAAAAAAAAAIAcUE
AAAAAA4AAAAAAAAAAAAAABEBdAAAAAAABAAAAAAAAAAAAAAACAFyBgAAAAAEAAAAAAAAAAAAAAAI
AaABAAAAAAAAAAABAAAA0QUAAAUAAgAGAAIARQCvAEkA1QBLAK8AAAAAAAA8PjlfXzBfMAA8TWFp
bj5iX18wXzAAPD45X18wXzEAPE1haW4+Yl9fMF8xAElFbnVtZXJhYmxlYDEASU9yZGVyZWRFbnVt
ZXJhYmxlYDEARnVuY2AyAEludDY0ADw+OQA8TW9kdWxlPgBTeXN0ZW0uSU8ATWljcm9zb2Z0LlNx
bFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AU1RfNzJhZTg1N2M1YWMwNDFiZDkxM2Q4ZDA0NGRh
NTQ0YWIAbXNjb3JsaWIAPD5jAFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljAFNUXzYxOGUyZjc4
YjQzYTQ2MDRhZmUzMGYzZjMxMTkyMWNkAFJlcGxhY2UAZGVmYXVsdEluc3RhbmNlAFZhcmlhYmxl
AEVudW1lcmFibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUARGF0ZVRpbWUA
Z2V0X0NyZWF0aW9uVGltZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFR5cGUAV2hl
cmUAU3lzdGVtLkNvcmUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1
bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNl
AEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2Vy
Tm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVB
dHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0
ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRl
AEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJp
YnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUA
U1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0
ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRfVmFsdWUAc2V0X1ZhbHVlAHZhbHVl
AGYAT3JkZXJCeURlc2NlbmRpbmcAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBT
dWJzdHJpbmcAZ2V0X0xlbmd0aABNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9z
b2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBTY3JpcHRPYmplY3RNb2RlbABTeXN0
ZW0uQ29tcG9uZW50TW9kZWwAU1RfNzJhZTg1N2M1YWMwNDFiZDkxM2Q4ZDA0NGRhNTQ0YWIuZGxs
AGdldF9JdGVtAFN5c3RlbQBFbnVtAHJlc291cmNlTWFuAFRvQm9vbGVhbgBTY3JpcHRNYWluAFN5
c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9u
AEZpbGVJbmZvAEN1bHR1cmVJbmZvAEZpbGVTeXN0ZW1JbmZvAERpcmVjdG9yeUluZm8AU3lzdGVt
LkxpbnEAZ2V0X1Jlc291cmNlTWFuYWdlcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNz
AFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF82MThl
MmY3OGI0M2E0NjA0YWZlMzBmM2YzMTE5MjFjZC5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJj
ZXMARGVidWdnaW5nTW9kZXMAU1RfNjE4ZTJmNzhiNDNhNDYwNGFmZTMwZjNmMzExOTIxY2QuUHJv
cGVydGllcwBnZXRfVmFyaWFibGVzAEdldEZpbGVzAFNldHRpbmdzAFN5c3RlbS5XaW5kb3dzLkZv
cm1zAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAEV4aXN0cwBDb25jYXQAT2JqZWN0AGdl
dF9EZWZhdWx0AExhc3RPckRlZmF1bHQARGlhbG9nUmVzdWx0AHNldF9UYXNrUmVzdWx0AENvbnZl
cnQAU2hvdwBNZXNzYWdlQm94AGdldF9Bc3NlbWJseQBDcmVhdGVEaXJlY3RvcnkAb3BfSW5lcXVh
bGl0eQAAAAtEAGUAYgB1AGcAABlDAHUAcwB0AG8AbQBlAHIAQwBvAGQAZQAAEUYAaQBsAGUAUABh
AHQAaAAAG0YAaQBsAGUARQB4AHQAZQBuAHMAaQBvAG4AABFSAG8AbwB0AFAAYQB0AGgAAB9BAHIA
YwBoAGkAdgBlAEYAaQBsAGUAUABhAHQAaAAAF0kAbgB0AGUAZwByAGEAdABpAG8AbgAAH0kAbgB0
AGUAZwByAGEAdABpAG8AbgBUAHkAcABlAAAPSgBvAGIATgBhAG0AZQAAAQAhSQBuAHQAZQBnAGUA
cgBhAHQAaQBvAG4AVAB5AHAAZQAAA1wAABdVAHMAZQByADoAOgBEAGUAYgB1AGcAABdSAG8AbwB0
AFAAYQB0AGgAOgAgACgAAAMpAAAXRgBpAGwAZQBQAGEAdABoADoAIAAoAAAlQQByAGMAaABpAHYA
ZQBGAGkAbABlAFAAYQB0AGgAOgAgACgAABdGAGkAbABlACAAUABhAHQAaAA6ACAAAAUqAC4AACVT
AGUAdAB0AGkAbgBnACAARgBpAGwAZQAgAFAAYQByAG0AcwAAF04AbwBGAGkAbABlAEUAeABpAHMA
dAAAD1MAdQBjAGMAZQBzAHMAABFGAGkAbABlAE4AYQBtAGUAACtFAHgAYwBlAGwARgB1AGwAbABG
AGkAbABlAFAAYQB0AGgATgBhAG0AZQAAFUYAaQBsAGUAIABOAGEAbQBlACAAAB1VAHMAZQByADoA
OgBGAGkAbABlAFMAaQB6AGUAAAMwAAAlRgBpAGwAZQBTAGkAegBlACAAVgBhAHIAYQBiAGwAZQA6
ACAAAHFTAFQAXwA2ADEAOABlADIAZgA3ADgAYgA0ADMAYQA0ADYAMAA0AGEAZgBlADMAMABmADMA
ZgAzADEAMQA5ADIAMQBjAGQALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBl
AHMAAABSExiB6TzdSJEnKuX/JrbtAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFdDgcMDg4ODg4O
Dg4ODg4KBCAAEmkEIAASbQUgARJxHAMgABwEAAECHAMgAA4FIAIODg4EIAEBHAMgAAgFIAIOCAgF
AAICDg4FAAIODg4GAAMODg4OBgABEYCBDgQAAQIOBgABEoCJDgYAAh0ODg4GFRJJAg4CBSACARwY
GBABAhUSgJEBHgAVEoCRAR4AFRJJAh4AAgMKAQ4HFRJJAg4RTRkQAgIVEoCVAR4AFRKAkQEeABUS
SQIeAB4BBQoCDhFNDBABAR4AFRKAkQEeAAMgAAoIAAESgKURgKkFIAASgK0HIAIBDhKArQQgABFN
CLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMGElUDBhJZAwYSEAIGCAMGERQDBhIYBwYVEkkC
DgIIBhUSSQIOEU0EAAASVQQAABJZBQABARJZBAAAEhADAAABBCABAg4FIAERTQ4ECAASVQQIABJZ
BAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEA
I1NUXzYxOGUyZjc4YjQzYTQ2MDRhZmUzMGYzZjMxMTkyMWNkAAAFAQAAAAAWAQARQ29weXJpZ2h0
IEAgIDIwMTkAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNQEAVA4URnJhbWV3b3JrRGlz
cGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41tAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3Vy
Y2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5l
dXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5S
dW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAAg5AAAAAAAAAAAAACI5AAAA
IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUOQAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUu
ZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAA
AFhAAAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAA
vQTv/gAAAQAAAAEA6GjlHAAAAQDoaOUcPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAAB
AFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAA
AAAAALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAAMAAw
ADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkA
TgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABT
AFQAXwA2ADEAOABlADIAZgA3ADgAYgA0ADMAYQA0ADYAMAA0AGEAZgBlADMAMABmADMAZgAzADEA
MQA5ADIAMQBjAGQAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANwAz
ADkANwAuADIANgA4ADUANgAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQA
XwA3ADIAYQBlADgANQA3AGMANQBhAGMAMAA0ADEAYgBkADkAMQAzAGQAOABkADAANAA0AGQAYQA1
ADQANABhAGIALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMA
bwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADEAOQAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBk
AGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0A
ZQAAAFMAVABfADcAMgBhAGUAOAA1ADcAYwA1AGEAYwAwADQAMQBiAGQAOQAxADMAZAA4AGQAMAA0
ADQAZABhADUANAA0AGEAYgAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAA
AABTAFQAXwA2ADEAOABlADIAZgA3ADgAYgA0ADMAYQA0ADYAMAA0AGEAZgBlADMAMABmADMAZgAz
ADEAMQA5ADIAMQBjAGQAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4A
MAAuADcAMwA5ADcALgAyADYAOAA1ADYAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQBy
AHMAaQBvAG4AAAAxAC4AMAAuADcAMwA5ADcALgAyADYAOAA1ADYAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAANDkAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Get File Information\Set UserID"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{1AF4526C-3557-4E34-BC09-97ECB7E2A644}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Set UserID"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{1C14C91E-C8CF-4164-8C85-B3A818B6CECD}"
              SQLTask:SqlStatementSource="&#xA;DECLARE @IntgUserName&#x9;VARCHAR(100) =  ?&#xA;DECLARE @UserID&#x9;&#x9;&#x9;INT&#xA;&#xA;IF NOT EXISTS (SELECT RealName FROM tblUser WHERE RealName = @IntgUserName)&#xA;BEGIN&#xA;&#xA;&#x9;SELECT @UserID=CASE WHEN ISNULL(MIN(UserID),-10) &lt;= -10 THEN ISNULL(MIN(UserID),-10) - 1 ELSE ISNULL(MIN(UserID),-10) END&#xA;&#x9;FROM tblUser&#xA;&#x9;WHERE UserID &lt; -10&#xA;&#xA;&#x9;SET IDENTITY_INSERT tblUser ON&#xA;&#xA;&#x9;INSERT INTO tblUser&#xA;&#x9;(UserID,ApplicationUID,UserRoleUID,SiteUID,GroupID,LoginName,Password,RealName,DistrictUser,CampusID,Email,Active,LDAPUser)&#xA;&#x9;VALUES&#xA;&#x9;(@UserID,2,2,1,0,@IntgUserName,'123454asdf',@IntgUserName,1,0,'support@hayessoft.com',1,0)&#xA;&#xA;&#x9;SET IDENTITY_INSERT tblUser OFF&#xA;&#xA;END&#xA;&#xA;SELECT UserID&#xA;FROM tblUser WHERE RealName = @IntgUserName&#xA;"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="UserID"
                SQLTask:DtsVariableName="User::IntegrationUserID" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::Integration"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Get File Information\Truncate Staging"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{3CF3E47A-682D-451C-966C-96B8827D85F1}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Truncate Staging"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{76645D34-473D-4E9D-8DC9-2FDA13261849}"
              SQLTask:SqlStatementSource="TRUNCATE TABLE Genesys.StagingCharagesPayments&#xA;TRUNCATE TABLE Genesys.StagingCharagesPaymentsExceptions" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Get File Information.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{EA4697A5-1305-4AD7-80C5-27F25B4214E8}"
          DTS:From="Package\Get File Information\Truncate Staging"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Get File Information\Get File Name" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Import &amp; Stage Data"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{3E2C7467-4215-48EA-8E7D-43CF3CEBBBF6}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Import &amp; Stage Data">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Import &amp; Stage Data\Import File - Staging"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:DelayValidation="True"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{9DE6DCC8-876B-415C-AC86-62AF6B5D877F}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Import File - Staging"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Import &amp; Stage Data\Import File - Staging\Data Conversion"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Data Conversion"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Import &amp; Stage Data\Import File - Staging\Data Conversion.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Data Conversion.Inputs[Data Conversion Input].Columns[DerivedWaived]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="5"
                          cachedName="DerivedWaived"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Derived Column.Outputs[Derived Column Output].Columns[DerivedWaived]" />
                        <inputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Data Conversion.Inputs[Data Conversion Input].Columns[Studentid]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Studentid"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].Columns[Studentid]" />
                        <inputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Data Conversion.Inputs[Data Conversion Input].Columns[Fee Name]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Fee Name"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].Columns[Fee Name]" />
                        <inputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Data Conversion.Inputs[Data Conversion Input].Columns[Status]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Status"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].Columns[Status]" />
                        <inputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Data Conversion.Inputs[Data Conversion Input].Columns[Fee Category]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Fee Category"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].Columns[Fee Category]" />
                        <inputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Data Conversion.Inputs[Data Conversion Input].Columns[Payment Method]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Payment Method"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].Columns[Payment Method]" />
                        <inputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Data Conversion.Inputs[Data Conversion Input].Columns[Building Code]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Building Code"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].Columns[Building Code]" />
                        <inputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Data Conversion.Inputs[Data Conversion Input].Columns[Fine Date]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Fine Date"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].Columns[Fine Date]" />
                        <inputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Data Conversion.Inputs[Data Conversion Input].Columns[Amount]"
                          cachedDataType="r8"
                          cachedName="Amount"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].Columns[Amount]" />
                        <inputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Data Conversion.Inputs[Data Conversion Input].Columns[Amount Paid]"
                          cachedDataType="r8"
                          cachedName="Amount Paid"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].Columns[Amount Paid]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Import &amp; Stage Data\Import File - Staging\Data Conversion.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Import &amp; Stage Data\Import File - Staging\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Waived]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Waived]"
                          name="DC.Waived"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Import &amp; Stage Data\Import File - Staging\Derived Column.Outputs[Derived Column Output].Columns[DerivedWaived]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Studentid]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Studentid]"
                          name="DC.Studentid"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].Columns[Studentid]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Fee Name]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Fee Name]"
                          name="DC.Fee Name"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].Columns[Fee Name]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Status]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Status]"
                          name="DC.Status"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].Columns[Status]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Fee Category]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Fee Category]"
                          name="DC.Fee Category"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].Columns[Fee Category]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Payment Method]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Payment Method]"
                          name="DC.Payment Method"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].Columns[Payment Method]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Building Code]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Building Code]"
                          name="DC.Building Code"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].Columns[Building Code]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Fine Date]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Fine Date]"
                          name="DC.Fine Date"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].Columns[Fine Date]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Amount]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Amount]"
                          name="DC.Amount"
                          precision="18"
                          scale="2"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].Columns[Amount]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Amount Paid]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Amount Paid]"
                          name="DC.Amount Paid"
                          precision="18"
                          scale="2"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].Columns[Amount Paid]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Import &amp; Stage Data\Import File - Staging\Data Conversion.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Import &amp; Stage Data\Import File - Staging\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Import &amp; Stage Data\Import File - Staging\Derived Column"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Import &amp; Stage Data\Import File - Staging\Derived Column.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Derived Column.Inputs[Derived Column Input].Columns[Waived?]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Waived?"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].Columns[Waived?]" />
                        <inputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Derived Column.Inputs[Derived Column Input].Columns[Fee Name]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Fee Name"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].Columns[Fee Name]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Import &amp; Stage Data\Import File - Staging\Derived Column.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Import &amp; Stage Data\Import File - Staging\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Derived Column.Outputs[Derived Column Output].Columns[CustomerCode]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Derived Column.Outputs[Derived Column Output].Columns[CustomerCode]"
                          name="CustomerCode"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::CustomerCode]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::CustomerCode]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Derived Column.Outputs[Derived Column Output].Columns[ImportFileName]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Derived Column.Outputs[Derived Column Output].Columns[ImportFileName]"
                          name="ImportFileName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::FileName]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::FileName]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Derived Column.Outputs[Derived Column Output].Columns[Integration]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Derived Column.Outputs[Derived Column Output].Columns[Integration]"
                          name="Integration"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::Integration]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::Integration]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Derived Column.Outputs[Derived Column Output].Columns[DerivedWaived]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="5"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Derived Column.Outputs[Derived Column Output].Columns[DerivedWaived]"
                          name="DerivedWaived"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,5,1252)(#{Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].Columns[Waived?]} == "Yes" ? "Y" : "NULL")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,5,1252)([Waived?] == "Yes" ? "Y" : "NULL")</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Derived Column.Outputs[Derived Column Output].Columns[ItemDecription]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Derived Column.Outputs[Derived Column Output].Columns[ItemDecription]"
                          name="ItemDecription"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">#{Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].Columns[Fee Name]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">[Fee Name]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Import &amp; Stage Data\Import File - Staging\Derived Column.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Import &amp; Stage Data\Import File - Staging\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Import &amp; Stage Data\Import File - Staging\Generate File Row Numbers"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;11"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Generate File Row Numbers"
                  version="11">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    int row = 1;
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        Row.FileRowID = row;
        row = row + 1;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 FileRowID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool FileRowID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_fdb63209a9bf49859947062484c5dcdb.Properties.Settings.get_Default():SC_fdb63209a9bf49859947062484c5dcdb.Properties.Sett" +
    "ings")]

namespace SC_fdb63209a9bf49859947062484c5dcdb.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_fdb63209a9bf49859947062484c5dcdb.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{0A7EE898-4356-4939-831F-52FA6BB9ACF7}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_fdb63209a9bf49859947062484c5dcdb</RootNamespace>
    <AssemblyName>SC_fdb63209a9bf49859947062484c5dcdb</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_fdb63209a9bf49859947062484c5dcdb</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_fdb63209a9bf49859947062484c5dcdb</msb:DisplayName>
    <msb:ProjectId>{82B0276F-EE1C-44A3-B00B-733B99F30EDA}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_fdb63209a9bf49859947062484c5dcdb.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_fdb63209a9bf49859947062484c5dcdb")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_fdb63209a9bf49859947062484c5dcdb")]
[assembly: AssemblyCopyright("Copyright @  2019")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_fdb63209a9bf49859947062484c5dcdb.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_fdb63209a9bf49859947062484c5dcdb.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_fdb63209a9bf49859947062484c5dcdb.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_fdb63209a9bf49859947062484c5dcdb.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_fdb63209a9bf49859947062484c5dcdb.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_fdb63209a9bf49859947062484c5dcdb.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDACJDhl4AAAAAAAAAAOAAIiALATAAABIAAAAIAAAAAAAAHjEA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAMwwAABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAJBEAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAA
MQAAAAAAAEgAAAACAAUApCEAAHAOAAABAAAAAAAAABQwAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACipuAwJ7AQAABG8GAAAGAgJ7AQAA
BBdYfQEAAAQqOgIXfQEAAAQCKAoAAAYqKgIDBAUoEgAACio6AhYDjBoAAAEoEwAACipaAywIAhYo
FAAACipyAQAAcHMVAAAKeh4CKBYAAAoqHgIoFwAACip+AigYAAAKAgJzDgAABn0CAAAEAgJzDwAA
Bn0DAAAEKpIEcp4AAHAabxkAAAosFQIFAgMoGgAACg4EcwUAAAZvDAAABipKKwcCA28NAAAGA28I
AAAGLfEqBio6AigbAAAKAgN9BAAABCo6AigbAAAKAgN9BQAABCoeAigbAAAKKq5+BgAABC0ecq4A
AHDQBwAAAigcAAAKbx0AAApzHgAACoAGAAAEfgYAAAQqGn4HAAAEKh4CgAcAAAQqGn4IAAAEKh4C
KB8AAAoqLnMVAAAGgAgAAAQqAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAAk
BQAAI34AAJAFAAAgBgAAI1N0cmluZ3MAAAAAsAsAACABAAAjVVMA0AwAABAAAAAjR1VJRAAAAOAM
AACQAQAAI0Jsb2IAAAAAAAAAAgAAAVcVoAEJAQAAAPoBMwAWAAABAAAAIAAAAAgAAAAIAAAAFgAA
AA8AAAAfAAAAEAAAAAMAAAAFAAAABgAAAAEAAAAEAAAAAQAAAAAA/gIBAAAAAAAGAPgBUgQGAIwC
UgQGAEQBPwQPAMYEAAAGAHEBlAMGANsBlAMGALwBlAMGAHMClAMGABgClAMGADEClAMGAIgBlAMG
AKMBxwIKAEwCkQAKABEEkQAOAAIEkQAKAN0DkQAKAIwFkQAGAE8FTAMGACcBPwQGACIEcgQGANED
fwMSAPcA6AISAFgB6AISAN8AagMGAAwBUgQGAAEATAMGAKYDTAMGAOECTAMGAMADTAMGALIATAMG
AGMATAMGABUGlAMAAAAABwAAAAAAAQABAAEAEABfAwAAEAABAAEAAQAQAPUDAAA5AAIABQABABAA
bgUAAEUAAgAKAAEAEABDBQAASQAEAA4AAQAQAAQFAABJAAUADwAAABAAeQTVBEkABgAQAAABEAAz
BdUEYQAIABQAAQANBmMABgBDBWYABgAEBWoAAQB8BW4AAQB8BW4AEQBTA3IAEQDPAHYAEQBTAHoA
UCAAAAAAxgCqAgYAAQBYIAAAAADGALUCBgABAGAgAAAAAMYA7gV+AAEAfCAAAAAAhhgyBAYAAgCL
IAAAAACGGDIEGwACAJYgAAAAAIYIGAABAAUApSAAAAAAhggmA4QABgC8IAAAAACGAAUGKwAHAMQg
AAAAAIYAVgUrAAcAzCAAAAAAhhgyBAYABwDsIAAAAADGAOEFiQAHABEhAAAAAMYB2gV+AAsAJCEA
AAAAxgHuBX4ADAAmIQAAAACGGDIEkwANADUhAAAAAIYYMgSTAA4ARCEAAAAAgxgyBAYADwBMIQAA
AACTCB4EmQAPAHghAAAAAJMItwCeAA8AfyEAAAAAkwjDAKMADwCHIQAAAACWCGIFqQAQAI4hAAAA
AIYYMgQGABAAliEAAAAAkRg4BK4AEAAAAAEACQYAAAEAFwQAAAIADgUAAAMA6wMAAAEAwQIAAAEA
wQIAAAEAEAAAAAIAhwAAAAMAFwQAAAQA6wMAAAEAFwQAAAEACQYAAAEAkgUAAAEAkgUAAAEAwQIJ
ADIEAQARADIEBgAZADIECgApADIEEAAxADIEEAA5ADIEEABBADIEEABJADIEEABRADIEEABZADIE
EABhADIEEABpADIEBgCZADIEBgC5ADIEFQDJADIEBgCJAKoCBgCJALUCBgBxADIEGwBxAEMDJQBx
ADsDAQDZADIEEABxAAUGKwBxAFYFKwCJADIEBgDhADwFLwCJACIFNgCRADIEBgDxAHUAPADxABEG
QwChADIESQDBADIEBgAuAAsAyQAuABMA0gAuABsA8QAuACMA+gAuACsAIwEuADMAIwEuADsAIwEu
AEMA+gAuAEsAKQEuAFMAIwEuAFsAQAFDAGMAigFpAHMA8QCJAHMA8QDjAGsAigEBAXsAigEDAAEA
BwADAAgABQAAABwAsgAAACoDtgAAACIEugAAANcAvwAAAGYFxAABAAYAAwABAAcABQACABEABwAC
ABIACQABABMACQACABQACwAEgAAAAQAAAAAAAAAAAAAAAAAmAAAABAAAAAAAAAAAAAAAUQBKAAAA
AAAOAAAAAAAAAAAAAABaAJwFAAAAAA4AAAAAAAAAAAAAAFoAuQUAAAAABAAAAAAAAAAAAAAAUQBM
AwAAAAAAAAAAAQAAAIMEAAAAAABJbnQzMgA8TW9kdWxlPgBJbnB1dElEAHNldF9GaWxlUm93SUQA
U0NfZmRiNjMyMDlhOWJmNDk4NTk5NDcwNjI0ODRjNWRjZGIAbXNjb3JsaWIAZGVmYXVsdEluc3Rh
bmNlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAElucHV0TmFtZQBNaWNyb3Nv
ZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBUeXBlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJl
c291cmNlQ3VsdHVyZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBFZGl0b3JCcm93c2FibGVTdGF0
ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRl
AERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0
bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0
cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9u
QXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0
QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21wb25lbnRF
bnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0
aWJpbGl0eUF0dHJpYnV0ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAHZhbHVlAFN5c3RlbS5SdW50
aW1lLlZlcnNpb25pbmcAU3RyaW5nAFN5c3RlbS5Db21wb25lbnRNb2RlbABTQ19mZGI2MzIwOWE5
YmY0OTg1OTk0NzA2MjQ4NGM1ZGNkYi5kbGwAc2V0X0ZpbGVSb3dJRF9Jc051bGwAU2V0TnVsbABz
ZXRfSXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlv
bgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBJbnZhbGlkT3BlcmF0aW9u
RXhjZXB0aW9uAFN0cmluZ0NvbXBhcmlzb24AQ3VsdHVyZUluZm8AT3V0cHV0TmFtZU1hcABPdXRw
dXRNYXAASW5wdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1ZmZlcgBnZXRfUmVzb3Vy
Y2VNYW5hZ2VyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUu
Q29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDX2ZkYjYzMjA5YTliZjQ5ODU5OTQ3
MDYyNDg0YzVkY2RiLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2Rl
cwBTQ19mZGI2MzIwOWE5YmY0OTg1OTk0NzA2MjQ4NGM1ZGNkYi5Qcm9wZXJ0aWVzAFZhcmlhYmxl
cwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbkluZGV4ZXMAU2V0dGluZ3MARXF1YWxzAENv
bm5lY3Rpb25zAE9iamVjdABFbmRPZlJvd3NldABnZXRfRGVmYXVsdABVc2VyQ29tcG9uZW50AFBh
cmVudENvbXBvbmVudABTY3JpcHRDb21wb25lbnQATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlw
dABNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABJbnB1dDBfUHJvY2Vzc0lucHV0AElu
cHV0MF9Qcm9jZXNzSW5wdXRSb3cATmV4dFJvdwByb3cAZ2V0X0Fzc2VtYmx5AAAAAICbSQBzAE4A
dQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0ACAAdABv
ACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8AIAB0AGgA
ZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAAAPSQBuAHAAdQB0ACAAMAAAcVMAQwBf
AGYAZABiADYAMwAyADAAOQBhADkAYgBmADQAOQA4ADUAOQA5ADQANwAwADYAMgA0ADgANABjADUA
ZABjAGQAYgAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAnZ/XZfWY
9E2NnpV6a4JyMQAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERWQkgAwESPR0IEkEFIAIBCBwDIAAC
BiACAg4RdQUgAR0ICAYAARJ5EX0FIAASgIEHIAIBDhKAgQi3elxWGTTgiQiJhF3NgIDMkQIGCAMG
EhQDBhIYAwYSRQMGElEDBhJVAwYSIAUgAQESDAQgAQECCSAEAQgOEj0SQQUgAQESRQQAABJRBAAA
ElUFAAEBElUEAAASIAMAAAEDKAAIAygAAgQIABJRBAgAElUECAASIAgBAAgAAAAAAB4BAAEAVAIW
V3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU0NfZmRiNjMyMDlhOWJmNDk4NTk5
NDcwNjI0ODRjNWRjZGIAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxOQAASQEAGi5ORVRGcmFt
ZXdvcmssVmVyc2lvbj12NC41AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29y
ayA0LjUEAQAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFk
ZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5
VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNl
dAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAA9DAAAAAAAAAAAAAADjEAAAAgAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAxAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAA7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAw
ADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEA
bgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAA
AAAAUwBDAF8AZgBkAGIANgAzADIAMAA5AGEAOQBiAGYANAA5ADgANQA5ADkANAA3ADAANgAyADQA
OAA0AGMANQBkAGMAZABiAAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADAALgAwAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwBmAGQAYgA2ADMA
MgAwADkAYQA5AGIAZgA0ADkAOAA1ADkAOQA0ADcAMAA2ADIANAA4ADQAYwA1AGQAYwBkAGIALgBk
AGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcA
aAB0ACAAQAAgACAAMgAwADEAOQAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBz
AAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfAGYA
ZABiADYAMwAyADAAOQBhADkAYgBmADQAOQA4ADUAOQA5ADQANwAwADYAMgA0ADgANABjADUAZABj
AGQAYgAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwBmAGQA
YgA2ADMAMgAwADkAYQA5AGIAZgA0ADkAOAA1ADkAOQA0ADcAMAA2ADIANAA4ADQAYwA1AGQAYwBk
AGIAAAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAA
OAAIAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAACAxAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_fdb63209a9bf49859947062484c5dcdb</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">FD</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">0be4c5100b56534077288e3b83d46e5822167b50</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">a2b7bea489908bb5703993c1aa8c3944</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Import &amp; Stage Data\Import File - Staging\Generate File Row Numbers.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Import &amp; Stage Data\Import File - Staging\Generate File Row Numbers.Outputs[Output 0]"
                      name="Output 0"
                      synchronousInputId="Package\Import &amp; Stage Data\Import File - Staging\Generate File Row Numbers.Inputs[Input 0]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Generate File Row Numbers.Outputs[Output 0].Columns[FileRowID]"
                          dataType="i4"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Generate File Row Numbers.Outputs[Output 0].Columns[FileRowID]"
                          name="FileRowID" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source"
                  componentClassID="Microsoft.ExcelSource"
                  contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Excel Source"
                  name="Get Data from Excel Source"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">Genesis$</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.String"
                      description="The mapping from parameters in the SQL command to variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Source - Charges Excel File]"
                      connectionManagerRefId="Package.ConnectionManagers[Source - Charges Excel File]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output]"
                      name="Excel Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].Columns[Objectid]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].ExternalColumns[Objectid]"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].Columns[Objectid]"
                          name="Objectid"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].Columns[Studentid]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].ExternalColumns[Studentid]"
                          length="255"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].Columns[Studentid]"
                          name="Studentid"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].Columns[Fee Name]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].ExternalColumns[Fee Name]"
                          length="255"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].Columns[Fee Name]"
                          name="Fee Name"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].Columns[Amount]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].ExternalColumns[Amount]"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].Columns[Amount]"
                          name="Amount"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].Columns[Amount Paid]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].ExternalColumns[Amount Paid]"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].Columns[Amount Paid]"
                          name="Amount Paid"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].Columns[Closed]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].ExternalColumns[Closed]"
                          length="255"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].Columns[Closed]"
                          name="Closed"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].Columns[Fine Date]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].ExternalColumns[Fine Date]"
                          length="255"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].Columns[Fine Date]"
                          name="Fine Date"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].Columns[Status]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].ExternalColumns[Status]"
                          length="255"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].Columns[Status]"
                          name="Status"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].Columns[Fee Category]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].ExternalColumns[Fee Category]"
                          length="255"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].Columns[Fee Category]"
                          name="Fee Category"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].Columns[Payment Method]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].ExternalColumns[Payment Method]"
                          length="255"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].Columns[Payment Method]"
                          name="Payment Method"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].Columns[Waived?]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].ExternalColumns[Waived?]"
                          length="255"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].Columns[Waived?]"
                          name="Waived?"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].Columns[Building Code]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].ExternalColumns[Building Code]"
                          length="255"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].Columns[Building Code]"
                          name="Building Code"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].ExternalColumns[Objectid]"
                          dataType="r8"
                          name="Objectid" />
                        <externalMetadataColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].ExternalColumns[Studentid]"
                          dataType="wstr"
                          length="255"
                          name="Studentid" />
                        <externalMetadataColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].ExternalColumns[Fee Name]"
                          dataType="wstr"
                          length="255"
                          name="Fee Name" />
                        <externalMetadataColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].ExternalColumns[Amount]"
                          dataType="r8"
                          name="Amount" />
                        <externalMetadataColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].ExternalColumns[Amount Paid]"
                          dataType="r8"
                          name="Amount Paid" />
                        <externalMetadataColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].ExternalColumns[Closed]"
                          dataType="wstr"
                          length="255"
                          name="Closed" />
                        <externalMetadataColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].ExternalColumns[Fine Date]"
                          dataType="wstr"
                          length="255"
                          name="Fine Date" />
                        <externalMetadataColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].ExternalColumns[Status]"
                          dataType="wstr"
                          length="255"
                          name="Status" />
                        <externalMetadataColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].ExternalColumns[Fee Category]"
                          dataType="wstr"
                          length="255"
                          name="Fee Category" />
                        <externalMetadataColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].ExternalColumns[Payment Method]"
                          dataType="wstr"
                          length="255"
                          name="Payment Method" />
                        <externalMetadataColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].ExternalColumns[Waived?]"
                          dataType="wstr"
                          length="255"
                          name="Waived?" />
                        <externalMetadataColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].ExternalColumns[Building Code]"
                          dataType="wstr"
                          length="255"
                          name="Building Code" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Error Output]"
                      isErrorOut="true"
                      name="Excel Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Error Output].Columns[Objectid]"
                          dataType="r8"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Error Output].Columns[Objectid]"
                          name="Objectid" />
                        <outputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Error Output].Columns[Studentid]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Error Output].Columns[Studentid]"
                          name="Studentid" />
                        <outputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Error Output].Columns[Fee Name]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Error Output].Columns[Fee Name]"
                          name="Fee Name" />
                        <outputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Error Output].Columns[Amount]"
                          dataType="r8"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Error Output].Columns[Amount]"
                          name="Amount" />
                        <outputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Error Output].Columns[Amount Paid]"
                          dataType="r8"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Error Output].Columns[Amount Paid]"
                          name="Amount Paid" />
                        <outputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Error Output].Columns[Closed]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Error Output].Columns[Closed]"
                          name="Closed" />
                        <outputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Error Output].Columns[Fine Date]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Error Output].Columns[Fine Date]"
                          name="Fine Date" />
                        <outputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Error Output].Columns[Status]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Error Output].Columns[Status]"
                          name="Status" />
                        <outputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Error Output].Columns[Fee Category]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Error Output].Columns[Fee Category]"
                          name="Fee Category" />
                        <outputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Error Output].Columns[Payment Method]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Error Output].Columns[Payment Method]"
                          name="Payment Method" />
                        <outputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Error Output].Columns[Waived?]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Error Output].Columns[Waived?]"
                          name="Waived?" />
                        <outputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Error Output].Columns[Building Code]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Error Output].Columns[Building Code]"
                          name="Building Code" />
                        <outputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="Insert into Staging"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[Genesys].[StagingCharagesPayments]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,ROWS_PER_BATCH = 500</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Target - IntegrationMiddleWay]"
                      connectionManagerRefId="Package.ConnectionManagers[Target - IntegrationMiddleWay]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].Columns[CustomerCode]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="CustomerCode"
                          externalMetadataColumnId="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[CustomerCode]"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Derived Column.Outputs[Derived Column Output].Columns[CustomerCode]" />
                        <inputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].Columns[Objectid]"
                          cachedDataType="r8"
                          cachedName="Objectid"
                          externalMetadataColumnId="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[ChargeReferenceID]"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output].Columns[Objectid]" />
                        <inputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].Columns[ItemDecription]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="ItemDecription"
                          externalMetadataColumnId="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[ItemDescription]"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Derived Column.Outputs[Derived Column Output].Columns[ItemDecription]" />
                        <inputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].Columns[DC.Studentid]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="DC.Studentid"
                          externalMetadataColumnId="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[StudentID]"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Studentid]" />
                        <inputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].Columns[DC.Fee Name]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="DC.Fee Name"
                          externalMetadataColumnId="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[ItemCode]"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Fee Name]" />
                        <inputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].Columns[DC.Payment Method]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="DC.Payment Method"
                          externalMetadataColumnId="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[PaymentMethod]"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Payment Method]" />
                        <inputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].Columns[DC.Building Code]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="DC.Building Code"
                          externalMetadataColumnId="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[SchoolID]"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Building Code]" />
                        <inputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].Columns[DC.Fee Category]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="DC.Fee Category"
                          externalMetadataColumnId="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[ChargeType]"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Fee Category]" />
                        <inputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].Columns[DC.Status]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="DC.Status"
                          externalMetadataColumnId="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[ChargeStatus]"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Status]" />
                        <inputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].Columns[DC.Fine Date]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="DC.Fine Date"
                          externalMetadataColumnId="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[ChargeDate]"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Fine Date]" />
                        <inputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].Columns[DC.Amount]"
                          cachedDataType="numeric"
                          cachedName="DC.Amount"
                          cachedPrecision="18"
                          cachedScale="2"
                          externalMetadataColumnId="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[ChargeAmount]"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Amount]" />
                        <inputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].Columns[DC.Amount Paid]"
                          cachedDataType="numeric"
                          cachedName="DC.Amount Paid"
                          cachedPrecision="18"
                          cachedScale="2"
                          externalMetadataColumnId="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[PaymentAmount]"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Amount Paid]" />
                        <inputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].Columns[DC.Waived]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="DC.Waived"
                          externalMetadataColumnId="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[Waived]"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Waived]" />
                        <inputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].Columns[FileRowID]"
                          cachedDataType="i4"
                          cachedName="FileRowID"
                          externalMetadataColumnId="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[ImportFileRowID]"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Generate File Row Numbers.Outputs[Output 0].Columns[FileRowID]" />
                        <inputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].Columns[ImportFileName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="ImportFileName"
                          externalMetadataColumnId="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[ImportFIleName]"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Derived Column.Outputs[Derived Column Output].Columns[ImportFileName]" />
                        <inputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].Columns[Integration]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="Integration"
                          externalMetadataColumnId="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[IntegrationName]"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Derived Column.Outputs[Derived Column Output].Columns[Integration]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[RowID]"
                          dataType="i4"
                          name="RowID" />
                        <externalMetadataColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[ItemCode]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="ItemCode" />
                        <externalMetadataColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[ItemDescription]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="ItemDescription" />
                        <externalMetadataColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[PaymentMethod]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="PaymentMethod" />
                        <externalMetadataColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[Comment]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="Comment" />
                        <externalMetadataColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[Voided]"
                          codePage="1252"
                          dataType="str"
                          length="1"
                          name="Voided" />
                        <externalMetadataColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[Exception]"
                          dataType="bool"
                          name="Exception" />
                        <externalMetadataColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[ExceptionReason]"
                          codePage="1252"
                          dataType="text"
                          name="ExceptionReason" />
                        <externalMetadataColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[CustomerCode]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="CustomerCode" />
                        <externalMetadataColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[ChargeAmount]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="ChargeAmount" />
                        <externalMetadataColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[PaymentAmount]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="PaymentAmount" />
                        <externalMetadataColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[StudentID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="StudentID" />
                        <externalMetadataColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[SchoolID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="SchoolID" />
                        <externalMetadataColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[ChargeReferenceID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="ChargeReferenceID" />
                        <externalMetadataColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[ChargeType]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="ChargeType" />
                        <externalMetadataColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[ChargeDate]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="ChargeDate" />
                        <externalMetadataColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[ChargeStatus]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="ChargeStatus" />
                        <externalMetadataColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[PaymentDate]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="PaymentDate" />
                        <externalMetadataColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[CreationDate]"
                          dataType="dbDate"
                          name="CreationDate" />
                        <externalMetadataColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[CreationTime]"
                          dataType="dbTime2"
                          name="CreationTime"
                          scale="7" />
                        <externalMetadataColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[Waived]"
                          codePage="1252"
                          dataType="str"
                          length="1"
                          name="Waived" />
                        <externalMetadataColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[ImportFileRowID]"
                          dataType="i4"
                          name="ImportFileRowID" />
                        <externalMetadataColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[ImportFIleName]"
                          codePage="1252"
                          dataType="str"
                          length="200"
                          name="ImportFIleName" />
                        <externalMetadataColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input].ExternalColumns[IntegrationName]"
                          codePage="1252"
                          dataType="str"
                          length="200"
                          name="IntegrationName" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Import &amp; Stage Data\Import File - Staging\Row Count"
                  componentClassID="Microsoft.RowCount"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Row Count">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::RowCount</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Import &amp; Stage Data\Import File - Staging\Row Count.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Import &amp; Stage Data\Import File - Staging\Row Count.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Import &amp; Stage Data\Import File - Staging\Row Count.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Import &amp; Stage Data\Import File - Staging.Paths[Data Conversion Output]"
                  endId="Package\Import &amp; Stage Data\Import File - Staging\Row Count.Inputs[Row Count Input 1]"
                  name="Data Conversion Output"
                  startId="Package\Import &amp; Stage Data\Import File - Staging\Data Conversion.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Import &amp; Stage Data\Import File - Staging.Paths[Derived Column Output]"
                  endId="Package\Import &amp; Stage Data\Import File - Staging\Data Conversion.Inputs[Data Conversion Input]"
                  name="Derived Column Output"
                  startId="Package\Import &amp; Stage Data\Import File - Staging\Derived Column.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Import &amp; Stage Data\Import File - Staging.Paths[Excel Source Output]"
                  endId="Package\Import &amp; Stage Data\Import File - Staging\Derived Column.Inputs[Derived Column Input]"
                  name="Excel Source Output"
                  startId="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source.Outputs[Excel Source Output]" />
                <path
                  refId="Package\Import &amp; Stage Data\Import File - Staging.Paths[Output 0]"
                  endId="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging.Inputs[OLE DB Destination Input]"
                  name="Output 0"
                  startId="Package\Import &amp; Stage Data\Import File - Staging\Generate File Row Numbers.Outputs[Output 0]" />
                <path
                  refId="Package\Import &amp; Stage Data\Import File - Staging.Paths[Row Count Output 1]"
                  endId="Package\Import &amp; Stage Data\Import File - Staging\Generate File Row Numbers.Inputs[Input 0]"
                  name="Row Count Output 1"
                  startId="Package\Import &amp; Stage Data\Import File - Staging\Row Count.Outputs[Row Count Output 1]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Ref Data"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{05EC8D94-48D8-48E4-A8BF-323B5D602788}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Ref Data">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Ref Data\Charge Types"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{5FFE367E-4500-4079-8962-7DA6E280C339}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Charge Types"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Ref Data\Charge Types\Defaults"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Defaults"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Ref Data\Charge Types\Defaults.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Ref Data\Charge Types\Defaults.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Ref Data\Charge Types\Defaults.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Ref Data\Charge Types\Defaults.Outputs[Derived Column Output].Columns[ApplicatonUID]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Ref Data\Charge Types\Defaults.Outputs[Derived Column Output].Columns[ApplicatonUID]"
                          name="ApplicatonUID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::ApplicationUID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::ApplicationUID]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Ref Data\Charge Types\Defaults.Outputs[Derived Column Output].Columns[CreateUserID]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Ref Data\Charge Types\Defaults.Outputs[Derived Column Output].Columns[CreateUserID]"
                          name="CreateUserID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::IntegrationUserID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::IntegrationUserID]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Ref Data\Charge Types\Defaults.Outputs[Derived Column Output].Columns[LastModifiedByUserID]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Ref Data\Charge Types\Defaults.Outputs[Derived Column Output].Columns[LastModifiedByUserID]"
                          name="LastModifiedByUserID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::IntegrationUserID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::IntegrationUserID]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Ref Data\Charge Types\Defaults.Outputs[Derived Column Output].Columns[Percentage]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Ref Data\Charge Types\Defaults.Outputs[Derived Column Output].Columns[Percentage]"
                          name="Percentage"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">0</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Ref Data\Charge Types\Defaults.Outputs[Derived Column Output].Columns[AllowPriceChanges]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Ref Data\Charge Types\Defaults.Outputs[Derived Column Output].Columns[AllowPriceChanges]"
                          name="AllowPriceChanges"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">1</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">1</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Ref Data\Charge Types\Defaults.Outputs[Derived Column Output].Columns[Active]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Ref Data\Charge Types\Defaults.Outputs[Derived Column Output].Columns[Active]"
                          name="Active"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">1</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">1</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Ref Data\Charge Types\Defaults.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Ref Data\Charge Types\Defaults.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Ref Data\Charge Types\Defaults.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Ref Data\Charge Types\Defaults.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Ref Data\Charge Types\Defaults.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Ref Data\Charge Types\Defaults.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Ref Data\Charge Types\Get Charge Types"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="Get Charge Types"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT DISTINCT ChargeType,ChargeType AS ChargeDesc,MAX(ChargeAmount) AS ChargeAmount,GETDATE() AS CreateDate,
GETDATE() AS ModfiedDate

FROM Genesys.StagingCharagesPayments
WHERE Exception = 0

GROUP BY ChargeType</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Ref Data\Charge Types\Get Charge Types.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Target - IntegrationMiddleWay]"
                      connectionManagerRefId="Package.ConnectionManagers[Target - IntegrationMiddleWay]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Ref Data\Charge Types\Get Charge Types.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Ref Data\Charge Types\Get Charge Types.Outputs[OLE DB Source Output].Columns[ChargeType]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Ref Data\Charge Types\Get Charge Types.Outputs[OLE DB Source Output].ExternalColumns[ChargeType]"
                          length="50"
                          lineageId="Package\Ref Data\Charge Types\Get Charge Types.Outputs[OLE DB Source Output].Columns[ChargeType]"
                          name="ChargeType"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Ref Data\Charge Types\Get Charge Types.Outputs[OLE DB Source Output].Columns[ChargeDesc]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Ref Data\Charge Types\Get Charge Types.Outputs[OLE DB Source Output].ExternalColumns[ChargeDesc]"
                          length="50"
                          lineageId="Package\Ref Data\Charge Types\Get Charge Types.Outputs[OLE DB Source Output].Columns[ChargeDesc]"
                          name="ChargeDesc"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Ref Data\Charge Types\Get Charge Types.Outputs[OLE DB Source Output].Columns[ChargeAmount]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Ref Data\Charge Types\Get Charge Types.Outputs[OLE DB Source Output].ExternalColumns[ChargeAmount]"
                          length="50"
                          lineageId="Package\Ref Data\Charge Types\Get Charge Types.Outputs[OLE DB Source Output].Columns[ChargeAmount]"
                          name="ChargeAmount"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Ref Data\Charge Types\Get Charge Types.Outputs[OLE DB Source Output].Columns[CreateDate]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Ref Data\Charge Types\Get Charge Types.Outputs[OLE DB Source Output].ExternalColumns[CreateDate]"
                          lineageId="Package\Ref Data\Charge Types\Get Charge Types.Outputs[OLE DB Source Output].Columns[CreateDate]"
                          name="CreateDate"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Ref Data\Charge Types\Get Charge Types.Outputs[OLE DB Source Output].Columns[ModfiedDate]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Ref Data\Charge Types\Get Charge Types.Outputs[OLE DB Source Output].ExternalColumns[ModfiedDate]"
                          lineageId="Package\Ref Data\Charge Types\Get Charge Types.Outputs[OLE DB Source Output].Columns[ModfiedDate]"
                          name="ModfiedDate"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Ref Data\Charge Types\Get Charge Types.Outputs[OLE DB Source Output].ExternalColumns[ChargeType]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="ChargeType" />
                        <externalMetadataColumn
                          refId="Package\Ref Data\Charge Types\Get Charge Types.Outputs[OLE DB Source Output].ExternalColumns[ChargeDesc]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="ChargeDesc" />
                        <externalMetadataColumn
                          refId="Package\Ref Data\Charge Types\Get Charge Types.Outputs[OLE DB Source Output].ExternalColumns[ChargeAmount]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="ChargeAmount" />
                        <externalMetadataColumn
                          refId="Package\Ref Data\Charge Types\Get Charge Types.Outputs[OLE DB Source Output].ExternalColumns[CreateDate]"
                          dataType="dbTimeStamp"
                          name="CreateDate" />
                        <externalMetadataColumn
                          refId="Package\Ref Data\Charge Types\Get Charge Types.Outputs[OLE DB Source Output].ExternalColumns[ModfiedDate]"
                          dataType="dbTimeStamp"
                          name="ModfiedDate" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Ref Data\Charge Types\Get Charge Types.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Ref Data\Charge Types\Get Charge Types.Outputs[OLE DB Source Error Output].Columns[ChargeType]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Ref Data\Charge Types\Get Charge Types.Outputs[OLE DB Source Error Output].Columns[ChargeType]"
                          name="ChargeType" />
                        <outputColumn
                          refId="Package\Ref Data\Charge Types\Get Charge Types.Outputs[OLE DB Source Error Output].Columns[ChargeDesc]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Ref Data\Charge Types\Get Charge Types.Outputs[OLE DB Source Error Output].Columns[ChargeDesc]"
                          name="ChargeDesc" />
                        <outputColumn
                          refId="Package\Ref Data\Charge Types\Get Charge Types.Outputs[OLE DB Source Error Output].Columns[ChargeAmount]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Ref Data\Charge Types\Get Charge Types.Outputs[OLE DB Source Error Output].Columns[ChargeAmount]"
                          name="ChargeAmount" />
                        <outputColumn
                          refId="Package\Ref Data\Charge Types\Get Charge Types.Outputs[OLE DB Source Error Output].Columns[CreateDate]"
                          dataType="dbTimeStamp"
                          lineageId="Package\Ref Data\Charge Types\Get Charge Types.Outputs[OLE DB Source Error Output].Columns[CreateDate]"
                          name="CreateDate" />
                        <outputColumn
                          refId="Package\Ref Data\Charge Types\Get Charge Types.Outputs[OLE DB Source Error Output].Columns[ModfiedDate]"
                          dataType="dbTimeStamp"
                          lineageId="Package\Ref Data\Charge Types\Get Charge Types.Outputs[OLE DB Source Error Output].Columns[ModfiedDate]"
                          name="ModfiedDate" />
                        <outputColumn
                          refId="Package\Ref Data\Charge Types\Get Charge Types.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Ref Data\Charge Types\Get Charge Types.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Ref Data\Charge Types\Get Charge Types.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Ref Data\Charge Types\Get Charge Types.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Ref Data\Charge Types\Insert ChargeTypes"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="Insert ChargeTypes"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[tblUnvChargeTypes]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS,ROWS_PER_BATCH = 100</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Ref Data\Charge Types\Insert ChargeTypes.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Target - TIPWeb]"
                      connectionManagerRefId="Package.ConnectionManagers[Target - TIPWeb]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Ref Data\Charge Types\Insert ChargeTypes.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Ref Data\Charge Types\Insert ChargeTypes.Inputs[OLE DB Destination Input].Columns[LastModifiedByUserID]"
                          cachedDataType="i4"
                          cachedName="LastModifiedByUserID"
                          externalMetadataColumnId="Package\Ref Data\Charge Types\Insert ChargeTypes.Inputs[OLE DB Destination Input].ExternalColumns[LastModifiedByUserID]"
                          lineageId="Package\Ref Data\Charge Types\Defaults.Outputs[Derived Column Output].Columns[LastModifiedByUserID]" />
                        <inputColumn
                          refId="Package\Ref Data\Charge Types\Insert ChargeTypes.Inputs[OLE DB Destination Input].Columns[ChargeAmount]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="ChargeAmount"
                          externalMetadataColumnId="Package\Ref Data\Charge Types\Insert ChargeTypes.Inputs[OLE DB Destination Input].ExternalColumns[ChargeAmount]"
                          lineageId="Package\Ref Data\Charge Types\Get Charge Types.Outputs[OLE DB Source Output].Columns[ChargeAmount]" />
                        <inputColumn
                          refId="Package\Ref Data\Charge Types\Insert ChargeTypes.Inputs[OLE DB Destination Input].Columns[ChargeDesc]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="ChargeDesc"
                          externalMetadataColumnId="Package\Ref Data\Charge Types\Insert ChargeTypes.Inputs[OLE DB Destination Input].ExternalColumns[Description]"
                          lineageId="Package\Ref Data\Charge Types\Get Charge Types.Outputs[OLE DB Source Output].Columns[ChargeDesc]" />
                        <inputColumn
                          refId="Package\Ref Data\Charge Types\Insert ChargeTypes.Inputs[OLE DB Destination Input].Columns[ApplicatonUID]"
                          cachedDataType="i4"
                          cachedName="ApplicatonUID"
                          externalMetadataColumnId="Package\Ref Data\Charge Types\Insert ChargeTypes.Inputs[OLE DB Destination Input].ExternalColumns[ApplicationUID]"
                          lineageId="Package\Ref Data\Charge Types\Defaults.Outputs[Derived Column Output].Columns[ApplicatonUID]" />
                        <inputColumn
                          refId="Package\Ref Data\Charge Types\Insert ChargeTypes.Inputs[OLE DB Destination Input].Columns[ChargeType]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="ChargeType"
                          externalMetadataColumnId="Package\Ref Data\Charge Types\Insert ChargeTypes.Inputs[OLE DB Destination Input].ExternalColumns[Name]"
                          lineageId="Package\Ref Data\Charge Types\Get Charge Types.Outputs[OLE DB Source Output].Columns[ChargeType]" />
                        <inputColumn
                          refId="Package\Ref Data\Charge Types\Insert ChargeTypes.Inputs[OLE DB Destination Input].Columns[CreateUserID]"
                          cachedDataType="i4"
                          cachedName="CreateUserID"
                          externalMetadataColumnId="Package\Ref Data\Charge Types\Insert ChargeTypes.Inputs[OLE DB Destination Input].ExternalColumns[CreatedByUserID]"
                          lineageId="Package\Ref Data\Charge Types\Defaults.Outputs[Derived Column Output].Columns[CreateUserID]" />
                        <inputColumn
                          refId="Package\Ref Data\Charge Types\Insert ChargeTypes.Inputs[OLE DB Destination Input].Columns[Percentage]"
                          cachedDataType="i4"
                          cachedName="Percentage"
                          externalMetadataColumnId="Package\Ref Data\Charge Types\Insert ChargeTypes.Inputs[OLE DB Destination Input].ExternalColumns[Percentage]"
                          lineageId="Package\Ref Data\Charge Types\Defaults.Outputs[Derived Column Output].Columns[Percentage]" />
                        <inputColumn
                          refId="Package\Ref Data\Charge Types\Insert ChargeTypes.Inputs[OLE DB Destination Input].Columns[AllowPriceChanges]"
                          cachedDataType="i4"
                          cachedName="AllowPriceChanges"
                          externalMetadataColumnId="Package\Ref Data\Charge Types\Insert ChargeTypes.Inputs[OLE DB Destination Input].ExternalColumns[AllowPriceChanges]"
                          lineageId="Package\Ref Data\Charge Types\Defaults.Outputs[Derived Column Output].Columns[AllowPriceChanges]" />
                        <inputColumn
                          refId="Package\Ref Data\Charge Types\Insert ChargeTypes.Inputs[OLE DB Destination Input].Columns[CreateDate]"
                          cachedDataType="dbTimeStamp"
                          cachedName="CreateDate"
                          externalMetadataColumnId="Package\Ref Data\Charge Types\Insert ChargeTypes.Inputs[OLE DB Destination Input].ExternalColumns[CreatedDate]"
                          lineageId="Package\Ref Data\Charge Types\Get Charge Types.Outputs[OLE DB Source Output].Columns[CreateDate]" />
                        <inputColumn
                          refId="Package\Ref Data\Charge Types\Insert ChargeTypes.Inputs[OLE DB Destination Input].Columns[ModfiedDate]"
                          cachedDataType="dbTimeStamp"
                          cachedName="ModfiedDate"
                          externalMetadataColumnId="Package\Ref Data\Charge Types\Insert ChargeTypes.Inputs[OLE DB Destination Input].ExternalColumns[LastModifiedDate]"
                          lineageId="Package\Ref Data\Charge Types\Get Charge Types.Outputs[OLE DB Source Output].Columns[ModfiedDate]" />
                        <inputColumn
                          refId="Package\Ref Data\Charge Types\Insert ChargeTypes.Inputs[OLE DB Destination Input].Columns[Active]"
                          cachedDataType="i4"
                          cachedName="Active"
                          externalMetadataColumnId="Package\Ref Data\Charge Types\Insert ChargeTypes.Inputs[OLE DB Destination Input].ExternalColumns[Active]"
                          lineageId="Package\Ref Data\Charge Types\Defaults.Outputs[Derived Column Output].Columns[Active]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Ref Data\Charge Types\Insert ChargeTypes.Inputs[OLE DB Destination Input].ExternalColumns[ChargeTypeUID]"
                          dataType="i4"
                          name="ChargeTypeUID" />
                        <externalMetadataColumn
                          refId="Package\Ref Data\Charge Types\Insert ChargeTypes.Inputs[OLE DB Destination Input].ExternalColumns[ApplicationUID]"
                          dataType="i4"
                          name="ApplicationUID" />
                        <externalMetadataColumn
                          refId="Package\Ref Data\Charge Types\Insert ChargeTypes.Inputs[OLE DB Destination Input].ExternalColumns[Description]"
                          codePage="1252"
                          dataType="text"
                          name="Description" />
                        <externalMetadataColumn
                          refId="Package\Ref Data\Charge Types\Insert ChargeTypes.Inputs[OLE DB Destination Input].ExternalColumns[ChargeAmount]"
                          dataType="r8"
                          name="ChargeAmount" />
                        <externalMetadataColumn
                          refId="Package\Ref Data\Charge Types\Insert ChargeTypes.Inputs[OLE DB Destination Input].ExternalColumns[Percentage]"
                          dataType="bool"
                          name="Percentage" />
                        <externalMetadataColumn
                          refId="Package\Ref Data\Charge Types\Insert ChargeTypes.Inputs[OLE DB Destination Input].ExternalColumns[AllowPriceChanges]"
                          dataType="bool"
                          name="AllowPriceChanges" />
                        <externalMetadataColumn
                          refId="Package\Ref Data\Charge Types\Insert ChargeTypes.Inputs[OLE DB Destination Input].ExternalColumns[Name]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Name" />
                        <externalMetadataColumn
                          refId="Package\Ref Data\Charge Types\Insert ChargeTypes.Inputs[OLE DB Destination Input].ExternalColumns[Active]"
                          dataType="bool"
                          name="Active" />
                        <externalMetadataColumn
                          refId="Package\Ref Data\Charge Types\Insert ChargeTypes.Inputs[OLE DB Destination Input].ExternalColumns[CreatedByUserID]"
                          dataType="i4"
                          name="CreatedByUserID" />
                        <externalMetadataColumn
                          refId="Package\Ref Data\Charge Types\Insert ChargeTypes.Inputs[OLE DB Destination Input].ExternalColumns[CreatedDate]"
                          dataType="dbTimeStamp"
                          name="CreatedDate" />
                        <externalMetadataColumn
                          refId="Package\Ref Data\Charge Types\Insert ChargeTypes.Inputs[OLE DB Destination Input].ExternalColumns[LastModifiedByUserID]"
                          dataType="i4"
                          name="LastModifiedByUserID" />
                        <externalMetadataColumn
                          refId="Package\Ref Data\Charge Types\Insert ChargeTypes.Inputs[OLE DB Destination Input].ExternalColumns[LastModifiedDate]"
                          dataType="dbTimeStamp"
                          name="LastModifiedDate" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Ref Data\Charge Types\Insert ChargeTypes.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Ref Data\Charge Types\Insert ChargeTypes.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Ref Data\Charge Types\Insert ChargeTypes.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Ref Data\Charge Types\Insert ChargeTypes.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Ref Data\Charge Types\Insert ChargeTypes.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Ref Data\Charge Types\Insert ChargeTypes.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Ref Data\Charge Types\Lookup ChargeType Exists"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Lookup ChargeType Exists"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[tblUnvChargeTypes]</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[tblUnvChargeTypes]) [refTable]
where [refTable].[Name] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">2</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ChargeTypeUID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ApplicationUID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Description" dataType="DT_TEXT" length="0" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="ChargeAmount" dataType="DT_R8" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Percentage" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="AllowPriceChanges" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Name" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Active" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="CreatedByUserID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="CreatedDate" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="LastModifiedByUserID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="LastModifiedDate" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Ref Data\Charge Types\Get Charge Types.Outputs[OLE DB Source Output].Columns[ChargeType]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Ref Data\Charge Types\Lookup ChargeType Exists.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Target - TIPWeb]"
                      connectionManagerRefId="Package.ConnectionManagers[Target - TIPWeb]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Ref Data\Charge Types\Lookup ChargeType Exists.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Ref Data\Charge Types\Lookup ChargeType Exists.Inputs[Lookup Input].Columns[ChargeType]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="ChargeType"
                          lineageId="Package\Ref Data\Charge Types\Get Charge Types.Outputs[OLE DB Source Output].Columns[ChargeType]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">Name</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Ref Data\Charge Types\Lookup ChargeType Exists.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Ref Data\Charge Types\Lookup ChargeType Exists.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Ref Data\Charge Types\Lookup ChargeType Exists.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Ref Data\Charge Types\Lookup ChargeType Exists.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Ref Data\Charge Types\Lookup ChargeType Exists.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Ref Data\Charge Types\Lookup ChargeType Exists.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Ref Data\Charge Types\Lookup ChargeType Exists.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Ref Data\Charge Types\Lookup ChargeType Exists.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Ref Data\Charge Types\Lookup ChargeType Exists.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Ref Data\Charge Types\Lookup ChargeType Exists.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Ref Data\Charge Types.Paths[Derived Column Output]"
                  endId="Package\Ref Data\Charge Types\Lookup ChargeType Exists.Inputs[Lookup Input]"
                  name="Derived Column Output"
                  startId="Package\Ref Data\Charge Types\Defaults.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Ref Data\Charge Types.Paths[Lookup No Match Output]"
                  endId="Package\Ref Data\Charge Types\Insert ChargeTypes.Inputs[OLE DB Destination Input]"
                  name="Lookup No Match Output"
                  startId="Package\Ref Data\Charge Types\Lookup ChargeType Exists.Outputs[Lookup No Match Output]" />
                <path
                  refId="Package\Ref Data\Charge Types.Paths[OLE DB Source Output]"
                  endId="Package\Ref Data\Charge Types\Defaults.Inputs[Derived Column Input]"
                  name="OLE DB Source Output"
                  startId="Package\Ref Data\Charge Types\Get Charge Types.Outputs[OLE DB Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Setting Defaults"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{88048238-9637-4304-B1C8-88EC915406E4}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Setting Defaults">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Setting Defaults\Payment Ammount"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{20d8f1ca-59db-48f5-b0a6-56b250780c65}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Payment Ammount"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{76645D34-473D-4E9D-8DC9-2FDA13261849}"
              SQLTask:SqlStatementSource="UPDATE Genesys.StagingCharagesPayments&#xA;SET PaymentAmount = NULL&#xA;WHERE PaymentAmount = '.00'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Setting Defaults\PaymentMethod"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{A52C5207-A8A5-43A5-A518-D56DDD3CAFE5}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="PaymentMethod"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{76645D34-473D-4E9D-8DC9-2FDA13261849}"
              SQLTask:SqlStatementSource="UPDATE Genesys.StagingCharagesPayments&#xA;SET PaymentMethod = NULL&#xA;WHERE PaymentMethod = ''" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Setting Defaults\Waived"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{3590bdcc-671f-4d51-ad86-67cb6bdbaefe}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Waived"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{76645D34-473D-4E9D-8DC9-2FDA13261849}"
              SQLTask:SqlStatementSource="UPDATE Genesys.StagingCharagesPayments&#xA;SET Waived = NULL&#xA;WHERE Waived = ''&#xA;OR Waived = 'N'&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Setting Defaults.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{0763D73A-598D-4506-B30F-4F093ACF56E3}"
          DTS:From="Package\Setting Defaults\PaymentMethod"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Setting Defaults\Waived" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Setting Defaults.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{4E86A3F4-7FD8-4C9C-B4D1-0D095832ABF1}"
          DTS:From="Package\Setting Defaults\Waived"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Setting Defaults\Payment Ammount" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Succuess - Dashbaord and Integration Reporting"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{EDF6834E-37FE-415A-954C-5DE3E64A359E}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Succuess - Dashbaord and Integration Reporting">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Succuess - Dashbaord and Integration Reporting\Create Report - Successful"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{CB2B2E33-5BC4-4B1E-A7A1-2791BAB0BADC}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create Report - Successful"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_ff5ff8590cd148c0a13bba8a9acf59b9"
              VSTAMajorVersion="15"
              VSTAMinorVersion="0"
              Language="VisualBasic"
              ReadOnlyVariables="User::CustomerCode,User::CustomerFullName,User::Debug,User::FileName,User::Integration,User::IntegrationType,User::ReportHideExceptionColumnsInventory,User::ReportHideExceptionColumnsPurchaseOrder,User::ReportHideExceptionColumnsStatus,User::ReportsPath,User::RowCount">
              <ProjectItem
                Name="My Project\AssemblyInfo.vb"
                Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("ST_8a64a78dc3a14df19e76c1106e01c2b8")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("ST_8a64a78dc3a14df19e76c1106e01c2b8")> 
<Assembly: AssemblyCopyright("Copyright @  2019")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("ed9e13df-5893-4099-9b0a-40a2bc478d99")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
              <ProjectItem
                Name="ST_ff5ff8590cd148c0a13bba8a9acf59b9.vbproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{5F8123A6-B37B-45C0-A49E-367FFC845768}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>My Project</AppDesignerFolder>
    <RootNamespace>ST_8a64a78dc3a14df19e76c1106e01c2b8</RootNamespace>
    <AssemblyName>ST_ff5ff8590cd148c0a13bba8a9acf59b9</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ScriptMain.vb">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Settings.Designer.vb"
                Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_ff5ff8590cd148c0a13bba8a9acf59b9</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_ff5ff8590cd148c0a13bba8a9acf59b9</msb:DisplayName>
    <msb:ProjectId>{057F261A-140F-49A9-AD4B-035A81A68CB7}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_ff5ff8590cd148c0a13bba8a9acf59b9.vbproj" />
    <msb:File Include="My Project\Settings.settings" />
    <msb:File Include="My Project\AssemblyInfo.vb" />
    <msb:File Include="ScriptMain.vb" />
    <msb:File Include="My Project\Resources.resx" />
    <msb:File Include="My Project\Resources.Designer.vb" />
    <msb:File Include="My Project\Settings.Designer.vb" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.vb"
                Encoding="UTF8"><![CDATA[#Region "Help:  Introduction to the script task"
'The Script Task allows you to perform virtually any operation that can be accomplished in
'a .Net application within the context of an Integration Services control flow. 

'Expand the other regions which have "Help" prefixes for examples of specific ways to use
'Integration Services features within this script task.
#End Region


#Region "Imports"
Imports System
Imports System.Data
Imports System.Math
Imports Microsoft.SqlServer.Dts.Runtime
#End Region

'ScriptMain is the entry point class of the script.  Do not change the name, attributes,
'or parent of this class.
<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute()> _
<System.CLSCompliantAttribute(False)> _
Partial Public Class ScriptMain
    Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

#Region "Help:  Using Integration Services variables and parameters in a script"
    'To use a variable in this script, first ensure that the variable has been added to 
    'either the list contained in the ReadOnlyVariables property or the list contained in 
    'the ReadWriteVariables property of this script task, according to whether or not your
    'code needs to write to the variable.  To add the variable, save this script, close this instance of
    'Visual Studio, and update the ReadOnlyVariables and 
    'ReadWriteVariables properties in the Script Transformation Editor window.
    'To use a parameter in this script, follow the same steps. Parameters are always read-only.

    'Example of reading from a variable:
    ' startTime = Dts.Variables("System::StartTime").Value

    'Example of writing to a variable:
    ' Dts.Variables("User::myStringVariable").Value = "new value"

    'Example of reading from a package parameter:
    ' batchId = Dts.Variables("$Package::batchId").Value

    'Example of reading from a project parameter:
    ' batchId = Dts.Variables("$Project::batchId").Value

    'Example of reading from a sensitive project parameter:
    ' batchId = Dts.Variables("$Project::batchId").GetSensitiveValue()
#End Region

#Region "Help:  Firing Integration Services events from a script"
    'This script task can fire events for logging purposes.

    'Example of firing an error event:
    ' Dts.Events.FireError(18, "Process Values", "Bad value", "", 0)

    'Example of firing an information event:
    ' Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, fireAgain)

    'Example of firing a warning event:
    ' Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0)
#End Region

#Region "Help:  Using Integration Services connection managers in a script"
    'Some types of connection managers can be used in this script task.  See the topic 
    '"Working with Connection Managers Programatically" for details.

    'Example of using an ADO.Net connection manager:
    ' Dim rawConnection As Object = Dts.Connections("Sales DB").AcquireConnection(Dts.Transaction)
    ' Dim myADONETConnection As SqlConnection = CType(rawConnection, SqlConnection)
    ' <Use the connection in some code here, then release the connection>
    ' Dts.Connections("Sales DB").ReleaseConnection(rawConnection)

    'Example of using a File connection manager
    ' Dim rawConnection As Object = Dts.Connections("Prices.zip").AcquireConnection(Dts.Transaction)
    ' Dim filePath As String = CType(rawConnection, String)
    ' <Use the connection in some code here, then release the connection>
    ' Dts.Connections("Prices.zip").ReleaseConnection(rawConnection)
#End Region

    'This method is called when this script task executes in the control flow.
    'Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
    'To open Help, press F1.

    Public Sub Main()
        'User::CustomerCode,User::CustomerFullName,User::Debug,User::FileName,User::Integration,User::IntegrationType,
        'User:   ReportHideExceptionColumnsInventory, User: ReportHideExceptionColumnsPurchaseOrder, User: ReportHideExceptionColumnsStatus, User: ReportsPath, User: RowCount
        Dim ReportPath As String = CType(Dts.Variables("ReportsPath").Value, String)
        Dim HideExceptionColumnsInventory As String = CType(Dts.Variables("ReportHideExceptionColumnsInventory").Value, String)
        Dim HideExceptionColumnsPurchaseOrder As String = CType(Dts.Variables("ReportHideExceptionColumnsPurchaseOrder").Value, String)
        Dim HideExceptionColumnsStatus As String = CType(Dts.Variables("ReportHideExceptionColumnsStatus").Value, String)
        Dim RowCount As String = CType(Dts.Variables("RowCount").Value, String)
        Dim CustomerCode As String = CType(Dts.Variables("CustomerCode").Value, String)
        Dim CustomerFullName As String = CType(Dts.Variables("CustomerFullName").Value, String)
        Dim Integration As String = CType(Dts.Variables("Integration").Value, String)
        Dim IntegrationType As String = CType(Dts.Variables("IntegrationType").Value, String)
        Dim FileNames As String = CType(Dts.Variables("FileName").Value, String)
        Dim ReportDate As String = Today.ToShortDateString.ToString()

        Dim URL As String = "http://hayessqlsvr/ReportServer/Pages/ReportViewer.aspx?%2fDataIntergration%2fIntegrationChargesDefaultReportImport&rs:Command=Render"

        'Parm 1
        URL = URL + "&RowCount=" + RowCount

        'Parm 2 
        URL = URL + "&IntegrationName=" + Integration

        'Parm 3
        URL = URL + "&IntegrationType=" + IntegrationType

        'Parm 4
        URL = URL + "&ReportDate=" + ReportDate

        'Parm 5
        URL = URL + "&FileNames=" + FileNames

        'Parm 6
        URL = URL + "&CustomerFullName=" + CustomerFullName

        'Parm 7
        URL = URL + "&CustomerCode=" + CustomerCode

        'Parm 8
        URL = URL + "&IntegrationStatus=Successful"

        'Parm 9
        URL = URL + "&DisplayExceptionColumnsStatus=" + HideExceptionColumnsStatus

        'Parm 10
        URL = URL + "&DisplayExceptionColumnsInventory=" + HideExceptionColumnsInventory

        'Parm 11
        URL = URL + "&DisplayExceptionColumnsPurchaseOrder=" + HideExceptionColumnsPurchaseOrder

        'Appending Export to Excel and Toolbar
        URL = URL + "&rs:Format=Excel&rc:Toolbar=False"

        'for Testing
        'MessageBox.Show(URL, "URL for Report", MessageBoxButtons.OK)

        Dim httpConn As ConnectionManager = Dts.Connections("ReportServer")
        Dim clientConn As HttpClientConnection = New HttpClientConnection(httpConn.AcquireConnection(Nothing))

        Dim ReportFileName As String = ReportPath + CustomerCode + "_" + Integration + "_" + IntegrationType + "_Report_" + Format(Now, "MMddyyyy") + "_" + Format(Now, "HHmm") + ".xls"

        clientConn.ServerURL = URL

        clientConn.DownloadFile(ReportFileName, True)

        Dts.TaskResult = ScriptResults.Success
    End Sub

#Region "ScriptResults declaration"
    'This enum provides a convenient shorthand within the scope of this class for setting the
    'result of the script.

    'This code was generated automatically.
    Enum ScriptResults
        Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
        Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
    End Enum

#End Region

End Class]]></ProjectItem>
              <ProjectItem
                Name="My Project\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Resources.Designer.vb"
                Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
              <BinaryItem
                Name="ST_ff5ff8590cd148c0a13bba8a9acf59b9.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAClDhl4AAAAAAAAAAOAAIiALAVAAACIAAAAIAAAAAAAAikEA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAADhBAABPAAAAAGAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAkCEAAAAgAAAAIgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAYAAAAAYAAAAkAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAKgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABs
QQAAAAAAAEgAAAACAAUACCUAAHgbAAABAAAAAAAAAIBAAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBgAAAoqHgIoGQAACiqmcxoAAAqAAQAABHMbAAAKgAIA
AARzHAAACoADAAAEcx0AAAqABAAABCoufgEAAARvHgAACioufgIAAARvHwAACioufgMAAARvIAAA
CioufgQAAARvIQAACioeAigiAAAKKq5+BQAABC0ecgEAAHDQBQAAAigjAAAKbyQAAApzJQAACoAF
AAAEfgUAAAQqGn4GAAAEKh4CgAYAAAQqQnMiAAAKKCYAAAqACAAABCoeAignAAAKKgAAGzABAD8A
AAAAAAAAfgcAAAQtMn4IAAAEKCYAAAooKAAACn4HAAAELRxzDQAABoAHAAAE3hB+CAAABCgmAAAK
KCkAAArcfgcAAAQqAAEQAAACAB0ADCkAEAAAAAAeAigqAAAKKhMwBQDfAgAAAQAAEQIoKwAACm8s
AAAKcjMAAHBvLQAACm8uAAAKKC8AAAoKAigrAAAKbywAAApySwAAcG8tAAAKby4AAAooLwAACgsC
KCsAAApvLAAACnKTAABwby0AAApvLgAACigvAAAKDAIoKwAACm8sAAAKcuMAAHBvLQAACm8uAAAK
KC8AAAoNAigrAAAKbywAAApyJQEAcG8tAAAKby4AAAooLwAAChMEAigrAAAKbywAAApyNwEAcG8t
AAAKby4AAAooLwAAChMFAigrAAAKbywAAApyUQEAcG8tAAAKby4AAAooLwAAChMGAigrAAAKbywA
AApycwEAcG8tAAAKby4AAAooLwAAChMHAigrAAAKbywAAApyiwEAcG8tAAAKby4AAAooLwAAChMI
AigrAAAKbywAAApyqwEAcG8tAAAKby4AAAooLwAAChMJKDAAAAoTDxIPKDEAAApvMgAAChMKcr0B
AHATCxELcsoCAHARBCgzAAAKEwsRC3LgAgBwEQcoMwAAChMLEQtyBAMAcBEIKDMAAAoTCxELcigD
AHARCigzAAAKEwsRC3JCAwBwEQkoMwAAChMLEQtyWgMAcBEGKDMAAAoTCxELcoADAHARBSgzAAAK
EwsRC3KeAwBwKDQAAAoTCxELctoDAHAJKDMAAAoTCxELchoEAHAHKDMAAAoTCxELcmAEAHAIKDMA
AAoTCxELcq4EAHAoNAAAChMLAigrAAAKbzUAAApy8gQAcG82AAAKEwwRDBRvNwAACigmAAAKczgA
AAoTDR8LjTIAAAElFgaiJRcRBaIlGHIMBQBwoiUZEQeiJRpyDAUAcKIlGxEIoiUcchAFAHCiJR0o
OQAACownAAABciIFAHAoOgAACqIlHnIMBQBwoiUfCSg5AAAKjCcAAAFyNAUAcCg6AAAKoiUfCnI+
BQBwoig7AAAKEw4RDRELbzwAAAoRDREOF289AAAKAigrAAAKFm8+AAAKKjYCAygmAAAKKD8AAAoq
HgIoQAAACiou0AgAAAIoIwAACioeAihBAAAKKgAAABMwAQAUAAAAAgAAEQKMBQAAGy0IKAEAACsK
KwICCgYqIgP+FQUAABsqAAAAEzACACgAAAADAAARAntDAAAKb0QAAAoKBowIAAAbLRIoAgAAKwoC
e0MAAAoGb0UAAAoGKkoCKCIAAAoCc0YAAAp9QwAACioAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAz
MTkAAAAABQBsAAAANAgAACN+AACgCAAAyAkAACNTdHJpbmdzAAAAAGgSAABIBQAAI1VTALAXAAAQ
AAAAI0dVSUQAAADAFwAAuAMAACNCbG9iAAAAAAAAAAIAAAFXHaIJCQ8AAAD6ATMAFgAAAQAAADUA
AAAKAAAADAAAABkAAAAEAAAARgAAAAIAAAA3AAAAAwAAAAQAAAAIAAAACQAAAAgAAAABAAAABQAA
AAEAAAADAAAAAwAAAAIAAAAAAHwFAQAAAAAABgCpAxkIBgBOBBkIBgCAAloHDwC/CAAABgDBAikG
BgCMAykGBgA1BCkGBgDJAykGBgDiAykGBgAIAykGBgD9A60FBgCtAtMHBgApAtMHBgBUAykGBgAj
A6gECgBMAvQGCgAUAmYFCgCUAmYFDgDsAakHDgAqB20HBgA8A1oHDgDYAvIHDgDwAuMABgBTCa0F
DgAQB6kHDgBxA+MABgCfAa0FDgABACoFCgA3ArkFBgDSBjkIBgBiBhQGCgD8Af8FBgBjAloHEgAT
BAEFEgDQAQEFBgDdBK0FFgDiBnwBFgBNBnwBBgBzAa0FBgC0Ba0FBgA2Aa0FBgC/CSkGBgASCRkI
BgBSB5cEEgBUBQEFFgDSCHwBFgAtAXwBDgD2CPIHDgBnAeMABgDWBK0FFgAGCXwBDgDcCOMABgA7
B60FAAAAAHMAAAAAAAEAAQAAAAAA8QWKCU0AAQABAAAAAAAoB4oJUQABAAIAAAEQAFoJiglhAAEA
AwAAAAAAewhKCGEABQAIAAABEADkCCsAgQAHAAwAAQAAANYFKwCNAAkADwAFAQAAmwcAAGEACQAR
AAUBAAAQAAAAYQAJABgAAgEAADEJAAChAAoAGgAxAJcGTgExAG4GVgExAIIGXgExALAGZgERADMH
bgERAMQBcgERAGwEdgERAE0JegEhAHgJDAEGBtIAfQFWgCEJgAFWgKQBgAFQIAAAAAAGGEUHBgAB
AFggAAAAAAYYRQcGAAEAYCAAAAAAERhLB4QBAQCKIAAAAAATCBsHiAEBAJYgAAAAABMI4QWNAQEA
oiAAAAAAEwgMB5IBAQCuIAAAAAATCIsHlwEBALogAAAAAAMYRQcGAAEAwiAAAAAAFgjOBpwBAQDu
IAAAAAAWCKwBoQEBAPUgAAAAABYIuAGmAQEA/SAAAAAAERhLB4QBAgAOIQAAAAAGGEUHBgACABgh
AAAAABYIdASsAQIAdCEAAAAABhhFBwYAAgB8IQAAAAAGANwFBgACAGckAAAAAMYC7wjkAAIAdSQA
AAAAxgIhAekAAwB9JAAAAACDAJwBsQEDAIkkAAAAAMYC1ASqAAMAlCQAAAAAEQC/ALYBAwC0JAAA
AAABAKsAvgEEALogAAAAAAYYRQcGAAUAwCQAAAAAAwgIAUoABQD0JAAAAAAGGEUHBgAFAAAAAQCR
BAAAAQBsBgAAAQAYAQAAAQAYAQkARQcBABEARQcGABkARQcKACkARQcQADEARQcQADkARQcQAEEA
RQcQAEkARQcQAFEARQcQAFkARQcVAGEARQcVAGkARQcQAHEARQcQAHkARQcQAIEARQcaAJEARQcg
AKkARQcGALEARQcGALkARQcGANEARQcmAOkARQcQAAkBRQcGABEBRQcGAJkARQcGAKEARQcGAAwA
RQcGABQARQcGABwARQcGACQARQcGAAwACAFKABQACAFKABwACAFKACQACAFKAMEARQcGANkASAFP
ANkAuwlXAPEARQddAFkBiARlAAEBRQcGAGEBFQdqAGEBZAlqABkBRQcGABkBKQmIAGkBzgiOAHEB
pAWUAHkBdASbAIEB1ASfAIkBsQmkADkBwgSqAJEB1ASqAJEBPwmuAJEBPwm1AGkBAgm7AJkBpAXB
ACkBOwbIADEBRQfNAIkBggmkAKEBRgnSAJEBPwnYADEBfAAQADEBWgHeAGkBaQkBAMEA7wjkAMEA
IQHpAMEA1ASqAKkB+QD1ADQAeAkMATwAdARKADwAfgQjATwARQcGAAgALABEAQgAMABJASkAqwBw
Ay4ACwDuAS4AEwD3AS4AGwAWAi4AIwAfAi4AKwBIAi4AMwBIAi4AOwAfAi4AQwBOAi4ASwBIAi4A
UwBlAi4AWwBIAi4AYwBrAi4AawCVAi4AcwCiAkAAiwBJAUAAgwDsAkMAewD1AkMAgwDsAkkAqwCB
A2MAewD1AmMAgwDsAmkAqwCVA4AAiwBJAYMAkwBJAYMAmwBJAYMAewD1AokAqwCiA6AAiwBJAakA
gwAWAsAAiwBJAckAgwAWAuAAiwBJAeMAuwBJAeMAUwBIAukAswBJAQMBgwDsAgMBowAOAyMBgwDs
AiMBWwBIAiACgwDsAiACiwBJAUACgwDsAkACiwBJAWACgwDsAmACiwBJAYACgwDsAoACiwBJAaAC
iwBJAcACiwBJAeACiwBJAeACgwDsAgADiwBJASADiwBJASADgwDsAm8A7QAAAQQAAQAFAAUABgAH
AAkACAAAACoHxgEAAPMFywEAABAH0AEAAJ0H1QEAANIG2gEAAMgB3wEAAJEE5AEAAAwB6QECAAQA
AwACAAUABQACAAYABwACAAcACQACAAkACwACAAoADQABAAsADQACAA4ADwACABgAEQAuADUAPABD
APIABQEUARsBBIAAAAEAAAAAAAAAAAAAAAAATwAAAAQAAAAAAAAAAAAAACkB2gAAAAAABAAAAAAA
AAAAAAAAKQGtBQAAAAAKAAAAAAAAAAAAAAAyAeMAAAAAAA4AAAAAAAAAAAAAADsB4gQAAAAADgAA
AAAAAAAAAAAAOwGKAAAAAAAAAAAAAQAAAIcIAAAIAAQACQAEAAoABwAAABAAEgCpAAAAEAArAKkA
AAAAAC0AqQCFAPsAhQAeAQAAAENvbnRleHRWYWx1ZWAxAFRocmVhZFNhZmVPYmplY3RQcm92aWRl
cmAxAFNUXzhhNjRhNzhkYzNhMTRkZjE5ZTc2YzExMDZlMDFjMmI4AFNUX2ZmNWZmODU5MGNkMTQ4
YzBhMTNiYmE4YTlhY2Y1OWI5ADxNb2R1bGU+AHNldF9TZXJ2ZXJVUkwATWljcm9zb2Z0LlNxbFNl
cnZlci5NYW5hZ2VkRFRTAFQARGlzcG9zZV9fSW5zdGFuY2VfXwBDcmVhdGVfX0luc3RhbmNlX18A
dmFsdWVfXwBtc2NvcmxpYgBNaWNyb3NvZnQuVmlzdWFsQmFzaWMAQ3JlYXRlSW5zdGFuY2UAZ2V0
X0dldEluc3RhbmNlAGluc3RhbmNlAEdldEhhc2hDb2RlAFZhcmlhYmxlAFJ1bnRpbWVUeXBlSGFu
ZGxlAEdldFR5cGVGcm9tSGFuZGxlAERvd25sb2FkRmlsZQBEYXRlQW5kVGltZQBEYXRlVGltZQBN
aWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAEdldFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVy
ZQBzZXRfQ3VsdHVyZQBfcmVzQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBw
bGljYXRpb25CYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRl
AEd1aWRBdHRyaWJ1dGUASGVscEtleXdvcmRBdHRyaWJ1dGUAR2VuZXJhdGVkQ29kZUF0dHJpYnV0
ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9y
QnJvd3NhYmxlQXR0cmlidXRlAENvbVZpc2libGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJp
YnV0ZQBTdGFuZGFyZE1vZHVsZUF0dHJpYnV0ZQBIaWRlTW9kdWxlTmFtZUF0dHJpYnV0ZQBBc3Nl
bWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUARGVidWdnZXJI
aWRkZW5BdHRyaWJ1dGUAQXNzZW1ibHlGaWxlVmVyc2lvbkF0dHJpYnV0ZQBNeUdyb3VwQ29sbGVj
dGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVs
YXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJp
Z2h0QXR0cmlidXRlAENMU0NvbXBsaWFudEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9p
bnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5
QXR0cmlidXRlAG1fVmFsdWUAZ2V0X1ZhbHVlAHNldF9WYWx1ZQBHZXRPYmplY3RWYWx1ZQBTeXN0
ZW0uVGhyZWFkaW5nAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVG9TaG9ydERhdGVTdHJpbmcA
VG9TdHJpbmcATWF0aABNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNx
bFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuTXlTZXJ2
aWNlcy5JbnRlcm5hbABTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1Rf
ZmY1ZmY4NTkwY2QxNDhjMGExM2JiYThhOWFjZjU5YjkuZGxsAGdldF9JdGVtAFN5c3RlbQBFbnVt
AFN5c3RlbS5Db21wb25lbnRNb2RlbC5EZXNpZ24AU2NyaXB0TWFpbgBnZXRfQXBwbGljYXRpb24A
TXlBcHBsaWNhdGlvbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBT
eXN0ZW0uUmVmbGVjdGlvbgBBY3F1aXJlQ29ubmVjdGlvbgBIdHRwQ2xpZW50Q29ubmVjdGlvbgBD
dWx0dXJlSW5mbwBtX0FwcE9iamVjdFByb3ZpZGVyAG1fVXNlck9iamVjdFByb3ZpZGVyAG1fQ29t
cHV0ZXJPYmplY3RQcm92aWRlcgBtX015V2ViU2VydmljZXNPYmplY3RQcm92aWRlcgBnZXRfUmVz
b3VyY2VNYW5hZ2VyAENvbm5lY3Rpb25NYW5hZ2VyAFN5c3RlbS5Db2RlRG9tLkNvbXBpbGVyAGdl
dF9Vc2VyAEVudGVyAGdldF9Db21wdXRlcgBNeUNvbXB1dGVyAF9yZXNNZ3IAQWN0aXZhdG9yAC5j
dG9yAC5jY3RvcgBNb25pdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBNaWNyb3NvZnQuVmlzdWFsQmFz
aWMuRGV2aWNlcwBnZXRfV2ViU2VydmljZXMATXlXZWJTZXJ2aWNlcwBNaWNyb3NvZnQuVmlzdWFs
QmFzaWMuQXBwbGljYXRpb25TZXJ2aWNlcwBTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMA
TWljcm9zb2Z0LlZpc3VhbEJhc2ljLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJ1bnRpbWUuQ29t
cGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUXzhhNjRhNzhkYzNhMTRkZjE5ZTc2YzEx
MDZlMDFjMmI4Lk15LlJlc291cmNlcwBNeVJlc291cmNlcwBTVF84YTY0YTc4ZGMzYTE0ZGYxOWU3
NmMxMTA2ZTAxYzJiOC5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAGdldF9WYXJp
YWJsZXMAU3RyaW5ncwBNeVNldHRpbmdzAEVxdWFscwBDb252ZXJzaW9ucwBnZXRfQ29ubmVjdGlv
bnMAUnVudGltZUhlbHBlcnMAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAQ29uY2F0AEZv
cm1hdABtX1N5bmNPYmplY3QATXlQcm9qZWN0AEV4aXQAc2V0X1Rhc2tSZXN1bHQAbV9Db250ZXh0
AGdldF9Ob3cAU1RfOGE2NGE3OGRjM2ExNGRmMTllNzZjMTEwNmUwMWMyYjguTXkAZ2V0X1RvZGF5
AGdldF9Bc3NlbWJseQAAMU0AeQAuAFIAZQBzAG8AdQByAGMAZQBzAC4ATQB5AFIAZQBzAG8AdQBy
AGMAZQBzAAAXUgBlAHAAbwByAHQAcwBQAGEAdABoAABHUgBlAHAAbwByAHQASABpAGQAZQBFAHgA
YwBlAHAAdABpAG8AbgBDAG8AbAB1AG0AbgBzAEkAbgB2AGUAbgB0AG8AcgB5AABPUgBlAHAAbwBy
AHQASABpAGQAZQBFAHgAYwBlAHAAdABpAG8AbgBDAG8AbAB1AG0AbgBzAFAAdQByAGMAaABhAHMA
ZQBPAHIAZABlAHIAAEFSAGUAcABvAHIAdABIAGkAZABlAEUAeABjAGUAcAB0AGkAbwBuAEMAbwBs
AHUAbQBuAHMAUwB0AGEAdAB1AHMAABFSAG8AdwBDAG8AdQBuAHQAABlDAHUAcwB0AG8AbQBlAHIA
QwBvAGQAZQAAIUMAdQBzAHQAbwBtAGUAcgBGAHUAbABsAE4AYQBtAGUAABdJAG4AdABlAGcAcgBh
AHQAaQBvAG4AAB9JAG4AdABlAGcAcgBhAHQAaQBvAG4AVAB5AHAAZQAAEUYAaQBsAGUATgBhAG0A
ZQAAgQtoAHQAdABwADoALwAvAGgAYQB5AGUAcwBzAHEAbABzAHYAcgAvAFIAZQBwAG8AcgB0AFMA
ZQByAHYAZQByAC8AUABhAGcAZQBzAC8AUgBlAHAAbwByAHQAVgBpAGUAdwBlAHIALgBhAHMAcAB4
AD8AJQAyAGYARABhAHQAYQBJAG4AdABlAHIAZwByAGEAdABpAG8AbgAlADIAZgBJAG4AdABlAGcA
cgBhAHQAaQBvAG4AQwBoAGEAcgBnAGUAcwBEAGUAZgBhAHUAbAB0AFIAZQBwAG8AcgB0AEkAbQBw
AG8AcgB0ACYAcgBzADoAQwBvAG0AbQBhAG4AZAA9AFIAZQBuAGQAZQByAAAVJgBSAG8AdwBDAG8A
dQBuAHQAPQAAIyYASQBuAHQAZQBnAHIAYQB0AGkAbwBuAE4AYQBtAGUAPQAAIyYASQBuAHQAZQBn
AHIAYQB0AGkAbwBuAFQAeQBwAGUAPQAAGSYAUgBlAHAAbwByAHQARABhAHQAZQA9AAAXJgBGAGkA
bABlAE4AYQBtAGUAcwA9AAAlJgBDAHUAcwB0AG8AbQBlAHIARgB1AGwAbABOAGEAbQBlAD0AAB0m
AEMAdQBzAHQAbwBtAGUAcgBDAG8AZABlAD0AADsmAEkAbgB0AGUAZwByAGEAdABpAG8AbgBTAHQA
YQB0AHUAcwA9AFMAdQBjAGMAZQBzAHMAZgB1AGwAAD8mAEQAaQBzAHAAbABhAHkARQB4AGMAZQBw
AHQAaQBvAG4AQwBvAGwAdQBtAG4AcwBTAHQAYQB0AHUAcwA9AABFJgBEAGkAcwBwAGwAYQB5AEUA
eABjAGUAcAB0AGkAbwBuAEMAbwBsAHUAbQBuAHMASQBuAHYAZQBuAHQAbwByAHkAPQAATSYARABp
AHMAcABsAGEAeQBFAHgAYwBlAHAAdABpAG8AbgBDAG8AbAB1AG0AbgBzAFAAdQByAGMAaABhAHMA
ZQBPAHIAZABlAHIAPQAAQyYAcgBzADoARgBvAHIAbQBhAHQAPQBFAHgAYwBlAGwAJgByAGMAOgBU
AG8AbwBsAGIAYQByAD0ARgBhAGwAcwBlAAAZUgBlAHAAbwByAHQAUwBlAHIAdgBlAHIAAANfAAAR
XwBSAGUAcABvAHIAdABfAAARTQBNAGQAZAB5AHkAeQB5AAAJSABIAG0AbQAACS4AeABsAHMAAPAV
a3bb7lJJtgsGym14wDAABCABAQgDIAABBSABARERBCABAQ4EIAEBAgUgAgEODgUgAQERRQcgBAEO
Dg4OBhUSJAESDAYVEiQBEggGFRIkARJlBhUSJAESIAQgABMABwABEm0RgKUFIAASgKkHIAIBDhKA
qQQAARwcBAABARwYBxAODg4ODg4ODg4ODg4SgJUSgJkOEYCdBSAAEoC1BSAAEoC5BiABEoC9HAMg
ABwEAAEOHAUAABGAnQMgAA4GAAMODg4OBQACDg4OBSAAEoDNBiABEoCVHAQgARwcBCABARwFAAIO
HA4FAAEOHQ4FIAIBDgIEIAECHAMgAAgEBwEeAAIeAAUQAQAeAAQKAR4ABAcBEwAGFRIkARMABwYV
EnEBEwAGFRJxARMAAhMABAoBEwAFIAEBEwAIt3pcVhk04IkIsD9ffxHVCjoIiYRdzYCAzJEEAAAA
AAQBAAAABwYVEiQBEgwHBhUSJAESCAcGFRIkARJlBwYVEiQBEiADBhJ5AwYSfQMGEhgCBhwCBggD
BhEoAwAAAQQAABIMBAAAEggEAAASZQQAABIgBAAAEnkEAAASfQUAAQESfQQAABIYBCAAEm0HEAEB
HgAeAAcwAQEBEB4ABAgAEgwECAASCAQIABJlBAgAEiAECAASeQQIABJ9BAgAEhgEKAATAAgBAAgA
AAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfOGE2NGE3
OGRjM2ExNGRmMTllNzZjMTEwNmUwMWMyYjgAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxOQAA
BQEAAQAAKQEAJGVkOWUxM2RmLTU4OTMtNDA5OS05YjBhLTQwYTJiYzQ3OGQ5OQAADAEABzEuMC4w
LjAAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNQEAVA4URnJhbWV3b3JrRGlzcGxheU5h
bWUSLk5FVCBGcmFtZXdvcmsgNC41CAEAAQAAAAAAGAEACk15VGVtcGxhdGUIMTEuMC4wLjAAAGEB
ADRTeXN0ZW0uV2ViLlNlcnZpY2VzLlByb3RvY29scy5Tb2FwSHR0cENsaWVudFByb3RvY29sEkNy
ZWF0ZV9fSW5zdGFuY2VfXxNEaXNwb3NlX19JbnN0YW5jZV9fAAAAEAEAC015LkNvbXB1dGVyAAAT
AQAOTXkuQXBwbGljYXRpb24AAAwBAAdNeS5Vc2VyAAATAQAOTXkuV2ViU2VydmljZXMAAAAAtAAA
AM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwg
VmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2
MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQ
QURQQURQtAAAAGBBAAAAAAAAAAAAAHpBAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAABsQQAAAAAA
AAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAA
AAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAA
AOwDAAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+
AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBh
AHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAA
sARMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAwADAANABi
ADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEA
bQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABf
ADgAYQA2ADQAYQA3ADgAZABjADMAYQAxADQAZABmADEAOQBlADcANgBjADEAMQAwADYAZQAwADEA
YwAyAGIAOAAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAA
AHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8AZgBmADUAZgBmADgANQA5ADAA
YwBkADEANAA4AGMAMABhADEAMwBiAGIAYQA4AGEAOQBhAGMAZgA1ADkAYgA5AC4AZABsAGwAAABI
ABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAA
IAAgADIAMAAxADkAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAA
AHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAFQAXwBmAGYANQBmAGYA
OAA1ADkAMABjAGQAMQA0ADgAYwAwAGEAMQAzAGIAYgBhADgAYQA5AGEAYwBmADUAOQBiADkALgBk
AGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBUAF8AOABhADYANABhADcA
OABkAGMAMwBhADEANABkAGYAMQA5AGUANwA2AGMAMQAxADAANgBlADAAMQBjADIAYgA4AAAANAAI
AAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgACAABAEEA
cwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAACMMQAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Succuess - Dashbaord and Integration Reporting\Email Report"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:Disabled="True"
          DTS:DTSID="{7E3F8847-BBE3-4658-93E9-B41D4A1C9563}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Email Report"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{1C14C91E-C8CF-4164-8C85-B3A818B6CECD}"
              SQLTask:SqlStatementSource="DECLARE @EmailCC&#x9;&#x9;VARCHAR(200) = ?&#xA;DECLARE @EmailTo&#x9;&#x9;VARCHAR(100) = ?&#xA;DECLARE @FilePath&#x9;&#x9;VARCHAR(200) = ?&#xA;DECLARE @CustomerCode&#x9;VARCHAR(50)  = ?&#xA;DECLARE @IntegrationType VARCHAR(200) = ?&#xA;DECLARE @Integration&#x9;VARCHAR(200) = ?&#xA;DECLARE @EmailSubject&#x9;VARCHAR(200)&#xA;&#xA;DECLARE @Body  VARCHAR(500) = 'Attached is your Hayes Software Systems Report for ' &#xA;DECLARE @FileName VARCHAR(200) &#xA;&#xA;&#xA;SELECT @Body = @Body + CAST(CAST(GETDATE() AS DATE) AS VARCHAR(50)),@FileName= @FilePath + @CustomerCode + '_' + @Integration + '_' + @IntegrationType + '_Report_' +&#xA;replicate('0', 2 - len(DATEPART(mm,GETDATE()))) + cast (DATEPART(mm,GETDATE()) as varchar) +&#xA;replicate('0', 2 - len(DATEPART(DD,GETDATE()))) + cast (DATEPART(DD,GETDATE()) as varchar) +&#xA;replicate('0', 4 - len(DATEPART(YYYY,GETDATE()))) + cast (DATEPART(YYYY,GETDATE()) as varchar) + '_' +&#xA;replicate('0', 2 - len(DATEPART(HH,GETDATE()))) + cast (DATEPART(HH,GETDATE()) as varchar) +&#xA;replicate('0', 2 - len(DATEPART(MI,GETDATE()))) + cast (DATEPART(MI,GETDATE()) as varchar) +&#xA;'.xls',@EmailSubject =  @CustomerCode + ' ' + @Integration + ' ' + @IntegrationType + ' Integration Report'&#xA;&#xA;IF @EmailCC IS NOT NULL&#xA;BEGIN&#xA; EXEC msdb.dbo.sp_send_dbmail @profile_name='TIPWEBIMEmail',&#xA; @recipients=@EmailTo,&#xA; @copy_recipients =@EmailCC,&#xA; @subject= @EmailSubject,&#xA; @file_attachments=@FileName,&#xA; @body=@Body&#xA;END &#xA;ELSE&#xA;BEGIN&#xA; EXEC msdb.dbo.sp_send_dbmail @profile_name='TIPWEBIMEmail',&#xA; @recipients=@EmailTo,&#xA; @copy_recipients =@EmailTo,&#xA; @subject=@EmailSubject,&#xA; @file_attachments=@FileName,&#xA; @body=@Body&#xA;END&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::EMailCC"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::EmailTo"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::ReportsPath"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="User::CustomerCode"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="User::IntegrationType"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="5"
                SQLTask:DtsVariableName="User::Integration"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Succuess - Dashbaord and Integration Reporting\Insert File Details in Dashboard"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{0167B069-7EF3-4AB7-9C32-CB86F5B8F6B3}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Insert File Details in Dashboard"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{3F5E885E-905E-466B-84BA-DF3DFCEE43D0}"
              SQLTask:SqlStatementSource="&#xA;DECLARE @CustomerName   VARCHAR(100) = ?&#xA;DECLARE @JobName    VARCHAR(100) = ?&#xA;DECLARE @IntergrationType  VARCHAR(100) = ?&#xA;DECLARE @FileSize    INT = ?&#xA;DECLARE @RootPath    VARCHAR(200) = ?&#xA;DECLARE @ExportPath    VARCHAR(100) = ?&#xA;DECLARE @ArchivePath   VARCHAR(100) = ?&#xA;DECLARE @FileName    VARCHAR(100) = ?&#xA;DECLARE @TaskFailure   BIT = ?&#xA;DECLARE @JobID     INT &#xA;DECLARE @TaskErrorMessage  VARCHAR(MAX) = 'Error In Creating File'&#xA;DECLARE @TaskName    VARCHAR(100) = 'Export'&#xA;&#xA;SELECT @JobID=id FROM FileExist WHERE Job_Name=@JobName AND client=@CustomerName AND category=@IntergrationType&#xA;&#xA;IF (@JobID IS NULL)&#xA;BEGIN&#xA;&#xA;  IF @TaskFailure=0&#xA;  BEGIN&#xA;   INSERT INTO TaskOnError&#xA;   (Client,JobName,Error_ID,StartTime,EndTime,Message,TaskName,LastModifiedDate,Category)&#xA;   VALUES&#xA;   (@CustomerName,@JobName,1,GETDATE(),GETDATE(),@TaskErrorMessage,@TaskName,GETDATE(),@IntergrationType)&#xA;  END &#xA;&#xA; INSERT INTO FileExist&#xA; (Client,Job_Name,FileCheck,FileName,FileSize,File_Rcvd_Date,Check_Time,Category)&#xA; VALUES&#xA; (@CustomerName,@JobName,CASE WHEN @TaskFailure = 1 THEN 0 ELSE 1 END,&#xA; ISNULL(@RootPath + @ExportPath + @ArchivePath + @FileName,'No File Was Created'),&#xA; ISNULL(@FileSize,0),GETDATE(),GETDATE(),@IntergrationType)&#xA;&#xA;END&#xA;ELSE&#xA;BEGIN&#xA;&#xA;  IF @TaskFailure=0&#xA;  BEGIN&#xA;   INSERT INTO TaskOnError&#xA;   (Client,JobName,Error_ID,StartTime,EndTime,Message,TaskName,LastModifiedDate,Category)&#xA;   VALUES&#xA;   (@CustomerName,@JobName,1,GETDATE(),GETDATE(),@TaskErrorMessage,@TaskName,GETDATE(),@IntergrationType)&#xA;  END &#xA;&#xA;  UPDATE FileExist&#xA;  SET filesize = @FileSize,&#xA;      filename = ISNULL(@RootPath + @ExportPath + @ArchivePath + @FileName,'No File Was Created'),&#xA;   file_rcvd_date = GETDATE(),&#xA;   check_time = GETDATE(),&#xA;   filecheck = CASE WHEN @TaskFailure = 1 THEN 0 ELSE 1 END&#xA;  WHERE id = @JobID&#xA;&#xA;END" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::CustomerCode"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::JobName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::IntegrationDataType"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="User::FileSize"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="131"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="User::RootPath"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="5"
                SQLTask:DtsVariableName="User::FilePath"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="6"
                SQLTask:DtsVariableName="User::ArchiveFilePath"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="7"
                SQLTask:DtsVariableName="User::FileName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="8"
                SQLTask:DtsVariableName="User::Success"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="17"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Succuess - Dashbaord and Integration Reporting\Insert RowStats"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{DC1C16EC-375D-42EC-9BB8-3F8A707B3B1F}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Insert RowStats"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{76645D34-473D-4E9D-8DC9-2FDA13261849}"
              SQLTask:SqlStatementSource="DECLARE @FileName VARCHAR(100) = ?&#xA;&#xA;INSERT INTO ETL.RawImportStats&#xA;(RawDataImportDate,FileName,TotalRowsInFile,TotalRowsImported,TotalRowsInETL)&#xA;&#xA;SELECT GETDATE() AS RawDataImportDate,@FileName AS FileName, MAX(RowID) AS TotalRowsInFile,COUNT(*) AS TotalRowsImported,MAX(RowID) AS TotalRowsInETL &#xA;FROM ETL.StagingInventories" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::FileName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Succuess - Dashbaord and Integration Reporting.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{5E216813-5B9F-4616-9559-00C7C80CC632}"
          DTS:From="Package\Succuess - Dashbaord and Integration Reporting\Create Report - Successful"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Succuess - Dashbaord and Integration Reporting\Insert File Details in Dashboard" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Succuess - Dashbaord and Integration Reporting.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{91C60B0A-12B1-48F6-8B2A-6AEA042CDABB}"
          DTS:EvalOp="3"
          DTS:Expression="@EmailSend == True"
          DTS:From="Package\Succuess - Dashbaord and Integration Reporting\Insert RowStats"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Succuess - Dashbaord and Integration Reporting\Email Report" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Succuess - Dashbaord and Integration Reporting.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{4A0385C2-A773-4B43-BA2B-26D048FF4232}"
          DTS:From="Package\Succuess - Dashbaord and Integration Reporting\Insert File Details in Dashboard"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Succuess - Dashbaord and Integration Reporting\Insert RowStats" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{7B157784-5CFB-4353-9BEF-2C7D2CA8E106}"
      DTS:From="Package\Import &amp; Stage Data"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\General Data Cleanup" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{CC15BC72-E806-44BE-8380-DAD2D09DC362}"
      DTS:From="Package\General Data Cleanup"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Setting Defaults" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 10]"
      DTS:CreationName=""
      DTS:DTSID="{6F904B3D-857D-4CA4-9175-7B19730269EE}"
      DTS:From="Package\Setting Defaults"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 10"
      DTS:To="Package\Exceptions" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{00D47A9F-DE15-4E2C-A317-A723EFCAD8ED}"
      DTS:From="Package\Exceptions"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Ref Data" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{0556D67B-AFF8-42F6-8329-C719C6C60E83}"
      DTS:From="Package\Succuess - Dashbaord and Integration Reporting"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Archive File Process" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{3DA2A0C0-45C2-47E0-8D2D-FDAB8ECC1A2E}"
      DTS:EvalOp="3"
      DTS:Expression="@Success == True"
      DTS:From="Package\Get File Information"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\Import &amp; Stage Data" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{45856F63-48B0-4A63-AF41-98EDED8215F1}"
      DTS:EvalOp="3"
      DTS:Expression="@Success == False"
      DTS:From="Package\Get File Information"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\Failure - Dashbaord and Integration Reporting" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 6]"
      DTS:CreationName=""
      DTS:DTSID="{F6B709B7-1B9C-4527-94C5-4090FF348600}"
      DTS:From="Package\Charges and Payments"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 6"
      DTS:To="Package\Succuess - Dashbaord and Integration Reporting" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 7]"
      DTS:CreationName=""
      DTS:DTSID="{CF5D741E-162E-4177-BF78-C2E897CDB49A}"
      DTS:From="Package\Ref Data"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 7"
      DTS:To="Package\Charges and Payments" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="137,42"
          Id="Package\Archive File Process\Archive File"
          TopLeft="64.8571428571431,24.2857142857146" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="269,85"
          Size="269,128"
          Id="Package\Archive File Process"
          TopLeft="2304.18650793651,972.861111111098" />
        <NodeLayout
          Size="121,42"
          Id="Package\Charges and Payments\Charges"
          TopLeft="68.9999999999993,18.5714285714286" />
        <NodeLayout
          Size="239,42"
          Id="Package\Charges and Payments\Charges Statified for Non Waved"
          TopLeft="75.714285714286,110.5" />
        <NodeLayout
          Size="128,42"
          Id="Package\Charges and Payments\Payments"
          TopLeft="297.857142857143,21.1428571428572" />
        <EdgeLayout
          Id="Package\Charges and Payments.PrecedenceConstraints[Constraint]"
          TopLeft="189.999999999999,40.8571428571429">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="107.857142857144,0"
              Start="0,0"
              End="100.357142857144,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="100.357142857144,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Charges and Payments.PrecedenceConstraints[Constraint 1]"
          TopLeft="361.857142857143,63.1428571428572">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-166.642857142857,47.3571428571428"
              Start="0,0"
              End="-166.642857142857,39.8571428571428">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.6785714285714" />
                  <mssgle:CubicBezierSegment
                    Point1="0,19.6785714285714"
                    Point2="0,23.6785714285714"
                    Point3="-4,23.6785714285714" />
                  <mssgle:LineSegment
                    End="-162.642857142857,23.6785714285714" />
                  <mssgle:CubicBezierSegment
                    Point1="-162.642857142857,23.6785714285714"
                    Point2="-166.642857142857,23.6785714285714"
                    Point3="-166.642857142857,27.6785714285714" />
                  <mssgle:LineSegment
                    End="-166.642857142857,39.8571428571428" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="219,42"
          Id="Package\Charges and Payments\Charges Statified for Wavied"
          TopLeft="85.5,191.25" />
        <EdgeLayout
          Id="Package\Charges and Payments.PrecedenceConstraints[Constraint 2]"
          TopLeft="195.107142857143,152.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38.75"
              Start="0,0"
              End="0,31.25">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.25" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="455,284"
          Size="455,327"
          Id="Package\Charges and Payments"
          TopLeft="1066.77777777778,871.785714285714" />
        <NodeLayout
          Size="153,42"
          Id="Package\Exceptions\ChargeAmount"
          TopLeft="408.857142857143,169.857142857143" />
        <NodeLayout
          Size="160,42"
          Id="Package\Exceptions\Mark Exceptions"
          TopLeft="209.857142857143,99.1428571428571" />
        <NodeLayout
          Size="122,42"
          Id="Package\Exceptions\SiteUIDs"
          TopLeft="66,178.428571428572" />
        <NodeLayout
          Size="128,42"
          Id="Package\Exceptions\StudentID"
          TopLeft="36,25.5714285714286" />
        <NodeLayout
          Size="160,42"
          Id="Package\Exceptions\TransactionDate"
          TopLeft="416,22.7142857142858" />
        <NodeLayout
          Size="187,42"
          Id="Package\Exceptions\TransactionReference"
          TopLeft="196,21.2857142857148" />
        <EdgeLayout
          Id="Package\Exceptions.PrecedenceConstraints[Constraint]"
          TopLeft="100,67.5714285714286">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="151.857142857143,31.5714285714285"
              Start="0,0"
              End="151.857142857143,24.0714285714285">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.7025761124121" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.7025761124121"
                    Point2="0,20.7025761124121"
                    Point3="4,20.7025761124121" />
                  <mssgle:LineSegment
                    End="147.857142857143,20.7025761124121" />
                  <mssgle:CubicBezierSegment
                    Point1="147.857142857143,20.7025761124121"
                    Point2="151.857142857143,20.7025761124121"
                    Point3="151.857142857143,24.7025761124121" />
                  <mssgle:LineSegment
                    End="151.857142857143,24.0714285714285" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="50.6241183035715,25.7025761124121,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Exceptions.PrecedenceConstraints[Constraint 1]"
          TopLeft="496,64.7142857142858">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-206.142857142857,34.4285714285713"
              Start="0,0"
              End="-206.142857142857,26.9285714285713">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13.2142857142857" />
                  <mssgle:CubicBezierSegment
                    Point1="0,13.2142857142857"
                    Point2="0,17.2142857142857"
                    Point3="-4,17.2142857142857" />
                  <mssgle:LineSegment
                    End="-202.142857142857,17.2142857142857" />
                  <mssgle:CubicBezierSegment
                    Point1="-202.142857142857,17.2142857142857"
                    Point2="-206.142857142857,17.2142857142857"
                    Point3="-206.142857142857,21.2142857142857" />
                  <mssgle:LineSegment
                    End="-206.142857142857,26.9285714285713" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-128.375881696429,22.2142857142857,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Exceptions.PrecedenceConstraints[Constraint 2]"
          TopLeft="485.357142857143,169.857142857143">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-195.5,-28.7142857142857"
              Start="0,0"
              End="-195.5,-21.2142857142857">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-10.3571428571428" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-10.3571428571428"
                    Point2="0,-14.3571428571428"
                    Point3="-4,-14.3571428571428" />
                  <mssgle:LineSegment
                    End="-191.5,-14.3571428571428" />
                  <mssgle:CubicBezierSegment
                    Point1="-191.5,-14.3571428571428"
                    Point2="-195.5,-14.3571428571428"
                    Point3="-195.5,-18.3571428571428" />
                  <mssgle:LineSegment
                    End="-195.5,-21.2142857142857" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-123.054453125,-9.3571428571428,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Exceptions.PrecedenceConstraints[Constraint 3]"
          TopLeft="289.678571428572,63.2857142857148">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,35.8571428571423"
              Start="0,0"
              End="0,28.3571428571423">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.3571428571423" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-25.304453125,8.37388392857115,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Exceptions.PrecedenceConstraints[Constraint 4]"
          TopLeft="127,178.428571428572">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="137.52380952381,-37.2857142857144"
              Start="0,0"
              End="137.52380952381,-29.7857142857144">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-18.1499292786422" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-18.1499292786422"
                    Point2="0,-22.1499292786422"
                    Point3="4,-22.1499292786422" />
                  <mssgle:LineSegment
                    End="133.52380952381,-22.1499292786422" />
                  <mssgle:CubicBezierSegment
                    Point1="133.52380952381,-22.1499292786422"
                    Point2="137.52380952381,-22.1499292786422"
                    Point3="137.52380952381,-26.1499292786422" />
                  <mssgle:LineSegment
                    End="137.52380952381,-29.7857142857144" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="43.457451636905,-17.1499292786422,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="600,292"
          Size="600,335"
          Id="Package\Exceptions"
          TopLeft="1784.17857142857,380.345238095238" />
        <NodeLayout
          Size="137,42"
          Id="Package\Failure - Dashbaord and Integration Reporting\Archive File"
          TopLeft="87.7999900658929,170.111113691684" />
        <NodeLayout
          Size="191,42"
          Id="Package\Failure - Dashbaord and Integration Reporting\Create Report - Failure"
          TopLeft="59,20" />
        <NodeLayout
          Size="143,42"
          Id="Package\Failure - Dashbaord and Integration Reporting\Email Report"
          TopLeft="83,249" />
        <NodeLayout
          Size="232,42"
          Id="Package\Failure - Dashbaord and Integration Reporting\Insert File Details in Dashboard"
          TopLeft="42.8571428571429,93.571428571428" />
        <EdgeLayout
          Id="Package\Failure - Dashbaord and Integration Reporting.PrecedenceConstraints[Constraint]"
          TopLeft="156.678571428571,62">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31.571428571428"
              Start="0,0"
              End="0,24.071428571428">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.071428571428" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Failure - Dashbaord and Integration Reporting.PrecedenceConstraints[Constraint 1]"
          TopLeft="155.399995032946,212.111113691684">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,36.8888863083159"
              Start="0,0"
              End="0,29.3888863083159">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.3888863083159" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,6.69444315415795,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Failure - Dashbaord and Integration Reporting.PrecedenceConstraints[Constraint 2]"
          TopLeft="157.578566461518,135.571428571428">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,34.5396851202561"
              Start="0,0"
              End="0,27.0396851202561">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.0396851202561" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="336,346"
          Size="336,389"
          Id="Package\Failure - Dashbaord and Integration Reporting"
          TopLeft="475.273809523807,406.75" />
        <NodeLayout
          Size="142,42"
          Id="Package\General Data Cleanup\R and L Trim"
          TopLeft="57.7499999999993,54.9285714285716" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="253,235"
          Size="253,278"
          Id="Package\General Data Cleanup"
          TopLeft="1502.77380952381,25.1309523809518" />
        <NodeLayout
          Size="150,42"
          Id="Package\Get File Information\Get File Name"
          TopLeft="36,86.1785714285714" />
        <NodeLayout
          Size="133,42"
          Id="Package\Get File Information\Set UserID"
          TopLeft="225.035714285716,19.571428571428" />
        <NodeLayout
          Size="163,42"
          Id="Package\Get File Information\Truncate Staging"
          TopLeft="35,18" />
        <EdgeLayout
          Id="Package\Get File Information.PrecedenceConstraints[Constraint]"
          TopLeft="113.75,60">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,26.1785714285714"
              Start="0,0"
              End="0,18.6785714285714">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.6785714285714" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="370,222"
          Size="370,265"
          Id="Package\Get File Information"
          TopLeft="457.904761904762,39.1785714285714" />
        <NodeLayout
          Size="178,42"
          Id="Package\Import &amp; Stage Data\Import File - Staging"
          TopLeft="44.8571428571429,62.0000000000001" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="266,229"
          Size="266,272"
          Id="Package\Import &amp; Stage Data"
          TopLeft="1070.91666666667,30.6190476190473" />
        <NodeLayout
          Size="148,42"
          Id="Package\Ref Data\Charge Types"
          TopLeft="52,27" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="458,273"
          Size="458,316"
          Id="Package\Ref Data"
          TopLeft="1068.33333333333,390" />
        <NodeLayout
          Size="172,42"
          Id="Package\Setting Defaults\Payment Ammount"
          TopLeft="17,158" />
        <NodeLayout
          Size="159,42"
          Id="Package\Setting Defaults\PaymentMethod"
          TopLeft="27,20.8571428571428" />
        <NodeLayout
          Size="116,42"
          Id="Package\Setting Defaults\Waived"
          TopLeft="45.5714285714289,89.4285714285714" />
        <EdgeLayout
          Id="Package\Setting Defaults.PrecedenceConstraints[Constraint]"
          TopLeft="105.035714285714,62.8571428571428">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,26.5714285714286"
              Start="0,0"
              End="0,19.0714285714286">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.0714285714286" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Setting Defaults.PrecedenceConstraints[Constraint 1]"
          TopLeft="103.285714285714,131.428571428571">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,26.5714285714286"
              Start="0,0"
              End="0,19.0714285714286">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.0714285714286" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="212,256"
          Size="212,299"
          Id="Package\Setting Defaults"
          TopLeft="1973.04761904762,19.0476190476196" />
        <NodeLayout
          Size="211,42"
          Id="Package\Succuess - Dashbaord and Integration Reporting\Create Report - Successful"
          TopLeft="43,15" />
        <NodeLayout
          Size="143,42"
          Id="Package\Succuess - Dashbaord and Integration Reporting\Email Report"
          TopLeft="88,237" />
        <NodeLayout
          Size="232,42"
          Id="Package\Succuess - Dashbaord and Integration Reporting\Insert File Details in Dashboard"
          TopLeft="38.6785714285716,79.928571428572" />
        <NodeLayout
          Size="157,42"
          Id="Package\Succuess - Dashbaord and Integration Reporting\Insert RowStats"
          TopLeft="78,156" />
        <EdgeLayout
          Id="Package\Succuess - Dashbaord and Integration Reporting.PrecedenceConstraints[Constraint]"
          TopLeft="151.589285714286,57">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,22.928571428572"
              Start="0,0"
              End="0,15.428571428572">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,15.428571428572" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Succuess - Dashbaord and Integration Reporting.PrecedenceConstraints[Constraint 1]"
          TopLeft="158,198">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,39"
              Start="0,0"
              End="0,31.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,7.75,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Succuess - Dashbaord and Integration Reporting.PrecedenceConstraints[Constraint 2]"
          TopLeft="155.589285714286,121.928571428572">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,34.071428571428"
              Start="0,0"
              End="0,26.571428571428">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.571428571428" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="340,333"
          Size="340,376"
          Id="Package\Succuess - Dashbaord and Integration Reporting"
          TopLeft="1787.9880952381,848.690476190474" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="1336.91666666667,165.375">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="165.85714285714,0"
              Start="0,0"
              End="158.35714285714,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="158.35714285714,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="1755.77380952381,166.339285714286">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="217.27380952381,0"
              Start="0,0"
              End="209.77380952381,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="209.77380952381,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 10]"
          TopLeft="2081.6130952381,318.04761904762">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,62.2976190476185"
              Start="0,0"
              End="0,54.7976190476185">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,54.7976190476185" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="1784.17857142857,547.922619047619">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-257.84523809524,0"
              Start="0,0"
              End="-250.34523809524,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-250.34523809524,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="2127.9880952381,1036.77579365079">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="176.19841269841,0"
              Start="0,0"
              End="168.69841269841,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="168.69841269841,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="827.904761904762,169.148809523809">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="243.011904761908,0"
              Start="0,0"
              End="235.511904761908,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="235.511904761908,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="109.755952380954,5,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="643.089285714284,304.178571428571">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,102.571428571429"
              Start="0,0"
              End="0,95.0714285714286">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,95.0714285714286" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,39.5357142857143,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 6]"
          TopLeft="1521.77777777778,1035.98809523809">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="266.21031746032,0"
              Start="0,0"
              End="258.71031746032,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="258.71031746032,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 7]"
          TopLeft="1295.80555555556,706">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,165.785714285714"
              Start="0,0"
              End="0,158.285714285714">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,158.285714285714" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Charges and Payments\Charges">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="156,42"
          Id="Package\Charges and Payments\Charges\Lookup SiteUID"
          TopLeft="166,323" />
        <NodeLayout
          Size="190,42"
          Id="Package\Charges and Payments\Charges\Lookup ChargeTypeID"
          TopLeft="154,479" />
        <NodeLayout
          Size="158,42"
          Id="Package\Charges and Payments\Charges\Derived Column"
          TopLeft="153,177" />
        <NodeLayout
          Size="167,42"
          Id="Package\Charges and Payments\Charges\Lookup StudentID"
          TopLeft="160,396" />
        <NodeLayout
          Size="144,42"
          Id="Package\Charges and Payments\Charges\Get Changes"
          TopLeft="160,102" />
        <NodeLayout
          Size="195,42"
          Id="Package\Charges and Payments\Charges\Check if Charges Exists"
          TopLeft="140,244" />
        <NodeLayout
          Size="147,42"
          Id="Package\Charges and Payments\Charges\Insert Chages"
          TopLeft="170.0000055631,575.066666508251" />
        <EdgeLayout
          Id="Package\Charges and Payments\Charges.Paths[Lookup Match Output]"
          TopLeft="246.25,438">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,41"
              Start="0,0"
              End="0,33.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,10.9453125,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Charges and Payments\Charges.Paths[Derived Column Output]"
          TopLeft="234.75,219">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,25"
              Start="0,0"
              End="0,17.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Charges and Payments\Charges.Paths[OLE DB Source Output]"
          TopLeft="232,144">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33"
              Start="0,0"
              End="0,25.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Charges and Payments\Charges.Paths[Lookup No Match Output]"
          TopLeft="240.75,286">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,37"
              Start="0,0"
              End="0,29.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,8.9453125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Charges and Payments\Charges.Paths[Lookup Match Output1]"
          TopLeft="243.75,365">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31"
              Start="0,0"
              End="0,23.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,5.9453125,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Charges and Payments\Charges.Paths[Lookup Match Output2]"
          TopLeft="246.25000278155,521">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,54.066666508251"
              Start="0,0"
              End="0,46.566666508251">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,46.566666508251" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,17.4786457541255,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Charges and Payments\Charges\Lookup SiteUID">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[tblTechSites]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Charges and Payments\Charges\Lookup ChargeTypeID">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[tblUnvChargeTypes]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Charges and Payments\Charges\Lookup StudentID">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[tblStudents]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Charges and Payments\Charges\Get Changes">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Charges and Payments\Charges\Check if Charges Exists">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:boolean">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:int">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Charges and Payments\Charges\Insert Chages">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Charges and Payments\Payments">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="153,42"
          Id="Package\Charges and Payments\Payments\Insert Payment"
          TopLeft="455,461" />
        <NodeLayout
          Size="210,42"
          Id="Package\Charges and Payments\Payments\Derived Column Payments"
          TopLeft="435,232" />
        <NodeLayout
          Size="195,42"
          Id="Package\Charges and Payments\Payments\Check if Charges Exists"
          TopLeft="443,305" />
        <EdgeLayout
          Id="Package\Charges and Payments\Payments.Paths[Derived Column Output]"
          TopLeft="540.25,274">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31"
              Start="0,0"
              End="0,23.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="197,42"
          Id="Package\Charges and Payments\Payments\Check if Payment Exists"
          TopLeft="436,376" />
        <EdgeLayout
          Id="Package\Charges and Payments\Payments.Paths[Lookup Match Output]"
          TopLeft="537.5,347">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,29"
              Start="0,0"
              End="0,21.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,4.9453125,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Charges and Payments\Payments.Paths[Lookup No Match Output]"
          TopLeft="533,418">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,43"
              Start="0,0"
              End="0,35.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,35.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,11.9453125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="149,42"
          Id="Package\Charges and Payments\Payments\Get Payments"
          TopLeft="463,132" />
        <EdgeLayout
          Id="Package\Charges and Payments\Payments.Paths[OLE DB Source Output]"
          TopLeft="538.75,174">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,58"
              Start="0,0"
              End="0,50.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,50.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Charges and Payments\Payments\Insert Payment">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Exceptions\ChargeAmount">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="161,42"
          Id="Package\Exceptions\ChargeAmount\Data Conversion"
          TopLeft="309,259" />
        <NodeLayout
          Size="163,42"
          Id="Package\Exceptions\ChargeAmount\Insert Exceptions"
          TopLeft="303,332" />
        <NodeLayout
          Size="139,42"
          Id="Package\Exceptions\ChargeAmount\Set Defaults"
          TopLeft="319,187" />
        <NodeLayout
          Size="184,42"
          Id="Package\Exceptions\ChargeAmount\Bad Charge Amounts"
          TopLeft="296,103" />
        <EdgeLayout
          Id="Package\Exceptions\ChargeAmount.Paths[OLE DB Source Output]"
          TopLeft="388.25,145">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,42"
              Start="0,0"
              End="0,34.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Exceptions\ChargeAmount.Paths[Derived Column Output]"
          TopLeft="389,229">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,30"
              Start="0,0"
              End="0,22.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Exceptions\ChargeAmount.Paths[Data Conversion Output]"
          TopLeft="387,301">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31"
              Start="0,0"
              End="0,23.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Exceptions\ChargeAmount\Insert Exceptions">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Exceptions\ChargeAmount\Bad Charge Amounts">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Exceptions\SiteUIDs">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="139,42"
          Id="Package\Exceptions\SiteUIDs\Set Defaults"
          TopLeft="517,265" />
        <NodeLayout
          Size="156,42"
          Id="Package\Exceptions\SiteUIDs\Lookup SiteUID"
          TopLeft="511,413" />
        <NodeLayout
          Size="161,42"
          Id="Package\Exceptions\SiteUIDs\Data Conversion"
          TopLeft="510,336" />
        <NodeLayout
          Size="137,42"
          Id="Package\Exceptions\SiteUIDs\Bad SiteIDs"
          TopLeft="513,183" />
        <NodeLayout
          Size="163,42"
          Id="Package\Exceptions\SiteUIDs\Insert Exceptions"
          TopLeft="507,498" />
        <EdgeLayout
          Id="Package\Exceptions\SiteUIDs.Paths[OLE DB Source Output]"
          TopLeft="584,225">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,40"
              Start="0,0"
              End="0,32.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,32.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Exceptions\SiteUIDs.Paths[Lookup No Match Output]"
          TopLeft="588.75,455">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,43"
              Start="0,0"
              End="0,35.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,35.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,11.9453125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Exceptions\SiteUIDs.Paths[Derived Column Output]"
          TopLeft="588.5,307">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,29"
              Start="0,0"
              End="0,21.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Exceptions\SiteUIDs.Paths[Data Conversion Output]"
          TopLeft="589.75,378">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,35"
              Start="0,0"
              End="0,27.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Exceptions\SiteUIDs\Lookup SiteUID">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[tblTechSites]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Exceptions\SiteUIDs\Bad SiteIDs">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Exceptions\StudentID">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="163,42"
          Id="Package\Exceptions\StudentID\Insert Exceptions"
          TopLeft="600,513" />
        <NodeLayout
          Size="139,42"
          Id="Package\Exceptions\StudentID\Set Defaults"
          TopLeft="616,368" />
        <NodeLayout
          Size="133,42"
          Id="Package\Exceptions\StudentID\StudentIDs"
          TopLeft="625,205" />
        <NodeLayout
          Size="167,42"
          Id="Package\Exceptions\StudentID\Lookup StudentID"
          TopLeft="607,280" />
        <NodeLayout
          Size="161,42"
          Id="Package\Exceptions\StudentID\Data Conversion"
          TopLeft="606,440" />
        <EdgeLayout
          Id="Package\Exceptions\StudentID.Paths[OLE DB Source Output]"
          TopLeft="691,247">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33"
              Start="0,0"
              End="0,25.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Exceptions\StudentID.Paths[Lookup No Match Output]"
          TopLeft="688,322">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,46"
              Start="0,0"
              End="0,38.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,38.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,13.4453125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Exceptions\StudentID.Paths[Derived Column Output]"
          TopLeft="686,410">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,30"
              Start="0,0"
              End="0,22.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Exceptions\StudentID.Paths[Data Conversion Output]"
          TopLeft="684,482">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31"
              Start="0,0"
              End="0,23.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Exceptions\StudentID\Lookup StudentID">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[tblStudents]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Exceptions\StudentID\StudentIDs">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Exceptions\StudentID\Insert Exceptions">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Exceptions\TransactionDate">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="161,42"
          Id="Package\Exceptions\TransactionDate\Data Conversion"
          TopLeft="309,259" />
        <NodeLayout
          Size="163,42"
          Id="Package\Exceptions\TransactionDate\Insert Exceptions"
          TopLeft="303,332" />
        <NodeLayout
          Size="139,42"
          Id="Package\Exceptions\TransactionDate\Set Defaults"
          TopLeft="319,187" />
        <NodeLayout
          Size="191,42"
          Id="Package\Exceptions\TransactionDate\Bad Transaction Dates"
          TopLeft="296,103" />
        <EdgeLayout
          Id="Package\Exceptions\TransactionDate.Paths[OLE DB Source Output]"
          TopLeft="390,145">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,42"
              Start="0,0"
              End="0,34.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Exceptions\TransactionDate.Paths[Derived Column Output]"
          TopLeft="389,229">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,30"
              Start="0,0"
              End="0,22.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Exceptions\TransactionDate.Paths[Data Conversion Output]"
          TopLeft="387,301">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31"
              Start="0,0"
              End="0,23.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Exceptions\TransactionDate\Insert Exceptions">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Exceptions\TransactionDate\Bad Transaction Dates">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Exceptions\TransactionReference">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="161,42"
          Id="Package\Exceptions\TransactionReference\Data Conversion"
          TopLeft="309,259" />
        <NodeLayout
          Size="163,42"
          Id="Package\Exceptions\TransactionReference\Insert Exceptions"
          TopLeft="303,332" />
        <NodeLayout
          Size="139,42"
          Id="Package\Exceptions\TransactionReference\Set Defaults"
          TopLeft="319,187" />
        <NodeLayout
          Size="210,42"
          Id="Package\Exceptions\TransactionReference\Bad TransactionReference"
          TopLeft="291,100" />
        <EdgeLayout
          Id="Package\Exceptions\TransactionReference.Paths[OLE DB Source Output]"
          TopLeft="392.25,142">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,45"
              Start="0,0"
              End="0,37.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,37.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Exceptions\TransactionReference.Paths[Derived Column Output]"
          TopLeft="389,229">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,30"
              Start="0,0"
              End="0,22.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Exceptions\TransactionReference.Paths[Data Conversion Output]"
          TopLeft="387,301">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31"
              Start="0,0"
              End="0,23.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Exceptions\TransactionReference\Insert Exceptions">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Exceptions\TransactionReference\Bad TransactionReference">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Import &amp; Stage Data\Import File - Staging">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="168,42"
          Id="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging"
          TopLeft="435,487" />
        <NodeLayout
          Size="158,42"
          Id="Package\Import &amp; Stage Data\Import File - Staging\Derived Column"
          TopLeft="438,148" />
        <NodeLayout
          Size="133,42"
          Id="Package\Import &amp; Stage Data\Import File - Staging\Row Count"
          TopLeft="455,327" />
        <NodeLayout
          Size="218,42"
          Id="Package\Import &amp; Stage Data\Import File - Staging\Generate File Row Numbers"
          TopLeft="415,404" />
        <NodeLayout
          Size="161,42"
          Id="Package\Import &amp; Stage Data\Import File - Staging\Data Conversion"
          TopLeft="442,228" />
        <NodeLayout
          Size="215,42"
          Id="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source"
          TopLeft="414,55" />
        <EdgeLayout
          Id="Package\Import &amp; Stage Data\Import File - Staging.Paths[Row Count Output 1]"
          TopLeft="522.75,369">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,35"
              Start="0,0"
              End="0,27.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import &amp; Stage Data\Import File - Staging.Paths[Output 0]"
          TopLeft="521.5,446">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,41"
              Start="0,0"
              End="0,33.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import &amp; Stage Data\Import File - Staging.Paths[Excel Source Output]"
          TopLeft="519.25,97">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,51"
              Start="0,0"
              End="0,43.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,43.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import &amp; Stage Data\Import File - Staging.Paths[Derived Column Output]"
          TopLeft="519.75,190">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38"
              Start="0,0"
              End="0,30.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import &amp; Stage Data\Import File - Staging.Paths[Data Conversion Output]"
          TopLeft="522,270">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,57"
              Start="0,0"
              End="0,49.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,49.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Import &amp; Stage Data\Import File - Staging\Insert into Staging">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Import &amp; Stage Data\Import File - Staging\Get Data from Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Ref Data\Charge Types">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="169,42"
          Id="Package\Ref Data\Charge Types\Get Charge Types"
          TopLeft="620,84" />
        <NodeLayout
          Size="119,42"
          Id="Package\Ref Data\Charge Types\Defaults"
          TopLeft="643,164" />
        <EdgeLayout
          Id="Package\Ref Data\Charge Types.Paths[OLE DB Source Output]"
          TopLeft="703.5,126">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38"
              Start="0,0"
              End="0,30.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="211,42"
          Id="Package\Ref Data\Charge Types\Lookup ChargeType Exists"
          TopLeft="594,243" />
        <EdgeLayout
          Id="Package\Ref Data\Charge Types.Paths[Derived Column Output]"
          TopLeft="701,206">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,37"
              Start="0,0"
              End="0,29.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="175,42"
          Id="Package\Ref Data\Charge Types\Insert ChargeTypes"
          TopLeft="612,349" />
        <EdgeLayout
          Id="Package\Ref Data\Charge Types.Paths[Lookup No Match Output]"
          TopLeft="699.5,285">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,64"
              Start="0,0"
              End="0,56.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,56.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,22.4453125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Ref Data\Charge Types\Get Charge Types">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Ref Data\Charge Types\Lookup ChargeType Exists">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:boolean">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[tblUnvChargeTypes]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:int">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Ref Data\Charge Types\Insert ChargeTypes">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Charges and Payments\Payments\Check if Charges Exists">
    <Properties>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q2:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q3:int">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q4:boolean">false</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Charges and Payments\Payments\Check if Payment Exists">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:boolean">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[tblUnvChargePayments]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:int">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Charges and Payments\Payments\Get Payments">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Charges and Payments\Charges Statified for Wavied">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="177,42"
          Id="Package\Charges and Payments\Charges Statified for Wavied\Get Waived Chages"
          TopLeft="606,125" />
        <NodeLayout
          Size="195,42"
          Id="Package\Charges and Payments\Charges Statified for Wavied\Check if Charges Exists"
          TopLeft="597,308" />
        <NodeLayout
          Size="158,42"
          Id="Package\Charges and Payments\Charges Statified for Wavied\Derived Column"
          TopLeft="613,213" />
        <EdgeLayout
          Id="Package\Charges and Payments\Charges Statified for Wavied.Paths[OLE DB Source Output]"
          TopLeft="693.25,167">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,46"
              Start="0,0"
              End="0,38.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,38.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Charges and Payments\Charges Statified for Wavied.Paths[Derived Column Output]"
          TopLeft="693.25,255">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,53"
              Start="0,0"
              End="0,45.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,45.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="159,42"
          Id="Package\Charges and Payments\Charges Statified for Wavied\Update Charges"
          TopLeft="611,395" />
        <EdgeLayout
          Id="Package\Charges and Payments\Charges Statified for Wavied.Paths[Lookup Match Output]"
          TopLeft="692.5,350">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,45"
              Start="0,0"
              End="0,37.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,37.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,12.9453125,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Charges and Payments\Charges Statified for Wavied\Get Waived Chages">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Charges and Payments\Charges Statified for Wavied\Check if Charges Exists">
    <Properties>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q2:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q3:int">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q4:boolean">false</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>