<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="5/15/2015 4:49:02 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="NBLAKELY-HPLT"
  DTS:CreatorName="HAYESSOFT\nblakely"
  DTS:DTSID="{8CD9B3BB-C331-42AE-A31B-63D4809A3626}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="13.0.2165.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="IM_Conversion_DistrictCampusDistributions"
  DTS:PackageType="5"
  DTS:VersionBuild="437"
  DTS:VersionGUID="{284B99B2-16CB-4B4E-A375-294A8AA08B1D}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[ConvDB]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{BACA6916-2A2E-4D6E-A01D-FFD222A74312}"
      DTS:ObjectName="ConvDB">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[User::ConvDB]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[User::Server]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=NBLAKELY-HPLT\SQL2014;Initial Catalog=TipWeb_IM_ETL_ClevelandHeights;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;Application Name=SSIS-IM_DistrictCampusDistributions-{BACA6916-2A2E-4D6E-A01D-FFD222A74312}NBLAKELY-HPLT.TipWeb_Northeast0510;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[RejectFile]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{EFFD0C8A-003C-4DE1-A26E-5A66748D96C9}"
      DTS:ObjectName="RejectFile">
      <DTS:PropertyExpression
        DTS:Name="ExcelFilePath">@[User::RejectFile]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=E:\DataConversion\IM\ClevelandHeights\RejectFile_20170314.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[StagingDB]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{28E23B64-105B-4637-B510-B9ED2E6978AC}"
      DTS:ObjectName="StagingDB">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[User::StagingDB]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[User::Server]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=NBLAKELY-HPLT\SQL2014;Initial Catalog=TIPWeb_StagingIM_ClevelandHeights_0313;Provider=SQLNCLI11;Integrated Security=SSPI;Application Name=SSIS-IMConversion_DistrictCampusDistributions-{28E23B64-105B-4637-B510-B9ED2E6978AC}HayesConversion.TipWeb_StagingIM_Hampton;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B16C52B3-93B4-4C3D-9CDF-ACCB4FDD27AB}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ConvDB">
      <DTS:VariableValue
        DTS:DataType="8">TipWeb_IM_ETL_ClevelandHeights</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C02B7BA4-956E-4397-A469-1486F68E2C6C}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::RejectFilePath]  + &quot;\\RejectFile_&quot; +&#xA;(DT_STR,4,1252) DatePart(&quot;yyyy&quot;,getdate())+&#xA;Right(&quot;0&quot; + (DT_STR,4,1252) DatePart(&quot;m&quot;,getdate()),2) +&#xA;&#xA;Right(&quot;0&quot; + (DT_STR,4,1252) DatePart(&quot;d&quot;,getdate()),2) +&quot;.xlsx&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="RejectFile">
      <DTS:VariableValue
        DTS:DataType="8">E:\DataConversion\IM\ClevelandHeights\RejectFile_20170314.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1550410C-1E5B-469F-B835-7465308F43AE}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="RejectFilePath">
      <DTS:VariableValue
        DTS:DataType="8">E:\DataConversion\IM\ClevelandHeights</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EE382F2E-3F38-4EAD-B572-C640337C336E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="RejectTemplate">
      <DTS:VariableValue
        DTS:DataType="8">E:\DataConversion\IM\ReportTemplates\IMReportTemplate.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DAEADECF-1576-4135-80B1-E4974744F398}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Server">
      <DTS:VariableValue
        DTS:DataType="8">NBLAKELY-HPLT\SQL2014</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DF0A8FA1-50DE-40DD-9FBC-5352F5A77E9C}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="StagingDB">
      <DTS:VariableValue
        DTS:DataType="8">TIPWeb_StagingIM_ClevelandHeights_0313</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{79131967-A573-4E98-AE32-67CC87DB078D}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Cleanup Double Quotes"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{C5927FEF-B935-4C8A-B227-2E3405974BDB}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Cleanup Double Quotes"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="3">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{BACA6916-2A2E-4D6E-A01D-FFD222A74312}"
              SQLTask:SqlStatementSource="&#xA;Update _DC_DistrictIM set SLC = replace(SLC, '&quot;', '')&#xA;GO&#xA;Update _DC_DistrictIM set Title = replace(Title, '&quot;', '')&#xA;GO&#xA;Update _DC_DistrictIM set MaterialType = replace(MaterialType, '&quot;', '')&#xA;GO&#xA;Update _DC_DistrictIM set Notes = replace(Notes, '&quot;', '')&#xA;GO&#xA;&#xA;&#xA;Update _DC_CampusIM set SLC = replace(SLC, '&quot;', '')&#xA;GO&#xA;Update _DC_CampusIM set Title = replace(Title, '&quot;', '')&#xA;GO&#xA;Update _DC_CampusIM set MaterialType = replace(MaterialType, '&quot;', '')&#xA;GO&#xA;Update _DC_CampusIM set Notes = replace(Notes, '&quot;', '')&#xA;GO&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Create District From Campus"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{7B218276-06E3-456D-8CD3-3A0439EF4C99}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create District From Campus"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="3">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{BACA6916-2A2E-4D6E-A01D-FFD222A74312}"
              SQLTask:SqlStatementSource="INSERT INTO [_DC_DistrictIM]&#xA;( [SLC] , [ISBN], [Title], [Publisher], [Price],&#xA;&#x9;[MaterialType],[Edition],[Grade],[Notes],[SubjectArea],[Expires],&#xA;&#x9;[Author],[FundingSource] ,[BinNum],[Copyright] &#xA;)&#xA; &#xA; select distinct [SLC],[ISBN],[Title],[Publisher],[Price],&#xA;&#x9;[MaterialType],[Edition],[Grade],[Notes],[SubjectArea],[Expires],&#xA;&#x9;[Author],[FundingSource],[BinNum],[Copyright]&#xA;&#x9;&#xA;from _DC_CampusIM&#xA;where ltrim(rtrim(ISBN)) &lt;&gt; ''&#xA;AND CampusOwned = 0&#xA;and ltrim(rtrim(ISBN)) not in (select  ltrim(rtrim(ISBN))&#xA; from [_DC_DistrictIM])&#xA;&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Drop Create Tables"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:Disabled="True"
          DTS:DTSID="{34164480-9163-4630-8985-91B7E7AEA3E8}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Drop Create Tables"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="4">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{BACA6916-2A2E-4D6E-A01D-FFD222A74312}"
              SQLTask:SqlStatementSource="IF EXISTS (SELECT * FROM sys.tables WHERE name  = '_DC_CampusIM')&#xA;&#x9;drop TABLE _DC_CampusIM&#xA;GO&#xA;CREATE TABLE [dbo].[_DC_CampusIM] (&#xA;&#x9;[CampusID] [varchar](50) NULL,&#xA;&#x9;[QtyDistributed] [varchar](50) NULL,&#xA;&#x9;[DistributionDate] varchar(50), &#xA;&#x9;[SLC] [varchar](50) NULL,&#xA;&#x9;[ISBN] [varchar](50) NULL,&#xA;&#x9;[Title] [varchar](1000) NULL,&#xA;&#x9;[Publisher] [varchar](100) NULL,&#xA;&#x9;[Price] [varchar](50) NULL,&#xA;&#x9;[MaterialType] [varchar](100) NULL,&#xA;&#x9;[Edition] [varchar](50) NULL,&#xA;&#x9;[Grade] [varchar](50) NULL,&#xA;&#x9;[Notes] [varchar](100) NULL,&#xA;&#x9;[SubjectArea] [varchar](100) NULL,&#xA;&#x9;[Expires] [varchar](50) NULL,&#xA;&#x9;[Author] [varchar](100) NULL,&#xA;&#x9;[FundingSource] [varchar](500) NULL,&#xA;&#x9;[BinNum] [varchar](100) NULL,&#xA;&#x9;[Copyright] [varchar](50) NULL,&#xA;&#x9;[CampusName] [varchar](100) NULL,&#xA;&#x9;[Keep] bit NOT NULL default(0),&#xA;&#x9;[Import] [bit] NOT NULL default (1),&#xA;&#x9;[RejectMessage] [varchar](500) NULL,&#xA;&#x9;[CampusOwned] bit NOT NULL default(0)&#xA;) ON [PRIMARY]&#xA;&#xA;GO&#xA;&#xA;IF EXISTS (SELECT * FROM sys.tables WHERE name  = '_DC_DistrictIM')&#xA;&#x9;drop TABLE _DC_DistrictIM&#xA;GO&#xA;CREATE TABLE [dbo].[_DC_DistrictIM](&#xA;&#x9;[InStorage] [varchar](50) NULL,&#xA;&#x9;[QtyDistributed] [varchar](50) NULL,&#xA;&#x9;[SLC] [varchar](50) NULL,&#xA;&#x9;[ISBN] [varchar](50) NULL,&#xA;&#x9;[Title] [varchar](1000) NULL,&#xA;&#x9;[Publisher] [varchar](100) NULL,&#xA;&#x9;[Price] [varchar](50) NULL,&#xA;&#x9;[MaterialType] [varchar](100) NULL,&#xA;&#x9;[Edition] [varchar](50) NULL,&#xA;&#x9;[Grade] [varchar](50) NULL,&#xA;&#x9;[Notes] [varchar](100) NULL,&#xA;&#x9;[SubjectArea] [varchar](100) NULL,&#xA;&#x9;[Expires] [varchar](50) NULL,&#xA;&#x9;[Author] [varchar](100) NULL,&#xA;&#x9;[FundingSource] [varchar](500) NULL,&#xA;&#x9;[BinNum] [varchar](100) NULL,&#xA;&#x9;[Copyright] [varchar](50) NULL,&#xA;&#x9;[Keep] bit NOT NULL default(0),&#xA;&#x9;[Import] [bit] NOT NULL default (1),&#xA;&#x9;[RejectMessage] [varchar](500) NULL,&#xA;&#x9;[Bin2] [varchar](100) NULL,&#xA;&#x9;[Bin3] [varchar](100) NULL,&#xA;) ON [PRIMARY]&#xA;&#xA;GO&#xA;&#xA;/*&#xA;Scripts currently work on the _DC_DistrictIM table &#xA;&#xA;IF EXISTS (SELECT * FROM sys.tables WHERE name  = 'BookBins')&#xA;&#x9;drop TABLE BookBins&#xA;GO&#xA;&#xA;CREATE TABLE [dbo].[BookBins](&#xA;&#x9;[BinNum] [varchar](100) NULL&#xA;) ON [PRIMARY]&#xA;&#xA;GO&#xA;*/&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:Disabled="True"
          DTS:DTSID="{DEDC7568-B697-40B9-8FA6-19A696A3BBCF}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Import Campus"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server v10; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              BLOBTempStoragePath=""
              bufferTempStoragePath=""
              version="1">
              <components>
                <component
                  refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source"
                  componentClassID="Microsoft.FlatFileSource"
                  contactInfo="Flat File Source;Microsoft Corporation; Microsoft SqlServer v10; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Flat File Source"
                  localeId="1033"
                  name="Flat File Source"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether zero-length columns are treated as null."
                      name="RetainNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                      name="FileNameColumnName"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Connections[FlatFileConnection]"
                      connectionManagerID="{A50AA096-583A-4AB0-BCA8-987B3B16FE52}:invalid"
                      connectionManagerRefId="{A50AA096-583A-4AB0-BCA8-987B3B16FE52}:invalid"
                      name="FlatFileConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output]"
                      name="Flat File Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].Columns[SLC]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[SLC]"
                          length="50"
                          lineageId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].Columns[SLC]"
                          name="SLC"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].Columns[Price]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Price]"
                          length="50"
                          lineageId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].Columns[Price]"
                          name="Price"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].Columns[Material Type]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Material Type]"
                          length="50"
                          lineageId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].Columns[Material Type]"
                          name="Material Type"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].Columns[Edition]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Edition]"
                          length="50"
                          lineageId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].Columns[Edition]"
                          name="Edition"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].Columns[Grade]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Grade]"
                          length="50"
                          lineageId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].Columns[Grade]"
                          name="Grade"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].Columns[Notes]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Notes]"
                          length="50"
                          lineageId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].Columns[Notes]"
                          name="Notes"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].Columns[Expires]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Expires]"
                          length="50"
                          lineageId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].Columns[Expires]"
                          name="Expires"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].Columns[Campus ID]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Campus ID]"
                          length="50"
                          lineageId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].Columns[Campus ID]"
                          name="Campus ID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].Columns[Qty Distributed]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Qty Distributed]"
                          length="50"
                          lineageId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].Columns[Qty Distributed]"
                          name="Qty Distributed"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].Columns[ISBN]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[ISBN]"
                          length="50"
                          lineageId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].Columns[ISBN]"
                          name="ISBN"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].Columns[TITLE]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[TITLE]"
                          length="1000"
                          lineageId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].Columns[TITLE]"
                          name="TITLE"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].Columns[PUBLISHER]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[PUBLISHER]"
                          length="50"
                          lineageId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].Columns[PUBLISHER]"
                          name="PUBLISHER"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].Columns[Subject Area]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Subject Area]"
                          length="50"
                          lineageId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].Columns[Subject Area]"
                          name="Subject Area"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].Columns[AUTHOR]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[AUTHOR]"
                          length="50"
                          lineageId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].Columns[AUTHOR]"
                          name="AUTHOR"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].Columns[FUNDING SOURCE]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[FUNDING SOURCE]"
                          length="50"
                          lineageId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].Columns[FUNDING SOURCE]"
                          name="FUNDING SOURCE"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].Columns[BIN NUMBER]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[BIN NUMBER]"
                          length="50"
                          lineageId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].Columns[BIN NUMBER]"
                          name="BIN NUMBER"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].Columns[COPYRIGHT]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[COPYRIGHT]"
                          length="50"
                          lineageId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].Columns[COPYRIGHT]"
                          name="COPYRIGHT"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].Columns[CAMPUS]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[CAMPUS]"
                          length="50"
                          lineageId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].Columns[CAMPUS]"
                          name="CAMPUS"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].Columns[keep]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[keep]"
                          length="50"
                          lineageId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].Columns[keep]"
                          name="keep"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[SLC]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="SLC" />
                        <externalMetadataColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Price]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Price" />
                        <externalMetadataColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Material Type]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Material Type" />
                        <externalMetadataColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Edition]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Edition" />
                        <externalMetadataColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Grade]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Grade" />
                        <externalMetadataColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Notes]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Notes" />
                        <externalMetadataColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Expires]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Expires" />
                        <externalMetadataColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Campus ID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Campus ID" />
                        <externalMetadataColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Qty Distributed]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Qty Distributed" />
                        <externalMetadataColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[ISBN]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="ISBN" />
                        <externalMetadataColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[TITLE]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          name="TITLE" />
                        <externalMetadataColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[PUBLISHER]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="PUBLISHER" />
                        <externalMetadataColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Subject Area]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Subject Area" />
                        <externalMetadataColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[AUTHOR]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="AUTHOR" />
                        <externalMetadataColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[FUNDING SOURCE]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="FUNDING SOURCE" />
                        <externalMetadataColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[BIN NUMBER]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="BIN NUMBER" />
                        <externalMetadataColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[COPYRIGHT]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="COPYRIGHT" />
                        <externalMetadataColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[CAMPUS]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="CAMPUS" />
                        <externalMetadataColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[keep]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="keep" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Error Output]"
                      isErrorOut="true"
                      name="Flat File Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          codePage="1252"
                          dataType="text"
                          description="Flat File Source Error Output Column"
                          lineageId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          name="Flat File Source Error Output Column" />
                        <outputColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SqlServer v10; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[_DC_CampusIM]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[ConvDB]"
                      connectionManagerRefId="Package.ConnectionManagers[ConvDB]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[SLC]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="SLC"
                          externalMetadataColumnId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SLC]"
                          lineageId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].Columns[SLC]" />
                        <inputColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[TITLE]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="1000"
                          cachedName="TITLE"
                          externalMetadataColumnId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Title]"
                          lineageId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].Columns[TITLE]" />
                        <inputColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[PUBLISHER]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="PUBLISHER"
                          externalMetadataColumnId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Publisher]"
                          lineageId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].Columns[PUBLISHER]" />
                        <inputColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Price]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Price"
                          externalMetadataColumnId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Price]"
                          lineageId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].Columns[Price]" />
                        <inputColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Edition]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Edition"
                          externalMetadataColumnId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Edition]"
                          lineageId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].Columns[Edition]" />
                        <inputColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Grade]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Grade"
                          externalMetadataColumnId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Grade]"
                          lineageId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].Columns[Grade]" />
                        <inputColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Subject Area]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Subject Area"
                          externalMetadataColumnId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SubjectArea]"
                          lineageId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].Columns[Subject Area]" />
                        <inputColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[FUNDING SOURCE]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="FUNDING SOURCE"
                          externalMetadataColumnId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FundingSource]"
                          lineageId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].Columns[FUNDING SOURCE]" />
                        <inputColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Material Type]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Material Type"
                          externalMetadataColumnId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[MaterialType]"
                          lineageId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].Columns[Material Type]" />
                        <inputColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ISBN]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="ISBN"
                          externalMetadataColumnId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ISBN]"
                          lineageId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].Columns[ISBN]" />
                        <inputColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Campus ID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Campus ID"
                          externalMetadataColumnId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CampusID]"
                          lineageId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].Columns[Campus ID]" />
                        <inputColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Qty Distributed]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Qty Distributed"
                          externalMetadataColumnId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Qty Distributed]"
                          lineageId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].Columns[Qty Distributed]" />
                        <inputColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Notes]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Notes"
                          externalMetadataColumnId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Note]"
                          lineageId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].Columns[Notes]" />
                        <inputColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Expires]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Expires"
                          externalMetadataColumnId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Expires]"
                          lineageId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].Columns[Expires]" />
                        <inputColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[AUTHOR]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="AUTHOR"
                          externalMetadataColumnId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Author]"
                          lineageId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].Columns[AUTHOR]" />
                        <inputColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[BIN NUMBER]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="BIN NUMBER"
                          externalMetadataColumnId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[BinNum]"
                          lineageId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].Columns[BIN NUMBER]" />
                        <inputColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[COPYRIGHT]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="COPYRIGHT"
                          externalMetadataColumnId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Copyright]"
                          lineageId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].Columns[COPYRIGHT]" />
                        <inputColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[CAMPUS]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="CAMPUS"
                          externalMetadataColumnId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Campus]"
                          lineageId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].Columns[CAMPUS]" />
                        <inputColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[keep]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="keep"
                          externalMetadataColumnId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Keep]"
                          lineageId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output].Columns[keep]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SLC]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="SLC" />
                        <externalMetadataColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ISBN]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="ISBN" />
                        <externalMetadataColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Title]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          name="Title" />
                        <externalMetadataColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Publisher]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Publisher" />
                        <externalMetadataColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FundingSource]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="FundingSource" />
                        <externalMetadataColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Price]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Price" />
                        <externalMetadataColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[MaterialType]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="MaterialType" />
                        <externalMetadataColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Edition]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Edition" />
                        <externalMetadataColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Grade]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Grade" />
                        <externalMetadataColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SubjectArea]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="SubjectArea" />
                        <externalMetadataColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Import]"
                          dataType="bool"
                          name="Import" />
                        <externalMetadataColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[RejectMessage]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="RejectMessage" />
                        <externalMetadataColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CampusID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="CampusID" />
                        <externalMetadataColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Qty Distributed]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Qty Distributed" />
                        <externalMetadataColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Note]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Note" />
                        <externalMetadataColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Expires]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Expires" />
                        <externalMetadataColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Author]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Author" />
                        <externalMetadataColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[BinNum]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="BinNum" />
                        <externalMetadataColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Copyright]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Copyright" />
                        <externalMetadataColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Campus]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Campus" />
                        <externalMetadataColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Keep]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Keep" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus.Paths[Flat File Source Output]"
                  endId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Flat File Source Output"
                  startId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source.Outputs[Flat File Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import District"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:Disabled="True"
          DTS:DTSID="{34651450-3D14-4018-90DB-234277173F82}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Import District"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server v10; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              BLOBTempStoragePath=""
              bufferTempStoragePath=""
              version="1" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Pad ISBN Leading 0s"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:Disabled="True"
          DTS:DTSID="{9BA7938F-2056-41B9-94E1-18BA9AE20C59}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Pad ISBN Leading 0s"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="5">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{BACA6916-2A2E-4D6E-A01D-FFD222A74312}"
              SQLTask:SqlStatementSource="update _DC_DistrictIM set ISBN = right('0000000000'+ISBN, 10) &#xA;where Len(ltrim(rtrim(ISBN))) between 3 and 9&#xA;&#xA;&#xA;update _DC_CampusIM set ISBN = right('0000000000'+[ISBN], 10) &#xA;where len(ltrim(rtrim(ISBN)))  between 3 and 9" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Remove extra space - District"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{4CC6210E-0FBF-4CA0-A188-D2D3ACE28120}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Remove extra space - District"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="3">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{BACA6916-2A2E-4D6E-A01D-FFD222A74312}"
              SQLTask:SqlStatementSource="update _DC_DistrictIM set [InStorage] = ltrim(rtrim([InStorage]))&#xA;GO&#xA;update _DC_DistrictIM set SLC = ltrim(rtrim(SLC))&#xA;GO&#xA;update _DC_DistrictIM set ISBN = ltrim(rtrim(ISBN))&#xA;GO&#xA;update _DC_DistrictIM set Title = ltrim(rtrim(Title))&#xA;GO&#xA;update _DC_DistrictIM set Publisher = ltrim(rtrim(Publisher))&#xA;GO&#xA;update _DC_DistrictIM set Price = ltrim(rtrim(Price))&#xA;GO&#xA;update _DC_DistrictIM set MaterialType = ltrim(rtrim(MaterialType))&#xA;GO&#xA;update _DC_DistrictIM set Edition = ltrim(rtrim(Edition))&#xA;GO&#xA;update _DC_DistrictIM set Grade = ltrim(rtrim(Grade))&#xA;GO&#xA;update _DC_DistrictIM set Notes = ltrim(rtrim(Notes))&#xA;GO&#xA;update _DC_DistrictIM set SubjectArea = ltrim(rtrim(SubjectArea))&#xA;GO&#xA;update _DC_DistrictIM set Expires = ltrim(rtrim(Expires))&#xA;GO&#xA;update _DC_DistrictIM set Author = ltrim(rtrim(Author))&#xA;GO&#xA;update _DC_DistrictIM set FundingSource = ltrim(rtrim(FundingSource))&#xA;GO&#xA;update _DC_DistrictIM set BinNum = ltrim(rtrim(BinNum))&#xA;GO&#xA;update _DC_DistrictIM set Copyright = ltrim(rtrim(Copyright))&#xA;GO&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Remove extra spaces - Campus"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{B309D761-2546-46A7-A337-07D06A6E0990}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Remove extra spaces - Campus"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{BACA6916-2A2E-4D6E-A01D-FFD222A74312}"
              SQLTask:SqlStatementSource="update _DC_CampusIM set [CampusID] = ltrim(rtrim([CampusID]))&#xA;GO&#xA;update _DC_CampusIM set CampusID = right('000'+CampusID, 3)&#xA;GO&#xA;update _DC_CampusIM set [QtyDistributed] = ltrim(rtrim([QtyDistributed]))&#xA;GO&#xA;update _DC_CampusIM set DistributionDate = ltrim(rtrim(DistributionDate))&#xA;GO&#xA;update _DC_CampusIM set SLC = ltrim(rtrim(SLC))&#xA;GO&#xA;update _DC_CampusIM set ISBN = ltrim(rtrim(ISBN))&#xA;GO&#xA;update _DC_CampusIM set Title = ltrim(rtrim(Title))&#xA;GO&#xA;update _DC_CampusIM set Publisher = ltrim(rtrim(Publisher))&#xA;GO&#xA;update _DC_CampusIM set Price = ltrim(rtrim(Price))&#xA;GO&#xA;update _DC_CampusIM set MaterialType = ltrim(rtrim(MaterialType))&#xA;GO&#xA;update _DC_CampusIM set Edition = ltrim(rtrim(Edition))&#xA;GO&#xA;update _DC_CampusIM set Grade = ltrim(rtrim(Grade))&#xA;GO&#xA;update _DC_CampusIM set Notes = ltrim(rtrim(Notes))&#xA;GO&#xA;update _DC_CampusIM set SubjectArea = ltrim(rtrim(SubjectArea))&#xA;GO&#xA;update _DC_CampusIM set Expires = ltrim(rtrim(Expires))&#xA;GO&#xA;update _DC_CampusIM set Author = ltrim(rtrim(Author))&#xA;GO&#xA;update _DC_CampusIM set FundingSource = ltrim(rtrim(FundingSource))&#xA;GO&#xA;update _DC_CampusIM set BinNum = ltrim(rtrim(BinNum))&#xA;GO&#xA;update _DC_CampusIM set Copyright = ltrim(rtrim(Copyright))&#xA;GO&#xA;update _DC_CampusIM set [Keep] = ltrim(rtrim([Keep]))&#xA;GO&#xA;&#xA;delete _DC_CampusIM where ISBN = '' and Title = '' and  Publisher = ''&#xA;GO&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Set Default on Missing Values"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{7046844B-BE2E-43B6-8055-D7CE6A95145E}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Set Default on Missing Values"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{BACA6916-2A2E-4D6E-A01D-FFD222A74312}"
              SQLTask:SqlStatementSource=" update _DC_DistrictIM set InStorage = '0' where InStorage is null or ltrim(rtrim(InStorage)) = ''&#xA; GO&#xA; update _DC_DistrictIM set Price = '0' where Price is null or ltrim(rtrim(Price)) = ''&#xA; GO&#xA; update _DC_DistrictIM set  FundingSource = 'District' where FundingSource is null or ltrim(rtrim(FundingSource)) = ''&#xA;GO&#xA; update _DC_DistrictIM set  SubjectArea = 'Unknown' where SubjectArea is null or ltrim(rtrim(SubjectArea)) = ''&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Set Null - Campus"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:Disabled="True"
          DTS:DTSID="{9E76797C-6864-4DCF-A2B5-CE3A091F980F}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Set Null - Campus"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{BACA6916-2A2E-4D6E-A01D-FFD222A74312}"
              SQLTask:SqlStatementSource="&#xA;UPDATE _DC_CampusIM  SET CampusID = null where ltrim(rtrim(CampusID)) = ''&#xA;GO&#xA;UPDATE _DC_CampusIM  SET QtyDistributed = null where ltrim(rtrim(QtyDistributed)) = ''&#xA;GO&#xA;UPDATE _DC_CampusIM  SET DistribtuionDate = null where ltrim(rtrim(DistribtuionDate)) = ''&#xA;GO&#xA;UPDATE _DC_CampusIM  SET SLC = null where ltrim(rtrim(SLC)) = ''&#xA;GO&#xA;UPDATE _DC_CampusIM  SET ISBN = null where ltrim(rtrim(ISBN)) = ''&#xA;GO&#xA;UPDATE _DC_CampusIM  SET Title = null where ltrim(rtrim(Title)) = ''&#xA;GO&#xA;UPDATE _DC_CampusIM  SET Publisher = null where ltrim(rtrim(Publisher)) = ''&#xA;GO&#xA;UPDATE _DC_CampusIM  SET Price = null where ltrim(rtrim(Price)) = ''&#xA;GO&#xA;UPDATE _DC_CampusIM  SET MaterialType = null where ltrim(rtrim(MaterialType)) = ''&#xA;GO&#xA;UPDATE _DC_CampusIM  SET Edition = null where ltrim(rtrim(Edition)) = ''&#xA;GO&#xA;UPDATE _DC_CampusIM  SET Grade = null where ltrim(rtrim(Grade)) = ''&#xA;GO&#xA;UPDATE _DC_CampusIM  SET Notes = null where ltrim(rtrim(Notes)) = ''&#xA;GO&#xA;UPDATE _DC_CampusIM  SET SubjectArea = null where ltrim(rtrim(SubjectArea)) = ''&#xA;GO&#xA;UPDATE _DC_CampusIM  SET Expires = null where ltrim(rtrim(Expires)) = ''&#xA;GO&#xA;UPDATE _DC_CampusIM  SET Author = null where ltrim(rtrim(Author)) = ''&#xA;GO&#xA;UPDATE _DC_CampusIM  SET FundingSource = null where ltrim(rtrim(FundingSource)) = ''&#xA;GO&#xA;UPDATE _DC_CampusIM  SET BinNum = null where ltrim(rtrim(BinNum)) = ''&#xA;GO&#xA;UPDATE _DC_CampusIM  SET Copyright = null where ltrim(rtrim(Copyright)) = ''&#xA;GO&#xA;UPDATE _DC_CampusIM  SET CampusName = null where ltrim(rtrim(CampusName)) = ''&#xA;GO&#xA;&#xA;delete _DC_CampusIM where ISBN is null and Title is null and  Publisher is null&#xA;GO&#xA;&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Set Null - District"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:Disabled="True"
          DTS:DTSID="{50E32FB5-715C-43E5-9890-E6C1BEF00D9D}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Set Null - District"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{BACA6916-2A2E-4D6E-A01D-FFD222A74312}"
              SQLTask:SqlStatementSource="&#xA;UPDATE _DC_DistrictIM  SET InStorage = null where ltrim(rtrim(InStorage)) = ''&#xA;GO&#xA;UPDATE _DC_DistrictIM  SET QtyDistributed = null where ltrim(rtrim(QtyDistributed)) = ''&#xA;GO&#xA;UPDATE _DC_DistrictIM  SET SLC = null where ltrim(rtrim(SLC)) = ''&#xA;GO&#xA;UPDATE _DC_DistrictIM  SET ISBN = null where ltrim(rtrim(ISBN)) = ''&#xA;GO&#xA;UPDATE _DC_DistrictIM  SET Title = null where ltrim(rtrim(Title)) = ''&#xA;GO&#xA;UPDATE _DC_DistrictIM  SET Publisher = null where ltrim(rtrim(Publisher)) = ''&#xA;GO&#xA;UPDATE _DC_DistrictIM  SET Price = null where ltrim(rtrim(Price)) = ''&#xA;GO&#xA;UPDATE _DC_DistrictIM  SET MaterialType = null where ltrim(rtrim(MaterialType)) = ''&#xA;GO&#xA;UPDATE _DC_DistrictIM  SET Edition = null where ltrim(rtrim(Edition)) = ''&#xA;GO&#xA;UPDATE _DC_DistrictIM  SET Grade = null where ltrim(rtrim(Grade)) = ''&#xA;GO&#xA;UPDATE _DC_DistrictIM  SET Notes = null where ltrim(rtrim(Notes)) = ''&#xA;GO&#xA;UPDATE _DC_DistrictIM  SET SubjectArea = null where ltrim(rtrim(SubjectArea)) = ''&#xA;GO&#xA;UPDATE _DC_DistrictIM  SET Expires = null where ltrim(rtrim(Expires)) = ''&#xA;GO&#xA;UPDATE _DC_DistrictIM  SET Author = null where ltrim(rtrim(Author)) = ''&#xA;GO&#xA;UPDATE _DC_DistrictIM  SET FundingSource = null where ltrim(rtrim(FundingSource)) = ''&#xA;GO&#xA;UPDATE _DC_DistrictIM  SET BinNum = null where ltrim(rtrim(BinNum)) = ''&#xA;GO&#xA;UPDATE _DC_DistrictIM  SET Copyright = null where ltrim(rtrim(Copyright)) = ''&#xA;GO&#xA;&#xA;delete _DC_DistrictIM where ISBN is null and Title is null and  Publisher is null&#xA;&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Set NULL to Space - Campus"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{B5FF412D-5AC3-44BF-87B8-75078AB218AF}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Set NULL to Space - Campus"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="3">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{BACA6916-2A2E-4D6E-A01D-FFD222A74312}"
              SQLTask:SqlStatementSource="update _DC_CampusIM set [CampusID] = '' where [CampusID] is null&#xA;GO&#xA;update _DC_CampusIM set [QtyDistributed] = '' where [QtyDistributed] is null&#xA;GO&#xA;update _DC_CampusIM set DistributionDate ='' where DistributionDate is null&#xA;GO&#xA;update _DC_CampusIM set SLC = '' where SLC is null&#xA;GO&#xA;update _DC_CampusIM set ISBN = '' where ISBN is null&#xA;GO&#xA;update _DC_CampusIM set Title = '' where Title is null&#xA;GO&#xA;update _DC_CampusIM set Publisher = '' where Publisher is null&#xA;GO&#xA;update _DC_CampusIM set Price = '' where Price is null&#xA;GO&#xA;update _DC_CampusIM set MaterialType = '' where MaterialType is null&#xA;GO&#xA;update _DC_CampusIM set Edition = '' where Edition is null&#xA;GO&#xA;update _DC_CampusIM set Grade = '' where Grade is null&#xA;GO&#xA;update _DC_CampusIM set Notes = '' where Notes is null&#xA;GO&#xA;update _DC_CampusIM set SubjectArea = '' where SubjectArea is null&#xA;GO&#xA;update _DC_CampusIM set Expires = '' where Expires is null&#xA;GO&#xA;update _DC_CampusIM set Author = '' where Author is null&#xA;GO&#xA;update _DC_CampusIM set FundingSource = '' where FundingSource is null&#xA;GO&#xA;update _DC_CampusIM set BinNum = '' where BinNum is null&#xA;GO&#xA;update _DC_CampusIM set Copyright = '' where Copyright is null&#xA;GO&#xA;&#xA;delete _DC_CampusIM where ISBN = '' and Title = '' and  Publisher = ''&#xA;GO&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Set NULL to Space - DISTRICT"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{2AE4C7EA-ECD5-45D9-9EEC-426E6B551780}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Set NULL to Space - DISTRICT"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="3">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{BACA6916-2A2E-4D6E-A01D-FFD222A74312}"
              SQLTask:SqlStatementSource="update _DC_DistrictIM set [InStorage] = '' where [InStorage] is null&#xA;GO&#xA;update _DC_DistrictIM set SLC = '' where SLC is null&#xA;GO&#xA;update _DC_DistrictIM set ISBN = '' where ISBN is null&#xA;GO&#xA;update _DC_DistrictIM set Title = '' where Title is null&#xA;GO&#xA;update _DC_DistrictIM set Publisher = '' where Publisher is null&#xA;GO&#xA;update _DC_DistrictIM set Price = '' where Price is null&#xA;GO&#xA;update _DC_DistrictIM set MaterialType = '' where MaterialType is null&#xA;GO&#xA;update _DC_DistrictIM set Edition = '' where Edition is null&#xA;GO&#xA;update _DC_DistrictIM set Grade = '' where Grade is null&#xA;GO&#xA;update _DC_DistrictIM set Notes = '' where Notes is null&#xA;GO&#xA;update _DC_DistrictIM set SubjectArea = '' where SubjectArea is null&#xA;GO&#xA;update _DC_DistrictIM set Expires = '' where Expires is null&#xA;GO&#xA;update _DC_DistrictIM set Author = '' where Author is null&#xA;GO&#xA;update _DC_DistrictIM set FundingSource = '' where FundingSource is null&#xA;GO&#xA;update _DC_DistrictIM set BinNum = '' where BinNum is null&#xA;GO&#xA;update _DC_DistrictIM set Copyright = '' where Copyright is null&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Upper Case all ISBN characters"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{F4D5BE63-FA8A-4B61-B02A-812CD6136826}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Upper Case all ISBN characters"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{BACA6916-2A2E-4D6E-A01D-FFD222A74312}"
              SQLTask:SqlStatementSource="update  _DC_DistrictIM set isbn = upper(isbn)&#xA;from _DC_DistrictIM &#xA;GO&#xA;&#xA;update  _DC_CampusIM set isbn = upper(isbn)&#xA;from _DC_CampusIM &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{074E9587-BBBF-4647-AF42-B079B9760EE5}"
          DTS:From="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Drop Create Tables"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import District" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{8991A699-04A0-4D6B-8A10-C48791E271C8}"
          DTS:From="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Set NULL to Space - DISTRICT"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Set NULL to Space - Campus" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{E6F3A27D-53BE-4377-9DCC-12128BBFD005}"
          DTS:From="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Remove extra space - District"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Set NULL to Space - DISTRICT" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{6F44EE68-8EE4-41BB-9E1B-EE8262658CBB}"
          DTS:From="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Set NULL to Space - Campus"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Cleanup Double Quotes" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see.PrecedenceConstraints[Constraint 4]"
          DTS:CreationName=""
          DTS:DTSID="{F7D41F76-C4A3-421B-AD1D-DCBD4E396B6B}"
          DTS:From="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Set Default on Missing Values"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 4"
          DTS:To="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Cleanup Double Quotes" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see.PrecedenceConstraints[Constraint 5]"
          DTS:CreationName=""
          DTS:DTSID="{6FA9DA97-ABEC-4EDF-97F3-71CB4838A737}"
          DTS:From="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Create District From Campus"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 5"
          DTS:To="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Remove extra space - District" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see.PrecedenceConstraints[Constraint 6]"
          DTS:CreationName=""
          DTS:DTSID="{252402FE-E743-40CF-A74C-5B34878EBA21}"
          DTS:From="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Set Default on Missing Values"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 6"
          DTS:To="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Remove extra spaces - Campus" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see.PrecedenceConstraints[Constraint 7]"
          DTS:CreationName=""
          DTS:DTSID="{717B3081-DA83-4E5D-A0AC-832E894F6BFF}"
          DTS:From="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Remove extra spaces - Campus"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 7"
          DTS:To="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Upper Case all ISBN characters" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see.PrecedenceConstraints[Constraint 8]"
          DTS:CreationName=""
          DTS:DTSID="{F9FDED09-C9B3-4C9E-84ED-5C8378B7B784}"
          DTS:From="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import District"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 8"
          DTS:To="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\(2) PRE - Validation -  Stand Alone Container - These need to be run once if at all - Populating Missing Table Records and Duplicate ISBNs"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{100E311D-1C1B-4ED4-A8CF-17A53CAE4711}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="(2) PRE - Validation -  Stand Alone Container - These need to be run once if at all - Populating Missing Table Records and Duplicate ISBNs">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\(2) PRE - Validation -  Stand Alone Container - These need to be run once if at all - Populating Missing Table Records and Duplicate ISBNs\Add to Publisher Lookup - Run as StandAlone"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{02F63C62-2340-44E3-8E52-19CA29AF2D6B}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Add to Publisher Lookup - Run as StandAlone"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="6">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{BACA6916-2A2E-4D6E-A01D-FFD222A74312}"
              SQLTask:SqlStatementSource="insert _PublisherLookup.dbo.PublisherLookup (LookupPublisher, Publisher)&#xA;select Distinct Publisher, Publisher from _DC_DistrictIM  where Import = 1 &#xA;&#x9;and ltrim(rtrim(Publisher)) not in ('', '(blank)')&#xA;&#x9;and Publisher not in (select LookupPublisher from _PublisherLookup.dbo.PublisherLookup)&#xA;union&#xA;select Distinct Publisher, Publisher from _DC_CampusIM  where Import = 1 &#xA;&#x9;and ltrim(rtrim(Publisher)) not in ('', '(blank)')&#xA;&#x9;and Publisher not in (select LookupPublisher from _PublisherLookup.dbo.PublisherLookup)&#xA;order by 1" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\(2) PRE - Validation -  Stand Alone Container - These need to be run once if at all - Populating Missing Table Records and Duplicate ISBNs\Special Characters"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{AA959CCF-8C07-4D9B-B6E8-28CF2434AE6E}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Special Characters"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="7">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{BACA6916-2A2E-4D6E-A01D-FFD222A74312}"
              SQLTask:SqlStatementSource="&#xA;/*&#xA;This is checked for special characters ins the ISBNs&#xA;&#xA;ISBNs can only contain alphanumberic field&#xA;&#xA;*/&#xA;&#xA;select *&#xA;from _DC_DistrictIM&#xA;where (len(rtrim(ltrim(ISBN))) LIKE '%[^A-Z,0-9]%')&#xA;&#xA;/*&#xA;&#xA;Some special characters may be hidden from view - showing up as a space in field&#xA;This came about because I saw ISBNs that had CR/LF in the string&#xA;The string showed nothing in the query - had to use the ASCII() to find out&#xA;what they were&#xA;&#xA;BTW - ascii(10) is LF and ascii(13) is CR&#xA;&#xA;Use this query to determine (1) the length of the field&#xA;(2) where the special character exists&#xA;(3) the value of the special character &#xA;&#xA;&#xA;*/&#xA;&#xA;select ascii(substring(isbn, 13, 1)), ascii(substring(isbn, 14, 1)), len(ISBN),* &#xA;from _DC_DistrictIM&#xA;where (len(rtrim(ltrim(ISBN))) LIKE '%[^A-Z,0-9]%')&#xA;&#xA;/*&#xA;You will need to find an ASCII chart to know what the hidden special characters are&#xA;&#xA;The ASCII() function shows what they are&#xA;Use the Char() function to get rid of them&#xA;&#xA;*/&#xA;&#xA;update _DC_DistrictIM set ISBN = replace(ISBN, char(10), '')&#xA;update _DC_DistrictIM set ISBN = replace(ISBN, char(13), '')&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\(3) These are standalone cleanup scripts - Run each script in SQL to determine if there is any cleanup that needs to be PRIOR to the validation containers - and They should definitely be run BEFORE table inserts"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{4D2CC2F7-123E-4459-8F8F-1679520E0CD9}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="(3) These are standalone cleanup scripts - Run each script in SQL to determine if there is any cleanup that needs to be PRIOR to the validation containers - and They should definitely be run BEFORE table inserts">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\(3) These are standalone cleanup scripts - Run each script in SQL to determine if there is any cleanup that needs to be PRIOR to the validation containers - and They should definitely be run BEFORE table inserts\Check Distinct Grades"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{A47CD93B-AF6F-49EC-B089-99B0F8254331}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Check Distinct Grades"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="10">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:SqlStatementSource="/*&#xA;Also check ISBN/Grade combination - an area where duplicate ISBNs hide&#xA;&#xA;*/&#xA;&#xA;&#xA;&#xA;select distinct Grade from  _DC_DistrictIM&#xA;order by 1&#xA;&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\(3) These are standalone cleanup scripts - Run each script in SQL to determine if there is any cleanup that needs to be PRIOR to the validation containers - and They should definitely be run BEFORE table inserts\Check Update Funding Source"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Check Update Funding Source"
          DTS:DTSID="{C60AE960-E182-44BF-9A29-FC95D5CF256D}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Check Update Funding Source"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="11">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{BACA6916-2A2E-4D6E-A01D-FFD222A74312}"
              SQLTask:SqlStatementSource="/* &#xA;&#xA;Do this for both District and Campus &#xA;This is assuming that the District does not have any&#xA;values for Funding Sources AND that all District books&#xA;will have a funding source of District AND all Campus Owned&#xA;books will have a funding source of General &#xA;*/&#xA;&#xA;declare @StagDB nvarchar(100)&#xA;&#xA;set @StagDB = ?&#xA;&#xA;DECLARE @SQL NVARCHAR(MAX)&#xA;set @SQL = &#xA;&#xA;N' select ISNULL(FundingSource,'''') '+&#xA;--N' UPDATE _DC_CampusIM '+&#xA;--N' SET FundingSource = ''General'' '+&#xA;N' from  _DC_CampusIM '+&#xA;N' WHERE (FundingSource = '''' OR FundingSource IS NULL '+&#xA;N' OR FundingSource NOT IN (SELECT FundingSource FROM ' +  @StagDB + N'.dbo.tblFundingSources)) '+&#xA;N' AND CampusOwned = 1 '&#xA;--order by 1&#xA;print @SQL&#xA;--EXEC sys.sp_executesql @SQL&#xA;&#xA;set @SQL = &#xA;N' select ISNULL(FundingSource,'''') '+&#xA;--N' UPDATE _DC_CampusIM '+&#xA;--N' SET FundingSource = ''District'' '+&#xA;N' from  _DC_CampusIM '+&#xA;N' WHERE (FundingSource = '''' OR FundingSource IS NULL  '+&#xA;N' OR FundingSource NOT IN (SELECT FundingSource FROM ' +  @StagDB + N'.dbo.tblFundingSources)) '+&#xA;N' AND CampusOwned = 0 '&#xA;--print @SQL&#xA;EXEC sys.sp_executesql @SQL&#xA;&#xA;set @SQL = &#xA;N' select ISNULL(FundingSource,'''') '+&#xA;--N' UPDATE _DC_DistrictIM '+&#xA;--N' SET FundingSource = ''District'' '+&#xA;N' from  _DC_DistrictIM '+&#xA;N' WHERE (FundingSource = '''' OR FundingSource IS NULL  '+&#xA;N' OR FundingSource NOT IN (SELECT FundingSource FROM ' +  @StagDB + N'.dbo.tblFundingSources)) '&#xA;--print @SQL&#xA;EXEC sys.sp_executesql @SQL&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@StagDB"
                SQLTask:DtsVariableName="User::StagingDB"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\(3) These are standalone cleanup scripts - Run each script in SQL to determine if there is any cleanup that needs to be PRIOR to the validation containers - and They should definitely be run BEFORE table inserts\Cleanup CampusIDs"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{A62D8A36-62B5-4CD6-926B-7266B29C3B97}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Cleanup CampusIDs"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="12">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{BACA6916-2A2E-4D6E-A01D-FFD222A74312}"
              SQLTask:SqlStatementSource="--select distinct campusid from RawDataCombined&#xA;--select * from TipWeb_StagingIM_Scranton.dbo.tblCampuses&#xA;&#xA;--update _DC_CampusIM set campusid = '65' where campusid = '#65'&#xA;&#xA;&#xA;declare @StagDB nvarchar(100)&#xA;&#xA;set @StagDB = ?&#xA;&#xA;DECLARE @SQL NVARCHAR(MAX)&#xA;&#xA;SELECT @SQL = &#xA;N' select distinct campusid ' +&#xA;N' from _DC_CampusIM ' +&#xA;N' where ltrim(rtrim(campusID)) not in (select ltrim(rtrim(campusID)) from ' +  @StagDB + N'.dbo.tblCampuses) '&#xA;EXEC sys.sp_executesql @SQL&#xA;&#xA;SELECT @SQL = &#xA;&#xA;N' (select distinct ltrim(rtrim(campusID)) from ' +  @StagDB + N'.dbo.tblCampuses) '&#xA;&#xA;--print @SQL&#xA;EXEC sys.sp_executesql @SQL" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@StagDB"
                SQLTask:DtsVariableName="User::ConvDB"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\(3) These are standalone cleanup scripts - Run each script in SQL to determine if there is any cleanup that needs to be PRIOR to the validation containers - and They should definitely be run BEFORE table inserts\Consumable"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{A6BE8BB1-A652-464A-84B1-183B5A668E23}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Consumable"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="13">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:SqlStatementSource="/*&#xA;&#xA;---- NOTE:  Consumable was added to the IM template on 2/23/2016 ----------&#xA;&#xA;A consumable item will need to be ordered every year and is not turned back in during collection&#xA;&#xA;A district may mark a consumable item as Student Edition, Workbook or WorkText as the Material Type&#xA;However, TipWeb needs the Material Type to be Consumable for consumable materials&#xA;&#xA;Consumable must be all or nothing (either yes or no) for the ISBN&#xA;The query below looks for ISBN that may have different values in the consumable or MaterialType columns&#xA;&#xA;Once the client confirms that the ISBN is consumable, then the Material Type should be updated if necessary&#xA;&#xA;*/&#xA;&#xA;select ISBN&#xA;from (&#xA;&#x9;select distinct ISBN, consumable, materialType&#xA;&#x9;from _DC_CampusIM&#xA;&#x9;--where consumable is not null&#xA;&#x9;)&#xA;group by ISBN having count(*) &gt; 1&#x9;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\(3) These are standalone cleanup scripts - Run each script in SQL to determine if there is any cleanup that needs to be PRIOR to the validation containers - and They should definitely be run BEFORE table inserts\Find ISBN w Multi Bins"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:Disabled="True"
          DTS:DTSID="{26FE712E-6CEA-4222-9FF5-8C58AED17E2C}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Find ISBN w Multi Bins"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="14">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:SqlStatementSource="select * &#xA;from _DC_DistrictIM where ISBN in (&#xA;&#xA;select ISBN &#xA;From (&#xA;select distinct ISBN, BinNum&#xA;from _DC_DistrictIM&#xA;where binnum is not null&#xA;) a&#xA;group by ISBN having count(*) &gt; 1&#xA;)&#xA;order by ISBN" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\(3) These are standalone cleanup scripts - Run each script in SQL to determine if there is any cleanup that needs to be PRIOR to the validation containers - and They should definitely be run BEFORE table inserts\Invalid ISBN Length"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{D2BD10CF-3C9C-49B2-8482-53C91B57FFB3}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Invalid ISBN Length"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="15">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:SqlStatementSource="/*&#xA;ISBN length may be invalid because it is missing leading zeros&#xA;&#xA;ISBNs where length is not in 10 or 13 may be erroneously thrown out during validation&#xA;&#xA;The Task &quot;Pad ISBN leading 0s&quot; will correct this&#xA;&#xA;ISBNs need to be reviewed in both district and campus&#xA;&#xA;&#xA;*/&#xA;&#xA;select isbn, len(isbn) as ISBNLength, * from _DC_DistrictIM&#xA;where len(rtrim(ltrim(ISBN))) not in (0, 10, 13)&#xA;&#xA;select isbn, len(isbn) as ISBNLength, * from _DC_CampusIM&#xA;where len(rtrim(ltrim(ISBN))) not in (0, 10, 13)&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\(3) These are standalone cleanup scripts - Run each script in SQL to determine if there is any cleanup that needs to be PRIOR to the validation containers - and They should definitely be run BEFORE table inserts\Invalid Quantity Distributed - RUN OUTSIDE"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{283D45F4-B8E2-42DF-B24A-7AC66C708250}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Invalid Quantity Distributed - RUN OUTSIDE"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="16">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:SqlStatementSource="&#xA;/*&#xA;Created a field called QtyDistributedOrig and copied the data from QtyDistributed&#xA;Ran the distinct query against QtyDistributed and ran update for each line&#xA;Verified update again QtyDistributedOrig&#xA;*/&#xA;&#xA;--update _DC_CampusIM set QtyDistributed = 0 where QtyDistributed = 'N/A' &#xA;&#xA;select distinct  QtyDistributed --, QtyDistributedOrig  &#xA;FROM _DC_CampusIM&#xA;where isNumeric(QtyDistributed) = 0&#xA;--where isNumeric(QtyDistributedOrig) = 0" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\(3) These are standalone cleanup scripts - Run each script in SQL to determine if there is any cleanup that needs to be PRIOR to the validation containers - and They should definitely be run BEFORE table inserts\READ ME - Cleanup Duplication"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{DC133DED-8198-46E2-873D-245FB50721B5}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="READ ME - Cleanup Duplication"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="17">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:SqlStatementSource="select * from _DC_DistrictIM where isbn in (&#xA;&#x9;select isbn from (&#xA;&#x9;&#x9;select distinct ISBN, SLC, Title, Price, Publisher,  Grade,  BinNum&#xA;&#x9;&#x9;from _DC_DistrictIM dc &#xA;&#x9;&#x9;where import = 1 &#xA;&#x9;&#x9;) a&#xA;&#x9;group by isbn having count(*) &gt; 1&#xA;&#x9;) &#xA;order by ISBN, Grade" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\(3) These are standalone cleanup scripts - Run each script in SQL to determine if there is any cleanup that needs to be PRIOR to the validation containers - and They should definitely be run BEFORE table inserts\READ ME - Populate Book Bins"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:Disabled="True"
          DTS:DTSID="{EC560B65-4EE9-45D5-AA01-50F712AC9AE8}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="READ ME - Populate Book Bins"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="18">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:SqlStatementSource="----insert into tblBookBins ( ISBN, BinID, PrimaryBin)&#xA;&#xA;&#xA;--select ISBN, BinID, 1&#xA;--from _DC_DistrictIM dc &#xA;--left outer joindbo.tblBins on tblBins.BinID = dc.BinNum ' +&#xA;--where BinID is not null &#xA;&#xA;/*&#xA;&#xA;IF BOOKBINS ARE USED:&#xA;&#xA;First: &#xA;&#xA;Locate ISBN/BookBin from _DC_DistrictIM&#xA;If an ISBN is in more than one BookBin, then the secondary and tertiary bin should be moved to Bin2, Bin3&#xA;and the otherwise duplicate record deleted&#xA;The book bin in the BookBin field will be the primary and the other locations secondary&#xA;&#xA;Insert queries will handle the inserts to tblBins and tblBookBins&#xA;&#xA;&#xA;*/" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\(3) These are standalone cleanup scripts - Run each script in SQL to determine if there is any cleanup that needs to be PRIOR to the validation containers - and They should definitely be run BEFORE table inserts\Review and Update Material Type"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{3345DCDE-253C-4EC8-951C-3C8F32C9382A}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Review and Update Material Type"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="19">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:SqlStatementSource="/* &#xA;&#xA;Do this for both District and Campus &#xA;&#xA;&#xA;&#xA;*/&#xA;--update _DC_DistrictIM set materialtype = replace(materialtype, '''', '')&#xA;--update _DC_CampusIM set materialtype = replace(materialtype, '''', '')&#xA;&#xA;&#xA;update _DC_DistrictIM set MaterialType = 'Teacher Annotated Workbook' where  MaterialType = 'Teacher Annotatted Workbook'&#xA;update _DC_CampusIM set MaterialType = 'Teacher Annotated Workbook' where  MaterialType = 'Teacher Annotatted Workbook'&#xA;&#xA;select distinct MaterialType from  _DC_CampusIM&#xA;order by 1&#xA;&#xA;--Checked this to make sure the rows were not off&#xA;--select * from _DC_CampusIM where grade = 'Journalism'&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\(3) These are standalone cleanup scripts - Run each script in SQL to determine if there is any cleanup that needs to be PRIOR to the validation containers - and They should definitely be run BEFORE table inserts\Review SLC"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{E0933892-99EC-4C52-AEFD-119A66DC47C2}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Review SLC"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="20">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:SqlStatementSource="/*&#xA;Texas SLC consists of a four digit code indicating grade level (1st char), subject area (2nd char) and discipline or section&#xA;&#xA;*/" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\(3) These are standalone cleanup scripts - Run each script in SQL to determine if there is any cleanup that needs to be PRIOR to the validation containers - and They should definitely be run BEFORE table inserts\Review Subject Area"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{B21180FE-F95C-4F14-B0CC-7A2A81DA3752}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Review Subject Area"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="21">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:SqlStatementSource="/* &#xA;&#xA;Do this for both District and Campus &#xA;&#xA;&#xA;&#xA;*/&#xA;--update _DC_DistrictIM set SubjectArea = replace(SubjectArea, '''', '')&#xA;--update _DC_CampusIM set SubjectArea = replace(SubjectArea, '''', '')&#xA;&#xA;&#xA;--update _DC_DistrictIM set SubjectArea = 'Teacher Annotated Workbook' where  SubjectArea = 'Teacher Annotatted Workbook'&#xA;--update _DC_CampusIM set SubjectArea = 'Teacher Annotated Workbook' where  SubjectArea = 'Teacher Annotatted Workbook'&#xA;&#xA;select distinct SubjectArea from  _DC_CampusIM&#xA;order by 1&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\(4)  District Validation"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{E0F6500E-94DE-48CF-A525-3A1567795319}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="(4)  District Validation">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\(4)  District Validation\Clean up Publisher Names"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Add to Publisher Lookup FIRST"
          DTS:DTSID="{d1a8c76e-cb0b-4cfe-a0ff-03edf893e830}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Clean up Publisher Names"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="22">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{BACA6916-2A2E-4D6E-A01D-FFD222A74312}"
              SQLTask:SqlStatementSource="--select dc.Publisher, pl.Publisher&#xA;update _DC_DistrictIM set Publisher = pl.Publisher&#xA;from _DC_DistrictIM dc&#xA;join _PublisherLookup.dbo.PublisherLookup pl on LookupPublisher = dc.Publisher" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\(4)  District Validation\District Reject"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{9E59D056-194F-4A15-9B70-5422B27D13AE}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="District Reject"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server v10; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              BLOBTempStoragePath=""
              bufferTempStoragePath=""
              version="1">
              <components>
                <component
                  refId="Package\(4)  District Validation\District Reject\Data Conversion"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SqlServer v10; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Data Conversion"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\(4)  District Validation\District Reject\Data Conversion.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\(4)  District Validation\District Reject\Data Conversion.Inputs[Data Conversion Input].Columns[SLC]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="SLC"
                          lineageId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].Columns[SLC]" />
                        <inputColumn
                          refId="Package\(4)  District Validation\District Reject\Data Conversion.Inputs[Data Conversion Input].Columns[Title]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="1000"
                          cachedName="Title"
                          lineageId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].Columns[Title]" />
                        <inputColumn
                          refId="Package\(4)  District Validation\District Reject\Data Conversion.Inputs[Data Conversion Input].Columns[Publisher]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="Publisher"
                          lineageId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].Columns[Publisher]" />
                        <inputColumn
                          refId="Package\(4)  District Validation\District Reject\Data Conversion.Inputs[Data Conversion Input].Columns[FundingSource]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="FundingSource"
                          lineageId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].Columns[FundingSource]" />
                        <inputColumn
                          refId="Package\(4)  District Validation\District Reject\Data Conversion.Inputs[Data Conversion Input].Columns[Price]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Price"
                          lineageId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].Columns[Price]" />
                        <inputColumn
                          refId="Package\(4)  District Validation\District Reject\Data Conversion.Inputs[Data Conversion Input].Columns[MaterialType]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="MaterialType"
                          lineageId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].Columns[MaterialType]" />
                        <inputColumn
                          refId="Package\(4)  District Validation\District Reject\Data Conversion.Inputs[Data Conversion Input].Columns[Edition]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Edition"
                          lineageId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].Columns[Edition]" />
                        <inputColumn
                          refId="Package\(4)  District Validation\District Reject\Data Conversion.Inputs[Data Conversion Input].Columns[Grade]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Grade"
                          lineageId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].Columns[Grade]" />
                        <inputColumn
                          refId="Package\(4)  District Validation\District Reject\Data Conversion.Inputs[Data Conversion Input].Columns[SubjectArea]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="SubjectArea"
                          lineageId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].Columns[SubjectArea]" />
                        <inputColumn
                          refId="Package\(4)  District Validation\District Reject\Data Conversion.Inputs[Data Conversion Input].Columns[RejectMessage]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="RejectMessage"
                          lineageId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].Columns[RejectMessage]" />
                        <inputColumn
                          refId="Package\(4)  District Validation\District Reject\Data Conversion.Inputs[Data Conversion Input].Columns[Expires]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Expires"
                          lineageId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].Columns[Expires]" />
                        <inputColumn
                          refId="Package\(4)  District Validation\District Reject\Data Conversion.Inputs[Data Conversion Input].Columns[BinNum]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="BinNum"
                          lineageId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].Columns[BinNum]" />
                        <inputColumn
                          refId="Package\(4)  District Validation\District Reject\Data Conversion.Inputs[Data Conversion Input].Columns[Copyright]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Copyright"
                          lineageId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].Columns[Copyright]" />
                        <inputColumn
                          refId="Package\(4)  District Validation\District Reject\Data Conversion.Inputs[Data Conversion Input].Columns[Notes]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="Notes"
                          lineageId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].Columns[Notes]" />
                        <inputColumn
                          refId="Package\(4)  District Validation\District Reject\Data Conversion.Inputs[Data Conversion Input].Columns[ISBN]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="ISBN"
                          lineageId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].Columns[ISBN]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\(4)  District Validation\District Reject\Data Conversion.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\(4)  District Validation\District Reject\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\(4)  District Validation\District Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uSLC]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\(4)  District Validation\District Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uSLC]"
                          name="uSLC"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].Columns[SLC]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\(4)  District Validation\District Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uTitle]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="250"
                          lineageId="Package\(4)  District Validation\District Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uTitle]"
                          name="uTitle"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].Columns[Title]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\(4)  District Validation\District Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uPublisher]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\(4)  District Validation\District Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uPublisher]"
                          name="uPublisher"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].Columns[Publisher]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\(4)  District Validation\District Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uFundingSource]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="250"
                          lineageId="Package\(4)  District Validation\District Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uFundingSource]"
                          name="uFundingSource"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].Columns[FundingSource]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\(4)  District Validation\District Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uPrice]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\(4)  District Validation\District Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uPrice]"
                          name="uPrice"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].Columns[Price]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\(4)  District Validation\District Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uMaterialType]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\(4)  District Validation\District Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uMaterialType]"
                          name="uMaterialType"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].Columns[MaterialType]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\(4)  District Validation\District Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uEdition]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\(4)  District Validation\District Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uEdition]"
                          name="uEdition"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].Columns[Edition]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\(4)  District Validation\District Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uGrade]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\(4)  District Validation\District Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uGrade]"
                          name="uGrade"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].Columns[Grade]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\(4)  District Validation\District Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uSubjectArea]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\(4)  District Validation\District Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uSubjectArea]"
                          name="uSubjectArea"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].Columns[SubjectArea]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\(4)  District Validation\District Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uRejectMessage]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="250"
                          lineageId="Package\(4)  District Validation\District Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uRejectMessage]"
                          name="uRejectMessage"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].Columns[RejectMessage]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\(4)  District Validation\District Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uExpires]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\(4)  District Validation\District Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uExpires]"
                          name="uExpires"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].Columns[Expires]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\(4)  District Validation\District Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uBinNum]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\(4)  District Validation\District Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uBinNum]"
                          name="uBinNum"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].Columns[BinNum]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\(4)  District Validation\District Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uCopyright]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\(4)  District Validation\District Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uCopyright]"
                          name="uCopyright"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].Columns[Copyright]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\(4)  District Validation\District Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uNotes]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="250"
                          lineageId="Package\(4)  District Validation\District Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uNotes]"
                          name="uNotes"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].Columns[Notes]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\(4)  District Validation\District Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uISBN]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\(4)  District Validation\District Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uISBN]"
                          name="uISBN"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].Columns[ISBN]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\(4)  District Validation\District Reject\Data Conversion.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\(4)  District Validation\District Reject\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\(4)  District Validation\District Reject\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\(4)  District Validation\District Reject\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\(4)  District Validation\District Reject\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\(4)  District Validation\District Reject\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\(4)  District Validation\District Reject\District Reject"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SqlServer v10; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="District Reject"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT [SLC],[ISBN], [Title],
[Publisher],[Price],[MaterialType],[Edition],[Grade],left([Notes],250) as Notes, [SubjectArea],
[Expires],[Author][FundingSource],[BinNum], [Copyright], [Keep]
,left([RejectMessage], 250) as RejectMessage
  FROM _DC_DistrictIM
  where Import = 0
order by ISBN, Title, MaterialType, Price</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\(4)  District Validation\District Reject\District Reject.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[ConvDB]"
                      connectionManagerRefId="Package.ConnectionManagers[ConvDB]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].Columns[SLC]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].ExternalColumns[SLC]"
                          length="50"
                          lineageId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].Columns[SLC]"
                          name="SLC"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].Columns[Title]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].ExternalColumns[Title]"
                          length="1000"
                          lineageId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].Columns[Title]"
                          name="Title"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].Columns[Publisher]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].ExternalColumns[Publisher]"
                          length="100"
                          lineageId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].Columns[Publisher]"
                          name="Publisher"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].Columns[FundingSource]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].ExternalColumns[FundingSource]"
                          length="500"
                          lineageId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].Columns[FundingSource]"
                          name="FundingSource"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].Columns[Price]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].ExternalColumns[Price]"
                          length="50"
                          lineageId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].Columns[Price]"
                          name="Price"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].Columns[MaterialType]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].ExternalColumns[MaterialType]"
                          length="100"
                          lineageId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].Columns[MaterialType]"
                          name="MaterialType"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].Columns[Edition]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].ExternalColumns[Edition]"
                          length="50"
                          lineageId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].Columns[Edition]"
                          name="Edition"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].Columns[Grade]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].ExternalColumns[Grade]"
                          length="50"
                          lineageId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].Columns[Grade]"
                          name="Grade"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].Columns[SubjectArea]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].ExternalColumns[SubjectArea]"
                          length="100"
                          lineageId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].Columns[SubjectArea]"
                          name="SubjectArea"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].Columns[RejectMessage]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].ExternalColumns[RejectMessage]"
                          length="500"
                          lineageId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].Columns[RejectMessage]"
                          name="RejectMessage"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].Columns[Expires]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].ExternalColumns[Expires]"
                          length="50"
                          lineageId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].Columns[Expires]"
                          name="Expires"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].Columns[BinNum]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].ExternalColumns[BinNum]"
                          length="100"
                          lineageId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].Columns[BinNum]"
                          name="BinNum"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].Columns[Copyright]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].ExternalColumns[Copyright]"
                          length="50"
                          lineageId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].Columns[Copyright]"
                          name="Copyright"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].Columns[Notes]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].ExternalColumns[Notes]"
                          length="100"
                          lineageId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].Columns[Notes]"
                          name="Notes"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].Columns[ISBN]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].ExternalColumns[ISBN]"
                          length="50"
                          lineageId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].Columns[ISBN]"
                          name="ISBN"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].Columns[Keep]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].ExternalColumns[Keep]"
                          length="50"
                          lineageId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].Columns[Keep]"
                          name="Keep"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].ExternalColumns[SLC]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="SLC" />
                        <externalMetadataColumn
                          refId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].ExternalColumns[Title]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          name="Title" />
                        <externalMetadataColumn
                          refId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].ExternalColumns[Publisher]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Publisher" />
                        <externalMetadataColumn
                          refId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].ExternalColumns[FundingSource]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="FundingSource" />
                        <externalMetadataColumn
                          refId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].ExternalColumns[Price]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Price" />
                        <externalMetadataColumn
                          refId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].ExternalColumns[MaterialType]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="MaterialType" />
                        <externalMetadataColumn
                          refId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].ExternalColumns[Edition]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Edition" />
                        <externalMetadataColumn
                          refId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].ExternalColumns[Grade]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Grade" />
                        <externalMetadataColumn
                          refId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].ExternalColumns[SubjectArea]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="SubjectArea" />
                        <externalMetadataColumn
                          refId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].ExternalColumns[RejectMessage]"
                          codePage="1252"
                          dataType="str"
                          length="250"
                          name="RejectMessage" />
                        <externalMetadataColumn
                          refId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].ExternalColumns[Expires]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Expires" />
                        <externalMetadataColumn
                          refId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].ExternalColumns[BinNum]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="BinNum" />
                        <externalMetadataColumn
                          refId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].ExternalColumns[Copyright]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Copyright" />
                        <externalMetadataColumn
                          refId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].ExternalColumns[Notes]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Notes" />
                        <externalMetadataColumn
                          refId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].ExternalColumns[ISBN]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="ISBN" />
                        <externalMetadataColumn
                          refId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output].ExternalColumns[Keep]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Keep" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Error Output].Columns[SLC]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Error Output].Columns[SLC]"
                          name="SLC" />
                        <outputColumn
                          refId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Error Output].Columns[ISBN]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Error Output].Columns[ISBN]"
                          name="ISBN" />
                        <outputColumn
                          refId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Error Output].Columns[Title]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          lineageId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Error Output].Columns[Title]"
                          name="Title" />
                        <outputColumn
                          refId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Error Output].Columns[Publisher]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          lineageId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Error Output].Columns[Publisher]"
                          name="Publisher" />
                        <outputColumn
                          refId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Error Output].Columns[FundingSource]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          lineageId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Error Output].Columns[FundingSource]"
                          name="FundingSource" />
                        <outputColumn
                          refId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Error Output].Columns[Price]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Error Output].Columns[Price]"
                          name="Price" />
                        <outputColumn
                          refId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Error Output].Columns[MaterialType]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          lineageId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Error Output].Columns[MaterialType]"
                          name="MaterialType" />
                        <outputColumn
                          refId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Error Output].Columns[Edition]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Error Output].Columns[Edition]"
                          name="Edition" />
                        <outputColumn
                          refId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Error Output].Columns[Notes]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          lineageId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Error Output].Columns[Notes]"
                          name="Notes" />
                        <outputColumn
                          refId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Error Output].Columns[Grade]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Error Output].Columns[Grade]"
                          name="Grade" />
                        <outputColumn
                          refId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Error Output].Columns[Expires]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Error Output].Columns[Expires]"
                          name="Expires" />
                        <outputColumn
                          refId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Error Output].Columns[SubjectArea]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          lineageId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Error Output].Columns[SubjectArea]"
                          name="SubjectArea" />
                        <outputColumn
                          refId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Error Output].Columns[BinNum]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          lineageId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Error Output].Columns[BinNum]"
                          name="BinNum" />
                        <outputColumn
                          refId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Error Output].Columns[Copyright]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Error Output].Columns[Copyright]"
                          name="Copyright" />
                        <outputColumn
                          refId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Error Output].Columns[Keep]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Error Output].Columns[Keep]"
                          name="Keep" />
                        <outputColumn
                          refId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Error Output].Columns[RejectMessage]"
                          codePage="1252"
                          dataType="str"
                          length="250"
                          lineageId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Error Output].Columns[RejectMessage]"
                          name="RejectMessage" />
                        <outputColumn
                          refId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\(4)  District Validation\District Reject\Excel Destination"
                  componentClassID="Microsoft.ExcelDestination"
                  contactInfo="Excel Destination;Microsoft Corporation; Microsoft SqlServer v10; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Excel Destination"
                  name="Excel Destination"
                  usesDispositions="true">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">'District Warehouse Reject$'</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\(4)  District Validation\District Reject\Excel Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[RejectFile]"
                      connectionManagerRefId="Package.ConnectionManagers[RejectFile]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\(4)  District Validation\District Reject\Excel Destination.Inputs[Excel Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="Excel Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\(4)  District Validation\District Reject\Excel Destination.Inputs[Excel Destination Input].Columns[uSLC]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="uSLC"
                          externalMetadataColumnId="Package\(4)  District Validation\District Reject\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[SLC]"
                          lineageId="Package\(4)  District Validation\District Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uSLC]" />
                        <inputColumn
                          refId="Package\(4)  District Validation\District Reject\Excel Destination.Inputs[Excel Destination Input].Columns[uISBN]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="uISBN"
                          externalMetadataColumnId="Package\(4)  District Validation\District Reject\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[ISBN]"
                          lineageId="Package\(4)  District Validation\District Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uISBN]" />
                        <inputColumn
                          refId="Package\(4)  District Validation\District Reject\Excel Destination.Inputs[Excel Destination Input].Columns[uTitle]"
                          cachedDataType="wstr"
                          cachedLength="250"
                          cachedName="uTitle"
                          externalMetadataColumnId="Package\(4)  District Validation\District Reject\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[Title]"
                          lineageId="Package\(4)  District Validation\District Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uTitle]" />
                        <inputColumn
                          refId="Package\(4)  District Validation\District Reject\Excel Destination.Inputs[Excel Destination Input].Columns[uPublisher]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="uPublisher"
                          externalMetadataColumnId="Package\(4)  District Validation\District Reject\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[Publisher]"
                          lineageId="Package\(4)  District Validation\District Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uPublisher]" />
                        <inputColumn
                          refId="Package\(4)  District Validation\District Reject\Excel Destination.Inputs[Excel Destination Input].Columns[uFundingSource]"
                          cachedDataType="wstr"
                          cachedLength="250"
                          cachedName="uFundingSource"
                          externalMetadataColumnId="Package\(4)  District Validation\District Reject\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[FundingSource]"
                          lineageId="Package\(4)  District Validation\District Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uFundingSource]" />
                        <inputColumn
                          refId="Package\(4)  District Validation\District Reject\Excel Destination.Inputs[Excel Destination Input].Columns[uPrice]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="uPrice"
                          externalMetadataColumnId="Package\(4)  District Validation\District Reject\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[Price]"
                          lineageId="Package\(4)  District Validation\District Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uPrice]" />
                        <inputColumn
                          refId="Package\(4)  District Validation\District Reject\Excel Destination.Inputs[Excel Destination Input].Columns[uMaterialType]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="uMaterialType"
                          externalMetadataColumnId="Package\(4)  District Validation\District Reject\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[MaterialType]"
                          lineageId="Package\(4)  District Validation\District Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uMaterialType]" />
                        <inputColumn
                          refId="Package\(4)  District Validation\District Reject\Excel Destination.Inputs[Excel Destination Input].Columns[uEdition]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="uEdition"
                          externalMetadataColumnId="Package\(4)  District Validation\District Reject\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[Edition]"
                          lineageId="Package\(4)  District Validation\District Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uEdition]" />
                        <inputColumn
                          refId="Package\(4)  District Validation\District Reject\Excel Destination.Inputs[Excel Destination Input].Columns[uGrade]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="uGrade"
                          externalMetadataColumnId="Package\(4)  District Validation\District Reject\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[Grade]"
                          lineageId="Package\(4)  District Validation\District Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uGrade]" />
                        <inputColumn
                          refId="Package\(4)  District Validation\District Reject\Excel Destination.Inputs[Excel Destination Input].Columns[uSubjectArea]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="uSubjectArea"
                          externalMetadataColumnId="Package\(4)  District Validation\District Reject\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[SubjectArea]"
                          lineageId="Package\(4)  District Validation\District Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uSubjectArea]" />
                        <inputColumn
                          refId="Package\(4)  District Validation\District Reject\Excel Destination.Inputs[Excel Destination Input].Columns[uRejectMessage]"
                          cachedDataType="wstr"
                          cachedLength="250"
                          cachedName="uRejectMessage"
                          externalMetadataColumnId="Package\(4)  District Validation\District Reject\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[RejectMessage]"
                          lineageId="Package\(4)  District Validation\District Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uRejectMessage]" />
                        <inputColumn
                          refId="Package\(4)  District Validation\District Reject\Excel Destination.Inputs[Excel Destination Input].Columns[uNotes]"
                          cachedDataType="wstr"
                          cachedLength="250"
                          cachedName="uNotes"
                          externalMetadataColumnId="Package\(4)  District Validation\District Reject\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[Note]"
                          lineageId="Package\(4)  District Validation\District Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uNotes]" />
                        <inputColumn
                          refId="Package\(4)  District Validation\District Reject\Excel Destination.Inputs[Excel Destination Input].Columns[uExpires]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="uExpires"
                          externalMetadataColumnId="Package\(4)  District Validation\District Reject\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[Expires]"
                          lineageId="Package\(4)  District Validation\District Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uExpires]" />
                        <inputColumn
                          refId="Package\(4)  District Validation\District Reject\Excel Destination.Inputs[Excel Destination Input].Columns[uBinNum]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="uBinNum"
                          externalMetadataColumnId="Package\(4)  District Validation\District Reject\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[BinNum]"
                          lineageId="Package\(4)  District Validation\District Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uBinNum]" />
                        <inputColumn
                          refId="Package\(4)  District Validation\District Reject\Excel Destination.Inputs[Excel Destination Input].Columns[uCopyright]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="uCopyright"
                          externalMetadataColumnId="Package\(4)  District Validation\District Reject\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[Copyright]"
                          lineageId="Package\(4)  District Validation\District Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uCopyright]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\(4)  District Validation\District Reject\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[SLC]"
                          dataType="wstr"
                          length="255"
                          name="SLC" />
                        <externalMetadataColumn
                          refId="Package\(4)  District Validation\District Reject\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[ISBN]"
                          dataType="wstr"
                          length="255"
                          name="ISBN" />
                        <externalMetadataColumn
                          refId="Package\(4)  District Validation\District Reject\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[Title]"
                          dataType="wstr"
                          length="255"
                          name="Title" />
                        <externalMetadataColumn
                          refId="Package\(4)  District Validation\District Reject\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[Publisher]"
                          dataType="wstr"
                          length="255"
                          name="Publisher" />
                        <externalMetadataColumn
                          refId="Package\(4)  District Validation\District Reject\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[FundingSource]"
                          dataType="wstr"
                          length="255"
                          name="FundingSource" />
                        <externalMetadataColumn
                          refId="Package\(4)  District Validation\District Reject\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[Price]"
                          dataType="wstr"
                          length="255"
                          name="Price" />
                        <externalMetadataColumn
                          refId="Package\(4)  District Validation\District Reject\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[MaterialType]"
                          dataType="wstr"
                          length="255"
                          name="MaterialType" />
                        <externalMetadataColumn
                          refId="Package\(4)  District Validation\District Reject\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[Edition]"
                          dataType="wstr"
                          length="255"
                          name="Edition" />
                        <externalMetadataColumn
                          refId="Package\(4)  District Validation\District Reject\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[Grade]"
                          dataType="wstr"
                          length="255"
                          name="Grade" />
                        <externalMetadataColumn
                          refId="Package\(4)  District Validation\District Reject\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[SubjectArea]"
                          dataType="wstr"
                          length="255"
                          name="SubjectArea" />
                        <externalMetadataColumn
                          refId="Package\(4)  District Validation\District Reject\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[RejectMessage]"
                          dataType="wstr"
                          length="255"
                          name="RejectMessage" />
                        <externalMetadataColumn
                          refId="Package\(4)  District Validation\District Reject\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[Note]"
                          dataType="wstr"
                          length="255"
                          name="Note" />
                        <externalMetadataColumn
                          refId="Package\(4)  District Validation\District Reject\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[Expires]"
                          dataType="wstr"
                          length="255"
                          name="Expires" />
                        <externalMetadataColumn
                          refId="Package\(4)  District Validation\District Reject\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[BinNum]"
                          dataType="wstr"
                          length="255"
                          name="BinNum" />
                        <externalMetadataColumn
                          refId="Package\(4)  District Validation\District Reject\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[Copyright]"
                          dataType="wstr"
                          length="255"
                          name="Copyright" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\(4)  District Validation\District Reject\Excel Destination.Outputs[Excel Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Excel Destination Error Output"
                      synchronousInputId="Package\(4)  District Validation\District Reject\Excel Destination.Inputs[Excel Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\(4)  District Validation\District Reject\Excel Destination.Outputs[Excel Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\(4)  District Validation\District Reject\Excel Destination.Outputs[Excel Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\(4)  District Validation\District Reject\Excel Destination.Outputs[Excel Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\(4)  District Validation\District Reject\Excel Destination.Outputs[Excel Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\(4)  District Validation\District Reject.Paths[Data Conversion Output]"
                  endId="Package\(4)  District Validation\District Reject\Excel Destination.Inputs[Excel Destination Input]"
                  name="Data Conversion Output"
                  startId="Package\(4)  District Validation\District Reject\Data Conversion.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\(4)  District Validation\District Reject.Paths[OLE DB Source Output]"
                  endId="Package\(4)  District Validation\District Reject\Data Conversion.Inputs[Data Conversion Input]"
                  name="OLE DB Source Output"
                  startId="Package\(4)  District Validation\District Reject\District Reject.Outputs[OLE DB Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\(4)  District Validation\Duplicate ISBNs"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{4A0FAE44-D88D-4925-9EEC-1A88B2A78D82}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Duplicate ISBNs"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="22">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{BACA6916-2A2E-4D6E-A01D-FFD222A74312}"
              SQLTask:SqlStatementSource="/*Data Points that must match are ISBN, Title, Publisher, Material Type and Price */&#xA;&#xA;&#xA;-- SELECT * FROM _DC_DistrictIM&#xA;update _DC_DistrictIM set Import = 0,&#xA;RejectMessage = &#xA;  (CASE when RejectMessage is Null then &#xA;'ISBN Data Points Do Not Match' ELSE (RejectMessage + '; ' + 'ISBN Data Points Do Not Match') end )&#xA;&#xA;where import = 1 and ltrim(rtrim(isNull(ISBN, ''))) in &#xA;&#x9;(&#xA;&#x9;select ltrim(rtrim(isNull(ISBN, ''))) as ISBN&#xA;&#x9;from (&#xA;&#x9;&#x9;select distinct ISBN, Title, Publisher, MaterialType, Price&#xA;&#x9;&#x9;from _DC_DistrictIM&#xA;&#x9;&#x9;where import = 1&#xA;&#x9;&#x9;and ltrim(rtrim(isNull(ISBN, ''))) &lt;&gt; ''&#xA;&#x9;&#x9;) a&#xA;&#x9;group by ltrim(rtrim(isNull(ISBN, ''))) having count(*) &gt; 1&#xA;&#x9;) &#xA;-- ORDER BY ISBN" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\(4)  District Validation\Invalid District ISBN"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{84DD3DE4-5813-4379-9CEC-6E6ED72F4921}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Invalid District ISBN"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="22">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{BACA6916-2A2E-4D6E-A01D-FFD222A74312}"
              SQLTask:SqlStatementSource="--select * from _DC_DistrictIM&#xA;update _DC_DistrictIM set Import = 0,&#xA;RejectMessage = &#xA;  (CASE when RejectMessage is Null then &#xA;'Missing District ISBN' ELSE (RejectMessage + '; ' + 'Missing District ISBN') end )&#xA;where ((ISBN is null) or (ISBN is not null and len(rtrim(ltrim(ISBN))) = 0))&#xA;&#xA;--select isbn, len(isbn), * from _DC_DistrictIM&#xA;update _DC_DistrictIM set Import = 0,&#xA;RejectMessage = &#xA;  (CASE when RejectMessage is Null then &#xA;'Invalid District ISBN Length' ELSE (RejectMessage + '; ' + 'Invalid District ISBN Length') end )&#xA;where len(rtrim(ltrim(ISBN))) not in (10, 13)&#xA;&#xA;--select * from _DC_DistrictIM&#xA;update _DC_DistrictIM set Import = 0,&#xA;RejectMessage = &#xA;  (CASE when RejectMessage is Null then &#xA;'Invalid District ISBN' ELSE (RejectMessage + '; ' + 'Invalid District ISBN') end )&#xA;WHERE   ISBN like '%[^A-Z,0-9]%'&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\(4)  District Validation\Invalid SLC"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:Disabled="True"
          DTS:DTSID="{76F0781D-7248-4D8A-88E3-6BDA05B9972C}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Invalid SLC"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="22">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{BACA6916-2A2E-4D6E-A01D-FFD222A74312}"
              SQLTask:SqlStatementSource="-- 4 Digit SLC is only Required in TEXAS&#xA;--select * from _DC_DistrictIM&#xA;update _DC_DistrictIM set Import = 0, RejectMessage = &#xA;  (CASE when RejectMessage is Null then &#xA;'Invalid SLC Length' ELSE (RejectMessage + '; ' + 'Invalid SLC Length') end )&#xA;where (SLC is not null and len(rtrim(ltrim(SLC))) &gt; 4 )&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\(4)  District Validation\Missing Publisher"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{009725e3-9629-4ce0-a2a4-cd915f17f35d}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Missing Publisher"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="22">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{BACA6916-2A2E-4D6E-A01D-FFD222A74312}"
              SQLTask:SqlStatementSource="&#xA;--select distinct Publisher from _DC_DistrictIM&#xA;&#xA;--select * from _DC_DistrictIM&#xA;update _DC_DistrictIM set Publisher = 'UNKNOWN'&#xA;where ((Publisher is null) or (Publisher is not null and len(rtrim(ltrim(Publisher))) = 0 ))&#xA;&#xA;&#xA;/*&#xA;update _DC_DistrictIM set Import = 0, RejectMessage = &#xA;  (CASE when RejectMessage is Null then &#xA;'Missing Publisher' ELSE (RejectMessage + '; ' +'Missing Publisher') end )&#xA;where ((Publisher is null) or (Publisher is not null and len(rtrim(ltrim(Publisher))) = 0 ))&#xA;*/&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\(4)  District Validation\Missing Title"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{5da24e54-2136-49ad-aedf-4f410ac48603}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Missing Title"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="22">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{BACA6916-2A2E-4D6E-A01D-FFD222A74312}"
              SQLTask:SqlStatementSource="&#xA;--select * from _DC_DistrictIM&#xA;update _DC_DistrictIM set Import = 0, RejectMessage = &#xA;  (CASE when RejectMessage is Null then &#xA;'Missing Title' ELSE (RejectMessage + '; ' + 'Missing Title') end )&#xA;where ((Title is null) or (Title is not null and len(rtrim(ltrim(Title))) = 0 ))&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\(4)  District Validation.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{D90384FB-86FD-4190-87CB-638680A73436}"
          DTS:From="Package\(4)  District Validation\Invalid District ISBN"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\(4)  District Validation\Missing Publisher" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\(4)  District Validation.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{4426D9F9-5CB3-4D78-B3CB-225A929A467B}"
          DTS:From="Package\(4)  District Validation\Missing Publisher"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\(4)  District Validation\Clean up Publisher Names" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\(4)  District Validation.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{914B7560-25A2-49C2-A07A-4C78FD24D7FB}"
          DTS:From="Package\(4)  District Validation\Clean up Publisher Names"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\(4)  District Validation\Missing Title" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\(4)  District Validation.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{09ACCFCE-47D5-4808-ADEB-DC928A9AB6E9}"
          DTS:From="Package\(4)  District Validation\Missing Title"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\(4)  District Validation\Duplicate ISBNs" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\(4)  District Validation.PrecedenceConstraints[Constraint 4]"
          DTS:CreationName=""
          DTS:DTSID="{8D6B2FFE-BFC9-40BC-A68F-AC8C844CC219}"
          DTS:From="Package\(4)  District Validation\Duplicate ISBNs"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 4"
          DTS:To="Package\(4)  District Validation\Invalid SLC" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\(4)  District Validation.PrecedenceConstraints[Constraint 5]"
          DTS:CreationName=""
          DTS:DTSID="{6B90F78A-74BE-4782-A9FC-D50082CE2CAE}"
          DTS:From="Package\(4)  District Validation\Invalid SLC"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 5"
          DTS:To="Package\(4)  District Validation\District Reject" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\(5)  Campus Validation"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{DDE2772D-1131-4DCC-9652-C65EDB186889}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="(5)  Campus Validation">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\(5)  Campus Validation\Campus Reject"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{AAE29559-FBD3-4218-A29E-AF7759D08298}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Campus Reject"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server v10; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              BLOBTempStoragePath=""
              bufferTempStoragePath=""
              version="1">
              <components>
                <component
                  refId="Package\(5)  Campus Validation\Campus Reject\Data Conversion"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SqlServer v10; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Data Conversion"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Inputs[Data Conversion Input].Columns[CampusID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="CampusID"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].Columns[CampusID]" />
                        <inputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Inputs[Data Conversion Input].Columns[QtyDistributed]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="QtyDistributed"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].Columns[QtyDistributed]" />
                        <inputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Inputs[Data Conversion Input].Columns[SLC]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="SLC"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].Columns[SLC]" />
                        <inputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Inputs[Data Conversion Input].Columns[ISBN]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="ISBN"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].Columns[ISBN]" />
                        <inputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Inputs[Data Conversion Input].Columns[Title]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="1000"
                          cachedName="Title"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].Columns[Title]" />
                        <inputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Inputs[Data Conversion Input].Columns[Publisher]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="Publisher"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].Columns[Publisher]" />
                        <inputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Inputs[Data Conversion Input].Columns[Price]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Price"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].Columns[Price]" />
                        <inputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Inputs[Data Conversion Input].Columns[MaterialType]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="MaterialType"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].Columns[MaterialType]" />
                        <inputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Inputs[Data Conversion Input].Columns[Edition]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Edition"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].Columns[Edition]" />
                        <inputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Inputs[Data Conversion Input].Columns[Grade]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Grade"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].Columns[Grade]" />
                        <inputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Inputs[Data Conversion Input].Columns[SubjectArea]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="SubjectArea"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].Columns[SubjectArea]" />
                        <inputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Inputs[Data Conversion Input].Columns[Expires]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Expires"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].Columns[Expires]" />
                        <inputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Inputs[Data Conversion Input].Columns[Author]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="Author"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].Columns[Author]" />
                        <inputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Inputs[Data Conversion Input].Columns[FundingSource]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="FundingSource"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].Columns[FundingSource]" />
                        <inputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Inputs[Data Conversion Input].Columns[RejectMessage]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="RejectMessage"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].Columns[RejectMessage]" />
                        <inputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Inputs[Data Conversion Input].Columns[Notes]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="Notes"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].Columns[Notes]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uCampusID]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uCampusID]"
                          name="uCampusID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].Columns[CampusID]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uQtyDistributed]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uQtyDistributed]"
                          name="uQtyDistributed"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].Columns[QtyDistributed]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uSLC]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uSLC]"
                          name="uSLC"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].Columns[SLC]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uISBN]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uISBN]"
                          name="uISBN"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].Columns[ISBN]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uTitle]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uTitle]"
                          name="uTitle"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].Columns[Title]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uPublisher]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uPublisher]"
                          name="uPublisher"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].Columns[Publisher]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uPrice]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uPrice]"
                          name="uPrice"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].Columns[Price]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uMaterialType]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uMaterialType]"
                          name="uMaterialType"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].Columns[MaterialType]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uEdition]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uEdition]"
                          name="uEdition"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].Columns[Edition]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uGrade]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uGrade]"
                          name="uGrade"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].Columns[Grade]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uSubjectArea]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uSubjectArea]"
                          name="uSubjectArea"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].Columns[SubjectArea]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uExpires]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uExpires]"
                          name="uExpires"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].Columns[Expires]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uAuthor]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uAuthor]"
                          name="uAuthor"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].Columns[Author]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uFundingSource]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uFundingSource]"
                          name="uFundingSource"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].Columns[FundingSource]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uRejectMessage]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="250"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uRejectMessage]"
                          name="uRejectMessage"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].Columns[RejectMessage]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uNotes]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="250"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uNotes]"
                          name="uNotes"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].Columns[Notes]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\(5)  Campus Validation\Campus Reject\Excel Destination"
                  componentClassID="Microsoft.ExcelDestination"
                  contactInfo="Excel Destination;Microsoft Corporation; Microsoft SqlServer v10; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Excel Destination"
                  name="Excel Destination"
                  usesDispositions="true">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">'Campus Reject$'</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\(5)  Campus Validation\Campus Reject\Excel Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[RejectFile]"
                      connectionManagerRefId="Package.ConnectionManagers[RejectFile]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\(5)  Campus Validation\Campus Reject\Excel Destination.Inputs[Excel Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="Excel Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Excel Destination.Inputs[Excel Destination Input].Columns[uCampusID]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="uCampusID"
                          externalMetadataColumnId="Package\(5)  Campus Validation\Campus Reject\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[CampusID]"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uCampusID]" />
                        <inputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Excel Destination.Inputs[Excel Destination Input].Columns[uQtyDistributed]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="uQtyDistributed"
                          externalMetadataColumnId="Package\(5)  Campus Validation\Campus Reject\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[Qty Distributed]"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uQtyDistributed]" />
                        <inputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Excel Destination.Inputs[Excel Destination Input].Columns[uSLC]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="uSLC"
                          externalMetadataColumnId="Package\(5)  Campus Validation\Campus Reject\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[SLC]"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uSLC]" />
                        <inputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Excel Destination.Inputs[Excel Destination Input].Columns[uISBN]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="uISBN"
                          externalMetadataColumnId="Package\(5)  Campus Validation\Campus Reject\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[ISBN]"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uISBN]" />
                        <inputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Excel Destination.Inputs[Excel Destination Input].Columns[uTitle]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="uTitle"
                          externalMetadataColumnId="Package\(5)  Campus Validation\Campus Reject\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[Title]"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uTitle]" />
                        <inputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Excel Destination.Inputs[Excel Destination Input].Columns[uPublisher]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="uPublisher"
                          externalMetadataColumnId="Package\(5)  Campus Validation\Campus Reject\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[Publisher]"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uPublisher]" />
                        <inputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Excel Destination.Inputs[Excel Destination Input].Columns[uPrice]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="uPrice"
                          externalMetadataColumnId="Package\(5)  Campus Validation\Campus Reject\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[Price]"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uPrice]" />
                        <inputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Excel Destination.Inputs[Excel Destination Input].Columns[uMaterialType]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="uMaterialType"
                          externalMetadataColumnId="Package\(5)  Campus Validation\Campus Reject\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[MaterialType]"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uMaterialType]" />
                        <inputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Excel Destination.Inputs[Excel Destination Input].Columns[uEdition]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="uEdition"
                          externalMetadataColumnId="Package\(5)  Campus Validation\Campus Reject\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[Edition]"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uEdition]" />
                        <inputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Excel Destination.Inputs[Excel Destination Input].Columns[uGrade]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="uGrade"
                          externalMetadataColumnId="Package\(5)  Campus Validation\Campus Reject\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[Grade]"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uGrade]" />
                        <inputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Excel Destination.Inputs[Excel Destination Input].Columns[uNotes]"
                          cachedDataType="wstr"
                          cachedLength="250"
                          cachedName="uNotes"
                          externalMetadataColumnId="Package\(5)  Campus Validation\Campus Reject\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[Note]"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uNotes]" />
                        <inputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Excel Destination.Inputs[Excel Destination Input].Columns[uSubjectArea]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="uSubjectArea"
                          externalMetadataColumnId="Package\(5)  Campus Validation\Campus Reject\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[SubjectArea]"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uSubjectArea]" />
                        <inputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Excel Destination.Inputs[Excel Destination Input].Columns[uExpires]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="uExpires"
                          externalMetadataColumnId="Package\(5)  Campus Validation\Campus Reject\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[Expires]"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uExpires]" />
                        <inputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Excel Destination.Inputs[Excel Destination Input].Columns[uAuthor]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="uAuthor"
                          externalMetadataColumnId="Package\(5)  Campus Validation\Campus Reject\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[Author]"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uAuthor]" />
                        <inputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Excel Destination.Inputs[Excel Destination Input].Columns[uFundingSource]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="uFundingSource"
                          externalMetadataColumnId="Package\(5)  Campus Validation\Campus Reject\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[FundingSource]"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uFundingSource]" />
                        <inputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Excel Destination.Inputs[Excel Destination Input].Columns[uRejectMessage]"
                          cachedDataType="wstr"
                          cachedLength="250"
                          cachedName="uRejectMessage"
                          externalMetadataColumnId="Package\(5)  Campus Validation\Campus Reject\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[RejectMessage]"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Outputs[Data Conversion Output].Columns[uRejectMessage]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[CampusID]"
                          dataType="wstr"
                          length="255"
                          name="CampusID" />
                        <externalMetadataColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[Qty Distributed]"
                          dataType="wstr"
                          length="255"
                          name="Qty Distributed" />
                        <externalMetadataColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[SLC]"
                          dataType="wstr"
                          length="255"
                          name="SLC" />
                        <externalMetadataColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[ISBN]"
                          dataType="wstr"
                          length="255"
                          name="ISBN" />
                        <externalMetadataColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[Title]"
                          dataType="wstr"
                          length="255"
                          name="Title" />
                        <externalMetadataColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[Publisher]"
                          dataType="wstr"
                          length="255"
                          name="Publisher" />
                        <externalMetadataColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[Price]"
                          dataType="wstr"
                          length="255"
                          name="Price" />
                        <externalMetadataColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[MaterialType]"
                          dataType="wstr"
                          length="255"
                          name="MaterialType" />
                        <externalMetadataColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[Edition]"
                          dataType="wstr"
                          length="255"
                          name="Edition" />
                        <externalMetadataColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[Grade]"
                          dataType="wstr"
                          length="255"
                          name="Grade" />
                        <externalMetadataColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[Note]"
                          dataType="wstr"
                          length="255"
                          name="Note" />
                        <externalMetadataColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[SubjectArea]"
                          dataType="wstr"
                          length="255"
                          name="SubjectArea" />
                        <externalMetadataColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[Expires]"
                          dataType="wstr"
                          length="255"
                          name="Expires" />
                        <externalMetadataColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[Author]"
                          dataType="wstr"
                          length="255"
                          name="Author" />
                        <externalMetadataColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[FundingSource]"
                          dataType="wstr"
                          length="255"
                          name="FundingSource" />
                        <externalMetadataColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[RejectMessage]"
                          dataType="wstr"
                          length="255"
                          name="RejectMessage" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\(5)  Campus Validation\Campus Reject\Excel Destination.Outputs[Excel Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Excel Destination Error Output"
                      synchronousInputId="Package\(5)  Campus Validation\Campus Reject\Excel Destination.Inputs[Excel Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Excel Destination.Outputs[Excel Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\Excel Destination.Outputs[Excel Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\Excel Destination.Outputs[Excel Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\Excel Destination.Outputs[Excel Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SqlServer v10; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="OLE DB Source"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT [CampusID], [QtyDistributed], [SLC], [ISBN], [Title],
substring(Publisher, 1, 200) as [Publisher], [Price], [MaterialType], [Edition], [Grade], [Notes], [SubjectArea],
[Expires], Author, FundingSource,
 left([RejectMessage], 250) as RejectMessage
  FROM _DC_CampusIM
  where Import = 0
Order by ISBN, Title, MaterialType, Price</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[ConvDB]"
                      connectionManagerRefId="Package.ConnectionManagers[ConvDB]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].Columns[CampusID]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[CampusID]"
                          length="50"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].Columns[CampusID]"
                          name="CampusID"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].Columns[QtyDistributed]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[QtyDistributed]"
                          length="50"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].Columns[QtyDistributed]"
                          name="QtyDistributed"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].Columns[SLC]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[SLC]"
                          length="50"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].Columns[SLC]"
                          name="SLC"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].Columns[ISBN]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ISBN]"
                          length="50"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].Columns[ISBN]"
                          name="ISBN"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].Columns[Title]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Title]"
                          length="1000"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].Columns[Title]"
                          name="Title"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].Columns[Publisher]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Publisher]"
                          length="100"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].Columns[Publisher]"
                          name="Publisher"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].Columns[Price]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Price]"
                          length="50"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].Columns[Price]"
                          name="Price"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].Columns[MaterialType]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[MaterialType]"
                          length="100"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].Columns[MaterialType]"
                          name="MaterialType"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].Columns[Edition]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Edition]"
                          length="50"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].Columns[Edition]"
                          name="Edition"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].Columns[Grade]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Grade]"
                          length="50"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].Columns[Grade]"
                          name="Grade"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].Columns[SubjectArea]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[SubjectArea]"
                          length="100"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].Columns[SubjectArea]"
                          name="SubjectArea"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].Columns[Expires]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Expires]"
                          length="50"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].Columns[Expires]"
                          name="Expires"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].Columns[Author]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Author]"
                          length="100"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].Columns[Author]"
                          name="Author"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].Columns[FundingSource]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[FundingSource]"
                          length="500"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].Columns[FundingSource]"
                          name="FundingSource"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].Columns[RejectMessage]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[RejectMessage]"
                          length="500"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].Columns[RejectMessage]"
                          name="RejectMessage"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].Columns[Notes]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Notes]"
                          length="100"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].Columns[Notes]"
                          name="Notes"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[CampusID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="CampusID" />
                        <externalMetadataColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[QtyDistributed]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="QtyDistributed" />
                        <externalMetadataColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[SLC]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="SLC" />
                        <externalMetadataColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ISBN]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="ISBN" />
                        <externalMetadataColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Title]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          name="Title" />
                        <externalMetadataColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Publisher]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Publisher" />
                        <externalMetadataColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Price]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Price" />
                        <externalMetadataColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[MaterialType]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="MaterialType" />
                        <externalMetadataColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Edition]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Edition" />
                        <externalMetadataColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Grade]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Grade" />
                        <externalMetadataColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[SubjectArea]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="SubjectArea" />
                        <externalMetadataColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Expires]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Expires" />
                        <externalMetadataColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Author]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Author" />
                        <externalMetadataColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[FundingSource]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="FundingSource" />
                        <externalMetadataColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[RejectMessage]"
                          codePage="1252"
                          dataType="str"
                          length="250"
                          name="RejectMessage" />
                        <externalMetadataColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Notes]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Notes" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[CampusID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[CampusID]"
                          name="CampusID" />
                        <outputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[QtyDistributed]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[QtyDistributed]"
                          name="QtyDistributed" />
                        <outputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[SLC]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[SLC]"
                          name="SLC" />
                        <outputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ISBN]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ISBN]"
                          name="ISBN" />
                        <outputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Title]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Title]"
                          name="Title" />
                        <outputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Publisher]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Publisher]"
                          name="Publisher" />
                        <outputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Price]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Price]"
                          name="Price" />
                        <outputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[MaterialType]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[MaterialType]"
                          name="MaterialType" />
                        <outputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Edition]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Edition]"
                          name="Edition" />
                        <outputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Grade]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Grade]"
                          name="Grade" />
                        <outputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Notes]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Notes]"
                          name="Notes" />
                        <outputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[SubjectArea]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[SubjectArea]"
                          name="SubjectArea" />
                        <outputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Expires]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Expires]"
                          name="Expires" />
                        <outputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Author]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Author]"
                          name="Author" />
                        <outputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[FundingSource]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[FundingSource]"
                          name="FundingSource" />
                        <outputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[RejectMessage]"
                          codePage="1252"
                          dataType="str"
                          length="250"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[RejectMessage]"
                          name="RejectMessage" />
                        <outputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\(5)  Campus Validation\Campus Reject.Paths[Data Conversion Output]"
                  endId="Package\(5)  Campus Validation\Campus Reject\Excel Destination.Inputs[Excel Destination Input]"
                  name="Data Conversion Output"
                  startId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\(5)  Campus Validation\Campus Reject.Paths[OLE DB Source Output]"
                  endId="Package\(5)  Campus Validation\Campus Reject\Data Conversion.Inputs[Data Conversion Input]"
                  name="OLE DB Source Output"
                  startId="Package\(5)  Campus Validation\Campus Reject\OLE DB Source.Outputs[OLE DB Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\(5)  Campus Validation\Clean up Publisher Names"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Add to Publisher Lookup FIRST"
          DTS:DTSID="{0507C72C-F050-4275-B233-E86528F8B54F}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Clean up Publisher Names"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="23">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{BACA6916-2A2E-4D6E-A01D-FFD222A74312}"
              SQLTask:SqlStatementSource="--select dc.Publisher, pl.Publisher&#xA;update _DC_CampusIM set Publisher = pl.Publisher&#xA;from _DC_CampusIM dc&#xA;join _PublisherLookup.dbo.PublisherLookup pl on LookupPublisher = dc.Publisher&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\(5)  Campus Validation\Invalid Campus ISBN"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="*** Generic ***"
          DTS:DTSID="{D2A720AE-919F-4254-BE0A-CC29CF200561}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Invalid Campus ISBN"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="23">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{BACA6916-2A2E-4D6E-A01D-FFD222A74312}"
              SQLTask:SqlStatementSource="--select * from _DC_CampusIM&#xA;update _DC_CampusIM set Import = 0,&#xA;RejectMessage = &#xA;  (CASE when RejectMessage is Null then &#xA;'Missing Campus ISBN' ELSE (RejectMessage + '; ' + 'Missing Campus ISBN') end )&#xA;where ((ISBN is null) or (ISBN is not null and len(rtrim(ltrim(ISBN))) = 0))&#xA;&#xA;--select isbn, len(isbn), * from _DC_CampusIM&#xA;update _DC_CampusIM set Import = 0,&#xA;RejectMessage = &#xA;  (CASE when RejectMessage is Null then &#xA;'Invalid Campus ISBN Length' ELSE (RejectMessage + '; ' + 'Invalid Campus ISBN Length') end )&#xA;where len(rtrim(ltrim(ISBN))) not in (10, 13)&#xA;&#xA;--select * from _DC_CampusIM&#xA;update _DC_CampusIM set Import = 0,&#xA;RejectMessage = &#xA;  (CASE when RejectMessage is Null then &#xA;'Invalid Campus ISBN' ELSE (RejectMessage + '; ' + 'Invalid Campus ISBN') end )&#xA;WHERE   ISBN like '%[^A-Z,0-9]%'&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\(5)  Campus Validation\ISBN Invalid in  District Table"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{E022541E-54AD-4A43-A0ED-C65298B15149}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="ISBN Invalid in  District Table"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="23">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{BACA6916-2A2E-4D6E-A01D-FFD222A74312}"
              SQLTask:SqlStatementSource="--select * from _DC_CampusIM&#xA;update _DC_CampusIM&#xA;set Import = 0, RejectMessage = &#xA;  (CASE when RejectMessage is Null then &#xA;'ISBN is Invalid in District File' ELSE (RejectMessage + '; ' + 'ISBN is Invalid in District File') end )&#xA;where ISBN is not null AND campusOwned = 0&#xA;and ISBN in (select ISBN from _DC_DistrictIM where Import = 0)&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\(5)  Campus Validation\Missing Publisher"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{281B67BB-774B-468C-B766-57723ED4F406}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Missing Publisher"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="23">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{BACA6916-2A2E-4D6E-A01D-FFD222A74312}"
              SQLTask:SqlStatementSource="--select * from _DC_CampusIM&#xA;update _DC_CampusIM set Publisher = 'UNKNOWN'&#xA;where import = 1&#xA;and ((Publisher is null) or (Publisher is not null and len(rtrim(ltrim(Publisher))) = 0 ))&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\(5)  Campus Validation\Missing Title"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{ADC2276B-A890-41C9-B8C3-06DC02CC474B}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Missing Title"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="23">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{BACA6916-2A2E-4D6E-A01D-FFD222A74312}"
              SQLTask:SqlStatementSource="--select * from _DC_CampusIM&#xA;update _DC_CampusIM set Import = 0, RejectMessage = &#xA;  (CASE when RejectMessage is Null then &#xA;'Missing Title' ELSE (RejectMessage + '; ' + 'Missing Title') end )&#xA;where ((Title is null) or (Title is not null and len(rtrim(ltrim(Title))) = 0 ))&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\(5)  Campus Validation\Numeric Quantity"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{0FE41D5B-9A5C-49C6-A0C2-F4968F960F75}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Numeric Quantity"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="23">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{BACA6916-2A2E-4D6E-A01D-FFD222A74312}"
              SQLTask:SqlStatementSource="--select *  FROM _DC_CampusIM&#xA;update _DC_CampusIM set Import = 0, RejectMessage = &#xA;  (CASE when RejectMessage is Null then &#xA;'Quantity Not Numeric' ELSE (RejectMessage + '; ' + 'Quantity Not Numeric') end )&#xA;  where isNumeric(qtydistributed) = 0" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\(5)  Campus Validation\RUN ME AS SELECT- ISBN not in District Table"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="if the District was created by Campus "
          DTS:Disabled="True"
          DTS:DTSID="{A1E0A7A1-BC43-4FB9-B26E-0D6FBA83BDF1}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="RUN ME AS SELECT- ISBN not in District Table"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="24">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{BACA6916-2A2E-4D6E-A01D-FFD222A74312}"
              SQLTask:SqlStatementSource="select * from _DC_CampusIM&#xA;--update _DC_CampusIM set Import = 0, RejectMessage = &#xA;--  (CASE when RejectMessage is Null then &#xA;--'Campus ISBN not Found In District List' ELSE (RejectMessage + '; ' + 'Campus ISBN not Found In District List') end )&#xA;where import = 1 and CampusOwned = 0&#xA;and rtrim(ltrim(ISBN)) not in (select rtrim(ltrim(ISBN)) from _DC_DistrictIM where import = 1)&#xA;&#xA;/*&#xA;&#xA;INSERT INTO [_DC_DistrictIM]&#xA;( [SLC] , [ISBN], [Title], [Publisher], [Price],&#xA;&#x9;[MaterialType],[Edition],[Grade],[Notes],[SubjectArea],[Expires],&#xA;&#x9;[Author],[FundingSource] ,[BinNum],[Copyright] &#xA;)&#xA; &#xA; select distinct [SLC],[ISBN],[Title],[Publisher],[Price],&#xA;&#x9;[MaterialType],[Edition],[Grade],[Notes],[SubjectArea],[Expires],&#xA;&#x9;[Author],[FundingSource],[BinNum],[Copyright]&#xA;&#x9;&#xA;from _DC_CampusIM&#xA;--where ltrim(rtrim(ISBN)) &lt;&gt; ''&#xA;--and ltrim(rtrim(ISBN)) not in (select  ltrim(rtrim(ISBN)) from [_DC_DistrictIM])&#xA;where import = 1 and and CampusOwned = 0&#xA;ltrim(rtrim(ISBN)) &lt;&gt; '' and QtyDistributed &gt; 0 and rtrim(ltrim(ISBN)) not in (select rtrim(ltrim(ISBN)) from _DC_DistrictIM where import = 1)&#xA;&#xA;&#xA;&#xA;*/&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\(5)  Campus Validation\Validate Campus IDs"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{BC88C67F-96E8-47BF-B22D-CE213BD97997}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Validate Campus IDs"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="23">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{BACA6916-2A2E-4D6E-A01D-FFD222A74312}"
              SQLTask:SqlStatementSource="&#xA;declare @StagDB nvarchar(100)&#xA;&#xA;set @StagDB = ?&#xA;&#xA;declare @notes nvarchar(500)&#xA;set @notes = N'''CampusID not found in tblCampuses' &#xA;DECLARE @SQL NVARCHAR(MAX)&#xA;&#xA;SELECT @SQL = &#xA;--N' select distinct campusid ' +&#xA;N' update _DC_CampusIM set Import = 0, RejectMessage = ' +&#xA;N'  (CASE when RejectMessage is Null then ' + @notes + N''' ELSE RejectMessage + '';'' + '  + @notes + N''' end ) ' +&#xA;N' from _DC_CampusIM ' +&#xA;N' where ltrim(rtrim(campusID)) not in (select ltrim(rtrim(campusID)) from ' +  @StagDB + N'.dbo.tblCampuses) '&#xA;&#xA;--print @SQL&#xA;EXEC sys.sp_executesql @SQL" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@StagDB"
                SQLTask:DtsVariableName="User::StagingDB"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\(5)  Campus Validation.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{6494AE5B-5042-4B76-8B69-AA6CB1BAA1A7}"
          DTS:From="Package\(5)  Campus Validation\Invalid Campus ISBN"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\(5)  Campus Validation\Missing Publisher" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\(5)  Campus Validation.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{C4AA8C3B-CBAF-4122-B9A3-AD4BB5C8B2B5}"
          DTS:From="Package\(5)  Campus Validation\Missing Publisher"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\(5)  Campus Validation\Clean up Publisher Names" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\(5)  Campus Validation.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{F372E56D-359D-4264-988D-E9CE3D93FD5C}"
          DTS:From="Package\(5)  Campus Validation\Clean up Publisher Names"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\(5)  Campus Validation\Missing Title" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\(5)  Campus Validation.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{CF70B905-3F27-46B7-ABC8-77254FF33BF1}"
          DTS:From="Package\(5)  Campus Validation\Validate Campus IDs"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\(5)  Campus Validation\Invalid Campus ISBN" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\(5)  Campus Validation.PrecedenceConstraints[Constraint 4]"
          DTS:CreationName=""
          DTS:DTSID="{C996E3B1-1427-498A-87FC-2DE98C7AE375}"
          DTS:From="Package\(5)  Campus Validation\Missing Title"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 4"
          DTS:To="Package\(5)  Campus Validation\ISBN Invalid in  District Table" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\(5)  Campus Validation.PrecedenceConstraints[Constraint 6]"
          DTS:CreationName=""
          DTS:DTSID="{3FFB7FBE-CB19-4925-8BAF-B4A7B12DD02B}"
          DTS:From="Package\(5)  Campus Validation\ISBN Invalid in  District Table"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 6"
          DTS:To="Package\(5)  Campus Validation\Numeric Quantity" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\(5)  Campus Validation.PrecedenceConstraints[Constraint 7]"
          DTS:CreationName=""
          DTS:DTSID="{19EDE8C5-F786-4C2C-9C56-942E62BC5B6E}"
          DTS:From="Package\(5)  Campus Validation\Numeric Quantity"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 7"
          DTS:To="Package\(5)  Campus Validation\Campus Reject" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\(6) PRE Table Insert - RUN ONCE when you are ready to populate the staging DB"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{C03F5A5F-F2DD-49B1-933D-34011D2CF865}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="(6) PRE Table Insert - RUN ONCE when you are ready to populate the staging DB">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\(6) PRE Table Insert - RUN ONCE when you are ready to populate the staging DB\Funding Source - Run as StandAlone"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{FE08FFFF-311F-465E-86FA-4BC67519C52F}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Funding Source - Run as StandAlone"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="8">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{BACA6916-2A2E-4D6E-A01D-FFD222A74312}"
              SQLTask:SqlStatementSource="declare @StagDB nvarchar(100)&#xA;&#xA;set @StagDB = ?&#xA;&#xA;DECLARE @SQL NVARCHAR(MAX)&#xA;SELECT @SQL = &#xA;&#xA;N' insert ' +  @StagDB + N'.dbo.tblFundingSources ' +&#xA;N' (FundingSource, Active, ApplicationUID) ' +&#xA;&#xA;N' select distinct FundingSource, 1, 1  ' +&#xA;N' from _DC_DistrictIM ' +&#xA;N' where import = 1 ' +&#xA;N' and FundingSource is not null ' +&#xA;N' and FundingSource not in (select FundingSource from ' + &#xA;&#x9;@StagDB + N'.dbo.tblFundingSources) '&#xA;&#xA;&#xA;EXEC sys.sp_executesql @SQL&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@StagDB"
                SQLTask:DtsVariableName="User::StagingDB"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\(6) PRE Table Insert - RUN ONCE when you are ready to populate the staging DB\Material Types - Run as StandAlone"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{EBEC33C9-12BA-49D8-BC9D-ABA927FE84A6}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Material Types - Run as StandAlone"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="8">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{BACA6916-2A2E-4D6E-A01D-FFD222A74312}"
              SQLTask:SqlStatementSource="declare @StagDB nvarchar(100)&#xA;&#xA;set @StagDB = ?&#xA;&#xA;DECLARE @SQL NVARCHAR(MAX)&#xA;SELECT @SQL = &#xA;&#xA;N' insert ' +  @StagDB + N'.dbo.tblMaterialTypes ' +&#xA;N' (MaterialType, MaterialTypeDescription,Digital) ' +&#xA;&#xA;N' select distinct materialType, materialType, 0  ' +&#xA;N' from _DC_DistrictIM ' +&#xA;N' where import = 1 ' +&#xA;N' and materialType is not null ' +&#xA;N' and materialType not in (select MaterialType from ' + &#xA;&#x9;@StagDB + N'.dbo.tblMaterialTypes) '&#xA;&#xA;&#xA;EXEC sys.sp_executesql @SQL&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@StagDB"
                SQLTask:DtsVariableName="User::StagingDB"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\(6) PRE Table Insert - RUN ONCE when you are ready to populate the staging DB\PREQUEL to insert tblBookInventory"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:Disabled="True"
          DTS:DTSID="{59E9EEE4-65BF-433D-8ABA-E6AF43C9E082}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="PREQUEL to insert tblBookInventory"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="9">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:SqlStatementSource="&#xA;/*&#xA;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; THIS IS STRUCTURE OF THE QUERY THAT ACTUALLY LOADS INTO tblBookInventory &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&#xA;-- Use this for duplication on grade and bin&#xA;--If this returns records - insert tblBookInventory will fail&#xA;*/&#xA;&#xA;SELECT ISBN&#xA;FROM &#xA;(select distinct ISBN, SLC, Title, Price, vendorid, &#xA;Grade, InStorage, RecordID,'District' as name,&#xA;Expires, Copyright, 1 as active, 0 as campusOwned &#xA;from _DC_DistrictIM dc &#xA;join TipWeb_StagingIM_Terrebonne.dbo.tblVendor on ltrim(rtrim(Publisher)) = ltrim(rtrim(VendorName))&#xA;left outer join TipWeb_StagingIM_Terrebonne.dbo.tblBins on tblBins.BinID = dc.BinNum&#xA;where import = 1&#xA;UNION&#xA;select distinct ISBN, SLC, Title, Price, vendorid,&#xA;Grade, 0, NULL,'Campus',&#xA;Expires, Copyright, 1, 1&#xA;from _DC_CampusIM &#xA;join TipWeb_StagingIM_Terrebonne.dbo.tblVendor on ltrim(rtrim(Publisher)) = ltrim(rtrim(VendorName))&#xA;where import = 1 AND CampusOwned = 1 AND ISBN NOT IN (SELECT ISBN FROM _DC_DistrictIM WHERE import = 1))a&#xA;GROUP BY ISBN HAVING COUNT(ISBN) &gt; 1" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\(6) PRE Table Insert - RUN ONCE when you are ready to populate the staging DB\Subject Area - Stand Alone"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{D5BC117F-90C7-40F1-887D-8C32C9FDACA0}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Subject Area - Stand Alone"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="8">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{BACA6916-2A2E-4D6E-A01D-FFD222A74312}"
              SQLTask:SqlStatementSource="declare @StagDB nvarchar(100)&#xA;&#xA;set @StagDB = ?&#xA;&#xA;DECLARE @SQL NVARCHAR(MAX)&#xA;SELECT @SQL = &#xA;&#xA;N' insert ' +  @StagDB + N'.dbo.tblSubjectArea ' +&#xA;N' ([Subject], [Description]) ' +&#xA;&#xA;N' select distinct SubjectArea, SubjectArea  ' +&#xA;N' from _DC_DistrictIM ' +&#xA;N' where import = 1 ' +&#xA;N' and SubjectArea is not null ' +&#xA;N' and SubjectArea not in (select SubjectArea from ' + &#xA;&#x9;@StagDB + N'.dbo.tblSubjectArea) '&#xA;&#xA;&#xA;EXEC sys.sp_executesql @SQL&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@StagDB"
                SQLTask:DtsVariableName="User::StagingDB"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\(6) PRE Table Insert - RUN ONCE when you are ready to populate the staging DB\VendorOrder - Run ONCE"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{ABED553D-3C86-4EE7-8259-48FC3FF50029}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="VendorOrder - Run ONCE"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="8">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{BACA6916-2A2E-4D6E-A01D-FFD222A74312}"
              SQLTask:SqlStatementSource="declare @StagDB nvarchar(100)&#xA;&#xA;set @StagDB = ?&#xA;&#xA;declare @notes nvarchar(500)&#xA;&#xA;declare @campusOwnedCount int&#xA;&#xA;SELECT @campusOwnedCount = COUNT(*) FROM _DC_CampusIM WHERE Import = 1 AND campusOwned = 1&#xA;&#xA;set @notes = N'''DISTRICT INITIAL INVENTORY - District Owned'&#xA;&#xA;/*&#xA;&#xA;YES, VendorID and campusID should be 0&#xA;&#xA;*/&#xA;&#xA;--print @notes&#xA;&#xA;DECLARE @SQL NVARCHAR(MAX)&#xA;set @SQL = &#xA;&#xA;N' insert ' +  @StagDB + N'.dbo.tblVendorOrders ' +&#xA;N' (VendorOrderID, DateCreated, OrderStatus, VendorID, ' +&#xA;N'&#x9;ArrivalDate, UserID, CampusID, ' +&#xA;N'&#x9;&#x9;DistrictCreated, FundingSourceUID, DateModified) ' +&#xA;&#xA;N' select distinct ' +  @notes + N''', GETDATE(), 2, 2 as VendorID, ' +&#xA;N'  getdate(), 0, 0 as CampusID, ' +&#xA;N'&#x9;1,  FundingSourceUID,  GETDATE()  ' +&#xA;N' from _DC_DistrictIM dc ' +&#xA;N' join ' + @StagDB + N'.dbo.tblFundingSources tfs on tfs.FundingSource = dc.FundingSource ' +&#xA;N' where import = 1 ' &#xA;--print @SQL&#xA;EXEC sys.sp_executesql @SQL&#xA;&#xA;IF @campusOwnedCount &gt; 0&#xA;BEGIN&#xA;set @notes = N'''CAMPUS INITIAL INVENTORY - Campus Owned'&#xA;set @SQL = &#xA;&#xA;N' insert ' +  @StagDB + N'.dbo.tblVendorOrders ' +&#xA;N' (VendorOrderID, DateCreated, OrderStatus, VendorID, ' +&#xA;N'&#x9;ArrivalDate, UserID, CampusID, ' +&#xA;N'&#x9;&#x9;DistrictCreated, FundingSourceUID, DateModified) ' +&#xA;&#xA;N' select distinct ' +  @notes + N''', GETDATE(), 2, 2 as VendorID, ' +&#xA;N'  getdate(), 0, CampusID, ' +&#xA;N'&#x9;0,  FundingSourceUID,  GETDATE()  ' +&#xA;N' from _DC_CampusIM dc ' +&#xA;N' join ' + @StagDB + N'.dbo.tblFundingSources tfs on tfs.FundingSource = dc.FundingSource ' +&#xA;N' where import = 1 AND campusOwned = 1 ' &#xA;--print @SQL&#xA;EXEC sys.sp_executesql @SQL&#xA;END&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@StagDB"
                SQLTask:DtsVariableName="User::StagingDB"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\(6) PRE Table Insert - RUN ONCE when you are ready to populate the staging DB.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{D4B33361-6C6F-4259-94EE-BA155404FF81}"
          DTS:From="Package\(6) PRE Table Insert - RUN ONCE when you are ready to populate the staging DB\Funding Source - Run as StandAlone"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\(6) PRE Table Insert - RUN ONCE when you are ready to populate the staging DB\VendorOrder - Run ONCE" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\(6) PRE Table Insert - RUN ONCE when you are ready to populate the staging DB.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{81324196-9003-48EE-877E-26E51FF9E808}"
          DTS:From="Package\(6) PRE Table Insert - RUN ONCE when you are ready to populate the staging DB\VendorOrder - Run ONCE"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\(6) PRE Table Insert - RUN ONCE when you are ready to populate the staging DB\Subject Area - Stand Alone" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\(6) PRE Table Insert - RUN ONCE when you are ready to populate the staging DB.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{C5CF7836-3E3A-4A0F-8D4E-CADA5308046F}"
          DTS:From="Package\(6) PRE Table Insert - RUN ONCE when you are ready to populate the staging DB\Subject Area - Stand Alone"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\(6) PRE Table Insert - RUN ONCE when you are ready to populate the staging DB\Material Types - Run as StandAlone" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\(7) Table Inserts"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{6E9E790F-DA15-435C-97FE-6B267C8DA212}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="(7) Table Inserts">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\(7) Table Inserts\Approve Campus Books"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{079F9215-D5C5-4743-AE57-105AD16B4917}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Approve Campus Books"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="25">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{28E23B64-105B-4637-B510-B9ED2E6978AC}"
              SQLTask:SqlStatementSource="insert into tblCampusApproved(CampusID, ISBN, StudentQuota, TeacherQuota, UserID)&#xA;select distinct campusid, isbn, '100', '100', 0&#xA;from tblCampusDistribution cd&#xA;where not exists (&#xA;&#x9;select * &#xA;&#x9;from tblCampusApproved ca&#xA;&#x9;where cd.CampusID = ca.CampusID&#xA;&#x9;and cd.ISBN = ca.ISBN)&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\(7) Table Inserts\Campus VendorOrderDetails"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{B5C6CB00-DBA3-4241-96BD-A8F4422063F5}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Campus VendorOrderDetails"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="25">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{28E23B64-105B-4637-B510-B9ED2E6978AC}"
              SQLTask:SqlStatementSource="declare @convDB nvarchar(100)&#xA;&#xA;set @convDB = ?&#xA;&#xA;declare @notes nvarchar(500)&#xA;&#xA;set @notes = N'''CAMPUS INITIAL INVENTORY - Campus Owned'''&#xA;&#xA;--tblStatus for status type vendor order&#xA;DECLARE @SQL NVARCHAR(MAX)&#xA;set @SQL = &#xA;&#xA;N' insert into tblVendorOrderDetails (VendorOrderUID, '+&#xA;N' BookInventoryUID, FundingSourceUID, '+&#xA;N' Ordered, DateOrdered, Received, DateReceived, '+&#xA;N' StatusID, '+ &#xA;N' Price, UserID, DateModified, DateArriving) '+&#xA;&#x9;&#xA;N' SELECT v.VendorOrderUID, b.BookInventoryUID, v.FundingSourceUID, SUM(CAST(c.qtyDistributed as int)), GETDATE(), '+&#xA;N' SUM(CAST(c.qtyDistributed as int)), GETDATE(), 2, b.Price, 0, GETDATE(), GETDATE() '+&#xA;N' FROM tblBookInventory b '+&#xA;N' &#x9;JOIN '+ @convDB +N'.dbo._DC_CampusIM c '+&#xA;N' &#x9;&#x9;ON b.ISBN = c.ISBN '+&#xA;N' &#x9;JOIN tblVendorOrders v '+&#xA;N' &#x9;&#x9;ON c.CampusID = v.CampusID '+&#xA;N' WHERE b.CampusAdded = 1  '+&#xA;N' AND v.VendorOrderID = '+ @notes +&#xA;N' AND c.Import = 1 '+&#xA;N' AND c.QtyDistributed &gt; 0 '+&#xA;N' GROUP BY v.VendorOrderUID, b.BookInventoryUID, v.FundingSourceUID, b.Price '+&#xA;N' ORDER BY v.VendorOrderUID '&#xA;&#xA;--print @SQL&#xA;&#xA;EXEC sys.sp_executesql @SQL&#xA;&#xA;insert into tblVendorOrderDetailsHistory (VendorOrderDetailsUID, Received, DateReceived, UserID)&#xA;&#xA;SELECT vd.VendorOrderDetailsUID, vd.Received, vd.DateReceived, vd.UserID&#xA;FROM tblVendorOrderDetails vd&#xA;&#x9;JOIN tblVendorOrders vo&#xA;&#x9;&#x9;ON vd.VendorOrderUID = vo.VendorOrderUID&#xA;WHERE vo.VendorOrderID = 'CAMPUS INITIAL INVENTORY - Campus Owned'&#xA;&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@convDB"
                SQLTask:DtsVariableName="User::ConvDB"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\(7) Table Inserts\District VendorOrderDetails and History"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{8BEC94B2-D164-4D7F-8086-5520FE0C2865}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="District VendorOrderDetails and History"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="25">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{28E23B64-105B-4637-B510-B9ED2E6978AC}"
              SQLTask:SqlStatementSource="insert into tblVendorOrderDetails (VendorOrderUID, &#xA;&#x9;BookInventoryUID, FundingSourceUID, &#xA;&#x9;Ordered, DateOrdered, Received, DateReceived, &#xA;&#x9;StatusID,  --tblStatus for status type vendor order&#xA;&#x9;Price, UserID, DateModified, DateArriving)&#xA;&#xA;select &#xA;&#x9;(select top 1 VendorOrderUID from [tblVendorOrders] where [VendorOrderID] = 'DISTRICT INITIAL INVENTORY - District Owned'&#xA;&#x9;&#x9;&#x9;and [UserID] = 0 order by VendorOrderUID DESC) as VendorOrderUID, &#xA;&#x9;BookInventoryUID, 3 as FundingSourceUID, --District Source&#xA;&#x9;(isNull((select sum(isNull(copies, 0)) from tblCampusDistribution cd where cd.ISBN = bio.ISBN),0)+ &#x9;isNull(LeftInStorage, 0))&#x9;as ordered, &#xA;&#x9;getdate() as OrderDate,&#xA;&#x9;(isNull((select sum(isNull(copies, 0)) from tblCampusDistribution cd where cd.ISBN = bio.ISBN),0)+&#x9;isNull(LeftInStorage, 0))&#x9;as received, &#xA;&#x9;GETDATE() as ReceivedDate,&#xA;&#x9;2, Price, 0, GETDATE(), GETDATE()&#xA;  from tblBookInventory bio&#xA;&#x9;where bio.CampusAdded = 0&#xA;&#xA;&#xA;&#xA;&#xA;GO&#xA;&#xA;insert into tblVendorOrderDetailsHistory (VendorOrderDetailsUID, Received, DateReceived, UserID)&#xA;select VendorOrderDetailsUID, Received, DateReceived, UserID&#xA;from tblVendorOrderDetails&#xA;order by VendorOrderDetailsUID&#xA;&#xA;GO&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\(7) Table Inserts\tblBins"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{F360F9C5-6DA3-41AF-B9B5-3EBE03F534E1}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="tblBins"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="25">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{BACA6916-2A2E-4D6E-A01D-FFD222A74312}"
              SQLTask:SqlStatementSource="declare @StagDB nvarchar(100)&#xA;&#xA;set @StagDB = ?&#xA;&#xA;declare @notes nvarchar(500)&#xA;set @notes = N'Hayes  Initial Data Conversion ' + convert(varchar(10), getdate(), 101)&#xA;&#xA;DECLARE @SQL NVARCHAR(MAX)&#xA;SELECT @SQL = &#xA;&#xA;N' insert ' +  @StagDB + N'.dbo.tblBins ' +&#xA;N' (BinID, BinDescription) ' +&#xA;&#xA;N' select distinct ltrim(rtrim(BinNum)), ltrim(rtrim(BinNum))  ' +&#xA;N' from _DC_DistrictIM dc ' +&#xA;N' where import = 1 ' +&#xA;N' and BinNum is not null ' +&#xA;N' and len(ltrim(rtrim(BinNum))) &gt; 0 ' +&#xA;N' and BinNum not in (select binNum from ' + @StagDB + N'.dbo.tblBins) ' +&#xA;N' UNION ' +&#xA;N' select distinct ltrim(rtrim(Bin2)), ltrim(rtrim(Bin2))' +&#xA;N' from _DC_DistrictIM dc ' +&#xA;N' where import = 1 ' +&#xA;N' and Bin2 is not null ' +&#xA;N' and len(ltrim(rtrim(Bin2))) &gt; 0 ' +&#xA;N' and Bin2 not in (select binNum from ' + @StagDB + N'.dbo.tblBins) ' +&#xA;N' UNION ' +&#xA;N' select distinct ltrim(rtrim(Bin3)), ltrim(rtrim(Bin3))' +&#xA;N' from _DC_DistrictIM dc ' +&#xA;N' where import = 1 ' +&#xA;N' and Bin3 is not null ' +&#xA;N' and len(ltrim(rtrim(Bin3))) &gt; 0 ' +&#xA;N' and Bin3 not in (select binNum from ' + @StagDB + N'.dbo.tblBins)'&#xA;&#xA;EXEC sys.sp_executesql @SQL" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@StagDB"
                SQLTask:DtsVariableName="User::StagingDB"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\(7) Table Inserts\tblBookBins"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{AEEEAC75-A3E3-4F67-A8BD-8A6779086674}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="tblBookBins"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="25">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{BACA6916-2A2E-4D6E-A01D-FFD222A74312}"
              SQLTask:SqlStatementSource="declare @StagDB nvarchar(100)&#xA;&#xA;set @StagDB = ?&#xA;&#xA;declare @notes nvarchar(500)&#xA;set @notes = N'Hayes  Initial Data Conversion ' + convert(varchar(10), getdate(), 101)&#xA;&#xA;DECLARE @SQL NVARCHAR(MAX)&#xA;SELECT @SQL = &#xA;&#xA;N' insert ' +  @StagDB + N'.dbo.tblBookBins ' +&#xA;N' (ISBN, BinID, PrimaryBin) ' +&#xA;&#xA;N' select distinct ISBN, RecordID, 1  ' +&#xA;N' from _DC_DistrictIM dc ' +&#xA;N' Join ' +  @StagDB + N'.dbo.tblBins tb ' +&#xA;N' on ltrim(rtrim(dc.BinNum)) = ltrim(rtrim(tb.BinID)) ' +&#xA;N' where import = 1 ' +&#xA;N' and BinNum is not null ' +&#xA;N' and len(ltrim(rtrim(BinNum))) &gt; 0 ' +&#xA;N' UNION ' +&#xA;N' select distinct ISBN, RecordID, 0  ' +&#xA;N' from _DC_DistrictIM dc ' +&#xA;N' Join ' +  @StagDB + N'.dbo.tblBins tb ' +&#xA;N' on ltrim(rtrim(dc.bin2)) = ltrim(rtrim(tb.BinID)) ' +&#xA;N' where import = 1 ' +&#xA;N' and bin2 is not null ' +&#xA;N' and len(ltrim(rtrim(bin2))) &gt; 0 ' +&#xA;N' UNION ' +&#xA;N' select distinct ISBN, RecordID, 0  ' +&#xA;N' from _DC_DistrictIM dc ' +&#xA;N' Join ' +  @StagDB + N'.dbo.tblBins tb ' +&#xA;N' on ltrim(rtrim(dc.bin3)) = ltrim(rtrim(tb.BinID)) ' +&#xA;N' where import = 1 ' +&#xA;N' and bin3 is not null ' +&#xA;N' and len(ltrim(rtrim(bin3))) &gt; 0 ' &#xA;&#xA;EXEC sys.sp_executesql @SQL&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@StagDB"
                SQLTask:DtsVariableName="User::StagingDB"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\(7) Table Inserts\tblBookInventory"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{64C6CAA4-8E99-4148-947D-FA043746CF4F}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="tblBookInventory"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="25">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{BACA6916-2A2E-4D6E-A01D-FFD222A74312}"
              SQLTask:SqlStatementSource="declare @StagDB nvarchar(100)&#xA;&#xA;set @StagDB = ?&#xA;&#xA;declare @notes nvarchar(500)&#xA;set @notes = N'''Hayes Initial Data Conversion ' + convert(varchar(10), getdate(), 101)&#xA;&#xA;--print @notes&#xA;&#xA;DECLARE @SQL NVARCHAR(MAX)&#xA;set @SQL = &#xA;&#xA;N' insert ' +  @StagDB + N'.dbo.tblBookInventory ' +&#xA;N' (ISBN, SLC, Title, Price, Publisher, Grade, LeftInStorage, BinID, UserID, ModifiedDate, Notes, ' +&#xA;N'  Expire, Copyright, Active, CampusAdded) ' +&#xA;N' select distinct ISBN, SLC, Title, Price, v.VendorID as Publisher, ' +&#xA;N' Grade, InStorage, RecordID, 0, GETDATE(),  ' +  @notes + &#xA;N''', Expires, Copyright, 1, 0 ' +&#xA;N' from _DC_DistrictIM dc ' +&#xA;N' join ' + @StagDB + N'.dbo.tblVendor v on ltrim(rtrim(Publisher)) = ltrim(rtrim(VendorName)) AND v.CampusID = 0 ' +&#xA;N' left outer join ' + @StagDB + N'.dbo.tblBins on tblBins.BinID = dc.BinNum ' +&#xA;N' where import = 1' +&#xA;N' UNION '+&#xA;N' select distinct ISBN, SLC, Title, Price, v.vendorID as Publisher, ' +&#xA;N' Grade, 0, NULL, 0, GETDATE(),  ' +  @notes + &#xA;N''', Expires, Copyright, 1, 1 ' +&#xA;N' from _DC_CampusIM c' +&#xA;N' join ' + @StagDB + N'.dbo.tblVendor v on ltrim(rtrim(Publisher)) = ltrim(rtrim(VendorName)) AND v.CampusID = 0' +&#xA;N' where import = 1 AND CampusOwned = 1 AND ISBN NOT IN (SELECT ISBN FROM _DC_DistrictIM WHERE import = 1)'+&#xA;N' ORDER BY ISBN ' &#xA;--print @SQL&#xA;&#xA;EXEC sys.sp_executesql @SQL" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@StagDB"
                SQLTask:DtsVariableName="User::StagingDB"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\(7) Table Inserts\tblBookOrders"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{3C70A6D8-913A-4E61-B879-5894E879CA4D}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="tblBookOrders"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="25">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{28E23B64-105B-4637-B510-B9ED2E6978AC}"
              SQLTask:SqlStatementSource="/*&#xA;This creates an order for each ISBN that is requisitioned by the campus&#xA;*/&#xA;&#xA; insert into tblBookOrders ( Requisitionuid, ISBN, FundingSource, Ordered,&#xA; Received, Status, CopiesOnHand, CopiesSent, UserID, Price )&#xA; &#xA; select  req.RequisitionUID, cd.ISBN, 3, SUM(Copies) AS ordered, SUM(Copies) As received, &#xA; 'Complete', SUM(Copies) AS copies, SUM(Copies) AS Copies, 0, &#xA;     bi.Price&#xA;     &#xA;from tblRequisitions req&#xA;join tblCampusDistribution cd on cd.CampusID = req.CampusID&#xA;join tblbookinventory bi on bi.isbn = cd.isbn &#xA;where Code = 'DIST' &#xA;AND cd.Source = 'District' &#xA;Group by cd.ISBN, Price, RequisitionUID" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\(7) Table Inserts\tblBookOrdersHistoryDist"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{00785327-CBB8-4FD6-BB46-2BD33444537A}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="tblBookOrdersHistoryDist"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="25">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{28E23B64-105B-4637-B510-B9ED2E6978AC}"
              SQLTask:SqlStatementSource="/*&#xA;This should match the # of results from the previous query. All Campus books that are district owned.&#xA;*/&#xA;INSERT INTO [tblBookOrdersHistoryDist]&#xA;           ([RequisitionUID], [ISBN], [CopiesSent], [DateCopiesSent],&#xA;           [CopiesReceived],[UserID],[ModifiedDate])&#xA;&#xA;select RequisitionUID, ISBN, Ordered, DateSent, &#xA;&#x9;Received,  0, getdate()&#xA;from tblBOokOrders &#xA;where RequisitionUID in (&#xA;&#x9;select RequisitionUID from tblRequisitions where requisitionID like '%Campus Initial Inventory%')" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\(7) Table Inserts\tblBooksMaterialTypes"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{FCA493A7-F75C-4A14-80CE-9EA5F87A91E0}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="tblBooksMaterialTypes"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="25">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{BACA6916-2A2E-4D6E-A01D-FFD222A74312}"
              SQLTask:SqlStatementSource="&#xA;declare @StagDB nvarchar(100)&#xA;&#xA;set @StagDB = ?&#xA;&#xA;declare @notes nvarchar(500)&#xA;set @notes = N'''Hayes Initial Data Conversion ' + convert(varchar(10), getdate(), 101)&#xA;&#xA;--print @notes&#xA;&#xA;DECLARE @SQL NVARCHAR(MAX)&#xA;set @SQL = &#xA;&#xA;N' insert ' +  @StagDB + N'.dbo.tblBooksMaterialTypes ' +&#xA;N' (ISBN, MaterialTypeID, LastModifiedDate) ' +&#xA;N' SELECT bi.ISBN, mt.MaterialTypeID, GETDATE()  ' +&#xA;N' from ' + @StagDB + N'.dbo.tblBookInventory bi ' +&#xA;N' join _DC_DistrictIM dc on bi.ISBN = dc.ISBN ' +&#xA;N' join ' + @StagDB + N'.dbo.tblMaterialTypes mt on dc.MaterialType = mt.materialType  ' +&#xA;N' where import = 1 ' +&#xA;N' UNION '+&#xA;N' select distinct bi.isbn, mt.MaterialTypeID, GETDATE()&#x9;' +&#xA;N' from ' + @StagDB + N'.dbo.tblBookInventory bi ' +&#xA;N' join _DC_CampusIM c on bi.ISBN = c.ISBN ' +&#xA;N' join ' + @StagDB + N'.dbo.tblMaterialTypes mt on c.MaterialType = mt.materialType  ' +&#xA;N' where import = 1 AND CampusOwned = 1 AND c.ISBN NOT IN (SELECT ISBN FROM _DC_DistrictIM WHERE import = 1)'&#xA;&#xA;--print @SQL&#xA;&#xA;EXEC sys.sp_executesql @SQL&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@StagDB"
                SQLTask:DtsVariableName="User::StagingDB"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\(7) Table Inserts\tblCampusDistribution"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{BDAAC613-6766-4975-93D4-447BC45FD880}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="tblCampusDistribution"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="25">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{BACA6916-2A2E-4D6E-A01D-FFD222A74312}"
              SQLTask:SqlStatementSource="declare @StagDB nvarchar(100)&#xA;&#xA;set @StagDB = ?&#xA;&#xA;declare @notes nvarchar(500)&#xA;set @notes = N'''Hayes Initial Data Conversion ' + convert(varchar(10), getdate(), 101)&#xA;&#xA;--print @notes&#xA;&#xA;DECLARE @SQL NVARCHAR(MAX)&#xA;set @SQL = &#xA;&#xA;N' insert ' +  @StagDB + N'.dbo.tblCampusDistribution ' +&#xA;N' (CampusID, ISBN, Code, Source, Amount, Copies, Notes, UserID, ModifiedDate, Reference)' +&#xA;N' SELECT CampusID, ISBN, ''DIST'', '+&#xA;N' CASE WHEN CampusOwned = 0 THEN ''District'' ELSE ''Campus'' END, Price, [QtyDistributed], ' +&#xA;@notes + N''', 0, GETDATE(), CampusID + ''-CAMPUS INITIAL INVENTORY''' +&#xA;N' from _DC_CampusIM ' +&#xA;N' where import = 1 ' +&#xA;N' and QtyDistributed &gt; 0 ' + &#xA;N' AND CampusOwned = 1' +&#xA;N' UNION '+&#xA;N' SELECT CampusID, ISBN, ''DIST'', '+&#xA;N' CASE WHEN CampusOwned = 0 THEN ''District'' ELSE ''Campus'' END, Price, [QtyDistributed], ' +&#xA;@notes + N''', 0, GETDATE(), CampusID + ''-CAMPUS INITIAL INVENTORY''' +&#xA;N' from _DC_CampusIM ' +&#xA;N' where import = 1 ' +&#xA;N' and QtyDistributed &gt; 0 ' + &#xA;N' and campusOwned = 0 and rtrim(ltrim(ISBN)) in (select rtrim(ltrim(ISBN)) from _DC_DistrictIM where import = 1)'&#xA;&#xA;&#xA;--print @SQL&#xA;&#xA;EXEC sys.sp_executesql @SQL&#xA;&#xA;/*&#xA;Validate cases where the ISBN is rejected in the district but still &#xA;has Campus import = 1&#xA;*/&#xA;--select DISTINCT c.ISBN&#xA;--UPDATE c&#xA;--SET Import = 0, Keep = 1, RejectMessage = 'ISBN duplicated in District'&#xA;--from _DC_CampusIM c&#xA;--join _DC_DistrictIM d on c.ISBN = d.ISBN&#xA;--where c.import = 1&#xA;--and d.import = 0&#xA;--and c.campusowned = 0 and c.QtyDistributed &gt; 0 " xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@StagDB"
                SQLTask:DtsVariableName="User::StagingDB"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\(7) Table Inserts\tblCampusDistribution_tx"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{C4CAA93D-57DC-4BBD-85BC-B52282C96E32}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="tblCampusDistribution_tx"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="25">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{28E23B64-105B-4637-B510-B9ED2E6978AC}"
              SQLTask:SqlStatementSource="insert into tblCampusDistribution_tx (DistributionID, CampusID, ISBN, Code,&#xA;&#x9;Source, Amount, Copies,Notes, UserID,ModifiedDate, ActionTaken, Reference)&#xA; &#xA; SELECT DistributionID, CampusID, ISBN, Code,&#xA;&#x9;[source], Amount, Copies, Notes, UserID, ModifiedDate, 'INSERTED', CampusID + '-' + 'CAMPUS INITIAL INVENTORY'&#xA;FROM tblCampusDistribution&#xA;&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\(7) Table Inserts\tblDistrictDistributions and History"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{F1CC40E6-4104-4641-BE0A-5CA43D07B4BF}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="tblDistrictDistributions and History"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="25">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{28E23B64-105B-4637-B510-B9ED2E6978AC}"
              SQLTask:SqlStatementSource="-- this is for District Books ONLY&#xA;&#xA;INSERT INTO tblDistrictDistributions (ISBN, Code, Source, Amount,&#xA; Copies, Notes, UserID, ModifiedDate)&#xA; SELECT  ISBN, 'DIST', 'Vendor Order', bi.Price, Received,  'Data Conversion Hayes ' + convert(varchar(10), getdate(), 101),&#xA; 0, getdate()&#xA; FROM tblBookInventory bi&#xA; join tblVendorOrderDetails vod&#xA; on bi.BookInventoryUID = vod.BookInventoryUID&#xA; join tblVendorOrders vo&#xA; on vo.VendorOrderUID = vod.VendorOrderUID&#xA; WHERE bi.CampusAdded = 0&#xA; AND vo.DistrictCreated = 1&#xA;GO&#xA;&#xA;INSERT INTO tblDistrictDistributions_Tx (distributionid, ISBN, Code, Source, Amount,&#xA; Copies, Notes, UserID, ModifiedDate, ActionTaken)&#xA;  SELECT distributionid, ISBN, Code, [Source], Amount,&#xA; Copies, Notes, UserID, ModifiedDate, 'INSERTED'&#xA;  FROM tblDistrictDistributions&#xA;GO&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\(7) Table Inserts\tblRequisitions"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{D80B4F33-518F-4E06-B0BC-65895684C5CC}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="tblRequisitions"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="25">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{28E23B64-105B-4637-B510-B9ED2E6978AC}"
              SQLTask:SqlStatementSource="/* this should match the # of Campuses (given that all Campuses have book that are also at the District level)&#xA;*/&#xA;insert into tblRequisitions &#xA;(RequisitionID, ReqStatus, DistrictCreatedCampusReq, CampusID, Notes, &#xA;DateCreatedOrSent, CampusReq, UserID,ModifiedDate)&#xA; &#xA;select distinct CampusID + ' - CAMPUS INITIAL INVENTORY', 'Complete', 1, CampusID, &#xA;'Data Conversion Hayes ' + convert(varchar(10), getdate(), 101),&#xA;GETDATE(), 1,0,GETDATE()&#xA;from tblCampusDistribution&#xA;WHERE Source = 'District'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\(7) Table Inserts\tblSubjectAreaBookLINK"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{812417A3-6F5C-43FF-9D36-A16664F1FF82}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="tblSubjectAreaBookLINK"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="25">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{BACA6916-2A2E-4D6E-A01D-FFD222A74312}"
              SQLTask:SqlStatementSource="declare @StagDB nvarchar(100)&#xA;&#xA;set @StagDB = ?&#xA;&#xA;declare @notes nvarchar(500)&#xA;set @notes = N'''Hayes Initial Data Conversion ' + convert(varchar(10), getdate(), 101)&#xA;&#xA;--print @notes&#xA;&#xA;DECLARE @SQL NVARCHAR(MAX)&#xA;set @SQL = &#xA;&#xA;N' insert ' +  @StagDB + N'.dbo.tblSubjectAreaBookLINK ' +&#xA;N' (SubjectAreaUID, BookInventoryUID) ' +&#xA;&#xA;N' select SubjectAreaUID, BookInventoryUID ' +&#xA;N' from ' +  @StagDB + N'.dbo.tblBookInventory tbi ' +&#xA;N' join _DC_DistrictIM dc on tbi.ISBN = dc.ISBN ' +&#xA;N' join ' + @StagDB + N'.dbo.tblVendor vn on tbi.Publisher = vn.VendorID ' +&#xA;N' join ' + @StagDB + N'.dbo.tblSubjectArea sa on dc.SubjectArea = sa.Subject ' +&#xA;N' where import = 1 ' +&#xA;&#xA;N' UNION ' +&#xA;&#xA;N' select DISTINCT SubjectAreaUID, BookInventoryUID ' +&#xA;N' from ' +  @StagDB + N'.dbo.tblBookInventory tbi ' +&#xA;N' join _DC_CampusIM dc on tbi.ISBN = dc.ISBN ' +&#xA;N' join ' + @StagDB + N'.dbo.tblVendor vn on tbi.Publisher = vn.VendorID ' +&#xA;N' join ' + @StagDB + N'.dbo.tblSubjectArea sa on dc.SubjectArea = sa.Subject ' +&#xA;N' where import = 1 AND CampusOwned = 1 '&#xA;--FundingSourceUID 3 is District in Seed Data&#xA;&#xA;--print @SQL&#xA;&#xA;EXEC sys.sp_executesql @SQL&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@StagDB"
                SQLTask:DtsVariableName="User::StagingDB"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\(7) Table Inserts\tblVendor"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{FE402D6D-2610-4594-B3B7-4CEAC84EDD4D}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="tblVendor"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="25">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{BACA6916-2A2E-4D6E-A01D-FFD222A74312}"
              SQLTask:SqlStatementSource=" declare @StagDB nvarchar(100)&#xA;&#xA;set @StagDB = ?&#xA;&#xA;declare @notes nvarchar(500)&#xA;set @notes = N'''District Vendor for Hayes Initial Data Conversion ' + convert(varchar(10), getdate(), 101)&#xA;&#xA;declare @campusOwnedCount int&#xA;SELECT @campusOwnedCount = COUNT(*) FROM _DC_CampusIM WHERE Import = 1 AND campusOwned = 1&#xA;&#xA;DECLARE @SQL NVARCHAR(MAX)&#xA;SELECT @SQL = &#xA;&#xA;N' insert ' +  @StagDB + N'.dbo.tblvendor ' +&#xA;N' (VendorName, CampusID,  Notes, Active, UserID, ModifiedDate, ApplicationUID) ' +&#xA;&#xA;N' select distinct publisher, 0, ' +  @notes + N''', 1, 0, GETDATE(), 1  ' +&#xA;N' from _DC_DistrictIM ' +&#xA;N' where import = 1 '&#xA;--print @SQL&#xA;EXEC sys.sp_executesql @SQL&#xA;&#xA;IF @campusOwnedCount &gt; 0&#xA;BEGIN&#xA;set @notes = N'''Campus Vendor for Hayes Initial Data Conversion ' + convert(varchar(10), getdate(), 101)&#xA;SET @SQL = &#xA;N' insert ' +  @StagDB + N'.dbo.tblvendor ' +&#xA;N' (VendorName, CampusID,  Notes, Active, UserID, ModifiedDate, ApplicationUID) ' +&#xA;&#xA;N' select distinct publisher, CampusID, ' +  @notes + N''', 1, 0, GETDATE(), 1  ' +&#xA;N' from _DC_CampusIM ' +&#xA;N' where import = 1 AND campusOwned = 1 '&#xA;--print @SQL&#xA;EXEC sys.sp_executesql @SQL&#xA;END" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@StagDB"
                SQLTask:DtsVariableName="User::StagingDB"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\(7) Table Inserts\tblVendorBooks"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{608FF25A-5251-4E7B-9371-374F524C1828}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="tblVendorBooks"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="25">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{28E23B64-105B-4637-B510-B9ED2E6978AC}"
              SQLTask:SqlStatementSource="insert into tblVendorBooks (VendorID, ISBN, UserID, ModifiedDate)&#xA;select distinct PUBLISHER, ISBN, 0, GETDATE()&#xA;from tblBookInventory&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\(7) Table Inserts\Validate - No Unapproved Books for campuses; verify before campus approvals"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:Disabled="True"
          DTS:DTSID="{BB5A8F0D-DD01-4400-B925-B0FC53EAC486}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Validate - No Unapproved Books for campuses; verify before campus approvals"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="26">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{BACA6916-2A2E-4D6E-A01D-FFD222A74312}"
              SQLTask:SqlStatementSource="select * from tblCampusDistribution where ISBN not in (select ISBN from tblBookInventory)&#xA;&#xA;select distinct isbn&#xA;from tblCampusDistribution distr&#xA;where ISBN not in ((select ISBN from tblCampusApproved where CampusID = distr.CampusID))" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\(7) Table Inserts.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{52C14A75-599D-4538-81D2-7275F5EEF446}"
          DTS:From="Package\(7) Table Inserts\tblVendor"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\(7) Table Inserts\tblBins" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\(7) Table Inserts.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{DE39B941-EAF0-4431-B81C-C2B9B950F83A}"
          DTS:From="Package\(7) Table Inserts\tblBins"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\(7) Table Inserts\tblBookInventory" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\(7) Table Inserts.PrecedenceConstraints[Constraint 10]"
          DTS:CreationName=""
          DTS:DTSID="{2DE93077-015E-4DD1-B3F9-40A3F01C3CEE}"
          DTS:From="Package\(7) Table Inserts\tblRequisitions"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 10"
          DTS:To="Package\(7) Table Inserts\tblBookOrders" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\(7) Table Inserts.PrecedenceConstraints[Constraint 11]"
          DTS:CreationName=""
          DTS:DTSID="{512A6D76-D8A8-4292-9EEA-85ABED7767E7}"
          DTS:From="Package\(7) Table Inserts\tblBookOrders"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 11"
          DTS:To="Package\(7) Table Inserts\tblBookOrdersHistoryDist" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\(7) Table Inserts.PrecedenceConstraints[Constraint 12]"
          DTS:CreationName=""
          DTS:DTSID="{A253953A-C958-4594-96D5-73A5D678D7F0}"
          DTS:From="Package\(7) Table Inserts\tblCampusDistribution_tx"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 12"
          DTS:To="Package\(7) Table Inserts\Approve Campus Books" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\(7) Table Inserts.PrecedenceConstraints[Constraint 13]"
          DTS:CreationName=""
          DTS:DTSID="{987264FA-740D-417D-BD29-B14E550306A8}"
          DTS:From="Package\(7) Table Inserts\tblBookOrdersHistoryDist"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 13"
          DTS:To="Package\(7) Table Inserts\tblSubjectAreaBookLINK" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\(7) Table Inserts.PrecedenceConstraints[Constraint 14]"
          DTS:CreationName=""
          DTS:DTSID="{1AC66ABB-48B4-4471-AC49-17B4D3E4DD1A}"
          DTS:From="Package\(7) Table Inserts\Campus VendorOrderDetails"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 14"
          DTS:To="Package\(7) Table Inserts\tblDistrictDistributions and History" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\(7) Table Inserts.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{8D771E01-B3A0-4454-9EA7-F79DE51803DF}"
          DTS:From="Package\(7) Table Inserts\tblBookInventory"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\(7) Table Inserts\tblBookBins" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\(7) Table Inserts.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{4BD29E34-FFEE-4118-B36F-70E2B8EBD010}"
          DTS:From="Package\(7) Table Inserts\tblBookBins"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\(7) Table Inserts\tblBooksMaterialTypes" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\(7) Table Inserts.PrecedenceConstraints[Constraint 4]"
          DTS:CreationName=""
          DTS:DTSID="{0D231F72-02F0-4441-88E6-68380B144C63}"
          DTS:From="Package\(7) Table Inserts\tblBooksMaterialTypes"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 4"
          DTS:To="Package\(7) Table Inserts\tblVendorBooks" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\(7) Table Inserts.PrecedenceConstraints[Constraint 5]"
          DTS:CreationName=""
          DTS:DTSID="{99EAAC8C-D132-4065-AB20-CA0ACC26D2DC}"
          DTS:From="Package\(7) Table Inserts\tblVendorBooks"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 5"
          DTS:To="Package\(7) Table Inserts\tblCampusDistribution" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\(7) Table Inserts.PrecedenceConstraints[Constraint 6]"
          DTS:CreationName=""
          DTS:DTSID="{9D10228A-1891-4888-AE54-09F6A8CF24A7}"
          DTS:From="Package\(7) Table Inserts\tblCampusDistribution"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 6"
          DTS:To="Package\(7) Table Inserts\tblCampusDistribution_tx" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\(7) Table Inserts.PrecedenceConstraints[Constraint 7]"
          DTS:CreationName=""
          DTS:DTSID="{32C847EE-7FBA-495A-8922-0EF970A5E185}"
          DTS:From="Package\(7) Table Inserts\Approve Campus Books"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 7"
          DTS:To="Package\(7) Table Inserts\District VendorOrderDetails and History" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\(7) Table Inserts.PrecedenceConstraints[Constraint 8]"
          DTS:CreationName=""
          DTS:DTSID="{6B5B25EF-78BD-4469-BA4B-3A5B4CFFFF55}"
          DTS:From="Package\(7) Table Inserts\District VendorOrderDetails and History"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 8"
          DTS:To="Package\(7) Table Inserts\Campus VendorOrderDetails" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\(7) Table Inserts.PrecedenceConstraints[Constraint 9]"
          DTS:CreationName=""
          DTS:DTSID="{7C3FE6AF-E1CB-455C-81FF-1D04E754D239}"
          DTS:From="Package\(7) Table Inserts\tblDistrictDistributions and History"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 9"
          DTS:To="Package\(7) Table Inserts\tblRequisitions" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Biblio Container - Not Valid - just a Place Holder"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:Disabled="True"
      DTS:DTSID="{FC753148-FF41-4584-B47D-DC43958DA761}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Biblio Container - Not Valid - just a Place Holder">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Biblio Container - Not Valid - just a Place Holder\Execute SQL Task"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{E4A092BC-CD96-4AC6-8429-307A507E871F}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Execute SQL Task"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="27">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{BACA6916-2A2E-4D6E-A01D-FFD222A74312}"
              SQLTask:SqlStatementSource="/*components comes from Tipwin booksavailable table*/&#xA;&#xA;insert into tblcomponents (MasterISBN, ComponentISBN, Title, Price, Units)&#xA;select masterisbn, componentisbn, title, price, units&#xA;from bossiersql.dbo.components&#xA;---950 records&#xA;delete from tblcomponents where masterisbn not in (select isbn from tblbookinventory)&#xA;--102 records&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Create Reject File"
      DTS:CreationName="Microsoft.FileSystemTask"
      DTS:Description="File System Task"
      DTS:DTSID="{6C4DCF42-93B1-43C6-84F2-3537D2996657}"
      DTS:ExecutableType="Microsoft.FileSystemTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Create Reject File"
      DTS:TaskContact="File System Task;Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="28">
      <DTS:Variables />
      <DTS:ObjectData>
        <FileSystemData
          TaskOverwriteDestFile="True"
          TaskSourcePath="User::RejectTemplate"
          TaskIsSourceVariable="True"
          TaskDestinationPath="User::RejectFile"
          TaskIsDestinationVariable="True" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\FINAL CHECK - BEFORE Table Inserts"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{978391B6-2518-47B0-83CA-36EE0AEE03BB}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="FINAL CHECK - BEFORE Table Inserts">
      <DTS:Variables />
      <DTS:Executables />
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\New Stuff Place holder"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:Disabled="True"
      DTS:DTSID="{26B2B2CC-B9FD-46D0-A4D1-0AABAB5966C7}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="New Stuff Place holder">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\New Stuff Place holder\Add Book Course Relations"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{F9EA8495-C2D9-483B-AB51-DE987CEE69B5}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Add Book Course Relations"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="29">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\New Stuff Place holder\Add Components"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{CB1B9FAC-255D-492B-B135-28BA63BD5C78}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Add Components"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="30">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\New Stuff Place holder\Campus Ordered Books"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{15517FD5-AD39-48C7-8E21-394FF82A1BA9}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Campus Ordered Books"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="31">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Reset Import Bit and Message"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{34121198-5E09-431D-8486-F0B339BC085A}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Reset Import Bit and Message"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="28">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{BACA6916-2A2E-4D6E-A01D-FFD222A74312}"
          SQLTask:SqlStatementSource="/*&#xA;The KEEP bit should be set to 1 if you've done manual cleanup that you don't want to do again&#xA;&#xA;*/&#xA;&#xA;&#xA;update _DC_DistrictIM set import = 1, rejectmessage = null where keep = 0&#xA;GO&#xA;update _DC_CampusIM set import = 1, rejectmessage = null  where keep = 0&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{A850F000-2D8A-49C5-8F92-C43B4157CCCB}"
      DTS:From="Package\Reset Import Bit and Message"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Create Reject File" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql12">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="256" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssge="clr-namespace:Microsoft.SqlServer.Graph.Extended;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib">
        <NodeLayout
          Size="201,44"
          Id="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Cleanup Double Quotes"
          TopLeft="672.183962264151,219.183962264151" />
        <NodeLayout
          Size="136,70"
          Id="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Create District From Campus"
          TopLeft="385.702830188679,15.867924528302" />
        <NodeLayout
          Size="136,70"
          Id="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Drop Create Tables"
          TopLeft="17.6981132075471,8.7358490566038" />
        <NodeLayout
          Size="136,44"
          Id="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus"
          TopLeft="182.415094339623,89.6037735849056" />
        <NodeLayout
          Size="136,44"
          Id="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import District"
          TopLeft="180.679245283019,9.94339622641508" />
        <NodeLayout
          Size="136,44"
          Id="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Pad ISBN Leading 0s"
          TopLeft="21.4056603773585,97.6367924528302" />
        <NodeLayout
          Size="277,55"
          Id="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Remove extra space - District"
          TopLeft="596.891509433962,21.933962264151" />
        <NodeLayout
          Size="164,44"
          Id="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Remove extra spaces - Campus"
          TopLeft="413.957547169811,287.528301886793" />
        <NodeLayout
          Size="154,44"
          Id="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Set Default on Missing Values"
          TopLeft="445.97641509434,202.646226415094" />
        <NodeLayout
          Size="136,44"
          Id="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Set Null - Campus"
          TopLeft="22.3726415094339,167.188679245283" />
        <NodeLayout
          Size="136,44"
          Id="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Set Null - District"
          TopLeft="19.1037735849056,255.882075471698" />
        <NodeLayout
          Size="227,44"
          Id="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Set NULL to Space - Campus"
          TopLeft="651.372641509434,109.278301886793" />
        <NodeLayout
          Size="170,44"
          Id="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Set NULL to Space - DISTRICT"
          TopLeft="420.745283018868,117.547169811321" />
        <NodeLayout
          Size="194,44"
          Id="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Upper Case all ISBN characters"
          TopLeft="620.02358490566,288.853773584906" />
        <EdgeLayout
          Id="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see.PrecedenceConstraints[Constraint]"
          TopLeft="153.698113207547,43.7358490566038">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="26.9811320754717,-11.7924528301887"
              Start="0,0"
              End="19.4811320754717,-11.7924528301887">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="9.49056603773586,0" />
                  <mssgle:CubicBezierSegment
                    Point1="9.49056603773586,0"
                    Point2="13.4905660377359,0"
                    Point3="13.4905660377359,-4" />
                  <mssgle:LineSegment
                    End="13.4905660377359,-7.79245283018872" />
                  <mssgle:CubicBezierSegment
                    Point1="13.4905660377359,-7.79245283018872"
                    Point2="13.4905660377359,-11.7924528301887"
                    Point3="17.4905660377359,-11.7924528301887" />
                  <mssgle:LineSegment
                    End="19.4811320754717,-11.7924528301887" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see.PrecedenceConstraints[Constraint 1]"
          TopLeft="590.745283018868,139.547169811321">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="60.6273584905658,-8.26886792452819"
              Start="0,0"
              End="53.1273584905658,-8.26886792452819">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="26.3136792452829,0" />
                  <mssgle:CubicBezierSegment
                    Point1="26.3136792452829,0"
                    Point2="30.3136792452829,0"
                    Point3="30.3136792452829,-4" />
                  <mssgle:LineSegment
                    End="30.3136792452829,-4.26886792452819" />
                  <mssgle:CubicBezierSegment
                    Point1="30.3136792452829,-4.26886792452819"
                    Point2="30.3136792452829,-8.26886792452819"
                    Point3="34.3136792452829,-8.26886792452819" />
                  <mssgle:LineSegment
                    End="53.1273584905658,-8.26886792452819" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see.PrecedenceConstraints[Constraint 2]"
          TopLeft="735.391509433962,76.933962264151">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-229.646226415094,40.6132075471697"
              Start="0,0"
              End="-229.646226415094,33.1132075471697">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.3066037735849" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.3066037735849"
                    Point2="0,20.3066037735849"
                    Point3="-4,20.3066037735849" />
                  <mssgle:LineSegment
                    End="-225.646226415094,20.3066037735849" />
                  <mssgle:CubicBezierSegment
                    Point1="-225.646226415094,20.3066037735849"
                    Point2="-229.646226415094,20.3066037735849"
                    Point3="-229.646226415094,24.3066037735849" />
                  <mssgle:LineSegment
                    End="-229.646226415094,33.1132075471697" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see.PrecedenceConstraints[Constraint 3]"
          TopLeft="768.778301886792,153.278301886793">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,65.9056603773586"
              Start="0,0"
              End="0,58.4056603773586">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,58.4056603773586" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see.PrecedenceConstraints[Constraint 4]"
          TopLeft="599.97641509434,224.646226415094">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="72.2075471698113,16.5377358490567"
              Start="0,0"
              End="64.7075471698113,16.5377358490567">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="32.1037735849056,0" />
                  <mssgle:CubicBezierSegment
                    Point1="32.1037735849056,0"
                    Point2="36.1037735849056,0"
                    Point3="36.1037735849056,4" />
                  <mssgle:LineSegment
                    End="36.1037735849056,12.5377358490567" />
                  <mssgle:CubicBezierSegment
                    Point1="36.1037735849056,12.5377358490567"
                    Point2="36.1037735849056,16.5377358490567"
                    Point3="40.1037735849056,16.5377358490567" />
                  <mssgle:LineSegment
                    End="64.7075471698113,16.5377358490567" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see.PrecedenceConstraints[Constraint 5]"
          TopLeft="521.702830188679,50.1509433962265">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="75.1886792452831,0"
              Start="0,0"
              End="67.6886792452831,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="67.6886792452831,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see.PrecedenceConstraints[Constraint 6]"
          TopLeft="522.97641509434,246.646226415094">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-27.0188679245282,40.8820754716981"
              Start="0,0"
              End="-27.0188679245282,33.3820754716981">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.4410377358491" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.4410377358491"
                    Point2="0,20.4410377358491"
                    Point3="-4,20.4410377358491" />
                  <mssgle:LineSegment
                    End="-23.0188679245282,20.4410377358491" />
                  <mssgle:CubicBezierSegment
                    Point1="-23.0188679245282,20.4410377358491"
                    Point2="-27.0188679245282,20.4410377358491"
                    Point3="-27.0188679245282,24.4410377358491" />
                  <mssgle:LineSegment
                    End="-27.0188679245282,33.3820754716981" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see.PrecedenceConstraints[Constraint 7]"
          TopLeft="577.957547169811,310.191037735849">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="42.0660377358489,0"
              Start="0,0"
              End="34.5660377358489,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="34.5660377358489,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see.PrecedenceConstraints[Constraint 8]"
          TopLeft="227.811320754717,53.867924528302">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="22.4905660377358,35.7358490566037"
              Start="0,0"
              End="22.4905660377358,28.2358490566037">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.8301886792452" />
                  <mssgle:LineSegment
                    End="22.4905660377358,26.8301886792452" />
                  <mssgle:LineSegment
                    End="22.4905660377358,28.2358490566037" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="Remember to check CampusOwned before &#xA;creating District from Campus&#xA;"
          ParentId="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see"
          Size="226,78"
          Id="9d848690-7dab-4645-8c0a-c9e73065fed6"
          TopLeft="166.150943396226,173.301886792453">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="10.800000190734863"
              Color="#FFFF0000"
              Weight="Bold">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <ContainerLayout
          HeaderHeight="43.924528301886795"
          IsExpanded="True"
          PanelSize="908,425"
          Size="908,469"
          Id="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see"
          TopLeft="37.3584905660377,24.25" />
        <NodeLayout
          Size="191,69"
          Id="Package\(2) PRE - Validation -  Stand Alone Container - These need to be run once if at all - Populating Missing Table Records and Duplicate ISBNs\Add to Publisher Lookup - Run as StandAlone"
          TopLeft="35.2358490566037,83.3537735849056" />
        <NodeLayout
          Size="171,44"
          Id="Package\(2) PRE - Validation -  Stand Alone Container - These need to be run once if at all - Populating Missing Table Records and Duplicate ISBNs\Special Characters"
          TopLeft="400.320754716981,99.811320754717" />
        <AnnotationLayout
          Text="Updates the Publisher Lookup table"
          ParentId="Package\(2) PRE - Validation -  Stand Alone Container - These need to be run once if at all - Populating Missing Table Records and Duplicate ISBNs"
          Size="242,40"
          Id="7f13df12-2fa6-49c8-9ebc-d0d11202dc3b"
          TopLeft="27.2311320754717,13.6462264150944">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="11.399999618530273"
              Color="#FF080000">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="Use this for hidden&#xA;special characters in field (ISBN example)"
          ParentId="Package\(2) PRE - Validation -  Stand Alone Container - These need to be run once if at all - Populating Missing Table Records and Duplicate ISBNs"
          Size="318,54"
          Id="d2ef05ce-7b7c-44d7-a25e-72d4ee0a95a6"
          TopLeft="397.108490566038,10.1179245283019">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="11.399999618530273"
              Color="#FF080000">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <ContainerLayout
          HeaderHeight="43.924528301886795"
          IsExpanded="True"
          PanelSize="761,207"
          Size="761,251"
          Id="Package\(2) PRE - Validation -  Stand Alone Container - These need to be run once if at all - Populating Missing Table Records and Duplicate ISBNs"
          TopLeft="59.9386792452831,569.122641509434" />
        <NodeLayout
          Size="236,44"
          Id="Package\(3) These are standalone cleanup scripts - Run each script in SQL to determine if there is any cleanup that needs to be PRIOR to the validation containers - and They should definitely be run BEFORE table inserts\Check Distinct Grades"
          TopLeft="201.320754716981,237.283018867925" />
        <NodeLayout
          Size="173,44"
          Id="Package\(3) These are standalone cleanup scripts - Run each script in SQL to determine if there is any cleanup that needs to be PRIOR to the validation containers - and They should definitely be run BEFORE table inserts\Check Update Funding Source"
          TopLeft="679.919811320755,129.844339622642" />
        <NodeLayout
          Size="136,44"
          Id="Package\(3) These are standalone cleanup scripts - Run each script in SQL to determine if there is any cleanup that needs to be PRIOR to the validation containers - and They should definitely be run BEFORE table inserts\Cleanup CampusIDs"
          TopLeft="49.2452830188679,35.7641509433963" />
        <NodeLayout
          Size="155,44"
          Id="Package\(3) These are standalone cleanup scripts - Run each script in SQL to determine if there is any cleanup that needs to be PRIOR to the validation containers - and They should definitely be run BEFORE table inserts\Consumable"
          TopLeft="27.2122641509434,236.316037735849" />
        <NodeLayout
          Size="136,75"
          Id="Package\(3) These are standalone cleanup scripts - Run each script in SQL to determine if there is any cleanup that needs to be PRIOR to the validation containers - and They should definitely be run BEFORE table inserts\Find ISBN w Multi Bins"
          TopLeft="218.716981132075,9.90566037735857" />
        <NodeLayout
          Size="192,44"
          Id="Package\(3) These are standalone cleanup scripts - Run each script in SQL to determine if there is any cleanup that needs to be PRIOR to the validation containers - and They should definitely be run BEFORE table inserts\Invalid ISBN Length"
          TopLeft="383.990566037736,126.410377358491" />
        <NodeLayout
          Size="257,64"
          Id="Package\(3) These are standalone cleanup scripts - Run each script in SQL to determine if there is any cleanup that needs to be PRIOR to the validation containers - and They should definitely be run BEFORE table inserts\Invalid Quantity Distributed - RUN OUTSIDE"
          TopLeft="63.1839622641509,111.127358490566" />
        <NodeLayout
          Size="183,44"
          Id="Package\(3) These are standalone cleanup scripts - Run each script in SQL to determine if there is any cleanup that needs to be PRIOR to the validation containers - and They should definitely be run BEFORE table inserts\READ ME - Cleanup Duplication"
          TopLeft="799.655660377359,231.339622641509" />
        <NodeLayout
          Size="194,52"
          Id="Package\(3) These are standalone cleanup scripts - Run each script in SQL to determine if there is any cleanup that needs to be PRIOR to the validation containers - and They should definitely be run BEFORE table inserts\READ ME - Populate Book Bins"
          TopLeft="395.13679245283,22.5047169811321" />
        <NodeLayout
          Size="282,51"
          Id="Package\(3) These are standalone cleanup scripts - Run each script in SQL to determine if there is any cleanup that needs to be PRIOR to the validation containers - and They should definitely be run BEFORE table inserts\Review and Update Material Type"
          TopLeft="464.811320754717,229.495283018868" />
        <NodeLayout
          Size="167,42"
          Id="Package\(3) These are standalone cleanup scripts - Run each script in SQL to determine if there is any cleanup that needs to be PRIOR to the validation containers - and They should definitely be run BEFORE table inserts\Review SLC"
          TopLeft="826.221698113208,27.4481132075472" />
        <NodeLayout
          Size="176,59"
          Id="Package\(3) These are standalone cleanup scripts - Run each script in SQL to determine if there is any cleanup that needs to be PRIOR to the validation containers - and They should definitely be run BEFORE table inserts\Review Subject Area"
          TopLeft="616.853773584906,16.7028301886793" />
        <ContainerLayout
          HeaderHeight="43.924528301886795"
          IsExpanded="True"
          PanelSize="1067,335"
          Size="1067,379"
          Id="Package\(3) These are standalone cleanup scripts - Run each script in SQL to determine if there is any cleanup that needs to be PRIOR to the validation containers - and They should definitely be run BEFORE table inserts"
          TopLeft="41.75,875.051886792453" />
        <NodeLayout
          Size="182,51"
          Id="Package\(4)  District Validation\Clean up Publisher Names"
          TopLeft="359.849056603774,17.6792452830189" />
        <NodeLayout
          Size="197,44"
          Id="Package\(4)  District Validation\District Reject"
          TopLeft="80.1698113207547,103.452830188679" />
        <NodeLayout
          Size="136,44"
          Id="Package\(4)  District Validation\Duplicate ISBNs"
          TopLeft="632.830188679245,91.183962264151" />
        <NodeLayout
          Size="150,55"
          Id="Package\(4)  District Validation\Invalid District ISBN"
          TopLeft="14.3396226415094,17.566037735849" />
        <NodeLayout
          Size="136,44"
          Id="Package\(4)  District Validation\Invalid SLC"
          TopLeft="400.009433962264,90.5424528301887" />
        <NodeLayout
          Size="147,44"
          Id="Package\(4)  District Validation\Missing Publisher"
          TopLeft="185.547169811321,18.6226415094341" />
        <NodeLayout
          Size="187,44"
          Id="Package\(4)  District Validation\Missing Title"
          TopLeft="594.702830188679,16.132075471698" />
        <EdgeLayout
          Id="Package\(4)  District Validation.PrecedenceConstraints[Constraint]"
          TopLeft="89.3396226415094,72.566037735849">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="169.707547169811,-9.94339622641496"
              Start="0,0"
              End="169.707547169811,-2.44339622641496">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.5"
                    Point2="0,22.5"
                    Point3="4,22.5" />
                  <mssgle:LineSegment
                    End="165.707547169811,22.5" />
                  <mssgle:CubicBezierSegment
                    Point1="165.707547169811,22.5"
                    Point2="169.707547169811,22.5"
                    Point3="169.707547169811,18.5" />
                  <mssgle:LineSegment
                    End="169.707547169811,-2.44339622641496" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\(4)  District Validation.PrecedenceConstraints[Constraint 1]"
          TopLeft="332.547169811321,41.9009433962265">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="27.3018867924528,0"
              Start="0,0"
              End="19.8018867924528,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="19.8018867924528,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\(4)  District Validation.PrecedenceConstraints[Constraint 2]"
          TopLeft="541.849056603774,40.6556603773585">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="52.8537735849056,0"
              Start="0,0"
              End="45.3537735849056,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="45.3537735849056,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\(4)  District Validation.PrecedenceConstraints[Constraint 3]"
          TopLeft="688.202830188679,60.132075471698">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="12.6273584905662,31.0518867924529"
              Start="0,0"
              End="12.6273584905662,23.5518867924529">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,11.5259433962265" />
                  <mssgle:CubicBezierSegment
                    Point1="0,11.5259433962265"
                    Point2="0,15.5259433962265"
                    Point3="4,15.5259433962265" />
                  <mssgle:LineSegment
                    End="8.62735849056617,15.5259433962265" />
                  <mssgle:CubicBezierSegment
                    Point1="8.62735849056617,15.5259433962265"
                    Point2="12.6273584905662,15.5259433962265"
                    Point3="12.6273584905662,19.5259433962265" />
                  <mssgle:LineSegment
                    End="12.6273584905662,23.5518867924529" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\(4)  District Validation.PrecedenceConstraints[Constraint 4]"
          TopLeft="632.830188679245,112.86320754717">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-96.8207547169812,0"
              Start="0,0"
              End="-89.3207547169812,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-89.3207547169812,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\(4)  District Validation.PrecedenceConstraints[Constraint 5]"
          TopLeft="400.009433962264,112.542452830189">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-122.839622641509,12.9103773584905"
              Start="0,0"
              End="-115.339622641509,12.9103773584905">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-57.4198113207546,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-57.4198113207546,0"
                    Point2="-61.4198113207546,0"
                    Point3="-61.4198113207546,4" />
                  <mssgle:LineSegment
                    End="-61.4198113207546,8.91037735849048" />
                  <mssgle:CubicBezierSegment
                    Point1="-61.4198113207546,8.91037735849048"
                    Point2="-61.4198113207546,12.9103773584905"
                    Point3="-65.4198113207546,12.9103773584905" />
                  <mssgle:LineSegment
                    End="-115.339622641509,12.9103773584905" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43.924528301886795"
          IsExpanded="True"
          PanelSize="940,206"
          Size="940,250"
          Id="Package\(4)  District Validation"
          TopLeft="116.116576819407,1609.83962264151" />
        <NodeLayout
          Size="136,44"
          Id="Package\(5)  Campus Validation\Campus Reject"
          TopLeft="546.561320754717,257.075471698113" />
        <NodeLayout
          Size="247,44"
          Id="Package\(5)  Campus Validation\Clean up Publisher Names"
          TopLeft="278.830188679245,117.641509433962" />
        <NodeLayout
          Size="202,44"
          Id="Package\(5)  Campus Validation\Invalid Campus ISBN"
          TopLeft="495.396226415094,24.8113207547171" />
        <NodeLayout
          Size="136,67"
          Id="Package\(5)  Campus Validation\ISBN Invalid in  District Table"
          TopLeft="72.4858490566038,241.009433962264" />
        <NodeLayout
          Size="136,44"
          Id="Package\(5)  Campus Validation\Missing Publisher"
          TopLeft="641.183962264151,118.216981132075" />
        <NodeLayout
          Size="180,44"
          Id="Package\(5)  Campus Validation\Missing Title"
          TopLeft="39.3066037735849,116.698113207547" />
        <NodeLayout
          Size="136,44"
          Id="Package\(5)  Campus Validation\Numeric Quantity"
          TopLeft="309.481132075472,248.825471698113" />
        <NodeLayout
          Size="136,78"
          Id="Package\(5)  Campus Validation\RUN ME AS SELECT- ISBN not in District Table"
          TopLeft="39.0943396226415,21.8301886792453" />
        <NodeLayout
          Size="174,44"
          Id="Package\(5)  Campus Validation\Validate Campus IDs"
          TopLeft="258.905660377358,34.7735849056603" />
        <EdgeLayout
          Id="Package\(5)  Campus Validation.PrecedenceConstraints[Constraint]"
          TopLeft="596.396226415094,68.8113207547171">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="112.787735849057,49.4056603773583"
              Start="0,0"
              End="112.787735849057,41.9056603773583">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.7028301886792" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.7028301886792"
                    Point2="0,24.7028301886792"
                    Point3="4,24.7028301886792" />
                  <mssgle:LineSegment
                    End="108.787735849057,24.7028301886792" />
                  <mssgle:CubicBezierSegment
                    Point1="108.787735849057,24.7028301886792"
                    Point2="112.787735849057,24.7028301886792"
                    Point3="112.787735849057,28.7028301886792" />
                  <mssgle:LineSegment
                    End="112.787735849057,41.9056603773583" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\(5)  Campus Validation.PrecedenceConstraints[Constraint 1]"
          TopLeft="641.183962264151,139.929245283019">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-115.353773584906,0"
              Start="0,0"
              End="-107.853773584906,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-107.853773584906,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\(5)  Campus Validation.PrecedenceConstraints[Constraint 2]"
          TopLeft="278.830188679245,139.169811320755">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-59.5235849056604,0"
              Start="0,0"
              End="-52.0235849056604,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-52.0235849056604,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\(5)  Campus Validation.PrecedenceConstraints[Constraint 3]"
          TopLeft="432.905660377358,56.7735849056603">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="62.4905660377359,-9.96226415094316"
              Start="0,0"
              End="54.9905660377359,-9.96226415094316">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="27.245283018868,0" />
                  <mssgle:CubicBezierSegment
                    Point1="27.245283018868,0"
                    Point2="31.245283018868,0"
                    Point3="31.245283018868,-4" />
                  <mssgle:LineSegment
                    End="31.245283018868,-5.96226415094316" />
                  <mssgle:CubicBezierSegment
                    Point1="31.245283018868,-5.96226415094316"
                    Point2="31.245283018868,-9.96226415094316"
                    Point3="35.245283018868,-9.96226415094316" />
                  <mssgle:LineSegment
                    End="54.9905660377359,-9.96226415094316" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\(5)  Campus Validation.PrecedenceConstraints[Constraint 4]"
          TopLeft="129.306603773585,160.698113207547">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="11.1792452830189,80.3113207547171"
              Start="0,0"
              End="11.1792452830189,72.8113207547171">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.1556603773586" />
                  <mssgle:CubicBezierSegment
                    Point1="0,36.1556603773586"
                    Point2="0,40.1556603773586"
                    Point3="4,40.1556603773586" />
                  <mssgle:LineSegment
                    End="7.17924528301887,40.1556603773586" />
                  <mssgle:CubicBezierSegment
                    Point1="7.17924528301887,40.1556603773586"
                    Point2="11.1792452830189,40.1556603773586"
                    Point3="11.1792452830189,44.1556603773586" />
                  <mssgle:LineSegment
                    End="11.1792452830189,72.8113207547171" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\(5)  Campus Validation.PrecedenceConstraints[Constraint 6]"
          TopLeft="208.485849056604,272.667452830189">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="100.995283018868,0"
              Start="0,0"
              End="93.495283018868,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="93.495283018868,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\(5)  Campus Validation.PrecedenceConstraints[Constraint 7]"
          TopLeft="445.481132075472,270.825471698113">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="101.080188679245,8.25"
              Start="0,0"
              End="93.5801886792452,8.25">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="46.5400943396226,0" />
                  <mssgle:CubicBezierSegment
                    Point1="46.5400943396226,0"
                    Point2="50.5400943396226,0"
                    Point3="50.5400943396226,4" />
                  <mssgle:LineSegment
                    End="50.5400943396226,4.25" />
                  <mssgle:CubicBezierSegment
                    Point1="50.5400943396226,4.25"
                    Point2="50.5400943396226,8.25"
                    Point3="54.5400943396226,8.25" />
                  <mssgle:LineSegment
                    End="93.5801886792452,8.25" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43.924528301886795"
          IsExpanded="True"
          PanelSize="993,383"
          Size="993,427"
          Id="Package\(5)  Campus Validation"
          TopLeft="103.435983827493,1912.08760107817" />
        <NodeLayout
          Size="157,74"
          Id="Package\(6) PRE Table Insert - RUN ONCE when you are ready to populate the staging DB\Funding Source - Run as StandAlone"
          TopLeft="24.2210242587601,14.6981132075471" />
        <NodeLayout
          Size="153,63"
          Id="Package\(6) PRE Table Insert - RUN ONCE when you are ready to populate the staging DB\Material Types - Run as StandAlone"
          TopLeft="785.320754716981,13.3396226415093" />
        <NodeLayout
          Size="188,44"
          Id="Package\(6) PRE Table Insert - RUN ONCE when you are ready to populate the staging DB\PREQUEL to insert tblBookInventory"
          TopLeft="996.566037735849,26.7735849056604" />
        <NodeLayout
          Size="154,44"
          Id="Package\(6) PRE Table Insert - RUN ONCE when you are ready to populate the staging DB\Subject Area - Stand Alone"
          TopLeft="578.245283018868,24.3726415094343" />
        <NodeLayout
          Size="179,65"
          Id="Package\(6) PRE Table Insert - RUN ONCE when you are ready to populate the staging DB\VendorOrder - Run ONCE"
          TopLeft="298.792452830189,21.0754716981132" />
        <EdgeLayout
          Id="Package\(6) PRE Table Insert - RUN ONCE when you are ready to populate the staging DB.PrecedenceConstraints[Constraint]"
          TopLeft="181.22102425876,52.6367924528302">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="117.571428571429,0"
              Start="0,0"
              End="110.071428571429,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="110.071428571429,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\(6) PRE Table Insert - RUN ONCE when you are ready to populate the staging DB.PrecedenceConstraints[Constraint 1]"
          TopLeft="477.792452830189,49.9740566037738">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="100.452830188679,0"
              Start="0,0"
              End="92.9528301886792,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="92.9528301886792,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\(6) PRE Table Insert - RUN ONCE when you are ready to populate the staging DB.PrecedenceConstraints[Constraint 2]"
          TopLeft="732.245283018868,45.6061320754718">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="53.0754716981132,0"
              Start="0,0"
              End="45.5754716981132,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="45.5754716981132,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43.924528301886795"
          IsExpanded="True"
          PanelSize="1298,141"
          Size="1298,185"
          Id="Package\(6) PRE Table Insert - RUN ONCE when you are ready to populate the staging DB"
          TopLeft="85.9332884097036,2401.76145552561" />
        <NodeLayout
          Size="136,70"
          Id="Package\(7) Table Inserts\Approve Campus Books"
          TopLeft="38.7924528301887,161.867924528302" />
        <NodeLayout
          Size="176,44"
          Id="Package\(7) Table Inserts\Campus VendorOrderDetails"
          TopLeft="482.070080862534,167.140161725067" />
        <NodeLayout
          Size="235,44"
          Id="Package\(7) Table Inserts\District VendorOrderDetails and History"
          TopLeft="206.102425876011,169.339622641509" />
        <NodeLayout
          Size="130,44"
          Id="Package\(7) Table Inserts\tblBins"
          TopLeft="201.88679245283,24.2452830188677" />
        <NodeLayout
          Size="136,44"
          Id="Package\(7) Table Inserts\tblBookBins"
          TopLeft="619.590296495957,24.4447439353103" />
        <NodeLayout
          Size="175,44"
          Id="Package\(7) Table Inserts\tblBookInventory"
          TopLeft="400.177897574124,25.0161725067383" />
        <NodeLayout
          Size="177,44"
          Id="Package\(7) Table Inserts\tblBookOrders"
          TopLeft="560.377358490566,253.990566037736" />
        <NodeLayout
          Size="211,44"
          Id="Package\(7) Table Inserts\tblBookOrdersHistoryDist"
          TopLeft="307.632075471698,254.108490566038" />
        <NodeLayout
          Size="170,44"
          Id="Package\(7) Table Inserts\tblBooksMaterialTypes"
          TopLeft="751.191374663073,98.2075471698113" />
        <NodeLayout
          Size="212,44"
          Id="Package\(7) Table Inserts\tblCampusDistribution"
          TopLeft="283.536388140162,94.3530997304583" />
        <NodeLayout
          Size="209,44"
          Id="Package\(7) Table Inserts\tblCampusDistribution_tx"
          TopLeft="31.3962264150944,89.7547169811319" />
        <NodeLayout
          Size="249,44"
          Id="Package\(7) Table Inserts\tblDistrictDistributions and History"
          TopLeft="688.846361185984,166.687331536389" />
        <NodeLayout
          Size="166,44"
          Id="Package\(7) Table Inserts\tblRequisitions"
          TopLeft="765.702830188679,250.958221024259" />
        <NodeLayout
          Size="240,44"
          Id="Package\(7) Table Inserts\tblSubjectAreaBookLINK"
          TopLeft="28.9231805929919,251.202830188679" />
        <NodeLayout
          Size="135,44"
          Id="Package\(7) Table Inserts\tblVendor"
          TopLeft="30.7547169811321,20.2830188679245" />
        <NodeLayout
          Size="177,44"
          Id="Package\(7) Table Inserts\tblVendorBooks"
          TopLeft="530.064690026954,96.6172506738549" />
        <NodeLayout
          Size="277,44"
          Id="Package\(7) Table Inserts\Validate - No Unapproved Books for campuses; verify before campus approvals"
          TopLeft="203.509433962264,342.056603773585" />
        <EdgeLayout
          Id="Package\(7) Table Inserts.PrecedenceConstraints[Constraint]"
          TopLeft="165.754716981132,44.2641509433961">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="36.1320754716981,0"
              Start="0,0"
              End="28.6320754716981,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="28.6320754716981,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\(7) Table Inserts.PrecedenceConstraints[Constraint 1]"
          TopLeft="331.88679245283,46.630727762803">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="68.2911051212938,0"
              Start="0,0"
              End="60.7911051212938,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="60.7911051212938,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\(7) Table Inserts.PrecedenceConstraints[Constraint 10]"
          TopLeft="765.702830188679,274.474393530997">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-28.3254716981132,0"
              Start="0,0"
              End="-20.8254716981132,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-20.8254716981132,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\(7) Table Inserts.PrecedenceConstraints[Constraint 11]"
          TopLeft="560.377358490566,276.049528301887">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-41.7452830188679,0"
              Start="0,0"
              End="-34.2452830188679,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-34.2452830188679,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\(7) Table Inserts.PrecedenceConstraints[Constraint 12]"
          TopLeft="135.896226415094,133.754716981132">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-29.1037735849056,28.1132075471701"
              Start="0,0"
              End="-29.1037735849056,20.6132075471701">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,10.056603773585" />
                  <mssgle:CubicBezierSegment
                    Point1="0,10.056603773585"
                    Point2="0,14.056603773585"
                    Point3="-4,14.056603773585" />
                  <mssgle:LineSegment
                    End="-25.1037735849056,14.056603773585" />
                  <mssgle:CubicBezierSegment
                    Point1="-25.1037735849056,14.056603773585"
                    Point2="-29.1037735849056,14.056603773585"
                    Point3="-29.1037735849056,18.056603773585" />
                  <mssgle:LineSegment
                    End="-29.1037735849056,20.6132075471701" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\(7) Table Inserts.PrecedenceConstraints[Constraint 13]"
          TopLeft="307.632075471698,274.655660377359">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-38.7088948787062,0"
              Start="0,0"
              End="-31.2088948787062,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-31.2088948787062,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\(7) Table Inserts.PrecedenceConstraints[Constraint 14]"
          TopLeft="658.070080862534,188.913746630728">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="30.7762803234504,0"
              Start="0,0"
              End="23.2762803234504,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="23.2762803234504,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\(7) Table Inserts.PrecedenceConstraints[Constraint 2]"
          TopLeft="575.177897574124,46.7304582210243">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="44.4123989218328,0"
              Start="0,0"
              End="36.9123989218328,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="36.9123989218328,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\(7) Table Inserts.PrecedenceConstraints[Constraint 3]"
          TopLeft="687.590296495957,68.4447439353103">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="148.601078167116,29.762803234501"
              Start="0,0"
              End="148.601078167116,22.262803234501">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,10.8814016172505" />
                  <mssgle:CubicBezierSegment
                    Point1="0,10.8814016172505"
                    Point2="0,14.8814016172505"
                    Point3="4,14.8814016172505" />
                  <mssgle:LineSegment
                    End="144.601078167116,14.8814016172505" />
                  <mssgle:CubicBezierSegment
                    Point1="144.601078167116,14.8814016172505"
                    Point2="148.601078167116,14.8814016172505"
                    Point3="148.601078167116,18.8814016172505" />
                  <mssgle:LineSegment
                    End="148.601078167116,22.262803234501" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\(7) Table Inserts.PrecedenceConstraints[Constraint 4]"
          TopLeft="751.191374663073,119.412398921833">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-44.1266846361184,0"
              Start="0,0"
              End="-36.6266846361184,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-36.6266846361184,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\(7) Table Inserts.PrecedenceConstraints[Constraint 5]"
          TopLeft="530.064690026954,117.485175202157">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-34.5283018867925,0"
              Start="0,0"
              End="-27.0283018867925,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-27.0283018867925,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\(7) Table Inserts.PrecedenceConstraints[Constraint 6]"
          TopLeft="283.536388140162,114.053908355795">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-43.1401617250673,0"
              Start="0,0"
              End="-35.6401617250673,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-35.6401617250673,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\(7) Table Inserts.PrecedenceConstraints[Constraint 7]"
          TopLeft="174.792452830189,194.103773584906">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="31.3099730458219,0"
              Start="0,0"
              End="23.8099730458219,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="23.8099730458219,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\(7) Table Inserts.PrecedenceConstraints[Constraint 8]"
          TopLeft="441.102425876011,190.239892183288">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="40.9676549865229,0"
              Start="0,0"
              End="33.4676549865229,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="33.4676549865229,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\(7) Table Inserts.PrecedenceConstraints[Constraint 9]"
          TopLeft="813.346361185984,210.687331536389">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="35.3564690026953,40.2708894878701"
              Start="0,0"
              End="35.3564690026953,32.7708894878701">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.1354447439351" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.1354447439351"
                    Point2="0,20.1354447439351"
                    Point3="4,20.1354447439351" />
                  <mssgle:LineSegment
                    End="31.3564690026953,20.1354447439351" />
                  <mssgle:CubicBezierSegment
                    Point1="31.3564690026953,20.1354447439351"
                    Point2="35.3564690026953,20.1354447439351"
                    Point3="35.3564690026953,24.1354447439351" />
                  <mssgle:LineSegment
                    End="35.3564690026953,32.7708894878701" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43.924528301886795"
          IsExpanded="True"
          PanelSize="961,441"
          Size="961,485"
          Id="Package\(7) Table Inserts"
          TopLeft="226.028301886792,2921.67924528302" />
        <NodeLayout
          Size="136,44"
          Id="Package\Biblio Container - Not Valid - just a Place Holder\Execute SQL Task"
          TopLeft="66.9056603773585,39.1509433962264" />
        <ContainerLayout
          HeaderHeight="43.924528301886795"
          IsExpanded="True"
          PanelSize="277,176"
          Size="277,220"
          Id="Package\Biblio Container - Not Valid - just a Place Holder"
          TopLeft="1164.22237196765,549.169811320755" />
        <AnnotationLayout
          Text="Check that the Pretable inserts populated correctly&#xA;&#xA;select * from tblFundingSources --(no blanks)&#xA; select * from tblVendorOrders --(only one if its an intial DC with just District owned books  )&#xA; select * from tblSubjectArea&#xA; -- (no blanks/ck for dupes based on mispelling&#xA; select * from tblMaterialTypes --(no blanks/ck for dupes)"
          ParentId="Package\FINAL CHECK - BEFORE Table Inserts"
          Size="378,136"
          Id="afdb9fbe-f3e3-4d81-867b-13f326092112"
          TopLeft="52.0754716981132,30.3018867924529">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="11.399999618530273"
              Color="#FFFF0000"
              Weight="Bold">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="Make absolutely sure you don't have duplicate ISBNs in the district file&#xA;&#xA;select isbn from _DC_DistrictIM&#xA;where import = 1&#xA;group by isbn having count(*) &gt; 1"
          ParentId="Package\FINAL CHECK - BEFORE Table Inserts"
          Size="436,95"
          Id="a47d464b-c358-4a7f-a284-b6bbb6551ba8"
          TopLeft="422.603773584906,13.2641509433962">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="11.399999618530273"
              Color="#FFFF0000"
              Weight="Bold">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <ContainerLayout
          HeaderHeight="43.924528301886795"
          IsExpanded="True"
          PanelSize="1124,220"
          Size="1124,264"
          Id="Package\FINAL CHECK - BEFORE Table Inserts"
          TopLeft="260.458221024259,2635.33894878706" />
        <NodeLayout
          Size="166,44"
          Id="Package\New Stuff Place holder\Add Book Course Relations"
          TopLeft="35.9622641509434,13.2641509433962" />
        <NodeLayout
          Size="190,44"
          Id="Package\New Stuff Place holder\Add Components"
          TopLeft="22.0377358490566,85.188679245283" />
        <NodeLayout
          Size="183,44"
          Id="Package\New Stuff Place holder\Campus Ordered Books"
          TopLeft="22.2264150943396,162.169811320755" />
        <ContainerLayout
          HeaderHeight="43.924528301886795"
          IsExpanded="True"
          PanelSize="223,390"
          Size="223,434"
          Id="Package\New Stuff Place holder"
          TopLeft="1210.49191374663,840.285714285714" />
        <AnnotationLayout
          Text="Reset Import Variables EACH TIME&#xA;after cleanup and prior to running validations"
          ParentId="5775d668-82f7-4958-94c5-9a7b0afa4878"
          Size="315,72"
          Id="1b63d00b-2c1a-46d5-a176-c9fa689be2ca"
          TopLeft="7.81132075471697,8.47169811320755">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="12.600000381469727"
              Color="#FFFF0000"
              Weight="Bold">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <NodeLayout
          Size="136,65"
          Id="Package\Reset Import Bit and Message"
          TopLeft="68.2318059299191,98.8059299191376" />
        <NodeLayout
          Size="136,72"
          Id="Package\Create Reject File"
          TopLeft="249.363881401617,98.956873315364" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="204.231805929919,133.131401617251">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="45.1320754716981,0"
              Start="0,0"
              End="37.6320754716981,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="37.6320754716981,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <GroupLayout
          Text="RESET BIT before Validating"
          ParentId="Package"
          HeaderHeight="43.924528301886795"
          IsExpanded="True"
          PanelSize="454,226"
          Size="454,270"
          Id="5775d668-82f7-4958-94c5-9a7b0afa4878"
          TopLeft="146.132075471698,1280.53301886792">
          <GroupLayout.ChildrenIds>
            <s:String>1b63d00b-2c1a-46d5-a176-c9fa689be2ca</s:String>
            <s:String>Package\Reset Import Bit and Message</s:String>
            <s:String>Package\Create Reject File</s:String>
            <s:String>Package.PrecedenceConstraints[Constraint]</s:String>
          </GroupLayout.ChildrenIds>
        </GroupLayout>
        <AnnotationLayout
          Text="Be sure that these tables are populated in staging:&#xA;--LatestPickTicketNumbers should have a number in it&#xA;--tblRegion should have record&#xA;--tblCampuses always has a region value of 0 in every record&#xA;--tblSettings should be populated – always one record&#xA;--tblUnvCounter should be populated&#xA;--tblUnvDistrictPreferences – make sure DistrictPreferenceName&#xA;  and DistrictPreferenceValues have correct values for the &#xA;                 District ID and District Name&#xA;tlbVersion – make sure it is the current &#xA;***********************************&#xA;Check counts in application against database&#xA;***********************************&#xA;--&gt;&gt;&gt; ??? Need to add insert to &#xA;            tblBookOrderTransactions (see multi-req fix for sample)"
          ParentId="Package"
          Size="653,254"
          Id="c09cac1b-5831-4ee3-b573-aa28bdd67a34"
          TopLeft="975.952830188679,60.7547169811321">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="12.600000381469727"
              Color="#FF080000"
              Weight="Bold">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\OLE DB Destination"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus\Flat File Source"
          TopLeft="NaN,NaN" />
        <EdgeLayout
          Id="Package\(1)  Initialze Tables - This will vary based on the raw data provided - If two files are provided each will be imported and further validation and comparison will be required - Cleanup will depend on the type of data you see\Import Campus.Paths[Flat File Source Output]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="{x:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <x:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <TaskHost
    design-time-name="Package\(4)  District Validation\District Reject">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="146,42"
          Id="Package\(4)  District Validation\District Reject\District Reject"
          TopLeft="13,5.5" />
        <NodeLayout
          Size="158,42"
          Id="Package\(4)  District Validation\District Reject\Data Conversion"
          TopLeft="7.00000000000003,107.5" />
        <NodeLayout
          Size="161,42"
          Id="Package\(4)  District Validation\District Reject\Excel Destination"
          TopLeft="5.50000000000003,209.5" />
        <EdgeLayout
          Id="Package\(4)  District Validation\District Reject.Paths[OLE DB Source Output]"
          TopLeft="86,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\(4)  District Validation\District Reject.Paths[Data Conversion Output]"
          TopLeft="86,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <TaskHost
    design-time-name="Package\(5)  Campus Validation\Campus Reject">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="Package\(5)  Campus Validation\Campus Reject\OLE DB Source"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package\(5)  Campus Validation\Campus Reject\Excel Destination"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package\(5)  Campus Validation\Campus Reject\Data Conversion"
          TopLeft="NaN,NaN" />
        <EdgeLayout
          Id="Package\(5)  Campus Validation\Campus Reject.Paths[OLE DB Source Output]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="{x:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <x:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\(5)  Campus Validation\Campus Reject.Paths[Data Conversion Output]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="{x:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <x:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>