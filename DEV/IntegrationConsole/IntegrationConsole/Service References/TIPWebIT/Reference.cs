//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IntegrationConsole.TIPWebIT {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://hayessoft.com/webservices", ConfigurationName="TIPWebIT.WebServiceSoap")]
    public interface WebServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hayessoft.com/webservices/Search", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Search(string tag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hayessoft.com/webservices/Search", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SearchAsync(string tag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hayessoft.com/webservices/SearchRoom", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SearchRoom(string roomNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hayessoft.com/webservices/SearchRoom", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SearchRoomAsync(string roomNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hayessoft.com/webservices/SearchStudent", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SearchStudent(string studentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hayessoft.com/webservices/SearchStudent", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SearchStudentAsync(string studentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hayessoft.com/webservices/Issue", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Issue(string studentID, string tag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hayessoft.com/webservices/Issue", ReplyAction="*")]
        System.Threading.Tasks.Task<string> IssueAsync(string studentID, string tag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hayessoft.com/webservices/QuickCollect", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string QuickCollect(string tag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hayessoft.com/webservices/QuickCollect", ReplyAction="*")]
        System.Threading.Tasks.Task<string> QuickCollectAsync(string tag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hayessoft.com/webservices/QuickCollectToRoom", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string QuickCollectToRoom(string tag, string roomNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hayessoft.com/webservices/QuickCollectToRoom", ReplyAction="*")]
        System.Threading.Tasks.Task<string> QuickCollectToRoomAsync(string tag, string roomNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hayessoft.com/webservices/Authenticate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool Authenticate(string user, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hayessoft.com/webservices/Authenticate", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> AuthenticateAsync(string user, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hayessoft.com/webservices/LogOn", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool LogOn(string user, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hayessoft.com/webservices/LogOn", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> LogOnAsync(string user, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hayessoft.com/webservices/LogOff", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool LogOff();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hayessoft.com/webservices/LogOff", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> LogOffAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hayessoft.com/webservices/GetSearch", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetSearch(string search);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hayessoft.com/webservices/GetSearch", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetSearchAsync(string search);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hayessoft.com/webservices/UpdateSAPToTIPWeb", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateSAPToTIPWeb(
                    string BUKRS, 
                    string INVZU, 
                    string ANLKL, 
                    string TXK20, 
                    string TXT50, 
                    string WERKS, 
                    string STORT, 
                    string NAME1, 
                    string RAUMN, 
                    string SERNR, 
                    string ANLN1, 
                    string ANLN2, 
                    string HERST, 
                    string TYPBZ, 
                    string ORD43, 
                    string INVNR, 
                    string GSBER, 
                    string KOSTL, 
                    string GEBER, 
                    string FKBER, 
                    string KANSW, 
                    string ZUGDT, 
                    string MENGE, 
                    string KFZKZ, 
                    string AKTIV, 
                    string YR_PERIOD, 
                    string IVDAT, 
                    string GDLGRP, 
                    string PSPNR, 
                    string DEAKT, 
                    string GPLAB, 
                    string BWASL, 
                    string KTEXT, 
                    string user, 
                    string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hayessoft.com/webservices/UpdateSAPToTIPWeb", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateSAPToTIPWebAsync(
                    string BUKRS, 
                    string INVZU, 
                    string ANLKL, 
                    string TXK20, 
                    string TXT50, 
                    string WERKS, 
                    string STORT, 
                    string NAME1, 
                    string RAUMN, 
                    string SERNR, 
                    string ANLN1, 
                    string ANLN2, 
                    string HERST, 
                    string TYPBZ, 
                    string ORD43, 
                    string INVNR, 
                    string GSBER, 
                    string KOSTL, 
                    string GEBER, 
                    string FKBER, 
                    string KANSW, 
                    string ZUGDT, 
                    string MENGE, 
                    string KFZKZ, 
                    string AKTIV, 
                    string YR_PERIOD, 
                    string IVDAT, 
                    string GDLGRP, 
                    string PSPNR, 
                    string DEAKT, 
                    string GPLAB, 
                    string BWASL, 
                    string KTEXT, 
                    string user, 
                    string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hayessoft.com/webservices/ExternalBulkUpdate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ExternalBulkUpdate(string user, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hayessoft.com/webservices/ExternalBulkUpdate", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ExternalBulkUpdateAsync(string user, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hayessoft.com/webservices/TransferComponentToNewParent", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        object TransferComponentToNewParent(string newParentTag, string componentTag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hayessoft.com/webservices/TransferComponentToNewParent", ReplyAction="*")]
        System.Threading.Tasks.Task<object> TransferComponentToNewParentAsync(string newParentTag, string componentTag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hayessoft.com/webservices/TransferAllComponentsToNewParent", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        object TransferAllComponentsToNewParent(string oldParentTag, string newParentTag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hayessoft.com/webservices/TransferAllComponentsToNewParent", ReplyAction="*")]
        System.Threading.Tasks.Task<object> TransferAllComponentsToNewParentAsync(string oldParentTag, string newParentTag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hayessoft.com/webservices/RemoveComponent", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        object RemoveComponent(string componentTag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hayessoft.com/webservices/RemoveComponent", ReplyAction="*")]
        System.Threading.Tasks.Task<object> RemoveComponentAsync(string componentTag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hayessoft.com/webservices/TransferComponentValidTag", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        object TransferComponentValidTag(string parentTag, string componentTag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hayessoft.com/webservices/TransferComponentValidTag", ReplyAction="*")]
        System.Threading.Tasks.Task<object> TransferComponentValidTagAsync(string parentTag, string componentTag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hayessoft.com/webservices/TransferAllComponentValidTag", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        object TransferAllComponentValidTag(string newParentTag, string oldParentTag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hayessoft.com/webservices/TransferAllComponentValidTag", ReplyAction="*")]
        System.Threading.Tasks.Task<object> TransferAllComponentValidTagAsync(string newParentTag, string oldParentTag);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WebServiceSoapChannel : IntegrationConsole.TIPWebIT.WebServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebServiceSoapClient : System.ServiceModel.ClientBase<IntegrationConsole.TIPWebIT.WebServiceSoap>, IntegrationConsole.TIPWebIT.WebServiceSoap {
        
        public WebServiceSoapClient() {
        }
        
        public WebServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WebServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Search(string tag) {
            return base.Channel.Search(tag);
        }
        
        public System.Threading.Tasks.Task<string> SearchAsync(string tag) {
            return base.Channel.SearchAsync(tag);
        }
        
        public string SearchRoom(string roomNumber) {
            return base.Channel.SearchRoom(roomNumber);
        }
        
        public System.Threading.Tasks.Task<string> SearchRoomAsync(string roomNumber) {
            return base.Channel.SearchRoomAsync(roomNumber);
        }
        
        public string SearchStudent(string studentID) {
            return base.Channel.SearchStudent(studentID);
        }
        
        public System.Threading.Tasks.Task<string> SearchStudentAsync(string studentID) {
            return base.Channel.SearchStudentAsync(studentID);
        }
        
        public string Issue(string studentID, string tag) {
            return base.Channel.Issue(studentID, tag);
        }
        
        public System.Threading.Tasks.Task<string> IssueAsync(string studentID, string tag) {
            return base.Channel.IssueAsync(studentID, tag);
        }
        
        public string QuickCollect(string tag) {
            return base.Channel.QuickCollect(tag);
        }
        
        public System.Threading.Tasks.Task<string> QuickCollectAsync(string tag) {
            return base.Channel.QuickCollectAsync(tag);
        }
        
        public string QuickCollectToRoom(string tag, string roomNumber) {
            return base.Channel.QuickCollectToRoom(tag, roomNumber);
        }
        
        public System.Threading.Tasks.Task<string> QuickCollectToRoomAsync(string tag, string roomNumber) {
            return base.Channel.QuickCollectToRoomAsync(tag, roomNumber);
        }
        
        public bool Authenticate(string user, string pass) {
            return base.Channel.Authenticate(user, pass);
        }
        
        public System.Threading.Tasks.Task<bool> AuthenticateAsync(string user, string pass) {
            return base.Channel.AuthenticateAsync(user, pass);
        }
        
        public bool LogOn(string user, string pass) {
            return base.Channel.LogOn(user, pass);
        }
        
        public System.Threading.Tasks.Task<bool> LogOnAsync(string user, string pass) {
            return base.Channel.LogOnAsync(user, pass);
        }
        
        public bool LogOff() {
            return base.Channel.LogOff();
        }
        
        public System.Threading.Tasks.Task<bool> LogOffAsync() {
            return base.Channel.LogOffAsync();
        }
        
        public string GetSearch(string search) {
            return base.Channel.GetSearch(search);
        }
        
        public System.Threading.Tasks.Task<string> GetSearchAsync(string search) {
            return base.Channel.GetSearchAsync(search);
        }
        
        public string UpdateSAPToTIPWeb(
                    string BUKRS, 
                    string INVZU, 
                    string ANLKL, 
                    string TXK20, 
                    string TXT50, 
                    string WERKS, 
                    string STORT, 
                    string NAME1, 
                    string RAUMN, 
                    string SERNR, 
                    string ANLN1, 
                    string ANLN2, 
                    string HERST, 
                    string TYPBZ, 
                    string ORD43, 
                    string INVNR, 
                    string GSBER, 
                    string KOSTL, 
                    string GEBER, 
                    string FKBER, 
                    string KANSW, 
                    string ZUGDT, 
                    string MENGE, 
                    string KFZKZ, 
                    string AKTIV, 
                    string YR_PERIOD, 
                    string IVDAT, 
                    string GDLGRP, 
                    string PSPNR, 
                    string DEAKT, 
                    string GPLAB, 
                    string BWASL, 
                    string KTEXT, 
                    string user, 
                    string pass) {
            return base.Channel.UpdateSAPToTIPWeb(BUKRS, INVZU, ANLKL, TXK20, TXT50, WERKS, STORT, NAME1, RAUMN, SERNR, ANLN1, ANLN2, HERST, TYPBZ, ORD43, INVNR, GSBER, KOSTL, GEBER, FKBER, KANSW, ZUGDT, MENGE, KFZKZ, AKTIV, YR_PERIOD, IVDAT, GDLGRP, PSPNR, DEAKT, GPLAB, BWASL, KTEXT, user, pass);
        }
        
        public System.Threading.Tasks.Task<string> UpdateSAPToTIPWebAsync(
                    string BUKRS, 
                    string INVZU, 
                    string ANLKL, 
                    string TXK20, 
                    string TXT50, 
                    string WERKS, 
                    string STORT, 
                    string NAME1, 
                    string RAUMN, 
                    string SERNR, 
                    string ANLN1, 
                    string ANLN2, 
                    string HERST, 
                    string TYPBZ, 
                    string ORD43, 
                    string INVNR, 
                    string GSBER, 
                    string KOSTL, 
                    string GEBER, 
                    string FKBER, 
                    string KANSW, 
                    string ZUGDT, 
                    string MENGE, 
                    string KFZKZ, 
                    string AKTIV, 
                    string YR_PERIOD, 
                    string IVDAT, 
                    string GDLGRP, 
                    string PSPNR, 
                    string DEAKT, 
                    string GPLAB, 
                    string BWASL, 
                    string KTEXT, 
                    string user, 
                    string pass) {
            return base.Channel.UpdateSAPToTIPWebAsync(BUKRS, INVZU, ANLKL, TXK20, TXT50, WERKS, STORT, NAME1, RAUMN, SERNR, ANLN1, ANLN2, HERST, TYPBZ, ORD43, INVNR, GSBER, KOSTL, GEBER, FKBER, KANSW, ZUGDT, MENGE, KFZKZ, AKTIV, YR_PERIOD, IVDAT, GDLGRP, PSPNR, DEAKT, GPLAB, BWASL, KTEXT, user, pass);
        }
        
        public string ExternalBulkUpdate(string user, string pass) {
            return base.Channel.ExternalBulkUpdate(user, pass);
        }
        
        public System.Threading.Tasks.Task<string> ExternalBulkUpdateAsync(string user, string pass) {
            return base.Channel.ExternalBulkUpdateAsync(user, pass);
        }
        
        public object TransferComponentToNewParent(string newParentTag, string componentTag) {
            return base.Channel.TransferComponentToNewParent(newParentTag, componentTag);
        }
        
        public System.Threading.Tasks.Task<object> TransferComponentToNewParentAsync(string newParentTag, string componentTag) {
            return base.Channel.TransferComponentToNewParentAsync(newParentTag, componentTag);
        }
        
        public object TransferAllComponentsToNewParent(string oldParentTag, string newParentTag) {
            return base.Channel.TransferAllComponentsToNewParent(oldParentTag, newParentTag);
        }
        
        public System.Threading.Tasks.Task<object> TransferAllComponentsToNewParentAsync(string oldParentTag, string newParentTag) {
            return base.Channel.TransferAllComponentsToNewParentAsync(oldParentTag, newParentTag);
        }
        
        public object RemoveComponent(string componentTag) {
            return base.Channel.RemoveComponent(componentTag);
        }
        
        public System.Threading.Tasks.Task<object> RemoveComponentAsync(string componentTag) {
            return base.Channel.RemoveComponentAsync(componentTag);
        }
        
        public object TransferComponentValidTag(string parentTag, string componentTag) {
            return base.Channel.TransferComponentValidTag(parentTag, componentTag);
        }
        
        public System.Threading.Tasks.Task<object> TransferComponentValidTagAsync(string parentTag, string componentTag) {
            return base.Channel.TransferComponentValidTagAsync(parentTag, componentTag);
        }
        
        public object TransferAllComponentValidTag(string newParentTag, string oldParentTag) {
            return base.Channel.TransferAllComponentValidTag(newParentTag, oldParentTag);
        }
        
        public System.Threading.Tasks.Task<object> TransferAllComponentValidTagAsync(string newParentTag, string oldParentTag) {
            return base.Channel.TransferAllComponentValidTagAsync(newParentTag, oldParentTag);
        }
    }
}
