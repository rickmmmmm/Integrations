<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="2/23/2021 10:16:29 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="T100582"
  DTS:CreatorName="HAYESSOFT\pdhar"
  DTS:DTSID="{BC6268FE-61DF-4A1F-9285-D63EE92AFEFD}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.121"
  DTS:LocaleID="1033"
  DTS:ObjectName="LoadCSV"
  DTS:PackageType="5"
  DTS:VersionBuild="66"
  DTS:VersionGUID="{4ED39278-841A-4EFE-A43B-B778EDEC7393}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[MyFlatFileSrcConnectionMgr]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{142E6FF4-6D27-4622-88BE-19F70C7102A5}"
      DTS:ObjectName="MyFlatFileSrcConnectionMgr">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x0022_"
          DTS:CodePage="1252"
          DTS:ConnectionString="E:\EZImportFiles\ChattanoogaGLA_SFTP_User\CGLA_Hayes_StudentData.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="&quot;StudentID&quot;"
              DTS:DTSID="{5C92D9FF-C5A3-45B6-BE7C-628AA3228C2C}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="&quot;CampusID&quot;"
              DTS:DTSID="{9F4C73D4-914A-4079-BE61-CF84C460A0C8}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="&quot;FirstName&quot;"
              DTS:DTSID="{97C3E3EB-6666-42DF-9237-C1BA9B22AD57}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="&quot;LastName&quot;"
              DTS:DTSID="{E0BFB21E-4270-4DD2-81BA-C11A1697A57B}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="&quot;MiddleName&quot;"
              DTS:DTSID="{594DAD6F-0690-4881-89FE-2F956A006268}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="&quot;Grade&quot;"
              DTS:DTSID="{152D4AF4-2739-44B3-88D3-0B30D5C1ABF3}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="&quot;Homeroom&quot;"
              DTS:DTSID="{14BAE4A3-5353-4B14-95FD-5F19C744AB95}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="&quot;Phone&quot;"
              DTS:DTSID="{23A9FB87-DBE1-4CB2-82F2-C1054F6FD718}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="&quot;ParentPhone&quot;"
              DTS:DTSID="{879B4DE0-7F4B-445F-8EFF-0A026E3C1099}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="&quot;Email&quot;"
              DTS:DTSID="{CA6E65D8-D02D-4571-876E-F6122B9E6B32}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="&quot;ParentEmail&quot;"
              DTS:DTSID="{13E11BAA-0AC9-445E-A560-2A4B9F012F66}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="&quot;Address&quot;"
              DTS:DTSID="{551EED7A-46B5-4AE7-B833-9DDEDD9EDE90}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="&quot;Address2&quot;"
              DTS:DTSID="{56EDD026-C2A6-4F0B-8C1E-7CDD048D46D3}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="&quot;City&quot;"
              DTS:DTSID="{9607E947-135F-4F50-A07A-9A6CBD6E545C}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="&quot;State&quot;"
              DTS:DTSID="{765E1003-2ACD-4CD1-8153-F838049851EA}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="&quot;Zip&quot;"
              DTS:DTSID="{1C144E4D-9573-4FC3-A670-C18AA4934826}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="&quot;Deactivate&quot;"
              DTS:DTSID="{38C1C8FE-90EF-4BA1-AE34-D21A9FEC323F}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[TIPWeb]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{89BB4ACA-69E7-4369-A605-DBE4BC8DFD6D}"
      DTS:ObjectName="TIPWeb">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=.;Initial Catalog=TipWeb_AnneArundel_0215;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D6ABBCBA-2305-4FA8-B4BB-E316CB2FBA69}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DCInputFile">
      <DTS:VariableValue
        DTS:DataType="8">C:\Temp\TIPWeb_Absolute_Export_DCPS_Concise.csv</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A4F4E976-CB4A-4F32-BB1B-3A924731879C}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="InputFile">
      <DTS:VariableValue
        DTS:DataType="8">D:\Temp\StudentDemographics - Concise.csv</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0AB7603D-01E6-4058-A5D2-7FC8C1B49C15}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="StaffInputFile">
      <DTS:VariableValue
        DTS:DataType="8">C:\Temp\CGLA_Hayes_StaffData-1.csv</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\DCPS Import"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:Disabled="True"
      DTS:DTSID="{B722C8A7-E219-446A-ACAA-6A13F4BC7A1A}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="DCPS Import"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\DCPS Import\Derived Column"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\DCPS Import\Derived Column.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DCPS Import\Derived Column.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\DCPS Import\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DCPS Import\Derived Column.Outputs[Derived Column Output].Columns[New]"
                      dataType="bool"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\DCPS Import\Derived Column.Outputs[Derived Column Output].Columns[New]"
                      name="New"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_BOOL)1</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_BOOL)1</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\DCPS Import\Derived Column.Outputs[Derived Column Output].Columns[Deactivate]"
                      dataType="bool"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\DCPS Import\Derived Column.Outputs[Derived Column Output].Columns[Deactivate]"
                      name="Deactivate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_BOOL)0</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_BOOL)0</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\DCPS Import\Derived Column.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\DCPS Import\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DCPS Import\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DCPS Import\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\DCPS Import\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DCPS Import\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DCPS Import\Read All Types of CSV"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;11"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Read All Types of CSV"
              version="8">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.IO;
using System.Text.RegularExpressions;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    private StreamReader reader;
    private string exportedAddressFile;

    public override void AcquireConnections(object Transaction)
    {

        

    }

    public override void PreExecute()
    {
        base.PreExecute();
    }

    public override void CreateNewOutputRows()
    {
        reader = new StreamReader(Variables.DCInputFile);

        reader.ReadLine();

        while (!reader.EndOfStream)
        {
            string line = reader.ReadLine();
            string sSeparator = ",";
            string sDelimiter = $@"""{sSeparator}""";

            string[] columns = Regex.Split(line, sDelimiter); //line.Split(new string[] { sDelimiter, StringSplitOptions.None });

            int i = 0;

            Output0Buffer.AddRow();

            Output0Buffer.Identifier = System.Convert.ToString(columns[i++]).Replace("\"","");
            Output0Buffer.SerialNumber = System.Convert.ToString(columns[i++]).Replace("\"", "");
            Output0Buffer.ComputerName = System.Convert.ToString( columns[i++]).Replace("\"", "");
            Output0Buffer.Username = System.Convert.ToString(columns[i++]).Replace("\"", "");
            Output0Buffer.OsName = System.Convert.ToString(columns[i++]).Replace("\"", "");
            Output0Buffer.PublicIp = System.Convert.ToString(columns[i++]).Replace("\"", "");
            Output0Buffer.LocalIp = System.Convert.ToString(columns[i++]).Replace("\"", "");
            Output0Buffer.LastConnectedUtc = System.Convert.ToString(columns[i++]).Replace("\"", "");
            Output0Buffer.AtRisk = System.Convert.ToString(columns[i++]).Replace("\"", "");
            Output0Buffer.InsideGeofence = System.Convert.ToString(columns[i++]).Replace("\"", "");
            Output0Buffer.InvestigationNo = System.Convert.ToString(columns[i++]).Replace("\"", "");

        }
    }

    public override void PostExecute()
    {

        base.PostExecute();
        reader.Close();

    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Identifier
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Identifier_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String SerialNumber
    {
        set
        {
            this[1] = value;
        }
    }
    public bool SerialNumber_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ComputerName
    {
        set
        {
            this[2] = value;
        }
    }
    public bool ComputerName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Username
    {
        set
        {
            this[3] = value;
        }
    }
    public bool Username_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String OsName
    {
        set
        {
            this[4] = value;
        }
    }
    public bool OsName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String PublicIp
    {
        set
        {
            this[5] = value;
        }
    }
    public bool PublicIp_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String LocalIp
    {
        set
        {
            this[6] = value;
        }
    }
    public bool LocalIp_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String LastConnectedUtc
    {
        set
        {
            this[7] = value;
        }
    }
    public bool LastConnectedUtc_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String AtRisk
    {
        set
        {
            this[8] = value;
        }
    }
    public bool AtRisk_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String InsideGeofence
    {
        set
        {
            this[9] = value;
        }
    }
    public bool InsideGeofence_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String InvestigationNo
    {
        set
        {
            this[10] = value;
        }
    }
    public bool InvestigationNo_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 Connection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"Connection").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String DCInputFile
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["DCInputFile"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_b790d120a8a8480dbb2e6fa7b2153ca2")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_b790d120a8a8480dbb2e6fa7b2153ca2")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_b790d120a8a8480dbb2e6fa7b2153ca2</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_b790d120a8a8480dbb2e6fa7b2153ca2</msb:DisplayName>
		<msb:ProjectId>{3C436451-BB42-4096-A6A5-B7236F43458C}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_b790d120a8a8480dbb2e6fa7b2153ca2.csproj"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:Breakpoint Include="68350b9e27644be5ae1f483797d2e7f5">
			<msb:FileName>main.cs</msb:FileName>
			<msb:ColumnNumber>9</msb:ColumnNumber>
			<msb:Enabled>True</msb:Enabled>
			<msb:LineNumber>42</msb:LineNumber>
			<msb:Condition></msb:Condition>
			<msb:ConditionType>1</msb:ConditionType>
			<msb:Language>C#</msb:Language>
			<msb:HitCountType>1</msb:HitCountType>
			<msb:HitCountTarget>1</msb:HitCountTarget>
		</msb:Breakpoint>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_b790d120a8a8480dbb2e6fa7b2153ca2.Properties.Settings.get_Default():SC_b790d120a8a8480dbb2e6fa7b2153ca2.Properties.Sett" +
    "ings")]

namespace SC_b790d120a8a8480dbb2e6fa7b2153ca2.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_b790d120a8a8480dbb2e6fa7b2153ca2.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{88F76BAF-D93F-4AA2-9900-3840D719B72B}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_b790d120a8a8480dbb2e6fa7b2153ca2</RootNamespace>
    <AssemblyName>SC_b790d120a8a8480dbb2e6fa7b2153ca2</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_b790d120a8a8480dbb2e6fa7b2153ca2.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_b790d120a8a8480dbb2e6fa7b2153ca2.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_b790d120a8a8480dbb2e6fa7b2153ca2.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_b790d120a8a8480dbb2e6fa7b2153ca2.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_b790d120a8a8480dbb2e6fa7b2153ca2.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_b790d120a8a8480dbb2e6fa7b2153ca2.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAC3wXWAAAAAAAAAAAOAAIiALATAAAB4AAAAIAAAAAAAAoj0A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAFA9AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAqB0AAAAgAAAAHgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAgAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAJgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACE
PQAAAAAAAEgAAAACAAUAfCUAABwXAAABAAAAAAAAAJg8AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYqHgIoEAAACioAABMwBQAQAgAAAQAAEQICewQAAARvKAAA
BnMRAAAKfQEAAAQCewEAAARvEgAACiY42AEAAAJ7AQAABG8SAAAKcgEAAHAKcgUAAHAGcgUAAHAo
EwAACgsHKBQAAAoMFg0CewUAAARvHQAABgJ7BQAABAgJJRdYDZooFQAACnIFAABwcgkAAHBvFgAA
Cm8HAAAGAnsFAAAECAklF1gNmigVAAAKcgUAAHByCQAAcG8WAAAKbwkAAAYCewUAAAQICSUXWA2a
KBUAAApyBQAAcHIJAABwbxYAAApvCwAABgJ7BQAABAgJJRdYDZooFQAACnIFAABwcgkAAHBvFgAA
Cm8NAAAGAnsFAAAECAklF1gNmigVAAAKcgUAAHByCQAAcG8WAAAKbw8AAAYCewUAAAQICSUXWA2a
KBUAAApyBQAAcHIJAABwbxYAAApvEQAABgJ7BQAABAgJJRdYDZooFQAACnIFAABwcgkAAHBvFgAA
Cm8TAAAGAnsFAAAECAklF1gNmigVAAAKcgUAAHByCQAAcG8WAAAKbxUAAAYCewUAAAQICSUXWA2a
KBUAAApyBQAAcHIJAABwbxYAAApvFwAABgJ7BQAABAgJJRdYDZooFQAACnIFAABwcgkAAHBvFgAA
Cm8ZAAAGAnsFAAAECAklF1gNmigVAAAKcgUAAHByCQAAcG8WAAAKbxsAAAYCewEAAARvFwAACjkY
/v//KkoCKBgAAAoCewEAAARvGQAACioeAiggAAAGKioCAwQFKBoAAAoqJgIWAygbAAAKKloDLAgC
FigcAAAKKnILAABwcx0AAAp6JgIXAygbAAAKKloDLAgCFygcAAAKKnILAABwcx0AAAp6JgIYAygb
AAAKKloDLAgCGCgcAAAKKnILAABwcx0AAAp6JgIZAygbAAAKKloDLAgCGSgcAAAKKnILAABwcx0A
AAp6JgIaAygbAAAKKloDLAgCGigcAAAKKnILAABwcx0AAAp6JgIbAygbAAAKKloDLAgCGygcAAAK
KnILAABwcx0AAAp6JgIcAygbAAAKKloDLAgCHCgcAAAKKnILAABwcx0AAAp6JgIdAygbAAAKKloD
LAgCHSgcAAAKKnILAABwcx0AAAp6JgIeAygbAAAKKloDLAgCHigcAAAKKnILAABwcx0AAAp6KgIf
CQMoGwAACipeAywJAh8JKBwAAAoqcgsAAHBzHQAACnoqAh8KAygbAAAKKl4DLAkCHwooHAAACipy
CwAAcHMdAAAKeh4CKB4AAAoqHgIoHwAACioeAiggAAAKKn4CKCEAAAoCAnMlAAAGfQMAAAQCAnMn
AAAGfQQAAAQqbgJ7BQAABCwSAnsFAAAEbx4AAAYCFH0FAAAEKgAAABMwBQBJAAAAAgAAERYKKy4E
BpQOBHKoAABwKCIAAAozGQIFBpoCBAaUKCMAAAoOBHMGAAAGfQUAAAQGF1gKBgMyzgJvJAAABgJv
IQAABgIoIgAABio6AigkAAAKAgN9BgAABCqCAnsGAAAEbyUAAApvJgAACnK6AABwbycAAApvKAAA
Cio6AigkAAAKAgN9BwAABCqWAnsHAAAEbykAAApy0AAAcG8qAAAKKCsAAApvLAAACnQdAAABKh4C
KCQAAAoqrn4IAAAELR5y6AAAcNAHAAACKC0AAApvLgAACnMvAAAKgAgAAAR+CAAABCoafgkAAAQq
HgKACQAABCoafgoAAAQqHgIoMAAACioucy4AAAaACgAABCpCU0pCAQABAAAAAAAMAAAAdjQuMC4z
MDMxOQAAAAAFAGwAAADcCAAAI34AAEgJAABwCgAAI1N0cmluZ3MAAAAAuBMAAFwBAAAjVVMAFBUA
ABAAAAAjR1VJRAAAACQVAAD4AQAAI0Jsb2IAAAAAAAAAAgAAAVcVogEJAQAAAPoBMwAWAAABAAAA
KgAAAAgAAAAKAAAALwAAACEAAAAwAAAAEAAAAAIAAAAFAAAAGwAAABwAAAABAAAABgAAAAEAAAAA
AHMEAQAAAAAABgBgAxAIBgD0AxAIBgCsAv0HDwCECAAABgDZAg8GBgBDAw8GBgAkAw8GBgDbAw8G
BgCAAw8GBgCZAw8GBgDwAg8GBgALAy8ECgC0A/MBBgATB+EABgBpCbsFCgBPB/MBDgBAB/MBCgCj
BvMBCgCvCfMBEgBmAJUHBgCPAv0HBgBgBzAIBgB+Bu4FFgBfAl0EFgDAAl0EFgBBAtkFBgB0AhAI
BgAgB+EABgBLBLsFFgBcCgYJBgDcCbsFBgBQBrsFGgABAL0HGgAqAL0HGgBNAL0HEgB/AJUHEgAa
AJUHTwAlCgAAEgCQAJUHBgAUArsFBgBeAbsFBgBmCg8GAAAAAMwAAAAAAAEAAQABABAAzgUAABAA
AQABAAEAEAAyBwAAQQADAAYAAQAQAJEJAABNAAMAIAABABAALAkAAD0ABgAlAAEAEADOCAAAPQAH
ACcAAAAQADcIkwg9AAgAKQAAARAA/QiTCGkACgAtAAEAKwfAAAEAggHEAAYALAnHAAYAzgjLAAYA
MgfPAAEAnwnTAAEAnwnTABEAwgXXABEAMQLbABEAOwHfAFAgAAAAAMYAJQnjAAEAUiAAAAAAxgAS
BAYAAgBcIAAAAADGAE4JBgACAHgiAAAAAMYAHQQGAAIAiyIAAAAAhhjmBwYAAgCTIgAAAACGGOYH
RAACAJ4iAAAAAIYIhgcQAAUAqCIAAAAAhgh7BegABgC/IgAAAACGCAIHEAAHAMkiAAAAAIYIYwXo
AAgA4CIAAAAAhgimARAACQDqIgAAAACGCNEE6AAKAAEjAAAAAIYI3QEQAAsACyMAAAAAhgj7BOgA
DAAiIwAAAACGCLcBEAANACwjAAAAAIYI6QToAA4AQyMAAAAAhgiKBhAADwBNIwAAAACGCDwF6AAQ
AGQjAAAAAIYIlwYQABEAbiMAAAAAhghQBegAEgCFIwAAAACGCAoBEAATAI8jAAAAAIYImwToABQA
piMAAAAAhghSBBAAFQCwIwAAAACGCA8F6AAWAMcjAAAAAIYISwEQABcA0iMAAAAAhgi3BOgAGADq
IwAAAACGCGoGEAAZAPUjAAAAAIYIIQXoABoADSQAAAAAhgBVCgYAGwAVJAAAAACGAHAJBgAbAB0k
AAAAAIYAcwlAABsAJSQAAAAAhhjmBwYAGwBQIAAAAADGAUAJBgAbAEUkAAAAAIEAHwEGABsAZCQA
AAAAxgAFCu0AGwBQIAAAAADGAU4JBgAfALkkAAAAAIYY5gf5AB8AyCQAAAAAhghBBngAIADpJAAA
AACGGOYH+QAgAPgkAAAAAIYIlgEjACEAHiUAAAAAgxjmBwYAIQAmJQAAAACTCFwH/wAhAFIlAAAA
AJMIGQIEASEAWSUAAAAAkwglAgkBIQBhJQAAAACWCIUJDwEiAGglAAAAAIYY5gcGACIAcCUAAAAA
kRjsBxQBIgAAAAEAAwYAAAEAVQcAAAIA2AgAAAMAsQYAAAEAKQQAAAEAKQQAAAEAKQQAAAEAKQQA
AAEAKQQAAAEAKQQAAAEAKQQAAAEAKQQAAAEAKQQAAAEAKQQAAAEAKQQAAAEAKQQAAAEAKQQAAAEA
KQQAAAEAKQQAAAEAKQQAAAEAKQQAAAEAKQQAAAEAKQQAAAEAKQQAAAEAKQQAAAEAKQQAAAEARgkA
AAIA8wcAAAMAOAkAAAQAsQYAAAEAtQkAAAEAtQkAAAEAKQQJAOYHAQARAOYHBgAZAOYHCgApAOYH
EAAxAOYHEAA5AOYHEABBAOYHEABJAOYHEABRAOYHEABZAOYHEABhAOYHEABpAOYHBgCpAOYHBgDJ
AOYHFQDZAOYHBgCZABIEBgBxAOYHEADhAOoBIwDpAGIJJwDxAH8JLgD5AEkENQDpADMBOgBxAJkF
QACZAB0EBgDhAFkCBgCBAOYHRACBALIFTgCBAJEFAQABAeYHEACBAFUKBgCBAHAJBgCBAHMJQACZ
AOYHBgCZANUAWACZAOwIXwB5AOYHBgCZAOsAZQAJASEGawARAcIBcQAZAXAHeACZAMIIfQAhAakF
gwCZAEAKigApAREKkABBAXABlwBBAWIKoACxAOYHpgDRAOYHBgAuAAsANAEuABMAPQEuABsAXAEu
ACMAZQEuACsAjgEuADMAjgEuADsAjgEuAEMAZQEuAEsAlAEuAFMAjgEuAFsAqwFDAGMA8wHjAGsA
8wFBAXsA8wEpA3MAXAFJA3MAXAEbAFQAAwABAAUAFwAGABgABwAZAAgAGwAAAIoHGAEAAH8FHAEA
AAYHGAEAAGcFHAEAAKoBGAEAANUEHAEAAOEBGAEAAP8EHAEAALsBGAEAAO0EHAEAAI4GGAEAAEAF
HAEAAJsGGAEAAFQFHAEAAA4BGAEAAJ8EHAEAAFYEGAEAABMFHAEAAE8BGAEAALsEHAEAAG4GGAEA
ACUFHAEAAEUGIAEAAJoBGAEAAGAHJQEAADkCKgEAAIkJLwEBAAcAAwABAAgABQABAAkABwABAAoA
CQABAAsACwABAAwADQABAA0ADwABAA4AEQABAA8AEwABABAAFQABABEAFwABABIAGQABABMAGwAB
ABQAHQABABUAHwABABYAIQABABcAIwABABgAJQABABkAJwABABoAKQABABsAKwABABwALQACACYA
LwACACgAMQACACoAMwACACsANQABACwANQACAC0ANwAEgAAAAQAAAAAAAAAAAAAAAACoAAAABAAA
AAAAAAAAAAAArgABAQAAAAALAAAAAAAAAAAAAAC3AL8JAAAAAAsAAAAAAAAAAAAAALcA5AkAAAAA
CwAAAAAAAAAAAAAAtwC7BgAAAAAEAAAAAAAAAAAAAACuALsFAAAAAAsAAAAAAAAAAAAAALcA3gYA
AAAAAAAAAAEAAABBCAAAAAAASURUU0NvbXBvbmVudE1ldGFEYXRhMTAwAElEVFNWYXJpYWJsZTEw
MABJRFRTUnVudGltZUNvbm5lY3Rpb25Db2xsZWN0aW9uMTAwAElEVFNSdW50aW1lQ29ubmVjdGlv
bjEwMABJRFRTQ29ubmVjdGlvbk1hbmFnZXIxMDAASURUU1ZhcmlhYmxlczEwMABJRFRTRXZhbHVh
dG9yQ29udGV4dDEwMABTQ19iNzkwZDEyMGE4YTg0ODBkYmIyZTZmYTdiMjE1M2NhMgA8TW9kdWxl
PgBHZXRPdXRwdXRJRABTeXN0ZW0uSU8AZ2V0X0NvbXBvbmVudE1ldGFEYXRhAG1zY29ybGliAHNl
dF9MYXN0Q29ubmVjdGVkVXRjAE1hcmtPdXRwdXRzRmluaXNoZWQAUmVwbGFjZQBkZWZhdWx0SW5z
dGFuY2UAc2V0X0luc2lkZUdlb2ZlbmNlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFu
ZGxlAGV4cG9ydGVkQWRkcmVzc0ZpbGUAZ2V0X0RDSW5wdXRGaWxlAHNldF9Db21wdXRlck5hbWUA
c2V0X09zTmFtZQBHZXRSdW50aW1lQ29ubmVjdGlvbkJ5TmFtZQBzZXRfVXNlcm5hbWUAUmVhZExp
bmUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAVHlwZQBnZXRfQ3VsdHVyZQBzZXRf
Q3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UAQ2xvc2UARWRp
dG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25V
c2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJp
YnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRh
cmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNz
ZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRl
AEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lT
U2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1
dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQB2
YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAHNldF9BdFJpc2sAU3lzdGVt
LkNvbXBvbmVudE1vZGVsAFNDX2I3OTBkMTIwYThhODQ4MGRiYjJlNmZhN2IyMTUzY2EyLmRsbABz
ZXRfTGFzdENvbm5lY3RlZFV0Y19Jc051bGwAc2V0X0luc2lkZUdlb2ZlbmNlX0lzTnVsbABzZXRf
Q29tcHV0ZXJOYW1lX0lzTnVsbABzZXRfT3NOYW1lX0lzTnVsbABzZXRfVXNlcm5hbWVfSXNOdWxs
AHNldF9BdFJpc2tfSXNOdWxsAHNldF9JbnZlc3RpZ2F0aW9uTm9fSXNOdWxsAHNldF9QdWJsaWNJ
cF9Jc051bGwAc2V0X0xvY2FsSXBfSXNOdWxsAHNldF9TZXJpYWxOdW1iZXJfSXNOdWxsAHNldF9J
ZGVudGlmaWVyX0lzTnVsbABTZXROdWxsAGdldF9FbmRPZlN0cmVhbQBnZXRfSXRlbQBzZXRfSXRl
bQBTeXN0ZW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0
ZW0uR2xvYmFsaXphdGlvbgBUcmFuc2FjdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBnZXRfUnVudGlt
ZUNvbm5lY3Rpb25Db2xsZWN0aW9uAGdldF9Db25uZWN0aW9uAEludmFsaWRPcGVyYXRpb25FeGNl
cHRpb24Ac2V0X0ludmVzdGlnYXRpb25ObwBDdWx0dXJlSW5mbwBzZXRfUHVibGljSXAAc2V0X0xv
Y2FsSXAAT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNSdW50
aW1lV3JhcABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1BpcGVsaW5lV3JhcABzZXRfU2VyaWFsTnVt
YmVyAFN0cmVhbVJlYWRlcgBUZXh0UmVhZGVyAHJlYWRlcgBPdXRwdXQwQnVmZmVyAFBpcGVsaW5l
QnVmZmVyAFNjcmlwdEJ1ZmZlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9Db25uZWN0aW9uTWFu
YWdlcgBzZXRfSWRlbnRpZmllcgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lLldyYXBw
ZXIATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUuV3JhcHBlcgAuY3RvcgAuY2N0b3IA
T3V0cHV0SURzAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZp
Y2VzAFN5c3RlbS5SZXNvdXJjZXMAU0NfYjc5MGQxMjBhOGE4NDgwZGJiMmU2ZmE3YjIxNTNjYTIu
UHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNDX2I3OTBkMTIw
YThhODQ4MGRiYjJlNmZhN2IyMTUzY2EyLlByb3BlcnRpZXMAZ2V0X1JlYWRPbmx5VmFyaWFibGVz
AEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBTeXN0ZW0uVGV4
dC5SZWd1bGFyRXhwcmVzc2lvbnMAQWNxdWlyZUNvbm5lY3Rpb25zAEJ1ZmZlcnMARmluaXNoT3V0
cHV0cwBDcmVhdGVOZXdPdXRwdXRSb3dzAENvbmNhdABPYmplY3QAU2V0RW5kT2ZSb3dzZXQAU3Bs
aXQAZ2V0X0RlZmF1bHQAVXNlckNvbXBvbmVudABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9u
ZW50AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQAQ29udmVydABNaWNyb3NvZnQuU3FsU2Vy
dmVyLlBpcGVsaW5lSG9zdABQcmltZU91dHB1dABHZXRWYWx1ZVdpdGhDb250ZXh0AFNjcmlwdENv
bXBvbmVudEV2YWxDb250ZXh0AGdldF9FdmFsdWF0b3JDb250ZXh0AEFkZFJvdwBSZWdleABnZXRf
QXNzZW1ibHkAAAADLAAAAyIAAAEAgJtJAHMATgB1AGwAbAAgAHAAcgBvAHAAZQByAHQAeQAgAGMA
YQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABGAGEAbABzAGUALgAgAEEAcwBzAGkAZwBu
ACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAAYwBvAGwAdQBtAG4AIABpAG4AcwB0AGUA
YQBkAC4AABFPAHUAdABwAHUAdAAgADAAABVDAG8AbgBuAGUAYwB0AGkAbwBuAAAXRABDAEkAbgBw
AHUAdABGAGkAbABlAABxUwBDAF8AYgA3ADkAMABkADEAMgAwAGEAOABhADgANAA4ADAAZABiAGIA
MgBlADYAZgBhADcAYgAyADEANQAzAGMAYQAyAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBz
AG8AdQByAGMAZQBzAAAAAAmy5eu9dtNHi7LBx6jTmJ8ABCABAQgDIAABBSABARERBCABAQ4FIAEB
EWEHBwQODh0OCAMgAA4GAAMODg4OBgACHQ4ODgQAAQ4OBSACDg4OAyAAAgkgAwESRR0IEkkFIAIB
CBwDBwEIBgACCBJJDgUgAR0ICAUgABKAhQUgABKAiQYgARKAjQ4EIAASUQUgABKAkQYgARKAlRwF
AAASgJkGIAEcEoCdCAABEoChEYClBSAAEoCpByACAQ4SgKkIt3pcVhk04IkIiYRdzYCAzJEDBhI5
AgYOAwYSFAMGEhgDBhIMAwYSTQMGElkDBhJdAwYSIAQgAQEcBCABAQILIAQBCB0IHRJFEkkFIAEB
Ek0EAAASWQQAABJdBQABARJdBAAAEiADAAABAygADgMoAAIEKAASUQQIABJZBAgAEl0ECAASIAgB
AAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU0NfYjc5
MGQxMjBhOGE4NDgwZGJiMmU2ZmE3YjIxNTNjYTIAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAy
MQAARwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFt
ZRAuTkVUIEZyYW1ld29yayA0BAEAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMu
UmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJh
bCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRp
bWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAeD0AAAAAAAAAAAAAkj0AAAAgAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAIQ9AAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwA
AAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEA
EAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABY
QAAA7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E
7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBW
AGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAA
AACwBEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAwADAAMAA0
AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4A
YQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBD
AF8AYgA3ADkAMABkADEAMgAwAGEAOABhADgANAA4ADAAZABiAGIAMgBlADYAZgBhADcAYgAyADEA
NQAzAGMAYQAyAAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAw
AAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwBiADcAOQAwAGQAMQAyADAA
YQA4AGEAOAA0ADgAMABkAGIAYgAyAGUANgBmAGEANwBiADIAMQA1ADMAYwBhADIALgBkAGwAbAAA
AEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAA
QAAgACAAMgAwADIAMQAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAA
AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfAGIANwA5ADAA
ZAAxADIAMABhADgAYQA4ADQAOAAwAGQAYgBiADIAZQA2AGYAYQA3AGIAMgAxADUAMwBjAGEAMgAu
AGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwBiADcAOQAwAGQA
MQAyADAAYQA4AGEAOAA0ADgAMABkAGIAYgAyAGUANgBmAGEANwBiADIAMQA1ADMAYwBhADIAAAA0
AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAOAAIAAEA
QQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAKQ9AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_b790d120a8a8480dbb2e6fa7b2153ca2</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">User::DCInputFile</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="1">
                    <arrayElement
                      dataType="System.String">&lt;SOAP-ENV:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"&gt;
&lt;SOAP-ENV:Body&gt;
&lt;a1:ScriptBreakpointInfo id="ref-1" xmlns:a1="http://schemas.microsoft.com/clr/nsassem/Microsoft.SqlServer.VSTAHosting/Microsoft.SqlServer.VSTAScriptingLib%2C%20Version%3D11.0.0.0%2C%20Culture%3Dneutral%2C%20PublicKeyToken%3D89845dcd8080cc91"&gt;
&lt;Enabled&gt;true&lt;/Enabled&gt;
&lt;File id="ref-3"&gt;main.cs&lt;/File&gt;
&lt;FileLine&gt;42&lt;/FileLine&gt;
&lt;FileColumn&gt;9&lt;/FileColumn&gt;
&lt;/a1:ScriptBreakpointInfo&gt;
&lt;/SOAP-ENV:Body&gt;
&lt;/SOAP-ENV:Envelope&gt;
</arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">B6</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataShaChecksum"
                  typeConverter="NOTBROWSABLE">c4ea84fa195a7f6aabe04e18a0e9ebdffb6a0cae</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">a8a6fcd825f80c1f742fd361da640bbd</property>
              </properties>
              <connections>
                <connection
                  refId="Package\DCPS Import\Read All Types of CSV.Connections[Connection]"
                  connectionManagerID="Package.ConnectionManagers[MyFlatFileSrcConnectionMgr]"
                  connectionManagerRefId="Package.ConnectionManagers[MyFlatFileSrcConnectionMgr]"
                  name="Connection" />
              </connections>
              <outputs>
                <output
                  refId="Package\DCPS Import\Read All Types of CSV.Outputs[Output 0]"
                  hasSideEffects="true"
                  name="Output 0">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DCPS Import\Read All Types of CSV.Outputs[Output 0].Columns[Identifier]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\DCPS Import\Read All Types of CSV.Outputs[Output 0].Columns[Identifier]"
                      name="Identifier" />
                    <outputColumn
                      refId="Package\DCPS Import\Read All Types of CSV.Outputs[Output 0].Columns[SerialNumber]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\DCPS Import\Read All Types of CSV.Outputs[Output 0].Columns[SerialNumber]"
                      name="SerialNumber" />
                    <outputColumn
                      refId="Package\DCPS Import\Read All Types of CSV.Outputs[Output 0].Columns[ComputerName]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\DCPS Import\Read All Types of CSV.Outputs[Output 0].Columns[ComputerName]"
                      name="ComputerName" />
                    <outputColumn
                      refId="Package\DCPS Import\Read All Types of CSV.Outputs[Output 0].Columns[Username]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\DCPS Import\Read All Types of CSV.Outputs[Output 0].Columns[Username]"
                      name="Username" />
                    <outputColumn
                      refId="Package\DCPS Import\Read All Types of CSV.Outputs[Output 0].Columns[OsName]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\DCPS Import\Read All Types of CSV.Outputs[Output 0].Columns[OsName]"
                      name="OsName" />
                    <outputColumn
                      refId="Package\DCPS Import\Read All Types of CSV.Outputs[Output 0].Columns[PublicIp]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\DCPS Import\Read All Types of CSV.Outputs[Output 0].Columns[PublicIp]"
                      name="PublicIp" />
                    <outputColumn
                      refId="Package\DCPS Import\Read All Types of CSV.Outputs[Output 0].Columns[LocalIp]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\DCPS Import\Read All Types of CSV.Outputs[Output 0].Columns[LocalIp]"
                      name="LocalIp" />
                    <outputColumn
                      refId="Package\DCPS Import\Read All Types of CSV.Outputs[Output 0].Columns[LastConnectedUtc]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\DCPS Import\Read All Types of CSV.Outputs[Output 0].Columns[LastConnectedUtc]"
                      name="LastConnectedUtc" />
                    <outputColumn
                      refId="Package\DCPS Import\Read All Types of CSV.Outputs[Output 0].Columns[AtRisk]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\DCPS Import\Read All Types of CSV.Outputs[Output 0].Columns[AtRisk]"
                      name="AtRisk" />
                    <outputColumn
                      refId="Package\DCPS Import\Read All Types of CSV.Outputs[Output 0].Columns[InsideGeofence]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\DCPS Import\Read All Types of CSV.Outputs[Output 0].Columns[InsideGeofence]"
                      name="InsideGeofence" />
                    <outputColumn
                      refId="Package\DCPS Import\Read All Types of CSV.Outputs[Output 0].Columns[InvestigationNo]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\DCPS Import\Read All Types of CSV.Outputs[Output 0].Columns[InvestigationNo]"
                      name="InvestigationNo" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DCPS Import\SQL Server Destination"
              componentClassID="Microsoft.SQLServerDestination"
              contactInfo="SQL Server Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;5"
              description="SQL Server Destination"
              name="SQL Server Destination"
              version="5">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.String"
                  description="The name of the database object to copy data into."
                  expressionType="Notify"
                  name="BulkInsertTableName">[dbo].[_ETL_MDM_Staging]</property>
                <property
                  dataType="System.Boolean"
                  description="Specifies that any constraints on the destination object are checked during the data copy operation. Corresponds to the bulk insert CHECK_CONSTRAINTS option."
                  name="BulkInsertCheckConstraints">true</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the number of the first row to copy. Corresponds to the bulk insert FIRSTROW option."
                  expressionType="Notify"
                  name="BulkInsertFirstRow">-1</property>
                <property
                  dataType="System.Boolean"
                  description="Specifies that any insert triggers defined on the destination object will execute during the data copy. Corresponds to the bulk insert FIRE_TRIGGERS option."
                  name="BulkInsertFireTriggers">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Corresponds to the bulk insert KEEPIDENTITY option."
                  name="BulkInsertKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null copied to the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="BulkInsertKeepNulls">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the number of the last row to copy. Corresponds to the bulk insert LASTROW option."
                  expressionType="Notify"
                  name="BulkInsertLastRow">-1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of syntax errors and compilation errors that can occur before the data copy operation is canceled. Each row that cannot be copied is ignored and counted as one error. Corresponds to the bulk insert MAXERRORS option."
                  name="BulkInsertMaxErrors">-1</property>
                <property
                  dataType="System.String"
                  description="Specifies how the data to be copied is sorted. Corresponds to the bulk insert ORDER option."
                  expressionType="Notify"
                  name="BulkInsertOrder"></property>
                <property
                  dataType="System.Boolean"
                  description="Specifies that a table-level lock is acquired for the duration of the data copy operation. Corresponds to the bulk insert TABLOCK option."
                  name="BulkInsertTablock">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies in seconds the amount of time the SQL Destination adapter will wait before terminating if there is no data available for insertion.  A timeout value of 0 means the SQL Destination adapter will not time out."
                  expressionType="Notify"
                  name="Timeout">30</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion."
                  name="MaxInsertCommitSize">0</property>
              </properties>
              <connections>
                <connection
                  refId="Package\DCPS Import\SQL Server Destination.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[TIPWeb]"
                  connectionManagerRefId="Package.ConnectionManagers[TIPWeb]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\DCPS Import\SQL Server Destination.Inputs[SQL Server Destination Input]"
                  hasSideEffects="true"
                  name="SQL Server Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\DCPS Import\SQL Server Destination.Inputs[SQL Server Destination Input].Columns[Identifier]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Identifier"
                      externalMetadataColumnId="Package\DCPS Import\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[Identifier]"
                      lineageId="Package\DCPS Import\Read All Types of CSV.Outputs[Output 0].Columns[Identifier]" />
                    <inputColumn
                      refId="Package\DCPS Import\SQL Server Destination.Inputs[SQL Server Destination Input].Columns[SerialNumber]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="SerialNumber"
                      externalMetadataColumnId="Package\DCPS Import\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[SerialNumber]"
                      lineageId="Package\DCPS Import\Read All Types of CSV.Outputs[Output 0].Columns[SerialNumber]" />
                    <inputColumn
                      refId="Package\DCPS Import\SQL Server Destination.Inputs[SQL Server Destination Input].Columns[ComputerName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="ComputerName"
                      externalMetadataColumnId="Package\DCPS Import\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[ComputerName]"
                      lineageId="Package\DCPS Import\Read All Types of CSV.Outputs[Output 0].Columns[ComputerName]" />
                    <inputColumn
                      refId="Package\DCPS Import\SQL Server Destination.Inputs[SQL Server Destination Input].Columns[Username]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Username"
                      externalMetadataColumnId="Package\DCPS Import\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[Username]"
                      lineageId="Package\DCPS Import\Read All Types of CSV.Outputs[Output 0].Columns[Username]" />
                    <inputColumn
                      refId="Package\DCPS Import\SQL Server Destination.Inputs[SQL Server Destination Input].Columns[OsName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="OsName"
                      externalMetadataColumnId="Package\DCPS Import\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[OsName]"
                      lineageId="Package\DCPS Import\Read All Types of CSV.Outputs[Output 0].Columns[OsName]" />
                    <inputColumn
                      refId="Package\DCPS Import\SQL Server Destination.Inputs[SQL Server Destination Input].Columns[PublicIp]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="PublicIp"
                      externalMetadataColumnId="Package\DCPS Import\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[PublicIp]"
                      lineageId="Package\DCPS Import\Read All Types of CSV.Outputs[Output 0].Columns[PublicIp]" />
                    <inputColumn
                      refId="Package\DCPS Import\SQL Server Destination.Inputs[SQL Server Destination Input].Columns[LocalIp]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="LocalIp"
                      externalMetadataColumnId="Package\DCPS Import\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[LocalIp]"
                      lineageId="Package\DCPS Import\Read All Types of CSV.Outputs[Output 0].Columns[LocalIp]" />
                    <inputColumn
                      refId="Package\DCPS Import\SQL Server Destination.Inputs[SQL Server Destination Input].Columns[LastConnectedUtc]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="LastConnectedUtc"
                      externalMetadataColumnId="Package\DCPS Import\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[LastConnectedUtc]"
                      lineageId="Package\DCPS Import\Read All Types of CSV.Outputs[Output 0].Columns[LastConnectedUtc]" />
                    <inputColumn
                      refId="Package\DCPS Import\SQL Server Destination.Inputs[SQL Server Destination Input].Columns[AtRisk]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="AtRisk"
                      externalMetadataColumnId="Package\DCPS Import\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[AtRisk]"
                      lineageId="Package\DCPS Import\Read All Types of CSV.Outputs[Output 0].Columns[AtRisk]" />
                    <inputColumn
                      refId="Package\DCPS Import\SQL Server Destination.Inputs[SQL Server Destination Input].Columns[InsideGeofence]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="InsideGeofence"
                      externalMetadataColumnId="Package\DCPS Import\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[InsideGeofence]"
                      lineageId="Package\DCPS Import\Read All Types of CSV.Outputs[Output 0].Columns[InsideGeofence]" />
                    <inputColumn
                      refId="Package\DCPS Import\SQL Server Destination.Inputs[SQL Server Destination Input].Columns[InvestigationNo]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="InvestigationNo"
                      externalMetadataColumnId="Package\DCPS Import\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[InvestigationNo]"
                      lineageId="Package\DCPS Import\Read All Types of CSV.Outputs[Output 0].Columns[InvestigationNo]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\DCPS Import\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[RowID]"
                      dataType="i4"
                      name="RowID" />
                    <externalMetadataColumn
                      refId="Package\DCPS Import\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[Identifier]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      name="Identifier" />
                    <externalMetadataColumn
                      refId="Package\DCPS Import\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[SerialNumber]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      name="SerialNumber" />
                    <externalMetadataColumn
                      refId="Package\DCPS Import\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[ComputerName]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      name="ComputerName" />
                    <externalMetadataColumn
                      refId="Package\DCPS Import\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[Username]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      name="Username" />
                    <externalMetadataColumn
                      refId="Package\DCPS Import\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[OsName]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      name="OsName" />
                    <externalMetadataColumn
                      refId="Package\DCPS Import\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[PublicIp]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      name="PublicIp" />
                    <externalMetadataColumn
                      refId="Package\DCPS Import\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[LocalIp]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      name="LocalIp" />
                    <externalMetadataColumn
                      refId="Package\DCPS Import\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[LastConnectedUtc]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      name="LastConnectedUtc" />
                    <externalMetadataColumn
                      refId="Package\DCPS Import\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[AtRisk]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      name="AtRisk" />
                    <externalMetadataColumn
                      refId="Package\DCPS Import\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[InsideGeofence]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      name="InsideGeofence" />
                    <externalMetadataColumn
                      refId="Package\DCPS Import\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[InvestigationNo]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      name="InvestigationNo" />
                  </externalMetadataColumns>
                </input>
              </inputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\DCPS Import.Paths[Derived Column Output]"
              endId="Package\DCPS Import\SQL Server Destination.Inputs[SQL Server Destination Input]"
              name="Derived Column Output"
              startId="Package\DCPS Import\Derived Column.Outputs[Derived Column Output]" />
            <path
              refId="Package\DCPS Import.Paths[Output 0]"
              endId="Package\DCPS Import\Derived Column.Inputs[Derived Column Input]"
              name="Output 0"
              startId="Package\DCPS Import\Read All Types of CSV.Outputs[Output 0]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Staff - Import from CSV"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{2356CDB6-610C-4809-ADA2-08E35FB05506}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Staff - Import from CSV"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Staff - Import from CSV\Derived Column"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Staff - Import from CSV\Derived Column.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Staff - Import from CSV\Derived Column.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Staff - Import from CSV\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Staff - Import from CSV\Derived Column.Outputs[Derived Column Output].Columns[New]"
                      dataType="bool"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Staff - Import from CSV\Derived Column.Outputs[Derived Column Output].Columns[New]"
                      name="New"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_BOOL)1</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_BOOL)1</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staff - Import from CSV\Derived Column.Outputs[Derived Column Output].Columns[Deactivate]"
                      dataType="bool"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Staff - Import from CSV\Derived Column.Outputs[Derived Column Output].Columns[Deactivate]"
                      name="Deactivate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_BOOL)0</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_BOOL)0</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Staff - Import from CSV\Derived Column.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Staff - Import from CSV\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Staff - Import from CSV\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Staff - Import from CSV\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Staff - Import from CSV\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Staff - Import from CSV\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Staff - Import from CSV\Read All Types of CSV"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;11"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Read All Types of CSV"
              version="8">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.IO;
using System.Text.RegularExpressions;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    private StreamReader reader;
    private string exportedAddressFile;

    public override void AcquireConnections(object Transaction)
    {

        

    }

    public override void PreExecute()
    {
        base.PreExecute();
    }

    public override void CreateNewOutputRows()
    {
        reader = new StreamReader(Variables.StaffInputFile);

        reader.ReadLine();

        while (!reader.EndOfStream)
        {
            string line = reader.ReadLine();
            line = line.Replace("\",,\"", "\",\"\",\"");
            string sSeparator = ",";
            string sDelimiter = $@"""{sSeparator}""";

            string[] columns = Regex.Split(line, sDelimiter); //line.Split(new string[] { sDelimiter, StringSplitOptions.None });

            int i = 0;

            Output0Buffer.AddRow();

            Output0Buffer.TeacherID = System.Convert.ToString(columns[i++]).Replace("\"","");
            Output0Buffer.CampusID = System.Convert.ToString(columns[i++]).Replace("\"", "");
            Output0Buffer.FirstName = System.Convert.ToString( columns[i++]).Replace("\"", "");
            Output0Buffer.LastName = System.Convert.ToString(columns[i++]).Replace("\"", "");
            Output0Buffer.MiddleName = System.Convert.ToString(columns[i++]).Replace("\"", "");
            Output0Buffer.Grade = System.Convert.ToString(columns[i++]).Replace("\"", "");
            Output0Buffer.Homeroom = System.Convert.ToString(columns[i++]).Replace("\"", "");
            Output0Buffer.Department = System.Convert.ToString(columns[i++]).Replace("\"", "");
            Output0Buffer.Phone = System.Convert.ToString(columns[i++]).Replace("\"", "");
            Output0Buffer.Email = System.Convert.ToString(columns[i++]).Replace("\"", "");
            Output0Buffer.Address = System.Convert.ToString(columns[i++]).Replace("\"", "");
            Output0Buffer.Address2 = System.Convert.ToString(columns[i++]).Replace("\"", "");
            Output0Buffer.City = System.Convert.ToString(columns[i++]).Replace("\"", "");
            Output0Buffer.State = System.Convert.ToString(columns[i++]).Replace("\"", "");
            Output0Buffer.Zip = System.Convert.ToString(columns[i++]).Replace("\"", "");
            Output0Buffer.Deactivate = System.Convert.ToString(columns[i++]).Replace("\"", "");

        }
    }

    public override void PostExecute()
    {

        base.PostExecute();
        reader.Close();

    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String TeacherID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool TeacherID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CampusID
    {
        set
        {
            this[1] = value;
        }
    }
    public bool CampusID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String FirstName
    {
        set
        {
            this[2] = value;
        }
    }
    public bool FirstName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String LastName
    {
        set
        {
            this[3] = value;
        }
    }
    public bool LastName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String MiddleName
    {
        set
        {
            this[4] = value;
        }
    }
    public bool MiddleName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Grade
    {
        set
        {
            this[5] = value;
        }
    }
    public bool Grade_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Homeroom
    {
        set
        {
            this[6] = value;
        }
    }
    public bool Homeroom_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Phone
    {
        set
        {
            this[7] = value;
        }
    }
    public bool Phone_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Department
    {
        set
        {
            this[8] = value;
        }
    }
    public bool Department_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Email
    {
        set
        {
            this[9] = value;
        }
    }
    public bool Email_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Address
    {
        set
        {
            this[10] = value;
        }
    }
    public bool Address_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String City
    {
        set
        {
            this[11] = value;
        }
    }
    public bool City_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String State
    {
        set
        {
            this[12] = value;
        }
    }
    public bool State_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Zip
    {
        set
        {
            this[13] = value;
        }
    }
    public bool Zip_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(13);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Deactivate
    {
        set
        {
            this[14] = value;
        }
    }
    public bool Deactivate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(14);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Address2
    {
        set
        {
            this[15] = value;
        }
    }
    public bool Address2_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(15);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 Connection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"Connection").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String StaffInputFile
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["StaffInputFile"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_b790d120a8a8480dbb2e6fa7b2153ca2")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_b790d120a8a8480dbb2e6fa7b2153ca2")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_b790d120a8a8480dbb2e6fa7b2153ca2</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_b790d120a8a8480dbb2e6fa7b2153ca2</msb:DisplayName>
		<msb:ProjectId>{CFF6BB85-C71D-4FBB-ADE0-5FC9E8BB3659}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_b790d120a8a8480dbb2e6fa7b2153ca2.csproj"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:Breakpoint Include="68350b9e27644be5ae1f483797d2e7f5">
			<msb:FileName>main.cs</msb:FileName>
			<msb:LineNumber>42</msb:LineNumber>
			<msb:ColumnNumber>9</msb:ColumnNumber>
			<msb:Enabled>True</msb:Enabled>
			<msb:ConditionType>1</msb:ConditionType>
			<msb:Condition></msb:Condition>
			<msb:Language>C#</msb:Language>
			<msb:HitCountType>1</msb:HitCountType>
			<msb:HitCountTarget>1</msb:HitCountTarget>
		</msb:Breakpoint>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_b790d120a8a8480dbb2e6fa7b2153ca2.Properties.Settings.get_Default():SC_b790d120a8a8480dbb2e6fa7b2153ca2.Properties.Sett" +
    "ings")]

namespace SC_b790d120a8a8480dbb2e6fa7b2153ca2.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_b790d120a8a8480dbb2e6fa7b2153ca2.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{88F76BAF-D93F-4AA2-9900-3840D719B72B}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_b790d120a8a8480dbb2e6fa7b2153ca2</RootNamespace>
    <AssemblyName>SC_b790d120a8a8480dbb2e6fa7b2153ca2</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_b790d120a8a8480dbb2e6fa7b2153ca2.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_b790d120a8a8480dbb2e6fa7b2153ca2.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_b790d120a8a8480dbb2e6fa7b2153ca2.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_b790d120a8a8480dbb2e6fa7b2153ca2.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_b790d120a8a8480dbb2e6fa7b2153ca2.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_b790d120a8a8480dbb2e6fa7b2153ca2.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAC/wXWAAAAAAAAAAAOAAIiALATAAACIAAAAIAAAAAAAA0kAA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAIBAAABPAAAAAGAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA2CAAAAAgAAAAIgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAYAAAAAYAAAAkAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAKgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAC0
QAAAAAAAAEgAAAACAAUA+CYAANAYAAABAAAAAAAAAMg/AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYqHgIoEAAACioAABMwBQDdAgAAAQAAEQICewQAAARvMgAA
BnMRAAAKfQEAAAQCewEAAARvEgAACiY4pQIAAAJ7AQAABG8SAAAKcgEAAHByCwAAcG8TAAAKchkA
AHAKch0AAHAGch0AAHAoFAAACgsHKBUAAAoMFg0CewUAAARvJwAABgJ7BQAABAgJJRdYDZooFgAA
CnIdAABwciEAAHBvEwAACm8HAAAGAnsFAAAECAklF1gNmigWAAAKch0AAHByIQAAcG8TAAAKbwkA
AAYCewUAAAQICSUXWA2aKBYAAApyHQAAcHIhAABwbxMAAApvCwAABgJ7BQAABAgJJRdYDZooFgAA
CnIdAABwciEAAHBvEwAACm8NAAAGAnsFAAAECAklF1gNmigWAAAKch0AAHByIQAAcG8TAAAKbw8A
AAYCewUAAAQICSUXWA2aKBYAAApyHQAAcHIhAABwbxMAAApvEQAABgJ7BQAABAgJJRdYDZooFgAA
CnIdAABwciEAAHBvEwAACm8TAAAGAnsFAAAECAklF1gNmigWAAAKch0AAHByIQAAcG8TAAAKbxcA
AAYCewUAAAQICSUXWA2aKBYAAApyHQAAcHIhAABwbxMAAApvFQAABgJ7BQAABAgJJRdYDZooFgAA
CnIdAABwciEAAHBvEwAACm8ZAAAGAnsFAAAECAklF1gNmigWAAAKch0AAHByIQAAcG8TAAAKbxsA
AAYCewUAAAQICSUXWA2aKBYAAApyHQAAcHIhAABwbxMAAApvJQAABgJ7BQAABAgJJRdYDZooFgAA
CnIdAABwciEAAHBvEwAACm8dAAAGAnsFAAAECAklF1gNmigWAAAKch0AAHByIQAAcG8TAAAKbx8A
AAYCewUAAAQICSUXWA2aKBYAAApyHQAAcHIhAABwbxMAAApvIQAABgJ7BQAABAgJJRdYDZooFgAA
CnIdAABwciEAAHBvEwAACm8jAAAGAnsBAAAEbxcAAAo5S/3//ypKAigYAAAKAnsBAAAEbxkAAAoq
HgIoKgAABioqAgMEBSgaAAAKKiYCFgMoGwAACipaAywIAhYoHAAACipyIwAAcHMdAAAKeiYCFwMo
GwAACipaAywIAhcoHAAACipyIwAAcHMdAAAKeiYCGAMoGwAACipaAywIAhgoHAAACipyIwAAcHMd
AAAKeiYCGQMoGwAACipaAywIAhkoHAAACipyIwAAcHMdAAAKeiYCGgMoGwAACipaAywIAhooHAAA
CipyIwAAcHMdAAAKeiYCGwMoGwAACipaAywIAhsoHAAACipyIwAAcHMdAAAKeiYCHAMoGwAACipa
AywIAhwoHAAACipyIwAAcHMdAAAKeiYCHQMoGwAACipaAywIAh0oHAAACipyIwAAcHMdAAAKeiYC
HgMoGwAACipaAywIAh4oHAAACipyIwAAcHMdAAAKeioCHwkDKBsAAAoqXgMsCQIfCSgcAAAKKnIj
AABwcx0AAAp6KgIfCgMoGwAACipeAywJAh8KKBwAAAoqciMAAHBzHQAACnoqAh8LAygbAAAKKl4D
LAkCHwsoHAAACipyIwAAcHMdAAAKeioCHwwDKBsAAAoqXgMsCQIfDCgcAAAKKnIjAABwcx0AAAp6
KgIfDQMoGwAACipeAywJAh8NKBwAAAoqciMAAHBzHQAACnoqAh8OAygbAAAKKl4DLAkCHw4oHAAA
CipyIwAAcHMdAAAKeioCHw8DKBsAAAoqXgMsCQIfDygcAAAKKnIjAABwcx0AAAp6HgIoHgAACioe
AigfAAAKKh4CKCAAAAoqfgIoIQAACgICcy8AAAZ9AwAABAICczEAAAZ9BAAABCpuAnsFAAAELBIC
ewUAAARvKAAABgIUfQUAAAQqAAAAEzAFAEkAAAACAAARFgorLgQGlA4EcsAAAHAoIgAACjMZAgUG
mgIEBpQoIwAACg4EcwYAAAZ9BQAABAYXWAoGAzLOAm8uAAAGAm8rAAAGAigsAAAGKjoCKCQAAAoC
A30GAAAEKoICewYAAARvJQAACm8mAAAKctIAAHBvJwAACm8oAAAKKjoCKCQAAAoCA30HAAAEKpYC
ewcAAARvKQAACnLoAABwbyoAAAooKwAACm8sAAAKdB0AAAEqHgIoJAAACiqufggAAAQtHnIGAQBw
0AcAAAIoLQAACm8uAAAKcy8AAAqACAAABH4IAAAEKhp+CQAABCoeAoAJAAAEKhp+CgAABCoeAigw
AAAKKi5zOAAABoAKAAAEKkJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAABwKAAAj
fgAAiAoAAMgKAAAjU3RyaW5ncwAAAABQFQAAeAEAACNVUwDIFgAAEAAAACNHVUlEAAAA2BYAAPgB
AAAjQmxvYgAAAAAAAAACAAABVxWiAQkBAAAA+gEzABYAAAEAAAAqAAAACAAAAAoAAAA5AAAAKwAA
ADAAAAAQAAAAAgAAAAUAAAAlAAAAJgAAAAEAAAAGAAAAAQAAAAAAowQBAAAAAAAGAJEDRAgGACUE
RAgGAN0CMQgPALgIAAAGAAoDiAYGAHQDiAYGAFUDiAYGAAwEiAYGALEDiAYGAMoDiAYGACEDiAYG
ADwDYAQKAOUDAQIGAFYHCQEGAKkJJwYKAJIHAQIOAIMHAQIKAO8GAQIKAP4JAQISAGYAyQcGAMAC
MQgGAKMHZAgGAOMGZwYWAIECgwQWAPECgwQWAFkCUgYGAKUCRAgGAGMHCQEGAHwEJwYWAKsKOgkG
ACsKJwYGAMkGJwYaAAEA8QcaACoA8QcaAE0A8QcSAH8AyQcSABoAyQdPAHQKAAASAJAAyQcGACwC
JwYGAGgBJwYGALUKiAYAAAAA2QAAAAAAAQABAAEAEABHBgAAEAABAAEAAQAQAHUHAABBAAMABgAB
ABAA4AkAAE0AAwAqAAEAEABgCQAAPQAGAC8AAQAQAAIJAAA9AAcAMQAAABAAawjHCD0ACAAzAAAB
EAAxCccIaQAKADcAAQBuB8AAAQCMAcQABgBgCccABgACCcsABgB1B88AAQDuCdMAAQDuCdMAEQA7
BtcAEQBJAtsAEQBOAd8AUCAAAAAAxgBZCeMAAQBSIAAAAADGAEMEBgACAFwgAAAAAMYAjgkGAAIA
RSMAAAAAxgBOBAYAAgBYIwAAAACGGBoIBgACAGAjAAAAAIYYGghEAAIAayMAAAAAhgjiABAABQB1
IwAAAACGCN8E6AAGAIwjAAAAAIYI8AAQAAcAliMAAAAAhgj0BOgACACtIwAAAACGCM8BEAAJALcj
AAAAAIYIQwXoAAoAziMAAAAAhgjCARAACwDYIwAAAACGCC8F6AAMAO8jAAAAAIYIswEQAA0A+SMA
AAAAhggZBegADgAQJAAAAACGCF4BEAAPABokAAAAAIYICAXoABAAMSQAAAAAhgguBhAAEQA7JAAA
AACGCKEF6AASAFIkAAAAAIYIIgIQABMAXCQAAAAAhghYBegAFABzJAAAAACGCNEJEAAVAH0kAAAA
AIYI1wXoABYAlCQAAAAAhgiZBBAAFwCfJAAAAACGCJAF6AAYALckAAAAAIYIdAkQABkAwiQAAAAA
hgjEBegAGgDaJAAAAACGCL4KEAAbAOUkAAAAAIYI7QXoABwA/SQAAAAAhgh3AhAAHQAIJQAAAACG
CGkF6AAeACAlAAAAAIYITgcQAB8AKyUAAAAAhgi1BegAIABDJQAAAACGCJYCEAAhAE4lAAAAAIYI
egXoACIAZiUAAAAAhgjMABAAIwBxJQAAAACGCMsE6AAkAIklAAAAAIYApAoGACUAkSUAAAAAhgCw
CQYAJQCZJQAAAACGALMJQAAlAKElAAAAAIYYGggGACUAUCAAAAAAxgGACQYAJQDBJQAAAACBADIB
BgAlAOAlAAAAAMYAVArtACUAUCAAAAAAxgGOCQYAKQA1JgAAAACGGBoI+QApAEQmAAAAAIYIugZ4
ACoAZSYAAAAAhhgaCPkAKgB0JgAAAACGCKABIwArAJomAAAAAIMYGggGACsAoiYAAAAAkwifB/8A
KwDOJgAAAACTCDECBAErANUmAAAAAJMIPQIJASsA3SYAAAAAlgjFCQ8BLADkJgAAAACGGBoIBgAs
AOwmAAAAAJEYIAgUASwAAAABAHwGAAABAJgHAAACAAwJAAADAP0GAAABAFoEAAABAFoEAAABAFoE
AAABAFoEAAABAFoEAAABAFoEAAABAFoEAAABAFoEAAABAFoEAAABAFoEAAABAFoEAAABAFoEAAAB
AFoEAAABAFoEAAABAFoEAAABAFoEAAABAFoEAAABAFoEAAABAFoEAAABAFoEAAABAFoEAAABAFoE
AAABAFoEAAABAFoEAAABAFoEAAABAFoEAAABAFoEAAABAFoEAAABAFoEAAABAFoEAAABAFoEAAAB
AFoEAAABAIYJAAACACcIAAADAGwJAAAEAP0GAAABAAQKAAABAAQKAAABAFoECQAaCAEAEQAaCAYA
GQAaCAoAKQAaCBAAMQAaCBAAOQAaCBAAQQAaCBAASQAaCBAAUQAaCBAAWQAaCBAAYQAaCBAAaQAa
CAYAqQAaCAYAyQAaCBUA2QAaCAYAmQBDBAYAcQAaCBAA4QD4ASMA6QBGAScA6QCiCS0A8QC/CTQA
+QB6BDsAcQAFBkAAmQBOBAYA4QBxAgYAgQAaCEQAgQAeBk4AgQD9BQEAAQEaCBAAgQCkCgYAgQCw
CQYAgQCzCUAAmQAaCAYAmQD9AFgAmQAgCV8AeQAaCAYAmQATAWUACQGaBmsAEQHdAXEAGQGzB3gA
mQD2CH0AIQEVBoMAmQCPCooAKQFgCpAAQQF6AZcAQQGxCqAAsQAaCKYA0QAaCAYALgALADQBLgAT
AD0BLgAbAFwBLgAjAGUBLgArAI4BLgAzAI4BLgA7AI4BLgBDAGUBLgBLAJQBLgBTAI4BLgBbAKsB
QwBjAPMB4wBrAPMBQQF7APMBaQRzAFwBiQRzAFwBGwBUAAMAAQAFACEABgAiAAcAIwAIACUAAADm
ABgBAADjBBwBAAD0ABgBAAD4BBwBAADTARgBAABHBRwBAADGARgBAAAzBRwBAAC3ARgBAAAdBRwB
AABiARgBAAAMBRwBAAAyBhgBAAClBRwBAAAmAhgBAABcBRwBAADVCRgBAADbBRwBAACdBBgBAACU
BRwBAAB4CRgBAADIBRwBAADCChgBAADxBRwBAACQAhgBAABtBRwBAABSBxgBAAC5BRwBAACaAhgB
AAB+BRwBAADQABgBAADPBBwBAAC+BiABAACkARgBAACjByUBAABRAioBAADJCS8BAQAHAAMAAQAI
AAUAAQAJAAcAAQAKAAkAAQALAAsAAQAMAA0AAQANAA8AAQAOABEAAQAPABMAAQAQABUAAQARABcA
AQASABkAAQATABsAAQAUAB0AAQAVAB8AAQAWACEAAQAXACMAAQAYACUAAQAZACcAAQAaACkAAQAb
ACsAAQAcAC0AAQAdAC8AAQAeADEAAQAfADMAAQAgADUAAQAhADcAAQAiADkAAQAjADsAAQAkAD0A
AQAlAD8AAQAmAEEAAgAwAEMAAgAyAEUAAgA0AEcAAgA1AEkAAQA2AEkAAgA3AEsABIAAAAEAAAAA
AAAAAAAAAAAAqAAAAAQAAAAAAAAAAAAAAK4AKQEAAAAACwAAAAAAAAAAAAAAtwAOCgAAAAALAAAA
AAAAAAAAAAC3ADMKAAAAAAsAAAAAAAAAAAAAALcABwcAAAAABAAAAAAAAAAAAAAArgAnBgAAAAAL
AAAAAAAAAAAAAAC3ACoHAAAAAAAAAAABAAAAdQgAAAAAAElEVFNDb21wb25lbnRNZXRhRGF0YTEw
MABJRFRTVmFyaWFibGUxMDAASURUU1J1bnRpbWVDb25uZWN0aW9uQ29sbGVjdGlvbjEwMABJRFRT
UnVudGltZUNvbm5lY3Rpb24xMDAASURUU0Nvbm5lY3Rpb25NYW5hZ2VyMTAwAElEVFNWYXJpYWJs
ZXMxMDAASURUU0V2YWx1YXRvckNvbnRleHQxMDAAU0NfYjc5MGQxMjBhOGE4NDgwZGJiMmU2ZmE3
YjIxNTNjYTIAc2V0X0FkZHJlc3MyADxNb2R1bGU+AHNldF9UZWFjaGVySUQAc2V0X0NhbXB1c0lE
AEdldE91dHB1dElEAFN5c3RlbS5JTwBnZXRfQ29tcG9uZW50TWV0YURhdGEAbXNjb3JsaWIATWFy
a091dHB1dHNGaW5pc2hlZABSZXBsYWNlAGRlZmF1bHRJbnN0YW5jZQBzZXRfR3JhZGUAUnVudGlt
ZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAZXhwb3J0ZWRBZGRyZXNzRmlsZQBnZXRfU3Rh
ZmZJbnB1dEZpbGUAc2V0X01pZGRsZU5hbWUAc2V0X0xhc3ROYW1lAHNldF9GaXJzdE5hbWUAR2V0
UnVudGltZUNvbm5lY3Rpb25CeU5hbWUAUmVhZExpbmUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMu
UGlwZWxpbmUAc2V0X1Bob25lAFR5cGUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VD
dWx0dXJlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAENsb3NlAHNldF9TdGF0ZQBFZGl0b3JCcm93
c2FibGVTdGF0ZQBzZXRfRGVhY3RpdmF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1
Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3Nh
YmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRy
aWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJp
YnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNB
dHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmli
dXRlAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFu
eUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBQcmVFeGVjdXRlAFBvc3RF
eGVjdXRlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVG9TdHJpbmcAU3lzdGVtLkNv
bXBvbmVudE1vZGVsAHNldF9FbWFpbABTQ19iNzkwZDEyMGE4YTg0ODBkYmIyZTZmYTdiMjE1M2Nh
Mi5kbGwAc2V0X0FkZHJlc3MyX0lzTnVsbABzZXRfVGVhY2hlcklEX0lzTnVsbABzZXRfQ2FtcHVz
SURfSXNOdWxsAHNldF9HcmFkZV9Jc051bGwAc2V0X01pZGRsZU5hbWVfSXNOdWxsAHNldF9MYXN0
TmFtZV9Jc051bGwAc2V0X0ZpcnN0TmFtZV9Jc051bGwAc2V0X1Bob25lX0lzTnVsbABzZXRfU3Rh
dGVfSXNOdWxsAHNldF9EZWFjdGl2YXRlX0lzTnVsbABzZXRfRW1haWxfSXNOdWxsAHNldF9Ib21l
cm9vbV9Jc051bGwAc2V0X1ppcF9Jc051bGwAc2V0X0FkZHJlc3NfSXNOdWxsAHNldF9EZXBhcnRt
ZW50X0lzTnVsbABzZXRfQ2l0eV9Jc051bGwAU2V0TnVsbABnZXRfRW5kT2ZTdHJlYW0AZ2V0X0l0
ZW0Ac2V0X0l0ZW0AU3lzdGVtAHNldF9Ib21lcm9vbQByZXNvdXJjZU1hbgBTY3JpcHRNYWluAFN5
c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFRyYW5zYWN0aW9uAFN5c3Rl
bS5SZWZsZWN0aW9uAGdldF9SdW50aW1lQ29ubmVjdGlvbkNvbGxlY3Rpb24AZ2V0X0Nvbm5lY3Rp
b24ASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBDdWx0dXJlSW5mbwBPdXRwdXROYW1lTWFwAE91
dHB1dE1hcABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1J1bnRpbWVXcmFwAE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuRFRTUGlwZWxpbmVXcmFwAHNldF9aaXAAU3RyZWFtUmVhZGVyAFRleHRSZWFkZXIAcmVh
ZGVyAE91dHB1dDBCdWZmZXIAUGlwZWxpbmVCdWZmZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJj
ZU1hbmFnZXIAZ2V0X0Nvbm5lY3Rpb25NYW5hZ2VyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1
bnRpbWUuV3JhcHBlcgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZS5XcmFwcGVyAC5j
dG9yAC5jY3RvcgBPdXRwdXRJRHMAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNv
bXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTQ19iNzkwZDEyMGE4YTg0ODBkYmIyZTZm
YTdiMjE1M2NhMi5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMA
U0NfYjc5MGQxMjBhOGE4NDgwZGJiMmU2ZmE3YjIxNTNjYTIuUHJvcGVydGllcwBnZXRfUmVhZE9u
bHlWYXJpYWJsZXMAQnVmZmVyQ29sdW1uSW5kZXhlcwBHZXRDb2x1bW5JbmRleGVzAFNldHRpbmdz
AFN5c3RlbS5UZXh0LlJlZ3VsYXJFeHByZXNzaW9ucwBBY3F1aXJlQ29ubmVjdGlvbnMAQnVmZmVy
cwBzZXRfQWRkcmVzcwBGaW5pc2hPdXRwdXRzAENyZWF0ZU5ld091dHB1dFJvd3MAQ29uY2F0AE9i
amVjdABTZXRFbmRPZlJvd3NldABTcGxpdABnZXRfRGVmYXVsdABzZXRfRGVwYXJ0bWVudABVc2Vy
Q29tcG9uZW50AFBhcmVudENvbXBvbmVudABTY3JpcHRDb21wb25lbnQATWljcm9zb2Z0LlNxbFNl
cnZlci5UeFNjcmlwdABDb252ZXJ0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AFBy
aW1lT3V0cHV0AEdldFZhbHVlV2l0aENvbnRleHQAU2NyaXB0Q29tcG9uZW50RXZhbENvbnRleHQA
Z2V0X0V2YWx1YXRvckNvbnRleHQAQWRkUm93AFJlZ2V4AGdldF9Bc3NlbWJseQBzZXRfQ2l0eQAA
AAkiACwALAAiAAANIgAsACIAIgAsACIAAAMsAAADIgAAAQCAm0kAcwBOAHUAbABsACAAcAByAG8A
cABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAu
ACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0A
bgAgAGkAbgBzAHQAZQBhAGQALgAAEU8AdQB0AHAAdQB0ACAAMAAAFUMAbwBuAG4AZQBjAHQAaQBv
AG4AAB1TAHQAYQBmAGYASQBuAHAAdQB0AEYAaQBsAGUAAHFTAEMAXwBiADcAOQAwAGQAMQAyADAA
YQA4AGEAOAA0ADgAMABkAGIAYgAyAGUANgBmAGEANwBiADIAMQA1ADMAYwBhADIALgBQAHIAbwBw
AGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAI5IcyrEg9pOslpb80+8Od8ABCABAQgD
IAABBSABARERBCABAQ4FIAEBEWEHBwQODh0OCAMgAA4FIAIODg4GAAMODg4OBgACHQ4ODgQAAQ4O
AyAAAgkgAwESRR0IEkkFIAIBCBwDBwEIBgACCBJJDgUgAR0ICAUgABKAhQUgABKAiQYgARKAjQ4E
IAASUQUgABKAkQYgARKAlRwFAAASgJkGIAEcEoCdCAABEoChEYClBSAAEoCpByACAQ4SgKkIt3pc
Vhk04IkIiYRdzYCAzJEDBhI5AgYOAwYSFAMGEhgDBhIMAwYSTQMGElkDBhJdAwYSIAQgAQEcBCAB
AQILIAQBCB0IHRJFEkkFIAEBEk0EAAASWQQAABJdBQABARJdBAAAEiADAAABAygADgMoAAIEKAAS
UQQIABJZBAgAEl0ECAASIAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEI
AQACAAAAAAAoAQAjU0NfYjc5MGQxMjBhOGE4NDgwZGJiMmU2ZmE3YjIxNTNjYTIAAAUBAAAAABYB
ABFDb3B5cmlnaHQgQCAgMjAyMQAARwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRG
cmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0BAEAAAC0AAAAzsrvvgEAAACRAAAA
bFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4w
LjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0
ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAqEAA
AAAAAAAAAAAAwkAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAALRAAAAAAAAAAAAAAAAAX0NvckRs
bE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAA
AAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAA
AOwDAAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+
AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBh
AHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAA
sARMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAwADAANABi
ADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEA
bQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAQwBf
AGIANwA5ADAAZAAxADIAMABhADgAYQA4ADQAOAAwAGQAYgBiADIAZQA2AGYAYQA3AGIAMgAxADUA
MwBjAGEAMgAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAA
AHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AYgA3ADkAMABkADEAMgAwAGEA
OABhADgANAA4ADAAZABiAGIAMgBlADYAZgBhADcAYgAyADEANQAzAGMAYQAyAC4AZABsAGwAAABI
ABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAA
IAAgADIAMAAyADEAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAA
AHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwBiADcAOQAwAGQA
MQAyADAAYQA4AGEAOAA0ADgAMABkAGIAYgAyAGUANgBmAGEANwBiADIAMQA1ADMAYwBhADIALgBk
AGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AYgA3ADkAMABkADEA
MgAwAGEAOABhADgANAA4ADAAZABiAGIAMgBlADYAZgBhADcAYgAyADEANQAzAGMAYQAyAAAANAAI
AAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgACAABAEEA
cwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAADUMAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_b790d120a8a8480dbb2e6fa7b2153ca2</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">User::StaffInputFile</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="1">
                    <arrayElement
                      dataType="System.String">&lt;SOAP-ENV:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"&gt;
&lt;SOAP-ENV:Body&gt;
&lt;a1:ScriptBreakpointInfo id="ref-1" xmlns:a1="http://schemas.microsoft.com/clr/nsassem/Microsoft.SqlServer.VSTAHosting/Microsoft.SqlServer.VSTAScriptingLib%2C%20Version%3D11.0.0.0%2C%20Culture%3Dneutral%2C%20PublicKeyToken%3D89845dcd8080cc91"&gt;
&lt;Enabled&gt;true&lt;/Enabled&gt;
&lt;File id="ref-3"&gt;main.cs&lt;/File&gt;
&lt;FileLine&gt;42&lt;/FileLine&gt;
&lt;FileColumn&gt;9&lt;/FileColumn&gt;
&lt;/a1:ScriptBreakpointInfo&gt;
&lt;/SOAP-ENV:Body&gt;
&lt;/SOAP-ENV:Envelope&gt;
</arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">86</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataShaChecksum"
                  typeConverter="NOTBROWSABLE">5f57e1aa7d539b29380277f9b8454c014fb697c3</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">b5e4f7136e101a22ec7af614cee4e064</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Staff - Import from CSV\Read All Types of CSV.Connections[Connection]"
                  connectionManagerID="Package.ConnectionManagers[MyFlatFileSrcConnectionMgr]"
                  connectionManagerRefId="Package.ConnectionManagers[MyFlatFileSrcConnectionMgr]"
                  name="Connection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Staff - Import from CSV\Read All Types of CSV.Outputs[Output 0]"
                  hasSideEffects="true"
                  name="Output 0">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Staff - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[TeacherID]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Staff - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[TeacherID]"
                      name="TeacherID" />
                    <outputColumn
                      refId="Package\Staff - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[CampusID]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Staff - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[CampusID]"
                      name="CampusID" />
                    <outputColumn
                      refId="Package\Staff - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[FirstName]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Staff - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[FirstName]"
                      name="FirstName" />
                    <outputColumn
                      refId="Package\Staff - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[LastName]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Staff - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[LastName]"
                      name="LastName" />
                    <outputColumn
                      refId="Package\Staff - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[MiddleName]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Staff - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[MiddleName]"
                      name="MiddleName" />
                    <outputColumn
                      refId="Package\Staff - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[Grade]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Staff - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[Grade]"
                      name="Grade" />
                    <outputColumn
                      refId="Package\Staff - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[Homeroom]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Staff - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[Homeroom]"
                      name="Homeroom" />
                    <outputColumn
                      refId="Package\Staff - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[Phone]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Staff - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[Phone]"
                      name="Phone" />
                    <outputColumn
                      refId="Package\Staff - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[Department]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Staff - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[Department]"
                      name="Department" />
                    <outputColumn
                      refId="Package\Staff - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[Email]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Staff - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[Email]"
                      name="Email" />
                    <outputColumn
                      refId="Package\Staff - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[Address]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Staff - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[Address]"
                      name="Address" />
                    <outputColumn
                      refId="Package\Staff - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[City]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Staff - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[City]"
                      name="City" />
                    <outputColumn
                      refId="Package\Staff - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[State]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Staff - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[State]"
                      name="State" />
                    <outputColumn
                      refId="Package\Staff - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[Zip]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Staff - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[Zip]"
                      name="Zip" />
                    <outputColumn
                      refId="Package\Staff - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[Deactivate]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Staff - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[Deactivate]"
                      name="Deactivate" />
                    <outputColumn
                      refId="Package\Staff - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[Address2]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Staff - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[Address2]"
                      name="Address2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Staff - Import from CSV\SQL Server Destination"
              componentClassID="Microsoft.SQLServerDestination"
              contactInfo="SQL Server Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;5"
              description="SQL Server Destination"
              name="SQL Server Destination"
              version="5">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.String"
                  description="The name of the database object to copy data into."
                  expressionType="Notify"
                  name="BulkInsertTableName">[dbo].[_IMS_Teachers]</property>
                <property
                  dataType="System.Boolean"
                  description="Specifies that any constraints on the destination object are checked during the data copy operation. Corresponds to the bulk insert CHECK_CONSTRAINTS option."
                  name="BulkInsertCheckConstraints">true</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the number of the first row to copy. Corresponds to the bulk insert FIRSTROW option."
                  expressionType="Notify"
                  name="BulkInsertFirstRow">-1</property>
                <property
                  dataType="System.Boolean"
                  description="Specifies that any insert triggers defined on the destination object will execute during the data copy. Corresponds to the bulk insert FIRE_TRIGGERS option."
                  name="BulkInsertFireTriggers">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Corresponds to the bulk insert KEEPIDENTITY option."
                  name="BulkInsertKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null copied to the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="BulkInsertKeepNulls">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the number of the last row to copy. Corresponds to the bulk insert LASTROW option."
                  expressionType="Notify"
                  name="BulkInsertLastRow">-1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of syntax errors and compilation errors that can occur before the data copy operation is canceled. Each row that cannot be copied is ignored and counted as one error. Corresponds to the bulk insert MAXERRORS option."
                  name="BulkInsertMaxErrors">-1</property>
                <property
                  dataType="System.String"
                  description="Specifies how the data to be copied is sorted. Corresponds to the bulk insert ORDER option."
                  expressionType="Notify"
                  name="BulkInsertOrder"></property>
                <property
                  dataType="System.Boolean"
                  description="Specifies that a table-level lock is acquired for the duration of the data copy operation. Corresponds to the bulk insert TABLOCK option."
                  name="BulkInsertTablock">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies in seconds the amount of time the SQL Destination adapter will wait before terminating if there is no data available for insertion.  A timeout value of 0 means the SQL Destination adapter will not time out."
                  expressionType="Notify"
                  name="Timeout">30</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion."
                  name="MaxInsertCommitSize">0</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Staff - Import from CSV\SQL Server Destination.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[TIPWeb]"
                  connectionManagerRefId="Package.ConnectionManagers[TIPWeb]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Staff - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input]"
                  hasSideEffects="true"
                  name="SQL Server Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Staff - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].Columns[New]"
                      cachedDataType="bool"
                      cachedName="New"
                      externalMetadataColumnId="Package\Staff - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[New]"
                      lineageId="Package\Staff - Import from CSV\Derived Column.Outputs[Derived Column Output].Columns[New]" />
                    <inputColumn
                      refId="Package\Staff - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].Columns[Phone]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Phone"
                      externalMetadataColumnId="Package\Staff - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[Phone]"
                      lineageId="Package\Staff - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[Phone]" />
                    <inputColumn
                      refId="Package\Staff - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].Columns[Address]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Address"
                      externalMetadataColumnId="Package\Staff - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[Address]"
                      lineageId="Package\Staff - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[Address]" />
                    <inputColumn
                      refId="Package\Staff - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].Columns[City]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="City"
                      externalMetadataColumnId="Package\Staff - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[City]"
                      lineageId="Package\Staff - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[City]" />
                    <inputColumn
                      refId="Package\Staff - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].Columns[State]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="State"
                      externalMetadataColumnId="Package\Staff - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[State]"
                      lineageId="Package\Staff - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[State]" />
                    <inputColumn
                      refId="Package\Staff - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].Columns[Zip]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Zip"
                      externalMetadataColumnId="Package\Staff - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[Zip]"
                      lineageId="Package\Staff - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[Zip]" />
                    <inputColumn
                      refId="Package\Staff - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].Columns[CampusID]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="CampusID"
                      externalMetadataColumnId="Package\Staff - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[CampusID]"
                      lineageId="Package\Staff - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[CampusID]" />
                    <inputColumn
                      refId="Package\Staff - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].Columns[FirstName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="FirstName"
                      externalMetadataColumnId="Package\Staff - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[FirstName]"
                      lineageId="Package\Staff - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[FirstName]" />
                    <inputColumn
                      refId="Package\Staff - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].Columns[LastName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="LastName"
                      externalMetadataColumnId="Package\Staff - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[LastName]"
                      lineageId="Package\Staff - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[LastName]" />
                    <inputColumn
                      refId="Package\Staff - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].Columns[Homeroom]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Homeroom"
                      externalMetadataColumnId="Package\Staff - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[HomeRoom]"
                      lineageId="Package\Staff - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[Homeroom]" />
                    <inputColumn
                      refId="Package\Staff - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].Columns[TeacherID]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="TeacherID"
                      externalMetadataColumnId="Package\Staff - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[TeacherID]"
                      lineageId="Package\Staff - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[TeacherID]" />
                    <inputColumn
                      refId="Package\Staff - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].Columns[Email]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Email"
                      externalMetadataColumnId="Package\Staff - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[Email]"
                      lineageId="Package\Staff - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[Email]" />
                    <inputColumn
                      refId="Package\Staff - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].Columns[MiddleName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="MiddleName"
                      externalMetadataColumnId="Package\Staff - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[MiddleName]"
                      lineageId="Package\Staff - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[MiddleName]" />
                    <inputColumn
                      refId="Package\Staff - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].Columns[Address2]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Address2"
                      externalMetadataColumnId="Package\Staff - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[Address2]"
                      lineageId="Package\Staff - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[Address2]" />
                    <inputColumn
                      refId="Package\Staff - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].Columns[Department]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Department"
                      externalMetadataColumnId="Package\Staff - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[Department]"
                      lineageId="Package\Staff - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[Department]" />
                    <inputColumn
                      refId="Package\Staff - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].Columns[Grade]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Grade"
                      externalMetadataColumnId="Package\Staff - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[Grade]"
                      lineageId="Package\Staff - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[Grade]" />
                    <inputColumn
                      refId="Package\Staff - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].Columns[Deactivate]"
                      cachedDataType="bool"
                      cachedName="Deactivate"
                      externalMetadataColumnId="Package\Staff - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[Deactivate]"
                      lineageId="Package\Staff - Import from CSV\Derived Column.Outputs[Derived Column Output].Columns[Deactivate]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Staff - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[CampusID]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="CampusID" />
                    <externalMetadataColumn
                      refId="Package\Staff - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[FirstName]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="FirstName" />
                    <externalMetadataColumn
                      refId="Package\Staff - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[LastName]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="LastName" />
                    <externalMetadataColumn
                      refId="Package\Staff - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[MiddleName]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="MiddleName" />
                    <externalMetadataColumn
                      refId="Package\Staff - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[Grade]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Grade" />
                    <externalMetadataColumn
                      refId="Package\Staff - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[HomeRoom]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="HomeRoom" />
                    <externalMetadataColumn
                      refId="Package\Staff - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[Phone]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Phone" />
                    <externalMetadataColumn
                      refId="Package\Staff - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[Email]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      name="Email" />
                    <externalMetadataColumn
                      refId="Package\Staff - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[Address]"
                      codePage="1252"
                      dataType="str"
                      length="500"
                      name="Address" />
                    <externalMetadataColumn
                      refId="Package\Staff - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[Address2]"
                      codePage="1252"
                      dataType="str"
                      length="500"
                      name="Address2" />
                    <externalMetadataColumn
                      refId="Package\Staff - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[City]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="City" />
                    <externalMetadataColumn
                      refId="Package\Staff - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[State]"
                      codePage="1252"
                      dataType="str"
                      length="2"
                      name="State" />
                    <externalMetadataColumn
                      refId="Package\Staff - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[Zip]"
                      codePage="1252"
                      dataType="str"
                      length="10"
                      name="Zip" />
                    <externalMetadataColumn
                      refId="Package\Staff - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[Race]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Race" />
                    <externalMetadataColumn
                      refId="Package\Staff - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[Gender]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Gender" />
                    <externalMetadataColumn
                      refId="Package\Staff - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[Deactivate]"
                      dataType="bool"
                      name="Deactivate" />
                    <externalMetadataColumn
                      refId="Package\Staff - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[Import]"
                      dataType="bool"
                      name="Import" />
                    <externalMetadataColumn
                      refId="Package\Staff - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[New]"
                      dataType="bool"
                      name="New" />
                    <externalMetadataColumn
                      refId="Package\Staff - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[RejectMessage]"
                      codePage="1252"
                      dataType="str"
                      length="1000"
                      name="RejectMessage" />
                    <externalMetadataColumn
                      refId="Package\Staff - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[IMS_TeacherID]"
                      dataType="i4"
                      name="IMS_TeacherID" />
                    <externalMetadataColumn
                      refId="Package\Staff - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[TeacherID]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="TeacherID" />
                    <externalMetadataColumn
                      refId="Package\Staff - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[Department]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      name="Department" />
                    <externalMetadataColumn
                      refId="Package\Staff - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[TeachersUID]"
                      dataType="i4"
                      name="TeachersUID" />
                    <externalMetadataColumn
                      refId="Package\Staff - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[RoomUID]"
                      dataType="i4"
                      name="RoomUID" />
                    <externalMetadataColumn
                      refId="Package\Staff - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[TeacherStatus]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      name="TeacherStatus" />
                    <externalMetadataColumn
                      refId="Package\Staff - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[PrimarySite]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="PrimarySite" />
                  </externalMetadataColumns>
                </input>
              </inputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Staff - Import from CSV.Paths[Derived Column Output]"
              endId="Package\Staff - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input]"
              name="Derived Column Output"
              startId="Package\Staff - Import from CSV\Derived Column.Outputs[Derived Column Output]" />
            <path
              refId="Package\Staff - Import from CSV.Paths[Output 0]"
              endId="Package\Staff - Import from CSV\Derived Column.Inputs[Derived Column Input]"
              name="Output 0"
              startId="Package\Staff - Import from CSV\Read All Types of CSV.Outputs[Output 0]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Students - Import from CSV"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{584C5D6E-A206-4B7A-84F0-C72358F515D7}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Students - Import from CSV"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Students - Import from CSV\Derived Column"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Students - Import from CSV\Derived Column.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Students - Import from CSV\Derived Column.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Students - Import from CSV\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Students - Import from CSV\Derived Column.Outputs[Derived Column Output].Columns[New]"
                      dataType="bool"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Students - Import from CSV\Derived Column.Outputs[Derived Column Output].Columns[New]"
                      name="New"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_BOOL)1</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_BOOL)1</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Students - Import from CSV\Derived Column.Outputs[Derived Column Output].Columns[Deactivate]"
                      dataType="bool"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Students - Import from CSV\Derived Column.Outputs[Derived Column Output].Columns[Deactivate]"
                      name="Deactivate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_BOOL)0</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_BOOL)0</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Students - Import from CSV\Derived Column.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Students - Import from CSV\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Students - Import from CSV\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Students - Import from CSV\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Students - Import from CSV\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Students - Import from CSV\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Students - Import from CSV\Read All Types of CSV"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;11"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Read All Types of CSV"
              version="8">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.IO;
using System.Text.RegularExpressions;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    private StreamReader reader;
    private string exportedAddressFile;

    public override void AcquireConnections(object Transaction)
    {

        

    }

    public override void PreExecute()
    {
        base.PreExecute();
    }

    public override void CreateNewOutputRows()
    {
        reader = new StreamReader(Variables.InputFile);

        reader.ReadLine();

        while (!reader.EndOfStream)
        {
            string line = reader.ReadLine();
            line = line.Replace("\",,\"", "\",\"\",\"");
            string sSeparator = ",";
            string sDelimiter = $@"""{sSeparator}""";

            string[] columns = Regex.Split(line, sDelimiter); //line.Split(new string[] { sDelimiter, StringSplitOptions.None });

            int i = 0;

            Output0Buffer.AddRow();

            Output0Buffer.StudentID = System.Convert.ToString(columns[i++]).Replace("\"","");
            Output0Buffer.CampusID = System.Convert.ToString(columns[i++]).Replace("\"", "");
            Output0Buffer.FirstName = System.Convert.ToString( columns[i++]).Replace("\"", "");
            Output0Buffer.LastName = System.Convert.ToString(columns[i++]).Replace("\"", "");
            Output0Buffer.MiddleName = System.Convert.ToString(columns[i++]).Replace("\"", "");
            Output0Buffer.Grade = System.Convert.ToString(columns[i++]).Replace("\"", "");
            Output0Buffer.Homeroom = System.Convert.ToString(columns[i++]).Replace("\"", "");
            Output0Buffer.Phone = System.Convert.ToString(columns[i++]).Replace("\"", "");
            Output0Buffer.ParentPhone = System.Convert.ToString(columns[i++]).Replace("\"", "");
            Output0Buffer.Email = System.Convert.ToString(columns[i++]).Replace("\"", "");
            Output0Buffer.ParentEmail = System.Convert.ToString(columns[i++]).Replace("\"", "");
            Output0Buffer.Address = System.Convert.ToString(columns[i++]).Replace("\"", "");
            Output0Buffer.Address2 = System.Convert.ToString(columns[i++]).Replace("\"", "");
            Output0Buffer.City = System.Convert.ToString(columns[i++]).Replace("\"", "");
            Output0Buffer.State = System.Convert.ToString(columns[i++]).Replace("\"", "");
            Output0Buffer.Zip = System.Convert.ToString(columns[i++]).Replace("\"", "");
            Output0Buffer.Deactivate = System.Convert.ToString(columns[i++]).Replace("\"", "");

        }
    }

    public override void PostExecute()
    {

        base.PostExecute();
        reader.Close();

    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String LastName
    {
        set
        {
            this[0] = value;
        }
    }
    public bool LastName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String FirstName
    {
        set
        {
            this[1] = value;
        }
    }
    public bool FirstName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CampusID
    {
        set
        {
            this[2] = value;
        }
    }
    public bool CampusID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String StudentID
    {
        set
        {
            this[3] = value;
        }
    }
    public bool StudentID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Grade
    {
        set
        {
            this[4] = value;
        }
    }
    public bool Grade_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Homeroom
    {
        set
        {
            this[5] = value;
        }
    }
    public bool Homeroom_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ParentPhone
    {
        set
        {
            this[6] = value;
        }
    }
    public bool ParentPhone_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Phone
    {
        set
        {
            this[7] = value;
        }
    }
    public bool Phone_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ParentEmail
    {
        set
        {
            this[8] = value;
        }
    }
    public bool ParentEmail_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Email
    {
        set
        {
            this[9] = value;
        }
    }
    public bool Email_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Address2
    {
        set
        {
            this[10] = value;
        }
    }
    public bool Address2_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Address
    {
        set
        {
            this[11] = value;
        }
    }
    public bool Address_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String City
    {
        set
        {
            this[12] = value;
        }
    }
    public bool City_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String State
    {
        set
        {
            this[13] = value;
        }
    }
    public bool State_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(13);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Zip
    {
        set
        {
            this[14] = value;
        }
    }
    public bool Zip_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(14);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Deactivate
    {
        set
        {
            this[15] = value;
        }
    }
    public bool Deactivate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(15);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String MiddleName
    {
        set
        {
            this[16] = value;
        }
    }
    public bool MiddleName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(16);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 Connection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"Connection").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String InputFile
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["InputFile"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_b790d120a8a8480dbb2e6fa7b2153ca2")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_b790d120a8a8480dbb2e6fa7b2153ca2")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_b790d120a8a8480dbb2e6fa7b2153ca2</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_b790d120a8a8480dbb2e6fa7b2153ca2</msb:DisplayName>
		<msb:ProjectId>{353EC9B2-D9DD-4239-9B40-60F5CD6A65EB}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_b790d120a8a8480dbb2e6fa7b2153ca2.csproj"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:Breakpoint Include="68350b9e27644be5ae1f483797d2e7f5">
			<msb:FileName>main.cs</msb:FileName>
			<msb:ColumnNumber>9</msb:ColumnNumber>
			<msb:Enabled>True</msb:Enabled>
			<msb:LineNumber>42</msb:LineNumber>
			<msb:Condition></msb:Condition>
			<msb:ConditionType>1</msb:ConditionType>
			<msb:Language>C#</msb:Language>
			<msb:HitCountType>1</msb:HitCountType>
			<msb:HitCountTarget>1</msb:HitCountTarget>
		</msb:Breakpoint>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_b790d120a8a8480dbb2e6fa7b2153ca2.Properties.Settings.get_Default():SC_b790d120a8a8480dbb2e6fa7b2153ca2.Properties.Sett" +
    "ings")]

namespace SC_b790d120a8a8480dbb2e6fa7b2153ca2.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_b790d120a8a8480dbb2e6fa7b2153ca2.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{88F76BAF-D93F-4AA2-9900-3840D719B72B}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_b790d120a8a8480dbb2e6fa7b2153ca2</RootNamespace>
    <AssemblyName>SC_b790d120a8a8480dbb2e6fa7b2153ca2</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_b790d120a8a8480dbb2e6fa7b2153ca2.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_b790d120a8a8480dbb2e6fa7b2153ca2.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_b790d120a8a8480dbb2e6fa7b2153ca2.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_b790d120a8a8480dbb2e6fa7b2153ca2.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_b790d120a8a8480dbb2e6fa7b2153ca2.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_b790d120a8a8480dbb2e6fa7b2153ca2.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDADHwXWAAAAAAAAAAAOAAIiALATAAACIAAAAIAAAAAAAAdkEA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAACRBAABPAAAAAGAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAfCEAAAAgAAAAIgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAYAAAAAYAAAAkAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAKgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABY
QQAAAAAAAEgAAAACAAUAQCcAACwZAAABAAAAAAAAAGxAAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYqHgIoEAAACioAABMwBQADAwAAAQAAEQICewQAAARvNAAA
BnMRAAAKfQEAAAQCewEAAARvEgAACiY4ywIAAAJ7AQAABG8SAAAKcgEAAHByCwAAcG8TAAAKchkA
AHAKch0AAHAGch0AAHAoFAAACgsHKBUAAAoMFg0CewUAAARvKQAABgJ7BQAABAgJJRdYDZooFgAA
CnIdAABwciEAAHBvEwAACm8NAAAGAnsFAAAECAklF1gNmigWAAAKch0AAHByIQAAcG8TAAAKbwsA
AAYCewUAAAQICSUXWA2aKBYAAApyHQAAcHIhAABwbxMAAApvCQAABgJ7BQAABAgJJRdYDZooFgAA
CnIdAABwciEAAHBvEwAACm8HAAAGAnsFAAAECAklF1gNmigWAAAKch0AAHByIQAAcG8TAAAKbycA
AAYCewUAAAQICSUXWA2aKBYAAApyHQAAcHIhAABwbxMAAApvDwAABgJ7BQAABAgJJRdYDZooFgAA
CnIdAABwciEAAHBvEwAACm8RAAAGAnsFAAAECAklF1gNmigWAAAKch0AAHByIQAAcG8TAAAKbxUA
AAYCewUAAAQICSUXWA2aKBYAAApyHQAAcHIhAABwbxMAAApvEwAABgJ7BQAABAgJJRdYDZooFgAA
CnIdAABwciEAAHBvEwAACm8ZAAAGAnsFAAAECAklF1gNmigWAAAKch0AAHByIQAAcG8TAAAKbxcA
AAYCewUAAAQICSUXWA2aKBYAAApyHQAAcHIhAABwbxMAAApvHQAABgJ7BQAABAgJJRdYDZooFgAA
CnIdAABwciEAAHBvEwAACm8bAAAGAnsFAAAECAklF1gNmigWAAAKch0AAHByIQAAcG8TAAAKbx8A
AAYCewUAAAQICSUXWA2aKBYAAApyHQAAcHIhAABwbxMAAApvIQAABgJ7BQAABAgJJRdYDZooFgAA
CnIdAABwciEAAHBvEwAACm8jAAAGAnsFAAAECAklF1gNmigWAAAKch0AAHByIQAAcG8TAAAKbyUA
AAYCewEAAARvFwAACjkl/f//KkoCKBgAAAoCewEAAARvGQAACioeAigsAAAGKioCAwQFKBoAAAoq
JgIWAygbAAAKKloDLAgCFigcAAAKKnIjAABwcx0AAAp6JgIXAygbAAAKKloDLAgCFygcAAAKKnIj
AABwcx0AAAp6JgIYAygbAAAKKloDLAgCGCgcAAAKKnIjAABwcx0AAAp6JgIZAygbAAAKKloDLAgC
GSgcAAAKKnIjAABwcx0AAAp6JgIaAygbAAAKKloDLAgCGigcAAAKKnIjAABwcx0AAAp6JgIbAygb
AAAKKloDLAgCGygcAAAKKnIjAABwcx0AAAp6JgIcAygbAAAKKloDLAgCHCgcAAAKKnIjAABwcx0A
AAp6JgIdAygbAAAKKloDLAgCHSgcAAAKKnIjAABwcx0AAAp6JgIeAygbAAAKKloDLAgCHigcAAAK
KnIjAABwcx0AAAp6KgIfCQMoGwAACipeAywJAh8JKBwAAAoqciMAAHBzHQAACnoqAh8KAygbAAAK
Kl4DLAkCHwooHAAACipyIwAAcHMdAAAKeioCHwsDKBsAAAoqXgMsCQIfCygcAAAKKnIjAABwcx0A
AAp6KgIfDAMoGwAACipeAywJAh8MKBwAAAoqciMAAHBzHQAACnoqAh8NAygbAAAKKl4DLAkCHw0o
HAAACipyIwAAcHMdAAAKeioCHw4DKBsAAAoqXgMsCQIfDigcAAAKKnIjAABwcx0AAAp6KgIfDwMo
GwAACipeAywJAh8PKBwAAAoqciMAAHBzHQAACnoqAh8QAygbAAAKKl4DLAkCHxAoHAAACipyIwAA
cHMdAAAKeh4CKB4AAAoqHgIoHwAACioeAiggAAAKKn4CKCEAAAoCAnMxAAAGfQMAAAQCAnMzAAAG
fQQAAAQqbgJ7BQAABCwSAnsFAAAEbyoAAAYCFH0FAAAEKgAAEzAFAEkAAAACAAARFgorLgQGlA4E
csAAAHAoIgAACjMZAgUGmgIEBpQoIwAACg4EcwYAAAZ9BQAABAYXWAoGAzLOAm8wAAAGAm8tAAAG
AiguAAAGKjoCKCQAAAoCA30GAAAEKoICewYAAARvJQAACm8mAAAKctIAAHBvJwAACm8oAAAKKjoC
KCQAAAoCA30HAAAEKpYCewcAAARvKQAACnLoAABwbyoAAAooKwAACm8sAAAKdB0AAAEqHgIoJAAA
CiqufggAAAQtHnL8AABw0AcAAAIoLQAACm8uAAAKcy8AAAqACAAABH4IAAAEKhp+CQAABCoeAoAJ
AAAEKhp+CgAABCoeAigwAAAKKi5zOgAABoAKAAAEKkJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5
AAAAAAUAbAAAAFwKAAAjfgAAyAoAAOwKAAAjU3RyaW5ncwAAAAC0FQAAcAEAACNVUwAkFwAAEAAA
ACNHVUlEAAAANBcAAPgBAAAjQmxvYgAAAAAAAAACAAABVxWiAQkBAAAA+gEzABYAAAEAAAAqAAAA
CAAAAAoAAAA7AAAALQAAADAAAAAQAAAAAgAAAAUAAAAnAAAAKAAAAAEAAAAGAAAAAQAAAAAAvgQB
AAAAAAAGAJwDdwgGADAEdwgGAOgCZAgPAOsIAAAGABUDuwYGAH8DuwYGAGADuwYGABcEuwYGALwD
uwYGANUDuwYGACwDuwYGAEcDawQKAPAD/AEGAIkHCQEGANwJWgYKAMUH/AEOALYH/AEKACIH/AEK
ACIK/AESAGYA/AcGAMsCZAgGANYHlwgGABYHmgYWAIwCjgQWAPwCjgQWAGQChQYGALACdwgGAJYH
CQEGAIcEWgYWAM8KbQkGAE8KWgYGAPwGWgYaAAEAJAgaACoAJAgaAE0AJAgSAH8A/AcSABoA/AdP
AJgKAAASAJAA/AcGADcCWgYGAGgBWgYGANkKuwYAAAAA2QAAAAAAAQABAAEAEAB6BgAAEAABAAEA
AQAQAKgHAABBAAMABgABABAABAoAAE0AAwAsAAEAEACTCQAAPQAGADEAAQAQADUJAAA9AAcAMwAA
ABAAngj6CD0ACAA1AAABEABkCfoIaQAKADkAAQChB8AAAQCMAcQABgCTCccABgA1CcsABgCoB88A
AQASCtMAAQASCtMAEQBuBtcAEQBUAtsAEQBOAd8AUCAAAAAAxgCMCeMAAQBSIAAAAADGAE4EBgAC
AFwgAAAAAMYAwQkGAAIAayMAAAAAxgBZBAYAAgB+IwAAAACGGE0IBgACAIYjAAAAAIYYTQhEAAIA
kSMAAAAAhgi9ARAABQCbIwAAAACGCEoF6AAGALIjAAAAAIYIygEQAAcAvCMAAAAAhgheBegACADT
IwAAAACGCOIAEAAJAN0jAAAAAIYI+gToAAoA9CMAAAAAhgjvABAACwD+IwAAAACGCA4F6AAMABUk
AAAAAIYIXgEQAA0AHyQAAAAAhggjBegADgA2JAAAAACGCGEGEAAPAEAkAAAAAIYI6gXoABAAVyQA
AAAAhggnAhAAEQBhJAAAAACGCIQF6AASAHgkAAAAAIYIHQIQABMAgiQAAAAAhghzBegAFACZJAAA
AACGCK4EEAAVAKMkAAAAAIYI0wXoABYAuiQAAAAAhgikBBAAFwDFJAAAAACGCMIF6AAYAN0kAAAA
AIYIzAAQABkA6CQAAAAAhgjmBOgAGgAAJQAAAACGCKcJEAAbAAslAAAAAIYIDQboABwAIyUAAAAA
hgjiChAAHQAuJQAAAACGCCAG6AAeAEYlAAAAAIYIggIQAB8AUSUAAAAAhgibBegAIABpJQAAAACG
CIEHEAAhAHQlAAAAAIYI/gXoACIAjCUAAAAAhgihAhAAIwCXJQAAAACGCKwF6AAkAK8lAAAAAIYI
rgEQACUAuiUAAAAAhgg0BegAJgDSJQAAAACGAMgKBgAnANolAAAAAIYA4wkGACcA4iUAAAAAhgDm
CUAAJwDqJQAAAACGGE0IBgAnAFAgAAAAAMYBswkGACcACiYAAAAAgQAyAQYAJwAoJgAAAADGAHgK
7QAnAFAgAAAAAMYBwQkGACsAfSYAAAAAhhhNCPkAKwCMJgAAAACGCO0GeAAsAK0mAAAAAIYYTQj5
ACwAvCYAAAAAhgigASMALQDiJgAAAACDGE0IBgAtAOomAAAAAJMI0gf/AC0AFicAAAAAkwg8AgQB
LQAdJwAAAACTCEgCCQEtACUnAAAAAJYI+AkPAS4ALCcAAAAAhhhNCAYALgA0JwAAAACRGFMIFAEu
AAAAAQCvBgAAAQDLBwAAAgA/CQAAAwAwBwAAAQBlBAAAAQBlBAAAAQBlBAAAAQBlBAAAAQBlBAAA
AQBlBAAAAQBlBAAAAQBlBAAAAQBlBAAAAQBlBAAAAQBlBAAAAQBlBAAAAQBlBAAAAQBlBAAAAQBl
BAAAAQBlBAAAAQBlBAAAAQBlBAAAAQBlBAAAAQBlBAAAAQBlBAAAAQBlBAAAAQBlBAAAAQBlBAAA
AQBlBAAAAQBlBAAAAQBlBAAAAQBlBAAAAQBlBAAAAQBlBAAAAQBlBAAAAQBlBAAAAQBlBAAAAQBl
BAAAAQC5CQAAAgBaCAAAAwCfCQAABAAwBwAAAQAoCgAAAQAoCgAAAQBlBAkATQgBABEATQgGABkA
TQgKACkATQgQADEATQgQADkATQgQAEEATQgQAEkATQgQAFEATQgQAFkATQgQAGEATQgQAGkATQgG
AKkATQgGAMkATQgVANkATQgGAJkATgQGAHEATQgQAOEA8wEjAOkARgEnAOkA1QktAPEA8gk0APkA
hQQ7AHEAOAZAAJkAWQQGAOEAfAIGAIEATQhEAIEAUQZOAIEAMAYBAAEBTQgQAIEAyAoGAIEA4wkG
AIEA5glAAJkATQgGAJkA/QBYAJkAUwlfAHkATQgGAJkAEwFlAAkBzQZrABEB2AFxABkB5gd4AJkA
KQl9ACEBSAaDAJkAswqKACkBhAqQAEEBegGXAEEB1QqgALEATQimANEATQgGAC4ACwA0AS4AEwA9
AS4AGwBcAS4AIwBlAS4AKwCOAS4AMwCOAS4AOwCOAS4AQwBlAS4ASwCUAS4AUwCOAS4AWwCrAUMA
YwDzAeMAawDzAUEBewDzAakEcwBcAckEcwBcARsAVAADAAEABQAjAAYAJAAHACUACAAnAAAAwQEY
AQAATgUcAQAAzgEYAQAAYgUcAQAA5gAYAQAA/gQcAQAA8wAYAQAAEgUcAQAAYgEYAQAAJwUcAQAA
ZQYYAQAA7gUcAQAAKwIYAQAAiAUcAQAAMQIYAQAAjgUcAQAAsgQYAQAA1wUcAQAAuAQYAQAA3QUc
AQAA0AAYAQAA6gQcAQAAqwkYAQAAEQYcAQAA5goYAQAAJAYcAQAAmwIYAQAAnwUcAQAAhQcYAQAA
AgYcAQAApQIYAQAAsAUcAQAAsgEYAQAAOAUcAQAA8QYgAQAApAEYAQAA1gclAQAAXAIqAQAA/Akv
AQEABwADAAEACAAFAAEACQAHAAEACgAJAAEACwALAAEADAANAAEADQAPAAEADgARAAEADwATAAEA
EAAVAAEAEQAXAAEAEgAZAAEAEwAbAAEAFAAdAAEAFQAfAAEAFgAhAAEAFwAjAAEAGAAlAAEAGQAn
AAEAGgApAAEAGwArAAEAHAAtAAEAHQAvAAEAHgAxAAEAHwAzAAEAIAA1AAEAIQA3AAEAIgA5AAEA
IwA7AAEAJAA9AAEAJQA/AAEAJgBBAAEAJwBDAAEAKABFAAIAMgBHAAIANABJAAIANgBLAAIANwBN
AAEAOABNAAIAOQBPAASAAAABAAAAAAAAAAAAAAAAAKgAAAAEAAAAAAAAAAAAAACuACkBAAAAAAsA
AAAAAAAAAAAAALcAMgoAAAAACwAAAAAAAAAAAAAAtwBXCgAAAAALAAAAAAAAAAAAAAC3ADoHAAAA
AAQAAAAAAAAAAAAAAK4AWgYAAAAACwAAAAAAAAAAAAAAtwBdBwAAAAAAAAAAAQAAAKgIAAAAAABJ
RFRTQ29tcG9uZW50TWV0YURhdGExMDAASURUU1ZhcmlhYmxlMTAwAElEVFNSdW50aW1lQ29ubmVj
dGlvbkNvbGxlY3Rpb24xMDAASURUU1J1bnRpbWVDb25uZWN0aW9uMTAwAElEVFNDb25uZWN0aW9u
TWFuYWdlcjEwMABJRFRTVmFyaWFibGVzMTAwAElEVFNFdmFsdWF0b3JDb250ZXh0MTAwAFNDX2I3
OTBkMTIwYThhODQ4MGRiYjJlNmZhN2IyMTUzY2EyAHNldF9BZGRyZXNzMgA8TW9kdWxlPgBzZXRf
Q2FtcHVzSUQAc2V0X1N0dWRlbnRJRABHZXRPdXRwdXRJRABTeXN0ZW0uSU8AZ2V0X0NvbXBvbmVu
dE1ldGFEYXRhAG1zY29ybGliAE1hcmtPdXRwdXRzRmluaXNoZWQAUmVwbGFjZQBkZWZhdWx0SW5z
dGFuY2UAc2V0X0dyYWRlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAGV4cG9y
dGVkQWRkcmVzc0ZpbGUAZ2V0X0lucHV0RmlsZQBzZXRfTWlkZGxlTmFtZQBzZXRfTGFzdE5hbWUA
c2V0X0ZpcnN0TmFtZQBHZXRSdW50aW1lQ29ubmVjdGlvbkJ5TmFtZQBSZWFkTGluZQBNaWNyb3Nv
ZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBzZXRfUGhvbmUAc2V0X1BhcmVudFBob25lAFR5cGUA
Z2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAEFwcGxpY2F0aW9uU2V0dGlu
Z3NCYXNlAENsb3NlAHNldF9TdGF0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBzZXRfRGVhY3RpdmF0
ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRl
AERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0
bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0
cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9u
QXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0
QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21wb25lbnRF
bnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0
aWJpbGl0eUF0dHJpYnV0ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAHZhbHVlAFN5c3RlbS5SdW50
aW1lLlZlcnNpb25pbmcAVG9TdHJpbmcAU3lzdGVtLkNvbXBvbmVudE1vZGVsAHNldF9FbWFpbABz
ZXRfUGFyZW50RW1haWwAU0NfYjc5MGQxMjBhOGE4NDgwZGJiMmU2ZmE3YjIxNTNjYTIuZGxsAHNl
dF9BZGRyZXNzMl9Jc051bGwAc2V0X0NhbXB1c0lEX0lzTnVsbABzZXRfU3R1ZGVudElEX0lzTnVs
bABzZXRfR3JhZGVfSXNOdWxsAHNldF9NaWRkbGVOYW1lX0lzTnVsbABzZXRfTGFzdE5hbWVfSXNO
dWxsAHNldF9GaXJzdE5hbWVfSXNOdWxsAHNldF9QaG9uZV9Jc051bGwAc2V0X1BhcmVudFBob25l
X0lzTnVsbABzZXRfU3RhdGVfSXNOdWxsAHNldF9EZWFjdGl2YXRlX0lzTnVsbABzZXRfRW1haWxf
SXNOdWxsAHNldF9QYXJlbnRFbWFpbF9Jc051bGwAc2V0X0hvbWVyb29tX0lzTnVsbABzZXRfWmlw
X0lzTnVsbABzZXRfQWRkcmVzc19Jc051bGwAc2V0X0NpdHlfSXNOdWxsAFNldE51bGwAZ2V0X0Vu
ZE9mU3RyZWFtAGdldF9JdGVtAHNldF9JdGVtAFN5c3RlbQBzZXRfSG9tZXJvb20AcmVzb3VyY2VN
YW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBU
cmFuc2FjdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBnZXRfUnVudGltZUNvbm5lY3Rpb25Db2xsZWN0
aW9uAGdldF9Db25uZWN0aW9uAEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24AQ3VsdHVyZUluZm8A
T3V0cHV0TmFtZU1hcABPdXRwdXRNYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNSdW50aW1lV3Jh
cABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1BpcGVsaW5lV3JhcABzZXRfWmlwAFN0cmVhbVJlYWRl
cgBUZXh0UmVhZGVyAHJlYWRlcgBPdXRwdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1
ZmZlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9Db25uZWN0aW9uTWFuYWdlcgBNaWNyb3NvZnQu
U3FsU2VydmVyLkR0cy5SdW50aW1lLldyYXBwZXIATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlw
ZWxpbmUuV3JhcHBlcgAuY3RvcgAuY2N0b3IAT3V0cHV0SURzAFN5c3RlbS5EaWFnbm9zdGljcwBT
eXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU0NfYjc5MGQx
MjBhOGE4NDgwZGJiMmU2ZmE3YjIxNTNjYTIuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2Vz
AERlYnVnZ2luZ01vZGVzAFNDX2I3OTBkMTIwYThhODQ4MGRiYjJlNmZhN2IyMTUzY2EyLlByb3Bl
cnRpZXMAZ2V0X1JlYWRPbmx5VmFyaWFibGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29sdW1u
SW5kZXhlcwBTZXR0aW5ncwBTeXN0ZW0uVGV4dC5SZWd1bGFyRXhwcmVzc2lvbnMAQWNxdWlyZUNv
bm5lY3Rpb25zAEJ1ZmZlcnMAc2V0X0FkZHJlc3MARmluaXNoT3V0cHV0cwBDcmVhdGVOZXdPdXRw
dXRSb3dzAENvbmNhdABPYmplY3QAU2V0RW5kT2ZSb3dzZXQAU3BsaXQAZ2V0X0RlZmF1bHQAVXNl
ckNvbXBvbmVudABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9uZW50AE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuVHhTY3JpcHQAQ29udmVydABNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABQ
cmltZU91dHB1dABHZXRWYWx1ZVdpdGhDb250ZXh0AFNjcmlwdENvbXBvbmVudEV2YWxDb250ZXh0
AGdldF9FdmFsdWF0b3JDb250ZXh0AEFkZFJvdwBSZWdleABnZXRfQXNzZW1ibHkAc2V0X0NpdHkA
AAAJIgAsACwAIgAADSIALAAiACIALAAiAAADLAAAAyIAAAEAgJtJAHMATgB1AGwAbAAgAHAAcgBv
AHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABGAGEAbABzAGUA
LgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAAYwBvAGwAdQBt
AG4AIABpAG4AcwB0AGUAYQBkAC4AABFPAHUAdABwAHUAdAAgADAAABVDAG8AbgBuAGUAYwB0AGkA
bwBuAAATSQBuAHAAdQB0AEYAaQBsAGUAAHFTAEMAXwBiADcAOQAwAGQAMQAyADAAYQA4AGEAOAA0
ADgAMABkAGIAYgAyAGUANgBmAGEANwBiADIAMQA1ADMAYwBhADIALgBQAHIAbwBwAGUAcgB0AGkA
ZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAAio4d5hPjwUWRohtlpgxkxwAEIAEBCAMgAAEFIAEB
EREEIAEBDgUgAQERYQcHBA4OHQ4IAyAADgUgAg4ODgYAAw4ODg4GAAIdDg4OBAABDg4DIAACCSAD
ARJFHQgSSQUgAgEIHAMHAQgGAAIIEkkOBSABHQgIBSAAEoCFBSAAEoCJBiABEoCNDgQgABJRBSAA
EoCRBiABEoCVHAUAABKAmQYgARwSgJ0IAAESgKERgKUFIAASgKkHIAIBDhKAqQi3elxWGTTgiQiJ
hF3NgIDMkQMGEjkCBg4DBhIUAwYSGAMGEgwDBhJNAwYSWQMGEl0DBhIgBCABARwEIAEBAgsgBAEI
HQgdEkUSSQUgAQESTQQAABJZBAAAEl0FAAEBEl0EAAASIAMAAAEDKAAOAygAAgQoABJRBAgAElkE
CAASXQQIABIgCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAA
ACgBACNTQ19iNzkwZDEyMGE4YTg0ODBkYmIyZTZmYTdiMjE1M2NhMgAABQEAAAAAFgEAEUNvcHly
aWdodCBAICAyMDIxAABHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29y
a0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQEAQAAALQAAADOyu++AQAAAJEAAABsU3lzdGVt
LlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3Vs
dHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNv
dXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABMQQAAAAAAAAAA
AABmQQAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWEEAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBt
c2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAA
AAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAA
AOwDAAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+
AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBh
AHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAA
sARMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAwADAANABi
ADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEA
bQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAQwBf
AGIANwA5ADAAZAAxADIAMABhADgAYQA4ADQAOAAwAGQAYgBiADIAZQA2AGYAYQA3AGIAMgAxADUA
MwBjAGEAMgAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAA
AHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AYgA3ADkAMABkADEAMgAwAGEA
OABhADgANAA4ADAAZABiAGIAMgBlADYAZgBhADcAYgAyADEANQAzAGMAYQAyAC4AZABsAGwAAABI
ABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAA
IAAgADIAMAAyADEAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAA
AHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwBiADcAOQAwAGQA
MQAyADAAYQA4AGEAOAA0ADgAMABkAGIAYgAyAGUANgBmAGEANwBiADIAMQA1ADMAYwBhADIALgBk
AGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AYgA3ADkAMABkADEA
MgAwAGEAOABhADgANAA4ADAAZABiAGIAMgBlADYAZgBhADcAYgAyADEANQAzAGMAYQAyAAAANAAI
AAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgACAABAEEA
cwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAAB4MQAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_b790d120a8a8480dbb2e6fa7b2153ca2</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">User::InputFile</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="1">
                    <arrayElement
                      dataType="System.String">&lt;SOAP-ENV:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"&gt;
&lt;SOAP-ENV:Body&gt;
&lt;a1:ScriptBreakpointInfo id="ref-1" xmlns:a1="http://schemas.microsoft.com/clr/nsassem/Microsoft.SqlServer.VSTAHosting/Microsoft.SqlServer.VSTAScriptingLib%2C%20Version%3D11.0.0.0%2C%20Culture%3Dneutral%2C%20PublicKeyToken%3D89845dcd8080cc91"&gt;
&lt;Enabled&gt;true&lt;/Enabled&gt;
&lt;File id="ref-3"&gt;main.cs&lt;/File&gt;
&lt;FileLine&gt;42&lt;/FileLine&gt;
&lt;FileColumn&gt;9&lt;/FileColumn&gt;
&lt;/a1:ScriptBreakpointInfo&gt;
&lt;/SOAP-ENV:Body&gt;
&lt;/SOAP-ENV:Envelope&gt;
</arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">9A</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataShaChecksum"
                  typeConverter="NOTBROWSABLE">28b2c807b99aee53e02f394df8a0bbc6b80bb40b</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">5c2a3c8b41c9a7296959095bfd77a7f7</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Students - Import from CSV\Read All Types of CSV.Connections[Connection]"
                  connectionManagerID="Package.ConnectionManagers[MyFlatFileSrcConnectionMgr]"
                  connectionManagerRefId="Package.ConnectionManagers[MyFlatFileSrcConnectionMgr]"
                  name="Connection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Students - Import from CSV\Read All Types of CSV.Outputs[Output 0]"
                  hasSideEffects="true"
                  name="Output 0">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Students - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[LastName]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Students - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[LastName]"
                      name="LastName" />
                    <outputColumn
                      refId="Package\Students - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[FirstName]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Students - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[FirstName]"
                      name="FirstName" />
                    <outputColumn
                      refId="Package\Students - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[CampusID]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Students - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[CampusID]"
                      name="CampusID" />
                    <outputColumn
                      refId="Package\Students - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[StudentID]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Students - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[StudentID]"
                      name="StudentID" />
                    <outputColumn
                      refId="Package\Students - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[Grade]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Students - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[Grade]"
                      name="Grade" />
                    <outputColumn
                      refId="Package\Students - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[Homeroom]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Students - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[Homeroom]"
                      name="Homeroom" />
                    <outputColumn
                      refId="Package\Students - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[ParentPhone]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Students - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[ParentPhone]"
                      name="ParentPhone" />
                    <outputColumn
                      refId="Package\Students - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[Phone]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Students - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[Phone]"
                      name="Phone" />
                    <outputColumn
                      refId="Package\Students - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[ParentEmail]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Students - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[ParentEmail]"
                      name="ParentEmail" />
                    <outputColumn
                      refId="Package\Students - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[Email]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Students - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[Email]"
                      name="Email" />
                    <outputColumn
                      refId="Package\Students - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[Address2]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Students - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[Address2]"
                      name="Address2" />
                    <outputColumn
                      refId="Package\Students - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[Address]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Students - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[Address]"
                      name="Address" />
                    <outputColumn
                      refId="Package\Students - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[City]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Students - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[City]"
                      name="City" />
                    <outputColumn
                      refId="Package\Students - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[State]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Students - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[State]"
                      name="State" />
                    <outputColumn
                      refId="Package\Students - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[Zip]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Students - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[Zip]"
                      name="Zip" />
                    <outputColumn
                      refId="Package\Students - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[Deactivate]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Students - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[Deactivate]"
                      name="Deactivate" />
                    <outputColumn
                      refId="Package\Students - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[MiddleName]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Students - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[MiddleName]"
                      name="MiddleName" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Students - Import from CSV\SQL Server Destination"
              componentClassID="Microsoft.SQLServerDestination"
              contactInfo="SQL Server Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;5"
              description="SQL Server Destination"
              name="SQL Server Destination"
              version="5">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.String"
                  description="The name of the database object to copy data into."
                  expressionType="Notify"
                  name="BulkInsertTableName">[dbo].[_IMS_Students]</property>
                <property
                  dataType="System.Boolean"
                  description="Specifies that any constraints on the destination object are checked during the data copy operation. Corresponds to the bulk insert CHECK_CONSTRAINTS option."
                  name="BulkInsertCheckConstraints">true</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the number of the first row to copy. Corresponds to the bulk insert FIRSTROW option."
                  expressionType="Notify"
                  name="BulkInsertFirstRow">-1</property>
                <property
                  dataType="System.Boolean"
                  description="Specifies that any insert triggers defined on the destination object will execute during the data copy. Corresponds to the bulk insert FIRE_TRIGGERS option."
                  name="BulkInsertFireTriggers">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Corresponds to the bulk insert KEEPIDENTITY option."
                  name="BulkInsertKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null copied to the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="BulkInsertKeepNulls">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the number of the last row to copy. Corresponds to the bulk insert LASTROW option."
                  expressionType="Notify"
                  name="BulkInsertLastRow">-1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of syntax errors and compilation errors that can occur before the data copy operation is canceled. Each row that cannot be copied is ignored and counted as one error. Corresponds to the bulk insert MAXERRORS option."
                  name="BulkInsertMaxErrors">-1</property>
                <property
                  dataType="System.String"
                  description="Specifies how the data to be copied is sorted. Corresponds to the bulk insert ORDER option."
                  expressionType="Notify"
                  name="BulkInsertOrder"></property>
                <property
                  dataType="System.Boolean"
                  description="Specifies that a table-level lock is acquired for the duration of the data copy operation. Corresponds to the bulk insert TABLOCK option."
                  name="BulkInsertTablock">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies in seconds the amount of time the SQL Destination adapter will wait before terminating if there is no data available for insertion.  A timeout value of 0 means the SQL Destination adapter will not time out."
                  expressionType="Notify"
                  name="Timeout">30</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion."
                  name="MaxInsertCommitSize">0</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Students - Import from CSV\SQL Server Destination.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[TIPWeb]"
                  connectionManagerRefId="Package.ConnectionManagers[TIPWeb]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Students - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input]"
                  hasSideEffects="true"
                  name="SQL Server Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Students - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].Columns[LastName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="LastName"
                      externalMetadataColumnId="Package\Students - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[LastName]"
                      lineageId="Package\Students - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[LastName]" />
                    <inputColumn
                      refId="Package\Students - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].Columns[FirstName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="FirstName"
                      externalMetadataColumnId="Package\Students - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[FirstName]"
                      lineageId="Package\Students - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[FirstName]" />
                    <inputColumn
                      refId="Package\Students - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].Columns[CampusID]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="CampusID"
                      externalMetadataColumnId="Package\Students - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[CampusID]"
                      lineageId="Package\Students - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[CampusID]" />
                    <inputColumn
                      refId="Package\Students - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].Columns[StudentID]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="StudentID"
                      externalMetadataColumnId="Package\Students - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[StudentID]"
                      lineageId="Package\Students - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[StudentID]" />
                    <inputColumn
                      refId="Package\Students - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].Columns[New]"
                      cachedDataType="bool"
                      cachedName="New"
                      externalMetadataColumnId="Package\Students - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[New]"
                      lineageId="Package\Students - Import from CSV\Derived Column.Outputs[Derived Column Output].Columns[New]" />
                    <inputColumn
                      refId="Package\Students - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].Columns[MiddleName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="MiddleName"
                      externalMetadataColumnId="Package\Students - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[MiddleName]"
                      lineageId="Package\Students - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[MiddleName]" />
                    <inputColumn
                      refId="Package\Students - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].Columns[Grade]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Grade"
                      externalMetadataColumnId="Package\Students - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[Grade]"
                      lineageId="Package\Students - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[Grade]" />
                    <inputColumn
                      refId="Package\Students - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].Columns[Homeroom]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Homeroom"
                      externalMetadataColumnId="Package\Students - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[HomeRoom]"
                      lineageId="Package\Students - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[Homeroom]" />
                    <inputColumn
                      refId="Package\Students - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].Columns[Phone]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Phone"
                      externalMetadataColumnId="Package\Students - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[Phone]"
                      lineageId="Package\Students - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[Phone]" />
                    <inputColumn
                      refId="Package\Students - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].Columns[ParentPhone]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="ParentPhone"
                      externalMetadataColumnId="Package\Students - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[ParentPhone]"
                      lineageId="Package\Students - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[ParentPhone]" />
                    <inputColumn
                      refId="Package\Students - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].Columns[Email]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Email"
                      externalMetadataColumnId="Package\Students - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[Email]"
                      lineageId="Package\Students - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[Email]" />
                    <inputColumn
                      refId="Package\Students - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].Columns[ParentEmail]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="ParentEmail"
                      externalMetadataColumnId="Package\Students - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[ParentEmail]"
                      lineageId="Package\Students - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[ParentEmail]" />
                    <inputColumn
                      refId="Package\Students - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].Columns[Address]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Address"
                      externalMetadataColumnId="Package\Students - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[Address]"
                      lineageId="Package\Students - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[Address]" />
                    <inputColumn
                      refId="Package\Students - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].Columns[Address2]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Address2"
                      externalMetadataColumnId="Package\Students - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[Address2]"
                      lineageId="Package\Students - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[Address2]" />
                    <inputColumn
                      refId="Package\Students - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].Columns[City]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="City"
                      externalMetadataColumnId="Package\Students - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[City]"
                      lineageId="Package\Students - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[City]" />
                    <inputColumn
                      refId="Package\Students - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].Columns[State]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="State"
                      externalMetadataColumnId="Package\Students - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[State]"
                      lineageId="Package\Students - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[State]" />
                    <inputColumn
                      refId="Package\Students - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].Columns[Zip]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Zip"
                      externalMetadataColumnId="Package\Students - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[Zip]"
                      lineageId="Package\Students - Import from CSV\Read All Types of CSV.Outputs[Output 0].Columns[Zip]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Students - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[IMS_StudentID]"
                      dataType="i4"
                      name="IMS_StudentID" />
                    <externalMetadataColumn
                      refId="Package\Students - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[StudentID]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="StudentID" />
                    <externalMetadataColumn
                      refId="Package\Students - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[CampusID]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="CampusID" />
                    <externalMetadataColumn
                      refId="Package\Students - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[FirstName]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="FirstName" />
                    <externalMetadataColumn
                      refId="Package\Students - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[LastName]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="LastName" />
                    <externalMetadataColumn
                      refId="Package\Students - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[MiddleName]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="MiddleName" />
                    <externalMetadataColumn
                      refId="Package\Students - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[Grade]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Grade" />
                    <externalMetadataColumn
                      refId="Package\Students - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[HomeRoom]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="HomeRoom" />
                    <externalMetadataColumn
                      refId="Package\Students - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[Phone]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Phone" />
                    <externalMetadataColumn
                      refId="Package\Students - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[ParentPhone]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="ParentPhone" />
                    <externalMetadataColumn
                      refId="Package\Students - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[Email]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      name="Email" />
                    <externalMetadataColumn
                      refId="Package\Students - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[ParentEmail]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      name="ParentEmail" />
                    <externalMetadataColumn
                      refId="Package\Students - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[Address]"
                      codePage="1252"
                      dataType="str"
                      length="500"
                      name="Address" />
                    <externalMetadataColumn
                      refId="Package\Students - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[Address2]"
                      codePage="1252"
                      dataType="str"
                      length="500"
                      name="Address2" />
                    <externalMetadataColumn
                      refId="Package\Students - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[City]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="City" />
                    <externalMetadataColumn
                      refId="Package\Students - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[State]"
                      codePage="1252"
                      dataType="str"
                      length="2"
                      name="State" />
                    <externalMetadataColumn
                      refId="Package\Students - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[Zip]"
                      codePage="1252"
                      dataType="str"
                      length="10"
                      name="Zip" />
                    <externalMetadataColumn
                      refId="Package\Students - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[Race]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Race" />
                    <externalMetadataColumn
                      refId="Package\Students - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[Gender]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Gender" />
                    <externalMetadataColumn
                      refId="Package\Students - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[Deactivate]"
                      dataType="bool"
                      name="Deactivate" />
                    <externalMetadataColumn
                      refId="Package\Students - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[Import]"
                      dataType="bool"
                      name="Import" />
                    <externalMetadataColumn
                      refId="Package\Students - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[New]"
                      dataType="bool"
                      name="New" />
                    <externalMetadataColumn
                      refId="Package\Students - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[RejectMessage]"
                      codePage="1252"
                      dataType="str"
                      length="1000"
                      name="RejectMessage" />
                    <externalMetadataColumn
                      refId="Package\Students - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input].ExternalColumns[StudentsUID]"
                      dataType="i4"
                      name="StudentsUID" />
                  </externalMetadataColumns>
                </input>
              </inputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Students - Import from CSV.Paths[Derived Column Output]"
              endId="Package\Students - Import from CSV\SQL Server Destination.Inputs[SQL Server Destination Input]"
              name="Derived Column Output"
              startId="Package\Students - Import from CSV\Derived Column.Outputs[Derived Column Output]" />
            <path
              refId="Package\Students - Import from CSV.Paths[Output 0]"
              endId="Package\Students - Import from CSV\Derived Column.Inputs[Derived Column Input]"
              name="Output 0"
              startId="Package\Students - Import from CSV\Read All Types of CSV.Outputs[Output 0]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{07455EC4-BD6B-4A35-92CA-DDC9BC313366}"
      DTS:From="Package\Students - Import from CSV"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Staff - Import from CSV" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="139,42"
          Id="Package\DCPS Import"
          TopLeft="804.999968012175,107.466667520735" />
        <NodeLayout
          Size="186,42"
          Id="Package\Staff - Import from CSV"
          TopLeft="432.499982813995,188.933334834841" />
        <NodeLayout
          Size="206,42"
          Id="Package\Students - Import from CSV"
          TopLeft="403.333317306307,84.0666673347685" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="506.133317306307,125.666667334769">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="19.166665507688,63.2666675000725"
              Start="0,0"
              End="19.166665507688,55.7666675000725">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.6333337500362" />
                  <mssgle:CubicBezierSegment
                    Point1="0,27.6333337500362"
                    Point2="0,31.6333337500362"
                    Point3="4,31.6333337500362" />
                  <mssgle:LineSegment
                    End="15.166665507688,31.6333337500362" />
                  <mssgle:CubicBezierSegment
                    Point1="15.166665507688,31.6333337500362"
                    Point2="19.166665507688,31.6333337500362"
                    Point3="19.166665507688,35.6333337500362" />
                  <mssgle:LineSegment
                    End="19.166665507688,55.7666675000725" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\DCPS Import">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="187.2,41.6"
          Id="Package\DCPS Import\SQL Server Destination"
          TopLeft="497.499980231127,273.866668843163" />
        <NodeLayout
          Size="152.8,41.6"
          Id="Package\DCPS Import\Derived Column"
          TopLeft="556.666644546722,193.266668202612" />
        <NodeLayout
          Size="184,41.6"
          Id="Package\DCPS Import\Read All Types of CSV"
          TopLeft="458.333315120804,96.200000764529" />
        <EdgeLayout
          Id="Package\DCPS Import.Paths[Output 0]"
          TopLeft="550.333315120804,137.800000764529">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="82.733329425918,55.466667438083"
              Start="0,0"
              End="82.733329425918,47.966667438083">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.7333337190415" />
                  <mssgle:CubicBezierSegment
                    Point1="0,23.7333337190415"
                    Point2="0,27.7333337190415"
                    Point3="4,27.7333337190415" />
                  <mssgle:LineSegment
                    End="78.733329425918,27.7333337190415" />
                  <mssgle:CubicBezierSegment
                    Point1="78.733329425918,27.7333337190415"
                    Point2="82.733329425918,27.7333337190415"
                    Point3="82.733329425918,31.7333337190415" />
                  <mssgle:LineSegment
                    End="82.733329425918,47.966667438083" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\DCPS Import.Paths[Derived Column Output]"
          TopLeft="633.066644546722,234.866668202612">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-41.9666643155949,39.000000640551"
              Start="0,0"
              End="-41.9666643155949,31.500000640551">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,15.5000003202755" />
                  <mssgle:CubicBezierSegment
                    Point1="0,15.5000003202755"
                    Point2="0,19.5000003202755"
                    Point3="-4,19.5000003202755" />
                  <mssgle:LineSegment
                    End="-37.9666643155949,19.5000003202755" />
                  <mssgle:CubicBezierSegment
                    Point1="-37.9666643155949,19.5000003202755"
                    Point2="-41.9666643155949,19.5000003202755"
                    Point3="-41.9666643155949,23.5000003202755" />
                  <mssgle:LineSegment
                    End="-41.9666643155949,31.500000640551" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-28.9833321577974,24.5000003202755,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\DCPS Import\SQL Server Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Staff - Import from CSV">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="187,42"
          Id="Package\Staff - Import from CSV\SQL Server Destination"
          TopLeft="497.499980231127,273.866668843163" />
        <NodeLayout
          Size="153,42"
          Id="Package\Staff - Import from CSV\Derived Column"
          TopLeft="556.666644546722,193.266668202612" />
        <NodeLayout
          Size="184,42"
          Id="Package\Staff - Import from CSV\Read All Types of CSV"
          TopLeft="458.333315120804,96.200000764529" />
        <EdgeLayout
          Id="Package\Staff - Import from CSV.Paths[Derived Column Output]"
          TopLeft="633.066644546722,234.866668202612">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-41.9666643155949,39.000000640551"
              Start="0,0"
              End="-41.9666643155949,31.500000640551">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,15.5000003202755" />
                  <mssgle:CubicBezierSegment
                    Point1="0,15.5000003202755"
                    Point2="0,19.5000003202755"
                    Point3="-4,19.5000003202755" />
                  <mssgle:LineSegment
                    End="-37.9666643155949,19.5000003202755" />
                  <mssgle:CubicBezierSegment
                    Point1="-37.9666643155949,19.5000003202755"
                    Point2="-41.9666643155949,19.5000003202755"
                    Point3="-41.9666643155949,23.5000003202755" />
                  <mssgle:LineSegment
                    End="-41.9666643155949,31.500000640551" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Staff - Import from CSV.Paths[Output 0]"
          TopLeft="550.333315120804,137.800000764529">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="82.733329425918,55.466667438083"
              Start="0,0"
              End="82.733329425918,47.966667438083">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.7333337190415" />
                  <mssgle:CubicBezierSegment
                    Point1="0,23.7333337190415"
                    Point2="0,27.7333337190415"
                    Point3="4,27.7333337190415" />
                  <mssgle:LineSegment
                    End="78.733329425918,27.7333337190415" />
                  <mssgle:CubicBezierSegment
                    Point1="78.733329425918,27.7333337190415"
                    Point2="82.733329425918,27.7333337190415"
                    Point3="82.733329425918,31.7333337190415" />
                  <mssgle:LineSegment
                    End="82.733329425918,47.966667438083" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Staff - Import from CSV\SQL Server Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Students - Import from CSV">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="187,42"
          Id="Package\Students - Import from CSV\SQL Server Destination"
          TopLeft="497.499980231127,273.866668843163" />
        <NodeLayout
          Size="153,42"
          Id="Package\Students - Import from CSV\Derived Column"
          TopLeft="556.666644546722,193.266668202612" />
        <NodeLayout
          Size="191,42"
          Id="Package\Students - Import from CSV\Read All Types of CSV"
          TopLeft="458.333315120804,96.200000764529" />
        <EdgeLayout
          Id="Package\Students - Import from CSV.Paths[Output 0]"
          TopLeft="553.833315120804,138.200000764529">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="79.333329425918,55.066667438083"
              Start="0,0"
              End="79.333329425918,47.566667438083">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.5333337190415" />
                  <mssgle:CubicBezierSegment
                    Point1="0,23.5333337190415"
                    Point2="0,27.5333337190415"
                    Point3="4,27.5333337190415" />
                  <mssgle:LineSegment
                    End="75.333329425918,27.5333337190415" />
                  <mssgle:CubicBezierSegment
                    Point1="75.333329425918,27.5333337190415"
                    Point2="79.333329425918,27.5333337190415"
                    Point3="79.333329425918,31.5333337190415" />
                  <mssgle:LineSegment
                    End="79.333329425918,47.566667438083" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Students - Import from CSV.Paths[Derived Column Output]"
          TopLeft="633.066644546722,234.866668202612">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-41.9666643155949,39.000000640551"
              Start="0,0"
              End="-41.9666643155949,31.500000640551">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,15.5000003202755" />
                  <mssgle:CubicBezierSegment
                    Point1="0,15.5000003202755"
                    Point2="0,19.5000003202755"
                    Point3="-4,19.5000003202755" />
                  <mssgle:LineSegment
                    End="-37.9666643155949,19.5000003202755" />
                  <mssgle:CubicBezierSegment
                    Point1="-37.9666643155949,19.5000003202755"
                    Point2="-41.9666643155949,19.5000003202755"
                    Point3="-41.9666643155949,23.5000003202755" />
                  <mssgle:LineSegment
                    End="-41.9666643155949,31.500000640551" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Students - Import from CSV\SQL Server Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>