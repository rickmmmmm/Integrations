<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="10/30/2014 10:52:01 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="WLAFRANCE-PC"
  DTS:CreatorName="HAYESSOFT\Warrenla"
  DTS:DTSID="{09B751B3-BFE9-48C6-9E7A-8AD4535D9132}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.121"
  DTS:LocaleID="1033"
  DTS:ObjectName="OneRoster"
  DTS:PackageType="5"
  DTS:VersionBuild="597"
  DTS:VersionGUID="{966B732C-A192-4CE2-BAAF-3921B7CBE024}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[OneRoster]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{9238981A-2F3C-4FFA-86C4-45A523C0CAF5}"
      DTS:ObjectName="OneRoster">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[$Project::OneRosterDB]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[$Project::Server]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=.;Initial Catalog=ImportManagementSystem;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[OneRosterNET]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{25CAA67B-38B5-4F5D-8EC9-109E21C521F5}"
      DTS:ObjectName="OneRosterNET">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[$Project::PowerSchoolData]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[$Project::Server]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=.;Initial Catalog=ImportManagementSystem;Integrated Security=True;Application Name=SSIS-PowerSchool-{25CAA67B-38B5-4F5D-8EC9-109E21C521F5}CSS-NBLAKELY\MSSQLSERVER2014.PowerSchoolAPIPlugIn;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4CC2F85C-2F64-440F-AB55-D6605179C6FF}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ClientKey">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{84791237-9068-48B0-84ED-C07D6C38ED92}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ClientName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C5681D49-D1EE-4CE4-ACDE-10DCE6BA5F73}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ClientOneRosterID">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{601DAA9A-D7B8-4F54-93D5-EE33204EFD96}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ClientSecret">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A44D1E2C-4C71-4AFF-8355-F54B2AA526CC}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ClientServer">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{AEBC77A0-3B0B-4BA6-9D00-34316FF48896}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ClientTipWebDatabase">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E91C2158-FCAE-4D20-94EE-A08537BB103B}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="CustomerList">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{27BECB58-365C-4729-BBEF-AF32B9F73B7C}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Error">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{20F1C2CF-576D-4FC6-9EA3-C9298167B0E4}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ErrorMessage">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{266782F4-B06A-4F00-A4C7-5026AA13F3B2}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PageSize">
      <DTS:VariableValue
        DTS:DataType="8">500</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F92A84B0-A676-4037-BACD-DC355B602775}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ProcessClasses">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B01E4251-64DD-4A19-96B4-9504F15614CF}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ProcessCourses">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{836DDAA8-273A-471F-9B6C-540F93B85E29}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ProcessEnrollments">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D6A54DB5-7822-4A2C-9E5C-B1F432A141DB}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ProcessSessions">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Data Flow Task - Get Customers"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{89CC7015-45BC-4D9A-9883-2658BE7A3076}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Data Flow Task - Get Customers"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server v10; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          BLOBTempStoragePath=""
          bufferTempStoragePath=""
          version="1">
          <components>
            <component
              refId="Package\Data Flow Task - Get Customers\OLE DB Source"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="OLE DB Source"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT ClientUID, ClientUrl, ClientKey, ClientSecret, 
SessionsFile, ClassesFile, CoursesFile, EnrollmentsFile
  FROM [ImportManagementSystem].[OneRoster].[Client]
  Where FileBased = 0
  order by ProcessOrder</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task - Get Customers\OLE DB Source.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OneRoster]"
                  connectionManagerRefId="Package.ConnectionManagers[OneRoster]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientUID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClientUID]"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientUID]"
                      name="ClientUID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientSecret]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClientSecret]"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientSecret]"
                      name="ClientSecret"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientUrl]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClientUrl]"
                      length="50"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientUrl]"
                      name="ClientUrl"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientKey]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClientKey]"
                      length="50"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientKey]"
                      name="ClientKey"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[SessionsFile]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[SessionsFile]"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[SessionsFile]"
                      name="SessionsFile"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClassesFile]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClassesFile]"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClassesFile]"
                      name="ClassesFile"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[CoursesFile]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[CoursesFile]"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[CoursesFile]"
                      name="CoursesFile"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[EnrollmentsFile]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[EnrollmentsFile]"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[EnrollmentsFile]"
                      name="EnrollmentsFile"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClientUID]"
                      dataType="i4"
                      name="ClientUID" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClientSecret]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="ClientSecret" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClientUrl]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="ClientUrl" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClientKey]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="ClientKey" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[SessionsFile]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      name="SessionsFile" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClassesFile]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      name="ClassesFile" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[CoursesFile]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      name="CoursesFile" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[EnrollmentsFile]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      name="EnrollmentsFile" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClientUID]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClientUID]"
                      name="ClientUID" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClientUrl]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClientUrl]"
                      name="ClientUrl" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClientKey]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClientKey]"
                      name="ClientKey" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClientSecret]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClientSecret]"
                      name="ClientSecret" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[SessionsFile]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[SessionsFile]"
                      name="SessionsFile" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClassesFile]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClassesFile]"
                      name="ClassesFile" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[CoursesFile]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[CoursesFile]"
                      name="CoursesFile" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[EnrollmentsFile]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[EnrollmentsFile]"
                      name="EnrollmentsFile" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task - Get Customers\Recordset Destination"
              componentClassID="Microsoft.RecordsetDestination"
              contactInfo="Recordset Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates and populates an in-memory ADO recordset that is available outside of the data flow. Scripts and other package elements can use the recordset. For example, use a recordset to store the names of files that will be loaded into the data warehouse."
              name="Recordset Destination">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the recordset."
                  name="VariableName">User::CustomerList</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input]"
                  hasSideEffects="true"
                  name="Recordset Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[ClientUID]"
                      cachedDataType="i4"
                      cachedName="ClientUID"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientUID]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[ClientSecret]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="150"
                      cachedName="ClientSecret"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientSecret]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[ClientUrl]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="ClientUrl"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientUrl]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[ClientKey]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="ClientKey"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientKey]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[SessionsFile]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="150"
                      cachedName="SessionsFile"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[SessionsFile]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[ClassesFile]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="150"
                      cachedName="ClassesFile"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClassesFile]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[CoursesFile]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="150"
                      cachedName="CoursesFile"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[CoursesFile]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[EnrollmentsFile]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="150"
                      cachedName="EnrollmentsFile"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[EnrollmentsFile]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Data Flow Task - Get Customers.Paths[OLE DB Source Output]"
              endId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input]"
              name="OLE DB Source Output"
              startId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Loop thru Clients"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{EF076D26-2122-4091-9820-02B258557495}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Loop thru Clients">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachADOEnumerator"
        DTS:DTSID="{85CE8E18-46E0-4A0D-965B-8E6296303D09}"
        DTS:ObjectName="{85CE8E18-46E0-4A0D-965B-8E6296303D09}">
        <DTS:ObjectData>
          <FEEADO
            EnumType="EnumerateRowsInFirstTable"
            VarName="User::CustomerList" />
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Loop thru Clients\Academic Sessions"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task - Get Teachers"
          DTS:DTSID="{FE3BBE6F-A6B3-4904-88F0-9BD6A78DC5FE}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Academic Sessions"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server v10; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              BLOBTempStoragePath=""
              bufferTempStoragePath=""
              version="1">
              <components>
                <component
                  refId="Package\Loop thru Clients\Academic Sessions\Derived Column"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Loop thru Clients\Academic Sessions\Derived Column.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Derived Column.Inputs[Derived Column Input].Columns[State]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="State"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[State]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[LEFT](#{Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[State]},2)</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">LEFT(State,2)</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Loop thru Clients\Academic Sessions\Derived Column.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Loop thru Clients\Academic Sessions\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Derived Column.Outputs[Derived Column Output].Columns[CustomerID]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Derived Column.Outputs[Derived Column Output].Columns[CustomerID]"
                          name="CustomerID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::ClientID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::ClientID]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Loop thru Clients\Academic Sessions\Derived Column.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Loop thru Clients\Academic Sessions\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Loop thru Clients\Academic Sessions\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[PSTeachers]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Loop thru Clients\Academic Sessions\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[OneRoster]"
                      connectionManagerRefId="Package.ConnectionManagers[OneRoster]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Loop thru Clients\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[TeacherID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="TeacherID"
                          externalMetadataColumnId="Package\Loop thru Clients\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TeacherID]"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[TeacherID]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[CampusID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="CampusID"
                          externalMetadataColumnId="Package\Loop thru Clients\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CampusID]"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[CampusID]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[FirstName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="FirstName"
                          externalMetadataColumnId="Package\Loop thru Clients\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FirstName]"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[FirstName]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[LastName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="LastName"
                          externalMetadataColumnId="Package\Loop thru Clients\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[LastName]"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[LastName]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[MiddleName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="MiddleName"
                          externalMetadataColumnId="Package\Loop thru Clients\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[MiddleName]"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[MiddleName]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Grade]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Grade"
                          externalMetadataColumnId="Package\Loop thru Clients\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Grade]"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[Grade]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[HomeRoom]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="HomeRoom"
                          externalMetadataColumnId="Package\Loop thru Clients\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[HomeRoom]"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[HomeRoom]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Department]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="Department"
                          externalMetadataColumnId="Package\Loop thru Clients\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Department]"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[Department]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Phone]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Phone"
                          externalMetadataColumnId="Package\Loop thru Clients\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Phone]"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[Phone]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Email]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="Email"
                          externalMetadataColumnId="Package\Loop thru Clients\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Email]"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[Email]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Address]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="Address"
                          externalMetadataColumnId="Package\Loop thru Clients\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Address]"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[Address]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Address2]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="Address2"
                          externalMetadataColumnId="Package\Loop thru Clients\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Address2]"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[Address2]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[City]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="City"
                          externalMetadataColumnId="Package\Loop thru Clients\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[City]"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[City]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[State]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="State"
                          externalMetadataColumnId="Package\Loop thru Clients\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[State]"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[State]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Zip]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Zip"
                          externalMetadataColumnId="Package\Loop thru Clients\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Zip]"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[Zip]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Deactivate]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Deactivate"
                          externalMetadataColumnId="Package\Loop thru Clients\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Deactivate]"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[Deactivate]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[CustomerID]"
                          cachedDataType="i4"
                          cachedName="CustomerID"
                          externalMetadataColumnId="Package\Loop thru Clients\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientUID]"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Derived Column.Outputs[Derived Column Output].Columns[CustomerID]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TeacherPSUID]"
                          dataType="i4"
                          name="TeacherPSUID" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientUID]"
                          dataType="i4"
                          name="ClientUID" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TeacherID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="TeacherID" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CampusID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="CampusID" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FirstName]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="FirstName" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[LastName]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="LastName" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[MiddleName]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="MiddleName" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Grade]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Grade" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[HomeRoom]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="HomeRoom" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Department]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Department" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Phone]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Phone" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Email]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Email" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Address]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="Address" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Address2]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="Address2" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[City]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="City" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[State]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="State" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Zip]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Zip" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Race]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Race" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Gender]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Gender" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Deactivate]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Deactivate" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Loop thru Clients\Academic Sessions\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Loop thru Clients\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Academic Sessions\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Academic Sessions\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Loop thru Clients\Academic Sessions\Script Component"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;11"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Script Component"
                  version="12">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="33">
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces

 using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.IO;
using System.Net;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Runtime.Serialization;
using System.Runtime.Serialization.Json;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading.Tasks;
using System.Web.Script.Serialization;
using System.Windows.Forms;



#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    static string pLocation = "ims/oneroster/v1p1/academicSessions";
    static string tokenURI = "token/";
    static string processType = "Sessions";

    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();

    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */
        ProcessTeachers().Wait();
    }


    public async Task<int> ProcessTeachers()
    {
        try
        {

            // The server base address
            string baseURL = Variables.ClientServer;

            //MessageBox.Show(uri);

            ServicePointManager.Expect100Continue = true;
            ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;


            /// The client information used to get the OAuth Access Token from the server.
            string clientId = Variables.ClientKey;
            string clientSecret = Variables.ClientSecret;
            string sendToken = EncodeTo64(Variables.ClientKey + ":" + Variables.ClientSecret);
            WriteToDatabase(0, "SESSIONS-sendToken", sendToken);
            // this will hold the Access Token returned from the server.
            //MessageBox.Show(sendToken, "sendToken");

            string accessToken = await GetAccessToken(baseURL, sendToken, clientId, clientSecret);
            //-->>>>>>>>>>>>>> Add : if returns null, stop
            if (accessToken == null)
            {
                WriteToDatabase(1, "Access Token", "GetAccessToken returned null");
                return 0;
            }
            //MessageBox.Show(accessToken, "access token");
           

            string FileSize = await GetFileSize(baseURL, accessToken);
            if (FileSize == null)
            {
                WriteToDatabase(1, "File Size", "GetFileSize returned null");
                return 0;
            }

            var jsonResponse = await GetTeachers(baseURL, accessToken, FileSize);

            return 0;
        }
        catch (Exception ex) { 
            WriteToDatabase(1, "ProcessTeachers", ex.Message);
            return 0;
        }

        }


    /// <summary>
    /// Gets the list of teachers.
    /// </summary>
    /// <param name="baseUrl">The url for the teacher list</param>
    /// <param name="accessToken">Acquired in the previous method</param>
    /// <returns>The page of articles.</returns>
    private async Task<dynamic> GetTeachers(string baseUrl, string accessToken, string FileSize)
    {
        try
        {
            int TotalRecords;
            string pageSize = 500;
            int intPageSize = Convert.ToInt32(pageSize);
            if (Int32.TryParse(FileSize, out TotalRecords))
            {
                int pages = ((TotalRecords - 1) / intPageSize) + 1;
                //MessageBox.Show(pages.ToString(), "pages");

                for (int i = 1; i <= pages; i++)
                {
                    string pagenum = i.ToString();
                    //MessageBox.Show(pagenum, "page number");

                    string uri = baseUrl + pLocation + "?pagesize="+ pageSize + "&page=" + pagenum;
                    var client = new HttpClient();

                    client.BaseAddress = new Uri(uri);

                    client.DefaultRequestHeaders.Accept.Clear();
                    client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));
                    client.DefaultRequestHeaders.Add("Authorization", "Bearer " + accessToken);

                    //MessageBox.Show(uri, "teachers uri");

                    StringContent stringContent = new StringContent("", Encoding.UTF8, "application/json");
                    //StringContent stringContent = new StringContent("page=" + pagenum, Encoding.UTF8, "application/json");
                    //string content;

                    HttpResponseMessage response = await client.PostAsync(new Uri(uri), stringContent);

                    response.EnsureSuccessStatusCode();
                    string jsonString = await response.Content.ReadAsStringAsync();
                    //MessageBox.Show(jsonString, "jsonstring");

                    jsonString = cleanJsonString(jsonString);

                    //Deserialize our JSON
                    DataTable dt = JsonStringToDataTable(jsonString);
                    int numRows = 0;


                    foreach (DataRow row in dt.Rows)
                    {
                        Output0Buffer.AddRow();
                        Output0Buffer.TeacherID = row["TeacherID"].ToString().Replace("\\", "");
                        Output0Buffer.CampusID = row["CampusID"].ToString().Replace("\\", "");
                        Output0Buffer.FirstName = row["FirstName"].ToString().Replace("\\", "");
                        Output0Buffer.LastName = row["LastName"].ToString().Replace("\\", "");
                        Output0Buffer.MiddleName = row["MiddleName"].ToString().Replace("\\", "");
                        Output0Buffer.Grade = row["Grade"].ToString().Replace("\\", "");
                        Output0Buffer.HomeRoom = row["HomeRoom"].ToString().Replace("\\", "");
                        Output0Buffer.Department = row["Department"].ToString().Replace("\\", "");
                        Output0Buffer.Phone = row["Phone"].ToString().Replace("\\", "");
                        Output0Buffer.Email = row["Email"].ToString().Replace("\\", "");
                        Output0Buffer.Address = row["Address"].ToString().Replace("\\", "");
                        Output0Buffer.Address2 = row["Address2"].ToString().Replace("\\", "");
                        Output0Buffer.City = row["City"].ToString().Replace("\\", "");
                        Output0Buffer.State = row["State"].ToString().Replace("\\", "");
                        Output0Buffer.Zip = row["zip"].ToString().Replace("\"", "");
                        Output0Buffer.Deactivate = row["Deactivate"].ToString().Replace("\\", "");

                        numRows += 1;
                    }
                    WriteToDatabase(0, "GetTeachers - Row Count Page Num: " + pagenum, numRows.ToString());
                }
                return null;
            }
            return null;

        }
        catch (Exception ex)
        {
            WriteToDatabase(1, "GetTeachers", ex.Message);
            throw;
        }

    }


    private async Task<string> GetFileSize(string baseURL, string accessToken)
    {
        try
        {
            using (var client = new HttpClient())
            {
                string uri = baseURL + pLocation + "/count";
                client.BaseAddress = new Uri(uri);
                //MessageBox.Show(uri, "teachers uri");

                client.DefaultRequestHeaders.Accept.Clear();
                client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));
                client.DefaultRequestHeaders.Add("Authorization", "Bearer " + accessToken);

                var stringContent = new StringContent("", Encoding.UTF8, "application/json");

                //Get file size
                HttpResponseMessage response = await client.PostAsync(new Uri(uri), stringContent);

                response.EnsureSuccessStatusCode();
                string jsonString = await response.Content.ReadAsStringAsync();

                //string jsonString = response.Content.ToString();//.ReadAsStringAsync();
                //MessageBox.Show(jsonString, "jsonstring");

                //Deserialize our JSON
                var FileSizeObject = JsonHelper.JsonDeserialize<FileSize>(jsonString);

                // return the Access Token.
                var FileSize = FileSizeObject.count;
                //MessageBox.Show(FileSize, "File Size");
                WriteToDatabase(0, "RecordCount", FileSize);
                return FileSize;
            }
        }
        catch (Exception ex)
        {
            //MessageBox.Show(ex.Message);
            //MessageBox.Show(ex.StackTrace);
            WriteToDatabase(1, "GetFileSize", ex.Message);
            //return null;
            throw;
        }

    }

    /// <summary>
    /// This method uses the OAuth Client Credentials Flow to get an Access Token to provide
    /// Authorization to the APIs.
    /// </summary>
    /// <returns></returns>
    private static async Task<string> GetAccessToken(string baseURL, string sendToken, string clientId, string clientSecret)
    {
        try
        {
            using (var client = new HttpClient())
            {

                string uri = baseURL + tokenURI;
                client.BaseAddress = new Uri(uri);

                //MessageBox.Show(uri, "access token uri");

                client.DefaultRequestHeaders.Accept.Clear();
                client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/x-www-form-urlencoded"));
                client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Basic", sendToken);

                List<KeyValuePair<string, string>> postData = new List<KeyValuePair<string, string>>();
                postData.Add(new KeyValuePair<string, string>("grant_type", "client_credentials"));
                FormUrlEncodedContent content = new FormUrlEncodedContent(postData);

                // Post to the Server and parse the response.
                HttpResponseMessage response = await client.PostAsync(new Uri(uri), content);

                response.EnsureSuccessStatusCode();
                string jsonString = await response.Content.ReadAsStringAsync();

                //MessageBox.Show(jsonString, "jsonstring");

                //Deserialize our JSON
                 var accessTokenObject = JsonHelper.JsonDeserialize<AccessToken>(jsonString);

                // return the Access Token.
                var token = accessTokenObject.access_token;
                //MessageBox.Show(token, "access token");
                return token;
            }
        }
        catch (Exception ex)
        {
            //WriteToDatabase(1, "GetAccessToken", ex.Message);
            //MessageBox.Show(ex.Message);
            //MessageBox.Show(ex.StackTrace);
            //return null;
            throw ex;
        }
    }

    public string EncodeTo64(string toEncode)
    {
        byte[] toEncodeAsBytes = System.Text.ASCIIEncoding.ASCII.GetBytes(toEncode);
        string returnValue = System.Convert.ToBase64String(toEncodeAsBytes);
        return returnValue;

    }
    public class JsonHelper
    {
        /// <summary>
        /// JSON Serialization
        /// </summary>
        public static string JsonSerializer<T>(T t)
        {
            DataContractJsonSerializer ser = new DataContractJsonSerializer(typeof(T));
            MemoryStream ms = new MemoryStream();
            ser.WriteObject(ms, t);
            string jsonString = Encoding.UTF8.GetString(ms.ToArray());
            ms.Close();
            return jsonString;
        }
        /// <summary>
        /// JSON Deserialization
        /// </summary>
        public static T JsonDeserialize<T>(string jsonString)
        {
            DataContractJsonSerializer ser = new DataContractJsonSerializer(typeof(T));
            MemoryStream ms = new MemoryStream(Encoding.UTF8.GetBytes(jsonString));
            T obj = (T)ser.ReadObject(ms);
            return obj;
        }
    }

    public class Teacher
    {
        public string TeacherID { get; set; }
        public string CampusID { get; set; }
        public string FirstName { get; set; }
        public string LastName { get; set; }
        public string MiddleName { get; set; }
        public string Grade { get; set; }
        public string HomeRoom { get; set; }
        public string Department { get; set; }
        public string Phone { get; set; }
        public string Email { get; set; }
        public string Address { get; set; }
        public string Address2 { get; set; }
        public string City { get; set; }
        public string State { get; set; }
        public string Zip { get; set; }
        public string Deactivate { get; set; }
    }

    public class AccessToken
    {
        public string access_token { get; set; }
        public string token_type { get; set; }
        public string expires_in { get; set; }
    }

    public class FileSize
    {
        public string count { get; set; }

    }



    public DataTable JsonStringToDataTable(string jsonString)
    {
        try
        {
            DataTable dt = new DataTable();
            string[] jsonStringArray = Regex.Split(jsonString.Replace("[", "").Replace("]", ""), "},{");
            List<string> ColumnsName = new List<string>();
            foreach (string jSA in jsonStringArray)
            {
                string[] jsonStringData = Regex.Split(jSA.Replace("{", "").Replace("}", ""), ",");
                foreach (string ColumnsNameData in jsonStringData)
                {
                    try
                    {
                        int idx = ColumnsNameData.IndexOf(":");
                        string ColumnsNameString = ColumnsNameData.Substring(0, idx - 1).Replace("\"", "");
                        if (!ColumnsName.Contains(ColumnsNameString))
                        {
                            ColumnsName.Add(ColumnsNameString);
                        }
                    }
                    catch //(Exception ex)
                    {
                        WriteToDatabase(1, "JsonStringToDataTable: Columns",(string.Format("Error Parsing Column Name : {0}", ColumnsNameData)));
                    }
                }
                break;
            }
            foreach (string AddColumnName in ColumnsName)
            {
                dt.Columns.Add(AddColumnName);
            }
            foreach (string jSA in jsonStringArray)
            {
                string[] RowData = Regex.Split(jSA.Replace("{", "").Replace("}", ""), ",");
                DataRow nr = dt.NewRow();
                foreach (string rowData in RowData)
                {
                    try
                    {
                        int idx = rowData.IndexOf(":");
                        string RowColumns = rowData.Substring(0, idx - 1).Replace("\"", "").Replace("\\", "");
                        string RowDataString = rowData.Substring(idx + 1).Replace("\"", "").Replace("\\", "");
                        nr[RowColumns] = RowDataString;
                    }
                    catch //(Exception ex)
                    {
                        WriteToDatabase(1, "JsonStringToDataTable: For each row", (string.Format("Error Parsing Row  Name : {0}", rowData)));
                        continue;
                    }
                }
                dt.Rows.Add(nr);
            }
            return dt;
        }
        catch (Exception ex)
        {
            WriteToDatabase(1, "JsonStringToDataTable", ex.Message);
            return null;
        }
    }

    public string cleanJsonString(string jsonString)
    {

        jsonString = jsonString.Replace("{\"name\":\"schoolstaff\",\"record\":[", "");
        jsonString = jsonString.Replace("\"_name\":\"schoolstaff\",", "");
        jsonString = jsonString.Replace("],\"@extensions\":\"s_ssf_ncea_x\"}", "");
        jsonString = jsonString.Replace(",\"@extensions\":\"u_schoolstaffuserfields,s_ssf_ncea_x\"", "");

        return jsonString;
    }


    public void WriteToDatabase(int Error, string Area, string LogInfo)
    {
        try
        {
            //MessageBox.Show("WriteToDatabase");
            var ConnString = Connections.PSDB.ConnectionString;

            using (SqlConnection conn = new SqlConnection(Connections.PSDB.ConnectionString))
            {
                if (conn.State != ConnectionState.Open) conn.Open();
                //string insertText = "Insert into OneRoster.LogFile (ClientUID, FileType, Area, LogInfo) Values (@ClientUID, @FileType, @Area, @LogInfo ) ";
                SqlCommand cmd = new SqlCommand("spLogInfo", conn);
                cmd.CommandType = CommandType.StoredProcedure;                
                cmd.Parameters.Add("@ClientUID", SqlDbType.Int).Value = Variables.ClientID;
                cmd.Parameters.Add("@Error", SqlDbType.Int).Value = Error;
                cmd.Parameters.Add("@FileType", SqlDbType.VarChar,50).Value = processType;
                cmd.Parameters.Add("@Area", SqlDbType.VarChar, 100).Value = Area;
                cmd.Parameters.Add("@LogInfo", SqlDbType.VarChar, 1000).Value = LogInfo;
                cmd.ExecuteNonQuery();
            }
        }
        catch //(Exception ex)
        {
            throw;
        }
    }
}




]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[packages.config]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="Newtonsoft.Json" version="12.0.1" targetFramework="net45" />
</packages>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 PSDB
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"PSDB").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public Int32 ClientKey
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["ClientKey"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Int32 ClientOneRosterID
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["ClientOneRosterID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientSecret
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientSecret"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientServer
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientServer"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_9cc764db5dc84a06abd71b37420e3e86.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{FF2D54D4-CBFE-43F2-A697-E0F017938BC8}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_9cc764db5dc84a06abd71b37420e3e86</RootNamespace>
    <AssemblyName>SC_9cc764db5dc84a06abd71b37420e3e86</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Runtime.Serialization" />
    <Reference Include="System.Security" />
    <Reference Include="System.Web" />
    <Reference Include="System.Web.Extensions" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="packages.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_9cc764db5dc84a06abd71b37420e3e86.Properties.Settings.get_Default():SC_9cc764db5dc84a06abd71b37420e3e86.Properties.Sett" +
    "ings")]

namespace SC_9cc764db5dc84a06abd71b37420e3e86.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String TeacherID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool TeacherID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CampusID
    {
        set
        {
            this[1] = value;
        }
    }
    public bool CampusID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String FirstName
    {
        set
        {
            this[2] = value;
        }
    }
    public bool FirstName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String LastName
    {
        set
        {
            this[3] = value;
        }
    }
    public bool LastName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String MiddleName
    {
        set
        {
            this[4] = value;
        }
    }
    public bool MiddleName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Grade
    {
        set
        {
            this[5] = value;
        }
    }
    public bool Grade_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String HomeRoom
    {
        set
        {
            this[6] = value;
        }
    }
    public bool HomeRoom_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Department
    {
        set
        {
            this[7] = value;
        }
    }
    public bool Department_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Phone
    {
        set
        {
            this[8] = value;
        }
    }
    public bool Phone_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Email
    {
        set
        {
            this[9] = value;
        }
    }
    public bool Email_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Address
    {
        set
        {
            this[10] = value;
        }
    }
    public bool Address_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Address2
    {
        set
        {
            this[11] = value;
        }
    }
    public bool Address2_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String City
    {
        set
        {
            this[12] = value;
        }
    }
    public bool City_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String State
    {
        set
        {
            this[13] = value;
        }
    }
    public bool State_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(13);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Zip
    {
        set
        {
            this[14] = value;
        }
    }
    public bool Zip_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(14);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Deactivate
    {
        set
        {
            this[15] = value;
        }
    }
    public bool Deactivate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(15);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_9cc764db5dc84a06abd71b37420e3e86</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_9cc764db5dc84a06abd71b37420e3e86</msb:DisplayName>
    <msb:ProjectId>{864A5F6B-8F9A-445F-A4EC-6A312432B075}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_9cc764db5dc84a06abd71b37420e3e86.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="packages.config" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_9cc764db5dc84a06abd71b37420e3e86")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_9cc764db5dc84a06abd71b37420e3e86")]
[assembly: AssemblyCopyright("Copyright @  2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_9cc764db5dc84a06abd71b37420e3e86.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_9cc764db5dc84a06abd71b37420e3e86.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_9cc764db5dc84a06abd71b37420e3e86.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_9cc764db5dc84a06abd71b37420e3e86.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_9cc764db5dc84a06abd71b37420e3e86.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_9cc764db5dc84a06abd71b37420e3e86</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::ClientKey,User::ClientOneRosterID,User::ClientSecret,User::ClientServer</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">68</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">338550b5789e62119da99eaa83870fbeb037e669</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">c70361c448dc120b23e5510d6ca6f6ae</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Loop thru Clients\Academic Sessions\Script Component.Connections[PSDB]"
                      connectionManagerID="Package.ConnectionManagers[OneRosterNET]"
                      connectionManagerRefId="Package.ConnectionManagers[OneRosterNET]"
                      description="Process Log"
                      name="PSDB" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0]"
                      hasSideEffects="true"
                      name="Output 0">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[TeacherID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[TeacherID]"
                          name="TeacherID" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[CampusID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[CampusID]"
                          name="CampusID" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[FirstName]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[FirstName]"
                          name="FirstName" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[LastName]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[LastName]"
                          name="LastName" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[MiddleName]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[MiddleName]"
                          name="MiddleName" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[Grade]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[Grade]"
                          name="Grade" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[HomeRoom]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[HomeRoom]"
                          name="HomeRoom" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[Department]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[Department]"
                          name="Department" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[Phone]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[Phone]"
                          name="Phone" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[Email]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[Email]"
                          name="Email" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[Address]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[Address]"
                          name="Address" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[Address2]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[Address2]"
                          name="Address2" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[City]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[City]"
                          name="City" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[State]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[State]"
                          name="State" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[Zip]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[Zip]"
                          name="Zip" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[Deactivate]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[Deactivate]"
                          name="Deactivate" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Loop thru Clients\Academic Sessions.Paths[Derived Column Output]"
                  endId="Package\Loop thru Clients\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Loop thru Clients\Academic Sessions\Derived Column.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Loop thru Clients\Academic Sessions.Paths[Output 0]"
                  endId="Package\Loop thru Clients\Academic Sessions\Derived Column.Inputs[Derived Column Input]"
                  name="Output 0"
                  startId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Loop thru Clients\Classes"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:Disabled="True"
          DTS:DTSID="{E2D2D47A-081D-4B93-8F7C-C49D64169F51}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Classes"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              defaultBufferMaxRows="50000"
              version="1">
              <components>
                <component
                  refId="Package\Loop thru Clients\Classes\Derived Column"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Loop thru Clients\Classes\Derived Column.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Loop thru Clients\Classes\Derived Column.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Loop thru Clients\Classes\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop thru Clients\Classes\Derived Column.Outputs[Derived Column Output].Columns[ClientUID]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Loop thru Clients\Classes\Derived Column.Outputs[Derived Column Output].Columns[ClientUID]"
                          name="ClientUID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::ClientID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::ClientID]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Loop thru Clients\Classes\Derived Column.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Loop thru Clients\Classes\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop thru Clients\Classes\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Classes\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Classes\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Classes\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Loop thru Clients\Classes\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[PSClasses]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Loop thru Clients\Classes\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[OneRoster]"
                      connectionManagerRefId="Package.ConnectionManagers[OneRoster]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Loop thru Clients\Classes\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Loop thru Clients\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[CourseID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="CourseID"
                          externalMetadataColumnId="Package\Loop thru Clients\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CourseID]"
                          lineageId="Package\Loop thru Clients\Classes\Script Component.Outputs[Output 0].Columns[CourseID]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[CampusID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="CampusID"
                          externalMetadataColumnId="Package\Loop thru Clients\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CampusID]"
                          lineageId="Package\Loop thru Clients\Classes\Script Component.Outputs[Output 0].Columns[CampusID]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ClassID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="ClassID"
                          externalMetadataColumnId="Package\Loop thru Clients\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClassID]"
                          lineageId="Package\Loop thru Clients\Classes\Script Component.Outputs[Output 0].Columns[ClassID]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ClassName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="ClassName"
                          externalMetadataColumnId="Package\Loop thru Clients\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClassName]"
                          lineageId="Package\Loop thru Clients\Classes\Script Component.Outputs[Output 0].Columns[ClassName]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Period]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Period"
                          externalMetadataColumnId="Package\Loop thru Clients\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Period]"
                          lineageId="Package\Loop thru Clients\Classes\Script Component.Outputs[Output 0].Columns[Period]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Section]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Section"
                          externalMetadataColumnId="Package\Loop thru Clients\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Section]"
                          lineageId="Package\Loop thru Clients\Classes\Script Component.Outputs[Output 0].Columns[Section]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[RoomLocation]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="RoomLocation"
                          externalMetadataColumnId="Package\Loop thru Clients\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[RoomLocation]"
                          lineageId="Package\Loop thru Clients\Classes\Script Component.Outputs[Output 0].Columns[RoomLocation]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ClientUID]"
                          cachedDataType="i4"
                          cachedName="ClientUID"
                          externalMetadataColumnId="Package\Loop thru Clients\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientUID]"
                          lineageId="Package\Loop thru Clients\Classes\Derived Column.Outputs[Derived Column Output].Columns[ClientUID]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CourseID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="CourseID" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CampusID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="CampusID" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClassID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="ClassID" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClassName]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="ClassName" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Period]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Period" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Section]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Section" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[RoomLocation]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="RoomLocation" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientUID]"
                          dataType="i4"
                          name="ClientUID" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClassesPSUID]"
                          dataType="i4"
                          name="ClassesPSUID" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Loop thru Clients\Classes\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Loop thru Clients\Classes\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop thru Clients\Classes\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Classes\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Classes\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Classes\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Loop thru Clients\Classes\Script Component"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;9"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Script Component"
                  version="12">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="33">
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[
#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces

using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.IO;
using System.Net;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Runtime.Serialization;
using System.Runtime.Serialization.Json;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading.Tasks;
using System.Web.Script.Serialization;
using System.Windows.Forms;



#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    static string pLocation = "/ws/schema/query/com.hayessoft.TIPWeb.classList";
    static string tokenURI = "/oauth/access_token/";
    static string processType = "classlist";

    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();

    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */
        ProcessClasses().Wait();
    }


    public async Task<int> ProcessClasses()
    {
        try
        {

            // The server base address
            string baseURL = Variables.ClientServer;

            //MessageBox.Show(baseURL);

            ServicePointManager.Expect100Continue = true;
            ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;


            /// The client information used to get the OAuth Access Token from the server.
            string clientId = Variables.ClientIDPS;
            string clientSecret = Variables.ClientSecret;
            string sendToken = EncodeTo64(Variables.ClientIDPS + ":" + Variables.ClientSecret);
            //WriteToDatabase(0, "CampusCourse-sendToken", sendToken);
            // this will hold the Access Token returned from the server.
            //MessageBox.Show(sendToken, "sendToken");

            string accessToken = await GetAccessToken(baseURL, sendToken, clientId, clientSecret);
            //-->>>>>>>>>>>>>> Add : if returns null, stop
            if (accessToken == null)
            {
                WriteToDatabase(1, "Access Token", "GetAccessToken returned null");
                return 0;
            }
            //MessageBox.Show(accessToken, "access token");


            string FileSize = await GetFileSize(baseURL, accessToken);
            if (FileSize == null)
            {
                WriteToDatabase(1, "File Size", "GetFileSize returned null");
                return 0;
            }

            var jsonResponse = await GetClasses(baseURL, accessToken, FileSize);

            return 0;
        }
        catch (Exception ex)
        {
            WriteToDatabase(1, "ProcessClasses", ex.Message);
            return 0;
        }

    }


    /// <summary>
    /// Gets the list of CampusCourse.
    /// </summary>
    /// <param name="baseUrl">The url for the Campus Course list</param>
    /// <param name="accessToken">Acquired in the previous method</param>
    /// <returns>The page of articles.</returns>
    private async Task<dynamic> GetClasses(string baseUrl, string accessToken, string FileSize)
    {
        try
        {
            int TotalRecords;
            string pageSize = Variables.PageSize;
            int intPageSize = Convert.ToInt32(pageSize);
            //MessageBox.Show(pageSize, "page size");
            if (Int32.TryParse(FileSize, out TotalRecords))
            {
                int pages = ((TotalRecords - 1) / intPageSize) + 1;
                //MessageBox.Show(pages.ToString(), "pages");


                for (int i = 1; i <= pages; i++)
                {
                    string pagenum = i.ToString();
                    //MessageBox.Show(pagenum, "page number");

                    string uri = baseUrl + pLocation + "?pagesize=" + pageSize + "&page=" + pagenum;
                    var client = new HttpClient();

                    client.BaseAddress = new Uri(uri);

                    client.DefaultRequestHeaders.Accept.Clear();
                    client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));
                    client.DefaultRequestHeaders.Add("Authorization", "Bearer " + accessToken);

                    //MessageBox.Show(uri, "courses uri");

                    StringContent stringContent = new StringContent("", Encoding.UTF8, "application/json");
                    //StringContent stringContent = new StringContent("page=" + pagenum, Encoding.UTF8, "application/json");
                    //string content;

                    HttpResponseMessage response = await client.PostAsync(new Uri(uri), stringContent);

                    response.EnsureSuccessStatusCode();
                    string jsonString = await response.Content.ReadAsStringAsync();
                    //MessageBox.Show(jsonString, "jsonstring");

                    jsonString = cleanJsonString(jsonString);

                    //Deserialize our JSON
                    DataTable dt = JsonStringToDataTable(jsonString);
                    int numRows = 0;


                    foreach (DataRow row in dt.Rows)
                    {
                        Output0Buffer.AddRow();
                        Output0Buffer.RoomLocation = row["roomlocation"].ToString().Replace("\\", "");
                        Output0Buffer.ClassID = row["classid"].ToString().Replace("\\", "");
                        Output0Buffer.Period = row["period"].ToString().Replace("\\", "");
                        Output0Buffer.ClassName = row["classname"].ToString().Replace("\\", "");
                        Output0Buffer.CampusID = row["campusid"].ToString().Replace("\\", "");
                        Output0Buffer.CourseID = row["courseid"].ToString().Replace("\\", "");
                        Output0Buffer.Section = row["section"].ToString().Replace("\\", "");



                        numRows += 1;
                    }
                    WriteToDatabase(0, "GetClasses - Row Count Page Num: " + pagenum, numRows.ToString());
                }
                return null;
            }
            return null;

        }
        catch (Exception ex)
        {
            WriteToDatabase(1, "GetClasses", ex.Message);
            throw;
        }

    }


    private async Task<string> GetFileSize(string baseURL, string accessToken)
    {
        try
        {
            using (var client = new HttpClient())
            {
                string uri = baseURL + pLocation + "/count";
                client.BaseAddress = new Uri(uri);
                //MessageBox.Show(uri, "Classes uri");

                client.DefaultRequestHeaders.Accept.Clear();
                client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));
                client.DefaultRequestHeaders.Add("Authorization", "Bearer " + accessToken);

                var stringContent = new StringContent("", Encoding.UTF8, "application/json");

                //Get file size
                HttpResponseMessage response = await client.PostAsync(new Uri(uri), stringContent);

                response.EnsureSuccessStatusCode();
                string jsonString = await response.Content.ReadAsStringAsync();

                //string jsonString = response.Content.ToString();//.ReadAsStringAsync();
                //MessageBox.Show(jsonString, "jsonstring");

                //Deserialize our JSON
                var FileSizeObject = JsonHelper.JsonDeserialize<FileSize>(jsonString);

                // return the Access Token.
                var FileSize = FileSizeObject.count;
                //MessageBox.Show(FileSize, "File Size");
                WriteToDatabase(0, "RecordCount", FileSize);
                return FileSize;
            }
        }
        catch (Exception ex)
        {
            //MessageBox.Show(ex.Message);
            //MessageBox.Show(ex.StackTrace);
            WriteToDatabase(1, "GetFileSize", ex.Message);
            //return null;
            throw;
        }

    }

    /// <summary>
    /// This method uses the OAuth Client Credentials Flow to get an Access Token to provide
    /// Authorization to the APIs.
    /// </summary>
    /// <returns></returns>
    private static async Task<string> GetAccessToken(string baseURL, string sendToken, string clientId, string clientSecret)
    {
        try
        {
            using (var client = new HttpClient())
            {

                string uri = baseURL + tokenURI;
                client.BaseAddress = new Uri(uri);

                //MessageBox.Show(uri, "access token uri");

                client.DefaultRequestHeaders.Accept.Clear();
                client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/x-www-form-urlencoded"));
                client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Basic", sendToken);

                List<KeyValuePair<string, string>> postData = new List<KeyValuePair<string, string>>();
                postData.Add(new KeyValuePair<string, string>("grant_type", "client_credentials"));
                FormUrlEncodedContent content = new FormUrlEncodedContent(postData);

                // Post to the Server and parse the response.
                HttpResponseMessage response = await client.PostAsync(new Uri(uri), content);

                response.EnsureSuccessStatusCode();
                string jsonString = await response.Content.ReadAsStringAsync();

                //MessageBox.Show(jsonString, "jsonstring");

                //Deserialize our JSON
                var accessTokenObject = JsonHelper.JsonDeserialize<AccessToken>(jsonString);

                // return the Access Token.
                var token = accessTokenObject.access_token;
                //MessageBox.Show(token, "access token");
                return token;
            }
        }
        catch (Exception ex)
        {
            //WriteToDatabase(1, "GetAccessToken", ex.Message);
            //MessageBox.Show(ex.Message);
            //MessageBox.Show(ex.StackTrace);
            //return null;
            throw ex;
        }
    }

    public string EncodeTo64(string toEncode)
    {
        byte[] toEncodeAsBytes = System.Text.ASCIIEncoding.ASCII.GetBytes(toEncode);
        string returnValue = System.Convert.ToBase64String(toEncodeAsBytes);
        return returnValue;

    }
    public class JsonHelper
    {
        /// <summary>
        /// JSON Serialization
        /// </summary>
        public static string JsonSerializer<T>(T t)
        {
            DataContractJsonSerializer ser = new DataContractJsonSerializer(typeof(T));
            MemoryStream ms = new MemoryStream();
            ser.WriteObject(ms, t);
            string jsonString = Encoding.UTF8.GetString(ms.ToArray());
            ms.Close();
            return jsonString;
        }
        /// <summary>
        /// JSON Deserialization
        /// </summary>
        public static T JsonDeserialize<T>(string jsonString)
        {
            DataContractJsonSerializer ser = new DataContractJsonSerializer(typeof(T));
            MemoryStream ms = new MemoryStream(Encoding.UTF8.GetBytes(jsonString));
            T obj = (T)ser.ReadObject(ms);
            return obj;
        }
    }

    public class CampusCourse
    {
        public string classID { get; set; }
        public string className { get; set; }
        public string campusID { get; set; }
        public string courseID { get; set; }
        public string section { get; set; }
        public string period { get; set; }
        public string roomLocation { get; set; }

    }

    public class AccessToken
    {
        public string access_token { get; set; }
        public string token_type { get; set; }
        public string expires_in { get; set; }
    }

    public class FileSize
    {
        public string count { get; set; }

    }



    public DataTable JsonStringToDataTable(string jsonString)
    {
        try
        {
            DataTable dt = new DataTable();
            string[] jsonStringArray = Regex.Split(jsonString.Replace("[", "").Replace("]", ""), "},{");
            List<string> ColumnsName = new List<string>();
            foreach (string jSA in jsonStringArray)
            {
                string[] jsonStringData = Regex.Split(jSA.Replace("{", "").Replace("}", ""), ",");
                foreach (string ColumnsNameData in jsonStringData)
                {
                    try
                    {
                        int idx = ColumnsNameData.IndexOf(":");
                        string ColumnsNameString = ColumnsNameData.Substring(0, idx - 1).Replace("\"", "");
                        if (!ColumnsName.Contains(ColumnsNameString))
                        {
                            ColumnsName.Add(ColumnsNameString);
                        }
                    }
                    catch //(Exception ex)
                    {
                        WriteToDatabase(1, "JsonStringToDataTable: Columns", (string.Format("Error Parsing Column Name : {0}", ColumnsNameData)));
                    }
                }
                break;
            }
            foreach (string AddColumnName in ColumnsName)
            {
                dt.Columns.Add(AddColumnName);
            }
            foreach (string jSA in jsonStringArray)
            {
                string[] RowData = Regex.Split(jSA.Replace("{", "").Replace("}", ""), ",");
                DataRow nr = dt.NewRow();
                foreach (string rowData in RowData)
                {
                    try
                    {
                        int idx = rowData.IndexOf(":");
                        string RowColumns = rowData.Substring(0, idx - 1).Replace("\"", "").Replace("\\", "");
                        string RowDataString = rowData.Substring(idx + 1).Replace("\"", "").Replace("\\", "");
                        nr[RowColumns] = RowDataString;
                    }
                    catch //(Exception ex)
                    {
                        WriteToDatabase(1, "JsonStringToDataTable: For each row", (string.Format("Error Parsing Row  Name : {0}", rowData)));
                        continue;
                    }
                }
                dt.Rows.Add(nr);
            }
            return dt;
        }
        catch (Exception ex)
        {
            WriteToDatabase(1, "JsonStringToDataTable", ex.Message);
            return null;
        }
    }

    public string cleanJsonString(string jsonString)
    {

        jsonString = jsonString.Replace("{\"record\":[", "");
        jsonString = jsonString.Replace("],\"@extensions\":\"\"", "");


        return jsonString;
    }


    public void WriteToDatabase(int Error, string Area, string LogInfo)
    {
        try
        {
            //MessageBox.Show("WriteToDatabase");
            var ConnString = Connections.PSDB.ConnectionString;

            using (SqlConnection conn = new SqlConnection(Connections.PSDB.ConnectionString))
            {
                if (conn.State != ConnectionState.Open) conn.Open();
                //string insertText = "Insert into PSLog (ClientUID, FileType, Area, LogInfo) Values (@ClientUID, @FileType, @Area, @LogInfo ) ";
                SqlCommand cmd = new SqlCommand("spLogInfo", conn);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("@ClientUID", SqlDbType.Int).Value = Variables.ClientID;
                cmd.Parameters.Add("@Error", SqlDbType.Int).Value = Error;
                cmd.Parameters.Add("@FileType", SqlDbType.VarChar, 50).Value = processType;
                cmd.Parameters.Add("@Area", SqlDbType.VarChar, 100).Value = Area;
                cmd.Parameters.Add("@LogInfo", SqlDbType.VarChar, 1000).Value = LogInfo;
                cmd.ExecuteNonQuery();
            }
        }
        catch //(Exception ex)
        {
            throw;
        }
    }
}




]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[packages.config]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="Newtonsoft.Json" version="12.0.3" targetFramework="net45" />
</packages>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 PSDB
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"PSDB").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public Int32 ClientID
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["ClientID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientIDPS
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientIDPS"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientSecret
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientSecret"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientServer
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientServer"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String PageSize
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["PageSize"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_ba0ed5b6a1944ce6abbe280afa1fbdb9.Properties.Settings.get_Default():SC_ba0ed5b6a1944ce6abbe280afa1fbdb9.Properties.Sett" +
    "ings")]

namespace SC_ba0ed5b6a1944ce6abbe280afa1fbdb9.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String ClassID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool ClassID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ClassName
    {
        set
        {
            this[1] = value;
        }
    }
    public bool ClassName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CampusID
    {
        set
        {
            this[2] = value;
        }
    }
    public bool CampusID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CourseID
    {
        set
        {
            this[3] = value;
        }
    }
    public bool CourseID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Section
    {
        set
        {
            this[4] = value;
        }
    }
    public bool Section_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Period
    {
        set
        {
            this[5] = value;
        }
    }
    public bool Period_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String RoomLocation
    {
        set
        {
            this[6] = value;
        }
    }
    public bool RoomLocation_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_ba0ed5b6a1944ce6abbe280afa1fbdb9.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{A31EAFA6-3BB6-4BAC-BD2B-0EFF247A5D52}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_ba0ed5b6a1944ce6abbe280afa1fbdb9</RootNamespace>
    <AssemblyName>SC_ba0ed5b6a1944ce6abbe280afa1fbdb9</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Newtonsoft.Json, Version=12.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <HintPath>C:\Users\nblakely\AppData\Local\Temp\Vsta\SSIS_SC120\Vstaa2x5hKK4rkOL2dONmWNU9g\packages\Newtonsoft.Json.12.0.3\lib\net45\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Runtime.Serialization" />
    <Reference Include="System.Web.Extensions" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
      <DesignTime>True</DesignTime>
    </Compile>
    <None Include="packages.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_ba0ed5b6a1944ce6abbe280afa1fbdb9</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_ba0ed5b6a1944ce6abbe280afa1fbdb9</msb:DisplayName>
    <msb:ProjectId>{B044BA82-3ED6-429D-AF2D-28F1DB2F2252}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_ba0ed5b6a1944ce6abbe280afa1fbdb9.csproj" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="packages.config" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_ba0ed5b6a1944ce6abbe280afa1fbdb9")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_ba0ed5b6a1944ce6abbe280afa1fbdb9")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_ba0ed5b6a1944ce6abbe280afa1fbdb9.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_ba0ed5b6a1944ce6abbe280afa1fbdb9.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_ba0ed5b6a1944ce6abbe280afa1fbdb9.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_ba0ed5b6a1944ce6abbe280afa1fbdb9.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_ba0ed5b6a1944ce6abbe280afa1fbdb9.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_ba0ed5b6a1944ce6abbe280afa1fbdb9.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[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
OQAAAAQAAACZAAAAPgAAAAwAAAAIAAAAIwAAAC8AAAAIAAAADwAAAAEAAAAKAAAAAQAAAAgAAAAC
AAAADgAAAAAAmgoBAAAAAAAGAJ4Izw8GADIJzw8GALcHvA8PAEMQAAAGAOQHyAwGAIEIyAwGAGII
yAwGABkJyAwGAL4IyAwGANcIyAwGABYIyAwGADEIAQoKAPIIDgYGAG8GkwsGAPsHzw8GAL0A8hAO
AG4Hzw8GAB0SkwsSAFAF5wIGAAcBEgNTAJoPAAASAO4T5wIGAIgNkwsSAEUNhxIGAHQLxwIGAH8H
zw8GAEkGkwsGAN4Fzw8GAPkAzw8GAOAAzw8GAEoIvA8WAAQTOg4WADAFOg4GAIsPPREGAFoFkwsW
AJ0SOg4WAO4SOg4KAHoODgYaAGsODgYKANsNDgYKAMYSDgYeAGYA0A4GAJoHvA8GAIsO7w8GAMcN
eAwiAD4HhAoiAMsHhAoiAOEGYwwGAH8K8hAGAPgJnhMGAGATkwsGAGYKkwsiAAQUHhESANoM5wIS
ABsM5wISACYN5wISADgNkg0SAFMH5wISAL8EhxISALUEkg0SAD0G5wISAA8NhxISAC0PhxISAC8G
5wIGABABkwsSACEPkg0GAGsNkwsmAAEA+A4mACoA+A4mAE0A+A4eAH8A0A4eABoA0A6nAL4TAAAe
AJAA0A4GAGYFkwsGABYUyAwqAFYPpQ0qAHEPjQwGAHoLxwIiALEOJBIiAFMGJBIiAHcKkwsWAIAR
XBEWAMQAXBEWAIsJXBEWAHQRXBEWABITOg4SAMYG5wIWAHEJXBEGAEcBEgMGAK8AEgMAAAAADwIA
AAAAAQABAAEAEAAQDAAAEAABAAEAAQAQAF0OAACZAAQADgABABAAqBIAAKUABAAgAAEAEABQEQAA
SQAHACUAAQAQAI0QAABJAAgAJwAAABAA9g9SEEkACQAuAAABEADfEFIQwQALADIAAgAQAMUOAABJ
AAwANQACABAAIAcAAEkADAA4AAIAEACzCwAASQATAEcAAgAQANcJAABJABYATgADARAAlQEAAG0A
FwBRAAMBEACqAQAAbQAeAFMAAwEQAMQBAABtACoAVQADARAA1gEAAG0AMgBXABEAWQzzAxEAtgLz
AxEAaAbzAwYAUBH2AwYAjRD6AwYAXQ7+AwEAthICBAEAthICBBEAmgsHBBEAtgYMBBEA8wQRBAEA
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
8QUhAMkCpQ/UApkCqgyKA3QApQ8GAHwApQ+lA3QAUgPdACkBpQ+tAyQAcwBCBi4ACwDvBC4AEwD4
BC4AGwAXBS4AIwAgBS4AKwBJBS4AMwBJBS4AOwBJBS4AQwAgBS4ASwBPBS4AUwBJBS4AWwBmBUMA
YwA9BoAAawCwBaAAawDVBcAAawD2BeAAawAYBuMAmwA9BmEBewA9BoEBewA9BqEBewA9BqMBewA9
BsEBewA9BsMBewA9BuEBewA9BuMBewA9BgECewA9BgMCewA9BiECewA9BkECewA9BmECewA9BoEC
ewA9BqECewA9BsECewA9BskCowAXBekCowAXBQAHewA9BiAHewA9BkAHewA9BmAHewA9BoAHewA9
BqAHewA9BsAHewA9BuAHewA9BgAIewA9BiAIewA9BkAIewA9BmAIewA9BoAIewA9BqAIewA9BuAI
ewA9BgAJewA9BiAJewA9BkAJewA9BmAJewA9BoAJewA9BsAJewA9BuAJewA9BkAKkwA9BoAKkwA9
BsAKkwA9BgALkwA9Bi4AWABoAHgAlAAuAX0B2AEAAnMCPANzAwMAAQAFAA8ABgAQAAcAFgAIABgA
CgAZAAsAIAAMACMAAABMAswEAADaCtAEAACOBcwEAAATC9AEAABwAswEAADtCtAEAAAlAswEAADG
CtAEAADADMwEAABAC9AEAADOBMwEAAABC9AEAAAqDMwEAAAoC9AEAAAcAtQEAACXAtoEAADVAswE
AAC4BcwEAAAzEswEAABJD8wEAADLCcwEAACLDt4EAAC+BuQEAABrEuoEAABkAswEAACqBcwEAACK
AswEAAA/AswEAABjDcwEAADkBMwEAABMDMwEAADgC8wEAACHBswEAAAFDMwEAAAsE8wEAQAPAAMA
AQAQAAUAAQARAAcAAQASAAkAAQATAAsAAQAUAA0AAQAVAA8AAQAWABEAAQAXABMAAQAYABUAAQAZ
ABcAAQAaABkAAQAbABsAAQAcAB0AAgAmAB8AAgAoACEAAgApACMAAgAqACUAAgArACcAAgAsACkA
AgAtACsAAgAvAC0AAgAwAC8AAQAxAC8AAgAyADEAAgA4ADMAAQA5ADMAAgA6ADUAAQA7ADUAAgA8
ADcAAQA9ADcAAgA+ADkAAQA/ADkAAgBAADsAAQBBADsAAgBCAD0AAQBDAD0AAgBEAD8AAQBFAD8A
AgBHAEEAAQBIAEEAAgBJAEMAAQBKAEMAAgBLAEUAAQBMAEUAAgBOAEcAAQBPAEcADQCiACEADQCk
ACMADgCmACEADgCoACMADwCqACEADwCsACMAEACuACEAEACwACMAMwBdAG0AxgDyAN0BLQI8AlcC
XQLFAvMC+wKRA50DBIAAAAEAAAAAAAAAAAAAAAAA6wEAAAQAAAAAAAAAAAAAANgDCQMAAAAADwAA
AAAAAAAAAAAA4QM9EwAAAAAEAAAAAAAAAAAAAADYA5IGAAAAAAQAAAAAAAAAAAAAANgD5wIAAAAA
BAAAAAAAAAAAAAAA6gM6DgAAAAAPAAAAAAAAAAAAAADhA2gTAAAAAA8AAAAAAAAAAAAAAOED8w0A
AAAABAAAAAAAAAAAAAAA2AOTCwAAAAAPAAAAAAAAAAAAAADhAxYOAAAAAAQAAAAAAAAAAAAAANgD
jQwAAAAAAAAAAAEAAAAAEAAACQACAAoAAgALAAIADAACAA0AAgAOAAIADwACABAAAgAAAAAAawDg
AgAAAABtAOACMwBKADkAYwA/AHMAPwB9ANMATQLTAGMCBwEDAwcBIwMhAVgDIQFkA2wAbgMhAb0D
IQHJA2wA0wMAAAAAAElEVFNDb21wb25lbnRNZXRhRGF0YTEwMABJRFRTVmFyaWFibGUxMDAASURU
U1J1bnRpbWVDb25uZWN0aW9uQ29sbGVjdGlvbjEwMABJRFRTUnVudGltZUNvbm5lY3Rpb24xMDAA
SURUU0Nvbm5lY3Rpb25NYW5hZ2VyMTAwAElEVFNWYXJpYWJsZXMxMDAASURUU0V2YWx1YXRvckNv
bnRleHQxMDAAPD51X18xAElFbnVtZXJhYmxlYDEAVGFza2AxAEh0dHBIZWFkZXJWYWx1ZUNvbGxl
Y3Rpb25gMQBBc3luY1Rhc2tNZXRob2RCdWlsZGVyYDEAVGFza0F3YWl0ZXJgMQBMaXN0YDEAVG9J
bnQzMgA8YmFzZVVSTD41X18yADxwYWdlU2l6ZT41X18yADxjbGllbnQ+NV9fMgA8PnVfXzIAS2V5
VmFsdWVQYWlyYDIAPGFjY2Vzc1Rva2VuPjVfXzMAPHBhZ2VzPjVfXzMARW5jb2RlVG82NAA8aT41
X180ADxwYWdlbnVtPjVfXzUAPFByb2Nlc3NDbGFzc2VzPmRfXzYAPEdldENsYXNzZXM+ZF9fNwBn
ZXRfVVRGOAA8R2V0RmlsZVNpemU+ZF9fOAA8R2V0QWNjZXNzVG9rZW4+ZF9fOQBTQ19iYTBlZDVi
NmExOTQ0Y2U2YWJiZTI4MGFmYTFmYmRiOQA8TW9kdWxlPgBnZXRfUFNEQgBzZXRfQ291cnNlSUQA
Z2V0X2NvdXJzZUlEAHNldF9jb3Vyc2VJRABzZXRfQ2xhc3NJRABnZXRfY2xhc3NJRABzZXRfY2xh
c3NJRABzZXRfQ2FtcHVzSUQAZ2V0X2NhbXB1c0lEAHNldF9jYW1wdXNJRABnZXRfQ2xpZW50SUQA
R2V0T3V0cHV0SUQAZ2V0X0FTQ0lJAHRva2VuVVJJAGJhc2VVUkwAU3lzdGVtLklPAGdldF9DbGll
bnRJRFBTAFQAQXJlYQBTeXN0ZW0uRGF0YQBnZXRfQ29tcG9uZW50TWV0YURhdGEAbXNjb3JsaWIA
U3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMAUmVhZEFzU3RyaW5nQXN5bmMAUG9zdEFzeW5jAGNs
aWVudElkAEFkZABNYXJrT3V0cHV0c0ZpbmlzaGVkAEF3YWl0VW5zYWZlT25Db21wbGV0ZWQAZ2V0
X0lzQ29tcGxldGVkADxjb3Vyc2VJRD5rX19CYWNraW5nRmllbGQAPGNsYXNzSUQ+a19fQmFja2lu
Z0ZpZWxkADxjYW1wdXNJRD5rX19CYWNraW5nRmllbGQAPHBlcmlvZD5rX19CYWNraW5nRmllbGQA
PGNsYXNzTmFtZT5rX19CYWNraW5nRmllbGQAPHRva2VuX3R5cGU+a19fQmFja2luZ0ZpZWxkADxh
Y2Nlc3NfdG9rZW4+a19fQmFja2luZ0ZpZWxkADxleHBpcmVzX2luPmtfX0JhY2tpbmdGaWVsZAA8
cm9vbUxvY2F0aW9uPmtfX0JhY2tpbmdGaWVsZAA8c2VjdGlvbj5rX19CYWNraW5nRmllbGQAPGNv
dW50PmtfX0JhY2tpbmdGaWVsZABEYkNvbW1hbmQAU3FsQ29tbWFuZABzZXRfUGVyaW9kAGdldF9w
ZXJpb2QAc2V0X3BlcmlvZABSZXBsYWNlAGRlZmF1bHRJbnN0YW5jZQBFbnN1cmVTdWNjZXNzU3Rh
dHVzQ29kZQB0b0VuY29kZQBnZXRfTWVzc2FnZQBIdHRwUmVzcG9uc2VNZXNzYWdlAEpzb25TdHJp
bmdUb0RhdGFUYWJsZQBJRGlzcG9zYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhh
bmRsZQBzZXRfQ2xhc3NOYW1lAGdldF9jbGFzc05hbWUAc2V0X2NsYXNzTmFtZQBnZXRfQ2xpZW50
TmFtZQBHZXRSdW50aW1lQ29ubmVjdGlvbkJ5TmFtZQBJQXN5bmNTdGF0ZU1hY2hpbmUAU2V0U3Rh
dGVNYWNoaW5lAHN0YXRlTWFjaGluZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBT
cWxEYlR5cGUAc2V0X0NvbW1hbmRUeXBlAFZhbHVlVHlwZQBTZWN1cml0eVByb3RvY29sVHlwZQBw
cm9jZXNzVHlwZQBnZXRfdG9rZW5fdHlwZQBzZXRfdG9rZW5fdHlwZQBTeXN0ZW0uQ29yZQBnZXRf
Q3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUASW50ZXJuYWxEYXRhQ29sbGVjdGlv
bkJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UAV3JpdGVUb0RhdGFiYXNlAENsb3NlAERpc3Bv
c2UAVHJ5UGFyc2UAQ2FtcHVzQ291cnNlAENyZWF0ZQBnZXRfU3RhdGUARWRpdG9yQnJvd3NhYmxl
U3RhdGUAQ29ubmVjdGlvblN0YXRlADw+MV9fc3RhdGUARHluYW1pY0F0dHJpYnV0ZQBDb21waWxl
ckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2Fi
bGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1
dGUAQXN5bmNTdGF0ZU1hY2hpbmVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUA
VGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAERlYnVnZ2VySGlkZGVuQXR0cmlidXRlAEFzc2VtYmx5
Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBp
bGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2Vt
Ymx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBvaW50QXR0cmli
dXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0
ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAHNldF9WYWx1ZQBBdXRoZW50aWNhdGlvbkhlYWRlclZh
bHVlAE1lZGlhVHlwZVdpdGhRdWFsaXR5SGVhZGVyVmFsdWUAdmFsdWUAc2V0X0V4cGVjdDEwMENv
bnRpbnVlAGdldF9QYWdlU2l6ZQBHZXRGaWxlU2l6ZQBKc29uRGVzZXJpYWxpemUASW5kZXhPZgBF
bmNvZGluZwBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvQmFzZTY0U3RyaW5nAGdldF9Db25u
ZWN0aW9uU3RyaW5nAGNsZWFuSnNvblN0cmluZwBqc29uU3RyaW5nAFRvU3RyaW5nAEdldFN0cmlu
ZwBTdWJzdHJpbmcAVXJpAGdldF9UYXNrAFN5c3RlbS5Db21wb25lbnRNb2RlbABTQ19iYTBlZDVi
NmExOTQ0Y2U2YWJiZTI4MGFmYTFmYmRiOS5kbGwAc2V0X0NvdXJzZUlEX0lzTnVsbABzZXRfQ2xh
c3NJRF9Jc051bGwAc2V0X0NhbXB1c0lEX0lzTnVsbABzZXRfUGVyaW9kX0lzTnVsbABzZXRfQ2xh
c3NOYW1lX0lzTnVsbABzZXRfUm9vbUxvY2F0aW9uX0lzTnVsbABzZXRfU2VjdGlvbl9Jc051bGwA
U2V0TnVsbABzZXRfU2VjdXJpdHlQcm90b2NvbABiYXNlVXJsAE1lbW9yeVN0cmVhbQBnZXRfSXRl
bQBzZXRfSXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4Ac2VuZFRva2VuAEdldEFjY2Vzc1Rva2VuAGFj
Y2Vzc1Rva2VuAGdldF9hY2Nlc3NfdG9rZW4Ac2V0X2FjY2Vzc190b2tlbgBPcGVuAGdldF9leHBp
cmVzX2luAHNldF9leHBpcmVzX2luAFNjcmlwdE1haW4ARGF0YUNvbHVtbgBzZXRfUm9vbUxvY2F0
aW9uAGdldF9yb29tTG9jYXRpb24Ac2V0X3Jvb21Mb2NhdGlvbgBwTG9jYXRpb24AU3lzdGVtLkNv
bmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJ1bnRpbWUuU2VyaWFsaXph
dGlvbgBzZXRfQXV0aG9yaXphdGlvbgBzZXRfU2VjdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBEYXRh
Q29sdW1uQ29sbGVjdGlvbgBnZXRfUnVudGltZUNvbm5lY3Rpb25Db2xsZWN0aW9uAFNxbFBhcmFt
ZXRlckNvbGxlY3Rpb24ARGF0YVJvd0NvbGxlY3Rpb24ARGJDb25uZWN0aW9uAFNxbENvbm5lY3Rp
b24AZ2V0X3NlY3Rpb24Ac2V0X3NlY3Rpb24ASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBTZXRF
eGNlcHRpb24AU3lzdGVtLkRhdGEuQ29tbW9uAFN5c3RlbS5SdW50aW1lLlNlcmlhbGl6YXRpb24u
SnNvbgBDdWx0dXJlSW5mbwBMb2dJbmZvAE91dHB1dE5hbWVNYXAAT3V0cHV0TWFwAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuRFRTUnVudGltZVdyYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNQaXBlbGlu
ZVdyYXAAU3lzdGVtLk5ldC5IdHRwAENsZWFyADw+dF9fYnVpbGRlcgBPdXRwdXQwQnVmZmVyAFBp
cGVsaW5lQnVmZmVyAFNjcmlwdEJ1ZmZlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9Db25uZWN0
aW9uTWFuYWdlcgBTZXJ2aWNlUG9pbnRNYW5hZ2VyAEpzb25IZWxwZXIATWljcm9zb2Z0LlNxbFNl
cnZlci5EdHMuUnVudGltZS5XcmFwcGVyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5l
LldyYXBwZXIARGJQYXJhbWV0ZXIAU3FsUGFyYW1ldGVyAEdldEF3YWl0ZXIAZ2V0X0NsaWVudFNl
cnZlcgBEYXRhQ29udHJhY3RKc29uU2VyaWFsaXplcgBYbWxPYmplY3RTZXJpYWxpemVyAEVycm9y
AElFbnVtZXJhdG9yAEdldEVudW1lcmF0b3IALmN0b3IALmNjdG9yAE91dHB1dElEcwBTeXN0ZW0u
RGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3Vy
Y2VzAFNDX2JhMGVkNWI2YTE5NDRjZTZhYmJlMjgwYWZhMWZiZGI5LlByb3BlcnRpZXMuUmVzb3Vy
Y2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTQ19iYTBlZDViNmExOTQ0Y2U2YWJiZTI4MGFm
YTFmYmRiOS5Qcm9wZXJ0aWVzAGdldF9SZWFkT25seVZhcmlhYmxlcwBQcm9jZXNzQ2xhc3NlcwBH
ZXRDbGFzc2VzAEdldEJ5dGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBT
ZXR0aW5ncwA8PjRfX3RoaXMAU3lzdGVtLlRocmVhZGluZy5UYXNrcwBDb250YWlucwBnZXRfQ29s
dW1ucwBTeXN0ZW0uVGV4dC5SZWd1bGFyRXhwcmVzc2lvbnMAU3lzdGVtLkNvbGxlY3Rpb25zAENv
bm5lY3Rpb25zAFN5c3RlbS5OZXQuSHR0cC5IZWFkZXJzAEh0dHBIZWFkZXJzAEh0dHBSZXF1ZXN0
SGVhZGVycwBnZXRfRGVmYXVsdFJlcXVlc3RIZWFkZXJzAEJ1ZmZlcnMAZ2V0X1BhcmFtZXRlcnMA
c2V0X0Jhc2VBZGRyZXNzAEZpbmlzaE91dHB1dHMAZ2V0X1Jvd3MAQ3JlYXRlTmV3T3V0cHV0Um93
cwBDb25jYXQARm9ybWF0AFJlYWRPYmplY3QAV3JpdGVPYmplY3QAU3lzdGVtLk5ldABnZXRfQ2xp
ZW50U2VjcmV0AGNsaWVudFNlY3JldABTZXRFbmRPZlJvd3NldABXYWl0AFNwbGl0AGdldF9EZWZh
dWx0AEdldFJlc3VsdABTZXRSZXN1bHQAU3lzdGVtLkRhdGEuU3FsQ2xpZW50AEh0dHBDbGllbnQA
VXNlckNvbXBvbmVudABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9uZW50AGdldF9DdXJyZW50
AGdldF9Db250ZW50AEZvcm1VcmxFbmNvZGVkQ29udGVudABTdHJpbmdDb250ZW50AEh0dHBDb250
ZW50AGdldF9jb3VudABzZXRfY291bnQAZ2V0X0FjY2VwdABNaWNyb3NvZnQuU3FsU2VydmVyLlR4
U2NyaXB0AFN0YXJ0AENvbnZlcnQATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QAUHJp
bWVPdXRwdXQATW92ZU5leHQAU3lzdGVtLlRleHQAR2V0VmFsdWVXaXRoQ29udGV4dABTY3JpcHRD
b21wb25lbnRFdmFsQ29udGV4dABnZXRfRXZhbHVhdG9yQ29udGV4dABEYXRhUm93AEFkZFJvdwBO
ZXdSb3cAUmVnZXgAVG9BcnJheQBnZXRfQXNzZW1ibHkARXhlY3V0ZU5vblF1ZXJ5AAAAA1sAAAEA
A10AAAd9ACwAewAAA3sAAAN9AAADLAAAAzoAAAMiAAA9SgBzAG8AbgBTAHQAcgBpAG4AZwBUAG8A
RABhAHQAYQBUAGEAYgBsAGUAOgAgAEMAbwBsAHUAbQBuAHMAAD9FAHIAcgBvAHIAIABQAGEAcgBz
AGkAbgBnACAAQwBvAGwAdQBtAG4AIABOAGEAbQBlACAAOgAgAHsAMAB9AAADXAAAR0oAcwBvAG4A
UwB0AHIAaQBuAGcAVABvAEQAYQB0AGEAVABhAGIAbABlADoAIABGAG8AcgAgAGUAYQBjAGgAIABy
AG8AdwAAO0UAcgByAG8AcgAgAFAAYQByAHMAaQBuAGcAIABSAG8AdwAgACAATgBhAG0AZQAgADoA
IAB7ADAAfQAAK0oAcwBvAG4AUwB0AHIAaQBuAGcAVABvAEQAYQB0AGEAVABhAGIAbABlAAAXewAi
AHIAZQBjAG8AcgBkACIAOgBbAAAlXQAsACIAQABlAHgAdABlAG4AcwBpAG8AbgBzACIAOgAiACIA
ABNzAHAATABvAGcASQBuAGYAbwAAFUAAQwBsAGkAZQBuAHQAVQBJAEQAAA1AAEUAcgByAG8AcgAA
E0AARgBpAGwAZQBUAHkAcABlAAALQABBAHIAZQBhAAARQABMAG8AZwBJAG4AZgBvAABfLwB3AHMA
LwBzAGMAaABlAG0AYQAvAHEAdQBlAHIAeQAvAGMAbwBtAC4AaABhAHkAZQBzAHMAbwBmAHQALgBU
AEkAUABXAGUAYgAuAGMAbABhAHMAcwBMAGkAcwB0AAApLwBvAGEAdQB0AGgALwBhAGMAYwBlAHMA
cwBfAHQAbwBrAGUAbgAvAAATYwBsAGEAcwBzAGwAaQBzAHQAAICbSQBzAE4AdQBsAGwAIABwAHIA
bwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0ACAAdABvACAARgBhAGwAcwBl
AC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUA
bQBuACAAaQBuAHMAdABlAGEAZAAuAAARTwB1AHQAcAB1AHQAIAAwAAAJUABTAEQAQgAAEUMAbABp
AGUAbgB0AEkARAAAFUMAbABpAGUAbgB0AEkARABQAFMAABVDAGwAaQBlAG4AdABOAGEAbQBlAAAZ
QwBsAGkAZQBuAHQAUwBlAGMAcgBlAHQAABlDAGwAaQBlAG4AdABTAGUAcgB2AGUAcgAAEVAAYQBn
AGUAUwBpAHoAZQAAcVMAQwBfAGIAYQAwAGUAZAA1AGIANgBhADEAOQA0ADQAYwBlADYAYQBiAGIA
ZQAyADgAMABhAGYAYQAxAGYAYgBkAGIAOQAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBv
AHUAcgBjAGUAcwAAGUEAYwBjAGUAcwBzACAAVABvAGsAZQBuAAA5RwBlAHQAQQBjAGMAZQBzAHMA
VABvAGsAZQBuACAAcgBlAHQAdQByAG4AZQBkACAAbgB1AGwAbAAAE0YAaQBsAGUAIABTAGkAegBl
AAAzRwBlAHQARgBpAGwAZQBTAGkAegBlACAAcgBlAHQAdQByAG4AZQBkACAAbgB1AGwAbAAAHVAA
cgBvAGMAZQBzAHMAQwBsAGEAcwBzAGUAcwAAFT8AcABhAGcAZQBzAGkAegBlAD0AAA0mAHAAYQBn
AGUAPQAAIWEAcABwAGwAaQBjAGEAdABpAG8AbgAvAGoAcwBvAG4AABtBAHUAdABoAG8AcgBpAHoA
YQB0AGkAbwBuAAAPQgBlAGEAcgBlAHIAIAAAGXIAbwBvAG0AbABvAGMAYQB0AGkAbwBuAAAPYwBs
AGEAcwBzAGkAZAAADXAAZQByAGkAbwBkAAATYwBsAGEAcwBzAG4AYQBtAGUAABFjAGEAbQBwAHUA
cwBpAGQAABFjAG8AdQByAHMAZQBpAGQAAA9zAGUAYwB0AGkAbwBuAABDRwBlAHQAQwBsAGEAcwBz
AGUAcwAgAC0AIABSAG8AdwAgAEMAbwB1AG4AdAAgAFAAYQBnAGUAIABOAHUAbQA6ACAAARVHAGUA
dABDAGwAYQBzAHMAZQBzAAANLwBjAG8AdQBuAHQAABdSAGUAYwBvAHIAZABDAG8AdQBuAHQAABdH
AGUAdABGAGkAbABlAFMAaQB6AGUAAENhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB4AC0AdwB3AHcA
LQBmAG8AcgBtAC0AdQByAGwAZQBuAGMAbwBkAGUAZAABC0IAYQBzAGkAYwAAFWcAcgBhAG4AdABf
AHQAeQBwAGUAACVjAGwAaQBlAG4AdABfAGMAcgBlAGQAZQBuAHQAaQBhAGwAcwAAAACik+fV+W2U
RZedLz9/bYBWAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARI5BSABAR0CBSABARJxBiABARGAuQQH
ARE0BRUReQEICAAAFRF5ARMABzABAQEQHgAECgERNAggABUSQQETAAQHARE4BRUReQEcBAoBETgE
BwERPAUVEXkBDgQKARE8BAcBEUAECgERQAUAABKAyQUgAR0FDgUAAQ4dBSQHExJNHQ4VElEBDh0O
CB0OCA4IDhURVQEODhJZDggODhJNEl0FIAIODg4GAAIdDg4OBRUSUQEOBCABCA4FIAIOCAgFIAEC
EwAFIAEBEwAFAAIODhwIIAAVEVUBEwAFFRFVAQ4EIAATAAUgABKA2QYgARKA3Q4DIAACBCAAElkE
IAEOCAUgAgEOHAUgABKA4QUgAQESWQMgAA4EBwESYQUgABGA6QYgAgEOEmEGIAEBEYD1BSAAEoD5
CSACEoD9DhGBAQQgAQEcCiADEoD9DhGBAQgDIAAICyADARKAnR0IEoChBSACAQgcAwcBCAcAAggS
gKEOBSABHQgIBSAAEoERBSAAEoEVBiABEoEZDgUgABKAqQUgABKBHQYgARKBIRwFAAASgSUGIAEc
EoEpBwABEjkRgS0FIAASgTEHIAIBDhKBMQQHARJlAh4AByACARKBPRwEIAAdBQUgAQ4dBQUgAQEd
BQYgARwSgT0ZBwwIEggIDg4ODg4VEXUBDhURdQEcEl0SXQQAAQECBgABARGBRQYAAw4ODg4FFRJB
AQ4IIAAVEXUBEwAFFRF1AQ4KMAICARAeABAeAQkKAhURdQEOETQFFRJBARwFFRF1ARwJCgIVEXUB
HBE0BSABARJdJwcRCBIIHAgIDhKAgQ4IFRF1ARKAhRURdQEOEoCJElkSgI0IEl0SXQQAAQgOBgAC
Ag4QCAUAAQ4dDgYgAQESgUkFIAASgU0KIAAVEoFRARKBVQgVEoFRARKBVQUAAg4ODgUgAgEODggg
AwEOEoDJDg8gAhUSQQESgIUSgUkSgV0HFRJBARKAhQcVEXUBEoCFCwoCFRF1ARKAhRE4BSAAEoCF
BSAAEoFdByAAFRJBAQ4JCgIVEXUBDhE4BSAAEoCJAyAAHAQgARwOGwcKCBIIDg4SgIEOFRF1ARKA
hRURdQEOEl0SXQsKAhURdQESgIURPAkKAhURdQEOETwECgESMBYHBwgODhKAlRURdQESgIUVEXUB
DhJdBiABARKBZQsVElEBFRGBaQIODgcVEYFpAg4OByACARMAEwEPIAEBFRKBbQEVEYFpAg4OCwoC
FRF1ARKAhRFACQoCFRF1AQ4RQAQKARIsCLd6XFYZNOCJCImEXc2AgMyRCLA/X38R1Qo6AgYOAwYS
FAMGEhgDBhIMBAYSgKUEBhKAsQQGEoC1AwYSIAIGCAYGFRF5AQgDBhIIBgYVEXUBDgYGFRF1ARwG
BhUReQEcCAYVEXUBEoCFBgYVEXkBDgQGEoCRByAAFRJBAQgKIAMVEkEBHA4ODgkgAhUSQQEODg4L
AAQVEkEBDg4ODg4EIAEODgUgARJNDgYgAwEIDg4DAAABBCABAQINIAQBCB0IHRKAnRKAoQYgAQES
gKUFAAASgLEFAAASgLUGAAEBEoC1BAAAEiAGEAEBDh4ABhABAR4ADgMoAA4DKAACBSgAEoCpAygA
CAUIABKAsQUIABKAtQQIABIgCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dz
AQgBAAIAAAAAACgBACNTQ19iYTBlZDViNmExOTQ0Y2U2YWJiZTI4MGFmYTFmYmRiOQAABQEAAAAA
FgEAEUNvcHlyaWdodCBAICAyMDIwAABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjcBAFQO
FEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNyQBAB9TY3JpcHRNYWluKzxQ
cm9jZXNzQ2xhc3Nlcz5kX182AAAgAQAbU2NyaXB0TWFpbis8R2V0Q2xhc3Nlcz5kX183AAAhAQAc
U2NyaXB0TWFpbis8R2V0RmlsZVNpemU+ZF9fOAAAJAEAH1NjcmlwdE1haW4rPEdldEFjY2Vzc1Rv
a2VuPmRfXzkAAAQBAAAACgEAAgAAAAABAAAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNv
dXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9
bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2Vz
LlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAJG0AAAAAAAAAAAAAPm0A
AAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAADBtAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3Jl
ZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEA
AQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYgAAA7AMAAAAAAAAAAAAA7AM0AAAAVgBT
AF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8A
AAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAA
ACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBEwDAAABAFMAdAByAGkAbgBnAEYA
aQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAwADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBu
AHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkA
bABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8AYgBhADAAZQBkADUAYgA2AGEAMQA5
ADQANABjAGUANgBhAGIAYgBlADIAOAAwAGEAZgBhADEAZgBiAGQAYgA5AAAAMAAIAAEARgBpAGwA
ZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAwAAAAcAAoAAEASQBuAHQAZQByAG4AYQBs
AE4AYQBtAGUAAABTAEMAXwBiAGEAMABlAGQANQBiADYAYQAxADkANAA0AGMAZQA2AGEAYgBiAGUA
MgA4ADAAYQBmAGEAMQBmAGIAZABiADkALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5
AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADIAMAAAACoAAQABAEwA
ZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBs
AEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfAGIAYQAwAGUAZAA1AGIANgBhADEAOQA0ADQAYwBlADYA
YQBiAGIAZQAyADgAMABhAGYAYQAxAGYAYgBkAGIAOQAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1
AGMAdABOAGEAbQBlAAAAAABTAEMAXwBiAGEAMABlAGQANQBiADYAYQAxADkANAA0AGMAZQA2AGEA
YgBiAGUAMgA4ADAAYQBmAGEAMQBmAGIAZABiADkAAAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQBy
AHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAOAAIAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIA
cwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAYAAADAAAAFA9AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAA==]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_ba0ed5b6a1944ce6abbe280afa1fbdb9</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::ClientID,User::ClientIDPS,User::ClientName,User::ClientSecret,User::ClientServer,User::PageSize</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">1b8ce7b4f28655059b02071fc3904c37</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">6064bf34441a21bb86469612e800c3ed1ab876ee</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">FC</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Loop thru Clients\Classes\Script Component.Connections[PSDB]"
                      connectionManagerID="Package.ConnectionManagers[OneRosterNET]"
                      connectionManagerRefId="Package.ConnectionManagers[OneRosterNET]"
                      name="PSDB" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Loop thru Clients\Classes\Script Component.Outputs[Output 0]"
                      hasSideEffects="true"
                      name="Output 0">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop thru Clients\Classes\Script Component.Outputs[Output 0].Columns[ClassID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Classes\Script Component.Outputs[Output 0].Columns[ClassID]"
                          name="ClassID" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Classes\Script Component.Outputs[Output 0].Columns[ClassName]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          lineageId="Package\Loop thru Clients\Classes\Script Component.Outputs[Output 0].Columns[ClassName]"
                          name="ClassName" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Classes\Script Component.Outputs[Output 0].Columns[CampusID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Classes\Script Component.Outputs[Output 0].Columns[CampusID]"
                          name="CampusID" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Classes\Script Component.Outputs[Output 0].Columns[CourseID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Classes\Script Component.Outputs[Output 0].Columns[CourseID]"
                          name="CourseID" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Classes\Script Component.Outputs[Output 0].Columns[Section]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Classes\Script Component.Outputs[Output 0].Columns[Section]"
                          name="Section" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Classes\Script Component.Outputs[Output 0].Columns[Period]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Classes\Script Component.Outputs[Output 0].Columns[Period]"
                          name="Period" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Classes\Script Component.Outputs[Output 0].Columns[RoomLocation]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Classes\Script Component.Outputs[Output 0].Columns[RoomLocation]"
                          name="RoomLocation" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Loop thru Clients\Classes.Paths[Derived Column Output]"
                  endId="Package\Loop thru Clients\Classes\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Loop thru Clients\Classes\Derived Column.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Loop thru Clients\Classes.Paths[Output 0]"
                  endId="Package\Loop thru Clients\Classes\Derived Column.Inputs[Derived Column Input]"
                  name="Output 0"
                  startId="Package\Loop thru Clients\Classes\Script Component.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Loop thru Clients\Courses"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:Disabled="True"
          DTS:DTSID="{1AD22F1D-1BD1-4790-A7CF-3F24DA184CB1}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Courses"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              defaultBufferMaxRows="50000"
              version="1">
              <components>
                <component
                  refId="Package\Loop thru Clients\Courses\Derived Column"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Loop thru Clients\Courses\Derived Column.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Loop thru Clients\Courses\Derived Column.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Loop thru Clients\Courses\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop thru Clients\Courses\Derived Column.Outputs[Derived Column Output].Columns[ClientUID]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Loop thru Clients\Courses\Derived Column.Outputs[Derived Column Output].Columns[ClientUID]"
                          name="ClientUID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::ClientID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::ClientID]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Loop thru Clients\Courses\Derived Column.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Loop thru Clients\Courses\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop thru Clients\Courses\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Courses\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Courses\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Courses\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Loop thru Clients\Courses\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[PSCampusCourse]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Loop thru Clients\Courses\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[OneRoster]"
                      connectionManagerRefId="Package.ConnectionManagers[OneRoster]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Loop thru Clients\Courses\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Loop thru Clients\Courses\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[CourseID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="CourseID"
                          externalMetadataColumnId="Package\Loop thru Clients\Courses\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CourseID]"
                          lineageId="Package\Loop thru Clients\Courses\Script Component.Outputs[Output 0].Columns[CourseID]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Courses\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ClientUID]"
                          cachedDataType="i4"
                          cachedName="ClientUID"
                          externalMetadataColumnId="Package\Loop thru Clients\Courses\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientUID]"
                          lineageId="Package\Loop thru Clients\Courses\Derived Column.Outputs[Derived Column Output].Columns[ClientUID]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Courses\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[CampusID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="CampusID"
                          externalMetadataColumnId="Package\Loop thru Clients\Courses\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CampusID]"
                          lineageId="Package\Loop thru Clients\Courses\Script Component.Outputs[Output 0].Columns[CampusID]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Courses\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CourseID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="CourseID" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Courses\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientUID]"
                          dataType="i4"
                          name="ClientUID" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Courses\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CampusID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="CampusID" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Courses\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CampusCoursePSUID]"
                          dataType="i4"
                          name="CampusCoursePSUID" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Loop thru Clients\Courses\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Loop thru Clients\Courses\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop thru Clients\Courses\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Courses\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Courses\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Courses\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Loop thru Clients\Courses\Script Component"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;9"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Script Component"
                  version="12">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="33">
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces

using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.IO;
using System.Net;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Runtime.Serialization;
using System.Runtime.Serialization.Json;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading.Tasks;
using System.Web.Script.Serialization;
using System.Windows.Forms;



#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    static string pLocation = "/ws/schema/query/com.hayessoft.TIPWeb.campusCourse";
    static string tokenURI = "/oauth/access_token/";
    static string processType = "CampusCourse";

    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();

    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */
        ProcessCampusCourse().Wait();
    }


    public async Task<int> ProcessCampusCourse()
    {
        try
        {

            // The server base address
            string baseURL = Variables.ClientServer;

            //MessageBox.Show(uri);

            ServicePointManager.Expect100Continue = true;
            ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;


            /// The client information used to get the OAuth Access Token from the server.
            string clientId = Variables.ClientIDPS;
            string clientSecret = Variables.ClientSecret;
            string sendToken = EncodeTo64(Variables.ClientIDPS + ":" + Variables.ClientSecret);
            WriteToDatabase(0, "CampusCourse-sendToken", sendToken);
            // this will hold the Access Token returned from the server.
            //MessageBox.Show(sendToken, "sendToken");

            string accessToken = await GetAccessToken(baseURL, sendToken, clientId, clientSecret);
            //-->>>>>>>>>>>>>> Add : if returns null, stop
            if (accessToken == null)
            {
                WriteToDatabase(1, "Access Token", "GetAccessToken returned null");
                return 0;
            }
            //MessageBox.Show(accessToken, "access token");


            string FileSize = await GetFileSize(baseURL, accessToken);
            if (FileSize == null)
            {
                WriteToDatabase(1, "File Size", "GetFileSize returned null");
                return 0;
            }

            var jsonResponse = await GetCampusCourse(baseURL, accessToken, FileSize);

            return 0;
        }
        catch (Exception ex)
        {
            WriteToDatabase(1, "ProcessCampusCourse", ex.Message);
            return 0;
        }

    }


    /// <summary>
    /// Gets the list of Campus Courses.
    /// </summary>
    /// <param name="baseUrl">The url for the Campus Course list</param>
    /// <param name="accessToken">Acquired in the previous method</param>
    /// <returns>The page of articles.</returns>
    private async Task<dynamic> GetCampusCourse(string baseUrl, string accessToken, string FileSize)
    {
        try
        {
            int TotalRecords;
            string pageSize = Variables.PageSize;
            int intPageSize = Convert.ToInt32(pageSize);
            if (Int32.TryParse(FileSize, out TotalRecords))
            {
                int pages = ((TotalRecords - 1) / intPageSize) + 1;
                //MessageBox.Show(pages.ToString(), "pages");

                for (int i = 1; i <= pages; i++)
                {
                    string pagenum = i.ToString();
                    //MessageBox.Show(pagenum, "page number");

                    string uri = baseUrl + pLocation + "?pagesize=" + pageSize + "&page=" + pagenum;
                    var client = new HttpClient();

                    client.BaseAddress = new Uri(uri);

                    client.DefaultRequestHeaders.Accept.Clear();
                    client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));
                    client.DefaultRequestHeaders.Add("Authorization", "Bearer " + accessToken);

                    //MessageBox.Show(uri, "CampusCourse uri");

                    StringContent stringContent = new StringContent("", Encoding.UTF8, "application/json");
                    //StringContent stringContent = new StringContent("page=" + pagenum, Encoding.UTF8, "application/json");
                    //string content;

                    HttpResponseMessage response = await client.PostAsync(new Uri(uri), stringContent);

                    response.EnsureSuccessStatusCode();
                    string jsonString = await response.Content.ReadAsStringAsync();
                    //MessageBox.Show(jsonString, "jsonstring");

                    jsonString = cleanJsonString(jsonString);

                    //Deserialize our JSON
                    DataTable dt = JsonStringToDataTable(jsonString);
                    int numRows = 0;


                    foreach (DataRow row in dt.Rows)
                    {
                        Output0Buffer.AddRow();
                        Output0Buffer.CourseID = row["courseid"].ToString().Replace("\\", "");
                        Output0Buffer.CampusID = row["campusid"].ToString().Replace("\\", "");


                        numRows += 1;
                    }
                    WriteToDatabase(0, "GetCampusCourse - Row Count Page Num: " + pagenum, numRows.ToString());
                }
                return null;
            }
            return null;

        }
        catch (Exception ex)
        {
            WriteToDatabase(1, "GetCampusCourse", ex.Message);
            throw;
        }

    }


    private async Task<string> GetFileSize(string baseURL, string accessToken)
    {
        try
        {
            using (var client = new HttpClient())
            {
                string uri = baseURL + pLocation + "/count";
                client.BaseAddress = new Uri(uri);
                //MessageBox.Show(uri, "Campus Course uri");

                client.DefaultRequestHeaders.Accept.Clear();
                client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));
                client.DefaultRequestHeaders.Add("Authorization", "Bearer " + accessToken);

                var stringContent = new StringContent("", Encoding.UTF8, "application/json");

                //Get file size
                HttpResponseMessage response = await client.PostAsync(new Uri(uri), stringContent);

                response.EnsureSuccessStatusCode();
                string jsonString = await response.Content.ReadAsStringAsync();

                //string jsonString = response.Content.ToString();//.ReadAsStringAsync();
                //MessageBox.Show(jsonString, "jsonstring");

                //Deserialize our JSON
                var FileSizeObject = JsonHelper.JsonDeserialize<FileSize>(jsonString);

                // return the Access Token.
                var FileSize = FileSizeObject.count;
                //MessageBox.Show(FileSize, "File Size");
                WriteToDatabase(0, "RecordCount", FileSize);
                return FileSize;
            }
        }
        catch (Exception ex)
        {
            //MessageBox.Show(ex.Message);
            //MessageBox.Show(ex.StackTrace);
            WriteToDatabase(1, "GetFileSize", ex.Message);
            //return null;
            throw;
        }

    }

    /// <summary>
    /// This method uses the OAuth Client Credentials Flow to get an Access Token to provide
    /// Authorization to the APIs.
    /// </summary>
    /// <returns></returns>
    private static async Task<string> GetAccessToken(string baseURL, string sendToken, string clientId, string clientSecret)
    {
        try
        {
            using (var client = new HttpClient())
            {

                string uri = baseURL + tokenURI;
                client.BaseAddress = new Uri(uri);

                //MessageBox.Show(uri, "access token uri");

                client.DefaultRequestHeaders.Accept.Clear();
                client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/x-www-form-urlencoded"));
                client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Basic", sendToken);

                List<KeyValuePair<string, string>> postData = new List<KeyValuePair<string, string>>();
                postData.Add(new KeyValuePair<string, string>("grant_type", "client_credentials"));
                FormUrlEncodedContent content = new FormUrlEncodedContent(postData);

                // Post to the Server and parse the response.
                HttpResponseMessage response = await client.PostAsync(new Uri(uri), content);

                response.EnsureSuccessStatusCode();
                string jsonString = await response.Content.ReadAsStringAsync();

                //MessageBox.Show(jsonString, "jsonstring");

                //Deserialize our JSON
                var accessTokenObject = JsonHelper.JsonDeserialize<AccessToken>(jsonString);

                // return the Access Token.
                var token = accessTokenObject.access_token;
                //MessageBox.Show(token, "access token");
                return token;
            }
        }
        catch (Exception ex)
        {
            //WriteToDatabase(1, "GetAccessToken", ex.Message);
            //MessageBox.Show(ex.Message);
            //MessageBox.Show(ex.StackTrace);
            //return null;
            throw ex;
        }
    }

    public string EncodeTo64(string toEncode)
    {
        byte[] toEncodeAsBytes = System.Text.ASCIIEncoding.ASCII.GetBytes(toEncode);
        string returnValue = System.Convert.ToBase64String(toEncodeAsBytes);
        return returnValue;

    }
    public class JsonHelper
    {
        /// <summary>
        /// JSON Serialization
        /// </summary>
        public static string JsonSerializer<T>(T t)
        {
            DataContractJsonSerializer ser = new DataContractJsonSerializer(typeof(T));
            MemoryStream ms = new MemoryStream();
            ser.WriteObject(ms, t);
            string jsonString = Encoding.UTF8.GetString(ms.ToArray());
            ms.Close();
            return jsonString;
        }
        /// <summary>
        /// JSON Deserialization
        /// </summary>
        public static T JsonDeserialize<T>(string jsonString)
        {
            DataContractJsonSerializer ser = new DataContractJsonSerializer(typeof(T));
            MemoryStream ms = new MemoryStream(Encoding.UTF8.GetBytes(jsonString));
            T obj = (T)ser.ReadObject(ms);
            return obj;
        }
    }

    public class CampusCourse
    {
        public string CampusID { get; set; }
        public string CourseID { get; set; }

    }

    public class AccessToken
    {
        public string access_token { get; set; }
        public string token_type { get; set; }
        public string expires_in { get; set; }
    }

    public class FileSize
    {
        public string count { get; set; }

    }



    public DataTable JsonStringToDataTable(string jsonString)
    {
        try
        {
            DataTable dt = new DataTable();
            string[] jsonStringArray = Regex.Split(jsonString.Replace("[", "").Replace("]", ""), "},{");
            List<string> ColumnsName = new List<string>();
            foreach (string jSA in jsonStringArray)
            {
                string[] jsonStringData = Regex.Split(jSA.Replace("{", "").Replace("}", ""), ",");
                foreach (string ColumnsNameData in jsonStringData)
                {
                    try
                    {
                        int idx = ColumnsNameData.IndexOf(":");
                        string ColumnsNameString = ColumnsNameData.Substring(0, idx - 1).Replace("\"", "");
                        if (!ColumnsName.Contains(ColumnsNameString))
                        {
                            ColumnsName.Add(ColumnsNameString);
                        }
                    }
                    catch //(Exception ex)
                    {
                        WriteToDatabase(1, "JsonStringToDataTable: Columns", (string.Format("Error Parsing Column Name : {0}", ColumnsNameData)));
                    }
                }
                break;
            }
            foreach (string AddColumnName in ColumnsName)
            {
                dt.Columns.Add(AddColumnName);
            }
            foreach (string jSA in jsonStringArray)
            {
                string[] RowData = Regex.Split(jSA.Replace("{", "").Replace("}", ""), ",");
                DataRow nr = dt.NewRow();
                foreach (string rowData in RowData)
                {
                    try
                    {
                        int idx = rowData.IndexOf(":");
                        string RowColumns = rowData.Substring(0, idx - 1).Replace("\"", "").Replace("\\", "");
                        string RowDataString = rowData.Substring(idx + 1).Replace("\"", "").Replace("\\", "");
                        nr[RowColumns] = RowDataString;
                    }
                    catch //(Exception ex)
                    {
                        WriteToDatabase(1, "JsonStringToDataTable: For each row", (string.Format("Error Parsing Row  Name : {0}", rowData)));
                        continue;
                    }
                }
                dt.Rows.Add(nr);
            }
            return dt;
        }
        catch (Exception ex)
        {
            WriteToDatabase(1, "JsonStringToDataTable", ex.Message);
            return null;
        }
    }

    public string cleanJsonString(string jsonString)
    {

        jsonString = jsonString.Replace("{\"record\":[", "");
        jsonString = jsonString.Replace("],\"@extensions\": \"\"}", "");

        return jsonString;
    }


    public void WriteToDatabase(int Error, string Area, string LogInfo)
    {
        try
        {
            //MessageBox.Show("WriteToDatabase");
            var ConnString = Connections.PSDB.ConnectionString;

            using (SqlConnection conn = new SqlConnection(Connections.PSDB.ConnectionString))
            {
                if (conn.State != ConnectionState.Open) conn.Open();
                //string insertText = "Insert into PSLog (ClientUID, FileType, Area, LogInfo) Values (@ClientUID, @FileType, @Area, @LogInfo ) ";
                SqlCommand cmd = new SqlCommand("spLogInfo", conn);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("@ClientUID", SqlDbType.Int).Value = Variables.ClientID;
                cmd.Parameters.Add("@Error", SqlDbType.Int).Value = Error;
                cmd.Parameters.Add("@FileType", SqlDbType.VarChar, 50).Value = processType;
                cmd.Parameters.Add("@Area", SqlDbType.VarChar, 100).Value = Area;
                cmd.Parameters.Add("@LogInfo", SqlDbType.VarChar, 1000).Value = LogInfo;
                cmd.ExecuteNonQuery();
            }
        }
        catch //(Exception ex)
        {
            throw;
        }
    }
}




]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[packages.config]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="Newtonsoft.Json" version="12.0.3" targetFramework="net45" />
</packages>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 PSDB
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"PSDB").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public Int32 ClientID
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["ClientID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientIDPS
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientIDPS"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientSecret
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientSecret"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientServer
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientServer"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String PageSize
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["PageSize"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_166304a2d4f649718955be76bd772ab1.Properties.Settings.get_Default():SC_166304a2d4f649718955be76bd772ab1.Properties.Sett" +
    "ings")]

namespace SC_166304a2d4f649718955be76bd772ab1.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_166304a2d4f649718955be76bd772ab1.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{8B7D44F2-6737-4DB9-9EA3-0590166846CB}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_166304a2d4f649718955be76bd772ab1</RootNamespace>
    <AssemblyName>SC_166304a2d4f649718955be76bd772ab1</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Newtonsoft.Json, Version=12.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <HintPath>C:\Users\nblakely\AppData\Local\Temp\Vsta\SSIS_SC120\VstaVjUxCgSrxkWiOo__BxhsiIw\packages\Newtonsoft.Json.12.0.3\lib\net45\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Runtime.Serialization" />
    <Reference Include="System.Web.Extensions" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
      <DesignTime>True</DesignTime>
    </Compile>
    <None Include="packages.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String CourseID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool CourseID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CampusID
    {
        set
        {
            this[1] = value;
        }
    }
    public bool CampusID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_166304a2d4f649718955be76bd772ab1</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_166304a2d4f649718955be76bd772ab1</msb:DisplayName>
    <msb:ProjectId>{0528B647-6C53-42A3-A4D3-943900633F03}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_166304a2d4f649718955be76bd772ab1.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="packages.config" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_166304a2d4f649718955be76bd772ab1")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_166304a2d4f649718955be76bd772ab1")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_166304a2d4f649718955be76bd772ab1.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_166304a2d4f649718955be76bd772ab1.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_166304a2d4f649718955be76bd772ab1.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_166304a2d4f649718955be76bd772ab1.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_166304a2d4f649718955be76bd772ab1.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_166304a2d4f649718955be76bd772ab1.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[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
AAAE/hUNAAAbAhUlCn0tAAAEEgQohAAACiVvhQAACiZvhgAACm+HAAAKb2cAAAoTBRIFKGgAAAot
PgIXJQp9LQAABAIRBX0zAAAEAnwuAAAEEgUCKA0AACvedwJ7MwAABBMFAnwzAAAE/hUIAAAbAhUl
Cn0tAAAEEgUoagAACigOAAArbzMAAAYL3jIGFi8TAnsxAAAELAsCezEAAARvMgAACtx6EwYCH/59
LQAABAJ8LgAABBEGKJEAAAreFAIf/n0tAAAEAnwuAAAEByiSAAAKKgBBTAAAAgAAABwAAACAAQAA
nAEAABgAAAAAAAAAAAAAAAwAAACoAQAAtAEAAAEAAAAXAAABAAAAAAcAAACuAQAAtQEAABkAAAAX
AAABNgJ8LgAABAMokwAACioAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAABQR
AAAjfgAAgBEAAHASAAAjU3RyaW5ncwAAAADwIwAAIAcAACNVUwAQKwAAEAAAACNHVUlEAAAAICsA
AFgGAAAjQmxvYgAAAAAAAAACAAABVxeiCwkPAAAA+gEzABYAAAEAAABbAAAAEAAAADMAAABEAAAA
KgAAAAQAAACZAAAALwAAAAwAAAAIAAAAFAAAABsAAAAIAAAADwAAAAEAAAAKAAAAAQAAAAgAAAAC
AAAADgAAAAAArwkBAAAAAAAGALMHKA4GAEcIKA4GAMwGFQ4PAJwOAAAGAPkGOQsGAJYHOQsGAHcH
OQsGAC4IOQsGANMHOQsGAOwHOQsGACsHOQsGAEYHFgkKAAcIDAUGAG0FQwoGABAHKA4GAL0AMQ8O
AIMGKA4GAFwQQwoSAHgEswIGAAcB3gJTAPMNAAASAC0SswIGAOELQwoSALYLxhAGACQKkwIGAJQG
KA4GAEcFQwoGANwEKA4GAPkAKA4GAOAAKA4GAF8HFQ4WAEMRkwwWAFgEkwwGAOQNfA8GAIIEQwoW
ANwQkwwWAC0RkwwKANMMDAUaAMQMDAUKADQMDAUKAAURDAUeAGYAKQ0GAK8GFQ4GAOQMSA4GACAM
9QoiAFMGmQkiAOAGmQkiAN8F4AoGAJQJMQ8GAA0J3REGAJ8RQwoGAHsJQwoiAEMSXQ8SAEsLswIS
AMsKswISAJcLswISAKkL6wsSAGgGswISAAgExhASAP4D6wsSADsFswISAIALxhASAIYNxhASAC0F
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
wAgAAAEAKxIAAAEAZAkAAAEAwAgAAAEAwAgAAAEAwAgAAAEAwAgAAAEAwAgAAAEAwAgAAAEA/wQA
AAEA/wQAAAEA/wQAAAEA/wQNAHEADgBxAA8AcQAQAHEACQD+DQEAEQD+DQYAGQD+DQoAKQD+DRAA
MQD+DRAAOQD+DRAAQQD+DRAASQD+DRAAUQD+DRAAWQD+DRAAYQD+DRAAaQD+DQYAeQD+DRUAiQD+
DRsA0QD+DQYA4QDUEQYA4QDvBCEA+QD+DQYAWQH+DQYAeQH+DScASQFlCAYASQFwCAYAiQGbEAYA
DABCBjkADACZEUIADACQCU8AFABCBjkAFACZEUIAFACQCU8AHABCBjkAHACZEUIAHACQCU8AkQF4
AoIAkQHwDogAmQEwCY4AmQD+DQYAoQETBLkAqQGgEL8AJAD+DQYAoQEFCcwAoQGCCdEAJABID9cA
JAAeA90AoQFFEOMAJADwDekALAAVEfgAmQBRD/0AsQEeAwMBLADUEQoBGQENBgYAmQA8Eg4BoQGC
CRMBsQA6ChgBmQAhEB4BwQEeAyQBuQBMBCoBUQE/CSoBwQD+DRAAyQFJBjMByQGdCgYA2QH+DTkB
4QE3BUAB2QH0D0cB8QEeA00BEQJ8CFcB8QEeA1wB4QFeEmcBMQH+DWsBMQE6CncBMQH/CQEAGQL+
DRAAMQE1EgYAMQGMEAYAMQGPEAoBSQH+DQYASQFsAoEBSQEND4kBkQD+DQYASQG/Ao8BIQJgC5UB
KQLBBJsBMQL0DKIBSQHaDqgBOQIxCq4BSQEYErUBQQLpEbsBcQCgBMIBcQBREsoBYQH+DdABgQH+
DQYAaQL+DRUAyQD+DQYAcQJXEOABkQHpAYIAyQBJEugBkQF4Ce0BeQIHBgYAyQD+DfMBcQJMEPkB
gQLGCBoCgQIHCh8CoQE+ECYCPACTDTMCRABNAwoBDAA2A0ICRACyEPgATACTDTMCVABNAwoBVACy
EPgADADeC20CDAC8EN0ADADvBCEAmQEyAZsCCQIVBqACCQJvCSoBoQE+EKcCIQH+DQYAkQL+DRAA
IQEDEK0CIQHSD7QCmQJxEboCXACjDAYAqQL+DRAAXAAeA90AoQE+EM4CsQIeA9QCAQH+DdoCIQEL
A+MCZACTDTMCbABNAwoBFAA2A0ICbACyEPgACQErBA8DCQEhERUDuQL5AhsDwQLwDS0DEQEVETMD
sQAxCjcDkQBvCSoBEQHUEQoBFADeC20CFAC8EN0AFADvBCEAHAA2A0ICHADeC20CHAC8EN0AHADv
BCEAyQL+DdQCmQInC4oDdAD+DQYAfAD+DaUDdAAeA90AKQH+Da0DJABzAEwGLgALAO8ELgATAPgE
LgAbABcFLgAjACAFLgArAEkFLgAzAEkFLgA7AEkFLgBDACAFLgBLAE8FLgBTAEkFLgBbAGYFQwBj
AEcGgABrALAFoABrANoFwABrAAAG4ABrACIG4wCbAEcGYQF7AEcGgQF7AEcGiQGjABcFoQF7AEcG
owF7AEcGqQGjABcFwQF7AEcGwwF7AEcG4QF7AEcG4wF7AEcGAQJ7AEcGAwJ7AEcGIQJ7AEcGwAV7
AEcG4AV7AEcGAAZ7AEcGIAZ7AEcGYAZ7AEcGgAZ7AEcGoAZ7AEcGwAZ7AEcG4AZ7AEcGAAd7AEcG
QAd7AEcGYAd7AEcGwAeTAEcGAAiTAEcGQAiTAEcGgAiTAEcGLgBYAGgAeACUAC4BfQHYAQACcwI8
A3MDAwABAAUABQAGAAYABwAMAAgADgAKAA8ACwARAAwAFAAAADwCzAQAANsJ0AQAAFYCzAQAAO8J
0AQAACYC1AQAAGMC2gQAAKECzAQAALYEzAQAAHIQzAQAAKINzAQAAOAIzAQAAOQM3gQAALwF5AQA
AKoQ6gQAAFYCzAQAADwCzAQAAJAKzAQAAIUFzAQAALUKzAQAAGsRzAQBAA8AAwABABAABQABABEA
BwABABIACQACABwACwACAB4ADQACAB8ADwACACAAEQACACEAEwACACIAFQACACMAFwACACUAGQAC
ACYAGwABACcAGwACACgAHQACAC4AHwABAC8AHwACADAAIQABADEAIQACADMAIwABADQAIwACADUA
JQABADYAJQACADcAJwABADgAJwACADoAKQABADsAKQANAHoAIQANAHwAIwAOAH4AIQAOAIAAIwAP
AIIAIQAPAIQAIwAQAIYAIQAQAIgAIwAzAF0AbQDGAPIA3QEtAjwCVwJdAsUC8wL7ApEDnQMEgAAA
AQAAAAAAAAAAAAAAAAAOAQAABAAAAAAAAAAAAAAA2APVAgAAAAAPAAAAAAAAAAAAAADhA3wRAAAA
AAQAAAAAAAAAAAAAANgDkAUAAAAABAAAAAAAAAAAAAAA2AOzAgAAAAAEAAAAAAAAAAAAAADqA5MM
AAAAAA8AAAAAAAAAAAAAAOEDpxEAAAAADwAAAAAAAAAAAAAA4QNMDAAAAAAEAAAAAAAAAAAAAADY
A0MKAAAAAA8AAAAAAAAAAAAAAOEDbwwAAAAABAAAAAAAAAAAAAAA2AMKCwAAAAAAAAAAAQAAAFkO
AAAJAAIACgACAAsAAgAMAAIADQACAA4AAgAPAAIAEAACAAAAAABXAKwCAAAAAFkArAIzAEoAOQBj
AD8AcwA/AH0A0wBNAtMAYwIHAQMDBwEjAyEBWAMhAWQDWABuAyEBvQMhAckDWADTAwAAAAAASURU
U0NvbXBvbmVudE1ldGFEYXRhMTAwAElEVFNWYXJpYWJsZTEwMABJRFRTUnVudGltZUNvbm5lY3Rp
b25Db2xsZWN0aW9uMTAwAElEVFNSdW50aW1lQ29ubmVjdGlvbjEwMABJRFRTQ29ubmVjdGlvbk1h
bmFnZXIxMDAASURUU1ZhcmlhYmxlczEwMABJRFRTRXZhbHVhdG9yQ29udGV4dDEwMAA8PnVfXzEA
SUVudW1lcmFibGVgMQBUYXNrYDEASHR0cEhlYWRlclZhbHVlQ29sbGVjdGlvbmAxAEFzeW5jVGFz
a01ldGhvZEJ1aWxkZXJgMQBUYXNrQXdhaXRlcmAxAExpc3RgMQBTQ18xNjYzMDRhMmQ0ZjY0OTcx
ODk1NWJlNzZiZDc3MmFiMQBUb0ludDMyADxiYXNlVVJMPjVfXzIAPHBhZ2VTaXplPjVfXzIAPGNs
aWVudD41X18yADw+dV9fMgBLZXlWYWx1ZVBhaXJgMgA8YWNjZXNzVG9rZW4+NV9fMwA8cGFnZXM+
NV9fMwBFbmNvZGVUbzY0ADxpPjVfXzQAPHBhZ2VudW0+NV9fNQA8UHJvY2Vzc0NhbXB1c0NvdXJz
ZT5kX182ADxHZXRDYW1wdXNDb3Vyc2U+ZF9fNwBnZXRfVVRGOAA8R2V0RmlsZVNpemU+ZF9fOAA8
R2V0QWNjZXNzVG9rZW4+ZF9fOQA8TW9kdWxlPgBnZXRfUFNEQgBnZXRfQ291cnNlSUQAc2V0X0Nv
dXJzZUlEAGdldF9DYW1wdXNJRABzZXRfQ2FtcHVzSUQAZ2V0X0NsaWVudElEAEdldE91dHB1dElE
AGdldF9BU0NJSQB0b2tlblVSSQBiYXNlVVJMAFN5c3RlbS5JTwBnZXRfQ2xpZW50SURQUwBUAEFy
ZWEAU3lzdGVtLkRhdGEAZ2V0X0NvbXBvbmVudE1ldGFEYXRhAG1zY29ybGliAFN5c3RlbS5Db2xs
ZWN0aW9ucy5HZW5lcmljAFJlYWRBc1N0cmluZ0FzeW5jAFBvc3RBc3luYwBjbGllbnRJZABBZGQA
TWFya091dHB1dHNGaW5pc2hlZABBd2FpdFVuc2FmZU9uQ29tcGxldGVkAGdldF9Jc0NvbXBsZXRl
ZAA8Q291cnNlSUQ+a19fQmFja2luZ0ZpZWxkADxDYW1wdXNJRD5rX19CYWNraW5nRmllbGQAPHRv
a2VuX3R5cGU+a19fQmFja2luZ0ZpZWxkADxhY2Nlc3NfdG9rZW4+a19fQmFja2luZ0ZpZWxkADxl
eHBpcmVzX2luPmtfX0JhY2tpbmdGaWVsZAA8Y291bnQ+a19fQmFja2luZ0ZpZWxkAERiQ29tbWFu
ZABTcWxDb21tYW5kAFJlcGxhY2UAZGVmYXVsdEluc3RhbmNlAEVuc3VyZVN1Y2Nlc3NTdGF0dXND
b2RlAHRvRW5jb2RlAGdldF9NZXNzYWdlAEh0dHBSZXNwb25zZU1lc3NhZ2UASnNvblN0cmluZ1Rv
RGF0YVRhYmxlAElEaXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxl
AGdldF9DbGllbnROYW1lAEdldFJ1bnRpbWVDb25uZWN0aW9uQnlOYW1lAElBc3luY1N0YXRlTWFj
aGluZQBTZXRTdGF0ZU1hY2hpbmUAc3RhdGVNYWNoaW5lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRz
LlBpcGVsaW5lAFNxbERiVHlwZQBzZXRfQ29tbWFuZFR5cGUAVmFsdWVUeXBlAFNlY3VyaXR5UHJv
dG9jb2xUeXBlAHByb2Nlc3NUeXBlAGdldF90b2tlbl90eXBlAHNldF90b2tlbl90eXBlAFN5c3Rl
bS5Db3JlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBJbnRlcm5hbERh
dGFDb2xsZWN0aW9uQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBXcml0ZVRvRGF0YWJhc2UA
Q2xvc2UARGlzcG9zZQBUcnlQYXJzZQBQcm9jZXNzQ2FtcHVzQ291cnNlAEdldENhbXB1c0NvdXJz
ZQBDcmVhdGUAZ2V0X1N0YXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbm5lY3Rpb25TdGF0ZQA8
PjFfX3N0YXRlAER5bmFtaWNBdHRyaWJ1dGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVi
dWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dz
YWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzeW5jU3RhdGVNYWNoaW5lQXR0
cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0
ZQBEZWJ1Z2dlckhpZGRlbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUA
QXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmli
dXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBT
U0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRy
aWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0
ZQBzZXRfVmFsdWUAQXV0aGVudGljYXRpb25IZWFkZXJWYWx1ZQBNZWRpYVR5cGVXaXRoUXVhbGl0
eUhlYWRlclZhbHVlAHZhbHVlAHNldF9FeHBlY3QxMDBDb250aW51ZQBnZXRfUGFnZVNpemUAR2V0
RmlsZVNpemUASnNvbkRlc2VyaWFsaXplAEluZGV4T2YARW5jb2RpbmcAU3lzdGVtLlJ1bnRpbWUu
VmVyc2lvbmluZwBUb0Jhc2U2NFN0cmluZwBnZXRfQ29ubmVjdGlvblN0cmluZwBjbGVhbkpzb25T
dHJpbmcAanNvblN0cmluZwBUb1N0cmluZwBHZXRTdHJpbmcAU3Vic3RyaW5nAFVyaQBnZXRfVGFz
awBTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0NfMTY2MzA0YTJkNGY2NDk3MTg5NTViZTc2YmQ3NzJh
YjEuZGxsAHNldF9Db3Vyc2VJRF9Jc051bGwAc2V0X0NhbXB1c0lEX0lzTnVsbABTZXROdWxsAHNl
dF9TZWN1cml0eVByb3RvY29sAGJhc2VVcmwATWVtb3J5U3RyZWFtAGdldF9JdGVtAHNldF9JdGVt
AFN5c3RlbQByZXNvdXJjZU1hbgBzZW5kVG9rZW4AR2V0QWNjZXNzVG9rZW4AYWNjZXNzVG9rZW4A
Z2V0X2FjY2Vzc190b2tlbgBzZXRfYWNjZXNzX3Rva2VuAE9wZW4AZ2V0X2V4cGlyZXNfaW4Ac2V0
X2V4cGlyZXNfaW4AU2NyaXB0TWFpbgBEYXRhQ29sdW1uAHBMb2NhdGlvbgBTeXN0ZW0uQ29uZmln
dXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUnVudGltZS5TZXJpYWxpemF0aW9u
AHNldF9BdXRob3JpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAERhdGFDb2x1bW5Db2xsZWN0aW9u
AGdldF9SdW50aW1lQ29ubmVjdGlvbkNvbGxlY3Rpb24AU3FsUGFyYW1ldGVyQ29sbGVjdGlvbgBE
YXRhUm93Q29sbGVjdGlvbgBEYkNvbm5lY3Rpb24AU3FsQ29ubmVjdGlvbgBJbnZhbGlkT3BlcmF0
aW9uRXhjZXB0aW9uAFNldEV4Y2VwdGlvbgBTeXN0ZW0uRGF0YS5Db21tb24AU3lzdGVtLlJ1bnRp
bWUuU2VyaWFsaXphdGlvbi5Kc29uAEN1bHR1cmVJbmZvAExvZ0luZm8AT3V0cHV0TmFtZU1hcABP
dXRwdXRNYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNSdW50aW1lV3JhcABNaWNyb3NvZnQuU3Fs
U2VydmVyLkRUU1BpcGVsaW5lV3JhcABTeXN0ZW0uTmV0Lkh0dHAAQ2xlYXIAPD50X19idWlsZGVy
AE91dHB1dDBCdWZmZXIAUGlwZWxpbmVCdWZmZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1h
bmFnZXIAZ2V0X0Nvbm5lY3Rpb25NYW5hZ2VyAFNlcnZpY2VQb2ludE1hbmFnZXIASnNvbkhlbHBl
cgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lLldyYXBwZXIATWljcm9zb2Z0LlNxbFNl
cnZlci5EdHMuUGlwZWxpbmUuV3JhcHBlcgBEYlBhcmFtZXRlcgBTcWxQYXJhbWV0ZXIAR2V0QXdh
aXRlcgBnZXRfQ2xpZW50U2VydmVyAERhdGFDb250cmFjdEpzb25TZXJpYWxpemVyAFhtbE9iamVj
dFNlcmlhbGl6ZXIARXJyb3IASUVudW1lcmF0b3IAR2V0RW51bWVyYXRvcgAuY3RvcgAuY2N0b3IA
T3V0cHV0SURzAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZp
Y2VzAFN5c3RlbS5SZXNvdXJjZXMAU0NfMTY2MzA0YTJkNGY2NDk3MTg5NTViZTc2YmQ3NzJhYjEu
UHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNDXzE2NjMwNGEy
ZDRmNjQ5NzE4OTU1YmU3NmJkNzcyYWIxLlByb3BlcnRpZXMAZ2V0X1JlYWRPbmx5VmFyaWFibGVz
AEdldEJ5dGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwA8
PjRfX3RoaXMAU3lzdGVtLlRocmVhZGluZy5UYXNrcwBDb250YWlucwBnZXRfQ29sdW1ucwBTeXN0
ZW0uVGV4dC5SZWd1bGFyRXhwcmVzc2lvbnMAU3lzdGVtLkNvbGxlY3Rpb25zAENvbm5lY3Rpb25z
AFN5c3RlbS5OZXQuSHR0cC5IZWFkZXJzAEh0dHBIZWFkZXJzAEh0dHBSZXF1ZXN0SGVhZGVycwBn
ZXRfRGVmYXVsdFJlcXVlc3RIZWFkZXJzAEJ1ZmZlcnMAZ2V0X1BhcmFtZXRlcnMAc2V0X0Jhc2VB
ZGRyZXNzAEZpbmlzaE91dHB1dHMAZ2V0X1Jvd3MAQ3JlYXRlTmV3T3V0cHV0Um93cwBDb25jYXQA
Rm9ybWF0AFJlYWRPYmplY3QAV3JpdGVPYmplY3QAU3lzdGVtLk5ldABnZXRfQ2xpZW50U2VjcmV0
AGNsaWVudFNlY3JldABTZXRFbmRPZlJvd3NldABXYWl0AFNwbGl0AGdldF9EZWZhdWx0AEdldFJl
c3VsdABTZXRSZXN1bHQAU3lzdGVtLkRhdGEuU3FsQ2xpZW50AEh0dHBDbGllbnQAVXNlckNvbXBv
bmVudABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9uZW50AGdldF9DdXJyZW50AGdldF9Db250
ZW50AEZvcm1VcmxFbmNvZGVkQ29udGVudABTdHJpbmdDb250ZW50AEh0dHBDb250ZW50AGdldF9j
b3VudABzZXRfY291bnQAZ2V0X0FjY2VwdABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AFN0
YXJ0AENvbnZlcnQATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QAUHJpbWVPdXRwdXQA
TW92ZU5leHQAU3lzdGVtLlRleHQAR2V0VmFsdWVXaXRoQ29udGV4dABTY3JpcHRDb21wb25lbnRF
dmFsQ29udGV4dABnZXRfRXZhbHVhdG9yQ29udGV4dABEYXRhUm93AEFkZFJvdwBOZXdSb3cAUmVn
ZXgAVG9BcnJheQBnZXRfQXNzZW1ibHkARXhlY3V0ZU5vblF1ZXJ5AAAAAANbAAABAANdAAAHfQAs
AHsAAAN7AAADfQAAAywAAAM6AAADIgAAPUoAcwBvAG4AUwB0AHIAaQBuAGcAVABvAEQAYQB0AGEA
VABhAGIAbABlADoAIABDAG8AbAB1AG0AbgBzAAA/RQByAHIAbwByACAAUABhAHIAcwBpAG4AZwAg
AEMAbwBsAHUAbQBuACAATgBhAG0AZQAgADoAIAB7ADAAfQAAA1wAAEdKAHMAbwBuAFMAdAByAGkA
bgBnAFQAbwBEAGEAdABhAFQAYQBiAGwAZQA6ACAARgBvAHIAIABlAGEAYwBoACAAcgBvAHcAADtF
AHIAcgBvAHIAIABQAGEAcgBzAGkAbgBnACAAUgBvAHcAIAAgAE4AYQBtAGUAIAA6ACAAewAwAH0A
ACtKAHMAbwBuAFMAdAByAGkAbgBnAFQAbwBEAGEAdABhAFQAYQBiAGwAZQAAF3sAIgByAGUAYwBv
AHIAZAAiADoAWwAAKV0ALAAiAEAAZQB4AHQAZQBuAHMAaQBvAG4AcwAiADoAIAAiACIAfQAAE3MA
cABMAG8AZwBJAG4AZgBvAAAVQABDAGwAaQBlAG4AdABVAEkARAAADUAARQByAHIAbwByAAATQABG
AGkAbABlAFQAeQBwAGUAAAtAAEEAcgBlAGEAABFAAEwAbwBnAEkAbgBmAG8AAGUvAHcAcwAvAHMA
YwBoAGUAbQBhAC8AcQB1AGUAcgB5AC8AYwBvAG0ALgBoAGEAeQBlAHMAcwBvAGYAdAAuAFQASQBQ
AFcAZQBiAC4AYwBhAG0AcAB1AHMAQwBvAHUAcgBzAGUAACkvAG8AYQB1AHQAaAAvAGEAYwBjAGUA
cwBzAF8AdABvAGsAZQBuAC8AABlDAGEAbQBwAHUAcwBDAG8AdQByAHMAZQAAgJtJAHMATgB1AGwA
bAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABG
AGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAA
YwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AABFPAHUAdABwAHUAdAAgADAAAAlQAFMARABC
AAARQwBsAGkAZQBuAHQASQBEAAAVQwBsAGkAZQBuAHQASQBEAFAAUwAAFUMAbABpAGUAbgB0AE4A
YQBtAGUAABlDAGwAaQBlAG4AdABTAGUAYwByAGUAdAAAGUMAbABpAGUAbgB0AFMAZQByAHYAZQBy
AAARUABhAGcAZQBTAGkAegBlAABxUwBDAF8AMQA2ADYAMwAwADQAYQAyAGQANABmADYANAA5ADcA
MQA4ADkANQA1AGIAZQA3ADYAYgBkADcANwAyAGEAYgAxAC4AUAByAG8AcABlAHIAdABpAGUAcwAu
AFIAZQBzAG8AdQByAGMAZQBzAAAtQwBhAG0AcAB1AHMAQwBvAHUAcgBzAGUALQBzAGUAbgBkAFQA
bwBrAGUAbgABGUEAYwBjAGUAcwBzACAAVABvAGsAZQBuAAA5RwBlAHQAQQBjAGMAZQBzAHMAVABv
AGsAZQBuACAAcgBlAHQAdQByAG4AZQBkACAAbgB1AGwAbAAAE0YAaQBsAGUAIABTAGkAegBlAAAz
RwBlAHQARgBpAGwAZQBTAGkAegBlACAAcgBlAHQAdQByAG4AZQBkACAAbgB1AGwAbAAAJ1AAcgBv
AGMAZQBzAHMAQwBhAG0AcAB1AHMAQwBvAHUAcgBzAGUAABU/AHAAYQBnAGUAcwBpAHoAZQA9AAAN
JgBwAGEAZwBlAD0AACFhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwBqAHMAbwBuAAAbQQB1AHQAaABv
AHIAaQB6AGEAdABpAG8AbgAAD0IAZQBhAHIAZQByACAAABFjAG8AdQByAHMAZQBpAGQAABFjAGEA
bQBwAHUAcwBpAGQAAE1HAGUAdABDAGEAbQBwAHUAcwBDAG8AdQByAHMAZQAgAC0AIABSAG8AdwAg
AEMAbwB1AG4AdAAgAFAAYQBnAGUAIABOAHUAbQA6ACAAAR9HAGUAdABDAGEAbQBwAHUAcwBDAG8A
dQByAHMAZQAADS8AYwBvAHUAbgB0AAAXUgBlAGMAbwByAGQAQwBvAHUAbgB0AAAXRwBlAHQARgBp
AGwAZQBTAGkAegBlAABDYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AeAAtAHcAdwB3AC0AZgBvAHIA
bQAtAHUAcgBsAGUAbgBjAG8AZABlAGQAAQtCAGEAcwBpAGMAABVnAHIAYQBuAHQAXwB0AHkAcABl
AAAlYwBsAGkAZQBuAHQAXwBjAHIAZQBkAGUAbgB0AGkAYQBsAHMAAAAApMMikwL4oEeU2l2NiIhE
TAAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQESOQUgAQEdAgUgAQEScQYgAQERgLkEBwERNAUVEXkB
CAgAABUReQETAAcwAQEBEB4ABAoBETQIIAAVEkEBEwAEBwEROAUVEXkBHAQKARE4BAcBETwFFRF5
AQ4ECgERPAQHARFABAoBEUAFAAASgMkFIAEdBQ4FAAEOHQUkBxMSTR0OFRJRAQ4dDggdDggOCA4V
EVUBDg4SWQ4IDg4STRJdBSACDg4OBgACHQ4ODgUVElEBDgQgAQgOBSACDggIBSABAhMABSABARMA
BQACDg4cCCAAFRFVARMABRURVQEOBCAAEwAFIAASgNkGIAESgN0OAyAAAgQgABJZBCABDggFIAIB
DhwFIAASgOEFIAEBElkDIAAOBAcBEmEFIAARgOkGIAIBDhJhBiABARGA9QUgABKA+QkgAhKA/Q4R
gQEEIAEBHAogAxKA/Q4RgQEIAyAACAsgAwESgJ0dCBKAoQUgAgEIHAMHAQgHAAIIEoChDgUgAR0I
CAUgABKBEQUgABKBFQYgARKBGQ4FIAASgKkFIAASgR0GIAESgSEcBQAAEoElBiABHBKBKQcAARI5
EYEtBSAAEoExByACAQ4SgTEEBwESZQIeAAcgAgESgT0cBCAAHQUFIAEOHQUFIAEBHQUGIAEcEoE9
GQcMCBIICA4ODg4OFRF1AQ4VEXUBHBJdEl0EAAEBAgYAAQERgUUGAAMODg4OBRUSQQEOCCAAFRF1
ARMABRURdQEOCjACAgEQHgAQHgEJCgIVEXUBDhE0BRUSQQEcBRURdQEcCQoCFRF1ARwRNAUgAQES
XScHEQgSCBwICA4SgIEOCBURdQESgIUVEXUBDhKAiRJZEoCNCBJdEl0EAAEIDgYAAgIOEAgFAAEO
HQ4GIAEBEoFJBSAAEoFNCiAAFRKBUQESgVUIFRKBUQESgVUFAAIODg4FIAIBDg4IIAMBDhKAyQ4P
IAIVEkEBEoCFEoFJEoFdBxUSQQESgIUHFRF1ARKAhQsKAhURdQESgIUROAUgABKAhQUgABKBXQcg
ABUSQQEOCQoCFRF1AQ4ROAUgABKAiQMgABwEIAEcDhsHCggSCA4OEoCBDhURdQESgIUVEXUBDhJd
El0LCgIVEXUBEoCFETwJCgIVEXUBDhE8BAoBEjAWBwcIDg4SgJUVEXUBEoCFFRF1AQ4SXQYgAQES
gWULFRJRARURgWkCDg4HFRGBaQIODgcgAgETABMBDyABARUSgW0BFRGBaQIODgsKAhURdQESgIUR
QAkKAhURdQEOEUAECgESLAi3elxWGTTgiQiJhF3NgIDMkQiwP19/EdUKOgIGDgMGEhQDBhIYAwYS
DAQGEoClBAYSgLEEBhKAtQMGEiACBggGBhUReQEIAwYSCAYGFRF1AQ4GBhURdQEcBgYVEXkBHAgG
FRF1ARKAhQYGFRF5AQ4EBhKAkQcgABUSQQEICiADFRJBARwODg4JIAIVEkEBDg4OCwAEFRJBAQ4O
Dg4OBCABDg4FIAESTQ4GIAMBCA4OAwAAAQQgAQECDSAEAQgdCB0SgJ0SgKEGIAEBEoClBQAAEoCx
BQAAEoC1BgABARKAtQQAABIgBhABAQ4eAAYQAQEeAA4DKAAOAygAAgUoABKAqQMoAAgFCAASgLEF
CAASgLUECAASIAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAA
AAAoAQAjU0NfMTY2MzA0YTJkNGY2NDk3MTg5NTViZTc2YmQ3NzJhYjEAAAUBAAAAABYBABFDb3B5
cmlnaHQgQCAgMjAyMAAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdv
cmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcpAQAkU2NyaXB0TWFpbis8UHJvY2Vzc0Nh
bXB1c0NvdXJzZT5kX182AAAlAQAgU2NyaXB0TWFpbis8R2V0Q2FtcHVzQ291cnNlPmRfXzcAACEB
ABxTY3JpcHRNYWluKzxHZXRGaWxlU2l6ZT5kX184AAAkAQAfU2NyaXB0TWFpbis8R2V0QWNjZXNz
VG9rZW4+ZF9fOQAABAEAAAAKAQACAAAAAAEAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNv
dXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9
bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2Vz
LlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAA6GYAAAAAAAAAAAAAAmcA
AAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPRmAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3Jl
ZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAA
AAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYgAAA7AMAAAAAAAAAAAAA7AM0AAAA
VgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEAAAABAAAAAAAAAAEAAAAA
AD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8A
AAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBEwDAAABAFMAdAByAGkAbgBn
AEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAwADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0A
ZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBG
AGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8AMQA2ADYAMwAwADQAYQAyAGQA
NABmADYANAA5ADcAMQA4ADkANQA1AGIAZQA3ADYAYgBkADcANwAyAGEAYgAxAAAAMAAIAAEARgBp
AGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAwAAAAcAAoAAEASQBuAHQAZQByAG4A
YQBsAE4AYQBtAGUAAABTAEMAXwAxADYANgAzADAANABhADIAZAA0AGYANgA0ADkANwAxADgAOQA1
ADUAYgBlADcANgBiAGQANwA3ADIAYQBiADEALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8A
cAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADIAMAAAACoAAQAB
AEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4A
YQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfADEANgA2ADMAMAA0AGEAMgBkADQAZgA2ADQAOQA3
ADEAOAA5ADUANQBiAGUANwA2AGIAZAA3ADcAMgBhAGIAMQAuAGQAbABsAAAAaAAkAAEAUAByAG8A
ZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwAxADYANgAzADAANABhADIAZAA0AGYANgA0ADkANwAx
ADgAOQA1ADUAYgBlADcANgBiAGQANwA3ADIAYQBiADEAAAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYA
ZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAOAAIAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAYAAADAAAABQ3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_166304a2d4f649718955be76bd772ab1</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::ClientID,User::ClientIDPS,User::ClientName,User::ClientSecret,User::ClientServer,User::PageSize</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">1b220b00794c6a63153494874d557add</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">58a51016c8a6e02236f941a9ec415d01c8e3cc57</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">CD</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Loop thru Clients\Courses\Script Component.Connections[PSDB]"
                      connectionManagerID="Package.ConnectionManagers[OneRosterNET]"
                      connectionManagerRefId="Package.ConnectionManagers[OneRosterNET]"
                      name="PSDB" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Loop thru Clients\Courses\Script Component.Outputs[Output 0]"
                      hasSideEffects="true"
                      name="Output 0">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop thru Clients\Courses\Script Component.Outputs[Output 0].Columns[CourseID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Courses\Script Component.Outputs[Output 0].Columns[CourseID]"
                          name="CourseID" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Courses\Script Component.Outputs[Output 0].Columns[CampusID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Courses\Script Component.Outputs[Output 0].Columns[CampusID]"
                          name="CampusID" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Loop thru Clients\Courses.Paths[Derived Column Output]"
                  endId="Package\Loop thru Clients\Courses\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Loop thru Clients\Courses\Derived Column.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Loop thru Clients\Courses.Paths[Output 0]"
                  endId="Package\Loop thru Clients\Courses\Derived Column.Inputs[Derived Column Input]"
                  name="Output 0"
                  startId="Package\Loop thru Clients\Courses\Script Component.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Loop thru Clients\Enrollements"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:Disabled="True"
          DTS:DTSID="{1A07FD0C-8880-48C1-B990-A9FD4F58D4F6}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Enrollements"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">@[User::ProcessTeacherSchedule]==0</DTS:PropertyExpression>
          <DTS:ObjectData>
            <pipeline
              defaultBufferMaxRows="50000"
              version="1">
              <components>
                <component
                  refId="Package\Loop thru Clients\Enrollements\Derived Column"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Loop thru Clients\Enrollements\Derived Column.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Loop thru Clients\Enrollements\Derived Column.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Loop thru Clients\Enrollements\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop thru Clients\Enrollements\Derived Column.Outputs[Derived Column Output].Columns[ClientUID]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Loop thru Clients\Enrollements\Derived Column.Outputs[Derived Column Output].Columns[ClientUID]"
                          name="ClientUID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::ClientID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::ClientID]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Loop thru Clients\Enrollements\Derived Column.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Loop thru Clients\Enrollements\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop thru Clients\Enrollements\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Enrollements\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Enrollements\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Enrollements\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Loop thru Clients\Enrollements\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[PSTeacherSchedule]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Loop thru Clients\Enrollements\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[OneRoster]"
                      connectionManagerRefId="Package.ConnectionManagers[OneRoster]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Loop thru Clients\Enrollements\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Loop thru Clients\Enrollements\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ClientUID]"
                          cachedDataType="i4"
                          cachedName="ClientUID"
                          externalMetadataColumnId="Package\Loop thru Clients\Enrollements\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientUID]"
                          lineageId="Package\Loop thru Clients\Enrollements\Derived Column.Outputs[Derived Column Output].Columns[ClientUID]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Enrollements\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[TeacherID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="TeacherID"
                          externalMetadataColumnId="Package\Loop thru Clients\Enrollements\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TeacherID]"
                          lineageId="Package\Loop thru Clients\Enrollements\Script Component.Outputs[Output 0].Columns[TeacherID]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Enrollements\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ClassID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="ClassID"
                          externalMetadataColumnId="Package\Loop thru Clients\Enrollements\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClassID]"
                          lineageId="Package\Loop thru Clients\Enrollements\Script Component.Outputs[Output 0].Columns[ClassID]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Enrollements\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientUID]"
                          dataType="i4"
                          name="ClientUID" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Enrollements\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TeacherSchedulePSUID]"
                          dataType="i4"
                          name="TeacherSchedulePSUID" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Enrollements\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TeacherID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="TeacherID" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Enrollements\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClassID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="ClassID" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Loop thru Clients\Enrollements\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Loop thru Clients\Enrollements\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop thru Clients\Enrollements\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Enrollements\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Enrollements\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Enrollements\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Loop thru Clients\Enrollements\Script Component"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;9"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Script Component"
                  version="12">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="33">
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[
#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces

using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.IO;
using System.Net;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Runtime.Serialization;
using System.Runtime.Serialization.Json;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading.Tasks;
using System.Web.Script.Serialization;
using System.Windows.Forms;



#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    static string pLocation = "/ws/schema/query/com.hayessoft.TIPWeb.TeacherSchedule";
    static string tokenURI = "/oauth/access_token/";
    static string processType = "TeacherSchedule";

    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();

    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */
        ProcessTeacherSchedule().Wait();
    }


    public async Task<int> ProcessTeacherSchedule()
    {
        try
        {

            // The server base address
            string baseURL = Variables.ClientServer;

            //MessageBox.Show(baseURL);

            ServicePointManager.Expect100Continue = true;
            ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;


            /// The client information used to get the OAuth Access Token from the server.
            string clientId = Variables.ClientIDPS;
            string clientSecret = Variables.ClientSecret;
            string sendToken = EncodeTo64(Variables.ClientIDPS + ":" + Variables.ClientSecret);
            //WriteToDatabase(0, "TeacherSchedule-sendToken", sendToken);
            // this will hold the Access Token returned from the server.
            //MessageBox.Show(sendToken, "sendToken");

            string accessToken = await GetAccessToken(baseURL, sendToken, clientId, clientSecret);
            //-->>>>>>>>>>>>>> Add : if returns null, stop
            if (accessToken == null)
            {
                WriteToDatabase(1, "Access Token", "GetAccessToken returned null");
                return 0;
            }
            //MessageBox.Show(accessToken, "access token");


            string FileSize = await GetFileSize(baseURL, accessToken);
            if (FileSize == null)
            {
                WriteToDatabase(1, "File Size", "GetFileSize returned null");
                return 0;
            }

            var jsonResponse = await GetTeacherSchedule(baseURL, accessToken, FileSize);

            return 0;
        }
        catch (Exception ex)
        {
            WriteToDatabase(1, "ProcessTeacherSchedule", ex.Message);
            return 0;
        }

    }


    /// <summary>
    /// Gets the list of TeacherSchedule.
    /// </summary>
    /// <param name="baseUrl">The url for the TeacherSchedule list</param>
    /// <param name="accessToken">Acquired in the previous method</param>
    /// <returns>The page of articles.</returns>
    private async Task<dynamic> GetTeacherSchedule(string baseUrl, string accessToken, string FileSize)
    {
        try
        {
            int TotalRecords;
            string pageSize = Variables.PageSize;
            int intPageSize = Convert.ToInt32(pageSize);
            //MessageBox.Show(pageSize, "page size");
            if (Int32.TryParse(FileSize, out TotalRecords))
            {
                int pages = ((TotalRecords - 1) / intPageSize) + 1;
                //MessageBox.Show(pages.ToString(), "pages");


                for (int i = 1; i <= pages; i++)
                {
                    string pagenum = i.ToString();
                    //MessageBox.Show(pagenum, "page number");

                    string uri = baseUrl + pLocation + "?pagesize=" + pageSize + "&page=" + pagenum;
                    var client = new HttpClient();

                    client.BaseAddress = new Uri(uri);

                    client.DefaultRequestHeaders.Accept.Clear();
                    client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));
                    client.DefaultRequestHeaders.Add("Authorization", "Bearer " + accessToken);

                    //MessageBox.Show(uri, "Teacher Sched uri");

                    StringContent stringContent = new StringContent("", Encoding.UTF8, "application/json");
                    //StringContent stringContent = new StringContent("page=" + pagenum, Encoding.UTF8, "application/json");
                    //string content;

                    HttpResponseMessage response = await client.PostAsync(new Uri(uri), stringContent);

                    response.EnsureSuccessStatusCode();
                    string jsonString = await response.Content.ReadAsStringAsync();
                    //MessageBox.Show(jsonString, "jsonstring");

                    jsonString = cleanJsonString(jsonString);

                    //Deserialize our JSON
                    DataTable dt = JsonStringToDataTable(jsonString);
                    int numRows = 0;


                    foreach (DataRow row in dt.Rows)
                    {
                        Output0Buffer.AddRow();
                        Output0Buffer.TeacherID = row["teacherID"].ToString().Replace("\\", "");
                        Output0Buffer.ClassID = row["classID"].ToString().Replace("\\", "");


                        numRows += 1;
                    }
                    WriteToDatabase(0, "GetTeacherSchedule - Row Count Page Num: " + pagenum, numRows.ToString());
                }
                return null;
            }
            return null;

        }
        catch (Exception ex)
        {
            WriteToDatabase(1, "GetTeacherSchedule", ex.Message);
            throw;
        }

    }


    private async Task<string> GetFileSize(string baseURL, string accessToken)
    {
        try
        {
            using (var client = new HttpClient())
            {
                string uri = baseURL + pLocation + "/count";
                client.BaseAddress = new Uri(uri);
                //MessageBox.Show(uri, "Students uri");

                client.DefaultRequestHeaders.Accept.Clear();
                client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));
                client.DefaultRequestHeaders.Add("Authorization", "Bearer " + accessToken);

                var stringContent = new StringContent("", Encoding.UTF8, "application/json");

                //Get file size
                HttpResponseMessage response = await client.PostAsync(new Uri(uri), stringContent);

                response.EnsureSuccessStatusCode();
                string jsonString = await response.Content.ReadAsStringAsync();

                //string jsonString = response.Content.ToString();//.ReadAsStringAsync();
                //MessageBox.Show(jsonString, "jsonstring");

                //Deserialize our JSON
                var FileSizeObject = JsonHelper.JsonDeserialize<FileSize>(jsonString);

                // return the Access Token.
                var FileSize = FileSizeObject.count;
                //MessageBox.Show(FileSize, "File Size");
                WriteToDatabase(0, "RecordCount", FileSize);
                return FileSize;
            }
        }
        catch (Exception ex)
        {
            //MessageBox.Show(ex.Message);
            //MessageBox.Show(ex.StackTrace);
            WriteToDatabase(1, "GetFileSize", ex.Message);
            //return null;
            throw;
        }

    }

    /// <summary>
    /// This method uses the OAuth Client Credentials Flow to get an Access Token to provide
    /// Authorization to the APIs.
    /// </summary>
    /// <returns></returns>
    private static async Task<string> GetAccessToken(string baseURL, string sendToken, string clientId, string clientSecret)
    {
        try
        {
            using (var client = new HttpClient())
            {

                string uri = baseURL + tokenURI;
                client.BaseAddress = new Uri(uri);

                //MessageBox.Show(uri, "access token uri");

                client.DefaultRequestHeaders.Accept.Clear();
                client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/x-www-form-urlencoded"));
                client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Basic", sendToken);

                List<KeyValuePair<string, string>> postData = new List<KeyValuePair<string, string>>();
                postData.Add(new KeyValuePair<string, string>("grant_type", "client_credentials"));
                FormUrlEncodedContent content = new FormUrlEncodedContent(postData);

                // Post to the Server and parse the response.
                HttpResponseMessage response = await client.PostAsync(new Uri(uri), content);

                response.EnsureSuccessStatusCode();
                string jsonString = await response.Content.ReadAsStringAsync();

                //MessageBox.Show(jsonString, "jsonstring");

                //Deserialize our JSON
                var accessTokenObject = JsonHelper.JsonDeserialize<AccessToken>(jsonString);

                // return the Access Token.
                var token = accessTokenObject.access_token;
                //MessageBox.Show(token, "access token");
                return token;
            }
        }
        catch (Exception ex)
        {
            //WriteToDatabase(1, "GetAccessToken", ex.Message);
            //MessageBox.Show(ex.Message);
            //MessageBox.Show(ex.StackTrace);
            //return null;
            throw ex;
        }
    }

    public string EncodeTo64(string toEncode)
    {
        byte[] toEncodeAsBytes = System.Text.ASCIIEncoding.ASCII.GetBytes(toEncode);
        string returnValue = System.Convert.ToBase64String(toEncodeAsBytes);
        return returnValue;

    }
    public class JsonHelper
    {
        /// <summary>
        /// JSON Serialization
        /// </summary>
        public static string JsonSerializer<T>(T t)
        {
            DataContractJsonSerializer ser = new DataContractJsonSerializer(typeof(T));
            MemoryStream ms = new MemoryStream();
            ser.WriteObject(ms, t);
            string jsonString = Encoding.UTF8.GetString(ms.ToArray());
            ms.Close();
            return jsonString;
        }
        /// <summary>
        /// JSON Deserialization
        /// </summary>
        public static T JsonDeserialize<T>(string jsonString)
        {
            DataContractJsonSerializer ser = new DataContractJsonSerializer(typeof(T));
            MemoryStream ms = new MemoryStream(Encoding.UTF8.GetBytes(jsonString));
            T obj = (T)ser.ReadObject(ms);
            return obj;
        }
    }

    public class TeacherSchedule
    {
        public string TeacherID { get; set; }
        public string ClassID { get; set; }

    }

    public class AccessToken
    {
        public string access_token { get; set; }
        public string token_type { get; set; }
        public string expires_in { get; set; }
    }

    public class FileSize
    {
        public string count { get; set; }

    }



    public DataTable JsonStringToDataTable(string jsonString)
    {
        try
        {
            DataTable dt = new DataTable();
            string[] jsonStringArray = Regex.Split(jsonString.Replace("[", "").Replace("]", ""), "},{");
            List<string> ColumnsName = new List<string>();
            foreach (string jSA in jsonStringArray)
            {
                string[] jsonStringData = Regex.Split(jSA.Replace("{", "").Replace("}", ""), ",");
                foreach (string ColumnsNameData in jsonStringData)
                {
                    try
                    {
                        int idx = ColumnsNameData.IndexOf(":");
                        string ColumnsNameString = ColumnsNameData.Substring(0, idx - 1).Replace("\"", "");
                        if (!ColumnsName.Contains(ColumnsNameString))
                        {
                            ColumnsName.Add(ColumnsNameString);
                        }
                    }
                    catch //(Exception ex)
                    {
                        WriteToDatabase(1, "JsonStringToDataTable: Columns", (string.Format("Error Parsing Column Name : {0}", ColumnsNameData)));
                    }
                }
                break;
            }
            foreach (string AddColumnName in ColumnsName)
            {
                dt.Columns.Add(AddColumnName);
            }
            foreach (string jSA in jsonStringArray)
            {
                string[] RowData = Regex.Split(jSA.Replace("{", "").Replace("}", ""), ",");
                DataRow nr = dt.NewRow();
                foreach (string rowData in RowData)
                {
                    try
                    {
                        int idx = rowData.IndexOf(":");
                        string RowColumns = rowData.Substring(0, idx - 1).Replace("\"", "").Replace("\\", "");
                        string RowDataString = rowData.Substring(idx + 1).Replace("\"", "").Replace("\\", "");
                        nr[RowColumns] = RowDataString;
                    }
                    catch //(Exception ex)
                    {
                        WriteToDatabase(1, "JsonStringToDataTable: For each row", (string.Format("Error Parsing Row  Name : {0}", rowData)));
                        continue;
                    }
                }
                dt.Rows.Add(nr);
            }
            return dt;
        }
        catch (Exception ex)
        {
            WriteToDatabase(1, "JsonStringToDataTable", ex.Message);
            return null;
        }
    }

    public string cleanJsonString(string jsonString)
    {

        jsonString = jsonString.Replace("{\"record\":[", "");
        jsonString = jsonString.Replace("],\"@extensions\":\"\"", "");


        return jsonString;
    }


    public void WriteToDatabase(int Error, string Area, string LogInfo)
    {
        try
        {
            //MessageBox.Show("WriteToDatabase");
            var ConnString = Connections.PSDB.ConnectionString;

            using (SqlConnection conn = new SqlConnection(Connections.PSDB.ConnectionString))
            {
                if (conn.State != ConnectionState.Open) conn.Open();
                //string insertText = "Insert into PSLog (ClientUID, FileType, Area, LogInfo) Values (@ClientUID, @FileType, @Area, @LogInfo ) ";
                SqlCommand cmd = new SqlCommand("spLogInfo", conn);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("@ClientUID", SqlDbType.Int).Value = Variables.ClientID;
                cmd.Parameters.Add("@Error", SqlDbType.Int).Value = Error;
                cmd.Parameters.Add("@FileType", SqlDbType.VarChar, 50).Value = processType;
                cmd.Parameters.Add("@Area", SqlDbType.VarChar, 100).Value = Area;
                cmd.Parameters.Add("@LogInfo", SqlDbType.VarChar, 1000).Value = LogInfo;
                cmd.ExecuteNonQuery();
            }
        }
        catch //(Exception ex)
        {
            throw;
        }
    }
}




]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_af8a601764c24620b46f349d337c2342.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{C4EDC755-D216-4088-AD8F-BFD38F342BBF}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_af8a601764c24620b46f349d337c2342</RootNamespace>
    <AssemblyName>SC_af8a601764c24620b46f349d337c2342</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Newtonsoft.Json, Version=12.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <HintPath>C:\Users\nblakely\AppData\Local\Temp\Vsta\SSIS_SC120\Vsta_b98dGzWa0yVrsAMDoBk3A\packages\Newtonsoft.Json.12.0.3\lib\net45\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Runtime.Serialization" />
    <Reference Include="System.Web.Extensions" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
      <DesignTime>True</DesignTime>
    </Compile>
    <None Include="packages.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[packages.config]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="Newtonsoft.Json" version="12.0.3" targetFramework="net45" />
</packages>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 PSDB
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"PSDB").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public Int32 ClientID
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["ClientID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientIDPS
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientIDPS"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientSecret
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientSecret"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientServer
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientServer"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String PageSize
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["PageSize"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_af8a601764c24620b46f349d337c2342.Properties.Settings.get_Default():SC_af8a601764c24620b46f349d337c2342.Properties.Sett" +
    "ings")]

namespace SC_af8a601764c24620b46f349d337c2342.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String TeacherID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool TeacherID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ClassID
    {
        set
        {
            this[1] = value;
        }
    }
    public bool ClassID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_af8a601764c24620b46f349d337c2342</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_af8a601764c24620b46f349d337c2342</msb:DisplayName>
    <msb:ProjectId>{CF7C3959-8B01-42F4-880B-413514BB2715}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_af8a601764c24620b46f349d337c2342.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="packages.config" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_af8a601764c24620b46f349d337c2342")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_af8a601764c24620b46f349d337c2342")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_af8a601764c24620b46f349d337c2342.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_af8a601764c24620b46f349d337c2342.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_af8a601764c24620b46f349d337c2342.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_af8a601764c24620b46f349d337c2342.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_af8a601764c24620b46f349d337c2342.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_af8a601764c24620b46f349d337c2342.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[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
EQHgEQoBFADqC20CFADIEN0AFAAfBSEAHAA8A0ICHADqC20CHADIEN0AHAAfBSEAyQIKDtQCmQIz
C4oDdAAKDgYAfAAKDqUDdAAkA90AKQEKDq0DJABzAFIGLgALAO8ELgATAPgELgAbABcFLgAjACAF
LgArAEkFLgAzAEkFLgA7AEkFLgBDACAFLgBLAE8FLgBTAEkFLgBbAGYFQwBjAE0GgABrALAFoABr
AN0FwABrAAYG4ABrACgG4wCbAE0GYQF7AE0GgQF7AE0GiQGjABcFoQF7AE0GowF7AE0GqQGjABcF
wQF7AE0GwwF7AE0G4QF7AE0G4wF7AE0GAQJ7AE0GAwJ7AE0GIQJ7AE0GwAV7AE0G4AV7AE0GAAZ7
AE0GIAZ7AE0GYAZ7AE0GgAZ7AE0GoAZ7AE0GwAZ7AE0G4AZ7AE0GAAd7AE0GQAd7AE0GYAd7AE0G
wAeTAE0GAAiTAE0GQAiTAE0GgAiTAE0GLgBYAGgAeACUAC4BfQHYAQACcwI8A3MDAwABAAUABQAG
AAYABwAMAAgADgAKAA8ACwARAAwAFAAAAEMCzAQAAOcJ0AQAAF0CzAQAAPwJ0AQAACwC1AQAAGkC
2gQAAKcCzAQAAOYEzAQAAH4QzAQAAK4NzAQAAOwIzAQAAPAM3gQAAOwF5AQAALYQ6gQAAEMCzAQA
AF0CzAQAAJwKzAQAALUFzAQAAMEKzAQAAHcRzAQBAA8AAwABABAABQABABEABwABABIACQACABwA
CwACAB4ADQACAB8ADwACACAAEQACACEAEwACACIAFQACACMAFwACACUAGQACACYAGwABACcAGwAC
ACgAHQACAC4AHwABAC8AHwACADAAIQABADEAIQACADMAIwABADQAIwACADUAJQABADYAJQACADcA
JwABADgAJwACADoAKQABADsAKQANAHoAIQANAHwAIwAOAH4AIQAOAIAAIwAPAIIAIQAPAIQAIwAQ
AIYAIQAQAIgAIwAzAF0AbQDGAPIA3QEtAjwCVwJdAsUC8wL7ApEDnQMEgAAAAQAAAAAAAAAAAAAA
AAAWAQAABAAAAAAAAAAAAAAA2APbAgAAAAAPAAAAAAAAAAAAAADhA4gRAAAAAAQAAAAAAAAAAAAA
ANgDwAUAAAAABAAAAAAAAAAAAAAA2AO5AgAAAAAEAAAAAAAAAAAAAADqA58MAAAAAA8AAAAAAAAA
AAAAAOEDsxEAAAAADwAAAAAAAAAAAAAA4QNYDAAAAAAEAAAAAAAAAAAAAADYA08KAAAAAA8AAAAA
AAAAAAAAAOEDewwAAAAABAAAAAAAAAAAAAAA2AMWCwAAAAAAAAAAAQAAAGUOAAAJAAIACgACAAsA
AgAMAAIADQACAA4AAgAPAAIAEAACAAAAAABXALICAAAAAFkAsgIzAEoAOQBjAD8AcwA/AH0A0wBN
AtMAYwIHAQMDBwEjAyEBWAMhAWQDWABuAyEBvQMhAckDWADTAwAAAAAASURUU0NvbXBvbmVudE1l
dGFEYXRhMTAwAElEVFNWYXJpYWJsZTEwMABJRFRTUnVudGltZUNvbm5lY3Rpb25Db2xsZWN0aW9u
MTAwAElEVFNSdW50aW1lQ29ubmVjdGlvbjEwMABJRFRTQ29ubmVjdGlvbk1hbmFnZXIxMDAASURU
U1ZhcmlhYmxlczEwMABJRFRTRXZhbHVhdG9yQ29udGV4dDEwMAA8PnVfXzEASUVudW1lcmFibGVg
MQBUYXNrYDEASHR0cEhlYWRlclZhbHVlQ29sbGVjdGlvbmAxAEFzeW5jVGFza01ldGhvZEJ1aWxk
ZXJgMQBUYXNrQXdhaXRlcmAxAExpc3RgMQBUb0ludDMyAFNDX2FmOGE2MDE3NjRjMjQ2MjBiNDZm
MzQ5ZDMzN2MyMzQyADxiYXNlVVJMPjVfXzIAPHBhZ2VTaXplPjVfXzIAPGNsaWVudD41X18yADw+
dV9fMgBLZXlWYWx1ZVBhaXJgMgA8YWNjZXNzVG9rZW4+NV9fMwA8cGFnZXM+NV9fMwBFbmNvZGVU
bzY0ADxpPjVfXzQAPHBhZ2VudW0+NV9fNQA8UHJvY2Vzc1RlYWNoZXJTY2hlZHVsZT5kX182ADxH
ZXRUZWFjaGVyU2NoZWR1bGU+ZF9fNwBnZXRfVVRGOAA8R2V0RmlsZVNpemU+ZF9fOAA8R2V0QWNj
ZXNzVG9rZW4+ZF9fOQA8TW9kdWxlPgBnZXRfUFNEQgBnZXRfVGVhY2hlcklEAHNldF9UZWFjaGVy
SUQAZ2V0X0NsYXNzSUQAc2V0X0NsYXNzSUQAZ2V0X0NsaWVudElEAEdldE91dHB1dElEAGdldF9B
U0NJSQB0b2tlblVSSQBiYXNlVVJMAFN5c3RlbS5JTwBnZXRfQ2xpZW50SURQUwBUAEFyZWEAU3lz
dGVtLkRhdGEAZ2V0X0NvbXBvbmVudE1ldGFEYXRhAG1zY29ybGliAFN5c3RlbS5Db2xsZWN0aW9u
cy5HZW5lcmljAFJlYWRBc1N0cmluZ0FzeW5jAFBvc3RBc3luYwBjbGllbnRJZABBZGQATWFya091
dHB1dHNGaW5pc2hlZABBd2FpdFVuc2FmZU9uQ29tcGxldGVkAGdldF9Jc0NvbXBsZXRlZAA8VGVh
Y2hlcklEPmtfX0JhY2tpbmdGaWVsZAA8Q2xhc3NJRD5rX19CYWNraW5nRmllbGQAPHRva2VuX3R5
cGU+a19fQmFja2luZ0ZpZWxkADxhY2Nlc3NfdG9rZW4+a19fQmFja2luZ0ZpZWxkADxleHBpcmVz
X2luPmtfX0JhY2tpbmdGaWVsZAA8Y291bnQ+a19fQmFja2luZ0ZpZWxkAERiQ29tbWFuZABTcWxD
b21tYW5kAFJlcGxhY2UAZGVmYXVsdEluc3RhbmNlAEVuc3VyZVN1Y2Nlc3NTdGF0dXNDb2RlAHRv
RW5jb2RlAGdldF9NZXNzYWdlAEh0dHBSZXNwb25zZU1lc3NhZ2UASnNvblN0cmluZ1RvRGF0YVRh
YmxlAElEaXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAFByb2Nl
c3NUZWFjaGVyU2NoZWR1bGUAR2V0VGVhY2hlclNjaGVkdWxlAGdldF9DbGllbnROYW1lAEdldFJ1
bnRpbWVDb25uZWN0aW9uQnlOYW1lAElBc3luY1N0YXRlTWFjaGluZQBTZXRTdGF0ZU1hY2hpbmUA
c3RhdGVNYWNoaW5lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFNxbERiVHlwZQBz
ZXRfQ29tbWFuZFR5cGUAVmFsdWVUeXBlAFNlY3VyaXR5UHJvdG9jb2xUeXBlAHByb2Nlc3NUeXBl
AGdldF90b2tlbl90eXBlAHNldF90b2tlbl90eXBlAFN5c3RlbS5Db3JlAGdldF9DdWx0dXJlAHNl
dF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBJbnRlcm5hbERhdGFDb2xsZWN0aW9uQmFzZQBBcHBs
aWNhdGlvblNldHRpbmdzQmFzZQBXcml0ZVRvRGF0YWJhc2UAQ2xvc2UARGlzcG9zZQBUcnlQYXJz
ZQBDcmVhdGUAZ2V0X1N0YXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbm5lY3Rpb25TdGF0ZQA8
PjFfX3N0YXRlAER5bmFtaWNBdHRyaWJ1dGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVi
dWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dz
YWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzeW5jU3RhdGVNYWNoaW5lQXR0
cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0
ZQBEZWJ1Z2dlckhpZGRlbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUA
QXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmli
dXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBT
U0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRy
aWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0
ZQBzZXRfVmFsdWUAQXV0aGVudGljYXRpb25IZWFkZXJWYWx1ZQBNZWRpYVR5cGVXaXRoUXVhbGl0
eUhlYWRlclZhbHVlAHZhbHVlAHNldF9FeHBlY3QxMDBDb250aW51ZQBnZXRfUGFnZVNpemUAR2V0
RmlsZVNpemUASnNvbkRlc2VyaWFsaXplAEluZGV4T2YARW5jb2RpbmcAU3lzdGVtLlJ1bnRpbWUu
VmVyc2lvbmluZwBUb0Jhc2U2NFN0cmluZwBnZXRfQ29ubmVjdGlvblN0cmluZwBjbGVhbkpzb25T
dHJpbmcAanNvblN0cmluZwBUb1N0cmluZwBHZXRTdHJpbmcAU3Vic3RyaW5nAFVyaQBnZXRfVGFz
awBTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0NfYWY4YTYwMTc2NGMyNDYyMGI0NmYzNDlkMzM3YzIz
NDIuZGxsAHNldF9UZWFjaGVySURfSXNOdWxsAHNldF9DbGFzc0lEX0lzTnVsbABTZXROdWxsAHNl
dF9TZWN1cml0eVByb3RvY29sAGJhc2VVcmwATWVtb3J5U3RyZWFtAGdldF9JdGVtAHNldF9JdGVt
AFN5c3RlbQByZXNvdXJjZU1hbgBzZW5kVG9rZW4AR2V0QWNjZXNzVG9rZW4AYWNjZXNzVG9rZW4A
Z2V0X2FjY2Vzc190b2tlbgBzZXRfYWNjZXNzX3Rva2VuAE9wZW4AZ2V0X2V4cGlyZXNfaW4Ac2V0
X2V4cGlyZXNfaW4AU2NyaXB0TWFpbgBEYXRhQ29sdW1uAHBMb2NhdGlvbgBTeXN0ZW0uQ29uZmln
dXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUnVudGltZS5TZXJpYWxpemF0aW9u
AHNldF9BdXRob3JpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAERhdGFDb2x1bW5Db2xsZWN0aW9u
AGdldF9SdW50aW1lQ29ubmVjdGlvbkNvbGxlY3Rpb24AU3FsUGFyYW1ldGVyQ29sbGVjdGlvbgBE
YXRhUm93Q29sbGVjdGlvbgBEYkNvbm5lY3Rpb24AU3FsQ29ubmVjdGlvbgBJbnZhbGlkT3BlcmF0
aW9uRXhjZXB0aW9uAFNldEV4Y2VwdGlvbgBTeXN0ZW0uRGF0YS5Db21tb24AU3lzdGVtLlJ1bnRp
bWUuU2VyaWFsaXphdGlvbi5Kc29uAEN1bHR1cmVJbmZvAExvZ0luZm8AT3V0cHV0TmFtZU1hcABP
dXRwdXRNYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNSdW50aW1lV3JhcABNaWNyb3NvZnQuU3Fs
U2VydmVyLkRUU1BpcGVsaW5lV3JhcABTeXN0ZW0uTmV0Lkh0dHAAQ2xlYXIAPD50X19idWlsZGVy
AE91dHB1dDBCdWZmZXIAUGlwZWxpbmVCdWZmZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1h
bmFnZXIAZ2V0X0Nvbm5lY3Rpb25NYW5hZ2VyAFNlcnZpY2VQb2ludE1hbmFnZXIASnNvbkhlbHBl
cgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lLldyYXBwZXIATWljcm9zb2Z0LlNxbFNl
cnZlci5EdHMuUGlwZWxpbmUuV3JhcHBlcgBEYlBhcmFtZXRlcgBTcWxQYXJhbWV0ZXIAR2V0QXdh
aXRlcgBnZXRfQ2xpZW50U2VydmVyAERhdGFDb250cmFjdEpzb25TZXJpYWxpemVyAFhtbE9iamVj
dFNlcmlhbGl6ZXIARXJyb3IASUVudW1lcmF0b3IAR2V0RW51bWVyYXRvcgAuY3RvcgAuY2N0b3IA
T3V0cHV0SURzAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZp
Y2VzAFN5c3RlbS5SZXNvdXJjZXMAU0NfYWY4YTYwMTc2NGMyNDYyMGI0NmYzNDlkMzM3YzIzNDIu
UHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNDX2FmOGE2MDE3
NjRjMjQ2MjBiNDZmMzQ5ZDMzN2MyMzQyLlByb3BlcnRpZXMAZ2V0X1JlYWRPbmx5VmFyaWFibGVz
AEdldEJ5dGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwA8
PjRfX3RoaXMAU3lzdGVtLlRocmVhZGluZy5UYXNrcwBDb250YWlucwBnZXRfQ29sdW1ucwBTeXN0
ZW0uVGV4dC5SZWd1bGFyRXhwcmVzc2lvbnMAU3lzdGVtLkNvbGxlY3Rpb25zAENvbm5lY3Rpb25z
AFN5c3RlbS5OZXQuSHR0cC5IZWFkZXJzAEh0dHBIZWFkZXJzAEh0dHBSZXF1ZXN0SGVhZGVycwBn
ZXRfRGVmYXVsdFJlcXVlc3RIZWFkZXJzAEJ1ZmZlcnMAZ2V0X1BhcmFtZXRlcnMAc2V0X0Jhc2VB
ZGRyZXNzAEZpbmlzaE91dHB1dHMAZ2V0X1Jvd3MAQ3JlYXRlTmV3T3V0cHV0Um93cwBDb25jYXQA
Rm9ybWF0AFJlYWRPYmplY3QAV3JpdGVPYmplY3QAU3lzdGVtLk5ldABnZXRfQ2xpZW50U2VjcmV0
AGNsaWVudFNlY3JldABTZXRFbmRPZlJvd3NldABXYWl0AFNwbGl0AGdldF9EZWZhdWx0AEdldFJl
c3VsdABTZXRSZXN1bHQAU3lzdGVtLkRhdGEuU3FsQ2xpZW50AEh0dHBDbGllbnQAVXNlckNvbXBv
bmVudABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9uZW50AGdldF9DdXJyZW50AGdldF9Db250
ZW50AEZvcm1VcmxFbmNvZGVkQ29udGVudABTdHJpbmdDb250ZW50AEh0dHBDb250ZW50AGdldF9j
b3VudABzZXRfY291bnQAZ2V0X0FjY2VwdABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AFN0
YXJ0AENvbnZlcnQATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QAUHJpbWVPdXRwdXQA
TW92ZU5leHQAU3lzdGVtLlRleHQAR2V0VmFsdWVXaXRoQ29udGV4dABTY3JpcHRDb21wb25lbnRF
dmFsQ29udGV4dABnZXRfRXZhbHVhdG9yQ29udGV4dABEYXRhUm93AEFkZFJvdwBOZXdSb3cAUmVn
ZXgAVG9BcnJheQBnZXRfQXNzZW1ibHkARXhlY3V0ZU5vblF1ZXJ5AAAAAANbAAABAANdAAAHfQAs
AHsAAAN7AAADfQAAAywAAAM6AAADIgAAPUoAcwBvAG4AUwB0AHIAaQBuAGcAVABvAEQAYQB0AGEA
VABhAGIAbABlADoAIABDAG8AbAB1AG0AbgBzAAA/RQByAHIAbwByACAAUABhAHIAcwBpAG4AZwAg
AEMAbwBsAHUAbQBuACAATgBhAG0AZQAgADoAIAB7ADAAfQAAA1wAAEdKAHMAbwBuAFMAdAByAGkA
bgBnAFQAbwBEAGEAdABhAFQAYQBiAGwAZQA6ACAARgBvAHIAIABlAGEAYwBoACAAcgBvAHcAADtF
AHIAcgBvAHIAIABQAGEAcgBzAGkAbgBnACAAUgBvAHcAIAAgAE4AYQBtAGUAIAA6ACAAewAwAH0A
ACtKAHMAbwBuAFMAdAByAGkAbgBnAFQAbwBEAGEAdABhAFQAYQBiAGwAZQAAF3sAIgByAGUAYwBv
AHIAZAAiADoAWwAAJV0ALAAiAEAAZQB4AHQAZQBuAHMAaQBvAG4AcwAiADoAIgAiAAATcwBwAEwA
bwBnAEkAbgBmAG8AABVAAEMAbABpAGUAbgB0AFUASQBEAAANQABFAHIAcgBvAHIAABNAAEYAaQBs
AGUAVAB5AHAAZQAAC0AAQQByAGUAYQAAEUAATABvAGcASQBuAGYAbwAAay8AdwBzAC8AcwBjAGgA
ZQBtAGEALwBxAHUAZQByAHkALwBjAG8AbQAuAGgAYQB5AGUAcwBzAG8AZgB0AC4AVABJAFAAVwBl
AGIALgBUAGUAYQBjAGgAZQByAFMAYwBoAGUAZAB1AGwAZQAAKS8AbwBhAHUAdABoAC8AYQBjAGMA
ZQBzAHMAXwB0AG8AawBlAG4ALwAAH1QAZQBhAGMAaABlAHIAUwBjAGgAZQBkAHUAbABlAACAm0kA
cwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAg
AHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAA
dABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAEU8AdQB0AHAAdQB0ACAAMAAA
CVAAUwBEAEIAABFDAGwAaQBlAG4AdABJAEQAABVDAGwAaQBlAG4AdABJAEQAUABTAAAVQwBsAGkA
ZQBuAHQATgBhAG0AZQAAGUMAbABpAGUAbgB0AFMAZQBjAHIAZQB0AAAZQwBsAGkAZQBuAHQAUwBl
AHIAdgBlAHIAABFQAGEAZwBlAFMAaQB6AGUAAHFTAEMAXwBhAGYAOABhADYAMAAxADcANgA0AGMA
MgA0ADYAMgAwAGIANAA2AGYAMwA0ADkAZAAzADMANwBjADIAMwA0ADIALgBQAHIAbwBwAGUAcgB0
AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAABlBAGMAYwBlAHMAcwAgAFQAbwBrAGUAbgAAOUcA
ZQB0AEEAYwBjAGUAcwBzAFQAbwBrAGUAbgAgAHIAZQB0AHUAcgBuAGUAZAAgAG4AdQBsAGwAABNG
AGkAbABlACAAUwBpAHoAZQAAM0cAZQB0AEYAaQBsAGUAUwBpAHoAZQAgAHIAZQB0AHUAcgBuAGUA
ZAAgAG4AdQBsAGwAAC1QAHIAbwBjAGUAcwBzAFQAZQBhAGMAaABlAHIAUwBjAGgAZQBkAHUAbABl
AAAVPwBwAGEAZwBlAHMAaQB6AGUAPQAADSYAcABhAGcAZQA9AAAhYQBwAHAAbABpAGMAYQB0AGkA
bwBuAC8AagBzAG8AbgAAG0EAdQB0AGgAbwByAGkAegBhAHQAaQBvAG4AAA9CAGUAYQByAGUAcgAg
AAATdABlAGEAYwBoAGUAcgBJAEQAAA9jAGwAYQBzAHMASQBEAABTRwBlAHQAVABlAGEAYwBoAGUA
cgBTAGMAaABlAGQAdQBsAGUAIAAtACAAUgBvAHcAIABDAG8AdQBuAHQAIABQAGEAZwBlACAATgB1
AG0AOgAgAAElRwBlAHQAVABlAGEAYwBoAGUAcgBTAGMAaABlAGQAdQBsAGUAAA0vAGMAbwB1AG4A
dAAAF1IAZQBjAG8AcgBkAEMAbwB1AG4AdAAAF0cAZQB0AEYAaQBsAGUAUwBpAHoAZQAAQ2EAcABw
AGwAaQBjAGEAdABpAG8AbgAvAHgALQB3AHcAdwAtAGYAbwByAG0ALQB1AHIAbABlAG4AYwBvAGQA
ZQBkAAELQgBhAHMAaQBjAAAVZwByAGEAbgB0AF8AdAB5AHAAZQAAJWMAbABpAGUAbgB0AF8AYwBy
AGUAZABlAG4AdABpAGEAbABzAAAAAEXOAfxvfqtDhzEQIrSdREIABCABAQgDIAABBSABARERBCAB
AQ4FIAEBEjkFIAEBHQIFIAEBEnEGIAEBEYC5BAcBETQFFRF5AQgIAAAVEXkBEwAHMAEBARAeAAQK
ARE0CCAAFRJBARMABAcBETgFFRF5ARwECgEROAQHARE8BRUReQEOBAoBETwEBwERQAQKARFABQAA
EoDJBSABHQUOBQABDh0FJAcTEk0dDhUSUQEOHQ4IHQ4IDggOFRFVAQ4OElkOCA4OEk0SXQUgAg4O
DgYAAh0ODg4FFRJRAQ4EIAEIDgUgAg4ICAUgAQITAAUgAQETAAUAAg4OHAggABURVQETAAUVEVUB
DgQgABMABSAAEoDZBiABEoDdDgMgAAIEIAASWQQgAQ4IBSACAQ4cBSAAEoDhBSABARJZAyAADgQH
ARJhBSAAEYDpBiACAQ4SYQYgAQERgPUFIAASgPkJIAISgP0OEYEBBCABARwKIAMSgP0OEYEBCAMg
AAgLIAMBEoCdHQgSgKEFIAIBCBwDBwEIBwACCBKAoQ4FIAEdCAgFIAASgREFIAASgRUGIAESgRkO
BSAAEoCpBSAAEoEdBiABEoEhHAUAABKBJQYgARwSgSkHAAESORGBLQUgABKBMQcgAgEOEoExBAcB
EmUCHgAHIAIBEoE9HAQgAB0FBSABDh0FBSABAR0FBiABHBKBPRkHDAgSCAgODg4ODhURdQEOFRF1
ARwSXRJdBAABAQIGAAEBEYFFBgADDg4ODgUVEkEBDgggABURdQETAAUVEXUBDgowAgIBEB4AEB4B
CQoCFRF1AQ4RNAUVEkEBHAUVEXUBHAkKAhURdQEcETQFIAEBEl0nBxEIEggcCAgOEoCBDggVEXUB
EoCFFRF1AQ4SgIkSWRKAjQgSXRJdBAABCA4GAAICDhAIBQABDh0OBiABARKBSQUgABKBTQogABUS
gVEBEoFVCBUSgVEBEoFVBQACDg4OBSACAQ4OCCADAQ4SgMkODyACFRJBARKAhRKBSRKBXQcVEkEB
EoCFBxURdQESgIULCgIVEXUBEoCFETgFIAASgIUFIAASgV0HIAAVEkEBDgkKAhURdQEOETgFIAAS
gIkDIAAcBCABHA4bBwoIEggODhKAgQ4VEXUBEoCFFRF1AQ4SXRJdCwoCFRF1ARKAhRE8CQoCFRF1
AQ4RPAQKARIwFgcHCA4OEoCVFRF1ARKAhRURdQEOEl0GIAEBEoFlCxUSUQEVEYFpAg4OBxURgWkC
Dg4HIAIBEwATAQ8gAQEVEoFtARURgWkCDg4LCgIVEXUBEoCFEUAJCgIVEXUBDhFABAoBEiwIt3pc
Vhk04IkIiYRdzYCAzJEIsD9ffxHVCjoCBg4DBhIUAwYSGAMGEgwEBhKApQQGEoCxBAYSgLUDBhIg
AgYIBgYVEXkBCAMGEggGBhURdQEOBgYVEXUBHAYGFRF5ARwIBhURdQESgIUGBhUReQEOBAYSgJEH
IAAVEkEBCAogAxUSQQEcDg4OCSACFRJBAQ4ODgsABBUSQQEODg4ODgQgAQ4OBSABEk0OBiADAQgO
DgMAAAEEIAEBAg0gBAEIHQgdEoCdEoChBiABARKApQUAABKAsQUAABKAtQYAAQESgLUEAAASIAYQ
AQEOHgAGEAEBHgAOAygADgMoAAIFKAASgKkDKAAIBQgAEoCxBQgAEoC1BAgAEiAIAQAIAAAAAAAe
AQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NDX2FmOGE2MDE3NjRj
MjQ2MjBiNDZmMzQ5ZDMzN2MyMzQyAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjAAAEkBABou
TkVURnJhbWV3b3JrLFZlcnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBG
cmFtZXdvcmsgNC43LAEAJ1NjcmlwdE1haW4rPFByb2Nlc3NUZWFjaGVyU2NoZWR1bGU+ZF9fNgAA
KAEAI1NjcmlwdE1haW4rPEdldFRlYWNoZXJTY2hlZHVsZT5kX183AAAhAQAcU2NyaXB0TWFpbis8
R2V0RmlsZVNpemU+ZF9fOAAAJAEAH1NjcmlwdE1haW4rPEdldEFjY2Vzc1Rva2VuPmRfXzkAAAQB
AAAACgEAAgAAAAABAAAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3Vy
Y2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVi
bGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNv
dXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAA3GYAAAAAAAAAAAAA9mYAAAAgAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAOhmAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8l
ACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAA
AAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYgAAA7AMAAAAAAAAAAAAA7AM0AAAA
VgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEAAAABAAAAAAAAAAEAAAAA
AD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8A
AAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBEwDAAABAFMAdAByAGkAbgBn
AEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAwADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0A
ZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBG
AGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8AYQBmADgAYQA2ADAAMQA3ADYA
NABjADIANAA2ADIAMABiADQANgBmADMANAA5AGQAMwAzADcAYwAyADMANAAyAAAAMAAIAAEARgBp
AGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAwAAAAcAAoAAEASQBuAHQAZQByAG4A
YQBsAE4AYQBtAGUAAABTAEMAXwBhAGYAOABhADYAMAAxADcANgA0AGMAMgA0ADYAMgAwAGIANAA2
AGYAMwA0ADkAZAAzADMANwBjADIAMwA0ADIALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8A
cAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADIAMAAAACoAAQAB
AEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4A
YQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfAGEAZgA4AGEANgAwADEANwA2ADQAYwAyADQANgAy
ADAAYgA0ADYAZgAzADQAOQBkADMAMwA3AGMAMgAzADQAMgAuAGQAbABsAAAAaAAkAAEAUAByAG8A
ZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwBhAGYAOABhADYAMAAxADcANgA0AGMAMgA0ADYAMgAw
AGIANAA2AGYAMwA0ADkAZAAzADMANwBjADIAMwA0ADIAAAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYA
ZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAOAAIAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAYAAADAAAAAg3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_af8a601764c24620b46f349d337c2342</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::ClientID,User::ClientIDPS,User::ClientName,User::ClientSecret,User::ClientServer,User::PageSize</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">e5cc4b815296fb807736d27f7bb1d921</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">230a251b59514238d8c90d37e5c600f496584e0b</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">A5</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Loop thru Clients\Enrollements\Script Component.Connections[PSDB]"
                      connectionManagerID="Package.ConnectionManagers[OneRosterNET]"
                      connectionManagerRefId="Package.ConnectionManagers[OneRosterNET]"
                      name="PSDB" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Loop thru Clients\Enrollements\Script Component.Outputs[Output 0]"
                      hasSideEffects="true"
                      name="Output 0">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop thru Clients\Enrollements\Script Component.Outputs[Output 0].Columns[TeacherID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Enrollements\Script Component.Outputs[Output 0].Columns[TeacherID]"
                          name="TeacherID" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Enrollements\Script Component.Outputs[Output 0].Columns[ClassID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Enrollements\Script Component.Outputs[Output 0].Columns[ClassID]"
                          name="ClassID" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Loop thru Clients\Enrollements.Paths[Derived Column Output]"
                  endId="Package\Loop thru Clients\Enrollements\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Loop thru Clients\Enrollements\Derived Column.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Loop thru Clients\Enrollements.Paths[Output 0]"
                  endId="Package\Loop thru Clients\Enrollements\Derived Column.Inputs[Derived Column Input]"
                  name="Output 0"
                  startId="Package\Loop thru Clients\Enrollements\Script Component.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Loop thru Clients\Orgs"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:Disabled="True"
          DTS:DTSID="{AA2C1C5C-5928-4B95-A173-E7C2DB9D2D2C}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Orgs"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              defaultBufferMaxRows="50000"
              version="1">
              <components>
                <component
                  refId="Package\Loop thru Clients\Orgs\Derived Column"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Loop thru Clients\Orgs\Derived Column.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Loop thru Clients\Orgs\Derived Column.Inputs[Derived Column Input].Columns[State]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="State"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Loop thru Clients\Orgs\Script Component.Outputs[Output 0].Columns[State]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[LEFT](#{Package\Loop thru Clients\Orgs\Script Component.Outputs[Output 0].Columns[State]},2)</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">LEFT(State,2)</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Loop thru Clients\Orgs\Derived Column.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Loop thru Clients\Orgs\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop thru Clients\Orgs\Derived Column.Outputs[Derived Column Output].Columns[ClientUID]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Loop thru Clients\Orgs\Derived Column.Outputs[Derived Column Output].Columns[ClientUID]"
                          name="ClientUID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::ClientID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::ClientID]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Loop thru Clients\Orgs\Derived Column.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Loop thru Clients\Orgs\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop thru Clients\Orgs\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Orgs\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Orgs\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Orgs\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Loop thru Clients\Orgs\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[PSStudents]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Loop thru Clients\Orgs\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[OneRoster]"
                      connectionManagerRefId="Package.ConnectionManagers[OneRoster]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Loop thru Clients\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Loop thru Clients\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[StudentID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="StudentID"
                          externalMetadataColumnId="Package\Loop thru Clients\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StudentID]"
                          lineageId="Package\Loop thru Clients\Orgs\Script Component.Outputs[Output 0].Columns[StudentID]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[CampusID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="CampusID"
                          externalMetadataColumnId="Package\Loop thru Clients\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CampusID]"
                          lineageId="Package\Loop thru Clients\Orgs\Script Component.Outputs[Output 0].Columns[CampusID]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[FirstName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="FirstName"
                          externalMetadataColumnId="Package\Loop thru Clients\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FirstName]"
                          lineageId="Package\Loop thru Clients\Orgs\Script Component.Outputs[Output 0].Columns[FirstName]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[LastName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="LastName"
                          externalMetadataColumnId="Package\Loop thru Clients\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[LastName]"
                          lineageId="Package\Loop thru Clients\Orgs\Script Component.Outputs[Output 0].Columns[LastName]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[MiddleName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="MiddleName"
                          externalMetadataColumnId="Package\Loop thru Clients\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[MiddleName]"
                          lineageId="Package\Loop thru Clients\Orgs\Script Component.Outputs[Output 0].Columns[MiddleName]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Grade]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Grade"
                          externalMetadataColumnId="Package\Loop thru Clients\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Grade]"
                          lineageId="Package\Loop thru Clients\Orgs\Script Component.Outputs[Output 0].Columns[Grade]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[HomeRoom]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="HomeRoom"
                          externalMetadataColumnId="Package\Loop thru Clients\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[HomeRoom]"
                          lineageId="Package\Loop thru Clients\Orgs\Script Component.Outputs[Output 0].Columns[HomeRoom]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Phone]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Phone"
                          externalMetadataColumnId="Package\Loop thru Clients\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Phone]"
                          lineageId="Package\Loop thru Clients\Orgs\Script Component.Outputs[Output 0].Columns[Phone]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ParentPhone]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="ParentPhone"
                          externalMetadataColumnId="Package\Loop thru Clients\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ParentPhone]"
                          lineageId="Package\Loop thru Clients\Orgs\Script Component.Outputs[Output 0].Columns[ParentPhone]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Email]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="Email"
                          externalMetadataColumnId="Package\Loop thru Clients\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Email]"
                          lineageId="Package\Loop thru Clients\Orgs\Script Component.Outputs[Output 0].Columns[Email]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ParentEmail]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="ParentEmail"
                          externalMetadataColumnId="Package\Loop thru Clients\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ParentEmail]"
                          lineageId="Package\Loop thru Clients\Orgs\Script Component.Outputs[Output 0].Columns[ParentEmail]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Address]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="Address"
                          externalMetadataColumnId="Package\Loop thru Clients\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Address]"
                          lineageId="Package\Loop thru Clients\Orgs\Script Component.Outputs[Output 0].Columns[Address]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Address2]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="Address2"
                          externalMetadataColumnId="Package\Loop thru Clients\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Address2]"
                          lineageId="Package\Loop thru Clients\Orgs\Script Component.Outputs[Output 0].Columns[Address2]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[City]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="City"
                          externalMetadataColumnId="Package\Loop thru Clients\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[City]"
                          lineageId="Package\Loop thru Clients\Orgs\Script Component.Outputs[Output 0].Columns[City]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[State]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="State"
                          externalMetadataColumnId="Package\Loop thru Clients\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[State]"
                          lineageId="Package\Loop thru Clients\Orgs\Script Component.Outputs[Output 0].Columns[State]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Zip]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="10"
                          cachedName="Zip"
                          externalMetadataColumnId="Package\Loop thru Clients\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Zip]"
                          lineageId="Package\Loop thru Clients\Orgs\Script Component.Outputs[Output 0].Columns[Zip]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Deactivate]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Deactivate"
                          externalMetadataColumnId="Package\Loop thru Clients\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Deactivate]"
                          lineageId="Package\Loop thru Clients\Orgs\Script Component.Outputs[Output 0].Columns[Deactivate]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ClientUID]"
                          cachedDataType="i4"
                          cachedName="ClientUID"
                          externalMetadataColumnId="Package\Loop thru Clients\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientUID]"
                          lineageId="Package\Loop thru Clients\Orgs\Derived Column.Outputs[Derived Column Output].Columns[ClientUID]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StudentsPSUID]"
                          dataType="i4"
                          name="StudentsPSUID" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientUID]"
                          dataType="i4"
                          name="ClientUID" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StudentID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="StudentID" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CampusID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="CampusID" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FirstName]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="FirstName" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[LastName]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="LastName" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[MiddleName]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="MiddleName" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Grade]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Grade" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[HomeRoom]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="HomeRoom" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Phone]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Phone" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ParentPhone]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="ParentPhone" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Email]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Email" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ParentEmail]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="ParentEmail" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Address]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="Address" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Address2]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="Address2" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[City]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="City" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[State]"
                          codePage="1252"
                          dataType="str"
                          length="2"
                          name="State" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Zip]"
                          codePage="1252"
                          dataType="str"
                          length="10"
                          name="Zip" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Race]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Race" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Gender]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Gender" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Deactivate]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Deactivate" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Loop thru Clients\Orgs\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Loop thru Clients\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop thru Clients\Orgs\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Orgs\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Orgs\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Orgs\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Loop thru Clients\Orgs\Script Component"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;11"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Script Component"
                  version="12">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_7fcaffc860d4432992f6f4f13b26c8a8")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_7fcaffc860d4432992f6f4f13b26c8a8")]
[assembly: AssemblyCopyright("Copyright @  2019")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[
#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces

using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.IO;
using System.Net;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Runtime.Serialization;
using System.Runtime.Serialization.Json;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading.Tasks;
using System.Web.Script.Serialization;
using System.Windows.Forms;



#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    static string pLocation = "/ws/schema/query/com.hayessoft.TIPWeb.students";
    static string tokenURI = "/oauth/access_token/";
    static string processType = "Student";

    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();

    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */
        ProcessStudents().Wait();
    }


    public async Task<int> ProcessStudents()
    {
        try
        {

            // The server base address
            string baseURL = Variables.ClientServer;

            //MessageBox.Show(uri);

            ServicePointManager.Expect100Continue = true;
            ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;


            /// The client information used to get the OAuth Access Token from the server.
            string clientId = Variables.ClientIDPS;
            string clientSecret = Variables.ClientSecret;
            string sendToken = EncodeTo64(Variables.ClientIDPS + ":" + Variables.ClientSecret);
            //WriteToDatabase(0, "Student-sendToken", sendToken);
            // this will hold the Access Token returned from the server.
            //MessageBox.Show(sendToken, "sendToken");

            string accessToken = await GetAccessToken(baseURL, sendToken, clientId, clientSecret);
            //-->>>>>>>>>>>>>> Add : if returns null, stop
            if (accessToken == null)
            {
                WriteToDatabase(1, "Access Token", "GetAccessToken returned null");
                return 0;
            }
            //MessageBox.Show(accessToken, "access token");


            string FileSize = await GetFileSize(baseURL, accessToken);
            if (FileSize == null)
            {
                WriteToDatabase(1, "File Size", "GetFileSize returned null");
                return 0;
            }

            var jsonResponse = await GetStudents(baseURL, accessToken, FileSize);

            return 0;
        }
        catch (Exception ex)
        {
            WriteToDatabase(1, "ProcessStudents", ex.Message);
            return 0;
        }

    }


    /// <summary>
    /// Gets the list of Students.
    /// </summary>
    /// <param name="baseUrl">The url for the Student list</param>
    /// <param name="accessToken">Acquired in the previous method</param>
    /// <returns>The page of articles.</returns>
    private async Task<dynamic> GetStudents(string baseUrl, string accessToken, string FileSize)
    {
        try
        {
            int TotalRecords;
            string pageSize = Variables.PageSize;
            int intPageSize = Convert.ToInt32(pageSize);
            if (Int32.TryParse(FileSize, out TotalRecords))
            {
                int pages = ((TotalRecords - 1) / intPageSize) + 1;
                //MessageBox.Show(pages.ToString(), "pages");
                //MessageBox.Show(pageSize, "page size");

                for (int i = 1; i <= pages; i++)
                {
                    string pagenum = i.ToString();
                    //MessageBox.Show(pagenum, "page number");

                    string uri = baseUrl + pLocation + "?pagesize="+ pageSize + "&page=" + pagenum;
                    var client = new HttpClient();

                    client.BaseAddress = new Uri(uri);

                    client.DefaultRequestHeaders.Accept.Clear();
                    client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));
                    client.DefaultRequestHeaders.Add("Authorization", "Bearer " + accessToken);

                    //MessageBox.Show(uri, "Students uri");

                    StringContent stringContent = new StringContent("", Encoding.UTF8, "application/json");
                    //StringContent stringContent = new StringContent("page=" + pagenum, Encoding.UTF8, "application/json");
                    //string content;

                    HttpResponseMessage response = await client.PostAsync(new Uri(uri), stringContent);

                    response.EnsureSuccessStatusCode();
                    string jsonString = await response.Content.ReadAsStringAsync();
                    //MessageBox.Show(jsonString, "jsonstring");

                    jsonString = cleanJsonString(jsonString);

                    //Deserialize our JSON
                    DataTable dt = JsonStringToDataTable(jsonString);
                    int numRows = 0;


                    foreach (DataRow row in dt.Rows)
                    {
                        Output0Buffer.AddRow();
                        Output0Buffer.StudentID = row["StudentID"].ToString().Replace("\\", "");
                        Output0Buffer.CampusID = row["CampusID"].ToString().Replace("\\", "");
                        Output0Buffer.FirstName = row["FirstName"].ToString().Replace("\\", "");
                        Output0Buffer.LastName = row["LastName"].ToString().Replace("\\", "");
                        Output0Buffer.MiddleName = row["MiddleName"].ToString().Replace("\\", "");
                        Output0Buffer.Grade = row["Grade"].ToString().Replace("\\", "");
                        Output0Buffer.HomeRoom = row["HomeRoom"].ToString().Replace("\\", "");
                        Output0Buffer.Phone = row["Phone"].ToString().Replace("\\", "");
                        Output0Buffer.ParentPhone = row["ParentPhone"].ToString().Replace("\\", "");
                        Output0Buffer.Email = row["Email"].ToString().Replace("\\", "");
                        Output0Buffer.ParentEmail = row["ParentEmail"].ToString().Replace("\\", "");
                        Output0Buffer.Address = row["Address"].ToString().Replace("\\", "");
                        Output0Buffer.Address2 = row["Address2"].ToString().Replace("\\", "");
                        Output0Buffer.City = row["City"].ToString().Replace("\\", "");
                        Output0Buffer.State = row["State"].ToString().Replace("\\", "");
                        Output0Buffer.Zip = row["zip"].ToString().Replace("\\", "");
                        Output0Buffer.Deactivate = row["Deactivated"].ToString().Replace("\\", "");

                        numRows += 1;
                    }
                    WriteToDatabase(0, "GetStudents - Row Count Page Num: " + pagenum, numRows.ToString());
                }
                return null;
            }
            return null;

        }
        catch (Exception ex)
        {
            WriteToDatabase(1, "GetStudents", ex.Message);
            throw;
        }

    }


    private async Task<string> GetFileSize(string baseURL, string accessToken)
    {
        try
        {
            using (var client = new HttpClient())
            {
                string uri = baseURL + pLocation + "/count";
                client.BaseAddress = new Uri(uri);
                //MessageBox.Show(uri, "Students uri");

                client.DefaultRequestHeaders.Accept.Clear();
                client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));
                client.DefaultRequestHeaders.Add("Authorization", "Bearer " + accessToken);

                var stringContent = new StringContent("", Encoding.UTF8, "application/json");

                //Get file size
                HttpResponseMessage response = await client.PostAsync(new Uri(uri), stringContent);

                response.EnsureSuccessStatusCode();
                string jsonString = await response.Content.ReadAsStringAsync();

                //string jsonString = response.Content.ToString();//.ReadAsStringAsync();
                //MessageBox.Show(jsonString, "jsonstring");

                //Deserialize our JSON
                var FileSizeObject = JsonHelper.JsonDeserialize<FileSize>(jsonString);

                // return the Access Token.
                var FileSize = FileSizeObject.count;
                //MessageBox.Show(FileSize, "File Size");
                WriteToDatabase(0, "RecordCount", FileSize);
                return FileSize;
            }
        }
        catch (Exception ex)
        {
            //MessageBox.Show(ex.Message);
            //MessageBox.Show(ex.StackTrace);
            WriteToDatabase(1, "GetFileSize", ex.Message);
            //return null;
            throw;
        }

    }

    /// <summary>
    /// This method uses the OAuth Client Credentials Flow to get an Access Token to provide
    /// Authorization to the APIs.
    /// </summary>
    /// <returns></returns>
    private static async Task<string> GetAccessToken(string baseURL, string sendToken, string clientId, string clientSecret)
    {
        try
        {
            using (var client = new HttpClient())
            {

                string uri = baseURL + tokenURI;
                client.BaseAddress = new Uri(uri);

                //MessageBox.Show(uri, "access token uri");

                client.DefaultRequestHeaders.Accept.Clear();
                client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/x-www-form-urlencoded"));
                client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Basic", sendToken);

                List<KeyValuePair<string, string>> postData = new List<KeyValuePair<string, string>>();
                postData.Add(new KeyValuePair<string, string>("grant_type", "client_credentials"));
                FormUrlEncodedContent content = new FormUrlEncodedContent(postData);

                // Post to the Server and parse the response.
                HttpResponseMessage response = await client.PostAsync(new Uri(uri), content);

                response.EnsureSuccessStatusCode();
                string jsonString = await response.Content.ReadAsStringAsync();

                //MessageBox.Show(jsonString, "jsonstring");

                //Deserialize our JSON
                var accessTokenObject = JsonHelper.JsonDeserialize<AccessToken>(jsonString);

                // return the Access Token.
                var token = accessTokenObject.access_token;
                //MessageBox.Show(token, "access token");
                return token;
            }
        }
        catch (Exception ex)
        {
            //WriteToDatabase(1, "GetAccessToken", ex.Message);
            //MessageBox.Show(ex.Message);
            //MessageBox.Show(ex.StackTrace);
            //return null;
            throw ex;
        }
    }

    public string EncodeTo64(string toEncode)
    {
        byte[] toEncodeAsBytes = System.Text.ASCIIEncoding.ASCII.GetBytes(toEncode);
        string returnValue = System.Convert.ToBase64String(toEncodeAsBytes);
        return returnValue;

    }
    public class JsonHelper
    {
        /// <summary>
        /// JSON Serialization
        /// </summary>
        public static string JsonSerializer<T>(T t)
        {
            DataContractJsonSerializer ser = new DataContractJsonSerializer(typeof(T));
            MemoryStream ms = new MemoryStream();
            ser.WriteObject(ms, t);
            string jsonString = Encoding.UTF8.GetString(ms.ToArray());
            ms.Close();
            return jsonString;
        }
        /// <summary>
        /// JSON Deserialization
        /// </summary>
        public static T JsonDeserialize<T>(string jsonString)
        {
            DataContractJsonSerializer ser = new DataContractJsonSerializer(typeof(T));
            MemoryStream ms = new MemoryStream(Encoding.UTF8.GetBytes(jsonString));
            T obj = (T)ser.ReadObject(ms);
            return obj;
        }
    }

    public class Student
    {
        public string StudentID { get; set; }
        public string CampusID { get; set; }
        public string FirstName { get; set; }
        public string LastName { get; set; }
        public string MiddleName { get; set; }
        public string Grade { get; set; }
        public string HomeRoom { get; set; }
        public string Department { get; set; }
        public string Phone { get; set; }
        public string Email { get; set; }
        public string Address { get; set; }
        public string Address2 { get; set; }
        public string City { get; set; }
        public string State { get; set; }
        public string Zip { get; set; }
        public string Deactivate { get; set; }
    }

    public class AccessToken
    {
        public string access_token { get; set; }
        public string token_type { get; set; }
        public string expires_in { get; set; }
    }

    public class FileSize
    {
        public string count { get; set; }

    }



    public DataTable JsonStringToDataTable(string jsonString)
    {
        try
        {
            DataTable dt = new DataTable();
            string[] jsonStringArray = Regex.Split(jsonString.Replace("[", "").Replace("]", ""), "},{");
            List<string> ColumnsName = new List<string>();
            foreach (string jSA in jsonStringArray)
            {
                string[] jsonStringData = Regex.Split(jSA.Replace("{", "").Replace("}", ""), ",");
                foreach (string ColumnsNameData in jsonStringData)
                {
                    try
                    {
                        int idx = ColumnsNameData.IndexOf(":");
                        string ColumnsNameString = ColumnsNameData.Substring(0, idx - 1).Replace("\"", "");
                        if (!ColumnsName.Contains(ColumnsNameString))
                        {
                            ColumnsName.Add(ColumnsNameString);
                        }
                    }
                    catch //(Exception ex)
                    {
                        WriteToDatabase(1, "JsonStringToDataTable: Columns", (string.Format("Error Parsing Column Name : {0}", ColumnsNameData)));
                    }
                }
                break;
            }
            foreach (string AddColumnName in ColumnsName)
            {
                dt.Columns.Add(AddColumnName);
            }
            foreach (string jSA in jsonStringArray)
            {
                string[] RowData = Regex.Split(jSA.Replace("{", "").Replace("}", ""), ",");
                DataRow nr = dt.NewRow();
                foreach (string rowData in RowData)
                {
                    try
                    {
                        int idx = rowData.IndexOf(":");
                        string RowColumns = rowData.Substring(0, idx - 1).Replace("\"", "").Replace("\\", "");
                        string RowDataString = rowData.Substring(idx + 1).Replace("\"", "").Replace("\\", "");
                        nr[RowColumns] = RowDataString;
                    }
                    catch //(Exception ex)
                    {
                        WriteToDatabase(1, "JsonStringToDataTable: For each row", (string.Format("Error Parsing Row  Name : {0}", rowData)));
                        continue;
                    }
                }
                dt.Rows.Add(nr);
            }
            return dt;
        }
        catch (Exception ex)
        {
            WriteToDatabase(1, "JsonStringToDataTable", ex.Message);
            return null;
        }
    }

    public string cleanJsonString(string jsonString)
    {

        jsonString = jsonString.Replace("{\"name\":\"students\",\"record\":[", "");
        jsonString = jsonString.Replace("],\"@extensions\":\"activities,", "");
        jsonString = jsonString.Replace("u_student_extension_test,", "");
        jsonString = jsonString.Replace("u_student_new_ext,", "");
        jsonString = jsonString.Replace("studentcorefields,", "");
        jsonString = jsonString.Replace("u_students_extension,", "");
        jsonString = jsonString.Replace("s_stu_ncea_x,", "");
        jsonString = jsonString.Replace("s_stu_crdc_x,", "");
        jsonString = jsonString.Replace("u_ld_account_management,", "");
        jsonString = jsonString.Replace("c_studentlocator,", "");
        jsonString = jsonString.Replace("u_studentsuserfields,", "");
        jsonString = jsonString.Replace("u_customfields,", "");
        jsonString = jsonString.Replace("s_stu_edfi_x\"}", "");

        return jsonString;
    }


    public void WriteToDatabase(int Error, string Area, string LogInfo)
    {
        try
        {
            //MessageBox.Show("WriteToDatabase");
            var ConnString = Connections.PSDB.ConnectionString;

            using (SqlConnection conn = new SqlConnection(Connections.PSDB.ConnectionString))
            {
                if (conn.State != ConnectionState.Open) conn.Open();
                //string insertText = "Insert into PSLog (ClientUID, FileType, Area, LogInfo) Values (@ClientUID, @FileType, @Area, @LogInfo ) ";
                SqlCommand cmd = new SqlCommand("spLogInfo", conn);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("@ClientUID", SqlDbType.Int).Value = Variables.ClientID;
                cmd.Parameters.Add("@Error", SqlDbType.Int).Value = Error;
                cmd.Parameters.Add("@FileType", SqlDbType.VarChar, 50).Value = processType;
                cmd.Parameters.Add("@Area", SqlDbType.VarChar, 100).Value = Area;
                cmd.Parameters.Add("@LogInfo", SqlDbType.VarChar, 1000).Value = LogInfo;
                cmd.ExecuteNonQuery();
            }
        }
        catch //(Exception ex)
        {
            throw;
        }
    }
}




]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_7fcaffc860d4432992f6f4f13b26c8a8.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{E0EF711B-0FB0-456C-8AFE-A24D0F785CA5}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_7fcaffc860d4432992f6f4f13b26c8a8</RootNamespace>
    <AssemblyName>SC_7fcaffc860d4432992f6f4f13b26c8a8</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Runtime.Serialization" />
    <Reference Include="System.Web" />
    <Reference Include="System.Web.Extensions" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <WCFMetadata Include="Service References\" />
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 PSDB
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"PSDB").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public Int32 ClientID
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["ClientID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientIDPS
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientIDPS"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientSecret
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientSecret"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientServer
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientServer"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String PageSize
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["PageSize"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String StudentID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool StudentID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CampusID
    {
        set
        {
            this[1] = value;
        }
    }
    public bool CampusID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String FirstName
    {
        set
        {
            this[2] = value;
        }
    }
    public bool FirstName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String LastName
    {
        set
        {
            this[3] = value;
        }
    }
    public bool LastName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String MiddleName
    {
        set
        {
            this[4] = value;
        }
    }
    public bool MiddleName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Grade
    {
        set
        {
            this[5] = value;
        }
    }
    public bool Grade_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String HomeRoom
    {
        set
        {
            this[6] = value;
        }
    }
    public bool HomeRoom_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Phone
    {
        set
        {
            this[7] = value;
        }
    }
    public bool Phone_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ParentPhone
    {
        set
        {
            this[8] = value;
        }
    }
    public bool ParentPhone_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Email
    {
        set
        {
            this[9] = value;
        }
    }
    public bool Email_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ParentEmail
    {
        set
        {
            this[10] = value;
        }
    }
    public bool ParentEmail_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Address
    {
        set
        {
            this[11] = value;
        }
    }
    public bool Address_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Address2
    {
        set
        {
            this[12] = value;
        }
    }
    public bool Address2_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String City
    {
        set
        {
            this[13] = value;
        }
    }
    public bool City_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(13);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String State
    {
        set
        {
            this[14] = value;
        }
    }
    public bool State_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(14);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Zip
    {
        set
        {
            this[15] = value;
        }
    }
    public bool Zip_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(15);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Deactivate
    {
        set
        {
            this[16] = value;
        }
    }
    public bool Deactivate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(16);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_7fcaffc860d4432992f6f4f13b26c8a8</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_7fcaffc860d4432992f6f4f13b26c8a8</msb:DisplayName>
    <msb:ProjectId>{52725E75-18F2-4B1C-88C5-CE07D5687E02}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_7fcaffc860d4432992f6f4f13b26c8a8.csproj" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7fcaffc860d4432992f6f4f13b26c8a8.Properties.Settings.get_Default():SC_7fcaffc860d4432992f6f4f13b26c8a8.Properties.Sett" +
    "ings")]

namespace SC_7fcaffc860d4432992f6f4f13b26c8a8.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7fcaffc860d4432992f6f4f13b26c8a8.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7fcaffc860d4432992f6f4f13b26c8a8.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7fcaffc860d4432992f6f4f13b26c8a8.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_7fcaffc860d4432992f6f4f13b26c8a8.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_7fcaffc860d4432992f6f4f13b26c8a8.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_7fcaffc860d4432992f6f4f13b26c8a8.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[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
BwAAAK4BAAC1AQAAGQAAABcAAAE2Anw8AAAEAyiTAAAKKgAAQlNKQgEAAQAAAAAADAAAAHY0LjAu
MzAzMTkAAAAABQBsAAAA4BgAACN+AABMGQAAQBYAACNTdHJpbmdzAAAAAIwvAACECQAAI1VTABA5
AAAQAAAAI0dVSUQAAAAgOQAAUAYAACNCbG9iAAAAAAAAAAIAAAFXF6ILCQ8AAAD6ATMAFgAAAQAA
AFsAAAAQAAAAQQAAAH0AAABWAAAABAAAAJkAAABZAAAADAAAAAgAAAA/AAAAVAAAAAgAAAAPAAAA
AQAAAAoAAAABAAAACAAAAAIAAAAOAAAAAADGCwEAAAAAAAYApgmLEQYAOgqLEQYAvwh4EQ8A/xEA
AAYA7AiMDgYAiQmMDgYAagmMDgYAIQqMDgYAxgmMDgYA3wmMDgYAHgmMDgYAOQkJCwoA+gnXBgYA
XAd8DQYAAwmLEQYAvQCUEg4AdgiLEQYA8xN8DRIA/gXHAgYABwHyAlMAVhEAABIA6hXHAgYANA98
DRIACQ9lFAYAXQ2nAgYAhwiLEQYANgd8DQYApwaLEQYA+QCLEQYA4ACLEQYAUgl4ERYAABX2DxYA
3gX2DwYARxHfEgYACAZ8DRYAexT2DxYA6hT2DwoANhDXBhoAJxDXBgoAhw/XBgoAwhTXBh4AZgCM
EAYAogh4EQYARxCrEQYAcw9IDiIAKAiMCyIA0wiMCyIAzgczDgYAhwuUEgYAAAuaFQYAXBV8DQYA
bgt8DSIAABbAEhIAng7HAhIAHg7HAhIA6g7HAhIA/A4+DxIAPQjHAhIAegVlFBIAcAU+DxIAKgfH
AhIA0w5lFBIA6RBlFBIAHAfHAgYAEAF8DRIA3RA+DwYAFw98DSYAAQC0ECYAKgC0ECYATQC0EB4A
fwCMEB4AGgCMEKcAuhUAAB4AkACMEAYAFAZ8DQYAEhaMDioAEhFRDyoALRFdDgYAYw2nAiIAbRD6
EyIAQAf6EyIAfwt8DRYAIhP+EhYAxAD+EhYAkwr+EhYAFhP+EhYADhX2DxIAswfHAhYAeQr+EgYA
RwHyAgYArwDyAgAAAAArAgAAAAABAAEAAQAQABMOAAAQAAEAAQABABAAGRAAAJkABAAOAAEAEACk
FAAApQAEADQAAQAQAPISAABJAAcAOQABABAASRIAAEkACAA7AAAAEACyEQ4SSQAJAEEAAAEQAIES
DhLBAAsARQACABAAgRAAAEkADABIAAIAEABdFAAASQAMAEsAAgAQALYNAABJABwAbAACABAA3woA
AEkAHwBzAAMBEACvAQAAbQAgAHYAAwEQAMUBAABtACcAeAADARAA4AEAAG0AMwB6AAMBEAAWAgAA
bQA7AHwAEQApDvMDEQCWAvMDEQBVB/MDBgDyEvYDBgBJEvoDBgAZEP4DAQCyFAIEAQCyFAIEEQCd
DQcEEQCjBwwEEQCNBREEAQClA/MDAQCLA/MDAQANBPMDAQDzA/MDAQDXA/MDAQDAA/MDAQClBPMD
AQAnBfMDAQAoBPMDAQCOBPMDAQAOBfMDAQBxA/MDAQBaBfMDAQBbBPMDAQD5BPMDAQByBPMDAQC/
BPMDAQA/BPMDAQDdBPMDAQBDBfMDBgBNCBUEBgAMEBgEBgCKEh8EAQAWAfMDAQBwAfMDAQCoACME
AQBAASoEBgBNCBUEBgAMEDEEBgCKEh8EBgDfCvMDBgBVDfMDBgDCDfMDAQAkAfMDAQCCARUEAQCZ
ARUEAQChAfMDAQCoADgEAQBAASMEBgBNCBUEBgAMEEEEBgCfAvMDBgDCDfMDBgCKEh8EAQAzAUgE
AQCoADgEAQBAASMEBgBNCBUEBgAMEEEEBgCfAvMDBgCpDfMDAQAzAUgEAQCoADgEAQBAASMEUCAA
AAAAxgBYCgYAAQBYIAAAAADGAGMKBgABAGAgAAAAAMYAwRMGAAEAcCAAAAAAhgCOE00EAQC0IAAA
AACBAJ4TVQQBABAhAAAAAIEA3ApgBAUAZCEAAAAAkQCzDWoEBwCvIQAAAACGAI4BdgQLAMQhAAAA
AIYA8gV7BAwAiCQAAAAAhgBHC3YEDQCAJQAAAACGAOYHgQQOAKAmAAAAAIYYYREGABEAqCYAAAAA
kRhnEYgEEQDIJgAAAACGGGERawERANMmAAAAAIYIZQIQABQA3SYAAAAAhggWDIwEFQD0JgAAAACG
CEoCEAAWAP4mAAAAAIYIAgyMBBcAFScAAAAAhgh+BhAAGAAfJwAAAACGCGYMjAQZADYnAAAAAIYI
YwYQABoAQCcAAAAAhghSDIwEGwBXJwAAAACGCEcGEAAcAGEnAAAAAIYIPAyMBB0AeCcAAAAAhgin
BRAAHgCCJwAAAACGCCsMjAQfAJknAAAAAIYIkA0QACAAoycAAAAAhgjyDIwEIQC6JwAAAACGCAIH
EAAiAMQnAAAAAIYIewyMBCMA2ycAAAAAhggMBxAAJADlJwAAAACGCIwMjAQlAPwnAAAAAIYIrAsQ
ACYABygAAAAAhgjKDIwEJwAfKAAAAACGCLYLEAAoACooAAAAAIYI2wyMBCkAQigAAAAAhghyExAA
KgBNKAAAAACGCBUNjAQrAGUoAAAAAIYIYwEQACwAcCgAAAAAhgjuC4wELQCIKAAAAACGCDQWEAAu
AJMoAAAAAIYIKA2MBC8AqygAAAAAhggeCBAAMAC2KAAAAACGCKMMjAQxAM4oAAAAAIYI7g8QADIA
2SgAAAAAhggGDYwEMwDxKAAAAACGCGcIEAA0APwoAAAAAIYItAyMBDUAFCkAAAAAhgDyFQYANgAc
KQAAAACGACMUBgA2ACQpAAAAAIYAJhQKATYALCkAAAAAhhhhEQYANgBMKQAAAADGAaoTBgA2AE4p
AAAAAIEANgMGADYAbCkAAAAAxgCFFZEENgBMKQAAAADGAcETBgA6AMEpAAAAAIYYYRGfBDoA0CkA
AAAAhgg0AqIBOwDxKQAAAACGGGERnwQ7AAAqAAAAAIYIcwJnATwAJioAAAAAhgixAioBPABMKgAA
AACGCAUUKgE8AHIqAAAAAIYIAREqATwAmCoAAAAAhgjPCioBPAC+KgAAAACDGGERBgA8AMYqAAAA
AJMIQxCmBDwA8ioAAAAAkwiLB6wEPAD5KgAAAACTCJcHsgQ8AAErAAAAAJYIPRS5BD0ACCsAAAAA
hhhhEQYAPQAQKwAAAACRGGcRiAQ9ABwrAAAAAJYAHhG+BD0AYCsAAAAAlgDoCsUEPgC+KgAAAACG
GGERBgA/AJgrAAAAAIYIVwIqAT8AoCsAAAAAhghlAhAAPwCpKwAAAACGCD0CKgFAALErAAAAAIYI
SgIQAEAAuisAAAAAhghwBioBQQDCKwAAAACGCH4GEABBAMsrAAAAAIYIVgYqAUIA0ysAAAAAhghj
BhAAQgDcKwAAAACGCDgGKgFDAOQrAAAAAIYIRwYQAEMA7SsAAAAAhgidBSoBRAD1KwAAAACGCKcF
EABEAP4rAAAAAIYIgw0qAUUABiwAAAAAhgiQDRAARQAPLAAAAACGCIYUKgFGABcsAAAAAIYIlRQQ
AEYAICwAAAAAhgj4BioBRwAoLAAAAACGCAIHEABHADEsAAAAAIYIogsqAUgAOSwAAAAAhgisCxAA
SABCLAAAAACGCGYTKgFJAEosAAAAAIYIchMQAEkAUywAAAAAhghWASoBSgBbLAAAAACGCGMBEABK
AGQsAAAAAIYIKxYqAUsAbCwAAAAAhgg0FhAASwB1LAAAAACGCBQIKgFMAH0sAAAAAIYIHggQAEwA
hiwAAAAAhgjmDyoBTQCOLAAAAACGCO4PEABNAJcsAAAAAIYIWAgqAU4AnywAAAAAhghnCBAATgC+
KgAAAACGGGERBgBPAKgsAAAAAIYIzg0qAU8AsCwAAAAAhgjfDRAATwC5LAAAAACGCGEHKgFQAMEs
AAAAAIYIcAcQAFAAyiwAAAAAhgj1DSoBUQDSLAAAAACGCAQOEABRAL4qAAAAAIYYYREGAFIA2ywA
AAAAhggaFSoBUgDjLAAAAACGCCQVEABSAL4qAAAAAIYYYREGAFMA7CwAAAAA4QGRFQYAUwCELwAA
AADhAboGIQBTAJQvAAAAAOEBkRUGAFQAyDUAAAAA4QG6BiEAVADYNQAAAADhAZEVBgBVAEg4AAAA
AOEBugYhAFUAWDgAAAAA4QGRFQYAVgCUOgAAAADhAboGIQBWAAAAAAAAAAAAAQBVDQAAAgDCDQAA
AwDfCgAAAQCfAgAAAgDCDQAAAQCfAgAAAgCpDQAAAwApAwAABAAWFAAAAQDJBQAAAQBXCwAAAQBX
CwAAAQBBEQAAAgDCAgAAAwB/DwAAAQA8EAAAAgBcEgAAAwCVDwAAAQCzCgAAAQCzCgAAAQCzCgAA
AQCzCgAAAQCzCgAAAQCzCgAAAQCzCgAAAQCzCgAAAQCzCgAAAQCzCgAAAQCzCgAAAQCzCgAAAQCz
CgAAAQCzCgAAAQCzCgAAAQCzCgAAAQCzCgAAAQCzCgAAAQCzCgAAAQCzCgAAAQCzCgAAAQCzCgAA
AQCzCgAAAQCzCgAAAQCzCgAAAQCzCgAAAQCzCgAAAQCzCgAAAQCzCgAAAQCzCgAAAQCzCgAAAQCz
CgAAAQCzCgAAAQCzCgAAAQCwEwAAAgBuEQAAAwBPEwAABACVDwAAAQDIFAAAAQDIFAAAAQCzCgAA
AQDoFQAAAQBXCwAAAQCzCgAAAQCzCgAAAQCzCgAAAQCzCgAAAQCzCgAAAQCzCgAAAQCzCgAAAQCz
CgAAAQCzCgAAAQCzCgAAAQCzCgAAAQCzCgAAAQCzCgAAAQCzCgAAAQCzCgAAAQCzCgAAAQCzCgAA
AQCzCgAAAQCzCgAAAQCzCgAAAQDKBgAAAQDKBgAAAQDKBgAAAQDKBg0AcQAOAHEADwBxABAAcQAJ
AGERAQARAGERBgAZAGERCgApAGEREAAxAGEREAA5AGEREABBAGEREABJAGEREABRAGEREABZAGER
EABhAGEREABpAGERBgB5AGERFQCJAGERGwDRAGERBgDhAJEVBgDhALoGIQD5AGERBgBZAWERBgB5
AWERJwBJAVgKBgBJAWMKBgCJATIUBgAMAA0IOQAMAFYVQgAMAIMLTwAUAA0IOQAUAFYVQgAUAIML
TwAcAA0IOQAcAFYVQgAcAIMLTwCRAYwCggCRAVMSiACZASMLjgCZAGERBgChAYUFuQCpATcUvwAk
AGERBgChAfgKzAChAXUL0QAkAKsS1wAkADID3QChAdwT4wAkAFMR6QAsANIU+ACZALQS/QCxATID
AwEsAJEVCgEZAfwHBgCZAPkVDgGhAXULEwGxAHMNGAGZALgTHgHBATIDJAG5ANIFKgFRATILKgHB
AGEREADJARQIMwHJAfANBgDZAWEROQHhASYHQAHZAVcTRwHxATIDTQERAm8KVwHxATIDXAHhARsW
ZwExAWERawExAXMNdwExATgNAQAZAmEREAAxAfIVBgAxASMUBgAxASYUCgFJAWERBgBJAYACgQFJ
AXASiQGRAGERBgBJAdMCjwEhArMOlQEpAowGmwExAlcQogFJAT0SqAE5AmoNrgFJAdUVtQFBAqYV
uwFxACYGwgFxAA4WygFhAWER0AGBAWERBgBpAmERFQDJAGERBgBxAu4T4AGRAdcBggDJAAYW6AGR
AWsL7QF5AvYHBgDJAGER8wFxAuMT+QGBArkKGgKBAkANHwKhAdUTJgI8APYQMwJEAGEDCgEMAEoD
QgJEAEkU+ABMAPYQMwJUAGEDCgFUAEkU+AAMADEPbQIMAFMU3QAMALoGIQCZAQ4BmwIJAgQIoAIJ
AmILKgGhAdUTpwIhAWERBgCRAmEREAAhAX4TrQIhATUTtAKZAi4VugJcAAYQBgCpAmEREABcADID
3QChAdUTzgKxAjID1AIBAWER2gIhAR8D4wJkAPYQMwJsAGEDCgEUAEoDQgJsAEkU+AAJAbEFDwMJ
Ad4UFQO5Ag0DGwPBAlMRLQMRAdIUMwOxAGoNNwORAGILKgERAZEVCgEUADEPbQIUAFMU3QAUALoG
IQAcAEoDQgIcADEPbQIcAFMU3QAcALoGIQDJAmER1AKZAnoOigN0AGERBgB8AGERpQN0ADID3QAp
AWERrQMkAHMARAYuAAsA7wQuABMA+AQuABsAFwUuACMAIAUuACsASQUuADMASQUuADsASQUuAEMA
IAUuAEsATwUuAFMASQUuAFsAZgVDAGMAPwaAAGsAsAWgAGsA1gXAAGsA+AXgAGsAGgbjAJsAPwZh
AXsAPwaBAXsAPwahAXsAPwajAXsAPwbBAXsAPwbDAXsAPwbhAXsAPwbjAXsAPwYBAnsAPwYDAnsA
PwYhAnsAPwZBAnsAPwZhAnsAPwaBAnsAPwahAnsAPwbBAnsAPwbhAnsAPwYBA3sAPwYhA3sAPwZB
A3sAPwZhA3sAPwaBA3sAPwahA3sAPwbBA3sAPwbhA3sAPwYpBaMAFwVJBaMAFwVgCXsAPwaACXsA
PwagCXsAPwbACXsAPwbgCXsAPwYACnsAPwYgCnsAPwZACnsAPwZgCnsAPwaACnsAPwagCnsAPwbA
CnsAPwbgCnsAPwYAC3sAPwYgC3sAPwZAC3sAPwZgC3sAPwaAC3sAPwagC3sAPwbAC3sAPwbgC3sA
PwYADHsAPwYgDHsAPwZADHsAPwZgDHsAPwaADHsAPwagDHsAPwbADHsAPwbgDHsAPwYADXsAPwYg
DXsAPwZADXsAPwaADXsAPwagDXsAPwbADXsAPwbgDXsAPwYADnsAPwYgDnsAPwZgDnsAPwaADnsA
PwbgDpMAPwYgD5MAPwZgD5MAPwagD5MAPwYuAFgAaAB4AJQALgF9AdgBAAJzAjwDcwMDAAEABQAj
AAYAJAAHACkACAArAAoALAALADwADAA/AAAAaQLMBAAAGgzQBAAATgLMBAAABgzQBAAAggbMBAAA
agzQBAAAZwbMBAAAVgzQBAAASwbMBAAAQAzQBAAAqwXMBAAALwzQBAAAlA3MBAAA9gzQBAAAFgfM
BAAAlgzQBAAAEAfMBAAAkAzQBAAAwAvMBAAA5QzQBAAAugvMBAAA3wzQBAAAhhPMBAAAGQ3QBAAA
ZwHMBAAA8gvQBAAAOBbMBAAALA3QBAAARwjMBAAApwzQBAAA8g/MBAAACg3QBAAAawjMBAAAuAzQ
BAAAOALUBAAAdwLaBAAAtQLMBAAACRTMBAAABRHMBAAA0wrMBAAARxDeBAAAqwfkBAAAQRTqBAAA
aQLMBAAATgLMBAAAggbMBAAAZwbMBAAASwbMBAAAqwXMBAAAlA3MBAAAmRTMBAAAFgfMBAAAwAvM
BAAAhhPMBAAAZwHMBAAAOBbMBAAARwjMBAAA8g/MBAAAawjMBAAA4w3MBAAAdAfMBAAACA7MBAAA
KBXMBAEADwADAAEAEAAFAAEAEQAHAAEAEgAJAAEAEwALAAEAFAANAAEAFQAPAAEAFgARAAEAFwAT
AAEAGAAVAAEAGQAXAAEAGgAZAAEAGwAbAAEAHAAdAAEAHQAfAAEAHgAhAAEAHwAjAAEAIAAlAAEA
IQAnAAEAIgApAAEAIwArAAEAJAAtAAEAJQAvAAEAJgAxAAEAJwAzAAEAKAA1AAEAKQA3AAEAKgA5
AAEAKwA7AAEALAA9AAEALQA/AAEALgBBAAEALwBDAAEAMABFAAIAOgBHAAIAPABJAAIAPQBLAAIA
PgBNAAIAPwBPAAIAQABRAAIAQgBTAAIAQwBVAAEARABVAAIARQBXAAIASwBZAAEATABZAAIATQBb
AAEATgBbAAIATwBdAAEAUABdAAIAUQBfAAEAUgBfAAIAUwBhAAEAVABhAAIAVQBjAAEAVgBjAAIA
VwBlAAEAWABlAAIAWQBnAAEAWgBnAAIAWwBpAAEAXABpAAIAXQBrAAEAXgBrAAIAXwBtAAEAYABt
AAIAYQBvAAEAYgBvAAIAYwBxAAEAZABxAAIAZQBzAAEAZgBzAAIAZwB1AAEAaAB1AAIAaQB3AAEA
agB3AAIAbAB5AAEAbQB5AAIAbgB7AAEAbwB7AAIAcAB9AAEAcQB9AAIAcwB/AAEAdAB/AA0A7AAh
AA0A7gAjAA4A8AAhAA4A8gAjAA8A9AAhAA8A9gAjABAA+AAhABAA+gAjADMAXQBtAMYA8gDdAS0C
PAJXAl0CxQLzAvsCkQOdAwSAAAABAAAAAAAAAAAAAAAAAPIBAAAEAAAAAAAAAAAAAADYA+kCAAAA
AA8AAAAAAAAAAAAAAOEDORUAAAAABAAAAAAAAAAAAAAA2AN/BwAAAAAEAAAAAAAAAAAAAADYA8cC
AAAAAAQAAAAAAAAAAAAAAOoD9g8AAAAADwAAAAAAAAAAAAAA4QNkFQAAAAAPAAAAAAAAAAAAAADh
A58PAAAAAAQAAAAAAAAAAAAAANgDfA0AAAAADwAAAAAAAAAAAAAA4QPCDwAAAAAEAAAAAAAAAAAA
AADYA10OAAAAAAAAAAABAAAAvBEAAAkAAgAKAAIACwACAAwAAgANAAIADgACAA8AAgAQAAIAAAAA
AJEAwAIAAAAAkwDAAjMASgA5AGMAPwBzAD8AfQDTAE0C0wBjAgcBAwMHASMDIQFYAyEBZAOSAG4D
IQG9AyEByQOSANMDAAAASURUU0NvbXBvbmVudE1ldGFEYXRhMTAwAElEVFNWYXJpYWJsZTEwMABJ
RFRTUnVudGltZUNvbm5lY3Rpb25Db2xsZWN0aW9uMTAwAElEVFNSdW50aW1lQ29ubmVjdGlvbjEw
MABJRFRTQ29ubmVjdGlvbk1hbmFnZXIxMDAASURUU1ZhcmlhYmxlczEwMABJRFRTRXZhbHVhdG9y
Q29udGV4dDEwMAA8PnVfXzEASUVudW1lcmFibGVgMQBUYXNrYDEASHR0cEhlYWRlclZhbHVlQ29s
bGVjdGlvbmAxAEFzeW5jVGFza01ldGhvZEJ1aWxkZXJgMQBUYXNrQXdhaXRlcmAxAExpc3RgMQBU
b0ludDMyADxiYXNlVVJMPjVfXzIAPHBhZ2VTaXplPjVfXzIAPGNsaWVudD41X18yADw+dV9fMgBL
ZXlWYWx1ZVBhaXJgMgBnZXRfQWRkcmVzczIAc2V0X0FkZHJlc3MyADxhY2Nlc3NUb2tlbj41X18z
ADxwYWdlcz41X18zAEVuY29kZVRvNjQAPGk+NV9fNAA8cGFnZW51bT41X181ADxQcm9jZXNzU3R1
ZGVudHM+ZF9fNgA8R2V0U3R1ZGVudHM+ZF9fNwBnZXRfVVRGOAA8R2V0RmlsZVNpemU+ZF9fOABT
Q183ZmNhZmZjODYwZDQ0MzI5OTJmNmY0ZjEzYjI2YzhhOAA8R2V0QWNjZXNzVG9rZW4+ZF9fOQA8
TW9kdWxlPgBnZXRfUFNEQgBnZXRfQ2FtcHVzSUQAc2V0X0NhbXB1c0lEAGdldF9TdHVkZW50SUQA
c2V0X1N0dWRlbnRJRABnZXRfQ2xpZW50SUQAR2V0T3V0cHV0SUQAZ2V0X0FTQ0lJAHRva2VuVVJJ
AGJhc2VVUkwAU3lzdGVtLklPAGdldF9DbGllbnRJRFBTAFQAQXJlYQBTeXN0ZW0uRGF0YQBnZXRf
Q29tcG9uZW50TWV0YURhdGEAbXNjb3JsaWIAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMAUmVh
ZEFzU3RyaW5nQXN5bmMAUG9zdEFzeW5jAGNsaWVudElkAEFkZABNYXJrT3V0cHV0c0ZpbmlzaGVk
AEF3YWl0VW5zYWZlT25Db21wbGV0ZWQAZ2V0X0lzQ29tcGxldGVkADxBZGRyZXNzMj5rX19CYWNr
aW5nRmllbGQAPENhbXB1c0lEPmtfX0JhY2tpbmdGaWVsZAA8U3R1ZGVudElEPmtfX0JhY2tpbmdG
aWVsZAA8R3JhZGU+a19fQmFja2luZ0ZpZWxkADxNaWRkbGVOYW1lPmtfX0JhY2tpbmdGaWVsZAA8
TGFzdE5hbWU+a19fQmFja2luZ0ZpZWxkADxGaXJzdE5hbWU+a19fQmFja2luZ0ZpZWxkADxQaG9u
ZT5rX19CYWNraW5nRmllbGQAPHRva2VuX3R5cGU+a19fQmFja2luZ0ZpZWxkADxTdGF0ZT5rX19C
YWNraW5nRmllbGQAPERlYWN0aXZhdGU+a19fQmFja2luZ0ZpZWxkADxFbWFpbD5rX19CYWNraW5n
RmllbGQAPEhvbWVSb29tPmtfX0JhY2tpbmdGaWVsZAA8YWNjZXNzX3Rva2VuPmtfX0JhY2tpbmdG
aWVsZAA8ZXhwaXJlc19pbj5rX19CYWNraW5nRmllbGQAPFppcD5rX19CYWNraW5nRmllbGQAPEFk
ZHJlc3M+a19fQmFja2luZ0ZpZWxkADxEZXBhcnRtZW50PmtfX0JhY2tpbmdGaWVsZAA8Y291bnQ+
a19fQmFja2luZ0ZpZWxkADxDaXR5PmtfX0JhY2tpbmdGaWVsZABEYkNvbW1hbmQAU3FsQ29tbWFu
ZABSZXBsYWNlAGRlZmF1bHRJbnN0YW5jZQBnZXRfR3JhZGUAc2V0X0dyYWRlAEVuc3VyZVN1Y2Nl
c3NTdGF0dXNDb2RlAHRvRW5jb2RlAGdldF9NZXNzYWdlAEh0dHBSZXNwb25zZU1lc3NhZ2UASnNv
blN0cmluZ1RvRGF0YVRhYmxlAElEaXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVG
cm9tSGFuZGxlAGdldF9NaWRkbGVOYW1lAHNldF9NaWRkbGVOYW1lAGdldF9MYXN0TmFtZQBzZXRf
TGFzdE5hbWUAZ2V0X0ZpcnN0TmFtZQBzZXRfRmlyc3ROYW1lAEdldFJ1bnRpbWVDb25uZWN0aW9u
QnlOYW1lAElBc3luY1N0YXRlTWFjaGluZQBTZXRTdGF0ZU1hY2hpbmUAc3RhdGVNYWNoaW5lAE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAGdldF9QaG9uZQBzZXRfUGhvbmUAc2V0X1Bh
cmVudFBob25lAFNxbERiVHlwZQBzZXRfQ29tbWFuZFR5cGUAVmFsdWVUeXBlAFNlY3VyaXR5UHJv
dG9jb2xUeXBlAHByb2Nlc3NUeXBlAGdldF90b2tlbl90eXBlAHNldF90b2tlbl90eXBlAFN5c3Rl
bS5Db3JlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBJbnRlcm5hbERh
dGFDb2xsZWN0aW9uQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBXcml0ZVRvRGF0YWJhc2UA
Q2xvc2UARGlzcG9zZQBUcnlQYXJzZQBDcmVhdGUAZ2V0X1N0YXRlAHNldF9TdGF0ZQBFZGl0b3JC
cm93c2FibGVTdGF0ZQBDb25uZWN0aW9uU3RhdGUAPD4xX19zdGF0ZQBnZXRfRGVhY3RpdmF0ZQBz
ZXRfRGVhY3RpdmF0ZQBEeW5hbWljQXR0cmlidXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRl
AERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JC
cm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3luY1N0YXRlTWFjaGlu
ZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRy
aWJ1dGUARGVidWdnZXJIaWRkZW5BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmli
dXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0
dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1
dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55
QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFByZUV4ZWN1dGUAUG9zdEV4
ZWN1dGUAc2V0X1ZhbHVlAEF1dGhlbnRpY2F0aW9uSGVhZGVyVmFsdWUATWVkaWFUeXBlV2l0aFF1
YWxpdHlIZWFkZXJWYWx1ZQB2YWx1ZQBzZXRfRXhwZWN0MTAwQ29udGludWUAZ2V0X1BhZ2VTaXpl
AEdldEZpbGVTaXplAEpzb25EZXNlcmlhbGl6ZQBJbmRleE9mAEVuY29kaW5nAFN5c3RlbS5SdW50
aW1lLlZlcnNpb25pbmcAVG9CYXNlNjRTdHJpbmcAZ2V0X0Nvbm5lY3Rpb25TdHJpbmcAY2xlYW5K
c29uU3RyaW5nAGpzb25TdHJpbmcAVG9TdHJpbmcAR2V0U3RyaW5nAFN1YnN0cmluZwBVcmkAZ2V0
X1Rhc2sAU3lzdGVtLkNvbXBvbmVudE1vZGVsAGdldF9FbWFpbABzZXRfRW1haWwAc2V0X1BhcmVu
dEVtYWlsAFNDXzdmY2FmZmM4NjBkNDQzMjk5MmY2ZjRmMTNiMjZjOGE4LmRsbABzZXRfQWRkcmVz
czJfSXNOdWxsAHNldF9DYW1wdXNJRF9Jc051bGwAc2V0X1N0dWRlbnRJRF9Jc051bGwAc2V0X0dy
YWRlX0lzTnVsbABzZXRfTWlkZGxlTmFtZV9Jc051bGwAc2V0X0xhc3ROYW1lX0lzTnVsbABzZXRf
Rmlyc3ROYW1lX0lzTnVsbABzZXRfUGhvbmVfSXNOdWxsAHNldF9QYXJlbnRQaG9uZV9Jc051bGwA
c2V0X1N0YXRlX0lzTnVsbABzZXRfRGVhY3RpdmF0ZV9Jc051bGwAc2V0X0VtYWlsX0lzTnVsbABz
ZXRfUGFyZW50RW1haWxfSXNOdWxsAHNldF9Ib21lUm9vbV9Jc051bGwAc2V0X1ppcF9Jc051bGwA
c2V0X0FkZHJlc3NfSXNOdWxsAHNldF9DaXR5X0lzTnVsbABTZXROdWxsAHNldF9TZWN1cml0eVBy
b3RvY29sAGJhc2VVcmwATWVtb3J5U3RyZWFtAGdldF9JdGVtAHNldF9JdGVtAFN5c3RlbQBnZXRf
SG9tZVJvb20Ac2V0X0hvbWVSb29tAHJlc291cmNlTWFuAHNlbmRUb2tlbgBHZXRBY2Nlc3NUb2tl
bgBhY2Nlc3NUb2tlbgBnZXRfYWNjZXNzX3Rva2VuAHNldF9hY2Nlc3NfdG9rZW4AT3BlbgBnZXRf
ZXhwaXJlc19pbgBzZXRfZXhwaXJlc19pbgBTY3JpcHRNYWluAERhdGFDb2x1bW4AcExvY2F0aW9u
AFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SdW50aW1l
LlNlcmlhbGl6YXRpb24Ac2V0X0F1dGhvcml6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24ARGF0YUNv
bHVtbkNvbGxlY3Rpb24AZ2V0X1J1bnRpbWVDb25uZWN0aW9uQ29sbGVjdGlvbgBTcWxQYXJhbWV0
ZXJDb2xsZWN0aW9uAERhdGFSb3dDb2xsZWN0aW9uAERiQ29ubmVjdGlvbgBTcWxDb25uZWN0aW9u
AEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24AU2V0RXhjZXB0aW9uAFN5c3RlbS5EYXRhLkNvbW1v
bgBTeXN0ZW0uUnVudGltZS5TZXJpYWxpemF0aW9uLkpzb24AQ3VsdHVyZUluZm8ATG9nSW5mbwBP
dXRwdXROYW1lTWFwAE91dHB1dE1hcABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1J1bnRpbWVXcmFw
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUGlwZWxpbmVXcmFwAGdldF9aaXAAc2V0X1ppcABTeXN0
ZW0uTmV0Lkh0dHAAQ2xlYXIAPD50X19idWlsZGVyAE91dHB1dDBCdWZmZXIAUGlwZWxpbmVCdWZm
ZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0Nvbm5lY3Rpb25NYW5hZ2Vy
AFNlcnZpY2VQb2ludE1hbmFnZXIASnNvbkhlbHBlcgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5S
dW50aW1lLldyYXBwZXIATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUuV3JhcHBlcgBE
YlBhcmFtZXRlcgBTcWxQYXJhbWV0ZXIAR2V0QXdhaXRlcgBnZXRfQ2xpZW50U2VydmVyAERhdGFD
b250cmFjdEpzb25TZXJpYWxpemVyAFhtbE9iamVjdFNlcmlhbGl6ZXIARXJyb3IASUVudW1lcmF0
b3IAR2V0RW51bWVyYXRvcgAuY3RvcgAuY2N0b3IAT3V0cHV0SURzAFN5c3RlbS5EaWFnbm9zdGlj
cwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU0NfN2Zj
YWZmYzg2MGQ0NDMyOTkyZjZmNGYxM2IyNmM4YTguUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3Vy
Y2VzAERlYnVnZ2luZ01vZGVzAFNDXzdmY2FmZmM4NjBkNDQzMjk5MmY2ZjRmMTNiMjZjOGE4LlBy
b3BlcnRpZXMAZ2V0X1JlYWRPbmx5VmFyaWFibGVzAEdldEJ5dGVzAEJ1ZmZlckNvbHVtbkluZGV4
ZXMAR2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwA8PjRfX3RoaXMAU3lzdGVtLlRocmVhZGluZy5U
YXNrcwBDb250YWlucwBnZXRfQ29sdW1ucwBTeXN0ZW0uVGV4dC5SZWd1bGFyRXhwcmVzc2lvbnMA
U3lzdGVtLkNvbGxlY3Rpb25zAENvbm5lY3Rpb25zAFN5c3RlbS5OZXQuSHR0cC5IZWFkZXJzAEh0
dHBIZWFkZXJzAEh0dHBSZXF1ZXN0SGVhZGVycwBnZXRfRGVmYXVsdFJlcXVlc3RIZWFkZXJzAEJ1
ZmZlcnMAZ2V0X1BhcmFtZXRlcnMAZ2V0X0FkZHJlc3MAc2V0X0FkZHJlc3MAc2V0X0Jhc2VBZGRy
ZXNzAFByb2Nlc3NTdHVkZW50cwBHZXRTdHVkZW50cwBGaW5pc2hPdXRwdXRzAGdldF9Sb3dzAENy
ZWF0ZU5ld091dHB1dFJvd3MAQ29uY2F0AEZvcm1hdABSZWFkT2JqZWN0AFdyaXRlT2JqZWN0AFN5
c3RlbS5OZXQAZ2V0X0NsaWVudFNlY3JldABjbGllbnRTZWNyZXQAU2V0RW5kT2ZSb3dzZXQAV2Fp
dABTcGxpdABnZXRfRGVmYXVsdABHZXRSZXN1bHQAU2V0UmVzdWx0AFN0dWRlbnQAU3lzdGVtLkRh
dGEuU3FsQ2xpZW50AEh0dHBDbGllbnQAZ2V0X0RlcGFydG1lbnQAc2V0X0RlcGFydG1lbnQAVXNl
ckNvbXBvbmVudABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9uZW50AGdldF9DdXJyZW50AGdl
dF9Db250ZW50AEZvcm1VcmxFbmNvZGVkQ29udGVudABTdHJpbmdDb250ZW50AEh0dHBDb250ZW50
AGdldF9jb3VudABzZXRfY291bnQAZ2V0X0FjY2VwdABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2Ny
aXB0AFN0YXJ0AENvbnZlcnQATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QAUHJpbWVP
dXRwdXQATW92ZU5leHQAU3lzdGVtLlRleHQAR2V0VmFsdWVXaXRoQ29udGV4dABTY3JpcHRDb21w
b25lbnRFdmFsQ29udGV4dABnZXRfRXZhbHVhdG9yQ29udGV4dABEYXRhUm93AEFkZFJvdwBOZXdS
b3cAUmVnZXgAVG9BcnJheQBnZXRfQXNzZW1ibHkARXhlY3V0ZU5vblF1ZXJ5AGdldF9DaXR5AHNl
dF9DaXR5AAAAAAADWwAAAQADXQAAB30ALAB7AAADewAAA30AAAMsAAADOgAAAyIAAD1KAHMAbwBu
AFMAdAByAGkAbgBnAFQAbwBEAGEAdABhAFQAYQBiAGwAZQA6ACAAQwBvAGwAdQBtAG4AcwAAP0UA
cgByAG8AcgAgAFAAYQByAHMAaQBuAGcAIABDAG8AbAB1AG0AbgAgAE4AYQBtAGUAIAA6ACAAewAw
AH0AAANcAABHSgBzAG8AbgBTAHQAcgBpAG4AZwBUAG8ARABhAHQAYQBUAGEAYgBsAGUAOgAgAEYA
bwByACAAZQBhAGMAaAAgAHIAbwB3AAA7RQByAHIAbwByACAAUABhAHIAcwBpAG4AZwAgAFIAbwB3
ACAAIABOAGEAbQBlACAAOgAgAHsAMAB9AAArSgBzAG8AbgBTAHQAcgBpAG4AZwBUAG8ARABhAHQA
YQBUAGEAYgBsAGUAADt7ACIAbgBhAG0AZQAiADoAIgBzAHQAdQBkAGUAbgB0AHMAIgAsACIAcgBl
AGMAbwByAGQAIgA6AFsAADldACwAIgBAAGUAeAB0AGUAbgBzAGkAbwBuAHMAIgA6ACIAYQBjAHQA
aQB2AGkAdABpAGUAcwAsAAAzdQBfAHMAdAB1AGQAZQBuAHQAXwBlAHgAdABlAG4AcwBpAG8AbgBf
AHQAZQBzAHQALAAAJXUAXwBzAHQAdQBkAGUAbgB0AF8AbgBlAHcAXwBlAHgAdAAsAAAlcwB0AHUA
ZABlAG4AdABjAG8AcgBlAGYAaQBlAGwAZABzACwAACt1AF8AcwB0AHUAZABlAG4AdABzAF8AZQB4
AHQAZQBuAHMAaQBvAG4ALAAAG3MAXwBzAHQAdQBfAG4AYwBlAGEAXwB4ACwAABtzAF8AcwB0AHUA
XwBjAHIAZABjAF8AeAAsAAAxdQBfAGwAZABfAGEAYwBjAG8AdQBuAHQAXwBtAGEAbgBhAGcAZQBt
AGUAbgB0ACwAACNjAF8AcwB0AHUAZABlAG4AdABsAG8AYwBhAHQAbwByACwAACt1AF8AcwB0AHUA
ZABlAG4AdABzAHUAcwBlAHIAZgBpAGUAbABkAHMALAAAH3UAXwBjAHUAcwB0AG8AbQBmAGkAZQBs
AGQAcwAsAAAdcwBfAHMAdAB1AF8AZQBkAGYAaQBfAHgAIgB9AAATcwBwAEwAbwBnAEkAbgBmAG8A
ABVAAEMAbABpAGUAbgB0AFUASQBEAAANQABFAHIAcgBvAHIAABNAAEYAaQBsAGUAVAB5AHAAZQAA
C0AAQQByAGUAYQAAEUAATABvAGcASQBuAGYAbwAAXS8AdwBzAC8AcwBjAGgAZQBtAGEALwBxAHUA
ZQByAHkALwBjAG8AbQAuAGgAYQB5AGUAcwBzAG8AZgB0AC4AVABJAFAAVwBlAGIALgBzAHQAdQBk
AGUAbgB0AHMAACkvAG8AYQB1AHQAaAAvAGEAYwBjAGUAcwBzAF8AdABvAGsAZQBuAC8AAA9TAHQA
dQBkAGUAbgB0AACAm0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQA
IABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBh
AGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAEU8A
dQB0AHAAdQB0ACAAMAAACVAAUwBEAEIAABFDAGwAaQBlAG4AdABJAEQAABVDAGwAaQBlAG4AdABJ
AEQAUABTAAAZQwBsAGkAZQBuAHQAUwBlAGMAcgBlAHQAABlDAGwAaQBlAG4AdABTAGUAcgB2AGUA
cgAAEVAAYQBnAGUAUwBpAHoAZQAAcVMAQwBfADcAZgBjAGEAZgBmAGMAOAA2ADAAZAA0ADQAMwAy
ADkAOQAyAGYANgBmADQAZgAxADMAYgAyADYAYwA4AGEAOAAuAFAAcgBvAHAAZQByAHQAaQBlAHMA
LgBSAGUAcwBvAHUAcgBjAGUAcwAAGUEAYwBjAGUAcwBzACAAVABvAGsAZQBuAAA5RwBlAHQAQQBj
AGMAZQBzAHMAVABvAGsAZQBuACAAcgBlAHQAdQByAG4AZQBkACAAbgB1AGwAbAAAE0YAaQBsAGUA
IABTAGkAegBlAAAzRwBlAHQARgBpAGwAZQBTAGkAegBlACAAcgBlAHQAdQByAG4AZQBkACAAbgB1
AGwAbAAAH1AAcgBvAGMAZQBzAHMAUwB0AHUAZABlAG4AdABzAAAVPwBwAGEAZwBlAHMAaQB6AGUA
PQAADSYAcABhAGcAZQA9AAAhYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AagBzAG8AbgAAG0EAdQB0
AGgAbwByAGkAegBhAHQAaQBvAG4AAA9CAGUAYQByAGUAcgAgAAATUwB0AHUAZABlAG4AdABJAEQA
ABFDAGEAbQBwAHUAcwBJAEQAABNGAGkAcgBzAHQATgBhAG0AZQAAEUwAYQBzAHQATgBhAG0AZQAA
FU0AaQBkAGQAbABlAE4AYQBtAGUAAAtHAHIAYQBkAGUAABFIAG8AbQBlAFIAbwBvAG0AAAtQAGgA
bwBuAGUAABdQAGEAcgBlAG4AdABQAGgAbwBuAGUAAAtFAG0AYQBpAGwAABdQAGEAcgBlAG4AdABF
AG0AYQBpAGwAAA9BAGQAZAByAGUAcwBzAAARQQBkAGQAcgBlAHMAcwAyAAAJQwBpAHQAeQAAC1MA
dABhAHQAZQAAB3oAaQBwAAAXRABlAGEAYwB0AGkAdgBhAHQAZQBkAABFRwBlAHQAUwB0AHUAZABl
AG4AdABzACAALQAgAFIAbwB3ACAAQwBvAHUAbgB0ACAAUABhAGcAZQAgAE4AdQBtADoAIAABF0cA
ZQB0AFMAdAB1AGQAZQBuAHQAcwAADS8AYwBvAHUAbgB0AAAXUgBlAGMAbwByAGQAQwBvAHUAbgB0
AAAXRwBlAHQARgBpAGwAZQBTAGkAegBlAABDYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AeAAtAHcA
dwB3AC0AZgBvAHIAbQAtAHUAcgBsAGUAbgBjAG8AZABlAGQAAQtCAGEAcwBpAGMAABVnAHIAYQBu
AHQAXwB0AHkAcABlAAAlYwBsAGkAZQBuAHQAXwBjAHIAZQBkAGUAbgB0AGkAYQBsAHMAAHWo1ZnZ
0OxHhoWulK4hIOQABCABAQgDIAABBSABARERBCABAQ4FIAEBEjkFIAEBHQIFIAEBEnEGIAEBEYC5
BAcBETQFFRF5AQgIAAAVEXkBEwAHMAEBARAeAAQKARE0CCAAFRJBARMABAcBETgFFRF5ARwECgER
OAQHARE8BRUReQEOBAoBETwEBwERQAQKARFABQAAEoDJBSABHQUOBQABDh0FJAcTEk0dDhUSUQEO
HQ4IHQ4IDggOFRFVAQ4OElkOCA4OEk0SXQUgAg4ODgYAAh0ODg4FFRJRAQ4EIAEIDgUgAg4ICAUg
AQITAAUgAQETAAUAAg4OHAggABURVQETAAUVEVUBDgQgABMABSAAEoDZBiABEoDdDgMgAAIEIAAS
WQQgAQ4IBSACAQ4cBSAAEoDhBSABARJZAyAADgQHARJhBSAAEYDpBiACAQ4SYQYgAQERgPUFIAAS
gPkJIAISgP0OEYEBBCABARwKIAMSgP0OEYEBCAMgAAgLIAMBEoCdHQgSgKEFIAIBCBwDBwEIBwAC
CBKAoQ4FIAEdCAgFIAASgREFIAASgRUGIAESgRkOBSAAEoCpBSAAEoEdBiABEoEhHAUAABKBJQYg
ARwSgSkHAAESORGBLQUgABKBMQcgAgEOEoExBAcBEmUCHgAHIAIBEoE9HAQgAB0FBSABDh0FBSAB
AR0FBiABHBKBPRkHDAgSCAgODg4ODhURdQEOFRF1ARwSXRJdBAABAQIGAAEBEYFFBgADDg4ODgUV
EkEBDgggABURdQETAAUVEXUBDgowAgIBEB4AEB4BCQoCFRF1AQ4RNAUVEkEBHAUVEXUBHAkKAhUR
dQEcETQFIAEBEl0nBxEIEggcCAgOEoCBDggVEXUBEoCFFRF1AQ4SgIkSWRKAjQgSXRJdBAABCA4G
AAICDhAIBQABDh0OBiABARKBSQUgABKBTQogABUSgVEBEoFVCBUSgVEBEoFVBQACDg4OBSACAQ4O
CCADAQ4SgMkODyACFRJBARKAhRKBSRKBXQcVEkEBEoCFBxURdQESgIULCgIVEXUBEoCFETgFIAAS
gIUFIAASgV0HIAAVEkEBDgkKAhURdQEOETgFIAASgIkDIAAcBCABHA4bBwoIEggODhKAgQ4VEXUB
EoCFFRF1AQ4SXRJdCwoCFRF1ARKAhRE8CQoCFRF1AQ4RPAQKARIwFgcHCA4OEoCVFRF1ARKAhRUR
dQEOEl0GIAEBEoFlCxUSUQEVEYFpAg4OBxURgWkCDg4HIAIBEwATAQ8gAQEVEoFtARURgWkCDg4L
CgIVEXUBEoCFEUAJCgIVEXUBDhFABAoBEiwIt3pcVhk04IkIiYRdzYCAzJEIsD9ffxHVCjoCBg4D
BhIUAwYSGAMGEgwEBhKApQQGEoCxBAYSgLUDBhIgAgYIBgYVEXkBCAMGEggGBhURdQEOBgYVEXUB
HAYGFRF5ARwIBhURdQESgIUGBhUReQEOBAYSgJEHIAAVEkEBCAogAxUSQQEcDg4OCSACFRJBAQ4O
DgsABBUSQQEODg4ODgQgAQ4OBSABEk0OBiADAQgODgMAAAEEIAEBAg0gBAEIHQgdEoCdEoChBiAB
ARKApQUAABKAsQUAABKAtQYAAQESgLUEAAASIAYQAQEOHgAGEAEBHgAOAygADgMoAAIFKAASgKkD
KAAIBQgAEoCxBQgAEoC1BAgAEiAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJv
d3MBCAEAAgAAAAAAKAEAI1NDXzdmY2FmZmM4NjBkNDQzMjk5MmY2ZjRmMTNiMjZjOGE4AAAFAQAA
AAAWAQARQ29weXJpZ2h0IEAgIDIwMTkAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNwEA
VA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC43JQEAIFNjcmlwdE1haW4r
PFByb2Nlc3NTdHVkZW50cz5kX182AAAhAQAcU2NyaXB0TWFpbis8R2V0U3R1ZGVudHM+ZF9fNwAA
IQEAHFNjcmlwdE1haW4rPEdldEZpbGVTaXplPmRfXzgAACQBAB9TY3JpcHRNYWluKzxHZXRBY2Nl
c3NUb2tlbj5kX185AAAEAQAAAAoBAAIAAAAAAQAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJl
c291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVy
ZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJj
ZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAD0egAAAAAAAAAAAAAO
ewAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHsAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2Nv
cmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAA
gAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFiAAADsAwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUA
UgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAE
AAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAA
VAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAETAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJ
AG4AZgBvAAAAKAMAAAEAMAAwADAAMAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAA
AAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABl
AHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwA3AGYAYwBhAGYAZgBjADgANgAwAGQANAA0ADMA
MgA5ADkAMgBmADYAZgA0AGYAMQAzAGIAMgA2AGMAOABhADgAAAAwAAgAAQBGAGkAbABlAFYAZQBy
AHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0A
ZQAAAFMAQwBfADcAZgBjAGEAZgBmAGMAOAA2ADAAZAA0ADQAMwAyADkAOQAyAGYANgBmADQAZgAx
ADMAYgAyADYAYwA4AGEAOAAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcA
aAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA5AAAAKgABAAEATABlAGcAYQBs
AFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwA
ZQBuAGEAbQBlAAAAUwBDAF8ANwBmAGMAYQBmAGYAYwA4ADYAMABkADQANAAzADIAOQA5ADIAZgA2
AGYANABmADEAMwBiADIANgBjADgAYQA4AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4A
YQBtAGUAAAAAAFMAQwBfADcAZgBjAGEAZgBmAGMAOAA2ADAAZAA0ADQAMwAyADkAOQAyAGYANgBm
ADQAZgAxADMAYgAyADYAYwA4AGEAOAAAADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8A
bgAAADEALgAwAC4AMAAuADAAAAA4AAgAAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBu
AAAAMQAuADAALgAwAC4AMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAABwAAAMAAAAIDsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAA]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_7fcaffc860d4432992f6f4f13b26c8a8</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::ClientID,User::ClientIDPS,User::ClientSecret,User::ClientServer,User::PageSize</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">2D</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">67274cf1c7682278eaf9d490ad5d3e9e2eeccf0e</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">30b83c820613423a710532da7d4c908b</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Loop thru Clients\Orgs\Script Component.Connections[PSDB]"
                      connectionManagerID="Package.ConnectionManagers[OneRosterNET]"
                      connectionManagerRefId="Package.ConnectionManagers[OneRosterNET]"
                      name="PSDB" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Loop thru Clients\Orgs\Script Component.Outputs[Output 0]"
                      hasSideEffects="true"
                      name="Output 0">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop thru Clients\Orgs\Script Component.Outputs[Output 0].Columns[StudentID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Orgs\Script Component.Outputs[Output 0].Columns[StudentID]"
                          name="StudentID" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Orgs\Script Component.Outputs[Output 0].Columns[CampusID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Orgs\Script Component.Outputs[Output 0].Columns[CampusID]"
                          name="CampusID" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Orgs\Script Component.Outputs[Output 0].Columns[FirstName]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Orgs\Script Component.Outputs[Output 0].Columns[FirstName]"
                          name="FirstName" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Orgs\Script Component.Outputs[Output 0].Columns[LastName]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Orgs\Script Component.Outputs[Output 0].Columns[LastName]"
                          name="LastName" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Orgs\Script Component.Outputs[Output 0].Columns[MiddleName]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Orgs\Script Component.Outputs[Output 0].Columns[MiddleName]"
                          name="MiddleName" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Orgs\Script Component.Outputs[Output 0].Columns[Grade]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Orgs\Script Component.Outputs[Output 0].Columns[Grade]"
                          name="Grade" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Orgs\Script Component.Outputs[Output 0].Columns[HomeRoom]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Orgs\Script Component.Outputs[Output 0].Columns[HomeRoom]"
                          name="HomeRoom" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Orgs\Script Component.Outputs[Output 0].Columns[Phone]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Orgs\Script Component.Outputs[Output 0].Columns[Phone]"
                          name="Phone" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Orgs\Script Component.Outputs[Output 0].Columns[ParentPhone]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Orgs\Script Component.Outputs[Output 0].Columns[ParentPhone]"
                          name="ParentPhone" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Orgs\Script Component.Outputs[Output 0].Columns[Email]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          lineageId="Package\Loop thru Clients\Orgs\Script Component.Outputs[Output 0].Columns[Email]"
                          name="Email" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Orgs\Script Component.Outputs[Output 0].Columns[ParentEmail]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          lineageId="Package\Loop thru Clients\Orgs\Script Component.Outputs[Output 0].Columns[ParentEmail]"
                          name="ParentEmail" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Orgs\Script Component.Outputs[Output 0].Columns[Address]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Loop thru Clients\Orgs\Script Component.Outputs[Output 0].Columns[Address]"
                          name="Address" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Orgs\Script Component.Outputs[Output 0].Columns[Address2]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Loop thru Clients\Orgs\Script Component.Outputs[Output 0].Columns[Address2]"
                          name="Address2" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Orgs\Script Component.Outputs[Output 0].Columns[City]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Orgs\Script Component.Outputs[Output 0].Columns[City]"
                          name="City" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Orgs\Script Component.Outputs[Output 0].Columns[State]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Orgs\Script Component.Outputs[Output 0].Columns[State]"
                          name="State" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Orgs\Script Component.Outputs[Output 0].Columns[Zip]"
                          codePage="1252"
                          dataType="str"
                          length="10"
                          lineageId="Package\Loop thru Clients\Orgs\Script Component.Outputs[Output 0].Columns[Zip]"
                          name="Zip" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Orgs\Script Component.Outputs[Output 0].Columns[Deactivate]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Orgs\Script Component.Outputs[Output 0].Columns[Deactivate]"
                          name="Deactivate" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Loop thru Clients\Orgs.Paths[Derived Column Output]"
                  endId="Package\Loop thru Clients\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Loop thru Clients\Orgs\Derived Column.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Loop thru Clients\Orgs.Paths[Output 0]"
                  endId="Package\Loop thru Clients\Orgs\Derived Column.Inputs[Derived Column Input]"
                  name="Output 0"
                  startId="Package\Loop thru Clients\Orgs\Script Component.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Loop thru Clients\Truncate Tables"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{26D04F81-F15A-49D9-B1B5-573B669E4501}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Truncate Tables"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{9238981A-2F3C-4FFA-86C4-45A523C0CAF5}"
              SQLTask:SqlStatementSource="declare @ClientUID int&#xA;&#xA;set @ClientUID = ?&#xA;&#xA;delete OneRoster.Classes where ClientUID = @ClientUID&#xA;delete OneRoster.Courses where ClientUID = @ClientUID&#xA;delete OneRoster.Demographics where ClientUID = @ClientUID&#xA;delete OneRoster.Enrollments where ClientUID = @ClientUID&#xA;delete OneRoster.Orgs where ClientUID = @ClientUID&#xA;delete OneRoster.Users where ClientUID = @ClientUID&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@ClientUID"
                SQLTask:DtsVariableName="User::ClientOneRosterID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Loop thru Clients\Users"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:Disabled="True"
          DTS:DTSID="{1B3DD4DA-5EE8-443A-898A-5393922056B3}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Users"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              defaultBufferMaxRows="50000"
              version="1">
              <components>
                <component
                  refId="Package\Loop thru Clients\Users\Derived Column"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Loop thru Clients\Users\Derived Column.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Loop thru Clients\Users\Derived Column.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Loop thru Clients\Users\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop thru Clients\Users\Derived Column.Outputs[Derived Column Output].Columns[ClientUID]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Loop thru Clients\Users\Derived Column.Outputs[Derived Column Output].Columns[ClientUID]"
                          name="ClientUID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::ClientID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::ClientID]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Loop thru Clients\Users\Derived Column.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Loop thru Clients\Users\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop thru Clients\Users\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Users\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Users\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Users\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Loop thru Clients\Users\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[PSMasterCourse]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Loop thru Clients\Users\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[OneRoster]"
                      connectionManagerRefId="Package.ConnectionManagers[OneRoster]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Loop thru Clients\Users\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Loop thru Clients\Users\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ClientUID]"
                          cachedDataType="i4"
                          cachedName="ClientUID"
                          externalMetadataColumnId="Package\Loop thru Clients\Users\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientUID]"
                          lineageId="Package\Loop thru Clients\Users\Derived Column.Outputs[Derived Column Output].Columns[ClientUID]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Users\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[CourseID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="CourseID"
                          externalMetadataColumnId="Package\Loop thru Clients\Users\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CourseID]"
                          lineageId="Package\Loop thru Clients\Users\Script Component.Outputs[Output 0].Columns[CourseID]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Users\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[CourseName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="CourseName"
                          externalMetadataColumnId="Package\Loop thru Clients\Users\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CourseName]"
                          lineageId="Package\Loop thru Clients\Users\Script Component.Outputs[Output 0].Columns[CourseName]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Users\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CourseID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="CourseID" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Users\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CourseName]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="CourseName" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Users\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientUID]"
                          dataType="i4"
                          name="ClientUID" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Users\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[MasterCoursePSUID]"
                          dataType="i4"
                          name="MasterCoursePSUID" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Loop thru Clients\Users\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Loop thru Clients\Users\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop thru Clients\Users\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Users\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Users\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Users\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Loop thru Clients\Users\Script Component"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;9"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Script Component"
                  version="12">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="33">
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces

using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.IO;
using System.Net;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Runtime.Serialization;
using System.Runtime.Serialization.Json;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading.Tasks;
using System.Web.Script.Serialization;
using System.Windows.Forms;



#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    static string pLocation = "/ws/schema/query/com.hayessoft.TIPWeb.courses";
    static string tokenURI = "/oauth/access_token/";
    static string processType = "Teacher";

    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();

    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */
        ProcessMasterCourse().Wait();
    }


    public async Task<int> ProcessMasterCourse()
    {
        try
        {

            // The server base address
            string baseURL = Variables.ClientServer;

            //MessageBox.Show(uri);

            ServicePointManager.Expect100Continue = true;
            ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;


            /// The client information used to get the OAuth Access Token from the server.
            string clientId = Variables.ClientIDPS;
            string clientSecret = Variables.ClientSecret;
            string sendToken = EncodeTo64(Variables.ClientIDPS + ":" + Variables.ClientSecret);
            WriteToDatabase(0, "MasterCourse-sendToken", sendToken);
            // this will hold the Access Token returned from the server.
            //MessageBox.Show(sendToken, "sendToken");

            string accessToken = await GetAccessToken(baseURL, sendToken, clientId, clientSecret);
            //-->>>>>>>>>>>>>> Add : if returns null, stop
            if (accessToken == null)
            {
                WriteToDatabase(1, "Access Token", "GetAccessToken returned null");
                return 0;
            }
            //MessageBox.Show(accessToken, "access token");


            string FileSize = await GetFileSize(baseURL, accessToken);
            if (FileSize == null)
            {
                WriteToDatabase(1, "File Size", "GetFileSize returned null");
                return 0;
            }

            var jsonResponse = await GetMasterCourse(baseURL, accessToken, FileSize);

            return 0;
        }
        catch (Exception ex)
        {
            WriteToDatabase(1, "ProcessMasterCourse", ex.Message);
            return 0;
        }

    }


    /// <summary>
    /// Gets the list of courses.
    /// </summary>
    /// <param name="baseUrl">The url for the teacher list</param>
    /// <param name="accessToken">Acquired in the previous method</param>
    /// <returns>The page of articles.</returns>
    private async Task<dynamic> GetMasterCourse(string baseUrl, string accessToken, string FileSize)
    {
        try
        {
            int TotalRecords;
            string pageSize = Variables.PageSize;
            int intPageSize = Convert.ToInt32(pageSize);
            if (Int32.TryParse(FileSize, out TotalRecords))
            {
                int pages = ((TotalRecords - 1) / intPageSize) + 1;
                //MessageBox.Show(pages.ToString(), "pages");

                for (int i = 1; i <= pages; i++)
                {
                    string pagenum = i.ToString();
                    //MessageBox.Show(pagenum, "page number");

                    string uri = baseUrl + pLocation + "?pagesize=" + pageSize + "&page=" + pagenum;
                    var client = new HttpClient();

                    client.BaseAddress = new Uri(uri);

                    client.DefaultRequestHeaders.Accept.Clear();
                    client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));
                    client.DefaultRequestHeaders.Add("Authorization", "Bearer " + accessToken);

                    //MessageBox.Show(uri, "Master Course uri");

                    StringContent stringContent = new StringContent("", Encoding.UTF8, "application/json");
                    //StringContent stringContent = new StringContent("page=" + pagenum, Encoding.UTF8, "application/json");
                    //string content;

                    HttpResponseMessage response = await client.PostAsync(new Uri(uri), stringContent);

                    response.EnsureSuccessStatusCode();
                    string jsonString = await response.Content.ReadAsStringAsync();
                    //MessageBox.Show(jsonString, "jsonstring");

                    jsonString = cleanJsonString(jsonString);

                    //Deserialize our JSON
                    DataTable dt = JsonStringToDataTable(jsonString);
                    int numRows = 0;


                    foreach (DataRow row in dt.Rows)
                    {
                        Output0Buffer.AddRow();
                        Output0Buffer.CourseName = row["coursename"].ToString().Replace("\\", "");
                        Output0Buffer.CourseID = row["courseid"].ToString().Replace("\\", "");

                        numRows += 1;
                    }
                    WriteToDatabase(0, "GetMasterCourse - Row Count Page Num: " + pagenum, numRows.ToString());
                }
                return null;
            }
            return null;

        }
        catch (Exception ex)
        {
            WriteToDatabase(1, "GetMasterCourse", ex.Message);
            throw;
        }

    }


    private async Task<string> GetFileSize(string baseURL, string accessToken)
    {
        try
        {
            using (var client = new HttpClient())
            {
                string uri = baseURL + pLocation + "/count";
                client.BaseAddress = new Uri(uri);
                //MessageBox.Show(uri, "Master Course uri");

                client.DefaultRequestHeaders.Accept.Clear();
                client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));
                client.DefaultRequestHeaders.Add("Authorization", "Bearer " + accessToken);

                var stringContent = new StringContent("", Encoding.UTF8, "application/json");

                //Get file size
                HttpResponseMessage response = await client.PostAsync(new Uri(uri), stringContent);

                response.EnsureSuccessStatusCode();
                string jsonString = await response.Content.ReadAsStringAsync();

                //string jsonString = response.Content.ToString();//.ReadAsStringAsync();
                //MessageBox.Show(jsonString, "jsonstring");

                //Deserialize our JSON
                var FileSizeObject = JsonHelper.JsonDeserialize<FileSize>(jsonString);

                // return the Access Token.
                var FileSize = FileSizeObject.count;
                //MessageBox.Show(FileSize, "File Size");
                WriteToDatabase(0, "RecordCount", FileSize);
                return FileSize;
            }
        }
        catch (Exception ex)
        {
            //MessageBox.Show(ex.Message);
            //MessageBox.Show(ex.StackTrace);
            WriteToDatabase(1, "GetFileSize", ex.Message);
            //return null;
            throw;
        }

    }

    /// <summary>
    /// This method uses the OAuth Client Credentials Flow to get an Access Token to provide
    /// Authorization to the APIs.
    /// </summary>
    /// <returns></returns>
    private static async Task<string> GetAccessToken(string baseURL, string sendToken, string clientId, string clientSecret)
    {
        try
        {
            using (var client = new HttpClient())
            {

                string uri = baseURL + tokenURI;
                client.BaseAddress = new Uri(uri);

                //MessageBox.Show(uri, "access token uri");

                client.DefaultRequestHeaders.Accept.Clear();
                client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/x-www-form-urlencoded"));
                client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Basic", sendToken);

                List<KeyValuePair<string, string>> postData = new List<KeyValuePair<string, string>>();
                postData.Add(new KeyValuePair<string, string>("grant_type", "client_credentials"));
                FormUrlEncodedContent content = new FormUrlEncodedContent(postData);

                // Post to the Server and parse the response.
                HttpResponseMessage response = await client.PostAsync(new Uri(uri), content);

                response.EnsureSuccessStatusCode();
                string jsonString = await response.Content.ReadAsStringAsync();

                //MessageBox.Show(jsonString, "jsonstring");

                //Deserialize our JSON
                var accessTokenObject = JsonHelper.JsonDeserialize<AccessToken>(jsonString);

                // return the Access Token.
                var token = accessTokenObject.access_token;
                //MessageBox.Show(token, "access token");
                return token;
            }
        }
        catch (Exception ex)
        {
            //WriteToDatabase(1, "GetAccessToken", ex.Message);
            //MessageBox.Show(ex.Message);
            //MessageBox.Show(ex.StackTrace);
            //return null;
            throw ex;
        }
    }

    public string EncodeTo64(string toEncode)
    {
        byte[] toEncodeAsBytes = System.Text.ASCIIEncoding.ASCII.GetBytes(toEncode);
        string returnValue = System.Convert.ToBase64String(toEncodeAsBytes);
        return returnValue;

    }
    public class JsonHelper
    {
        /// <summary>
        /// JSON Serialization
        /// </summary>
        public static string JsonSerializer<T>(T t)
        {
            DataContractJsonSerializer ser = new DataContractJsonSerializer(typeof(T));
            MemoryStream ms = new MemoryStream();
            ser.WriteObject(ms, t);
            string jsonString = Encoding.UTF8.GetString(ms.ToArray());
            ms.Close();
            return jsonString;
        }
        /// <summary>
        /// JSON Deserialization
        /// </summary>
        public static T JsonDeserialize<T>(string jsonString)
        {
            DataContractJsonSerializer ser = new DataContractJsonSerializer(typeof(T));
            MemoryStream ms = new MemoryStream(Encoding.UTF8.GetBytes(jsonString));
            T obj = (T)ser.ReadObject(ms);
            return obj;
        }
    }

    public class MasterCourse
    {
        public string CourseName { get; set; }
        public string CourseID { get; set; }

    }

    public class AccessToken
    {
        public string access_token { get; set; }
        public string token_type { get; set; }
        public string expires_in { get; set; }
    }

    public class FileSize
    {
        public string count { get; set; }

    }



    public DataTable JsonStringToDataTable(string jsonString)
    {
        try
        {
            DataTable dt = new DataTable();
            string[] jsonStringArray = Regex.Split(jsonString.Replace("[", "").Replace("]", ""), "},{");
            List<string> ColumnsName = new List<string>();
            foreach (string jSA in jsonStringArray)
            {
                string[] jsonStringData = Regex.Split(jSA.Replace("{", "").Replace("}", ""), ",");
                foreach (string ColumnsNameData in jsonStringData)
                {
                    try
                    {
                        int idx = ColumnsNameData.IndexOf(":");
                        string ColumnsNameString = ColumnsNameData.Substring(0, idx - 1).Replace("\"", "");
                        if (!ColumnsName.Contains(ColumnsNameString))
                        {
                            ColumnsName.Add(ColumnsNameString);
                        }
                    }
                    catch //(Exception ex)
                    {
                        WriteToDatabase(1, "JsonStringToDataTable: Columns", (string.Format("Error Parsing Column Name : {0}", ColumnsNameData)));
                    }
                }
                break;
            }
            foreach (string AddColumnName in ColumnsName)
            {
                dt.Columns.Add(AddColumnName);
            }
            foreach (string jSA in jsonStringArray)
            {
                string[] RowData = Regex.Split(jSA.Replace("{", "").Replace("}", ""), ",");
                DataRow nr = dt.NewRow();
                foreach (string rowData in RowData)
                {
                    try
                    {
                        int idx = rowData.IndexOf(":");
                        string RowColumns = rowData.Substring(0, idx - 1).Replace("\"", "").Replace("\\", "");
                        string RowDataString = rowData.Substring(idx + 1).Replace("\"", "").Replace("\\", "");
                        nr[RowColumns] = RowDataString;
                    }
                    catch //(Exception ex)
                    {
                        WriteToDatabase(1, "JsonStringToDataTable: For each row", (string.Format("Error Parsing Row  Name : {0}", rowData)));
                        continue;
                    }
                }
                dt.Rows.Add(nr);
            }
            return dt;
        }
        catch (Exception ex)
        {
            WriteToDatabase(1, "JsonStringToDataTable", ex.Message);
            return null;
        }
    }

    public string cleanJsonString(string jsonString)
    {

        jsonString = jsonString.Replace("{\"record\":[", "");
        jsonString = jsonString.Replace(",\"@extensions\"", "");

        return jsonString;
    }


    public void WriteToDatabase(int Error, string Area, string LogInfo)
    {
        try
        {
            //MessageBox.Show("WriteToDatabase");
            var ConnString = Connections.PSDB.ConnectionString;

            using (SqlConnection conn = new SqlConnection(Connections.PSDB.ConnectionString))
            {
                if (conn.State != ConnectionState.Open) conn.Open();
                //string insertText = "Insert into PSLog (ClientUID, FileType, Area, LogInfo) Values (@ClientUID, @FileType, @Area, @LogInfo ) ";
                SqlCommand cmd = new SqlCommand("spLogInfo", conn);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("@ClientUID", SqlDbType.Int).Value = Variables.ClientID;
                cmd.Parameters.Add("@Error", SqlDbType.Int).Value = Error;
                cmd.Parameters.Add("@FileType", SqlDbType.VarChar, 50).Value = processType;
                cmd.Parameters.Add("@Area", SqlDbType.VarChar, 100).Value = Area;
                cmd.Parameters.Add("@LogInfo", SqlDbType.VarChar, 1000).Value = LogInfo;
                cmd.ExecuteNonQuery();
            }
        }
        catch //(Exception ex)
        {
            throw;
        }
    }
}




]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[packages.config]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="Newtonsoft.Json" version="12.0.3" targetFramework="net40" />
</packages>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 PSDB
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"PSDB").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public Int32 ClientID
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["ClientID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientIDPS
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientIDPS"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientSecret
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientSecret"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientServer
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientServer"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String PageSize
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["PageSize"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_85d82eb1c3e64ceaa0f450c13f44ddbf.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{911C85E7-CD69-4B69-A23C-BEFEC041366E}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_85d82eb1c3e64ceaa0f450c13f44ddbf</RootNamespace>
    <AssemblyName>SC_85d82eb1c3e64ceaa0f450c13f44ddbf</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Newtonsoft.Json, Version=12.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <HintPath>C:\Users\nblakely\AppData\Local\Temp\Vsta\SSIS_SC120\VstaoOe7POQvdkmEMBxCfd49EQ\packages\Newtonsoft.Json.12.0.3\lib\net40\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Net" />
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Runtime.Serialization" />
    <Reference Include="System.Web" />
    <Reference Include="System.Web.Extensions" />
    <Reference Include="System.Web.Services" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
      <DesignTime>True</DesignTime>
    </Compile>
    <None Include="packages.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_85d82eb1c3e64ceaa0f450c13f44ddbf.Properties.Settings.get_Default():SC_85d82eb1c3e64ceaa0f450c13f44ddbf.Properties.Sett" +
    "ings")]

namespace SC_85d82eb1c3e64ceaa0f450c13f44ddbf.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String CourseName
    {
        set
        {
            this[0] = value;
        }
    }
    public bool CourseName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CourseID
    {
        set
        {
            this[1] = value;
        }
    }
    public bool CourseID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_85d82eb1c3e64ceaa0f450c13f44ddbf</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_85d82eb1c3e64ceaa0f450c13f44ddbf</msb:DisplayName>
    <msb:ProjectId>{5E8C71A6-9A58-4651-A23E-6E6857CB4894}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_85d82eb1c3e64ceaa0f450c13f44ddbf.csproj" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="packages.config" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_85d82eb1c3e64ceaa0f450c13f44ddbf")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_85d82eb1c3e64ceaa0f450c13f44ddbf")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_85d82eb1c3e64ceaa0f450c13f44ddbf.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_85d82eb1c3e64ceaa0f450c13f44ddbf.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_85d82eb1c3e64ceaa0f450c13f44ddbf.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_85d82eb1c3e64ceaa0f450c13f44ddbf.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_85d82eb1c3e64ceaa0f450c13f44ddbf.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_85d82eb1c3e64ceaa0f450c13f44ddbf.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[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
sQA5CjcDkQB1CSoBEQHcEQoBFADmC20CFADEEN0AFADRBCEAHAD4AkICHADmC20CHADEEN0AHADR
BCEAyQIGDtQCmQIvC4oDdAAGDgYAfAAGDqUDdADgAt0AKQEGDq0DJABzAEwGLgALAO8ELgATAPgE
LgAbABcFLgAjACAFLgArAEkFLgAzAEkFLgA7AEkFLgBDACAFLgBLAE8FLgBTAEkFLgBbAGYFQwBj
AEcGgABrALAFoABrANoFwABrAAAG4ABrACIG4wCbAEcGYQF7AEcGgQF7AEcGiQGjABcFoQF7AEcG
owF7AEcGqQGjABcFwQF7AEcGwwF7AEcG4QF7AEcG4wF7AEcGAQJ7AEcGAwJ7AEcGIQJ7AEcGwAV7
AEcG4AV7AEcGAAZ7AEcGIAZ7AEcGYAZ7AEcGgAZ7AEcGoAZ7AEcGwAZ7AEcG4AZ7AEcGAAd7AEcG
QAd7AEcGYAd7AEcGwAeTAEcGAAiTAEcGQAiTAEcGgAiTAEcGLgBYAGgAeACUAC4BfQHYAQACcwI8
A3MDAwABAAUABQAGAAYABwAMAAgADgAKAA8ACwARAAwAFAAAAIkEzAQAAPUJ0AQAABgCzAQAAOEJ
0AQAAAIC1AQAACUC2gQAAGMCzAQAAJgEzAQAAHoQzAQAAKoNzAQAAMIIzAQAAOwM3gQAAJ4F5AQA
ALIQ6gQAAIkEzAQAABgCzAQAAJgKzAQAAGcFzAQAAL0KzAQAAHMRzAQBAA8AAwABABAABQABABEA
BwABABIACQACABwACwACAB4ADQACAB8ADwACACAAEQACACEAEwACACIAFQACACMAFwACACUAGQAC
ACYAGwABACcAGwACACgAHQACAC4AHwABAC8AHwACADAAIQABADEAIQACADMAIwABADQAIwACADUA
JQABADYAJQACADcAJwABADgAJwACADoAKQABADsAKQANAHoAIQANAHwAIwAOAH4AIQAOAIAAIwAP
AIIAIQAPAIQAIwAQAIYAIQAQAIgAIwAzAF0AbQDGAPIA3QEtAjwCVwJdAsUC8wL7ApEDnQMEgAAA
AQAAAAAAAAAAAAAAAADvCAAABAAAAAAAAAAAAAAA2AOXAgAAAAAPAAAAAAAAAAAAAADhA4QRAAAA
AAQAAAAAAAAAAAAAANgDcgUAAAAABAAAAAAAAAAAAAAA2AN1AgAAAAAEAAAAAAAAAAAAAADqA5sM
AAAAAA8AAAAAAAAAAAAAAOEDrxEAAAAADwAAAAAAAAAAAAAA4QNUDAAAAAAEAAAAAAAAAAAAAADY
A0sKAAAAAA8AAAAAAAAAAAAAAOEDdwwAAAAABAAAAAAAAAAAAAAA2AMSCwAAAAAAAAAAAQAAAGEO
AAAJAAIACgACAAsAAgAMAAIADQACAA4AAgAPAAIAEAACAAAAAABXAG4CAAAAAFkAbgIzAEoAOQBj
AD8AcwA/AH0A0wBNAtMAYwIHAQMDBwEjAyEBWAMhAWQDWABuAyEBvQMhAckDWADTAwAAAAAASURU
U0NvbXBvbmVudE1ldGFEYXRhMTAwAElEVFNWYXJpYWJsZTEwMABJRFRTUnVudGltZUNvbm5lY3Rp
b25Db2xsZWN0aW9uMTAwAElEVFNSdW50aW1lQ29ubmVjdGlvbjEwMABJRFRTQ29ubmVjdGlvbk1h
bmFnZXIxMDAASURUU1ZhcmlhYmxlczEwMABJRFRTRXZhbHVhdG9yQ29udGV4dDEwMAA8PnVfXzEA
SUVudW1lcmFibGVgMQBUYXNrYDEASHR0cEhlYWRlclZhbHVlQ29sbGVjdGlvbmAxAEFzeW5jVGFz
a01ldGhvZEJ1aWxkZXJgMQBUYXNrQXdhaXRlcmAxAExpc3RgMQBUb0ludDMyADxiYXNlVVJMPjVf
XzIAPHBhZ2VTaXplPjVfXzIAPGNsaWVudD41X18yADw+dV9fMgBLZXlWYWx1ZVBhaXJgMgA8YWNj
ZXNzVG9rZW4+NV9fMwA8cGFnZXM+NV9fMwBFbmNvZGVUbzY0ADxpPjVfXzQAPHBhZ2VudW0+NV9f
NQA8UHJvY2Vzc01hc3RlckNvdXJzZT5kX182ADxHZXRNYXN0ZXJDb3Vyc2U+ZF9fNwBnZXRfVVRG
OAA8R2V0RmlsZVNpemU+ZF9fOAA8R2V0QWNjZXNzVG9rZW4+ZF9fOQA8TW9kdWxlPgBnZXRfUFNE
QgBnZXRfQ291cnNlSUQAc2V0X0NvdXJzZUlEAGdldF9DbGllbnRJRABHZXRPdXRwdXRJRABnZXRf
QVNDSUkAdG9rZW5VUkkAYmFzZVVSTABTeXN0ZW0uSU8AZ2V0X0NsaWVudElEUFMAVABBcmVhAFN5
c3RlbS5EYXRhAGdldF9Db21wb25lbnRNZXRhRGF0YQBtc2NvcmxpYgBTeXN0ZW0uQ29sbGVjdGlv
bnMuR2VuZXJpYwBSZWFkQXNTdHJpbmdBc3luYwBQb3N0QXN5bmMAY2xpZW50SWQAQWRkAE1hcmtP
dXRwdXRzRmluaXNoZWQAQXdhaXRVbnNhZmVPbkNvbXBsZXRlZABnZXRfSXNDb21wbGV0ZWQAPENv
dXJzZUlEPmtfX0JhY2tpbmdGaWVsZAA8Q291cnNlTmFtZT5rX19CYWNraW5nRmllbGQAPHRva2Vu
X3R5cGU+a19fQmFja2luZ0ZpZWxkADxhY2Nlc3NfdG9rZW4+a19fQmFja2luZ0ZpZWxkADxleHBp
cmVzX2luPmtfX0JhY2tpbmdGaWVsZAA8Y291bnQ+a19fQmFja2luZ0ZpZWxkAERiQ29tbWFuZABT
cWxDb21tYW5kAFJlcGxhY2UAZGVmYXVsdEluc3RhbmNlAEVuc3VyZVN1Y2Nlc3NTdGF0dXNDb2Rl
AHRvRW5jb2RlAGdldF9NZXNzYWdlAEh0dHBSZXNwb25zZU1lc3NhZ2UASnNvblN0cmluZ1RvRGF0
YVRhYmxlAElEaXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAGdl
dF9Db3Vyc2VOYW1lAHNldF9Db3Vyc2VOYW1lAGdldF9DbGllbnROYW1lAEdldFJ1bnRpbWVDb25u
ZWN0aW9uQnlOYW1lAElBc3luY1N0YXRlTWFjaGluZQBTZXRTdGF0ZU1hY2hpbmUAc3RhdGVNYWNo
aW5lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFNxbERiVHlwZQBzZXRfQ29tbWFu
ZFR5cGUAVmFsdWVUeXBlAFNlY3VyaXR5UHJvdG9jb2xUeXBlAHByb2Nlc3NUeXBlAGdldF90b2tl
bl90eXBlAHNldF90b2tlbl90eXBlAFN5c3RlbS5Db3JlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJl
AHJlc291cmNlQ3VsdHVyZQBJbnRlcm5hbERhdGFDb2xsZWN0aW9uQmFzZQBBcHBsaWNhdGlvblNl
dHRpbmdzQmFzZQBXcml0ZVRvRGF0YWJhc2UAQ2xvc2UARGlzcG9zZQBUcnlQYXJzZQBQcm9jZXNz
TWFzdGVyQ291cnNlAEdldE1hc3RlckNvdXJzZQBDcmVhdGUAZ2V0X1N0YXRlAEVkaXRvckJyb3dz
YWJsZVN0YXRlAENvbm5lY3Rpb25TdGF0ZQA8PjFfX3N0YXRlAER5bmFtaWNBdHRyaWJ1dGUAQ29t
cGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1
Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0
cmlidXRlAEFzeW5jU3RhdGVNYWNoaW5lQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmli
dXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBEZWJ1Z2dlckhpZGRlbkF0dHJpYnV0ZQBBc3Nl
bWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBD
b21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBB
c3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0
dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRy
aWJ1dGUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQBzZXRfVmFsdWUAQXV0aGVudGljYXRpb25IZWFk
ZXJWYWx1ZQBNZWRpYVR5cGVXaXRoUXVhbGl0eUhlYWRlclZhbHVlAHZhbHVlAHNldF9FeHBlY3Qx
MDBDb250aW51ZQBnZXRfUGFnZVNpemUAR2V0RmlsZVNpemUASnNvbkRlc2VyaWFsaXplAEluZGV4
T2YAU0NfODVkODJlYjFjM2U2NGNlYWEwZjQ1MGMxM2Y0NGRkYmYARW5jb2RpbmcAU3lzdGVtLlJ1
bnRpbWUuVmVyc2lvbmluZwBUb0Jhc2U2NFN0cmluZwBnZXRfQ29ubmVjdGlvblN0cmluZwBjbGVh
bkpzb25TdHJpbmcAanNvblN0cmluZwBUb1N0cmluZwBHZXRTdHJpbmcAU3Vic3RyaW5nAFVyaQBn
ZXRfVGFzawBTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0NfODVkODJlYjFjM2U2NGNlYWEwZjQ1MGMx
M2Y0NGRkYmYuZGxsAHNldF9Db3Vyc2VJRF9Jc051bGwAc2V0X0NvdXJzZU5hbWVfSXNOdWxsAFNl
dE51bGwAc2V0X1NlY3VyaXR5UHJvdG9jb2wAYmFzZVVybABNZW1vcnlTdHJlYW0AZ2V0X0l0ZW0A
c2V0X0l0ZW0AU3lzdGVtAHJlc291cmNlTWFuAHNlbmRUb2tlbgBHZXRBY2Nlc3NUb2tlbgBhY2Nl
c3NUb2tlbgBnZXRfYWNjZXNzX3Rva2VuAHNldF9hY2Nlc3NfdG9rZW4AT3BlbgBnZXRfZXhwaXJl
c19pbgBzZXRfZXhwaXJlc19pbgBTY3JpcHRNYWluAERhdGFDb2x1bW4AcExvY2F0aW9uAFN5c3Rl
bS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SdW50aW1lLlNlcmlh
bGl6YXRpb24Ac2V0X0F1dGhvcml6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24ARGF0YUNvbHVtbkNv
bGxlY3Rpb24AZ2V0X1J1bnRpbWVDb25uZWN0aW9uQ29sbGVjdGlvbgBTcWxQYXJhbWV0ZXJDb2xs
ZWN0aW9uAERhdGFSb3dDb2xsZWN0aW9uAERiQ29ubmVjdGlvbgBTcWxDb25uZWN0aW9uAEludmFs
aWRPcGVyYXRpb25FeGNlcHRpb24AU2V0RXhjZXB0aW9uAFN5c3RlbS5EYXRhLkNvbW1vbgBTeXN0
ZW0uUnVudGltZS5TZXJpYWxpemF0aW9uLkpzb24AQ3VsdHVyZUluZm8ATG9nSW5mbwBPdXRwdXRO
YW1lTWFwAE91dHB1dE1hcABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1J1bnRpbWVXcmFwAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuRFRTUGlwZWxpbmVXcmFwAFN5c3RlbS5OZXQuSHR0cABDbGVhcgA8PnRf
X2J1aWxkZXIAT3V0cHV0MEJ1ZmZlcgBQaXBlbGluZUJ1ZmZlcgBTY3JpcHRCdWZmZXIAZ2V0X1Jl
c291cmNlTWFuYWdlcgBnZXRfQ29ubmVjdGlvbk1hbmFnZXIAU2VydmljZVBvaW50TWFuYWdlcgBK
c29uSGVscGVyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUuV3JhcHBlcgBNaWNyb3Nv
ZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZS5XcmFwcGVyAERiUGFyYW1ldGVyAFNxbFBhcmFtZXRl
cgBHZXRBd2FpdGVyAGdldF9DbGllbnRTZXJ2ZXIARGF0YUNvbnRyYWN0SnNvblNlcmlhbGl6ZXIA
WG1sT2JqZWN0U2VyaWFsaXplcgBFcnJvcgBJRW51bWVyYXRvcgBHZXRFbnVtZXJhdG9yAC5jdG9y
AC5jY3RvcgBPdXRwdXRJRHMAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBp
bGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTQ184NWQ4MmViMWMzZTY0Y2VhYTBmNDUwYzEz
ZjQ0ZGRiZi5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU0Nf
ODVkODJlYjFjM2U2NGNlYWEwZjQ1MGMxM2Y0NGRkYmYuUHJvcGVydGllcwBnZXRfUmVhZE9ubHlW
YXJpYWJsZXMAR2V0Qnl0ZXMAQnVmZmVyQ29sdW1uSW5kZXhlcwBHZXRDb2x1bW5JbmRleGVzAFNl
dHRpbmdzADw+NF9fdGhpcwBTeXN0ZW0uVGhyZWFkaW5nLlRhc2tzAENvbnRhaW5zAGdldF9Db2x1
bW5zAFN5c3RlbS5UZXh0LlJlZ3VsYXJFeHByZXNzaW9ucwBTeXN0ZW0uQ29sbGVjdGlvbnMAQ29u
bmVjdGlvbnMAU3lzdGVtLk5ldC5IdHRwLkhlYWRlcnMASHR0cEhlYWRlcnMASHR0cFJlcXVlc3RI
ZWFkZXJzAGdldF9EZWZhdWx0UmVxdWVzdEhlYWRlcnMAQnVmZmVycwBnZXRfUGFyYW1ldGVycwBz
ZXRfQmFzZUFkZHJlc3MARmluaXNoT3V0cHV0cwBnZXRfUm93cwBDcmVhdGVOZXdPdXRwdXRSb3dz
AENvbmNhdABGb3JtYXQAUmVhZE9iamVjdABXcml0ZU9iamVjdABTeXN0ZW0uTmV0AGdldF9DbGll
bnRTZWNyZXQAY2xpZW50U2VjcmV0AFNldEVuZE9mUm93c2V0AFdhaXQAU3BsaXQAZ2V0X0RlZmF1
bHQAR2V0UmVzdWx0AFNldFJlc3VsdABTeXN0ZW0uRGF0YS5TcWxDbGllbnQASHR0cENsaWVudABV
c2VyQ29tcG9uZW50AFBhcmVudENvbXBvbmVudABTY3JpcHRDb21wb25lbnQAZ2V0X0N1cnJlbnQA
Z2V0X0NvbnRlbnQARm9ybVVybEVuY29kZWRDb250ZW50AFN0cmluZ0NvbnRlbnQASHR0cENvbnRl
bnQAZ2V0X2NvdW50AHNldF9jb3VudABnZXRfQWNjZXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhT
Y3JpcHQAU3RhcnQAQ29udmVydABNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABQcmlt
ZU91dHB1dABNb3ZlTmV4dABTeXN0ZW0uVGV4dABHZXRWYWx1ZVdpdGhDb250ZXh0AFNjcmlwdENv
bXBvbmVudEV2YWxDb250ZXh0AGdldF9FdmFsdWF0b3JDb250ZXh0AERhdGFSb3cAQWRkUm93AE5l
d1JvdwBSZWdleABUb0FycmF5AGdldF9Bc3NlbWJseQBFeGVjdXRlTm9uUXVlcnkAAAAAA1sAAAEA
A10AAAd9ACwAewAAA3sAAAN9AAADLAAAAzoAAAMiAAA9SgBzAG8AbgBTAHQAcgBpAG4AZwBUAG8A
RABhAHQAYQBUAGEAYgBsAGUAOgAgAEMAbwBsAHUAbQBuAHMAAD9FAHIAcgBvAHIAIABQAGEAcgBz
AGkAbgBnACAAQwBvAGwAdQBtAG4AIABOAGEAbQBlACAAOgAgAHsAMAB9AAADXAAAR0oAcwBvAG4A
UwB0AHIAaQBuAGcAVABvAEQAYQB0AGEAVABhAGIAbABlADoAIABGAG8AcgAgAGUAYQBjAGgAIABy
AG8AdwAAO0UAcgByAG8AcgAgAFAAYQByAHMAaQBuAGcAIABSAG8AdwAgACAATgBhAG0AZQAgADoA
IAB7ADAAfQAAK0oAcwBvAG4AUwB0AHIAaQBuAGcAVABvAEQAYQB0AGEAVABhAGIAbABlAAAXewAi
AHIAZQBjAG8AcgBkACIAOgBbAAAdLAAiAEAAZQB4AHQAZQBuAHMAaQBvAG4AcwAiAAATcwBwAEwA
bwBnAEkAbgBmAG8AABVAAEMAbABpAGUAbgB0AFUASQBEAAANQABFAHIAcgBvAHIAABNAAEYAaQBs
AGUAVAB5AHAAZQAAC0AAQQByAGUAYQAAEUAATABvAGcASQBuAGYAbwAAWy8AdwBzAC8AcwBjAGgA
ZQBtAGEALwBxAHUAZQByAHkALwBjAG8AbQAuAGgAYQB5AGUAcwBzAG8AZgB0AC4AVABJAFAAVwBl
AGIALgBjAG8AdQByAHMAZQBzAAApLwBvAGEAdQB0AGgALwBhAGMAYwBlAHMAcwBfAHQAbwBrAGUA
bgAvAAAPVABlAGEAYwBoAGUAcgAAgJtJAHMATgB1AGwAbAAgAHAAcgBvAHAAZQByAHQAeQAgAGMA
YQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABGAGEAbABzAGUALgAgAEEAcwBzAGkAZwBu
ACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAAYwBvAGwAdQBtAG4AIABpAG4AcwB0AGUA
YQBkAC4AABFPAHUAdABwAHUAdAAgADAAAAlQAFMARABCAAARQwBsAGkAZQBuAHQASQBEAAAVQwBs
AGkAZQBuAHQASQBEAFAAUwAAFUMAbABpAGUAbgB0AE4AYQBtAGUAABlDAGwAaQBlAG4AdABTAGUA
YwByAGUAdAAAGUMAbABpAGUAbgB0AFMAZQByAHYAZQByAAARUABhAGcAZQBTAGkAegBlAABxUwBD
AF8AOAA1AGQAOAAyAGUAYgAxAGMAMwBlADYANABjAGUAYQBhADAAZgA0ADUAMABjADEAMwBmADQA
NABkAGQAYgBmAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAtTQBh
AHMAdABlAHIAQwBvAHUAcgBzAGUALQBzAGUAbgBkAFQAbwBrAGUAbgABGUEAYwBjAGUAcwBzACAA
VABvAGsAZQBuAAA5RwBlAHQAQQBjAGMAZQBzAHMAVABvAGsAZQBuACAAcgBlAHQAdQByAG4AZQBk
ACAAbgB1AGwAbAAAE0YAaQBsAGUAIABTAGkAegBlAAAzRwBlAHQARgBpAGwAZQBTAGkAegBlACAA
cgBlAHQAdQByAG4AZQBkACAAbgB1AGwAbAAAJ1AAcgBvAGMAZQBzAHMATQBhAHMAdABlAHIAQwBv
AHUAcgBzAGUAABU/AHAAYQBnAGUAcwBpAHoAZQA9AAANJgBwAGEAZwBlAD0AACFhAHAAcABsAGkA
YwBhAHQAaQBvAG4ALwBqAHMAbwBuAAAbQQB1AHQAaABvAHIAaQB6AGEAdABpAG8AbgAAD0IAZQBh
AHIAZQByACAAABVjAG8AdQByAHMAZQBuAGEAbQBlAAARYwBvAHUAcgBzAGUAaQBkAABNRwBlAHQA
TQBhAHMAdABlAHIAQwBvAHUAcgBzAGUAIAAtACAAUgBvAHcAIABDAG8AdQBuAHQAIABQAGEAZwBl
ACAATgB1AG0AOgAgAAEfRwBlAHQATQBhAHMAdABlAHIAQwBvAHUAcgBzAGUAAA0vAGMAbwB1AG4A
dAAAF1IAZQBjAG8AcgBkAEMAbwB1AG4AdAAAF0cAZQB0AEYAaQBsAGUAUwBpAHoAZQAAQ2EAcABw
AGwAaQBjAGEAdABpAG8AbgAvAHgALQB3AHcAdwAtAGYAbwByAG0ALQB1AHIAbABlAG4AYwBvAGQA
ZQBkAAELQgBhAHMAaQBjAAAVZwByAGEAbgB0AF8AdAB5AHAAZQAAJWMAbABpAGUAbgB0AF8AYwBy
AGUAZABlAG4AdABpAGEAbABzAAAAAHpmmkQFumtKi7zYwoRM8BcABCABAQgDIAABBSABARERBCAB
AQ4FIAEBEjkFIAEBHQIFIAEBEnEGIAEBEYC5BAcBETQFFRF5AQgIAAAVEXkBEwAHMAEBARAeAAQK
ARE0CCAAFRJBARMABAcBETgFFRF5ARwECgEROAQHARE8BRUReQEOBAoBETwEBwERQAQKARFABQAA
EoDJBSABHQUOBQABDh0FJAcTEk0dDhUSUQEOHQ4IHQ4IDggOFRFVAQ4OElkOCA4OEk0SXQUgAg4O
DgYAAh0ODg4FFRJRAQ4EIAEIDgUgAg4ICAUgAQITAAUgAQETAAUAAg4OHAggABURVQETAAUVEVUB
DgQgABMABSAAEoDZBiABEoDdDgMgAAIEIAASWQQgAQ4IBSACAQ4cBSAAEoDhBSABARJZAyAADgQH
ARJhBSAAEYDpBiACAQ4SYQYgAQERgPUFIAASgPkJIAISgP0OEYEBBCABARwKIAMSgP0OEYEBCAMg
AAgLIAMBEoCdHQgSgKEFIAIBCBwDBwEIBwACCBKAoQ4FIAEdCAgFIAASgREFIAASgRUGIAESgRkO
BSAAEoCpBSAAEoEdBiABEoEhHAUAABKBJQYgARwSgSkHAAESORGBLQUgABKBMQcgAgEOEoExBAcB
EmUCHgAHIAIBEoE9HAQgAB0FBSABDh0FBSABAR0FBiABHBKBPRkHDAgSCAgODg4ODhURdQEOFRF1
ARwSXRJdBAABAQIGAAEBEYFFBgADDg4ODgUVEkEBDgggABURdQETAAUVEXUBDgowAgIBEB4AEB4B
CQoCFRF1AQ4RNAUVEkEBHAUVEXUBHAkKAhURdQEcETQFIAEBEl0nBxEIEggcCAgOEoCBDggVEXUB
EoCFFRF1AQ4SgIkSWRKAjQgSXRJdBAABCA4GAAICDhAIBQABDh0OBiABARKBSQUgABKBTQogABUS
gVEBEoFVCBUSgVEBEoFVBQACDg4OBSACAQ4OCCADAQ4SgMkODyACFRJBARKAhRKBSRKBXQcVEkEB
EoCFBxURdQESgIULCgIVEXUBEoCFETgFIAASgIUFIAASgV0HIAAVEkEBDgkKAhURdQEOETgFIAAS
gIkDIAAcBCABHA4bBwoIEggODhKAgQ4VEXUBEoCFFRF1AQ4SXRJdCwoCFRF1ARKAhRE8CQoCFRF1
AQ4RPAQKARIwFgcHCA4OEoCVFRF1ARKAhRURdQEOEl0GIAEBEoFlCxUSUQEVEYFpAg4OBxURgWkC
Dg4HIAIBEwATAQ8gAQEVEoFtARURgWkCDg4LCgIVEXUBEoCFEUAJCgIVEXUBDhFABAoBEiwIt3pc
Vhk04IkIiYRdzYCAzJEIsD9ffxHVCjoCBg4DBhIUAwYSGAMGEgwEBhKApQQGEoCxBAYSgLUDBhIg
AgYIBgYVEXkBCAMGEggGBhURdQEOBgYVEXUBHAYGFRF5ARwIBhURdQESgIUGBhUReQEOBAYSgJEH
IAAVEkEBCAogAxUSQQEcDg4OCSACFRJBAQ4ODgsABBUSQQEODg4ODgQgAQ4OBSABEk0OBiADAQgO
DgMAAAEEIAEBAg0gBAEIHQgdEoCdEoChBiABARKApQUAABKAsQUAABKAtQYAAQESgLUEAAASIAYQ
AQEOHgAGEAEBHgAOAygADgMoAAIFKAASgKkDKAAIBQgAEoCxBQgAEoC1BAgAEiAIAQAIAAAAAAAe
AQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NDXzg1ZDgyZWIxYzNl
NjRjZWFhMGY0NTBjMTNmNDRkZGJmAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjAAAEkBABou
TkVURnJhbWV3b3JrLFZlcnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBG
cmFtZXdvcmsgNC43KQEAJFNjcmlwdE1haW4rPFByb2Nlc3NNYXN0ZXJDb3Vyc2U+ZF9fNgAAJQEA
IFNjcmlwdE1haW4rPEdldE1hc3RlckNvdXJzZT5kX183AAAhAQAcU2NyaXB0TWFpbis8R2V0Rmls
ZVNpemU+ZF9fOAAAJAEAH1NjcmlwdE1haW4rPEdldEFjY2Vzc1Rva2VuPmRfXzkAAAQBAAAACgEA
AgAAAAABAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVy
LCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRv
a2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQC
AAAAAAAAAAAAAABQQURQQURQtAAAANRmAAAAAAAAAAAAAO5mAAAAIAAAAAAAAAAAAAAAAAAAAAAA
AAAAAADgZgAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAA
AAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYgAAA7AMAAAAAAAAAAAAA7AM0AAAA
VgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEAAAABAAAAAAAAAAEAAAAA
AD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8A
AAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBEwDAAABAFMAdAByAGkAbgBn
AEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAwADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0A
ZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBG
AGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8AOAA1AGQAOAAyAGUAYgAxAGMA
MwBlADYANABjAGUAYQBhADAAZgA0ADUAMABjADEAMwBmADQANABkAGQAYgBmAAAAMAAIAAEARgBp
AGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAwAAAAcAAoAAEASQBuAHQAZQByAG4A
YQBsAE4AYQBtAGUAAABTAEMAXwA4ADUAZAA4ADIAZQBiADEAYwAzAGUANgA0AGMAZQBhAGEAMABm
ADQANQAwAGMAMQAzAGYANAA0AGQAZABiAGYALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8A
cAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADIAMAAAACoAAQAB
AEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4A
YQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfADgANQBkADgAMgBlAGIAMQBjADMAZQA2ADQAYwBl
AGEAYQAwAGYANAA1ADAAYwAxADMAZgA0ADQAZABkAGIAZgAuAGQAbABsAAAAaAAkAAEAUAByAG8A
ZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwA4ADUAZAA4ADIAZQBiADEAYwAzAGUANgA0AGMAZQBh
AGEAMABmADQANQAwAGMAMQAzAGYANAA0AGQAZABiAGYAAAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYA
ZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAOAAIAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAYAAADAAAAAA3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_85d82eb1c3e64ceaa0f450c13f44ddbf</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::ClientID,User::ClientIDPS,User::ClientName,User::ClientSecret,User::ClientServer,User::PageSize</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">60711c1a44e5d677e52518f51a973d9f</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">cb3017b385276176ff67132301cc3054f4ea0647</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">C9</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Loop thru Clients\Users\Script Component.Connections[PSDB]"
                      connectionManagerID="Package.ConnectionManagers[OneRosterNET]"
                      connectionManagerRefId="Package.ConnectionManagers[OneRosterNET]"
                      name="PSDB" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Loop thru Clients\Users\Script Component.Outputs[Output 0]"
                      hasSideEffects="true"
                      name="Output 0">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop thru Clients\Users\Script Component.Outputs[Output 0].Columns[CourseName]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          lineageId="Package\Loop thru Clients\Users\Script Component.Outputs[Output 0].Columns[CourseName]"
                          name="CourseName" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Users\Script Component.Outputs[Output 0].Columns[CourseID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Users\Script Component.Outputs[Output 0].Columns[CourseID]"
                          name="CourseID" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Loop thru Clients\Users.Paths[Derived Column Output]"
                  endId="Package\Loop thru Clients\Users\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Loop thru Clients\Users\Derived Column.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Loop thru Clients\Users.Paths[Output 0]"
                  endId="Package\Loop thru Clients\Users\Derived Column.Inputs[Derived Column Input]"
                  name="Output 0"
                  startId="Package\Loop thru Clients\Users\Script Component.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Loop thru Clients.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{B85F13EF-0CBC-4F14-8465-EFA31610B823}"
          DTS:From="Package\Loop thru Clients\Truncate Tables"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Loop thru Clients\Academic Sessions" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Loop thru Clients.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{01EF4F0F-44E8-4BB8-BD19-5D5302D5A1AD}"
          DTS:From="Package\Loop thru Clients\Users"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Loop thru Clients\Courses" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Loop thru Clients.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{0CCDA56C-4836-426E-8D1C-6DB00F729B57}"
          DTS:From="Package\Loop thru Clients\Courses"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\Loop thru Clients\Classes" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Loop thru Clients.PrecedenceConstraints[Constraint 4]"
          DTS:CreationName=""
          DTS:DTSID="{EC92A656-C83E-442E-80AE-64BB0578E729}"
          DTS:From="Package\Loop thru Clients\Classes"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 4"
          DTS:To="Package\Loop thru Clients\Enrollements" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{BF6397D8-52FC-4303-8FA0-69FB30FA9E31}"
          DTS:ObjectName="{BF6397D8-52FC-4303-8FA0-69FB30FA9E31}"
          DTS:ValueIndex="1"
          DTS:VariableName="User::ClientOneRosterID" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{0FDADA0A-2A1B-471D-B62B-5A74DD09A243}"
          DTS:ObjectName="{0FDADA0A-2A1B-471D-B62B-5A74DD09A243}"
          DTS:ValueIndex="3"
          DTS:VariableName="User::ClientKey" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{DCF3A010-F56F-47C5-AC8A-D84FE7267720}"
          DTS:ObjectName="{DCF3A010-F56F-47C5-AC8A-D84FE7267720}"
          DTS:ValueIndex="4"
          DTS:VariableName="User::ClientSecret" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{38BFCCA6-09E1-498A-8F4E-2B3576C3B954}"
          DTS:ObjectName="{38BFCCA6-09E1-498A-8F4E-2B3576C3B954}"
          DTS:ValueIndex="5"
          DTS:VariableName="User::ProcessSessions" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{D223B999-7867-48C5-8CCC-450B957A8561}"
          DTS:ObjectName="{D223B999-7867-48C5-8CCC-450B957A8561}"
          DTS:ValueIndex="6"
          DTS:VariableName="User::ProcessClasses" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{FAAF2184-2866-4ACC-88B6-AF29854B34BB}"
          DTS:ObjectName="{FAAF2184-2866-4ACC-88B6-AF29854B34BB}"
          DTS:ValueIndex="6"
          DTS:VariableName="User::ProcessCourses" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{01F5D315-33FC-44A9-8463-BCB3B25A38FE}"
          DTS:ObjectName="{01F5D315-33FC-44A9-8463-BCB3B25A38FE}"
          DTS:ValueIndex="7"
          DTS:VariableName="User::ProcessEnrollments" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{8F05134C-C27C-45BC-9EA8-AC9108FC7F80}"
          DTS:ObjectName="{8F05134C-C27C-45BC-9EA8-AC9108FC7F80}"
          DTS:ValueIndex="2"
          DTS:VariableName="User::ClientServer" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Truncate Log"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{6760A9FB-254E-4E3F-8D5C-F7543511201F}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Truncate Log"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{9238981A-2F3C-4FFA-86C4-45A523C0CAF5}"
          SQLTask:SqlStatementSource="--Select * &#xA;delete&#xA;from OneRoster.LogFile&#xA;where getdate() &gt; dateadd(d, 14, logdate) " xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{786123FF-F135-400B-9BE0-9F31769713E1}"
      DTS:From="Package\Data Flow Task - Get Customers"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Truncate Log" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{74B64602-56FE-4743-B7D4-FDCB41434934}"
      DTS:From="Package\Truncate Log"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Loop thru Clients" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="231,42"
          Id="Package\Data Flow Task - Get Customers"
          TopLeft="153.971698113208,29.518867924528" />
        <NodeLayout
          Size="120,42"
          Id="Package\Loop thru Clients\Courses"
          TopLeft="890,19" />
        <NodeLayout
          Size="124,42"
          Id="Package\Loop thru Clients\Classes"
          TopLeft="436,106" />
        <NodeLayout
          Size="103,42"
          Id="Package\Loop thru Clients\Orgs"
          TopLeft="187,24" />
        <NodeLayout
          Size="175,42"
          Id="Package\Loop thru Clients\Academic Sessions"
          TopLeft="14,97" />
        <NodeLayout
          Size="108,42"
          Id="Package\Loop thru Clients\Users"
          TopLeft="696,21" />
        <NodeLayout
          Size="143,42"
          Id="Package\Loop thru Clients\Enrollements"
          TopLeft="651,110" />
        <EdgeLayout
          Id="Package\Loop thru Clients.PrecedenceConstraints[Constraint 2]"
          TopLeft="804,41">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="86,0"
              Start="0,0"
              End="78.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="78.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Loop thru Clients.PrecedenceConstraints[Constraint 3]"
          TopLeft="950,61">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-452,45"
              Start="0,0"
              End="-452,37.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.5"
                    Point2="0,22.5"
                    Point3="-4,22.5" />
                  <mssgle:LineSegment
                    End="-448,22.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-448,22.5"
                    Point2="-452,22.5"
                    Point3="-452,26.5" />
                  <mssgle:LineSegment
                    End="-452,37.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Loop thru Clients.PrecedenceConstraints[Constraint 4]"
          TopLeft="560,129">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="91,0"
              Start="0,0"
              End="83.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="83.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="146,42"
          Id="Package\Loop thru Clients\Truncate Tables"
          TopLeft="18.858490566038,23.5" />
        <EdgeLayout
          Id="Package\Loop thru Clients.PrecedenceConstraints[Constraint]"
          TopLeft="91.858490566038,65.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="9.64150943396203,31.5"
              Start="0,0"
              End="9.64150943396203,24">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,11.75" />
                  <mssgle:CubicBezierSegment
                    Point1="0,11.75"
                    Point2="0,15.75"
                    Point3="4,15.75" />
                  <mssgle:LineSegment
                    End="5.64150943396203,15.75" />
                  <mssgle:CubicBezierSegment
                    Point1="5.64150943396203,15.75"
                    Point2="9.64150943396203,15.75"
                    Point3="9.64150943396203,19.75" />
                  <mssgle:LineSegment
                    End="9.64150943396203,24" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43.924528301886795"
          IsExpanded="True"
          PanelSize="1072,245"
          Size="1072,289"
          Id="Package\Loop thru Clients"
          TopLeft="82.5,245.990566037736" />
        <NodeLayout
          Size="143,42"
          Id="Package\Truncate Log"
          TopLeft="379,136" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="450.5,178">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="168,67.990566037736"
              Start="0,0"
              End="168,60.490566037736">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.995283018868" />
                  <mssgle:CubicBezierSegment
                    Point1="0,29.995283018868"
                    Point2="0,33.995283018868"
                    Point3="4,33.995283018868" />
                  <mssgle:LineSegment
                    End="164,33.995283018868" />
                  <mssgle:CubicBezierSegment
                    Point1="164,33.995283018868"
                    Point2="168,33.995283018868"
                    Point3="168,37.995283018868" />
                  <mssgle:LineSegment
                    End="168,60.490566037736" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="269.471698113208,71.518867924528">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="181.028301886792,64.481132075472"
              Start="0,0"
              End="181.028301886792,56.981132075472">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.240566037736" />
                  <mssgle:CubicBezierSegment
                    Point1="0,28.240566037736"
                    Point2="0,32.240566037736"
                    Point3="4,32.240566037736" />
                  <mssgle:LineSegment
                    End="177.028301886792,32.240566037736" />
                  <mssgle:CubicBezierSegment
                    Point1="177.028301886792,32.240566037736"
                    Point2="181.028301886792,32.240566037736"
                    Point3="181.028301886792,36.240566037736" />
                  <mssgle:LineSegment
                    End="181.028301886792,56.981132075472" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Data Flow Task - Get Customers">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="152,42"
          Id="Package\Data Flow Task - Get Customers\OLE DB Source"
          TopLeft="112,65" />
        <NodeLayout
          Size="187,42"
          Id="Package\Data Flow Task - Get Customers\Recordset Destination"
          TopLeft="93,165" />
        <EdgeLayout
          Id="Package\Data Flow Task - Get Customers.Paths[OLE DB Source Output]"
          TopLeft="187.25,107">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,58"
              Start="0,0"
              End="0,50.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,50.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Data Flow Task - Get Customers\OLE DB Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Loop thru Clients\Courses">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="173,42"
          Id="Package\Loop thru Clients\Courses\OLE DB Destination"
          TopLeft="348,351" />
        <NodeLayout
          Size="156,42"
          Id="Package\Loop thru Clients\Courses\Derived Column"
          TopLeft="368,166" />
        <NodeLayout
          Size="167,42"
          Id="Package\Loop thru Clients\Courses\Script Component"
          TopLeft="386,34" />
        <EdgeLayout
          Id="Package\Loop thru Clients\Courses.Paths[Output 0]"
          TopLeft="469.5,76">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-23.5,90"
              Start="0,0"
              End="-23.5,82.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41" />
                  <mssgle:CubicBezierSegment
                    Point1="0,41"
                    Point2="0,45"
                    Point3="-4,45" />
                  <mssgle:LineSegment
                    End="-19.5,45" />
                  <mssgle:CubicBezierSegment
                    Point1="-19.5,45"
                    Point2="-23.5,45"
                    Point3="-23.5,49" />
                  <mssgle:LineSegment
                    End="-23.5,82.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Loop thru Clients\Courses.Paths[Derived Column Output]"
          TopLeft="446,208">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-11.5,143"
              Start="0,0"
              End="-11.5,135.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,67.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,67.5"
                    Point2="0,71.5"
                    Point3="-4,71.5" />
                  <mssgle:LineSegment
                    End="-7.5,71.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-7.5,71.5"
                    Point2="-11.5,71.5"
                    Point3="-11.5,75.5" />
                  <mssgle:LineSegment
                    End="-11.5,135.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Loop thru Clients\Courses\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Loop thru Clients\Classes">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="173,42"
          Id="Package\Loop thru Clients\Classes\OLE DB Destination"
          TopLeft="348,351" />
        <NodeLayout
          Size="167,42"
          Id="Package\Loop thru Clients\Classes\Script Component"
          TopLeft="366,39" />
        <NodeLayout
          Size="156,42"
          Id="Package\Loop thru Clients\Classes\Derived Column"
          TopLeft="368,166" />
        <EdgeLayout
          Id="Package\Loop thru Clients\Classes.Paths[Output 0]"
          TopLeft="447.75,81">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,85"
              Start="0,0"
              End="0,77.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,77.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Loop thru Clients\Classes.Paths[Derived Column Output]"
          TopLeft="446,208">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-11.5,143"
              Start="0,0"
              End="-11.5,135.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,67.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,67.5"
                    Point2="0,71.5"
                    Point3="-4,71.5" />
                  <mssgle:LineSegment
                    End="-7.5,71.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-7.5,71.5"
                    Point2="-11.5,71.5"
                    Point3="-11.5,75.5" />
                  <mssgle:LineSegment
                    End="-11.5,135.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Loop thru Clients\Classes\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Loop thru Clients\Orgs">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="165,42"
          Id="Package\Loop thru Clients\Orgs\Script Component"
          TopLeft="364,64" />
        <NodeLayout
          Size="156,42"
          Id="Package\Loop thru Clients\Orgs\Derived Column"
          TopLeft="372,139" />
        <NodeLayout
          Size="173,42"
          Id="Package\Loop thru Clients\Orgs\OLE DB Destination"
          TopLeft="354,228" />
        <EdgeLayout
          Id="Package\Loop thru Clients\Orgs.Paths[Output 0]"
          TopLeft="448.25,106">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33"
              Start="0,0"
              End="0,25.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Loop thru Clients\Orgs.Paths[Derived Column Output]"
          TopLeft="450,181">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-9.5,47"
              Start="0,0"
              End="-9.5,39.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,19.5"
                    Point2="0,23.5"
                    Point3="-4,23.5" />
                  <mssgle:LineSegment
                    End="-5.5,23.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-5.5,23.5"
                    Point2="-9.5,23.5"
                    Point3="-9.5,27.5" />
                  <mssgle:LineSegment
                    End="-9.5,39.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Loop thru Clients\Orgs\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Loop thru Clients\Academic Sessions">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="165,42"
          Id="Package\Loop thru Clients\Academic Sessions\Script Component"
          TopLeft="305,94" />
        <NodeLayout
          Size="156,42"
          Id="Package\Loop thru Clients\Academic Sessions\Derived Column"
          TopLeft="303,182" />
        <NodeLayout
          Size="177,42"
          Id="Package\Loop thru Clients\Academic Sessions\OLE DB Destination"
          TopLeft="300,282" />
        <EdgeLayout
          Id="Package\Loop thru Clients\Academic Sessions.Paths[Output 0]"
          TopLeft="384.25,136">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,46"
              Start="0,0"
              End="0,38.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,38.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Loop thru Clients\Academic Sessions.Paths[Derived Column Output]"
          TopLeft="384.75,224">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,58"
              Start="0,0"
              End="0,50.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,50.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Loop thru Clients\Academic Sessions\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Loop thru Clients\Users">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="173,42"
          Id="Package\Loop thru Clients\Users\OLE DB Destination"
          TopLeft="348,351" />
        <NodeLayout
          Size="156,42"
          Id="Package\Loop thru Clients\Users\Derived Column"
          TopLeft="368,166" />
        <NodeLayout
          Size="167,42"
          Id="Package\Loop thru Clients\Users\Script Component"
          TopLeft="373,33" />
        <EdgeLayout
          Id="Package\Loop thru Clients\Users.Paths[Output 0]"
          TopLeft="456.5,75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-10.5,91"
              Start="0,0"
              End="-10.5,83.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,41.5"
                    Point2="0,45.5"
                    Point3="-4,45.5" />
                  <mssgle:LineSegment
                    End="-6.5,45.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-6.5,45.5"
                    Point2="-10.5,45.5"
                    Point3="-10.5,49.5" />
                  <mssgle:LineSegment
                    End="-10.5,83.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Loop thru Clients\Users.Paths[Derived Column Output]"
          TopLeft="446,208">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-11.5,143"
              Start="0,0"
              End="-11.5,135.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,67.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,67.5"
                    Point2="0,71.5"
                    Point3="-4,71.5" />
                  <mssgle:LineSegment
                    End="-7.5,71.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-7.5,71.5"
                    Point2="-11.5,71.5"
                    Point3="-11.5,75.5" />
                  <mssgle:LineSegment
                    End="-11.5,135.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Loop thru Clients\Users\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Loop thru Clients\Enrollements">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="173,42"
          Id="Package\Loop thru Clients\Enrollements\OLE DB Destination"
          TopLeft="348,351" />
        <NodeLayout
          Size="156,42"
          Id="Package\Loop thru Clients\Enrollements\Derived Column"
          TopLeft="368,166" />
        <NodeLayout
          Size="167,42"
          Id="Package\Loop thru Clients\Enrollements\Script Component"
          TopLeft="345,52" />
        <EdgeLayout
          Id="Package\Loop thru Clients\Enrollements.Paths[Output 0]"
          TopLeft="428.5,94">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="17.5,72"
              Start="0,0"
              End="17.5,64.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,32" />
                  <mssgle:CubicBezierSegment
                    Point1="0,32"
                    Point2="0,36"
                    Point3="4,36" />
                  <mssgle:LineSegment
                    End="13.5,36" />
                  <mssgle:CubicBezierSegment
                    Point1="13.5,36"
                    Point2="17.5,36"
                    Point3="17.5,40" />
                  <mssgle:LineSegment
                    End="17.5,64.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Loop thru Clients\Enrollements.Paths[Derived Column Output]"
          TopLeft="446,208">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-11.5,143"
              Start="0,0"
              End="-11.5,135.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,67.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,67.5"
                    Point2="0,71.5"
                    Point3="-4,71.5" />
                  <mssgle:LineSegment
                    End="-7.5,71.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-7.5,71.5"
                    Point2="-11.5,71.5"
                    Point3="-11.5,75.5" />
                  <mssgle:LineSegment
                    End="-11.5,135.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Loop thru Clients\Enrollements\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>