<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="10/30/2014 10:52:01 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="WLAFRANCE-PC"
  DTS:CreatorName="HAYESSOFT\Warrenla"
  DTS:DTSID="{D7A77F44-45A0-4C73-A2C4-BEEDEF872366}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.132"
  DTS:LocaleID="1033"
  DTS:ObjectName="OneRoster"
  DTS:PackageType="5"
  DTS:VersionBuild="713"
  DTS:VersionGUID="{82AC1960-3B90-4B07-B5CC-D4CC69109B6D}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Flat File Connection Manager]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{693BA06D-28D0-4437-B903-AF9438D1B9FE}"
      DTS:ObjectName="Flat File Connection Manager">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\bkpDB\sampleSSISFile.txt">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="ClientID"
              DTS:DTSID="{C8206270-6578-4A54-96EA-81FCF270704D}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="SourcedId"
              DTS:DTSID="{234D327F-620E-4C06-9684-132AFB66D366}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="Status"
              DTS:DTSID="{0D117A63-B32C-470C-8878-4E94E5917643}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="DateLastModified"
              DTS:DTSID="{41BED812-2F03-4115-90BC-9E9F3B47C822}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="Title"
              DTS:DTSID="{8C95FD26-438E-409C-BC93-365AFBD46F70}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="Type"
              DTS:DTSID="{5C9822FB-DEB6-4126-B295-711AF1BF50AC}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="StartDate"
              DTS:DTSID="{D38A788C-B058-41B9-AA16-65C63E42ABC1}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="EndDate"
              DTS:DTSID="{C972E909-2607-4BCD-A04E-A7962602AAD9}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="ParentSourcedId"
              DTS:DTSID="{A79158AB-E5F2-460A-AEA4-42045DDAFBA6}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="SchoolYear"
              DTS:DTSID="{9B17FB85-00D5-4015-911B-967334D554B8}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[OneRoster]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{9238981A-2F3C-4FFA-86C4-45A523C0CAF5}"
      DTS:ObjectName="OneRoster">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[$Project::OneRosterDB]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[$Project::Server]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=.;Initial Catalog=ImportManagementSystem;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[OneRosterNET]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{25CAA67B-38B5-4F5D-8EC9-109E21C521F5}"
      DTS:ObjectName="OneRosterNET">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[$Project::OneRosterDB]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[$Project::Server]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=.;Initial Catalog=ImportManagementSystem;Integrated Security=True;Application Name=SSIS-PowerSchool-{25CAA67B-38B5-4F5D-8EC9-109E21C521F5}CSS-NBLAKELY\MSSQLSERVER2014.PowerSchoolAPIPlugIn;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4CC2F85C-2F64-440F-AB55-D6605179C6FF}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ClientKey">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{84791237-9068-48B0-84ED-C07D6C38ED92}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ClientName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C5681D49-D1EE-4CE4-ACDE-10DCE6BA5F73}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ClientOneRosterID">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{601DAA9A-D7B8-4F54-93D5-EE33204EFD96}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ClientSecret">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A44D1E2C-4C71-4AFF-8355-F54B2AA526CC}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ClientServer">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{AEBC77A0-3B0B-4BA6-9D00-34316FF48896}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ClientTipWebDatabase">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E91C2158-FCAE-4D20-94EE-A08537BB103B}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="CustomerList">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{27BECB58-365C-4729-BBEF-AF32B9F73B7C}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Error">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{20F1C2CF-576D-4FC6-9EA3-C9298167B0E4}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ErrorMessage">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{266782F4-B06A-4F00-A4C7-5026AA13F3B2}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PageSize">
      <DTS:VariableValue
        DTS:DataType="8">500</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Data Flow Task - Get Customers"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{89CC7015-45BC-4D9A-9883-2658BE7A3076}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Data Flow Task - Get Customers"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server v10; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          BLOBTempStoragePath=""
          bufferTempStoragePath=""
          version="1">
          <components>
            <component
              refId="Package\Data Flow Task - Get Customers\OLE DB Source"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="OLE DB Source"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT ClientUID, ClientUrl, ClientKey, ClientSecret, 
SessionsFile, ClassesFile, CoursesFile, EnrollmentsFile
  FROM [ImportManagementSystem].[OneRoster].[Client]
  Where FileBased = 0
  order by ProcessOrder</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task - Get Customers\OLE DB Source.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OneRoster]"
                  connectionManagerRefId="Package.ConnectionManagers[OneRoster]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientUID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClientUID]"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientUID]"
                      name="ClientUID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientSecret]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClientSecret]"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientSecret]"
                      name="ClientSecret"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientUrl]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClientUrl]"
                      length="50"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientUrl]"
                      name="ClientUrl"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientKey]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClientKey]"
                      length="50"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientKey]"
                      name="ClientKey"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[SessionsFile]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[SessionsFile]"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[SessionsFile]"
                      name="SessionsFile"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClassesFile]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClassesFile]"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClassesFile]"
                      name="ClassesFile"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[CoursesFile]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[CoursesFile]"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[CoursesFile]"
                      name="CoursesFile"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[EnrollmentsFile]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[EnrollmentsFile]"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[EnrollmentsFile]"
                      name="EnrollmentsFile"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClientUID]"
                      dataType="i4"
                      name="ClientUID" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClientSecret]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="ClientSecret" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClientUrl]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="ClientUrl" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClientKey]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="ClientKey" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[SessionsFile]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      name="SessionsFile" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClassesFile]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      name="ClassesFile" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[CoursesFile]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      name="CoursesFile" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[EnrollmentsFile]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      name="EnrollmentsFile" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClientUID]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClientUID]"
                      name="ClientUID" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClientUrl]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClientUrl]"
                      name="ClientUrl" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClientKey]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClientKey]"
                      name="ClientKey" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClientSecret]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClientSecret]"
                      name="ClientSecret" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[SessionsFile]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[SessionsFile]"
                      name="SessionsFile" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClassesFile]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClassesFile]"
                      name="ClassesFile" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[CoursesFile]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[CoursesFile]"
                      name="CoursesFile" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[EnrollmentsFile]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[EnrollmentsFile]"
                      name="EnrollmentsFile" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task - Get Customers\Recordset Destination"
              componentClassID="Microsoft.RecordsetDestination"
              contactInfo="Recordset Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates and populates an in-memory ADO recordset that is available outside of the data flow. Scripts and other package elements can use the recordset. For example, use a recordset to store the names of files that will be loaded into the data warehouse."
              name="Recordset Destination">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the recordset."
                  name="VariableName">User::CustomerList</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input]"
                  hasSideEffects="true"
                  name="Recordset Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[ClientUID]"
                      cachedDataType="i4"
                      cachedName="ClientUID"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientUID]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[ClientSecret]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="150"
                      cachedName="ClientSecret"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientSecret]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[ClientUrl]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="ClientUrl"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientUrl]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[ClientKey]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="ClientKey"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientKey]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[SessionsFile]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="150"
                      cachedName="SessionsFile"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[SessionsFile]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[ClassesFile]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="150"
                      cachedName="ClassesFile"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClassesFile]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[CoursesFile]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="150"
                      cachedName="CoursesFile"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[CoursesFile]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[EnrollmentsFile]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="150"
                      cachedName="EnrollmentsFile"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[EnrollmentsFile]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Data Flow Task - Get Customers.Paths[OLE DB Source Output]"
              endId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input]"
              name="OLE DB Source Output"
              startId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Loop thru Clients"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{EF076D26-2122-4091-9820-02B258557495}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Loop thru Clients">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachADOEnumerator"
        DTS:DTSID="{85CE8E18-46E0-4A0D-965B-8E6296303D09}"
        DTS:ObjectName="{85CE8E18-46E0-4A0D-965B-8E6296303D09}">
        <DTS:ObjectData>
          <FEEADO
            EnumType="EnumerateRowsInFirstTable"
            VarName="User::CustomerList" />
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Loop thru Clients\Academic Sessions"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Academic Sessions"
          DTS:DTSID="{FE3BBE6F-A6B3-4904-88F0-9BD6A78DC5FE}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Academic Sessions"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server v10; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              BLOBTempStoragePath=""
              bufferTempStoragePath=""
              version="1">
              <components>
                <component
                  refId="Package\Loop thru Clients\Academic Sessions\Script Component"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;11"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Script Component"
                  version="12">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="36">
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces

using System.Runtime;
using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.IO;
using System.Net;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Runtime.Serialization.Json;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading.Tasks;
using System.Collections.Specialized;
using System.Web;
using RestSharp;





#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    static string pLocation = "ims/oneroster/v1p1/academicSessions";
    static string tokenURI = "token";
    static string processType = "Sessions";

    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();

    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */
        ProcessAcedemicSessions().Wait();
    }


    public async Task<int> ProcessAcedemicSessions()
    {
        try
        {

            // The server base address
            string baseURL = Variables.ClientServer;

            //MessageBox.Show(uri);

            ServicePointManager.Expect100Continue = true;
            ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;


            /// The client information used to get the OAuth Access Token from the server.
            string clientId = Variables.ClientKey.ToString();
            string clientSecret = Variables.ClientSecret;
            string sendAuth = EncodeTo64(Variables.ClientKey + ":" + Variables.ClientSecret);
            WriteToDatabase(0, "SESSIONS-sendToken", sendAuth);
            // this will hold the Access Token returned from the server.
            //MessageBox.Show(sendToken, "sendToken");


            string accessToken = await GetAccessToken(baseURL, sendAuth, clientId, clientSecret);

           

            //-->>>>>>>>>>>>>> Add : if returns null, stop
            if (accessToken == null)
            {
                WriteToDatabase(1, "Access Token", "GetAccessToken returned null");
                return 0;
            }
            //MessageBox.Show(accessToken, "access token");
           

            string FileSize = await GetFileSize(baseURL, accessToken);
            if (FileSize == null)
            {
                WriteToDatabase(1, "File Size", "GetFileSize returned null");
                return 0;
            }

            var jsonResponse = await GetAcademicSessions(baseURL, accessToken, FileSize);

            return 0;
        }
        catch (Exception ex) { 
            WriteToDatabase(1, "ProcessTeachers", ex.Message);
            return 0;
        }

        }


    /// <summary>
    /// Gets the list of teachers.
    /// </summary>
    /// <param name="baseUrl">The url for the teacher list</param>
    /// <param name="accessToken">Acquired in the previous method</param>
    /// <returns>The page of articles.</returns>
    private async Task<dynamic> GetAcademicSessions(string baseUrl, string accessToken, string FileSize)
    {
        try
        {
            int TotalRecords;
            string pageSize = "500";
            int intPageSize = Convert.ToInt32(pageSize);
            if (Int32.TryParse(FileSize, out TotalRecords))
            {
                int pages = ((TotalRecords - 1) / intPageSize) + 1;
                //MessageBox.Show(pages.ToString(), "pages");

                for (int i = 1; i <= pages; i++)
                {
                    string pagenum = i.ToString();
                    //MessageBox.Show(pagenum, "page number");

                    string uri = baseUrl + pLocation + "?pagesize="+ pageSize + "&page=" + pagenum;
                    var client = new HttpClient();

                    client.BaseAddress = new Uri(uri);

                    client.DefaultRequestHeaders.Accept.Clear();
                    client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));
                    client.DefaultRequestHeaders.Add("Authorization", "Bearer " + accessToken);

                    //MessageBox.Show(uri, "teachers uri");

                    StringContent stringContent = new StringContent("", Encoding.UTF8, "application/json");
                    //StringContent stringContent = new StringContent("page=" + pagenum, Encoding.UTF8, "application/json");
                    //string content;

                    HttpResponseMessage response = await client.PostAsync(new Uri(uri), stringContent);

                    response.EnsureSuccessStatusCode();
                    string jsonString = await response.Content.ReadAsStringAsync();
                    //MessageBox.Show(jsonString, "jsonstring");

                    jsonString = cleanJsonString(jsonString);

                    //Deserialize our JSON
                    DataTable dt = JsonStringToDataTable(jsonString);
                    int numRows = 0;


                    foreach (DataRow row in dt.Rows)
                    {
                        Output0Buffer.AddRow();

                        //Output0Buffer.ClientID = Convert.ToInt32(row["ClientUID"].ToString().Replace("\\", ""));

                        //Output0Buffer.TeacherID = row["TeacherID"].ToString().Replace("\\", "");
                        //Output0Buffer.CampusID = row["CampusID"].ToString().Replace("\\", "");
                        //Output0Buffer.FirstName = row["FirstName"].ToString().Replace("\\", "");
                        //Output0Buffer.LastName = row["LastName"].ToString().Replace("\\", "");
                        //Output0Buffer.MiddleName = row["MiddleName"].ToString().Replace("\\", "");
                        //Output0Buffer.Grade = row["Grade"].ToString().Replace("\\", "");
                        //Output0Buffer.HomeRoom = row["HomeRoom"].ToString().Replace("\\", "");
                        //Output0Buffer.Department = row["Department"].ToString().Replace("\\", "");
                        //Output0Buffer.Phone = row["Phone"].ToString().Replace("\\", "");
                        //Output0Buffer.Email = row["Email"].ToString().Replace("\\", "");
                        //Output0Buffer.Address = row["Address"].ToString().Replace("\\", "");
                        //Output0Buffer.Address2 = row["Address2"].ToString().Replace("\\", "");
                        //Output0Buffer.City = row["City"].ToString().Replace("\\", "");
                        //Output0Buffer.State = row["State"].ToString().Replace("\\", "");
                        //Output0Buffer.Zip = row["zip"].ToString().Replace("\"", "");
                        //Output0Buffer.Deactivate = row["Deactivate"].ToString().Replace("\\", "");

                        numRows += 1;
                    }
                    WriteToDatabase(0, "Get Academic Sessions - Row Count Page Num: " + pagenum, numRows.ToString());
                }
                return null;
            }
            return null;

        }
        catch (Exception ex)
        {
            WriteToDatabase(1, "GetTeachers", ex.Message);
            throw;
        }

    }


    private async Task<string> GetFileSize(string baseURL, string accessToken)
    {
        try
        {
            using (var client = new HttpClient())
            {
                string uri = baseURL + pLocation + "/count";
                client.BaseAddress = new Uri(uri);
                //MessageBox.Show(uri, "teachers uri");

                client.DefaultRequestHeaders.Accept.Clear();
                client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));
                client.DefaultRequestHeaders.Add("Authorization", "Bearer " + accessToken);

                var stringContent = new StringContent("", Encoding.UTF8, "application/json");

                //Get file size
                HttpResponseMessage response = await client.PostAsync(new Uri(uri), stringContent);

                response.EnsureSuccessStatusCode();
                string jsonString = await response.Content.ReadAsStringAsync();

                //string jsonString = response.Content.ToString();//.ReadAsStringAsync();
                //MessageBox.Show(jsonString, "jsonstring");

                //Deserialize our JSON
                var FileSizeObject = JsonHelper.JsonDeserialize<FileSize>(jsonString);

                // return the Access Token.
                var FileSize = FileSizeObject.count;
                //MessageBox.Show(FileSize, "File Size");
                WriteToDatabase(0, "RecordCount", FileSize);
                return FileSize;
            }
        }
        catch (Exception ex)
        {
            //MessageBox.Show(ex.Message);
            //MessageBox.Show(ex.StackTrace);
            WriteToDatabase(1, "GetFileSize", ex.Message);
            //return null;
            throw;
        }

    }

    /// <summary>
    /// This method uses the OAuth Client Credentials Flow to get an Access Token to provide
    /// Authorization to the APIs.
    /// </summary>
    /// <returns></returns>
    private static async Task<string> GetAccessToken(string baseURL, string sendToken, string clientId, string clientSecret)
    {
        try
        {
            using (var client = new HttpClient())
            {

                string uri = baseURL + tokenURI;
                client.BaseAddress = new Uri(uri);

                //MessageBox.Show(uri, "access token uri");

                client.DefaultRequestHeaders.Accept.Clear();
                client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/x-www-form-urlencoded"));
                client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Basic", sendToken);


                List<KeyValuePair<string, string>> postData = new List<KeyValuePair<string, string>>();
                postData.Add(new KeyValuePair<string, string>("grant_type", "client_credentials"));
                postData.Add(new KeyValuePair<string, string>("scope", "scopename1%20scopename2%20scopenamex"));

                FormUrlEncodedContent content = new FormUrlEncodedContent(postData);
                //content.

                // Post to the Server and parse the response.
                HttpResponseMessage response = await client.PostAsync(new Uri(uri), content);
                //HttpResponseMessage response = await client.PostAsync(new Uri(uri));

                response.EnsureSuccessStatusCode();
                string jsonString = await response.Content.ReadAsStringAsync();

                //MessageBox.Show(jsonString, "jsonstring");

                //Deserialize our JSON
                 var accessTokenObject = JsonHelper.JsonDeserialize<AccessToken>(jsonString);

                // return the Access Token.
                var token = accessTokenObject.access_token;
                //MessageBox.Show(token, "access token");
                return token;
            }
        }
        catch (Exception ex)
        {
            //WriteToDatabase(1, "GetAccessToken", ex.Message);
            //MessageBox.Show(ex.Message);
            //MessageBox.Show(ex.StackTrace);
            //return null;
            throw ex;
        }
    }

    /// <summary>
    /// Provisional sample using HttpRequestMessage to pass the body
    /// </summary>
    /// <param name="baseURL"></param>
    /// <param name="strAuth"></param>
    /// <returns></returns>
    private static async Task<string> GetAccessToken2(string baseURL, string strAuth)
    {
        try
        {
            string resToken = null;

            HttpClientHandler handler = new HttpClientHandler() { UseDefaultCredentials = false };
            using (var client = new HttpClient(handler))
            {

                string uri = baseURL + tokenURI;
                client.BaseAddress = new Uri(uri);
                string body = "grant_type=client_credentials&scope=scopename1%20scopename2%20scopenamex";
               

                client.DefaultRequestHeaders.Accept.Clear();
                client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/x-www-form-urlencoded"));
                //client.DefaultRequestHeaders.Add("apikey", apikey);
                client.DefaultRequestHeaders.Add("Authorization", "Basic " + strAuth);

                //client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Basic", strAuth);
                HttpRequestMessage req = new HttpRequestMessage(HttpMethod.Post, client.BaseAddress);
                req.Content = new StringContent(body, Encoding.UTF8, "application/x-www-form-urlencoded");

                List<KeyValuePair<string, string>> postData = new List<KeyValuePair<string, string>>();
                //postData.Add(new KeyValuePair<string, string>("grant_type", "client_credentials"));
                //postData.Add(new KeyValuePair<string, string>("scope", "scopename1%20scopename2%20scopenamex"));

                req.Content = new FormUrlEncodedContent(postData);
                HttpResponseMessage tokenResponse = client.PostAsync(uri, new FormUrlEncodedContent(postData)).Result;

                resToken = await tokenResponse.Content.ReadAsStringAsync();


                return resToken;
            }
        }
        catch (Exception ex)
        {
            //WriteToDatabase(1, "GetAccessToken", ex.Message);
            //MessageBox.Show(ex.Message);
            //MessageBox.Show(ex.StackTrace);
            //return null;
            throw ex;
        }
    }


    /// <summary>
    /// Provisional sample to get the access token using RestSharp; it fails to load the assembly
    /// </summary>
    /// <param name="baseURL"></param>
    /// <param name="sendToken"></param>
    /// <returns></returns>
    private string GetAccessToken3(string baseURL, string sendToken)
    {
        string uri = baseURL + tokenURI;
        var client = new RestClient(uri);
        client.Timeout = -1;
        var request = new RestRequest(Method.POST);
        request.AddHeader("Authorization", "Basic " + sendToken);
        request.AddHeader("Content-Type", "application/x-www-form-urlencoded");
        request.AddParameter("application/x-www-form-urlencoded", "grant_type=client_credentials&scope=scopename1%20scopename2%20scopenamex", ParameterType.RequestBody);
        IRestResponse response = client.Execute(request);
        Console.WriteLine(response.Content);


        return "";
    }

    public string EncodeTo64(string toEncode)
    {
        byte[] toEncodeAsBytes = System.Text.ASCIIEncoding.ASCII.GetBytes(toEncode);
        string returnValue = System.Convert.ToBase64String(toEncodeAsBytes);
        return returnValue;

    }
    public class JsonHelper
    {
        /// <summary>
        /// JSON Serialization
        /// </summary>
        public static string JsonSerializer<T>(T t)
        {
            DataContractJsonSerializer ser = new DataContractJsonSerializer(typeof(T));
            MemoryStream ms = new MemoryStream();
            ser.WriteObject(ms, t);
            string jsonString = Encoding.UTF8.GetString(ms.ToArray());
            ms.Close();
            return jsonString;
        }
        /// <summary>
        /// JSON Deserialization
        /// </summary>
        public static T JsonDeserialize<T>(string jsonString)
        {
            DataContractJsonSerializer ser = new DataContractJsonSerializer(typeof(T));
            MemoryStream ms = new MemoryStream(Encoding.UTF8.GetBytes(jsonString));
            T obj = (T)ser.ReadObject(ms);
            return obj;
        }
    }

    public class AcademicSessions
    {
        public string ClientID { get; set; }
        public string SourcedId { get; set; }
        public string Status { get; set; }
        public string DateLastModified { get; set; }
        public string Title { get; set; }
        public string Type { get; set; }
        public string StartDate { get; set; }
        public string EndDate { get; set; }
        public string ParentSourcedId { get; set; }
        public string SchoolYear { get; set; }

    }


    public class AccessToken
    {
        public string access_token { get; set; }
        public string token_type { get; set; }
        public string expires_in { get; set; }
    }

    public class FileSize
    {
        public string count { get; set; }

    }



    public DataTable JsonStringToDataTable(string jsonString)
    {
        try
        {
            DataTable dt = new DataTable();
            string[] jsonStringArray = Regex.Split(jsonString.Replace("[", "").Replace("]", ""), "},{");
            List<string> ColumnsName = new List<string>();
            foreach (string jSA in jsonStringArray)
            {
                string[] jsonStringData = Regex.Split(jSA.Replace("{", "").Replace("}", ""), ",");
                foreach (string ColumnsNameData in jsonStringData)
                {
                    try
                    {
                        int idx = ColumnsNameData.IndexOf(":");
                        string ColumnsNameString = ColumnsNameData.Substring(0, idx - 1).Replace("\"", "");
                        if (!ColumnsName.Contains(ColumnsNameString))
                        {
                            ColumnsName.Add(ColumnsNameString);
                        }
                    }
                    catch //(Exception ex)
                    {
                        WriteToDatabase(1, "JsonStringToDataTable: Columns",(string.Format("Error Parsing Column Name : {0}", ColumnsNameData)));
                    }
                }
                break;
            }
            foreach (string AddColumnName in ColumnsName)
            {
                dt.Columns.Add(AddColumnName);
            }
            foreach (string jSA in jsonStringArray)
            {
                string[] RowData = Regex.Split(jSA.Replace("{", "").Replace("}", ""), ",");
                DataRow nr = dt.NewRow();
                foreach (string rowData in RowData)
                {
                    try
                    {
                        int idx = rowData.IndexOf(":");
                        string RowColumns = rowData.Substring(0, idx - 1).Replace("\"", "").Replace("\\", "");
                        string RowDataString = rowData.Substring(idx + 1).Replace("\"", "").Replace("\\", "");
                        nr[RowColumns] = RowDataString;
                    }
                    catch //(Exception ex)
                    {
                        WriteToDatabase(1, "JsonStringToDataTable: For each row", (string.Format("Error Parsing Row  Name : {0}", rowData)));
                        continue;
                    }
                }
                dt.Rows.Add(nr);
            }
            return dt;
        }
        catch (Exception ex)
        {
            WriteToDatabase(1, "JsonStringToDataTable", ex.Message);
            return null;
        }
    }

    public string cleanJsonString(string jsonString)
    {

        jsonString = jsonString.Replace("{\"name\":\"schoolstaff\",\"record\":[", "");
        jsonString = jsonString.Replace("\"_name\":\"schoolstaff\",", "");
        jsonString = jsonString.Replace("],\"@extensions\":\"s_ssf_ncea_x\"}", "");
        jsonString = jsonString.Replace(",\"@extensions\":\"u_schoolstaffuserfields,s_ssf_ncea_x\"", "");

        return jsonString;
    }


    public void WriteToDatabase(int Error, string Area, string LogInfo)
    {
        try
        {
            //MessageBox.Show("WriteToDatabase");
            var ConnString = Connections.PSDB.ConnectionString;

            using (SqlConnection conn = new SqlConnection(Connections.PSDB.ConnectionString))
            {
                if (conn.State != ConnectionState.Open) conn.Open();
                //string insertText = "Insert into OneRoster.LogFile (ClientUID, FileType, Area, LogInfo) Values (@ClientUID, @FileType, @Area, @LogInfo ) ";
                SqlCommand cmd = new SqlCommand("spLogInfo", conn);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("@ClientUID", SqlDbType.Int).Value = Variables.ClientOneRosterID;
                cmd.Parameters.Add("@Error", SqlDbType.Int).Value = Error;
                cmd.Parameters.Add("@FileType", SqlDbType.VarChar,50).Value = processType;
                cmd.Parameters.Add("@Area", SqlDbType.VarChar, 100).Value = Area;
                cmd.Parameters.Add("@LogInfo", SqlDbType.VarChar, 1000).Value = LogInfo;
                cmd.ExecuteNonQuery();
            }
        }
        catch //(Exception ex)
        {
            throw;
        }
    }
}




]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[packages.config]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>

</packages>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 PSDB
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"PSDB").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String ClientKey
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientKey"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Int32 ClientOneRosterID
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["ClientOneRosterID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientSecret
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientSecret"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientServer
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientServer"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_9cc764db5dc84a06abd71b37420e3e86.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{FF2D54D4-CBFE-43F2-A697-E0F017938BC8}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_9cc764db5dc84a06abd71b37420e3e86</RootNamespace>
    <AssemblyName>SC_9cc764db5dc84a06abd71b37420e3e86</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="RestSharp">
      <Private>True</Private>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.ComponentModel.Composition" />
    <Reference Include="System.Data" />
    <Reference Include="System.Memory, Version=4.0.1.1, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51, processorArchitecture=MSIL">
      <HintPath>C:\Users\mmartinez\AppData\Local\Temp\Vsta\SSIS_SC150\VstajPb4tXYoDEi5c0j1D5timQ\packages\System.Memory.4.5.3\lib\netstandard2.0\System.Memory.dll</HintPath>
    </Reference>
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Numerics" />
    <Reference Include="System.Runtime.Serialization" />
    <Reference Include="System.Security" />
    <Reference Include="System.Web" />
    <Reference Include="System.Web.Extensions" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="app.config" />
    <None Include="packages.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_9cc764db5dc84a06abd71b37420e3e86.Properties.Settings.get_Default():SC_9cc764db5dc84a06abd71b37420e3e86.Properties.Sett" +
    "ings")]

namespace SC_9cc764db5dc84a06abd71b37420e3e86.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 ClientID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool ClientID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 SourcedId
    {
        set
        {
            this[1] = value;
        }
    }
    public bool SourcedId_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Status
    {
        set
        {
            this[2] = value;
        }
    }
    public bool Status_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 DateLastModified
    {
        set
        {
            this[3] = value;
        }
    }
    public bool DateLastModified_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Title
    {
        set
        {
            this[4] = value;
        }
    }
    public bool Title_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Type
    {
        set
        {
            this[5] = value;
        }
    }
    public bool Type_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 StartDate
    {
        set
        {
            this[6] = value;
        }
    }
    public bool StartDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 EndDate
    {
        set
        {
            this[7] = value;
        }
    }
    public bool EndDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 ParentSourcedId
    {
        set
        {
            this[8] = value;
        }
    }
    public bool ParentSourcedId_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 SchoolYear
    {
        set
        {
            this[9] = value;
        }
    }
    public bool SchoolYear_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_9cc764db5dc84a06abd71b37420e3e86</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_9cc764db5dc84a06abd71b37420e3e86</msb:DisplayName>
    <msb:ProjectId>{6B46D636-6C3C-439F-888B-149539D974A5}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_9cc764db5dc84a06abd71b37420e3e86.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="packages.config" />
    <msb:File Include="app.config" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:Breakpoint Include="91e3f34b067941ea99d0747779be8d96">
      <msb:FileName>main.cs</msb:FileName>
      <msb:LineNumber>415</msb:LineNumber>
      <msb:ColumnNumber>17</msb:ColumnNumber>
      <msb:Enabled>True</msb:Enabled>
      <msb:ConditionType>1</msb:ConditionType>
      <msb:Condition>
      </msb:Condition>
      <msb:Language>C#</msb:Language>
      <msb:HitCountType>1</msb:HitCountType>
      <msb:HitCountTarget>1</msb:HitCountTarget>
    </msb:Breakpoint>
    <msb:Breakpoint Include="6f6b4fe2dd254f39bb4f3297c07adbdf">
      <msb:FileName>main.cs</msb:FileName>
      <msb:LineNumber>399</msb:LineNumber>
      <msb:ColumnNumber>13</msb:ColumnNumber>
      <msb:Enabled>True</msb:Enabled>
      <msb:ConditionType>1</msb:ConditionType>
      <msb:Condition>
      </msb:Condition>
      <msb:Language>C#</msb:Language>
      <msb:HitCountType>1</msb:HitCountType>
      <msb:HitCountTarget>1</msb:HitCountTarget>
    </msb:Breakpoint>
    <msb:Breakpoint Include="05d66093a3e5434e9c075c26fe66df50">
      <msb:FileName>main.cs</msb:FileName>
      <msb:LineNumber>419</msb:LineNumber>
      <msb:ColumnNumber>17</msb:ColumnNumber>
      <msb:Enabled>True</msb:Enabled>
      <msb:ConditionType>1</msb:ConditionType>
      <msb:Condition>
      </msb:Condition>
      <msb:Language>C#</msb:Language>
      <msb:HitCountType>1</msb:HitCountType>
      <msb:HitCountTarget>1</msb:HitCountTarget>
    </msb:Breakpoint>
    <msb:Breakpoint Include="547f9079bbcc4d53af799f4dc62b23ab">
      <msb:FileName>main.cs</msb:FileName>
      <msb:ColumnNumber>5</msb:ColumnNumber>
      <msb:Enabled>True</msb:Enabled>
      <msb:LineNumber>334</msb:LineNumber>
      <msb:Condition>
      </msb:Condition>
      <msb:ConditionType>1</msb:ConditionType>
      <msb:Language>C#</msb:Language>
      <msb:HitCountType>1</msb:HitCountType>
      <msb:HitCountTarget>1</msb:HitCountTarget>
    </msb:Breakpoint>
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_9cc764db5dc84a06abd71b37420e3e86")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_9cc764db5dc84a06abd71b37420e3e86")]
[assembly: AssemblyCopyright("Copyright @  2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_9cc764db5dc84a06abd71b37420e3e86.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_9cc764db5dc84a06abd71b37420e3e86.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_9cc764db5dc84a06abd71b37420e3e86.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_9cc764db5dc84a06abd71b37420e3e86.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_9cc764db5dc84a06abd71b37420e3e86.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[app.config]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="RestSharp" publicKeyToken="598062e77f915f75" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-106.11.7.0" newVersion="106.11.7.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
</configuration>]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_9cc764db5dc84a06abd71b37420e3e86.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[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
Gg8GAMUQoxIGAAYGwAwaADQUGg8aAJwUGg8aAOAPGg8GAF4B/QIKAIIPpwYeAHMPpwYKALEOpwYK
AGgUpwYiAGYA/Q8GAIgI9hAGAJMPKREGAJ0Ocg0mACwIbQsmALkIbQsmAJoHXQ0GAGgLEhIGAEcL
wAwSAD8UEA8SAH0FEA8SABYVEA8SABMHEA8SAMIHEA8GADYGwAwGANkKbhUGAA4VwAwmANQVhBIW
AMgN0gIWAEgN0gIWABQO0gIWACYOaA4WAEEI0gIWAG4FHhQWAGQFaA4WAOgG0gIWAP0NHhQWAGcQ
HhQWANoG0gIGACcBwAwWAE4QaA4GAEEOwAwqAAEAJRAqACoAJRAqAE0AJRAiAH8A/Q8iABoA/Q+z
AI4VAAAiAJAA/Q8GABIGwAwGAPQVtg0uAJAQew4uAKsQhw0GAKcMwQImALkPsBMmAP4GsBMmAGAL
wAwaAOYSwhIaANsAwhIaAHkKwhIaANoSwhIaAMAUGg8WAH8H0gIaAF8KwhIGAMYA/QIaAM0PGg8a
AHkFGg8aAN0FGg8AAAAAWAIAAAAAAQABAAEAEAA9DQAAEAABAAEAAQAQAGUPAAClAAQAEAABABAA
ShQAALEABAAoAAEAEAC2EgAASQAHAC0AAQAQAMcRAABJAAgALwAAABAAMBGMEUkACQA0AAABEAD/
EYwRzQALADgAAgAQAPIPAABJAAwAOwACABAAWxIAAEkADAA+AAIAEADgDAAASQAWAFMAAgAQALgK
AABJABkAWgADARAA8AEAAHEAGgBdAAMBEAAOAgAAcQAhAF8AAwEQADECAABxAC0AYQADARAAQwIA
AHEANQBjAAMBEACoAAAAcQA8AGUAEQBTDYkEEQCwAokEEQAhB4kEBgC2EowEBgDHEZAEBgBlD5QE
AQBYFJgEAQBYFJgEEQDHDJ0EEQBvB6IEEQCMBacEAQDqA4kEAQAEBIkEAQA1BYkEAQBABIkEAQBi
BIkEAQB5BIkEAQDEBIkEAQCrBIkEAQAfBIkEAQAZBYkEAQDfBIkEAQCPBIkEAQD9BIkEAQBNBYkE
BgBRCKsEBgBYD64EBgAIErUEAQAtAYkEAQB9AYkEAQC/ALkEAQBXAcAEBgBRCKsEBgBYD8cEBgC4
CokEBgCZDIkEBgDsDIkEBgAIErUEAQA7AYkEAQCPAasEAQC2AasEAQC+AYkEAQC/AM4EAQBXAbkE
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
AAADABMTAAAEAL8OAAABAG4UAAABAG4UAAABAJkKAAABALwVAAABADALAAABAJkKAAABAJkKAAAB
AJkKAAABAJkKAAABAJkKAAABAJkKAAABAJkKAAABAJkKAAABAJkKAAABAJkKAAABAJkKAAABAJkK
AAABAJkKAAABAJkKAAABAJoGAAABAJoGAAABAJoGAAABAJoGAAABAJoGDQB1AA4AdQAPAHUAEAB1
ABEAdQAJAN8QAQARAN8QBgAZAN8QCgApAN8QEAAxAN8QEAA5AN8QEABBAN8QEABJAN8QEABRAN8Q
EABZAN8QEABhAN8QEABpAN8QBgB5AN8QFQCJAN8QGwDZAN8QBgDpAGUVBgDpAIoGIQABAd8QBgBx
Ad8QBgCRAd8QJwBhAT4KBgBhAUkKBgChAegTBgAMABsIOQAMAAgVQgAMAGQLTwAUABsIOQAUAAgV
QgAUAGQLTwAcABsIOQAcAAgVQgAcAGQLTwCpAYsTkQCxAd8QEACxAU0VAQCZAN8QlwCZAE4PngCZ
AFoQpgCxAU0KsQDRAYQUugDZAW0GvgDhAaYCwwDhAdERyQDpAfwKzwChAN8QBgCpAYQF+gDxAe0T
AAEkAN8QBgCpAdEKDQGpAU4LEgEkAEMSGAEkAIEDHgGpAZITJAEkANEQKgEsAHgUOQGhAEwSPgH5
AYEDRAEsAGUVSwEhAdYHBgChAM0VTwGpAU4LVAG5ALcMWQGhAG4TXwEJAoEDZQHBAL0FugBpAQsL
ugDJAN8QEAARAiIIcAERAhoNBgAhAt8QdgEpAuQGfQEhAhsThAE5AoEDigFZAlUKlAE5AoEDmQEp
Av0VpAFJAd8QqAFJAbcMtAFJAXwMAQBhAt8QEABJAcYVBgBJAdkTBgBJAdwTSwFhAd8QBgBhAZoC
vgFhAe4RxgGRAN8QBgBhAd4CzAFpAt0N0gFxAlIG2AF5AqMP3wFhAbsR5QGBAq4M6wFhAakV8gGJ
AnoV+AFxACQG/wFxAPAVBwJ5Ad8QDQKZAd8QBgCxAt8QFQDRAN8QBgC5AqQTHQLhASgCwwDRANoV
JQLhAUQLKgLBAtAHBgDRAN8QMAK5ApkTNgLJAp8KVwLJAoQMXAKRADsLugCpAYsTYwI8AHQQcAJE
ANoDSwEMAMMDfwJEAAoUOQFMAHQQcAJUANoDSwFUAAoUOQEMAFsOqgIMABQUHgEMAIoGIQDpASUB
1gJRAt4H2wJRAjsLugCpAYsT4gIpAd8QBgDZAt8QEAApAToT6AIpAfkS7wLhAuAU9QJcAEgPBgDx
At8QEABcAIEDHgH5AoEDCQMJAd8QDwMpASoDGANkAHQQcAJsANoDSwEUAMMDfwJsAAoUOQERAZwF
RAMRAYQUSgMBAxgDUAMJA9EQYgMZAXgUaAMZAWUVSwEUAFsOqgIUABQUHgEUAIoGIQAcAMMDfwIc
AFsOqgIcABQUHgEcAIoGIQARA98QCQPhAqQNugN0AN8QBgB8AN8Q1QN0AIEDHgExAd8Q3QM5Ad8Q
BgA5ASkSJAQpAd8QKQQpA0QVMAQpASoTNgQxA98QPAQxA5AURgQpASoDTQRkAP8TOQEkAHMAFgcu
AAsAigUuABMAkwUuABsAsgUuACMAuwUuACsA5AUuADMA5AUuADsA5AUuAEMAuwUuAEsA6gUuAFMA
5AUuAFsAAQZDAGMAEQeAAGsASwagAGsAeQbAAGsAowbgAGsAxQbjAJsAEQcAAWsA6gZhAXsAEQeB
AXsAEQehAXsAEQejAXsAEQfBAXsAEQfDAXsAEQfhAXsAEQfjAXsAEQcBAnsAEQcDAnsAEQchAnsA
EQcjAnsAEQdBAnsAEQdhAnsAEQeBAnsAEQehAnsAEQfBAnsAEQfhAnsAEQcBA3sAEQchA3sAEQdJ
A6MAsgVpA6MAsgXAB3sAEQfgB3sAEQcACHsAEQcgCHsAEQdACHsAEQdgCHsAEQeACHsAEQegCHsA
EQfACHsAEQfgCHsAEQcACXsAEQcgCXsAEQdACXsAEQdgCXsAEQeACXsAEQegCXsAEQfACXsAEQfg
CXsAEQcACnsAEQcgCnsAEQdgCnsAEQeACnsAEQegCnsAEQfACnsAEQfgCnsAEQcAC3sAEQdAC3sA
EQdgC3sAEQfAC5MAEQcADJMAEQdADJMAEQeADJMAEQfADJMAEQcuAFgAaAB4AIIAjADVAGsBugEV
Aj0CsAJsA6MDCAQDAAEABQAVAAYAFgAHABoACAAcAAoAHQALACcADAAqAAAAkQJnBQAArwtrBQAA
bgNnBQAA3gtrBQAAZxNnBQAAbgxrBQAAsgNnBQAA8wtrBQAATAZnBQAADwxrBQAAKAdnBQAAIAxr
BQAAEQhnBQAAQwxrBQAA9wdnBQAAMAxrBQAAaANnBQAA2AtrBQAAPQ9nBQAAWAxrBQAAZQJvBQAA
5hV1BQAAbgJnBQAAvxN1BQAAgxB1BQAAkw95BQAAdwd/BQAA9xOFBQAAkQJ1BQAAbgN1BQAAZxN1
BQAAsgN1BQAATAZ1BQAAKAd1BQAAEQh1BQAA9wd1BQAAaAN1BQAAPQ91BQAADQ11BQAAQAd1BQAA
Mg11BQAA2hR1BQEAEQADAAEAEgAFAAEAEwAHAAEAFAAJAAEAFQALAAEAFgANAAEAFwAPAAEAGAAR
AAEAGQATAAEAGgAVAAEAGwAXAAEAHAAZAAEAHQAbAAEAHgAdAAEAHwAfAAEAIAAhAAEAIQAjAAEA
IgAlAAEAIwAnAAEAJAApAAIALgArAAIAMAAtAAIAMQAvAAIAMgAxAAIAMwAzAAIANQA1AAIANgA3
AAEANwA3AAIAOAA5AAIAPgA7AAEAPwA7AAIAQAA9AAEAQQA9AAIAQgA/AAEAQwA/AAIARABBAAEA
RQBBAAIARgBDAAEARwBDAAIASABFAAEASQBFAAIASgBHAAEASwBHAAIATABJAAEATQBJAAIATgBL
AAEATwBLAAIAUABNAAEAUQBNAAIAUwBPAAEAVABPAAIAVQBRAAEAVgBRAAIAVwBTAAEAWABTAAIA
WgBVAAEAWwBVAA0AugAhAA0AvAAjAA4AvgAhAA4AwAAjAA8AwgAhAA8AxAAjABAAxgAhABAAyAAj
ABEAygAhABEAzAAjADMAXQBtAAcBMwEaAmoCeQKUApoCAAMoAzADwQPNAwSAAAABAAAAAAAAAAAA
AAAAAMwBAAAEAAAAAAAAAAAAAABlBPQCAAAAAA8AAAAAAAAAAAAAAG4E6xQAAAAABAAAAAAAAAAA
AAAAZQRLBwAAAABqAAsABwAAAAAAAAB3BBAPAAAAAAQAAAAAAAAAAAAAAGUE0gIAAAAABAAAAAAA
AAAAAAAAgAQaDwAAAAAPAAAAAAAAAAAAAABuBCMVAAAAAA8AAAAAAAAAAAAAAG4EyQ4AAAAABAAA
AAAAAAAAAAAAZQTADAAAAAAPAAAAAAAAAAAAAABuBOwOAAAAAAQAAAAAAAAAAAAAAGUEhw0AAAAA
AAAAAAEAAAA6EQAACQACAAoAAgALAAIADAACAA0AAgAOAAIADwACABAAAgARAAIAAAAAAHcAywIA
AAAAeQDLAjMASgA5AGMAPwBzAD8AfQA/AIcA5wCKAucAoAIZATgDGQFYAy8BiAMvAZQDeACeAy8B
7QMvAfkDeAADBC8BWwQAAABJRFRTQ29tcG9uZW50TWV0YURhdGExMDAASURUU1ZhcmlhYmxlMTAw
AElEVFNSdW50aW1lQ29ubmVjdGlvbkNvbGxlY3Rpb24xMDAASURUU1J1bnRpbWVDb25uZWN0aW9u
MTAwAElEVFNDb25uZWN0aW9uTWFuYWdlcjEwMABJRFRTVmFyaWFibGVzMTAwAElEVFNFdmFsdWF0
b3JDb250ZXh0MTAwADxHZXRBY2Nlc3NUb2tlbjI+ZF9fMTAAPD51X18xAElFbnVtZXJhYmxlYDEA
VGFza2AxAEh0dHBIZWFkZXJWYWx1ZUNvbGxlY3Rpb25gMQBBc3luY1Rhc2tNZXRob2RCdWlsZGVy
YDEAVGFza0F3YWl0ZXJgMQBMaXN0YDEAVG9JbnQzMgA8YmFzZVVSTD41X18yADxwYWdlU2l6ZT41
X18yADxjbGllbnQ+NV9fMgA8PnVfXzIAS2V5VmFsdWVQYWlyYDIAR2V0QWNjZXNzVG9rZW4yADxh
Y2Nlc3NUb2tlbj41X18zADxwYWdlcz41X18zAEdldEFjY2Vzc1Rva2VuMwBFbmNvZGVUbzY0ADxp
PjVfXzQAPHBhZ2VudW0+NV9fNQBTQ185Y2M3NjRkYjVkYzg0YTA2YWJkNzFiMzc0MjBlM2U4NgA8
UHJvY2Vzc0FjZWRlbWljU2Vzc2lvbnM+ZF9fNgA8R2V0QWNhZGVtaWNTZXNzaW9ucz5kX183AGdl
dF9VVEY4ADxHZXRGaWxlU2l6ZT5kX184ADxHZXRBY2Nlc3NUb2tlbj5kX185ADxNb2R1bGU+AGdl
dF9QU0RCAGdldF9DbGllbnRPbmVSb3N0ZXJJRABnZXRfQ2xpZW50SUQAc2V0X0NsaWVudElEAEdl
dE91dHB1dElEAGdldF9BU0NJSQB0b2tlblVSSQBiYXNlVVJMAFN5c3RlbS5JTwBUAEFyZWEAU3lz
dGVtLkRhdGEAZ2V0X0NvbXBvbmVudE1ldGFEYXRhAG1zY29ybGliAFN5c3RlbS5Db2xsZWN0aW9u
cy5HZW5lcmljAFJlYWRBc1N0cmluZ0FzeW5jAFBvc3RBc3luYwBnZXRfU291cmNlZElkAHNldF9T
b3VyY2VkSWQAZ2V0X1BhcmVudFNvdXJjZWRJZABzZXRfUGFyZW50U291cmNlZElkAGNsaWVudElk
AEFkZABNYXJrT3V0cHV0c0ZpbmlzaGVkAGdldF9EYXRlTGFzdE1vZGlmaWVkAHNldF9EYXRlTGFz
dE1vZGlmaWVkAEF3YWl0VW5zYWZlT25Db21wbGV0ZWQAZ2V0X0lzQ29tcGxldGVkADxDbGllbnRJ
RD5rX19CYWNraW5nRmllbGQAPFNvdXJjZWRJZD5rX19CYWNraW5nRmllbGQAPFBhcmVudFNvdXJj
ZWRJZD5rX19CYWNraW5nRmllbGQAPERhdGVMYXN0TW9kaWZpZWQ+a19fQmFja2luZ0ZpZWxkADxU
aXRsZT5rX19CYWNraW5nRmllbGQAPFR5cGU+a19fQmFja2luZ0ZpZWxkADx0b2tlbl90eXBlPmtf
X0JhY2tpbmdGaWVsZAA8RW5kRGF0ZT5rX19CYWNraW5nRmllbGQAPFN0YXJ0RGF0ZT5rX19CYWNr
aW5nRmllbGQAPGFjY2Vzc190b2tlbj5rX19CYWNraW5nRmllbGQAPGV4cGlyZXNfaW4+a19fQmFj
a2luZ0ZpZWxkADxTY2hvb2xZZWFyPmtfX0JhY2tpbmdGaWVsZAA8U3RhdHVzPmtfX0JhY2tpbmdG
aWVsZAA8Y291bnQ+a19fQmFja2luZ0ZpZWxkAERiQ29tbWFuZABTcWxDb21tYW5kAEh0dHBNZXRo
b2QAUmVwbGFjZQBkZWZhdWx0SW5zdGFuY2UARW5zdXJlU3VjY2Vzc1N0YXR1c0NvZGUAdG9FbmNv
ZGUAZ2V0X01lc3NhZ2UASHR0cFJlc3BvbnNlTWVzc2FnZQBIdHRwUmVxdWVzdE1lc3NhZ2UASnNv
blN0cmluZ1RvRGF0YVRhYmxlAElEaXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVG
cm9tSGFuZGxlAENvbnNvbGUAZ2V0X1RpdGxlAHNldF9UaXRsZQBHZXRSdW50aW1lQ29ubmVjdGlv
bkJ5TmFtZQBXcml0ZUxpbmUASUFzeW5jU3RhdGVNYWNoaW5lAFNldFN0YXRlTWFjaGluZQBzdGF0
ZU1hY2hpbmUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAZ2V0X1R5cGUAc2V0X1R5
cGUAU3FsRGJUeXBlAHNldF9Db21tYW5kVHlwZQBWYWx1ZVR5cGUAU2VjdXJpdHlQcm90b2NvbFR5
cGUAUGFyYW1ldGVyVHlwZQBwcm9jZXNzVHlwZQBnZXRfdG9rZW5fdHlwZQBzZXRfdG9rZW5fdHlw
ZQBTeXN0ZW0uQ29yZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUASW50
ZXJuYWxEYXRhQ29sbGVjdGlvbkJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UAV3JpdGVUb0Rh
dGFiYXNlAElSZXN0UmVzcG9uc2UAQ2xvc2UARGlzcG9zZQBUcnlQYXJzZQBnZXRfRW5kRGF0ZQBz
ZXRfRW5kRGF0ZQBnZXRfU3RhcnREYXRlAHNldF9TdGFydERhdGUAQ3JlYXRlAGdldF9TdGF0ZQBF
ZGl0b3JCcm93c2FibGVTdGF0ZQBDb25uZWN0aW9uU3RhdGUAPD4xX19zdGF0ZQBEeW5hbWljQXR0
cmlidXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRy
aWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1i
bHlUaXRsZUF0dHJpYnV0ZQBBc3luY1N0YXRlTWFjaGluZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRl
bWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUARGVidWdnZXJIaWRkZW5BdHRy
aWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25B
dHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RB
dHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVu
dHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRp
YmlsaXR5QXR0cmlidXRlAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAc2V0X1ZhbHVlAEF1dGhlbnRp
Y2F0aW9uSGVhZGVyVmFsdWUATWVkaWFUeXBlV2l0aFF1YWxpdHlIZWFkZXJWYWx1ZQB2YWx1ZQBz
ZXRfRXhwZWN0MTAwQ29udGludWUAR2V0RmlsZVNpemUASnNvbkRlc2VyaWFsaXplAEluZGV4T2YA
RW5jb2RpbmcAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb0Jhc2U2NFN0cmluZwBnZXRfQ29u
bmVjdGlvblN0cmluZwBjbGVhbkpzb25TdHJpbmcAanNvblN0cmluZwBUb1N0cmluZwBHZXRTdHJp
bmcAU3Vic3RyaW5nAHN0ckF1dGgAVXJpAGdldF9UYXNrAFN5c3RlbS5Db21wb25lbnRNb2RlbABT
Q185Y2M3NjRkYjVkYzg0YTA2YWJkNzFiMzc0MjBlM2U4Ni5kbGwAc2V0X0NsaWVudElEX0lzTnVs
bABzZXRfU291cmNlZElkX0lzTnVsbABzZXRfUGFyZW50U291cmNlZElkX0lzTnVsbABzZXRfRGF0
ZUxhc3RNb2RpZmllZF9Jc051bGwAc2V0X1RpdGxlX0lzTnVsbABzZXRfVHlwZV9Jc051bGwAc2V0
X0VuZERhdGVfSXNOdWxsAHNldF9TdGFydERhdGVfSXNOdWxsAHNldF9TY2hvb2xZZWFyX0lzTnVs
bABzZXRfU3RhdHVzX0lzTnVsbABTZXROdWxsAHNldF9TZWN1cml0eVByb3RvY29sAGJhc2VVcmwA
TWVtb3J5U3RyZWFtAGdldF9JdGVtAHNldF9JdGVtAFN5c3RlbQByZXNvdXJjZU1hbgBzZW5kVG9r
ZW4AR2V0QWNjZXNzVG9rZW4AYWNjZXNzVG9rZW4AZ2V0X2FjY2Vzc190b2tlbgBzZXRfYWNjZXNz
X3Rva2VuAE9wZW4AZ2V0X2V4cGlyZXNfaW4Ac2V0X2V4cGlyZXNfaW4AU2NyaXB0TWFpbgBEYXRh
Q29sdW1uAHBMb2NhdGlvbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlv
bgBTeXN0ZW0uUnVudGltZS5TZXJpYWxpemF0aW9uAHNldF9BdXRob3JpemF0aW9uAFN5c3RlbS5S
ZWZsZWN0aW9uAERhdGFDb2x1bW5Db2xsZWN0aW9uAGdldF9SdW50aW1lQ29ubmVjdGlvbkNvbGxl
Y3Rpb24AU3FsUGFyYW1ldGVyQ29sbGVjdGlvbgBEYXRhUm93Q29sbGVjdGlvbgBEYkNvbm5lY3Rp
b24AU3FsQ29ubmVjdGlvbgBJbnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9uAFNldEV4Y2VwdGlvbgBT
eXN0ZW0uRGF0YS5Db21tb24AU3lzdGVtLlJ1bnRpbWUuU2VyaWFsaXphdGlvbi5Kc29uAEN1bHR1
cmVJbmZvAExvZ0luZm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAATWljcm9zb2Z0LlNxbFNlcnZl
ci5EVFNSdW50aW1lV3JhcABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1BpcGVsaW5lV3JhcABSZXN0
U2hhcnAAU3lzdGVtLk5ldC5IdHRwAGdldF9TY2hvb2xZZWFyAHNldF9TY2hvb2xZZWFyAENsZWFy
AEFkZEhlYWRlcgA8PnRfX2J1aWxkZXIAT3V0cHV0MEJ1ZmZlcgBQaXBlbGluZUJ1ZmZlcgBTY3Jp
cHRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ29ubmVjdGlvbk1hbmFnZXIAU2Vydmlj
ZVBvaW50TWFuYWdlcgBIdHRwTWVzc2FnZUhhbmRsZXIASHR0cENsaWVudEhhbmRsZXIASnNvbkhl
bHBlcgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lLldyYXBwZXIATWljcm9zb2Z0LlNx
bFNlcnZlci5EdHMuUGlwZWxpbmUuV3JhcHBlcgBEYlBhcmFtZXRlcgBBZGRQYXJhbWV0ZXIAU3Fs
UGFyYW1ldGVyAEdldEF3YWl0ZXIAZ2V0X0NsaWVudFNlcnZlcgBEYXRhQ29udHJhY3RKc29uU2Vy
aWFsaXplcgBYbWxPYmplY3RTZXJpYWxpemVyAEVycm9yAElFbnVtZXJhdG9yAEdldEVudW1lcmF0
b3IALmN0b3IALmNjdG9yAE91dHB1dElEcwBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRp
bWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDXzljYzc2NGRiNWRjODRhMDZh
YmQ3MWIzNzQyMGUzZTg2LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdN
b2RlcwBTQ185Y2M3NjRkYjVkYzg0YTA2YWJkNzFiMzc0MjBlM2U4Ni5Qcm9wZXJ0aWVzAGdldF9S
ZWFkT25seVZhcmlhYmxlcwBHZXRCeXRlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbklu
ZGV4ZXMAU2V0dGluZ3MAPD40X190aGlzAFN5c3RlbS5UaHJlYWRpbmcuVGFza3MAc2V0X1VzZURl
ZmF1bHRDcmVkZW50aWFscwBDb250YWlucwBnZXRfQ29sdW1ucwBHZXRBY2FkZW1pY1Nlc3Npb25z
AFByb2Nlc3NBY2VkZW1pY1Nlc3Npb25zAFN5c3RlbS5UZXh0LlJlZ3VsYXJFeHByZXNzaW9ucwBT
eXN0ZW0uQ29sbGVjdGlvbnMAQ29ubmVjdGlvbnMAU3lzdGVtLk5ldC5IdHRwLkhlYWRlcnMASHR0
cEhlYWRlcnMASHR0cFJlcXVlc3RIZWFkZXJzAGdldF9EZWZhdWx0UmVxdWVzdEhlYWRlcnMAQnVm
ZmVycwBnZXRfUGFyYW1ldGVycwBnZXRfQmFzZUFkZHJlc3MAc2V0X0Jhc2VBZGRyZXNzAEZpbmlz
aE91dHB1dHMAZ2V0X1N0YXR1cwBzZXRfU3RhdHVzAGdldF9Sb3dzAENyZWF0ZU5ld091dHB1dFJv
d3MAQ29uY2F0AEZvcm1hdABSZWFkT2JqZWN0AFdyaXRlT2JqZWN0AFN5c3RlbS5OZXQAZ2V0X0Ns
aWVudFNlY3JldABjbGllbnRTZWNyZXQAU2V0RW5kT2ZSb3dzZXQAV2FpdABTcGxpdABnZXRfRGVm
YXVsdABnZXRfUmVzdWx0AEdldFJlc3VsdABTZXRSZXN1bHQAU3lzdGVtLkRhdGEuU3FsQ2xpZW50
AEh0dHBDbGllbnQAUmVzdENsaWVudABVc2VyQ29tcG9uZW50AFBhcmVudENvbXBvbmVudABTY3Jp
cHRDb21wb25lbnQAZ2V0X0N1cnJlbnQAZ2V0X0NvbnRlbnQAc2V0X0NvbnRlbnQARm9ybVVybEVu
Y29kZWRDb250ZW50AFN0cmluZ0NvbnRlbnQASHR0cENvbnRlbnQAZ2V0X2NvdW50AHNldF9jb3Vu
dABnZXRfQWNjZXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQAU3RhcnQAQ29udmVydABJ
UmVzdFJlcXVlc3QATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QAZ2V0X1Bvc3QAc2V0
X1RpbWVvdXQAUHJpbWVPdXRwdXQATW92ZU5leHQAU3lzdGVtLlRleHQAR2V0VmFsdWVXaXRoQ29u
dGV4dABTY3JpcHRDb21wb25lbnRFdmFsQ29udGV4dABnZXRfRXZhbHVhdG9yQ29udGV4dABEYXRh
Um93AEFkZFJvdwBOZXdSb3cAUmVnZXgAVG9BcnJheQBnZXRfQ2xpZW50S2V5AGdldF9Bc3NlbWJs
eQBFeGVjdXRlTm9uUXVlcnkAAAAAABtBAHUAdABoAG8AcgBpAHoAYQB0AGkAbwBuAAANQgBhAHMA
aQBjACAAABlDAG8AbgB0AGUAbgB0AC0AVAB5AHAAZQABQ2EAcABwAGwAaQBjAGEAdABpAG8AbgAv
AHgALQB3AHcAdwAtAGYAbwByAG0ALQB1AHIAbABlAG4AYwBvAGQAZQBkAAGAkWcAcgBhAG4AdABf
AHQAeQBwAGUAPQBjAGwAaQBlAG4AdABfAGMAcgBlAGQAZQBuAHQAaQBhAGwAcwAmAHMAYwBvAHAA
ZQA9AHMAYwBvAHAAZQBuAGEAbQBlADEAJQAyADAAcwBjAG8AcABlAG4AYQBtAGUAMgAlADIAMABz
AGMAbwBwAGUAbgBhAG0AZQB4AAABAANbAAADXQAAB30ALAB7AAADewAAA30AAAMsAAADOgAAAyIA
AD1KAHMAbwBuAFMAdAByAGkAbgBnAFQAbwBEAGEAdABhAFQAYQBiAGwAZQA6ACAAQwBvAGwAdQBt
AG4AcwAAP0UAcgByAG8AcgAgAFAAYQByAHMAaQBuAGcAIABDAG8AbAB1AG0AbgAgAE4AYQBtAGUA
IAA6ACAAewAwAH0AAANcAABHSgBzAG8AbgBTAHQAcgBpAG4AZwBUAG8ARABhAHQAYQBUAGEAYgBs
AGUAOgAgAEYAbwByACAAZQBhAGMAaAAgAHIAbwB3AAA7RQByAHIAbwByACAAUABhAHIAcwBpAG4A
ZwAgAFIAbwB3ACAAIABOAGEAbQBlACAAOgAgAHsAMAB9AAArSgBzAG8AbgBTAHQAcgBpAG4AZwBU
AG8ARABhAHQAYQBUAGEAYgBsAGUAAEF7ACIAbgBhAG0AZQAiADoAIgBzAGMAaABvAG8AbABzAHQA
YQBmAGYAIgAsACIAcgBlAGMAbwByAGQAIgA6AFsAAC0iAF8AbgBhAG0AZQAiADoAIgBzAGMAaABv
AG8AbABzAHQAYQBmAGYAIgAsAAA/XQAsACIAQABlAHgAdABlAG4AcwBpAG8AbgBzACIAOgAiAHMA
XwBzAHMAZgBfAG4AYwBlAGEAXwB4ACIAfQAAaywAIgBAAGUAeAB0AGUAbgBzAGkAbwBuAHMAIgA6
ACIAdQBfAHMAYwBoAG8AbwBsAHMAdABhAGYAZgB1AHMAZQByAGYAaQBlAGwAZABzACwAcwBfAHMA
cwBmAF8AbgBjAGUAYQBfAHgAIgAAE3MAcABMAG8AZwBJAG4AZgBvAAAVQABDAGwAaQBlAG4AdABV
AEkARAAADUAARQByAHIAbwByAAATQABGAGkAbABlAFQAeQBwAGUAAAtAAEEAcgBlAGEAABFAAEwA
bwBnAEkAbgBmAG8AAEdpAG0AcwAvAG8AbgBlAHIAbwBzAHQAZQByAC8AdgAxAHAAMQAvAGEAYwBh
AGQAZQBtAGkAYwBTAGUAcwBzAGkAbwBuAHMAAAt0AG8AawBlAG4AABFTAGUAcwBzAGkAbwBuAHMA
AICbSQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMA
ZQB0ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0
AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAAARTwB1AHQAcAB1AHQA
IAAwAAAJUABTAEQAQgAAE0MAbABpAGUAbgB0AEsAZQB5AAAjQwBsAGkAZQBuAHQATwBuAGUAUgBv
AHMAdABlAHIASQBEAAAZQwBsAGkAZQBuAHQAUwBlAGMAcgBlAHQAABlDAGwAaQBlAG4AdABTAGUA
cgB2AGUAcgAAcVMAQwBfADkAYwBjADcANgA0AGQAYgA1AGQAYwA4ADQAYQAwADYAYQBiAGQANwAx
AGIAMwA3ADQAMgAwAGUAMwBlADgANgAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUA
cgBjAGUAcwAAJVMARQBTAFMASQBPAE4AUwAtAHMAZQBuAGQAVABvAGsAZQBuAAEZQQBjAGMAZQBz
AHMAIABUAG8AawBlAG4AADlHAGUAdABBAGMAYwBlAHMAcwBUAG8AawBlAG4AIAByAGUAdAB1AHIA
bgBlAGQAIABuAHUAbABsAAATRgBpAGwAZQAgAFMAaQB6AGUAADNHAGUAdABGAGkAbABlAFMAaQB6
AGUAIAByAGUAdAB1AHIAbgBlAGQAIABuAHUAbABsAAAfUAByAG8AYwBlAHMAcwBUAGUAYQBjAGgA
ZQByAHMAAAc1ADAAMAAAFT8AcABhAGcAZQBzAGkAegBlAD0AAA0mAHAAYQBnAGUAPQAAIWEAcABw
AGwAaQBjAGEAdABpAG8AbgAvAGoAcwBvAG4AAA9CAGUAYQByAGUAcgAgAABZRwBlAHQAIABBAGMA
YQBkAGUAbQBpAGMAIABTAGUAcwBzAGkAbwBuAHMAIAAtACAAUgBvAHcAIABDAG8AdQBuAHQAIABQ
AGEAZwBlACAATgB1AG0AOgAgAAEXRwBlAHQAVABlAGEAYwBoAGUAcgBzAAANLwBjAG8AdQBuAHQA
ABdSAGUAYwBvAHIAZABDAG8AdQBuAHQAABdHAGUAdABGAGkAbABlAFMAaQB6AGUAAAtCAGEAcwBp
AGMAABVnAHIAYQBuAHQAXwB0AHkAcABlAAAlYwBsAGkAZQBuAHQAXwBjAHIAZQBkAGUAbgB0AGkA
YQBsAHMAAAtzAGMAbwBwAGUAAElzAGMAbwBwAGUAbgBhAG0AZQAxACUAMgAwAHMAYwBvAHAAZQBu
AGEAbQBlADIAJQAyADAAcwBjAG8AcABlAG4AYQBtAGUAeAAAAAAAmR5ljz3LvEODW6d/AlBB8wAE
IAEBCAMgAAEFIAEBEREEIAEBDgUgAQESOQUgAQEdAgUgAQESdQYgAQERgMUEBwERNAUVEX0BCAgA
ABURfQETAAcwAQEBEB4ABAoBETQIIAAVEkEBEwAEBwEROAUVEX0BHAQKARE4BAcBETwFFRF9AQ4E
CgERPAQHARFABAoBEUAEBwERRAQKARFEBAcBEk0FAAIODg4GIAEBEYDdByACEoDhDg4KIAMSgOEO
HBGA5QggARKA6RKA4QMgAA4EAAEBDgUAABKA8QUgAR0FDgUAAQ4dBSQHExJRHQ4VElUBDh0OCB0O
CA4IDhURWQEODhJdDggODhJREmEFIAIODg4GAAIdDg4OBRUSVQEOBCABCA4FIAIOCAgFIAECEwAF
IAEBEwAFAAIODhwIIAAVEVkBEwAFFRFZAQ4EIAATAAUgABKA/QYgARKBAQ4DIAACBCAAEl0EIAEO
CAUgAgEOHAUgABKBBQUgAQESXQQHARJlBSAAEYENBiACAQ4SZQYgAQERgRkFIAASgR0JIAISgSEO
EYElBCABARwKIAMSgSEOEYElCAMgAAgLIAMBEoCpHQgSgK0FIAIBCBwDBwEIBwACCBKArQ4FIAEd
CAgFIAASgTUFIAASgTkGIAESgT0OBSAAEoC1BSAAEoFBBiABEoFFHAUAABKBSQYgARwSgU0HAAES
ORGBUQUgABKBVQcgAgEOEoFVBAcBEmkCHgAHIAIBEoFhHAQgAB0FBSABDh0FBSABAR0FBiABHBKB
YRkHDAgSCAgODg4ODhUReQEOFRF5ARwSYRJhBAABAQIGAAEBEYFpBgADDg4ODgUVEkEBDgggABUR
eQETAAUVEXkBDgowAgIBEB4AEB4BCQoCFRF5AQ4RNAUVEkEBHAUVEXkBHAkKAhUReQEcETQFIAEB
EmElBxAIEggcCAgOEoCFDggVEXkBEoCJFRF5AQ4SgI0SgJEIEmESYQQAAQgOBgACAg4QCAUAAQ4d
DgYgAQESgW0FIAASgXEKIAAVEoF1ARKBeQgVEoF1ARKBeQUgAgEODgggAwEOEoDxDg8gAhUSQQES
gIkSgW0SgYEHFRJBARKAiQcVEXkBEoCJCwoCFRF5ARKAiRE4BSAAEoCJBSAAEoGBByAAFRJBAQ4J
CgIVEXkBDhE4BSAAEoCNAyAAHBsHCggSCA4OEoCFDhUReQESgIkVEXkBDhJhEmELCgIVEXkBEoCJ
ETwJCgIVEXkBDhE8BAoBEjAWBwcIDg4SgJkVEXkBEoCJFRF5AQ4SYQYgAQESgYkLFRJVARURgKEC
Dg4HFRGAoQIODgcgAgETABMBDyABARUSgY0BFRGAoQIODgsKAhUReQESgIkRQAkKAhUReQEOEUAE
CgESLBsHCAgOEoCdDg4VElUBFRGAoQIODhUReQEOEmEEIAEBAgYgAQESgZEFAAASgZUFIAASgW0J
IAIBEoGVEoFtBiABARKBgQ0gAhUSQQESgIkOEoGBCQoCFRF5AQ4RRAi3elxWGTTgiQiJhF3NgIDM
kQhZgGLnf5FfdQiwP19/EdUKOgIGDgMGEhQDBhIYAwYSDAQGEoCxBAYSgL0EBhKAwQMGEiACBggG
BhURfQEIAwYSCAYGFRF5AQ4GBhUReQEcBgYVEX0BHAgGFRF5ARKAiQYGFRF9AQ4EBhKAlQcgABUS
QQEICiADFRJBARwODg4JIAIVEkEBDg4OCwAEFRJBAQ4ODg4OCQACFRJBAQ4ODgQgAQ4OBSABElEO
BiADAQgODgMAAAENIAQBCB0IHRKAqRKArQYgAQESgLEFAAASgL0FAAASgMEGAAEBEoDBBAAAEiAG
EAEBDh4ABhABAR4ADgMoAAgDKAACBSgAEoC1AygADgUIABKAvQUIABKAwQQIABIgCAEACAAAAAAA
HgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTQ185Y2M3NjRkYjVk
Yzg0YTA2YWJkNzFiMzc0MjBlM2U4NgAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDE4AABJAQAa
Lk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjcBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQg
RnJhbWV3b3JrIDQuNy0BAChTY3JpcHRNYWluKzxQcm9jZXNzQWNlZGVtaWNTZXNzaW9ucz5kX182
AAApAQAkU2NyaXB0TWFpbis8R2V0QWNhZGVtaWNTZXNzaW9ucz5kX183AAAhAQAcU2NyaXB0TWFp
bis8R2V0RmlsZVNpemU+ZF9fOAAAJAEAH1NjcmlwdE1haW4rPEdldEFjY2Vzc1Rva2VuPmRfXzkA
ACYBACFTY3JpcHRNYWluKzxHZXRBY2Nlc3NUb2tlbjI+ZF9fMTAAAAQBAAAACgEAAgAAAAABAAAA
AAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29y
bGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3
YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAA
AAAAAFBBRFBBRFC0AAAAnHYAAAAAAAAAAAAAtnYAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKh2
AAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAw
AACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWIAAAOwDAAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYA
RQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAA
AAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQA
AABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsARMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABl
AEkAbgBmAG8AAAAoAwAAAQAwADAAMAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMA
AAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBE
AGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAQwBfADkAYwBjADcANgA0AGQAYgA1AGQAYwA4ADQA
YQAwADYAYQBiAGQANwAxAGIAMwA3ADQAMgAwAGUAMwBlADgANgAAADAACAABAEYAaQBsAGUAVgBl
AHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEA
bQBlAAAAUwBDAF8AOQBjAGMANwA2ADQAZABiADUAZABjADgANABhADAANgBhAGIAZAA3ADEAYgAz
ADcANAAyADAAZQAzAGUAOAA2AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkA
ZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADgAAAAqAAEAAQBMAGUAZwBh
AGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkA
bABlAG4AYQBtAGUAAABTAEMAXwA5AGMAYwA3ADYANABkAGIANQBkAGMAOAA0AGEAMAA2AGEAYgBk
ADcAMQBiADMANwA0ADIAMABlADMAZQA4ADYALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQA
TgBhAG0AZQAAAAAAUwBDAF8AOQBjAGMANwA2ADQAZABiADUAZABjADgANABhADAANgBhAGIAZAA3
ADEAYgAzADcANAAyADAAZQAzAGUAOAA2AAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkA
bwBuAAAAMQAuADAALgAwAC4AMAAAADgACAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBv
AG4AAAAxAC4AMAAuADAALgAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAHAAAAwAAADINgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAA=]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_9cc764db5dc84a06abd71b37420e3e86</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::ClientKey,User::ClientOneRosterID,User::ClientSecret,User::ClientServer</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="4">
                        <arrayElement
                          dataType="System.String">&lt;SOAP-ENV:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"&gt;
&lt;SOAP-ENV:Body&gt;
&lt;a1:ScriptBreakpointInfo id="ref-1" xmlns:a1="http://schemas.microsoft.com/clr/nsassem/Microsoft.SqlServer.VSTAHosting/Microsoft.SqlServer.VSTAScriptingLib%2C%20Version%3D15.0.0.0%2C%20Culture%3Dneutral%2C%20PublicKeyToken%3D89845dcd8080cc91"&gt;
&lt;Enabled&gt;true&lt;/Enabled&gt;
&lt;File id="ref-3"&gt;main.cs&lt;/File&gt;
&lt;FileLine&gt;415&lt;/FileLine&gt;
&lt;FileColumn&gt;17&lt;/FileColumn&gt;
&lt;/a1:ScriptBreakpointInfo&gt;
&lt;/SOAP-ENV:Body&gt;
&lt;/SOAP-ENV:Envelope&gt;
</arrayElement>
                        <arrayElement
                          dataType="System.String">&lt;SOAP-ENV:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"&gt;
&lt;SOAP-ENV:Body&gt;
&lt;a1:ScriptBreakpointInfo id="ref-1" xmlns:a1="http://schemas.microsoft.com/clr/nsassem/Microsoft.SqlServer.VSTAHosting/Microsoft.SqlServer.VSTAScriptingLib%2C%20Version%3D15.0.0.0%2C%20Culture%3Dneutral%2C%20PublicKeyToken%3D89845dcd8080cc91"&gt;
&lt;Enabled&gt;true&lt;/Enabled&gt;
&lt;File id="ref-3"&gt;main.cs&lt;/File&gt;
&lt;FileLine&gt;399&lt;/FileLine&gt;
&lt;FileColumn&gt;13&lt;/FileColumn&gt;
&lt;/a1:ScriptBreakpointInfo&gt;
&lt;/SOAP-ENV:Body&gt;
&lt;/SOAP-ENV:Envelope&gt;
</arrayElement>
                        <arrayElement
                          dataType="System.String">&lt;SOAP-ENV:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"&gt;
&lt;SOAP-ENV:Body&gt;
&lt;a1:ScriptBreakpointInfo id="ref-1" xmlns:a1="http://schemas.microsoft.com/clr/nsassem/Microsoft.SqlServer.VSTAHosting/Microsoft.SqlServer.VSTAScriptingLib%2C%20Version%3D15.0.0.0%2C%20Culture%3Dneutral%2C%20PublicKeyToken%3D89845dcd8080cc91"&gt;
&lt;Enabled&gt;true&lt;/Enabled&gt;
&lt;File id="ref-3"&gt;main.cs&lt;/File&gt;
&lt;FileLine&gt;419&lt;/FileLine&gt;
&lt;FileColumn&gt;17&lt;/FileColumn&gt;
&lt;/a1:ScriptBreakpointInfo&gt;
&lt;/SOAP-ENV:Body&gt;
&lt;/SOAP-ENV:Envelope&gt;
</arrayElement>
                        <arrayElement
                          dataType="System.String">&lt;SOAP-ENV:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"&gt;
&lt;SOAP-ENV:Body&gt;
&lt;a1:ScriptBreakpointInfo id="ref-1" xmlns:a1="http://schemas.microsoft.com/clr/nsassem/Microsoft.SqlServer.VSTAHosting/Microsoft.SqlServer.VSTAScriptingLib%2C%20Version%3D15.0.0.0%2C%20Culture%3Dneutral%2C%20PublicKeyToken%3D89845dcd8080cc91"&gt;
&lt;Enabled&gt;true&lt;/Enabled&gt;
&lt;File id="ref-3"&gt;main.cs&lt;/File&gt;
&lt;FileLine&gt;334&lt;/FileLine&gt;
&lt;FileColumn&gt;5&lt;/FileColumn&gt;
&lt;/a1:ScriptBreakpointInfo&gt;
&lt;/SOAP-ENV:Body&gt;
&lt;/SOAP-ENV:Envelope&gt;
</arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">A4</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">338550b5789e62119da99eaa83870fbeb037e669</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">c70361c448dc120b23e5510d6ca6f6ae</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Loop thru Clients\Academic Sessions\Script Component.Connections[PSDB]"
                      connectionManagerID="Package.ConnectionManagers[OneRosterNET]"
                      connectionManagerRefId="Package.ConnectionManagers[OneRosterNET]"
                      description="Process Log"
                      name="PSDB" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0]"
                      hasSideEffects="true"
                      name="Output 0">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[ClientID]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[ClientID]"
                          name="ClientID" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[SourcedId]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[SourcedId]"
                          name="SourcedId" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[Status]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[Status]"
                          name="Status" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[DateLastModified]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[DateLastModified]"
                          name="DateLastModified" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[Title]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[Title]"
                          name="Title" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[Type]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[Type]"
                          name="Type" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[StartDate]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[StartDate]"
                          name="StartDate" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[EndDate]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[EndDate]"
                          name="EndDate" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[ParentSourcedId]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[ParentSourcedId]"
                          name="ParentSourcedId" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[SchoolYear]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[SchoolYear]"
                          name="SchoolYear" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Loop thru Clients\Truncate Tables"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{26D04F81-F15A-49D9-B1B5-573B669E4501}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Truncate Tables"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{9238981A-2F3C-4FFA-86C4-45A523C0CAF5}"
              SQLTask:SqlStatementSource="declare @ClientUID int&#xA;&#xA;set @ClientUID = ?&#xA;&#xA;delete OneRoster.Classes where ClientUID = @ClientUID&#xA;delete OneRoster.Courses where ClientUID = @ClientUID&#xA;delete OneRoster.Demographics where ClientUID = @ClientUID&#xA;delete OneRoster.Enrollments where ClientUID = @ClientUID&#xA;delete OneRoster.Orgs where ClientUID = @ClientUID&#xA;delete OneRoster.Users where ClientUID = @ClientUID&#xA;delete OneRoster.AcademicSessions  where ClientUID = @ClientUID" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@ClientUID"
                SQLTask:DtsVariableName="User::ClientOneRosterID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Loop thru Clients.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{B85F13EF-0CBC-4F14-8465-EFA31610B823}"
          DTS:From="Package\Loop thru Clients\Truncate Tables"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Loop thru Clients\Academic Sessions" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{FF319617-B020-4392-8A84-34224818A73C}"
          DTS:ObjectName="{FF319617-B020-4392-8A84-34224818A73C}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::ClientOneRosterID" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{706F691B-E794-4AC3-B19B-9437C4F0F6A5}"
          DTS:ObjectName="{706F691B-E794-4AC3-B19B-9437C4F0F6A5}"
          DTS:ValueIndex="2"
          DTS:VariableName="User::ClientServer" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{3EF064E6-7CA9-4EEE-815B-D594F113BBF9}"
          DTS:ObjectName="{3EF064E6-7CA9-4EEE-815B-D594F113BBF9}"
          DTS:ValueIndex="3"
          DTS:VariableName="User::ClientKey" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{934079D3-3C4F-42D0-A9CD-D9B3BFBA9A8B}"
          DTS:ObjectName="{934079D3-3C4F-42D0-A9CD-D9B3BFBA9A8B}"
          DTS:ValueIndex="1"
          DTS:VariableName="User::ClientSecret" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Truncate Log"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{6760A9FB-254E-4E3F-8D5C-F7543511201F}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Truncate Log"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{9238981A-2F3C-4FFA-86C4-45A523C0CAF5}"
          SQLTask:SqlStatementSource="--Select * &#xA;delete&#xA;from OneRoster.LogFile&#xA;where getdate() &gt; dateadd(d, 14, logdate) " xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{786123FF-F135-400B-9BE0-9F31769713E1}"
      DTS:From="Package\Data Flow Task - Get Customers"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Truncate Log" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{74B64602-56FE-4743-B7D4-FDCB41434934}"
      DTS:From="Package\Truncate Log"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Loop thru Clients" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="231,42"
          Id="Package\Data Flow Task - Get Customers"
          TopLeft="153.971698113208,29.518867924528" />
        <NodeLayout
          Size="167,42"
          Id="Package\Loop thru Clients\Academic Sessions"
          TopLeft="42,130" />
        <NodeLayout
          Size="146,42"
          Id="Package\Loop thru Clients\Truncate Tables"
          TopLeft="56.858490566038,22.5" />
        <EdgeLayout
          Id="Package\Loop thru Clients.PrecedenceConstraints[Constraint]"
          TopLeft="127.679245283019,64.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,65.5"
              Start="0,0"
              End="0,58">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,58" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43.924528301886795"
          IsExpanded="True"
          PanelSize="1072,245"
          Size="1072,289"
          Id="Package\Loop thru Clients"
          TopLeft="79.5,243.990566037736" />
        <NodeLayout
          Size="143,42"
          Id="Package\Truncate Log"
          TopLeft="379,136" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="269.471698113208,71.518867924528">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="181.028301886792,64.481132075472"
              Start="0,0"
              End="181.028301886792,56.981132075472">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.240566037736" />
                  <mssgle:CubicBezierSegment
                    Point1="0,28.240566037736"
                    Point2="0,32.240566037736"
                    Point3="4,32.240566037736" />
                  <mssgle:LineSegment
                    End="177.028301886792,32.240566037736" />
                  <mssgle:CubicBezierSegment
                    Point1="177.028301886792,32.240566037736"
                    Point2="181.028301886792,32.240566037736"
                    Point3="181.028301886792,36.240566037736" />
                  <mssgle:LineSegment
                    End="181.028301886792,56.981132075472" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="450.5,178">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="165,65.990566037736"
              Start="0,0"
              End="165,58.490566037736">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.995283018868" />
                  <mssgle:CubicBezierSegment
                    Point1="0,28.995283018868"
                    Point2="0,32.995283018868"
                    Point3="4,32.995283018868" />
                  <mssgle:LineSegment
                    End="161,32.995283018868" />
                  <mssgle:CubicBezierSegment
                    Point1="161,32.995283018868"
                    Point2="165,32.995283018868"
                    Point3="165,36.995283018868" />
                  <mssgle:LineSegment
                    End="165,58.490566037736" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="DATA NEEDED:&#xA;Orgs&#xA;Users&#xA;courses&#xA;Classes&#xA;Enrollment&#xA;Academic Sessions"
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="128,136"
          Id="88452310-04f5-4630-9e61-a905b633ca86"
          TopLeft="1146,44" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Data Flow Task - Get Customers">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="187,42"
          Id="Package\Data Flow Task - Get Customers\Recordset Destination"
          TopLeft="93,164" />
        <NodeLayout
          Size="152,42"
          Id="Package\Data Flow Task - Get Customers\OLE DB Source"
          TopLeft="112,64" />
        <EdgeLayout
          Id="Package\Data Flow Task - Get Customers.Paths[OLE DB Source Output]"
          TopLeft="187.25,106">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,58"
              Start="0,0"
              End="0,50.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,50.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Data Flow Task - Get Customers\OLE DB Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Loop thru Clients\Academic Sessions">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="163,42"
          Id="Package\Loop thru Clients\Academic Sessions\Script Component"
          TopLeft="304,94" />
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>