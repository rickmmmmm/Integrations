<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="10/30/2014 10:52:01 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="WLAFRANCE-PC"
  DTS:CreatorName="HAYESSOFT\Warrenla"
  DTS:DTSID="{D7A77F44-45A0-4C73-A2C4-BEEDEF872366}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.132"
  DTS:LocaleID="1033"
  DTS:ObjectName="OneRoster"
  DTS:PackageType="5"
  DTS:VersionBuild="742"
  DTS:VersionGUID="{10D5D711-44F1-4E4C-B3A8-ADFE0C6CD206}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Flat File Connection Manager]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{693BA06D-28D0-4437-B903-AF9438D1B9FE}"
      DTS:ObjectName="Flat File Connection Manager">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\bkpDB\sampleSSISFile.txt">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="ClientID"
              DTS:DTSID="{C8206270-6578-4A54-96EA-81FCF270704D}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="SourcedId"
              DTS:DTSID="{234D327F-620E-4C06-9684-132AFB66D366}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="Status"
              DTS:DTSID="{0D117A63-B32C-470C-8878-4E94E5917643}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="DateLastModified"
              DTS:DTSID="{41BED812-2F03-4115-90BC-9E9F3B47C822}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="Title"
              DTS:DTSID="{8C95FD26-438E-409C-BC93-365AFBD46F70}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="Type"
              DTS:DTSID="{5C9822FB-DEB6-4126-B295-711AF1BF50AC}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="StartDate"
              DTS:DTSID="{D38A788C-B058-41B9-AA16-65C63E42ABC1}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="EndDate"
              DTS:DTSID="{C972E909-2607-4BCD-A04E-A7962602AAD9}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="ParentSourcedId"
              DTS:DTSID="{A79158AB-E5F2-460A-AEA4-42045DDAFBA6}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="SchoolYear"
              DTS:DTSID="{9B17FB85-00D5-4015-911B-967334D554B8}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[OneRoster]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{9238981A-2F3C-4FFA-86C4-45A523C0CAF5}"
      DTS:ObjectName="OneRoster">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[$Project::OneRosterDB]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[$Project::Server]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=.;Initial Catalog=ImportManagementSystem;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[OneRosterNET]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{25CAA67B-38B5-4F5D-8EC9-109E21C521F5}"
      DTS:ObjectName="OneRosterNET">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[$Project::OneRosterDB]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[$Project::Server]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=.;Initial Catalog=ImportManagementSystem;Integrated Security=True;Application Name=SSIS-PowerSchool-{25CAA67B-38B5-4F5D-8EC9-109E21C521F5}CSS-NBLAKELY\MSSQLSERVER2014.PowerSchoolAPIPlugIn;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4CC2F85C-2F64-440F-AB55-D6605179C6FF}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ClientKey">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{84791237-9068-48B0-84ED-C07D6C38ED92}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ClientName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C5681D49-D1EE-4CE4-ACDE-10DCE6BA5F73}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ClientOneRosterID">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{601DAA9A-D7B8-4F54-93D5-EE33204EFD96}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ClientSecret">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A44D1E2C-4C71-4AFF-8355-F54B2AA526CC}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ClientServer">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{AEBC77A0-3B0B-4BA6-9D00-34316FF48896}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ClientTipWebDatabase">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E91C2158-FCAE-4D20-94EE-A08537BB103B}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="CustomerList">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{27BECB58-365C-4729-BBEF-AF32B9F73B7C}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Error">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{20F1C2CF-576D-4FC6-9EA3-C9298167B0E4}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ErrorMessage">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{266782F4-B06A-4F00-A4C7-5026AA13F3B2}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PageSize">
      <DTS:VariableValue
        DTS:DataType="8">500</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Data Flow Task - Get Customers"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{89CC7015-45BC-4D9A-9883-2658BE7A3076}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Data Flow Task - Get Customers"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server v10; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          BLOBTempStoragePath=""
          bufferTempStoragePath=""
          version="1">
          <components>
            <component
              refId="Package\Data Flow Task - Get Customers\OLE DB Source"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="OLE DB Source"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT ClientUID, ClientUrl, ClientKey, ClientSecret, 
SessionsFile, ClassesFile, CoursesFile, EnrollmentsFile
  FROM [ImportManagementSystem].[OneRoster].[Client]
  Where FileBased = 0
  order by ProcessOrder</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task - Get Customers\OLE DB Source.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OneRoster]"
                  connectionManagerRefId="Package.ConnectionManagers[OneRoster]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientUID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClientUID]"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientUID]"
                      name="ClientUID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientSecret]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClientSecret]"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientSecret]"
                      name="ClientSecret"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientUrl]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClientUrl]"
                      length="50"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientUrl]"
                      name="ClientUrl"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientKey]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClientKey]"
                      length="50"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientKey]"
                      name="ClientKey"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[SessionsFile]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[SessionsFile]"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[SessionsFile]"
                      name="SessionsFile"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClassesFile]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClassesFile]"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClassesFile]"
                      name="ClassesFile"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[CoursesFile]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[CoursesFile]"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[CoursesFile]"
                      name="CoursesFile"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[EnrollmentsFile]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[EnrollmentsFile]"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[EnrollmentsFile]"
                      name="EnrollmentsFile"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClientUID]"
                      dataType="i4"
                      name="ClientUID" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClientSecret]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="ClientSecret" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClientUrl]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="ClientUrl" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClientKey]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="ClientKey" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[SessionsFile]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      name="SessionsFile" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClassesFile]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      name="ClassesFile" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[CoursesFile]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      name="CoursesFile" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[EnrollmentsFile]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      name="EnrollmentsFile" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClientUID]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClientUID]"
                      name="ClientUID" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClientUrl]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClientUrl]"
                      name="ClientUrl" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClientKey]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClientKey]"
                      name="ClientKey" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClientSecret]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClientSecret]"
                      name="ClientSecret" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[SessionsFile]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[SessionsFile]"
                      name="SessionsFile" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClassesFile]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClassesFile]"
                      name="ClassesFile" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[CoursesFile]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[CoursesFile]"
                      name="CoursesFile" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[EnrollmentsFile]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[EnrollmentsFile]"
                      name="EnrollmentsFile" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task - Get Customers\Recordset Destination"
              componentClassID="Microsoft.RecordsetDestination"
              contactInfo="Recordset Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates and populates an in-memory ADO recordset that is available outside of the data flow. Scripts and other package elements can use the recordset. For example, use a recordset to store the names of files that will be loaded into the data warehouse."
              name="Recordset Destination">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the recordset."
                  name="VariableName">User::CustomerList</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input]"
                  hasSideEffects="true"
                  name="Recordset Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[ClientUID]"
                      cachedDataType="i4"
                      cachedName="ClientUID"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientUID]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[ClientSecret]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="150"
                      cachedName="ClientSecret"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientSecret]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[ClientUrl]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="ClientUrl"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientUrl]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[ClientKey]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="ClientKey"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientKey]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[SessionsFile]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="150"
                      cachedName="SessionsFile"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[SessionsFile]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[ClassesFile]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="150"
                      cachedName="ClassesFile"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClassesFile]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[CoursesFile]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="150"
                      cachedName="CoursesFile"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[CoursesFile]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[EnrollmentsFile]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="150"
                      cachedName="EnrollmentsFile"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[EnrollmentsFile]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Data Flow Task - Get Customers.Paths[OLE DB Source Output]"
              endId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input]"
              name="OLE DB Source Output"
              startId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Loop thru Clients"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{EF076D26-2122-4091-9820-02B258557495}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Loop thru Clients">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachADOEnumerator"
        DTS:DTSID="{85CE8E18-46E0-4A0D-965B-8E6296303D09}"
        DTS:ObjectName="{85CE8E18-46E0-4A0D-965B-8E6296303D09}">
        <DTS:ObjectData>
          <FEEADO
            EnumType="EnumerateRowsInFirstTable"
            VarName="User::CustomerList" />
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Loop thru Clients\Academic Sessions"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Academic Sessions"
          DTS:DTSID="{FE3BBE6F-A6B3-4904-88F0-9BD6A78DC5FE}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Academic Sessions"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server v10; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              BLOBTempStoragePath=""
              bufferTempStoragePath=""
              version="1">
              <components>
                <component
                  refId="Package\Loop thru Clients\Academic Sessions\Script Component"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;11"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Script Component"
                  version="12">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="39">
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces

using System.Runtime;
using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.IO;
using System.Net;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Runtime.Serialization.Json;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading.Tasks;
using System.Collections.Specialized;
using System.Web;
using RestSharp;
using System.Management.Automation;
using System.Web.Script.Serialization;






#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    static string pLocation = "ims/oneroster/v1p1/academicSessions";
    static string tokenURI = "token";
    static string processType = "Sessions";

    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();

    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */
        ProcessAcedemicSessions().Wait();
    }


    public async Task<int> ProcessAcedemicSessions()
    {
        try
        {

            // The server base address
            string baseURL = Variables.ClientServer;

            //MessageBox.Show(uri);

            ServicePointManager.Expect100Continue = true;
            ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;


            /// The client information used to get the OAuth Access Token from the server.
            string clientId = Variables.ClientKey.ToString();
            string clientSecret = Variables.ClientSecret;
            string sendAuth = EncodeTo64(Variables.ClientKey + ":" + Variables.ClientSecret);
            WriteToDatabase(0, "SESSIONS-sendToken", sendAuth);
            // this will hold the Access Token returned from the server.
            //MessageBox.Show(sendToken, "sendToken");


            string rawJson = GetJsonString(baseURL, clientId, clientSecret);

            JavaScriptSerializer sr = new JavaScriptSerializer();

            AcademicSessions[] jsonResponse = sr.Deserialize<AcademicSessions[]>(rawJson);



            

            //string accessToken = await GetAccessToken(baseURL, sendAuth, clientId, clientSecret);



            //-->>>>>>>>>>>>>> Add : if returns null, stop
            //if (accessToken == null)
            //{
            //    WriteToDatabase(1, "Access Token", "GetAccessToken returned null");
            //    return 0;
            //}
            //MessageBox.Show(accessToken, "access token");


            //string FileSize = await GetFileSize(baseURL, accessToken);
            //if (FileSize == null)
            //{
            //    WriteToDatabase(1, "File Size", "GetFileSize returned null");
            //    return 0;
            //}

            //var jsonResponse = await GetAcademicSessions(baseURL, accessToken, FileSize);

            return 0;
        }
        catch (Exception ex) {
            WriteToDatabase(1, "ProcessTeachers", ex.Message);
            return 0;
        }

    }



    private async Task<dynamic> GETAcademicSessionsDT(AcademicSessions[] dt)
    {
        try
        {
            
            int numrows = 0;

            foreach(AcademicSessions item in dt)
            {
                Output0Buffer.AddRow();
                Output0Buffer.ClientID = Variables.ClientOneRosterID;

                Output0Buffer.SourcedId = item.SourcedId;
                Output0Buffer.Status = item.Status;
                Output0Buffer.DateLastModified = item.DateLastModified;
                Output0Buffer.Title = item.Title;
                Output0Buffer.StartDate = item.StartDate;
                Output0Buffer.EndDate = item.EndDate;
                Output0Buffer.ParentSourcedId = item.Parent.SourcedId;
                Output0Buffer.SchoolYear = item.SchoolYear;


                numrows += 1;
            }
            //WriteToDatabase(0, "Get Academic Sessions - Rows Added: " + dt());

            return null;
        }
        catch (Exception ex)
        {
            WriteToDatabase(1, "GetAcademicSessions", ex.Message);
            throw;
        }
    }

    /// <summary>
    /// Gets the list of teachers.
    /// </summary>
    /// <param name="baseUrl">The url for the teacher list</param>
    /// <param name="accessToken">Acquired in the previous method</param>
    /// <returns>The page of articles.</returns>
    private async Task<dynamic> GetAcademicSessions(string baseUrl, string accessToken, string FileSize)
    {
        try
        {
            int TotalRecords;
            string pageSize = "500";
            int intPageSize = Convert.ToInt32(pageSize);
            if (Int32.TryParse(FileSize, out TotalRecords))
            {
                int pages = ((TotalRecords - 1) / intPageSize) + 1;
                //MessageBox.Show(pages.ToString(), "pages");

                for (int i = 1; i <= pages; i++)
                {
                    string pagenum = i.ToString();
                    //MessageBox.Show(pagenum, "page number");

                    string uri = baseUrl + pLocation + "?pagesize=" + pageSize + "&page=" + pagenum;
                    var client = new HttpClient();

                    client.BaseAddress = new Uri(uri);

                    client.DefaultRequestHeaders.Accept.Clear();
                    client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));
                    client.DefaultRequestHeaders.Add("Authorization", "Bearer " + accessToken);

                    //MessageBox.Show(uri, "teachers uri");

                    StringContent stringContent = new StringContent("", Encoding.UTF8, "application/json");
                    //StringContent stringContent = new StringContent("page=" + pagenum, Encoding.UTF8, "application/json");
                    //string content;

                    HttpResponseMessage response = await client.PostAsync(new Uri(uri), stringContent);

                    response.EnsureSuccessStatusCode();
                    string jsonString = await response.Content.ReadAsStringAsync();
                    //MessageBox.Show(jsonString, "jsonstring");

                    jsonString = cleanJsonString(jsonString);

                    //Deserialize our JSON
                    DataTable dt = JsonStringToDataTable(jsonString);
                    int numRows = 0;


                    foreach (DataRow row in dt.Rows)
                    {
                        Output0Buffer.AddRow();

                        //Output0Buffer.ClientID = Convert.ToInt32(row["ClientUID"].ToString().Replace("\\", ""));

                        //Output0Buffer.TeacherID = row["TeacherID"].ToString().Replace("\\", "");
                        //Output0Buffer.CampusID = row["CampusID"].ToString().Replace("\\", "");
                        //Output0Buffer.FirstName = row["FirstName"].ToString().Replace("\\", "");
                        //Output0Buffer.LastName = row["LastName"].ToString().Replace("\\", "");
                        //Output0Buffer.MiddleName = row["MiddleName"].ToString().Replace("\\", "");
                        //Output0Buffer.Grade = row["Grade"].ToString().Replace("\\", "");
                        //Output0Buffer.HomeRoom = row["HomeRoom"].ToString().Replace("\\", "");
                        //Output0Buffer.Department = row["Department"].ToString().Replace("\\", "");
                        //Output0Buffer.Phone = row["Phone"].ToString().Replace("\\", "");
                        //Output0Buffer.Email = row["Email"].ToString().Replace("\\", "");
                        //Output0Buffer.Address = row["Address"].ToString().Replace("\\", "");
                        //Output0Buffer.Address2 = row["Address2"].ToString().Replace("\\", "");
                        //Output0Buffer.City = row["City"].ToString().Replace("\\", "");
                        //Output0Buffer.State = row["State"].ToString().Replace("\\", "");
                        //Output0Buffer.Zip = row["zip"].ToString().Replace("\"", "");
                        //Output0Buffer.Deactivate = row["Deactivate"].ToString().Replace("\\", "");

                        numRows += 1;
                    }
                    WriteToDatabase(0, "Get Academic Sessions - Row Count Page Num: " + pagenum, numRows.ToString());
                }
                return null;
            }
            return null;

        }
        catch (Exception ex)
        {
            WriteToDatabase(1, "GetTeachers", ex.Message);
            throw;
        }

    }


    private async Task<string> GetFileSize(string baseURL, string accessToken)
    {
        try
        {
            using (var client = new HttpClient())
            {
                string uri = baseURL + pLocation + "/count";
                client.BaseAddress = new Uri(uri);
                //MessageBox.Show(uri, "teachers uri");

                client.DefaultRequestHeaders.Accept.Clear();
                client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));
                client.DefaultRequestHeaders.Add("Authorization", "Bearer " + accessToken);

                var stringContent = new StringContent("", Encoding.UTF8, "application/json");

                //Get file size
                HttpResponseMessage response = await client.PostAsync(new Uri(uri), stringContent);

                response.EnsureSuccessStatusCode();
                string jsonString = await response.Content.ReadAsStringAsync();

                //string jsonString = response.Content.ToString();//.ReadAsStringAsync();
                //MessageBox.Show(jsonString, "jsonstring");

                //Deserialize our JSON
                var FileSizeObject = JsonHelper.JsonDeserialize<FileSize>(jsonString);

                // return the Access Token.
                var FileSize = FileSizeObject.count;
                //MessageBox.Show(FileSize, "File Size");
                WriteToDatabase(0, "RecordCount", FileSize);
                return FileSize;
            }
        }
        catch (Exception ex)
        {
            //MessageBox.Show(ex.Message);
            //MessageBox.Show(ex.StackTrace);
            WriteToDatabase(1, "GetFileSize", ex.Message);
            //return null;
            throw;
        }

    }

    /// <summary>
    /// This method uses the OAuth Client Credentials Flow to get an Access Token to provide
    /// Authorization to the APIs.
    /// </summary>
    /// <returns></returns>
    private static async Task<string> GetAccessToken(string baseURL, string sendToken, string clientId, string clientSecret)
    {
        try
        {
            using (var client = new HttpClient())
            {

                string uri = baseURL + tokenURI;
                client.BaseAddress = new Uri(uri);

                //MessageBox.Show(uri, "access token uri");

                client.DefaultRequestHeaders.Accept.Clear();
                client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/x-www-form-urlencoded"));
                client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Basic", sendToken);


                List<KeyValuePair<string, string>> postData = new List<KeyValuePair<string, string>>();
                postData.Add(new KeyValuePair<string, string>("grant_type", "client_credentials"));
                postData.Add(new KeyValuePair<string, string>("scope", "scopename1%20scopename2%20scopenamex"));

                FormUrlEncodedContent content = new FormUrlEncodedContent(postData);
                //content.

                // Post to the Server and parse the response.
                HttpResponseMessage response = await client.PostAsync(new Uri(uri), content);
                //HttpResponseMessage response = await client.PostAsync(new Uri(uri));

                response.EnsureSuccessStatusCode();
                string jsonString = await response.Content.ReadAsStringAsync();

                //MessageBox.Show(jsonString, "jsonstring");

                //Deserialize our JSON
                var accessTokenObject = JsonHelper.JsonDeserialize<AccessToken>(jsonString);

                // return the Access Token.
                var token = accessTokenObject.access_token;
                //MessageBox.Show(token, "access token");
                return token;
            }
        }
        catch (Exception ex)
        {
            //WriteToDatabase(1, "GetAccessToken", ex.Message);
            //MessageBox.Show(ex.Message);
            //MessageBox.Show(ex.StackTrace);
            //return null;
            throw ex;
        }
    }


    private string GetJsonString(string url, string clientId, string clientSecret)
    {
        string output = string.Empty;
        try
        {
            PowerShell pshell = PowerShell.Create();
            
            //Load script with parameters
            string spt = PSScript(url, clientId, clientSecret);

            //Add script to pipeliine
            pshell.AddScript(spt);

            //Execute the powershell script
            var outp = pshell.Invoke();

            output = outp[0].ImmediateBaseObject.ToString();
        }
        catch (Exception ex)
        {
            output = ex.InnerException.ToString();
        }

        return output;
    }


    /// <summary>
    /// Provisional sample using HttpRequestMessage to pass the body
    /// </summary>
    /// <param name="baseURL"></param>
    /// <param name="strAuth"></param>
    /// <returns></returns>
    private static async Task<string> GetAccessToken2(string baseURL, string strAuth)
    {
        try
        {
            string resToken = null;

            HttpClientHandler handler = new HttpClientHandler() { UseDefaultCredentials = false };
            using (var client = new HttpClient(handler))
            {

                string uri = baseURL + tokenURI;
                client.BaseAddress = new Uri(uri);
                string body = "grant_type=client_credentials&scope=scopename1%20scopename2%20scopenamex";


                client.DefaultRequestHeaders.Accept.Clear();
                client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/x-www-form-urlencoded"));
                //client.DefaultRequestHeaders.Add("apikey", apikey);
                client.DefaultRequestHeaders.Add("Authorization", "Basic " + strAuth);

                //client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Basic", strAuth);
                HttpRequestMessage req = new HttpRequestMessage(HttpMethod.Post, client.BaseAddress);
                req.Content = new StringContent(body, Encoding.UTF8, "application/x-www-form-urlencoded");

                List<KeyValuePair<string, string>> postData = new List<KeyValuePair<string, string>>();
                //postData.Add(new KeyValuePair<string, string>("grant_type", "client_credentials"));
                //postData.Add(new KeyValuePair<string, string>("scope", "scopename1%20scopename2%20scopenamex"));

                req.Content = new FormUrlEncodedContent(postData);
                HttpResponseMessage tokenResponse = client.PostAsync(uri, new FormUrlEncodedContent(postData)).Result;

                resToken = await tokenResponse.Content.ReadAsStringAsync();


                return resToken;
            }
        }
        catch (Exception ex)
        {
            //WriteToDatabase(1, "GetAccessToken", ex.Message);
            //MessageBox.Show(ex.Message);
            //MessageBox.Show(ex.StackTrace);
            //return null;
            throw ex;
        }
    }


    /// <summary>
    /// Provisional sample to get the access token using RestSharp; it fails to load the assembly
    /// </summary>
    /// <param name="baseURL"></param>
    /// <param name="sendToken"></param>
    /// <returns></returns>
    private string GetAccessToken3(string baseURL, string sendToken)
    {
        string uri = baseURL + tokenURI;
        var client = new RestClient(uri);
        client.Timeout = -1;
        var request = new RestRequest(Method.POST);
        request.AddHeader("Authorization", "Basic " + sendToken);
        request.AddHeader("Content-Type", "application/x-www-form-urlencoded");
        request.AddParameter("application/x-www-form-urlencoded", "grant_type=client_credentials&scope=scopename1%20scopename2%20scopenamex", ParameterType.RequestBody);
        IRestResponse response = client.Execute(request);
        Console.WriteLine(response.Content);


        return "";
    }

    public string EncodeTo64(string toEncode)
    {
        byte[] toEncodeAsBytes = System.Text.ASCIIEncoding.ASCII.GetBytes(toEncode);
        string returnValue = System.Convert.ToBase64String(toEncodeAsBytes);
        return returnValue;

    }
    public class JsonHelper
    {
        /// <summary>
        /// JSON Serialization
        /// </summary>
        public static string JsonSerializer<T>(T t)
        {
            DataContractJsonSerializer ser = new DataContractJsonSerializer(typeof(T));
            MemoryStream ms = new MemoryStream();
            ser.WriteObject(ms, t);
            string jsonString = Encoding.UTF8.GetString(ms.ToArray());
            ms.Close();
            return jsonString;
        }
        /// <summary>
        /// JSON Deserialization
        /// </summary>
        public static T JsonDeserialize<T>(string jsonString)
        {
            DataContractJsonSerializer ser = new DataContractJsonSerializer(typeof(T));
            MemoryStream ms = new MemoryStream(Encoding.UTF8.GetBytes(jsonString));
            T obj = (T)ser.ReadObject(ms);
            return obj;
        }
    }

    public class AcademicSessions
    {
        public string ClientID { get; set; }
        public string SourcedId { get; set; }
        public string Status { get; set; }
        public string DateLastModified { get; set; }
        public string Title { get; set; }
        public string Type { get; set; }
        public string StartDate { get; set; }
        public string EndDate { get; set; }
        public AcademicParent Parent  { get; set; }
        public string SchoolYear { get; set; }

    }

    public class AcademicParent
    {
        public string Href { get; set; }
        public string SourcedId { get; set; }
        public string Type { get; set; }
    }

    public class AccessToken
    {
        public string access_token { get; set; }
        public string token_type { get; set; }
        public string expires_in { get; set; }
    }

    public class FileSize
    {
        public string count { get; set; }

    }



    public DataTable JsonStringToDataTable(string jsonString)
    {
        try
        {
            DataTable dt = new DataTable();
            string[] jsonStringArray = Regex.Split(jsonString.Replace("[", "").Replace("]", ""), "},{");
            List<string> ColumnsName = new List<string>();
            foreach (string jSA in jsonStringArray)
            {
                string[] jsonStringData = Regex.Split(jSA.Replace("{", "").Replace("}", ""), ",");
                foreach (string ColumnsNameData in jsonStringData)
                {
                    try
                    {
                        int idx = ColumnsNameData.IndexOf(":");
                        string ColumnsNameString = ColumnsNameData.Substring(0, idx - 1).Replace("\"", "");
                        if (!ColumnsName.Contains(ColumnsNameString))
                        {
                            ColumnsName.Add(ColumnsNameString);
                        }
                    }
                    catch //(Exception ex)
                    {
                        WriteToDatabase(1, "JsonStringToDataTable: Columns", (string.Format("Error Parsing Column Name : {0}", ColumnsNameData)));
                    }
                }
                break;
            }
            foreach (string AddColumnName in ColumnsName)
            {
                dt.Columns.Add(AddColumnName);
            }
            foreach (string jSA in jsonStringArray)
            {
                string[] RowData = Regex.Split(jSA.Replace("{", "").Replace("}", ""), ",");
                DataRow nr = dt.NewRow();
                foreach (string rowData in RowData)
                {
                    try
                    {
                        int idx = rowData.IndexOf(":");
                        string RowColumns = rowData.Substring(0, idx - 1).Replace("\"", "").Replace("\\", "");
                        string RowDataString = rowData.Substring(idx + 1).Replace("\"", "").Replace("\\", "");
                        nr[RowColumns] = RowDataString;
                    }
                    catch //(Exception ex)
                    {
                        WriteToDatabase(1, "JsonStringToDataTable: For each row", (string.Format("Error Parsing Row  Name : {0}", rowData)));
                        continue;
                    }
                }
                dt.Rows.Add(nr);
            }
            return dt;
        }
        catch (Exception ex)
        {
            WriteToDatabase(1, "JsonStringToDataTable", ex.Message);
            return null;
        }
    }



    public string cleanJsonString(string jsonString)
    {

        jsonString = jsonString.Replace("{\"name\":\"schoolstaff\",\"record\":[", "");
        jsonString = jsonString.Replace("\"_name\":\"schoolstaff\",", "");
        jsonString = jsonString.Replace("],\"@extensions\":\"s_ssf_ncea_x\"}", "");
        jsonString = jsonString.Replace(",\"@extensions\":\"u_schoolstaffuserfields,s_ssf_ncea_x\"", "");

        return jsonString;
    }


    public void WriteToDatabase(int Error, string Area, string LogInfo)
    {
        try
        {
            //MessageBox.Show("WriteToDatabase");
            var ConnString = Connections.PSDB.ConnectionString;

            using (SqlConnection conn = new SqlConnection(Connections.PSDB.ConnectionString))
            {
                if (conn.State != ConnectionState.Open) conn.Open();
                //string insertText = "Insert into OneRoster.LogFile (ClientUID, FileType, Area, LogInfo) Values (@ClientUID, @FileType, @Area, @LogInfo ) ";
                SqlCommand cmd = new SqlCommand("spLogInfo", conn);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("@ClientUID", SqlDbType.Int).Value = Variables.ClientOneRosterID;
                cmd.Parameters.Add("@Error", SqlDbType.Int).Value = Error;
                cmd.Parameters.Add("@FileType", SqlDbType.VarChar, 50).Value = processType;
                cmd.Parameters.Add("@Area", SqlDbType.VarChar, 100).Value = Area;
                cmd.Parameters.Add("@LogInfo", SqlDbType.VarChar, 1000).Value = LogInfo;
                cmd.ExecuteNonQuery();
            }
        }
        catch //(Exception ex)
        {
            throw;
        }
    }



    public string PSScript(string url, string key, string secret)
    {
        StringBuilder param = new StringBuilder();
        param.Append("param \n");
        param.Append("( \n");
        param.Append("  [Parameter(Position = 1)] \n");
        param.Append("  [uri]$Uri = '" + url + "/', \n");
        param.Append("  [Parameter(Position = 2)]");
        param.Append("  [string]$Secretkey = '" + key + "', \n");
        param.Append("  [Parameter(Position = 3)] \n");
        param.Append("  [string]$Passphrase = '" + secret + "' \n");
        param.Append(") \n");
        param.Append("\n");

        string token = PSAccessToken();
        string sessions = PSAcademicSessions();

        param.Append(token);
        param.Append(sessions);



        return param.ToString();
    }

    public string PSAccessToken()
    {
        StringBuilder scpt = new StringBuilder();
        scpt.Append("function Get-AccessToken \n");
        scpt.Append("{ \n");
        scpt.Append("   [uri]$requestUri = $uri.Scheme + '://' + $uri.Host + '/token' \n");
        scpt.Append("\n");
        scpt.Append("   $basicAuth = [System.Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes(\"${Secretkey}:${Passphrase}\")) \n");
        scpt.Append("\n");
        scpt.Append("   $headers = @{ \n");
        scpt.Append("       Authorization = \"Basic ${basicAuth}\" \n");
        scpt.Append("   }");
        scpt.Append("\n");
        scpt.Append("   $body = 'grant_type=client_credentials&scope=scopename1%20scopename2%20scopenamex' \n");
        scpt.Append("\n");
        scpt.Append("$paramInvokeRestMethod = @{ \n");
        scpt.Append("   Method		    = 'Post' \n");
        scpt.Append("   Uri			    = $requestUri \n");
        scpt.Append("   Headers		    = $headers \n");
        scpt.Append("   Body		    = $body \n");
        scpt.Append("   ContentType	    = 'application/x-www-form-urlencoded' \n");
        scpt.Append("   UseBasicParsing = $true \n");
        scpt.Append("} \n");
        scpt.Append("\n");
        scpt.Append("   $access = Invoke-RestMethod @paramInvokeRestMethod \n");
        scpt.Append("\n");
        scpt.Append("   if ($access.access_token) \n");
        scpt.Append("   { \n");
        scpt.Append("       return $access \n");
        scpt.Append("   } \n");
        scpt.Append("   else \n");
        scpt.Append("   { \n");
        scpt.Append("       throw \"No access token returned\" \n");
        scpt.Append("   } \n");
        scpt.Append("} \n");

        return scpt.ToString();
    }


    public string PSAcademicSessions()
    {
        StringBuilder scpt = new StringBuilder();
        scpt.Append("[uri]$requestUri = $uri.Scheme + '://' + $uri.Host + '/ims/oneroster/v1p1/academicSessions' \n");
        scpt.Append("\n");
        scpt.Append("$access = Get-AccessToken \n");
        scpt.Append("$bearerToken = $access.access_token \n");
        scpt.Append("\n");
        scpt.Append("$headers = @{ \n");
        scpt.Append("   Authorization		   = \"Bearer ${bearerToken}\" \n");
        scpt.Append("} \n");
        scpt.Append("\n");
        scpt.Append("$paramInvokeRestMethod = @{ \n");
        scpt.Append("   Method		    = 'Get' \n");
        scpt.Append("   Uri			    = $requestUri \n");
        scpt.Append("   Headers		    = $headers \n");
        scpt.Append("   UseBasicParsing = $true \n");
        scpt.Append("} \n");
        scpt.Append("\n");
        scpt.Append("$response = Invoke-RestMethod @paramInvokeRestMethod \n");
        scpt.Append("$response.academicSessions | ConvertTo-Json -Depth 16 \n");
        scpt.Append("\n");
        scpt.Append("\n");
        scpt.Append("application/x-www-form-urlencoded \n");

        return scpt.ToString();
    }





}




]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[packages.config]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>

</packages>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 PSDB
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"PSDB").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String ClientKey
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientKey"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Int32 ClientOneRosterID
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["ClientOneRosterID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientSecret
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientSecret"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientServer
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientServer"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_9cc764db5dc84a06abd71b37420e3e86.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{FF2D54D4-CBFE-43F2-A697-E0F017938BC8}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_9cc764db5dc84a06abd71b37420e3e86</RootNamespace>
    <AssemblyName>SC_9cc764db5dc84a06abd71b37420e3e86</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="RestSharp">
      <Private>True</Private>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.ComponentModel.Composition" />
    <Reference Include="System.Data" />
    <Reference Include="System.Management.Automation, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL">
      <HintPath>C:\Users\mmartinez\AppData\Local\Temp\Vsta\SSIS_SC150\VstaRERTd4peRUWzE0WVsyOyaA\packages\Microsoft.PowerShell.5.ReferenceAssemblies.1.1.0\lib\net4\System.Management.Automation.dll</HintPath>
    </Reference>
    <Reference Include="System.Memory, Version=4.0.1.1, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51, processorArchitecture=MSIL">
      <HintPath>C:\Users\mmartinez\AppData\Local\Temp\Vsta\SSIS_SC150\VstajPb4tXYoDEi5c0j1D5timQ\packages\System.Memory.4.5.3\lib\netstandard2.0\System.Memory.dll</HintPath>
    </Reference>
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Numerics" />
    <Reference Include="System.Runtime.Serialization" />
    <Reference Include="System.Security" />
    <Reference Include="System.Web" />
    <Reference Include="System.Web.Extensions" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="app.config" />
    <None Include="packages.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <Content Include="PowerShellScript.txt" />
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_9cc764db5dc84a06abd71b37420e3e86.Properties.Settings.get_Default():SC_9cc764db5dc84a06abd71b37420e3e86.Properties.Sett" +
    "ings")]

namespace SC_9cc764db5dc84a06abd71b37420e3e86.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 ClientID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool ClientID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String SourcedId
    {
        set
        {
            this[1] = value;
        }
    }
    public bool SourcedId_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Status
    {
        set
        {
            this[2] = value;
        }
    }
    public bool Status_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String DateLastModified
    {
        set
        {
            this[3] = value;
        }
    }
    public bool DateLastModified_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Title
    {
        set
        {
            this[4] = value;
        }
    }
    public bool Title_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Type
    {
        set
        {
            this[5] = value;
        }
    }
    public bool Type_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String StartDate
    {
        set
        {
            this[6] = value;
        }
    }
    public bool StartDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String EndDate
    {
        set
        {
            this[7] = value;
        }
    }
    public bool EndDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ParentSourcedId
    {
        set
        {
            this[8] = value;
        }
    }
    public bool ParentSourcedId_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String SchoolYear
    {
        set
        {
            this[9] = value;
        }
    }
    public bool SchoolYear_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_9cc764db5dc84a06abd71b37420e3e86</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_9cc764db5dc84a06abd71b37420e3e86</msb:DisplayName>
    <msb:ProjectId>{29A21F1F-18AC-4F28-A7D3-F31456E1E2EA}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_9cc764db5dc84a06abd71b37420e3e86.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="packages.config" />
    <msb:File Include="app.config" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="PowerShellScript.txt" />
    <msb:Breakpoint Include="ea0ead77748a47c9b5a0b0b35d6de52e">
      <msb:FileName>main.cs</msb:FileName>
      <msb:ColumnNumber>9</msb:ColumnNumber>
      <msb:Enabled>True</msb:Enabled>
      <msb:LineNumber>141</msb:LineNumber>
      <msb:Condition>
      </msb:Condition>
      <msb:ConditionType>1</msb:ConditionType>
      <msb:Language>C#</msb:Language>
      <msb:HitCountType>1</msb:HitCountType>
      <msb:HitCountTarget>1</msb:HitCountTarget>
    </msb:Breakpoint>
    <msb:Breakpoint Include="c38515f4be75453bb30002c93ee5929b">
      <msb:FileName>main.cs</msb:FileName>
      <msb:ColumnNumber>5</msb:ColumnNumber>
      <msb:Enabled>True</msb:Enabled>
      <msb:LineNumber>246</msb:LineNumber>
      <msb:Condition>
      </msb:Condition>
      <msb:ConditionType>1</msb:ConditionType>
      <msb:Language>C#</msb:Language>
      <msb:HitCountType>1</msb:HitCountType>
      <msb:HitCountTarget>1</msb:HitCountTarget>
    </msb:Breakpoint>
    <msb:Breakpoint Include="dfa4dee7c5bf48acb211c43f56c89595">
      <msb:FileName>main.cs</msb:FileName>
      <msb:ColumnNumber>13</msb:ColumnNumber>
      <msb:Enabled>True</msb:Enabled>
      <msb:LineNumber>193</msb:LineNumber>
      <msb:Condition>
      </msb:Condition>
      <msb:ConditionType>1</msb:ConditionType>
      <msb:Language>C#</msb:Language>
      <msb:HitCountType>1</msb:HitCountType>
      <msb:HitCountTarget>1</msb:HitCountTarget>
    </msb:Breakpoint>
    <msb:Breakpoint Include="3fe494c0acc54414840bfef5d3a1eb91">
      <msb:FileName>main.cs</msb:FileName>
      <msb:LineNumber>611</msb:LineNumber>
      <msb:ColumnNumber>9</msb:ColumnNumber>
      <msb:Enabled>True</msb:Enabled>
      <msb:ConditionType>1</msb:ConditionType>
      <msb:Condition>
      </msb:Condition>
      <msb:Language>C#</msb:Language>
      <msb:HitCountType>1</msb:HitCountType>
      <msb:HitCountTarget>1</msb:HitCountTarget>
    </msb:Breakpoint>
    <msb:Breakpoint Include="1736dd46cd564f7d8b81680bf5203d64">
      <msb:FileName>main.cs</msb:FileName>
      <msb:ColumnNumber>13</msb:ColumnNumber>
      <msb:Enabled>True</msb:Enabled>
      <msb:LineNumber>230</msb:LineNumber>
      <msb:Condition>
      </msb:Condition>
      <msb:ConditionType>1</msb:ConditionType>
      <msb:Language>C#</msb:Language>
      <msb:HitCountType>1</msb:HitCountType>
      <msb:HitCountTarget>1</msb:HitCountTarget>
    </msb:Breakpoint>
    <msb:Breakpoint Include="9b9f74b767064b078de139fbdfcc970e">
      <msb:FileName>main.cs</msb:FileName>
      <msb:LineNumber>451</msb:LineNumber>
      <msb:ColumnNumber>13</msb:ColumnNumber>
      <msb:Enabled>True</msb:Enabled>
      <msb:ConditionType>1</msb:ConditionType>
      <msb:Condition>
      </msb:Condition>
      <msb:Language>C#</msb:Language>
      <msb:HitCountType>1</msb:HitCountType>
      <msb:HitCountTarget>1</msb:HitCountTarget>
    </msb:Breakpoint>
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_9cc764db5dc84a06abd71b37420e3e86")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_9cc764db5dc84a06abd71b37420e3e86")]
[assembly: AssemblyCopyright("Copyright @  2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_9cc764db5dc84a06abd71b37420e3e86.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_9cc764db5dc84a06abd71b37420e3e86.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_9cc764db5dc84a06abd71b37420e3e86.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_9cc764db5dc84a06abd71b37420e3e86.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_9cc764db5dc84a06abd71b37420e3e86.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[app.config]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="RestSharp" publicKeyToken="598062e77f915f75" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-106.11.7.0" newVersion="106.11.7.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
</configuration>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[PowerShellScript.txt]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[param
(
	[Parameter(Position = 1)]
	[uri]$Uri = '{0},
	[Parameter(Position = 2)]
	[string]$Secretkey = '{1}',
	[Parameter(Position = 3)]
	[string]$Passphrase = '{2}'
)

function Get-AccessToken
{
    [uri]$requestUri = $uri.Scheme + '://' + $uri.Host + '/token'
	
	$basicAuth = [System.Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes("${Secretkey}:${Passphrase}"))
	
	$headers = @{
		Authorization = "Basic ${basicAuth}"
	}
	
	$body = 'grant_type=client_credentials&scope=scopename1%20scopename2%20scopenamex'
	
	$paramInvokeRestMethod = @{
		Method		    = 'Post'
		Uri			    = $requestUri
		Headers		    = $headers
		Body		    = $body
		ContentType	    = 'application/x-www-form-urlencoded'
		UseBasicParsing = $true
	}
	
	$access = Invoke-RestMethod @paramInvokeRestMethod
	
	if ($access.access_token)
	{
		return $access
	}
	else
	{
		throw "No access token returned"
	}
}

[uri]$requestUri = $uri.Scheme + '://' + $uri.Host + '/ims/oneroster/v1p1/academicSessions'

$access = Get-AccessToken
$bearerToken = $access.access_token

$headers = @{
	Authorization		   = "Bearer ${bearerToken}"
}


$paramInvokeRestMethod = @{
	Method		    = 'Get'
	Uri			    = $requestUri
	Headers		    = $headers
	UseBasicParsing = $true
}

$response = Invoke-RestMethod @paramInvokeRestMethod
$response.academicSessions | ConvertTo-Json -Depth 16


application/x-www-form-urlencoded
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_9cc764db5dc84a06abd71b37420e3e86.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[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
BgBQAMA1AAAAAOEBogYhAFAA0DUAAAAA4QHYFgYAUQBAOAAAAADhAaIGIQBRAFA4AAAAAOEB2BYG
AFIAoDoAAAAA4QGiBiEAUgCwOgAAAADhAdgWBgBTALg8AAAAAOEBogYhAFMAAAAAAAAAAAABAOEU
AAAAAAAAAAABAPsMAAACAGANAAADANAKAAABALYCAAACAGANAAABALYCAAACADkNAAADAHUDAAAE
AAAVAAABAAMNAAACAHUDAAADAAAVAAABALYCAAACAJALAAABALYCAAACADkNAAABAMUFAAABAGgL
AAABAGgLAAABAKYRAAACAN4CAAADAG0PAAABAAMNAAACAGMXAAADAA0VAAABAFoQAAACAMESAAAD
AIMPAAABALEKAAABALEKAAABALEKAAABALEKAAABALEKAAABALEKAAABALEKAAABALEKAAABALEK
AAABALEKAAABALEKAAABALEKAAABALEKAAABALEKAAABALEKAAABALEKAAABALEKAAABALEKAAAB
ALEKAAABALEKAAABAGAUAAACANMRAAADACMUAAAEAIMPAAABAKkVAAABAKkVAAABALEKAAABAC8X
AAABAGgLAAABALEKAAABALEKAAABALEKAAABALEKAAABALEKAAABALEKAAABALEKAAABALEKAAAB
ALEKAAABALEKAAABALEKAAABALEKAAABALEKAAABALEKAAABALEKAAABALEKAAABALEKAAABALIG
AAABALIGAAABALIGAAABALIGAAABALIGAAABALIGDgB1AA8AdQAQAHUAEQB1ABIAdQATAHUACQDG
EQEAEQDGEQYAGQDGEQoAKQDGERAAMQDGERAAOQDGERAAQQDGERAASQDGERAAUQDGERAAWQDGERAA
YQDGERAAaQDGEQYAeQDGERUAiQDGERsA2QDGEQYA6QDYFgYA6QCiBiEA+QDGEQYAcQHGEQYAkQHG
EScAYQFWCgYAYQFhCgYAoQEjFQYADAAzCDkADAB7FkIADACcC08AFAAzCDkAFAB7FkIAFACcC08A
HAAzCDkAHAB7FkIAHACcC08AqQGEF5EAsQEzCJQAsQFUFpoAsQEBBqEAJAAUDbUAwQG9FLsAkQBz
C78AmQAMD8MAqQGbFNcAyQHGERAAyQHAFgEAoQDGEd0AoQASEOQAoQAsEewAyQFlCvcA6QHkFb8A
8QGFBgAB+QGjAgUB+QG4EgsBAQImCxEBqQDGEQYAqQGVBTwBCQIoFUIBLADGEQYAqQHpCk8BqQGG
C1QBLAAqE1oBLAB+A2ABqQGiFGYBLAC4EWwBNADYFXsBqQAzE4ABEQJ+A4YBNADYFo0BIQHuBwYA
qQBAF5EBqQGGC5YBwQAdDZsBqQB+FKEBIQJ+A6cBmQDOBb8AaQE1C78AyQDGERAAKQI6CLIBKQKO
DQYAOQLGEbgBQQL8Br8BOQIrFMYBUQJ+A8wBcQJtCtYBUQJ+A9sBQQJ0F+YBeQLGEQYAeQKDBeoB
qQGbFPEBSQHGEfgBSQEdDQQCSQHeDAEAgQLGERAASQE5FwYASQEUFQYASQEXFY0BYQHGEQYAYQGX
Ag4CYQHVEhYCkQDGEQYAYQHvAhwCiQKODiICkQJqBigCmQJ1EC8CYQGiEjUCoQIUDTsCYQEcF0IC
qQLtFkgCcQA8Bk8CcQBnF1cCeQHGEV0CmQHGEQYA0QLGERUA0QDGEQYA2QLVFG0C+QEgAgUB0QBN
F3UC+QF8C3oC4QLoBwYA0QDGEYAC2QKyFIYC6QK3CpwC6QLmDKEC+QLGEQYA+QLdCqgCDAAfD7UC
DABPFWABDACiBiEAFAAfD7UCFABPFWABFACiBiEAAQI7AfQCaQL2B/kCaQJzC78AqQGbFAADKQHG
EQYAAQPGERAAKQFKFAYDKQEJFA0DCQNAFhMDRAAMEAYAGQPGERAARAB+A2ABIQN+AycDAQHGES0D
KQE7AzYDTABGEU4DVADXA40BFADAA2EDVABFFXsBEQGtBXkDEQHkFX8DKQMpA4UDXABGEU4DZADX
A40BZABFFXsBMQO4EaUDGQHYFbsAGQHYFo0BHADAA2EDHAAfD7UCHABPFWABHACiBiEAOQPGEScD
CQNVDv8DbADGEQYAdADGERoEbAB+A2ABMQHGESIEOQHGEQYAOQEQE2wEKQHGEXEEUQO3FngEKQE6
FH4EWQPGEYQEWQPwFY4EKQE7A5UETAA6FXsBJABzALgHLgALAP8FLgATAAgGLgAbACcGLgAjADAG
LgArAFkGLgAzAFkGLgA7AFkGLgBDADAGLgBLAF8GLgBTAFkGLgBbAHYGQwBjALMHZABzALgHgABr
AMAGoABrAO4GwABrABoH4ABrAEQH4wCbALMHAAFrAGYHQAFrAIwHYQF7ALMHgQF7ALMHoQF7ALMH
wQF7ALMHwwF7ALMH4QF7ALMH4wF7ALMHAQJ7ALMHAwJ7ALMHIQJ7ALMHIwJ7ALMHQQJ7ALMHQwJ7
ALMHYQJ7ALMHYwJ7ALMHgQJ7ALMHoQJ7ALMHwQJ7ALMH4QJ7ALMHAQN7ALMHIQN7ALMHQQN7ALMH
SQOjACcGYQN7ALMHaQOjACcGgQN7ALMHYAh7ALMHgAh7ALMHoAh7ALMHwAh7ALMH4Ah7ALMHAAl7
ALMHIAl7ALMHQAl7ALMHYAl7ALMHgAl7ALMHoAl7ALMHwAl7ALMH4Al7ALMHAAp7ALMHIAp7ALMH
QAp7ALMHYAp7ALMHgAp7ALMHoAp7ALMHwAp7ALMHAAt7ALMHIAt7ALMHQAt7ALMHYAt7ALMHgAt7
ALMHoAt7ALMH4At7ALMHAAx7ALMHIAx7ALMHQAx7ALMHYAx7ALMHgAx7ALMHwAx7ALMH4Ax7ALMH
QA2TALMHgA2TALMHwA2TALMHAA6TALMHQA6TALMHgA6TALMHLgBYAGgAcgCCAIwAyADSABcBrQEK
AmUCjQK7AswCqwPmA08EAwABAAUAFQAGABYABwAaAAgAHAAKAB0ACwAnAAwAKgANAC0AAACOAtcF
AAARDNsFAABrA98FAABADNsFAAB3FN8FAADQDNsFAACvA98FAABVDNsFAABkBt8FAABxDNsFAABA
B98FAACCDNsFAAApCN8FAAClDNsFAAAPCN8FAACSDNsFAABlA98FAAA6DNsFAAABEN8FAAC6DNsF
AABiAuMFAABZF98FAABrAtcFAADzFN8FAABVEd8FAABlEOkFAACPB+8FAAAyFfUFAACOAt8FAABr
A98FAAB3FN8FAACvA98FAABkBt8FAABAB98FAAApCN8FAAAPCN8FAADRFfoFAAABEN8FAAD+Ct8F
AABrA98FAABAB98FAACBDd8FAABYB98FAACmDd8FAAA6Ft8FAQAWAAMAAQAXAAUAAQAYAAcAAQAZ
AAkAAQAaAAsAAQAbAA0AAQAcAA8AAQAdABEAAQAeABMAAQAfABUAAQAgABcAAQAhABkAAQAiABsA
AQAjAB0AAQAkAB8AAQAlACEAAQAmACMAAQAnACUAAQAoACcAAQApACkAAgAzACsAAgA1AC0AAgA2
AC8AAgA3ADEAAgA4ADMAAgA6ADUAAgA7ADcAAQA8ADcAAgA9ADkAAgBDADsAAQBEADsAAgBFAD0A
AQBGAD0AAgBHAD8AAQBIAD8AAgBJAEEAAQBKAEEAAgBLAEMAAQBMAEMAAgBNAEUAAQBOAEUAAgBP
AEcAAQBQAEcAAgBRAEkAAQBSAEkAAgBTAEsAAQBUAEsAAgBVAE0AAQBWAE0AAgBYAE8AAQBZAE8A
AgBaAFEAAQBbAFEAAgBcAFMAAQBdAFMAAgBfAFUAAQBgAFUAAgBhAFcAAQBiAFcAAgBjAFkAAQBk
AFkAAgBmAFsAAQBnAFsADgDSACEADgDUACMADwDWACEADwDYACMAEADaACEAEADcACMAEQDeACEA
EQDgACMAEgDiACEAEgDkACMAEwDmACEAEwDoACMAMwBdAHcArABJAXUBagIeA0YDWAONA5MDBgQS
BASAAAABAAAAAAAAAAAAAAAAAMIBAAAEAAAAAAAAAAAAAACuBAUDAAAAAA8AAAAAAAAAAAAAALcE
XhYAAAAABAAAAAAAAAAAAAAArgRjBwAAAABqAAsABwAAAAAAAADABNQPAAAAAAQAAAAAAAAAAAAA
AK4E4wIAAAAABAAAAAAAAAAAAAAAyQTeDwAAAAAPAAAAAAAAAAAAAAC3BJYWAAAAAA8AAAAAAAAA
AAAAALcEjQ8AAAAABAAAAAAAAAAAAAAArgQmDQAAAAADAAAAAAAAAAAAAADSBNENAAAAAA8AAAAA
AAAAAAAAALcEsA8AAAAABAAAAAAAAAAAAAAArgQYDgAAAAAEAAAAAAAAAAAAAADSBD8TAAAAAAAA
AAABAAAAIRIAAAkAAgAKAAIACwACAAwAAgANAAIADgACAA8AAgAQAAIAEQACABIAAgATAAIAAAAA
AIEA3AIAAAAAgwDcAjMASgA5AGMAOQBtAD8AfQA/AIcAPwDNAPcArwInAWwDJwGaAz0ByQM9AdYD
ggDhAz0BMgQ9AT8EggBKBD0BowQAAAAAAElEVFNDb21wb25lbnRNZXRhRGF0YTEwMABJRFRTVmFy
aWFibGUxMDAASURUU1J1bnRpbWVDb25uZWN0aW9uQ29sbGVjdGlvbjEwMABJRFRTUnVudGltZUNv
bm5lY3Rpb24xMDAASURUU0Nvbm5lY3Rpb25NYW5hZ2VyMTAwAElEVFNWYXJpYWJsZXMxMDAASURU
U0V2YWx1YXRvckNvbnRleHQxMDAAPEdldEFjY2Vzc1Rva2VuPmRfXzEwADw+dV9fMQBJRW51bWVy
YWJsZWAxAFRhc2tgMQBIdHRwSGVhZGVyVmFsdWVDb2xsZWN0aW9uYDEAQXN5bmNUYXNrTWV0aG9k
QnVpbGRlcmAxAFRhc2tBd2FpdGVyYDEATGlzdGAxADxHZXRBY2Nlc3NUb2tlbjI+ZF9fMTIAVG9J
bnQzMgA8cGFnZVNpemU+NV9fMgA8Y2xpZW50PjVfXzIAPD51X18yAEtleVZhbHVlUGFpcmAyAEdl
dEFjY2Vzc1Rva2VuMgA8cGFnZXM+NV9fMwBHZXRBY2Nlc3NUb2tlbjMARW5jb2RlVG82NAA8aT41
X180ADxwYWdlbnVtPjVfXzUAU0NfOWNjNzY0ZGI1ZGM4NGEwNmFiZDcxYjM3NDIwZTNlODYAPFBy
b2Nlc3NBY2VkZW1pY1Nlc3Npb25zPmRfXzYAPEdFVEFjYWRlbWljU2Vzc2lvbnNEVD5kX183AGdl
dF9VVEY4ADxHZXRBY2FkZW1pY1Nlc3Npb25zPmRfXzgAPEdldEZpbGVTaXplPmRfXzkAPE1vZHVs
ZT4AZ2V0X1BTREIAZ2V0X0NsaWVudE9uZVJvc3RlcklEAGdldF9DbGllbnRJRABzZXRfQ2xpZW50
SUQAR2V0T3V0cHV0SUQAZ2V0X0FTQ0lJAHRva2VuVVJJAGJhc2VVUkwAU3lzdGVtLklPAEdFVEFj
YWRlbWljU2Vzc2lvbnNEVABBcmVhAFN5c3RlbS5EYXRhAGdldF9Db21wb25lbnRNZXRhRGF0YQBt
c2NvcmxpYgBTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYwBSZWFkQXNTdHJpbmdBc3luYwBQb3N0
QXN5bmMAZ2V0X1NvdXJjZWRJZABzZXRfU291cmNlZElkAHNldF9QYXJlbnRTb3VyY2VkSWQAY2xp
ZW50SWQAQWRkAE1hcmtPdXRwdXRzRmluaXNoZWQAZ2V0X0RhdGVMYXN0TW9kaWZpZWQAc2V0X0Rh
dGVMYXN0TW9kaWZpZWQAQXdhaXRVbnNhZmVPbkNvbXBsZXRlZABnZXRfSXNDb21wbGV0ZWQAPENs
aWVudElEPmtfX0JhY2tpbmdGaWVsZAA8U291cmNlZElkPmtfX0JhY2tpbmdGaWVsZAA8RGF0ZUxh
c3RNb2RpZmllZD5rX19CYWNraW5nRmllbGQAPFRpdGxlPmtfX0JhY2tpbmdGaWVsZAA8VHlwZT5r
X19CYWNraW5nRmllbGQAPHRva2VuX3R5cGU+a19fQmFja2luZ0ZpZWxkADxFbmREYXRlPmtfX0Jh
Y2tpbmdGaWVsZAA8U3RhcnREYXRlPmtfX0JhY2tpbmdGaWVsZAA8SHJlZj5rX19CYWNraW5nRmll
bGQAPGFjY2Vzc190b2tlbj5rX19CYWNraW5nRmllbGQAPGV4cGlyZXNfaW4+a19fQmFja2luZ0Zp
ZWxkADxTY2hvb2xZZWFyPmtfX0JhY2tpbmdGaWVsZAA8U3RhdHVzPmtfX0JhY2tpbmdGaWVsZAA8
UGFyZW50PmtfX0JhY2tpbmdGaWVsZAA8Y291bnQ+a19fQmFja2luZ0ZpZWxkAERiQ29tbWFuZABT
cWxDb21tYW5kAEFwcGVuZABIdHRwTWV0aG9kAFJlcGxhY2UAZGVmYXVsdEluc3RhbmNlAEVuc3Vy
ZVN1Y2Nlc3NTdGF0dXNDb2RlAHRvRW5jb2RlAGdldF9NZXNzYWdlAEh0dHBSZXNwb25zZU1lc3Nh
Z2UASHR0cFJlcXVlc3RNZXNzYWdlAEludm9rZQBKc29uU3RyaW5nVG9EYXRhVGFibGUASURpc3Bv
c2FibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAQ29uc29sZQBnZXRfVGl0
bGUAc2V0X1RpdGxlAEdldFJ1bnRpbWVDb25uZWN0aW9uQnlOYW1lAFdyaXRlTGluZQBJQXN5bmNT
dGF0ZU1hY2hpbmUAU2V0U3RhdGVNYWNoaW5lAHN0YXRlTWFjaGluZQBNaWNyb3NvZnQuU3FsU2Vy
dmVyLkR0cy5QaXBlbGluZQBnZXRfVHlwZQBzZXRfVHlwZQBTcWxEYlR5cGUAc2V0X0NvbW1hbmRU
eXBlAFZhbHVlVHlwZQBTZWN1cml0eVByb3RvY29sVHlwZQBQYXJhbWV0ZXJUeXBlAHByb2Nlc3NU
eXBlAGdldF90b2tlbl90eXBlAHNldF90b2tlbl90eXBlAFN5c3RlbS5Db3JlAGdldF9DdWx0dXJl
AHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBJbnRlcm5hbERhdGFDb2xsZWN0aW9uQmFzZQBB
cHBsaWNhdGlvblNldHRpbmdzQmFzZQBXcml0ZVRvRGF0YWJhc2UASVJlc3RSZXNwb25zZQBDbG9z
ZQBEaXNwb3NlAFRyeVBhcnNlAGdldF9FbmREYXRlAHNldF9FbmREYXRlAGdldF9TdGFydERhdGUA
c2V0X1N0YXJ0RGF0ZQBDcmVhdGUAZ2V0X1N0YXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbm5l
Y3Rpb25TdGF0ZQA8PjFfX3N0YXRlAER5bmFtaWNBdHRyaWJ1dGUAQ29tcGlsZXJHZW5lcmF0ZWRB
dHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRl
AEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzeW5jU3Rh
dGVNYWNoaW5lQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1l
d29ya0F0dHJpYnV0ZQBEZWJ1Z2dlckhpZGRlbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRp
b25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4
YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdo
dEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJs
eUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0
ZQBQb3N0RXhlY3V0ZQBzZXRfVmFsdWUAQXV0aGVudGljYXRpb25IZWFkZXJWYWx1ZQBNZWRpYVR5
cGVXaXRoUXVhbGl0eUhlYWRlclZhbHVlAHZhbHVlAHNldF9FeHBlY3QxMDBDb250aW51ZQBHZXRG
aWxlU2l6ZQBKc29uRGVzZXJpYWxpemUASW5kZXhPZgBnZXRfSHJlZgBzZXRfSHJlZgBFbmNvZGlu
ZwBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvQmFzZTY0U3RyaW5nAGdldF9Db25uZWN0aW9u
U3RyaW5nAGNsZWFuSnNvblN0cmluZwBHZXRKc29uU3RyaW5nAGpzb25TdHJpbmcAVG9TdHJpbmcA
R2V0U3RyaW5nAFN1YnN0cmluZwBzdHJBdXRoAFVyaQBnZXRfVGFzawBTeXN0ZW0uQ29sbGVjdGlv
bnMuT2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNDXzljYzc2NGRiNWRjODRhMDZh
YmQ3MWIzNzQyMGUzZTg2LmRsbABQb3dlclNoZWxsAHNldF9DbGllbnRJRF9Jc051bGwAc2V0X1Nv
dXJjZWRJZF9Jc051bGwAc2V0X1BhcmVudFNvdXJjZWRJZF9Jc051bGwAc2V0X0RhdGVMYXN0TW9k
aWZpZWRfSXNOdWxsAHNldF9UaXRsZV9Jc051bGwAc2V0X1R5cGVfSXNOdWxsAHNldF9FbmREYXRl
X0lzTnVsbABzZXRfU3RhcnREYXRlX0lzTnVsbABzZXRfU2Nob29sWWVhcl9Jc051bGwAc2V0X1N0
YXR1c19Jc051bGwAU2V0TnVsbABzZXRfU2VjdXJpdHlQcm90b2NvbABiYXNlVXJsAHVybABNZW1v
cnlTdHJlYW0AZ2V0X0l0ZW0Ac2V0X0l0ZW0AU3lzdGVtAHJlc291cmNlTWFuAHNlbmRUb2tlbgBQ
U0FjY2Vzc1Rva2VuAEdldEFjY2Vzc1Rva2VuAGFjY2Vzc1Rva2VuAGdldF9hY2Nlc3NfdG9rZW4A
c2V0X2FjY2Vzc190b2tlbgBPcGVuAGdldF9leHBpcmVzX2luAHNldF9leHBpcmVzX2luAFNjcmlw
dE1haW4ARGF0YUNvbHVtbgBwTG9jYXRpb24AU3lzdGVtLk1hbmFnZW1lbnQuQXV0b21hdGlvbgBT
eXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUnVudGltZS5T
ZXJpYWxpemF0aW9uAFN5c3RlbS5XZWIuU2NyaXB0LlNlcmlhbGl6YXRpb24Ac2V0X0F1dGhvcml6
YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24ARGF0YUNvbHVtbkNvbGxlY3Rpb24AZ2V0X1J1bnRpbWVD
b25uZWN0aW9uQ29sbGVjdGlvbgBTcWxQYXJhbWV0ZXJDb2xsZWN0aW9uAERhdGFSb3dDb2xsZWN0
aW9uAERiQ29ubmVjdGlvbgBTcWxDb25uZWN0aW9uAEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24A
Z2V0X0lubmVyRXhjZXB0aW9uAFNldEV4Y2VwdGlvbgBTeXN0ZW0uRGF0YS5Db21tb24AU3lzdGVt
LlJ1bnRpbWUuU2VyaWFsaXphdGlvbi5Kc29uAEN1bHR1cmVJbmZvAExvZ0luZm8AT3V0cHV0TmFt
ZU1hcABPdXRwdXRNYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNSdW50aW1lV3JhcABNaWNyb3Nv
ZnQuU3FsU2VydmVyLkRUU1BpcGVsaW5lV3JhcABSZXN0U2hhcnAAU3lzdGVtLk5ldC5IdHRwAGdl
dF9TY2hvb2xZZWFyAHNldF9TY2hvb2xZZWFyAENsZWFyAEFkZEhlYWRlcgBTdHJpbmdCdWlsZGVy
ADw+dF9fYnVpbGRlcgBPdXRwdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1ZmZlcgBn
ZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9Db25uZWN0aW9uTWFuYWdlcgBTZXJ2aWNlUG9pbnRNYW5h
Z2VyAEh0dHBNZXNzYWdlSGFuZGxlcgBIdHRwQ2xpZW50SGFuZGxlcgBKc29uSGVscGVyAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUuV3JhcHBlcgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0
cy5QaXBlbGluZS5XcmFwcGVyAERiUGFyYW1ldGVyAEFkZFBhcmFtZXRlcgBTcWxQYXJhbWV0ZXIA
R2V0QXdhaXRlcgBnZXRfQ2xpZW50U2VydmVyAERhdGFDb250cmFjdEpzb25TZXJpYWxpemVyAFht
bE9iamVjdFNlcmlhbGl6ZXIASmF2YVNjcmlwdFNlcmlhbGl6ZXIARXJyb3IASUVudW1lcmF0b3IA
R2V0RW51bWVyYXRvcgAuY3RvcgAuY2N0b3IAT3V0cHV0SURzAFN5c3RlbS5EaWFnbm9zdGljcwBT
eXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU0NfOWNjNzY0
ZGI1ZGM4NGEwNmFiZDcxYjM3NDIwZTNlODYuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2Vz
AERlYnVnZ2luZ01vZGVzAFNDXzljYzc2NGRiNWRjODRhMDZhYmQ3MWIzNzQyMGUzZTg2LlByb3Bl
cnRpZXMAZ2V0X1JlYWRPbmx5VmFyaWFibGVzAEdldEJ5dGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMA
R2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwA8PjRfX3RoaXMAU3lzdGVtLlRocmVhZGluZy5UYXNr
cwBzZXRfVXNlRGVmYXVsdENyZWRlbnRpYWxzAENvbnRhaW5zAGdldF9Db2x1bW5zAFN5c3RlbS5X
ZWIuRXh0ZW5zaW9ucwBQU0FjYWRlbWljU2Vzc2lvbnMAR2V0QWNhZGVtaWNTZXNzaW9ucwBQcm9j
ZXNzQWNlZGVtaWNTZXNzaW9ucwBTeXN0ZW0uVGV4dC5SZWd1bGFyRXhwcmVzc2lvbnMAU3lzdGVt
LkNvbGxlY3Rpb25zAENvbm5lY3Rpb25zAFN5c3RlbS5OZXQuSHR0cC5IZWFkZXJzAEh0dHBIZWFk
ZXJzAEh0dHBSZXF1ZXN0SGVhZGVycwBnZXRfRGVmYXVsdFJlcXVlc3RIZWFkZXJzAEJ1ZmZlcnMA
Z2V0X1BhcmFtZXRlcnMAZ2V0X0Jhc2VBZGRyZXNzAHNldF9CYXNlQWRkcmVzcwBGaW5pc2hPdXRw
dXRzAGdldF9TdGF0dXMAc2V0X1N0YXR1cwBnZXRfUm93cwBDcmVhdGVOZXdPdXRwdXRSb3dzAENv
bmNhdABGb3JtYXQAUFNPYmplY3QAUmVhZE9iamVjdABnZXRfSW1tZWRpYXRlQmFzZU9iamVjdABX
cml0ZU9iamVjdABkdABTeXN0ZW0uTmV0AGdldF9DbGllbnRTZWNyZXQAY2xpZW50U2VjcmV0AHNl
Y3JldABTZXRFbmRPZlJvd3NldABXYWl0AFNwbGl0AGdldF9EZWZhdWx0AGdldF9SZXN1bHQAR2V0
UmVzdWx0AFNldFJlc3VsdABTeXN0ZW0uRGF0YS5TcWxDbGllbnQASHR0cENsaWVudABSZXN0Q2xp
ZW50AFVzZXJDb21wb25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVudABnZXRfUGFy
ZW50AHNldF9QYXJlbnQAQWNhZGVtaWNQYXJlbnQAZ2V0X0N1cnJlbnQAZ2V0X0NvbnRlbnQAc2V0
X0NvbnRlbnQARm9ybVVybEVuY29kZWRDb250ZW50AFN0cmluZ0NvbnRlbnQASHR0cENvbnRlbnQA
Z2V0X2NvdW50AHNldF9jb3VudABnZXRfQWNjZXB0AFBTU2NyaXB0AEFkZFNjcmlwdABNaWNyb3Nv
ZnQuU3FsU2VydmVyLlR4U2NyaXB0AFN0YXJ0AENvbnZlcnQASVJlc3RSZXF1ZXN0AE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AGdldF9Qb3N0AHNldF9UaW1lb3V0AFByaW1lT3V0cHV0
AE1vdmVOZXh0AFN5c3RlbS5UZXh0AEdldFZhbHVlV2l0aENvbnRleHQAU2NyaXB0Q29tcG9uZW50
RXZhbENvbnRleHQAZ2V0X0V2YWx1YXRvckNvbnRleHQARGF0YVJvdwBBZGRSb3cATmV3Um93AFJl
Z2V4AFRvQXJyYXkAZ2V0X0NsaWVudEtleQBrZXkAZ2V0X0Fzc2VtYmx5AEV4ZWN1dGVOb25RdWVy
eQBFbXB0eQAAAAAbQQB1AHQAaABvAHIAaQB6AGEAdABpAG8AbgAADUIAYQBzAGkAYwAgAAAZQwBv
AG4AdABlAG4AdAAtAFQAeQBwAGUAAUNhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB4AC0AdwB3AHcA
LQBmAG8AcgBtAC0AdQByAGwAZQBuAGMAbwBkAGUAZAABgJFnAHIAYQBuAHQAXwB0AHkAcABlAD0A
YwBsAGkAZQBuAHQAXwBjAHIAZQBkAGUAbgB0AGkAYQBsAHMAJgBzAGMAbwBwAGUAPQBzAGMAbwBw
AGUAbgBhAG0AZQAxACUAMgAwAHMAYwBvAHAAZQBuAGEAbQBlADIAJQAyADAAcwBjAG8AcABlAG4A
YQBtAGUAeAAAAQADWwAAA10AAAd9ACwAewAAA3sAAAN9AAADLAAAAzoAAAMiAAA9SgBzAG8AbgBT
AHQAcgBpAG4AZwBUAG8ARABhAHQAYQBUAGEAYgBsAGUAOgAgAEMAbwBsAHUAbQBuAHMAAD9FAHIA
cgBvAHIAIABQAGEAcgBzAGkAbgBnACAAQwBvAGwAdQBtAG4AIABOAGEAbQBlACAAOgAgAHsAMAB9
AAADXAAAR0oAcwBvAG4AUwB0AHIAaQBuAGcAVABvAEQAYQB0AGEAVABhAGIAbABlADoAIABGAG8A
cgAgAGUAYQBjAGgAIAByAG8AdwAAO0UAcgByAG8AcgAgAFAAYQByAHMAaQBuAGcAIABSAG8AdwAg
ACAATgBhAG0AZQAgADoAIAB7ADAAfQAAK0oAcwBvAG4AUwB0AHIAaQBuAGcAVABvAEQAYQB0AGEA
VABhAGIAbABlAABBewAiAG4AYQBtAGUAIgA6ACIAcwBjAGgAbwBvAGwAcwB0AGEAZgBmACIALAAi
AHIAZQBjAG8AcgBkACIAOgBbAAAtIgBfAG4AYQBtAGUAIgA6ACIAcwBjAGgAbwBvAGwAcwB0AGEA
ZgBmACIALAAAP10ALAAiAEAAZQB4AHQAZQBuAHMAaQBvAG4AcwAiADoAIgBzAF8AcwBzAGYAXwBu
AGMAZQBhAF8AeAAiAH0AAGssACIAQABlAHgAdABlAG4AcwBpAG8AbgBzACIAOgAiAHUAXwBzAGMA
aABvAG8AbABzAHQAYQBmAGYAdQBzAGUAcgBmAGkAZQBsAGQAcwAsAHMAXwBzAHMAZgBfAG4AYwBl
AGEAXwB4ACIAABNzAHAATABvAGcASQBuAGYAbwAAFUAAQwBsAGkAZQBuAHQAVQBJAEQAAA1AAEUA
cgByAG8AcgAAE0AARgBpAGwAZQBUAHkAcABlAAALQABBAHIAZQBhAAARQABMAG8AZwBJAG4AZgBv
AAAPcABhAHIAYQBtACAACgAABygAIAAKAAA7IAAgAFsAUABhAHIAYQBtAGUAdABlAHIAKABQAG8A
cwBpAHQAaQBvAG4AIAA9ACAAMQApAF0AIAAKAAAfIAAgAFsAdQByAGkAXQAkAFUAcgBpACAAPQAg
ACcAAQsvACcALAAgAAoAATcgACAAWwBQAGEAcgBhAG0AZQB0AGUAcgAoAFAAbwBzAGkAdABpAG8A
bgAgAD0AIAAyACkAXQAAMSAAIABbAHMAdAByAGkAbgBnAF0AJABTAGUAYwByAGUAdABrAGUAeQAg
AD0AIAAnAAEJJwAsACAACgABOyAAIABbAFAAYQByAGEAbQBlAHQAZQByACgAUABvAHMAaQB0AGkA
bwBuACAAPQAgADMAKQBdACAACgAAMyAAIABbAHMAdAByAGkAbgBnAF0AJABQAGEAcwBzAHAAaABy
AGEAcwBlACAAPQAgACcAAQcnACAACgABBykAIAAKAAADCgAANWYAdQBuAGMAdABpAG8AbgAgAEcA
ZQB0AC0AQQBjAGMAZQBzAHMAVABvAGsAZQBuACAACgABB3sAIAAKAACAhSAAIAAgAFsAdQByAGkA
XQAkAHIAZQBxAHUAZQBzAHQAVQByAGkAIAA9ACAAJAB1AHIAaQAuAFMAYwBoAGUAbQBlACAAKwAg
ACcAOgAvAC8AJwAgACsAIAAkAHUAcgBpAC4ASABvAHMAdAAgACsAIAAnAC8AdABvAGsAZQBuACcA
IAAKAAGA7yAAIAAgACQAYgBhAHMAaQBjAEEAdQB0AGgAIAA9ACAAWwBTAHkAcwB0AGUAbQAuAEMA
bwBuAHYAZQByAHQAXQA6ADoAVABvAEIAYQBzAGUANgA0AFMAdAByAGkAbgBnACgAWwBTAHkAcwB0
AGUAbQAuAFQAZQB4AHQALgBFAG4AYwBvAGQAaQBuAGcAXQA6ADoAVQBUAEYAOAAuAEcAZQB0AEIA
eQB0AGUAcwAoACIAJAB7AFMAZQBjAHIAZQB0AGsAZQB5AH0AOgAkAHsAUABhAHMAcwBwAGgAcgBh
AHMAZQB9ACIAKQApACAACgAAJSAAIAAgACQAaABlAGEAZABlAHIAcwAgAD0AIABAAHsAIAAKAABb
IAAgACAAIAAgACAAIABBAHUAdABoAG8AcgBpAHoAYQB0AGkAbwBuACAAPQAgACIAQgBhAHMAaQBj
ACAAJAB7AGIAYQBzAGkAYwBBAHUAdABoAH0AIgAgAAoAAAkgACAAIAB9AACAryAAIAAgACQAYgBv
AGQAeQAgAD0AIAAnAGcAcgBhAG4AdABfAHQAeQBwAGUAPQBjAGwAaQBlAG4AdABfAGMAcgBlAGQA
ZQBuAHQAaQBhAGwAcwAmAHMAYwBvAHAAZQA9AHMAYwBvAHAAZQBuAGEAbQBlADEAJQAyADAAcwBj
AG8AcABlAG4AYQBtAGUAMgAlADIAMABzAGMAbwBwAGUAbgBhAG0AZQB4ACcAIAAKAAE7JABwAGEA
cgBhAG0ASQBuAHYAbwBrAGUAUgBlAHMAdABNAGUAdABoAG8AZAAgAD0AIABAAHsAIAAKAAAzIAAg
ACAATQBlAHQAaABvAGQACQAJACAAIAAgACAAPQAgACcAUABvAHMAdAAnACAACgABOSAAIAAgAFUA
cgBpAAkACQAJACAAIAAgACAAPQAgACQAcgBlAHEAdQBlAHMAdABVAHIAaQAgAAoAADkgACAAIABI
AGUAYQBkAGUAcgBzAAkACQAgACAAIAAgAD0AIAAkAGgAZQBhAGQAZQByAHMAIAAKAAAtIAAgACAA
QgBvAGQAeQAJAAkAIAAgACAAIAA9ACAAJABiAG8AZAB5ACAACgAAdSAAIAAgAEMAbwBuAHQAZQBu
AHQAVAB5AHAAZQAJACAAIAAgACAAPQAgACcAYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AeAAtAHcA
dwB3AC0AZgBvAHIAbQAtAHUAcgBsAGUAbgBjAG8AZABlAGQAJwAgAAoAATkgACAAIABVAHMAZQBC
AGEAcwBpAGMAUABhAHIAcwBpAG4AZwAgAD0AIAAkAHQAcgB1AGUAIAAKAAAHfQAgAAoAAG8gACAA
IAAkAGEAYwBjAGUAcwBzACAAPQAgAEkAbgB2AG8AawBlAC0AUgBlAHMAdABNAGUAdABoAG8AZAAg
AEAAcABhAHIAYQBtAEkAbgB2AG8AawBlAFIAZQBzAHQATQBlAHQAaABvAGQAIAAKAAE9IAAgACAA
aQBmACAAKAAkAGEAYwBjAGUAcwBzAC4AYQBjAGMAZQBzAHMAXwB0AG8AawBlAG4AKQAgAAoAAA0g
ACAAIAB7ACAACgAALyAAIAAgACAAIAAgACAAcgBlAHQAdQByAG4AIAAkAGEAYwBjAGUAcwBzACAA
CgAADSAAIAAgAH0AIAAKAAATIAAgACAAZQBsAHMAZQAgAAoAAFMgACAAIAAgACAAIAAgAHQAaABy
AG8AdwAgACIATgBvACAAYQBjAGMAZQBzAHMAIAB0AG8AawBlAG4AIAByAGUAdAB1AHIAbgBlAGQA
IgAgAAoAAIC7WwB1AHIAaQBdACQAcgBlAHEAdQBlAHMAdABVAHIAaQAgAD0AIAAkAHUAcgBpAC4A
UwBjAGgAZQBtAGUAIAArACAAJwA6AC8ALwAnACAAKwAgACQAdQByAGkALgBIAG8AcwB0ACAAKwAg
ACcALwBpAG0AcwAvAG8AbgBlAHIAbwBzAHQAZQByAC8AdgAxAHAAMQAvAGEAYwBhAGQAZQBtAGkA
YwBTAGUAcwBzAGkAbwBuAHMAJwAgAAoAATckAGEAYwBjAGUAcwBzACAAPQAgAEcAZQB0AC0AQQBj
AGMAZQBzAHMAVABvAGsAZQBuACAACgABSyQAYgBlAGEAcgBlAHIAVABvAGsAZQBuACAAPQAgACQA
YQBjAGMAZQBzAHMALgBhAGMAYwBlAHMAcwBfAHQAbwBrAGUAbgAgAAoAAB8kAGgAZQBhAGQAZQBy
AHMAIAA9ACAAQAB7ACAACgAAYSAAIAAgAEEAdQB0AGgAbwByAGkAegBhAHQAaQBvAG4ACQAJACAA
IAAgAD0AIAAiAEIAZQBhAHIAZQByACAAJAB7AGIAZQBhAHIAZQByAFQAbwBrAGUAbgB9ACIAIAAK
AAAxIAAgACAATQBlAHQAaABvAGQACQAJACAAIAAgACAAPQAgACcARwBlAHQAJwAgAAoAAW0kAHIA
ZQBzAHAAbwBuAHMAZQAgAD0AIABJAG4AdgBvAGsAZQAtAFIAZQBzAHQATQBlAHQAaABvAGQAIABA
AHAAYQByAGEAbQBJAG4AdgBvAGsAZQBSAGUAcwB0AE0AZQB0AGgAbwBkACAACgABbyQAcgBlAHMA
cABvAG4AcwBlAC4AYQBjAGEAZABlAG0AaQBjAFMAZQBzAHMAaQBvAG4AcwAgAHwAIABDAG8AbgB2
AGUAcgB0AFQAbwAtAEoAcwBvAG4AIAAtAEQAZQBwAHQAaAAgADEANgAgAAoAAUdhAHAAcABsAGkA
YwBhAHQAaQBvAG4ALwB4AC0AdwB3AHcALQBmAG8AcgBtAC0AdQByAGwAZQBuAGMAbwBkAGUAZAAg
AAoAAUdpAG0AcwAvAG8AbgBlAHIAbwBzAHQAZQByAC8AdgAxAHAAMQAvAGEAYwBhAGQAZQBtAGkA
YwBTAGUAcwBzAGkAbwBuAHMAAAt0AG8AawBlAG4AABFTAGUAcwBzAGkAbwBuAHMAAICbSQBzAE4A
dQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0ACAAdABv
ACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8AIAB0AGgA
ZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAAARTwB1AHQAcAB1AHQAIAAwAAAJUABT
AEQAQgAAE0MAbABpAGUAbgB0AEsAZQB5AAAjQwBsAGkAZQBuAHQATwBuAGUAUgBvAHMAdABlAHIA
SQBEAAAZQwBsAGkAZQBuAHQAUwBlAGMAcgBlAHQAABlDAGwAaQBlAG4AdABTAGUAcgB2AGUAcgAA
cVMAQwBfADkAYwBjADcANgA0AGQAYgA1AGQAYwA4ADQAYQAwADYAYQBiAGQANwAxAGIAMwA3ADQA
MgAwAGUAMwBlADgANgAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAA
JVMARQBTAFMASQBPAE4AUwAtAHMAZQBuAGQAVABvAGsAZQBuAAEfUAByAG8AYwBlAHMAcwBUAGUA
YQBjAGgAZQByAHMAACdHAGUAdABBAGMAYQBkAGUAbQBpAGMAUwBlAHMAcwBpAG8AbgBzAAAHNQAw
ADAAABU/AHAAYQBnAGUAcwBpAHoAZQA9AAANJgBwAGEAZwBlAD0AACFhAHAAcABsAGkAYwBhAHQA
aQBvAG4ALwBqAHMAbwBuAAAPQgBlAGEAcgBlAHIAIAAAWUcAZQB0ACAAQQBjAGEAZABlAG0AaQBj
ACAAUwBlAHMAcwBpAG8AbgBzACAALQAgAFIAbwB3ACAAQwBvAHUAbgB0ACAAUABhAGcAZQAgAE4A
dQBtADoAIAABF0cAZQB0AFQAZQBhAGMAaABlAHIAcwAADS8AYwBvAHUAbgB0AAAXUgBlAGMAbwBy
AGQAQwBvAHUAbgB0AAAXRwBlAHQARgBpAGwAZQBTAGkAegBlAAALQgBhAHMAaQBjAAAVZwByAGEA
bgB0AF8AdAB5AHAAZQAAJWMAbABpAGUAbgB0AF8AYwByAGUAZABlAG4AdABpAGEAbABzAAALcwBj
AG8AcABlAABJcwBjAG8AcABlAG4AYQBtAGUAMQAlADIAMABzAGMAbwBwAGUAbgBhAG0AZQAyACUA
MgAwAHMAYwBvAHAAZQBuAGEAbQBlAHgAAABt5I7+m2guTLMZJF7KSxqzAAQgAQEIAyAAAQUgAQER
EQQgAQEOBSABARI5BSABAR0CBSABARJ1BiABARGAxQQHARE4BRUReQEICAAAFRF5ARMABzABAQEQ
HgAECgEROAggABUSQQETAAQHARE8BRUReQEcBAoBETwEBwERQAQKARFABAcBEUQFFRF5AQ4ECgER
RAQHARFIBAoBEUgEBwIODgIGDgUAABKA2QYgARKA2Q4KIAAVEoDdARKA4QgVEoDdARKA4QUgARMA
CAMgABwDIAAOBCAAEk0EBwERTAQKARFMBAcBElEFAAIODg4GIAEBEYDpByACEoDtDg4KIAMSgO0O
HBGA8QggARKA9RKA7QQAAQEOBQAAEoD9BSABHQUOBQABDh0FJAcTElUdDhUSWQEOHQ4IHQ4IDggO
FRFdAQ4OEmEOCA4OElUSTQUgAg4ODgYAAh0ODg4FFRJZAQ4EIAEIDgUgAg4ICAUgAQITAAUgAQET
AAUAAg4OHAggABURXQETAAUVEV0BDgQgABMABSAAEoEJBiABEoENDgMgAAIEIAASYQQgAQ4IBSAC
AQ4cBSAAEoERBSABARJhBAcBEmUFIAARgRkGIAIBDhJlBiABARGBJQUgABKBKQkgAhKBLQ4RgTEE
IAEBHAogAxKBLQ4RgTEIAyAACAYgARKBPQ4GAAMODg4OCyADARKAqR0IEoCtBSACAQgcAwcBCAcA
AggSgK0OBSABHQgIBSAAEoFFBSAAEoFJBiABEoFNDgUgABKAtQUgABKBUQYgARKBVRwFAAASgVkG
IAEcEoFdBwABEjkRgWEFIAASgWUHIAIBDhKBZQQHARJpAh4AByACARKBcRwEIAAdBQUgAQ4dBQUg
AQEdBQYgARwSgXEOBwkSCAgODg4ODhJNEk0EAAEBAgYAAQERgXkGMAEBHgAOBQoBHRIoBSABARJN
EAcIEggcCB0SKAgSKBJNEk0nBxAIEggcCAgOEoCBDggVEYCFARKAiRURgIUBDhKAjRKAkQgSTRJN
BAABCA4GAAICDhAIBQABDh0OBiABARKBgQUgABKBhQogABUSgYkBEoGNCBUSgYkBEoGNBSACAQ4O
CCADAQ4SgP0ODyACFRJBARKAiRKBgRKBlQcVEkEBEoCJCSAAFRGAhQETAAgVEYCFARKAiQowAgIB
EB4AEB4BDAoCFRGAhQESgIkRQAUgABKAiQUgABKBlQcgABUSQQEOBRUSQQEOBhURgIUBDgoKAhUR
gIUBDhFABSAAEoCNHQcKCBIIDg4SgIEOFRGAhQESgIkVEYCFAQ4STRJNDAoCFRGAhQESgIkRRAoK
AhURgIUBDhFEBAoBEjQYBwcIDg4SgJkVEYCFARKAiRURgIUBDhJNBiABARKBnQsVElkBFRGAoQIO
DgcVEYChAg4OByACARMAEwEPIAEBFRKBoQEVEYChAg4ODAoCFRGAhQESgIkRSAoKAhURgIUBDhFI
BAoBEjAcBwgIDhKAnQ4OFRJZARURgKECDg4VEYCFAQ4STQQgAQECBiABARKBpQUAABKBqQUgABKB
gQkgAgESgakSgYEGIAEBEoGVDSACFRJBARKAiQ4SgZUKCgIVEYCFAQ4RTAi3elxWGTTgiQiJhF3N
gIDMkQhZgGLnf5FfdQiwP19/EdUKOggxvzhWrTZONQMGEhQDBhIYAwYSDAQGEoCxBAYSgL0EBhKA
wQMGEiADBhIsAgYIBgYVEXkBCAMGEggGBhUReQEcBAYdEigJBhURgIUBEoCJBwYVEYCFAQ4GBhUR
eQEOBAYSgJUHIAAVEkEBCAogARUSQQEcHRIoCiADFRJBARwODg4JIAIVEkEBDg4OCwAEFRJBAQ4O
Dg4OBiADDg4ODgkAAhUSQQEODg4EIAEODgUgARJVDgYgAwEIDg4DAAABDSAEAQgdCB0SgKkSgK0G
IAEBEoCxBQAAEoC9BQAAEoDBBgABARKAwQQAABIgBhABAQ4eAAYQAQEeAA4EIAASLAUgAQESLAMo
AAgDKAACAygADgUoABKAtQUIABKAvQUIABKAwQQIABIgBCgAEiwIAQAIAAAAAAAeAQABAFQCFldy
YXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NDXzljYzc2NGRiNWRjODRhMDZhYmQ3
MWIzNzQyMGUzZTg2AAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTgAAEkBABouTkVURnJhbWV3
b3JrLFZlcnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsg
NC43LQEAKFNjcmlwdE1haW4rPFByb2Nlc3NBY2VkZW1pY1Nlc3Npb25zPmRfXzYAACsBACZTY3Jp
cHRNYWluKzxHRVRBY2FkZW1pY1Nlc3Npb25zRFQ+ZF9fNwAAKQEAJFNjcmlwdE1haW4rPEdldEFj
YWRlbWljU2Vzc2lvbnM+ZF9fOAAAIQEAHFNjcmlwdE1haW4rPEdldEZpbGVTaXplPmRfXzkAACUB
ACBTY3JpcHRNYWluKzxHZXRBY2Nlc3NUb2tlbj5kX18xMAAAJgEAIVNjcmlwdE1haW4rPEdldEFj
Y2Vzc1Rva2VuMj5kX18xMgAABAEAAAAKAQACAAAAAAEAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3Rl
bS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1
bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVz
b3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAOIkAAAAAAAAA
AAAAUokAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAESJAAAAAAAAAAAAAAAAX0NvckRsbE1haW4A
bXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAA
AAAAAAAAAAABAAAAAABIAAAAWKAAAOwDAAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBP
AE4AXwBJAE4ARgBPAAAAAAC9BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAA
AAAAAAAAAAAAAAAARAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBu
AHMAbABhAHQAaQBvAG4AAAAAAAAAsARMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8A
AAAoAwAAAQAwADAAMAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgAB
AAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIA
aQBwAHQAaQBvAG4AAAAAAFMAQwBfADkAYwBjADcANgA0AGQAYgA1AGQAYwA4ADQAYQAwADYAYQBi
AGQANwAxAGIAMwA3ADQAMgAwAGUAMwBlADgANgAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8A
bgAAAAAAMQAuADAALgAwAC4AMAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBD
AF8AOQBjAGMANwA2ADQAZABiADUAZABjADgANABhADAANgBhAGIAZAA3ADEAYgAzADcANAAyADAA
ZQAzAGUAOAA2AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABD
AG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADgAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEA
ZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBt
AGUAAABTAEMAXwA5AGMAYwA3ADYANABkAGIANQBkAGMAOAA0AGEAMAA2AGEAYgBkADcAMQBiADMA
NwA0ADIAMABlADMAZQA4ADYALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAA
AAAAUwBDAF8AOQBjAGMANwA2ADQAZABiADUAZABjADgANABhADAANgBhAGIAZAA3ADEAYgAzADcA
NAAyADAAZQAzAGUAOAA2AAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAu
ADAALgAwAC4AMAAAADgACAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4A
MAAuADAALgAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AIAAAAwAAABkOQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_9cc764db5dc84a06abd71b37420e3e86</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::ClientKey,User::ClientOneRosterID,User::ClientSecret,User::ClientServer</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="6">
                        <arrayElement
                          dataType="System.String">&lt;SOAP-ENV:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"&gt;
&lt;SOAP-ENV:Body&gt;
&lt;a1:ScriptBreakpointInfo id="ref-1" xmlns:a1="http://schemas.microsoft.com/clr/nsassem/Microsoft.SqlServer.VSTAHosting/Microsoft.SqlServer.VSTAScriptingLib%2C%20Version%3D15.0.0.0%2C%20Culture%3Dneutral%2C%20PublicKeyToken%3D89845dcd8080cc91"&gt;
&lt;Enabled&gt;true&lt;/Enabled&gt;
&lt;File id="ref-3"&gt;main.cs&lt;/File&gt;
&lt;FileLine&gt;141&lt;/FileLine&gt;
&lt;FileColumn&gt;9&lt;/FileColumn&gt;
&lt;/a1:ScriptBreakpointInfo&gt;
&lt;/SOAP-ENV:Body&gt;
&lt;/SOAP-ENV:Envelope&gt;
</arrayElement>
                        <arrayElement
                          dataType="System.String">&lt;SOAP-ENV:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"&gt;
&lt;SOAP-ENV:Body&gt;
&lt;a1:ScriptBreakpointInfo id="ref-1" xmlns:a1="http://schemas.microsoft.com/clr/nsassem/Microsoft.SqlServer.VSTAHosting/Microsoft.SqlServer.VSTAScriptingLib%2C%20Version%3D15.0.0.0%2C%20Culture%3Dneutral%2C%20PublicKeyToken%3D89845dcd8080cc91"&gt;
&lt;Enabled&gt;true&lt;/Enabled&gt;
&lt;File id="ref-3"&gt;main.cs&lt;/File&gt;
&lt;FileLine&gt;246&lt;/FileLine&gt;
&lt;FileColumn&gt;5&lt;/FileColumn&gt;
&lt;/a1:ScriptBreakpointInfo&gt;
&lt;/SOAP-ENV:Body&gt;
&lt;/SOAP-ENV:Envelope&gt;
</arrayElement>
                        <arrayElement
                          dataType="System.String">&lt;SOAP-ENV:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"&gt;
&lt;SOAP-ENV:Body&gt;
&lt;a1:ScriptBreakpointInfo id="ref-1" xmlns:a1="http://schemas.microsoft.com/clr/nsassem/Microsoft.SqlServer.VSTAHosting/Microsoft.SqlServer.VSTAScriptingLib%2C%20Version%3D15.0.0.0%2C%20Culture%3Dneutral%2C%20PublicKeyToken%3D89845dcd8080cc91"&gt;
&lt;Enabled&gt;true&lt;/Enabled&gt;
&lt;File id="ref-3"&gt;main.cs&lt;/File&gt;
&lt;FileLine&gt;193&lt;/FileLine&gt;
&lt;FileColumn&gt;13&lt;/FileColumn&gt;
&lt;/a1:ScriptBreakpointInfo&gt;
&lt;/SOAP-ENV:Body&gt;
&lt;/SOAP-ENV:Envelope&gt;
</arrayElement>
                        <arrayElement
                          dataType="System.String">&lt;SOAP-ENV:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"&gt;
&lt;SOAP-ENV:Body&gt;
&lt;a1:ScriptBreakpointInfo id="ref-1" xmlns:a1="http://schemas.microsoft.com/clr/nsassem/Microsoft.SqlServer.VSTAHosting/Microsoft.SqlServer.VSTAScriptingLib%2C%20Version%3D15.0.0.0%2C%20Culture%3Dneutral%2C%20PublicKeyToken%3D89845dcd8080cc91"&gt;
&lt;Enabled&gt;true&lt;/Enabled&gt;
&lt;File id="ref-3"&gt;main.cs&lt;/File&gt;
&lt;FileLine&gt;611&lt;/FileLine&gt;
&lt;FileColumn&gt;9&lt;/FileColumn&gt;
&lt;/a1:ScriptBreakpointInfo&gt;
&lt;/SOAP-ENV:Body&gt;
&lt;/SOAP-ENV:Envelope&gt;
</arrayElement>
                        <arrayElement
                          dataType="System.String">&lt;SOAP-ENV:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"&gt;
&lt;SOAP-ENV:Body&gt;
&lt;a1:ScriptBreakpointInfo id="ref-1" xmlns:a1="http://schemas.microsoft.com/clr/nsassem/Microsoft.SqlServer.VSTAHosting/Microsoft.SqlServer.VSTAScriptingLib%2C%20Version%3D15.0.0.0%2C%20Culture%3Dneutral%2C%20PublicKeyToken%3D89845dcd8080cc91"&gt;
&lt;Enabled&gt;true&lt;/Enabled&gt;
&lt;File id="ref-3"&gt;main.cs&lt;/File&gt;
&lt;FileLine&gt;230&lt;/FileLine&gt;
&lt;FileColumn&gt;13&lt;/FileColumn&gt;
&lt;/a1:ScriptBreakpointInfo&gt;
&lt;/SOAP-ENV:Body&gt;
&lt;/SOAP-ENV:Envelope&gt;
</arrayElement>
                        <arrayElement
                          dataType="System.String">&lt;SOAP-ENV:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"&gt;
&lt;SOAP-ENV:Body&gt;
&lt;a1:ScriptBreakpointInfo id="ref-1" xmlns:a1="http://schemas.microsoft.com/clr/nsassem/Microsoft.SqlServer.VSTAHosting/Microsoft.SqlServer.VSTAScriptingLib%2C%20Version%3D15.0.0.0%2C%20Culture%3Dneutral%2C%20PublicKeyToken%3D89845dcd8080cc91"&gt;
&lt;Enabled&gt;true&lt;/Enabled&gt;
&lt;File id="ref-3"&gt;main.cs&lt;/File&gt;
&lt;FileLine&gt;451&lt;/FileLine&gt;
&lt;FileColumn&gt;13&lt;/FileColumn&gt;
&lt;/a1:ScriptBreakpointInfo&gt;
&lt;/SOAP-ENV:Body&gt;
&lt;/SOAP-ENV:Envelope&gt;
</arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">A4</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">338550b5789e62119da99eaa83870fbeb037e669</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">c70361c448dc120b23e5510d6ca6f6ae</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Loop thru Clients\Academic Sessions\Script Component.Connections[PSDB]"
                      connectionManagerID="Package.ConnectionManagers[OneRosterNET]"
                      connectionManagerRefId="Package.ConnectionManagers[OneRosterNET]"
                      description="Process Log"
                      name="PSDB" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0]"
                      hasSideEffects="true"
                      name="Output 0">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[ClientID]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[ClientID]"
                          name="ClientID" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[SourcedId]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[SourcedId]"
                          name="SourcedId" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[Status]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[Status]"
                          name="Status" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[DateLastModified]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[DateLastModified]"
                          name="DateLastModified" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[Title]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[Title]"
                          name="Title" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[Type]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[Type]"
                          name="Type" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[StartDate]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[StartDate]"
                          name="StartDate" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[EndDate]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[EndDate]"
                          name="EndDate" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[ParentSourcedId]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[ParentSourcedId]"
                          name="ParentSourcedId" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[SchoolYear]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[SchoolYear]"
                          name="SchoolYear" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Loop thru Clients\Truncate Tables"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{26D04F81-F15A-49D9-B1B5-573B669E4501}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Truncate Tables"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{9238981A-2F3C-4FFA-86C4-45A523C0CAF5}"
              SQLTask:SqlStatementSource="declare @ClientUID int&#xA;&#xA;set @ClientUID = ?&#xA;&#xA;delete OneRoster.Classes where ClientUID = @ClientUID&#xA;delete OneRoster.Courses where ClientUID = @ClientUID&#xA;delete OneRoster.Demographics where ClientUID = @ClientUID&#xA;delete OneRoster.Enrollments where ClientUID = @ClientUID&#xA;delete OneRoster.Orgs where ClientUID = @ClientUID&#xA;delete OneRoster.Users where ClientUID = @ClientUID&#xA;delete OneRoster.AcademicSessions  where ClientUID = @ClientUID" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@ClientUID"
                SQLTask:DtsVariableName="User::ClientOneRosterID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Loop thru Clients.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{B85F13EF-0CBC-4F14-8465-EFA31610B823}"
          DTS:From="Package\Loop thru Clients\Truncate Tables"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Loop thru Clients\Academic Sessions" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{FF319617-B020-4392-8A84-34224818A73C}"
          DTS:ObjectName="{FF319617-B020-4392-8A84-34224818A73C}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::ClientOneRosterID" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{706F691B-E794-4AC3-B19B-9437C4F0F6A5}"
          DTS:ObjectName="{706F691B-E794-4AC3-B19B-9437C4F0F6A5}"
          DTS:ValueIndex="2"
          DTS:VariableName="User::ClientServer" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{3EF064E6-7CA9-4EEE-815B-D594F113BBF9}"
          DTS:ObjectName="{3EF064E6-7CA9-4EEE-815B-D594F113BBF9}"
          DTS:ValueIndex="3"
          DTS:VariableName="User::ClientKey" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{934079D3-3C4F-42D0-A9CD-D9B3BFBA9A8B}"
          DTS:ObjectName="{934079D3-3C4F-42D0-A9CD-D9B3BFBA9A8B}"
          DTS:ValueIndex="1"
          DTS:VariableName="User::ClientSecret" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Truncate Log"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{6760A9FB-254E-4E3F-8D5C-F7543511201F}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Truncate Log"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{9238981A-2F3C-4FFA-86C4-45A523C0CAF5}"
          SQLTask:SqlStatementSource="--Select * &#xA;delete&#xA;from OneRoster.LogFile&#xA;where getdate() &gt; dateadd(d, 14, logdate) " xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{786123FF-F135-400B-9BE0-9F31769713E1}"
      DTS:From="Package\Data Flow Task - Get Customers"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Truncate Log" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{74B64602-56FE-4743-B7D4-FDCB41434934}"
      DTS:From="Package\Truncate Log"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Loop thru Clients" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="231,42"
          Id="Package\Data Flow Task - Get Customers"
          TopLeft="153.971698113208,29.518867924528" />
        <NodeLayout
          Size="167,42"
          Id="Package\Loop thru Clients\Academic Sessions"
          TopLeft="41,130" />
        <NodeLayout
          Size="146,42"
          Id="Package\Loop thru Clients\Truncate Tables"
          TopLeft="56.858490566038,22.5" />
        <EdgeLayout
          Id="Package\Loop thru Clients.PrecedenceConstraints[Constraint]"
          TopLeft="127.179245283019,64.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,65.5"
              Start="0,0"
              End="0,58">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,58" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43.924528301886795"
          IsExpanded="True"
          PanelSize="1072,245"
          Size="1072,289"
          Id="Package\Loop thru Clients"
          TopLeft="79.5,243.990566037736" />
        <NodeLayout
          Size="143,42"
          Id="Package\Truncate Log"
          TopLeft="379,136" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="269.471698113208,71.518867924528">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="181.028301886792,64.481132075472"
              Start="0,0"
              End="181.028301886792,56.981132075472">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.240566037736" />
                  <mssgle:CubicBezierSegment
                    Point1="0,28.240566037736"
                    Point2="0,32.240566037736"
                    Point3="4,32.240566037736" />
                  <mssgle:LineSegment
                    End="177.028301886792,32.240566037736" />
                  <mssgle:CubicBezierSegment
                    Point1="177.028301886792,32.240566037736"
                    Point2="181.028301886792,32.240566037736"
                    Point3="181.028301886792,36.240566037736" />
                  <mssgle:LineSegment
                    End="181.028301886792,56.981132075472" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="450.5,178">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="165,65.990566037736"
              Start="0,0"
              End="165,58.490566037736">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.995283018868" />
                  <mssgle:CubicBezierSegment
                    Point1="0,28.995283018868"
                    Point2="0,32.995283018868"
                    Point3="4,32.995283018868" />
                  <mssgle:LineSegment
                    End="161,32.995283018868" />
                  <mssgle:CubicBezierSegment
                    Point1="161,32.995283018868"
                    Point2="165,32.995283018868"
                    Point3="165,36.995283018868" />
                  <mssgle:LineSegment
                    End="165,58.490566037736" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="DATA NEEDED:&#xA;Orgs&#xA;Users&#xA;courses&#xA;Classes&#xA;Enrollment&#xA;Academic Sessions"
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="128,136"
          Id="88452310-04f5-4630-9e61-a905b633ca86"
          TopLeft="1146,44" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Data Flow Task - Get Customers">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="187,42"
          Id="Package\Data Flow Task - Get Customers\Recordset Destination"
          TopLeft="93,164" />
        <NodeLayout
          Size="152,42"
          Id="Package\Data Flow Task - Get Customers\OLE DB Source"
          TopLeft="112,64" />
        <EdgeLayout
          Id="Package\Data Flow Task - Get Customers.Paths[OLE DB Source Output]"
          TopLeft="187.25,106">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,58"
              Start="0,0"
              End="0,50.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,50.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Data Flow Task - Get Customers\OLE DB Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Loop thru Clients\Academic Sessions">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="163,42"
          Id="Package\Loop thru Clients\Academic Sessions\Script Component"
          TopLeft="304,94" />
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>