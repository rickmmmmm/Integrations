<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="10/30/2014 10:52:01 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="WLAFRANCE-PC"
  DTS:CreatorName="HAYESSOFT\Warrenla"
  DTS:DTSID="{42AB381D-E304-4114-9A1B-D48EDDF125A3}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.132"
  DTS:LocaleID="1033"
  DTS:ObjectName="OneRoster"
  DTS:PackageType="5"
  DTS:VersionBuild="969"
  DTS:VersionGUID="{3F4D89F4-BFD7-4672-9220-4D3E18A7183E}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Flat File Connection Manager]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{693BA06D-28D0-4437-B903-AF9438D1B9FE}"
      DTS:ObjectName="Flat File Connection Manager">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\bkpDB\sampleSSISFile.txt">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="ClientID"
              DTS:DTSID="{A4113526-F333-4034-9373-8FC2430A6CCC}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="SourcedId"
              DTS:DTSID="{D373227F-B661-4C51-9CF8-CAE6C90C1D64}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="Status"
              DTS:DTSID="{72F8FE3F-8CC1-4A55-B8B1-71A2CE8DC754}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="DateLastModified"
              DTS:DTSID="{2E8CFAF5-CC4D-410B-9241-6D72B8FFA5EF}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="Title"
              DTS:DTSID="{60D8D7C6-A1FD-4918-8BFC-E7F46B00E2C8}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="Type"
              DTS:DTSID="{05CFC5A4-EB58-4576-8B43-234471459282}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="StartDate"
              DTS:DTSID="{1DA79F20-A609-4F9D-91A8-E7DC1240A009}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="EndDate"
              DTS:DTSID="{5A2DB928-1D9D-4FE8-B0B9-3D94D092B569}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="ParentSourcedId"
              DTS:DTSID="{54F07E07-3B08-44F4-9545-D83F96556638}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="SchoolYear"
              DTS:DTSID="{C5FED5FB-F7D1-4481-B4DC-061E1D012210}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[OneRoster]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{9238981A-2F3C-4FFA-86C4-45A523C0CAF5}"
      DTS:ObjectName="OneRoster">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[$Project::OneRosterDB]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[$Project::Server]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=.;Initial Catalog=ImportManagementSystem;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[OneRosterNET]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{25CAA67B-38B5-4F5D-8EC9-109E21C521F5}"
      DTS:ObjectName="OneRosterNET">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[$Project::OneRosterDB]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[$Project::Server]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=.;Initial Catalog=ImportManagementSystem;Integrated Security=True;Application Name=SSIS-PowerSchool-{25CAA67B-38B5-4F5D-8EC9-109E21C521F5}CSS-NBLAKELY\MSSQLSERVER2014.PowerSchoolAPIPlugIn;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{88900864-C05D-4B23-8E17-549A7444ABB3}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="AcademicSessions">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0D039B03-D285-43C0-85EA-41ACCF5E2971}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Classes">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4CC2F85C-2F64-440F-AB55-D6605179C6FF}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ClientKey">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{84791237-9068-48B0-84ED-C07D6C38ED92}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ClientName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C5681D49-D1EE-4CE4-ACDE-10DCE6BA5F73}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ClientOneRosterID">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{601DAA9A-D7B8-4F54-93D5-EE33204EFD96}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ClientSecret">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A44D1E2C-4C71-4AFF-8355-F54B2AA526CC}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ClientServer">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{AEBC77A0-3B0B-4BA6-9D00-34316FF48896}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ClientTipWebDatabase">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EB1E3A71-DC69-46AD-B103-F7E9FA87F86B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Courses">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E91C2158-FCAE-4D20-94EE-A08537BB103B}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="CustomerList">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{27BECB58-365C-4729-BBEF-AF32B9F73B7C}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Error">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{20F1C2CF-576D-4FC6-9EA3-C9298167B0E4}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ErrorMessage">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{266782F4-B06A-4F00-A4C7-5026AA13F3B2}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PageSize">
      <DTS:VariableValue
        DTS:DataType="8">500</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Data Flow Task - Get Customers"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{89CC7015-45BC-4D9A-9883-2658BE7A3076}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Data Flow Task - Get Customers"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server v10; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          BLOBTempStoragePath=""
          bufferTempStoragePath=""
          version="1">
          <components>
            <component
              refId="Package\Data Flow Task - Get Customers\OLE DB Source"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="OLE DB Source"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT ClientUID, ClientUrl, ClientKey, ClientSecret, 
IsNull(SessionsFile, '') as SessionsFile, IsNull(ClassesFile, '') as ClassesFile, IsNull(CoursesFile, '') as CoursesFile, 
IsNull(EnrollmentsFile, '') as EnrollmentsFile
  FROM [ImportManagementSystem].[OneRoster].[Client]
  Where FileBased = 0
and Active = 1 
  order by ProcessOrder</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task - Get Customers\OLE DB Source.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OneRoster]"
                  connectionManagerRefId="Package.ConnectionManagers[OneRoster]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientUID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClientUID]"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientUID]"
                      name="ClientUID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientSecret]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClientSecret]"
                      length="100"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientSecret]"
                      name="ClientSecret"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientUrl]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClientUrl]"
                      length="100"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientUrl]"
                      name="ClientUrl"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientKey]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClientKey]"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientKey]"
                      name="ClientKey"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[SessionsFile]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[SessionsFile]"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[SessionsFile]"
                      name="SessionsFile"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClassesFile]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClassesFile]"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClassesFile]"
                      name="ClassesFile"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[CoursesFile]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[CoursesFile]"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[CoursesFile]"
                      name="CoursesFile"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[EnrollmentsFile]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[EnrollmentsFile]"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[EnrollmentsFile]"
                      name="EnrollmentsFile"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClientUID]"
                      dataType="i4"
                      name="ClientUID" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClientSecret]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      name="ClientSecret" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClientUrl]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      name="ClientUrl" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClientKey]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      name="ClientKey" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[SessionsFile]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      name="SessionsFile" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClassesFile]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      name="ClassesFile" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[CoursesFile]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      name="CoursesFile" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[EnrollmentsFile]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      name="EnrollmentsFile" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClientUID]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClientUID]"
                      name="ClientUID" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClientUrl]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClientUrl]"
                      name="ClientUrl" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClientKey]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClientKey]"
                      name="ClientKey" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClientSecret]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClientSecret]"
                      name="ClientSecret" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[SessionsFile]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[SessionsFile]"
                      name="SessionsFile" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClassesFile]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClassesFile]"
                      name="ClassesFile" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[CoursesFile]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[CoursesFile]"
                      name="CoursesFile" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[EnrollmentsFile]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[EnrollmentsFile]"
                      name="EnrollmentsFile" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task - Get Customers\Recordset Destination"
              componentClassID="Microsoft.RecordsetDestination"
              contactInfo="Recordset Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates and populates an in-memory ADO recordset that is available outside of the data flow. Scripts and other package elements can use the recordset. For example, use a recordset to store the names of files that will be loaded into the data warehouse."
              name="Recordset Destination">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the recordset."
                  name="VariableName">User::CustomerList</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input]"
                  hasSideEffects="true"
                  name="Recordset Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[ClientUID]"
                      cachedDataType="i4"
                      cachedName="ClientUID"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientUID]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[ClientSecret]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedName="ClientSecret"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientSecret]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[ClientUrl]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedName="ClientUrl"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientUrl]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[ClientKey]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="150"
                      cachedName="ClientKey"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientKey]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[SessionsFile]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="150"
                      cachedName="SessionsFile"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[SessionsFile]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[ClassesFile]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="150"
                      cachedName="ClassesFile"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClassesFile]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[CoursesFile]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="150"
                      cachedName="CoursesFile"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[CoursesFile]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[EnrollmentsFile]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="150"
                      cachedName="EnrollmentsFile"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[EnrollmentsFile]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Data Flow Task - Get Customers.Paths[OLE DB Source Output]"
              endId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input]"
              name="OLE DB Source Output"
              startId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Loop thru Clients"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{EF076D26-2122-4091-9820-02B258557495}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Loop thru Clients">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachADOEnumerator"
        DTS:DTSID="{85CE8E18-46E0-4A0D-965B-8E6296303D09}"
        DTS:ObjectName="{85CE8E18-46E0-4A0D-965B-8E6296303D09}">
        <DTS:ObjectData>
          <FEEADO
            EnumType="EnumerateRowsInFirstTable"
            VarName="User::CustomerList" />
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Loop thru Clients\Sequence Container"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{03285D4E-A63F-4E28-BBD3-CEA1DA30F24A}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Sequence Container">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Loop thru Clients\Sequence Container\Academic Sessions"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Academic Sessions"
              DTS:DTSID="{FE3BBE6F-A6B3-4904-88F0-9BD6A78DC5FE}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Academic Sessions"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server v10; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  BLOBTempStoragePath=""
                  bufferTempStoragePath=""
                  version="1">
                  <components>
                    <component
                      refId="Package\Loop thru Clients\Sequence Container\Academic Sessions\OLE DB Destination"
                      componentClassID="Microsoft.OLEDBDestination"
                      contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                      description="OLE DB Destination"
                      name="OLE DB Destination"
                      usesDispositions="true"
                      version="4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[OneRoster].[AcademicSessions]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepIdentity">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                          name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                          name="FastLoadMaxInsertCommitSize">2147483647</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Loop thru Clients\Sequence Container\Academic Sessions\OLE DB Destination.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[OneRoster]"
                          connectionManagerRefId="Package.ConnectionManagers[OneRoster]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Loop thru Clients\Sequence Container\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[SourcedId]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="SourcedId"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[sourcedId]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Academic Sessions\Script Component.Outputs[Output 0].Columns[SourcedId]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Status]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Status"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[status]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Academic Sessions\Script Component.Outputs[Output 0].Columns[Status]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DateLastModified]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="DateLastModified"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[dateLastModified]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Academic Sessions\Script Component.Outputs[Output 0].Columns[DateLastModified]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Title]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Title"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[title]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Academic Sessions\Script Component.Outputs[Output 0].Columns[Title]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Type]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Type"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[type]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Academic Sessions\Script Component.Outputs[Output 0].Columns[Type]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[StartDate]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="StartDate"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[startDate]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Academic Sessions\Script Component.Outputs[Output 0].Columns[StartDate]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[EndDate]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="EndDate"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[endDate]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Academic Sessions\Script Component.Outputs[Output 0].Columns[EndDate]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ParentSourcedId]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="ParentSourcedId"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[parentSourcedId]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Academic Sessions\Script Component.Outputs[Output 0].Columns[ParentSourcedId]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[SchoolYear]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="SchoolYear"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[schoolYear]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Academic Sessions\Script Component.Outputs[Output 0].Columns[SchoolYear]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ClientID]"
                              cachedDataType="i4"
                              cachedName="ClientID"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientUID]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Academic Sessions\Script Component.Outputs[Output 0].Columns[ClientID]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ikey]"
                              dataType="i4"
                              name="ikey" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientUID]"
                              dataType="i4"
                              name="ClientUID" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[sourcedId]"
                              codePage="1252"
                              dataType="str"
                              length="150"
                              name="sourcedId" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[status]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="status" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[dateLastModified]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="dateLastModified" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[title]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="title" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[type]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="type" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[startDate]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="startDate" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[endDate]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="endDate" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[parentSourcedId]"
                              codePage="1252"
                              dataType="str"
                              length="150"
                              name="parentSourcedId" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[schoolYear]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="schoolYear" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Loop thru Clients\Sequence Container\Academic Sessions\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Destination Error Output"
                          synchronousInputId="Package\Loop thru Clients\Sequence Container\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Academic Sessions\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Loop thru Clients\Sequence Container\Academic Sessions\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Academic Sessions\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Loop thru Clients\Sequence Container\Academic Sessions\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Loop thru Clients\Sequence Container\Academic Sessions\Script Component"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;11"
                      description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                      name="Script Component"
                      version="9">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Stores the source code of the component"
                          isArray="true"
                          name="SourceCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="39">
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[packages.config]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>

</packages>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_9cc764db5dc84a06abd71b37420e3e86.Properties.Settings.get_Default():SC_9cc764db5dc84a06abd71b37420e3e86.Properties.Sett" +
    "ings")]

namespace SC_9cc764db5dc84a06abd71b37420e3e86.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Project]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_9cc764db5dc84a06abd71b37420e3e86</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_9cc764db5dc84a06abd71b37420e3e86</msb:DisplayName>
		<msb:ProjectId>{E081B4D6-9074-47D0-9099-E24AB36B352D}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_9cc764db5dc84a06abd71b37420e3e86.csproj"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="packages.config"/>
		<msb:File Include="app.config"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="PowerShellScript.txt"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_9cc764db5dc84a06abd71b37420e3e86")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_9cc764db5dc84a06abd71b37420e3e86")]
[assembly: AssemblyCopyright("Copyright @  2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 PSDB
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"PSDB").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String ClientKey
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientKey"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Int32 ClientOneRosterID
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["ClientOneRosterID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientSecret
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientSecret"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientServer
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientServer"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_9cc764db5dc84a06abd71b37420e3e86.csproj]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{FF2D54D4-CBFE-43F2-A697-E0F017938BC8}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_9cc764db5dc84a06abd71b37420e3e86</RootNamespace>
    <AssemblyName>SC_9cc764db5dc84a06abd71b37420e3e86</AssemblyName>
    <TargetFrameworkVersion>v4.5.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile>
    </TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System" />
    <Reference Include="System.ComponentModel.Composition" />
    <Reference Include="System.Data" />
    <Reference Include="System.Management.Automation, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL">
      <HintPath>C:\Users\mmartinez\AppData\Local\Temp\Vsta\SSIS_SC150\VstaRERTd4peRUWzE0WVsyOyaA\packages\Microsoft.PowerShell.5.ReferenceAssemblies.1.1.0\lib\net4\System.Management.Automation.dll</HintPath>
    </Reference>
    <Reference Include="System.Memory, Version=4.0.1.1, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51, processorArchitecture=MSIL">
      <HintPath>C:\Users\mmartinez\AppData\Local\Temp\Vsta\SSIS_SC150\VstajPb4tXYoDEi5c0j1D5timQ\packages\System.Memory.4.5.3\lib\netstandard2.0\System.Memory.dll</HintPath>
    </Reference>
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Numerics" />
    <Reference Include="System.Runtime.Serialization" />
    <Reference Include="System.Security" />
    <Reference Include="System.Web" />
    <Reference Include="System.Web.Extensions" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
      <DesignTime>True</DesignTime>
    </Compile>
    <None Include="app.config" />
    <None Include="packages.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <Content Include="PowerShellScript.txt" />
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_9cc764db5dc84a06abd71b37420e3e86.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_9cc764db5dc84a06abd71b37420e3e86.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_9cc764db5dc84a06abd71b37420e3e86.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_9cc764db5dc84a06abd71b37420e3e86.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_9cc764db5dc84a06abd71b37420e3e86.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[PowerShellScript.txt]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[param
(
	[Parameter(Position = 1)]
	[uri]$Uri = '{0},
	[Parameter(Position = 2)]
	[string]$Secretkey = '{1}',
	[Parameter(Position = 3)]
	[string]$Passphrase = '{2}'
)

function Get-AccessToken
{
    [uri]$requestUri = $uri.Scheme + '://' + $uri.Host + '/token'
	
	$basicAuth = [System.Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes("${Secretkey}:${Passphrase}"))
	
	$headers = @{
		Authorization = "Basic ${basicAuth}"
	}
	
	$body = 'grant_type=client_credentials&scope=scopename1%20scopename2%20scopenamex'
	
	$paramInvokeRestMethod = @{
		Method		    = 'Post'
		Uri			    = $requestUri
		Headers		    = $headers
		Body		    = $body
		ContentType	    = 'application/x-www-form-urlencoded'
		UseBasicParsing = $true
	}
	
	$access = Invoke-RestMethod @paramInvokeRestMethod
	
	if ($access.access_token)
	{
		return $access
	}
	else
	{
		throw "No access token returned"
	}
}

[uri]$requestUri = $uri.Scheme + '://' + $uri.Host + '/ims/oneroster/v1p1/academicSessions'

$access = Get-AccessToken
$bearerToken = $access.access_token

$headers = @{
	Authorization		   = "Bearer ${bearerToken}"
}


$paramInvokeRestMethod = @{
	Method		    = 'Get'
	Uri			    = $requestUri
	Headers		    = $headers
	UseBasicParsing = $true
}

$response = Invoke-RestMethod @paramInvokeRestMethod
$response.academicSessions | ConvertTo-Json -Depth 16


application/x-www-form-urlencoded
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 ClientID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool ClientID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String SourcedId
    {
        set
        {
            this[1] = value;
        }
    }
    public bool SourcedId_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Status
    {
        set
        {
            this[2] = value;
        }
    }
    public bool Status_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String DateLastModified
    {
        set
        {
            this[3] = value;
        }
    }
    public bool DateLastModified_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Title
    {
        set
        {
            this[4] = value;
        }
    }
    public bool Title_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Type
    {
        set
        {
            this[5] = value;
        }
    }
    public bool Type_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String StartDate
    {
        set
        {
            this[6] = value;
        }
    }
    public bool StartDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String EndDate
    {
        set
        {
            this[7] = value;
        }
    }
    public bool EndDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ParentSourcedId
    {
        set
        {
            this[8] = value;
        }
    }
    public bool ParentSourcedId_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String SchoolYear
    {
        set
        {
            this[9] = value;
        }
    }
    public bool SchoolYear_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces

using System.Runtime;
using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.IO;
using System.Net;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Runtime.Serialization.Json;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading.Tasks;
using System.Collections.Specialized;
using System.Web;
using System.Management.Automation;
using System.Web.Script.Serialization;






#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    static string pLocation = "ims/oneroster/v1p1/academicSessions";
    static string tokenURI = "token";
    static string processType = "Sessions";


    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();

    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
        
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */
        ProcessAcedemicSessions().Wait();
        
    }


    public async Task<int> ProcessAcedemicSessions()
    {
        try
        {

            // The server base address
            string baseURL = Variables.ClientServer;

            //MessageBox.Show(uri);

            ServicePointManager.Expect100Continue = true;
            ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;


            /// The client information used to get the OAuth Access Token from the server.
            string clientId = Variables.ClientKey.ToString();
            string clientSecret = Variables.ClientSecret;
            string sendAuth = EncodeTo64(Variables.ClientKey + ":" + Variables.ClientSecret);
            WriteToDatabase(0, "SESSIONS-sendToken", sendAuth);
            // this will hold the Access Token returned from the server.
            //MessageBox.Show(sendToken, "sendToken");


            string rawJson = GetJsonString(baseURL, clientId, clientSecret);

            JavaScriptSerializer sr = new JavaScriptSerializer();
            sr.MaxJsonLength = Int32.MaxValue;

            AcademicSessions[] jsonResponse = sr.Deserialize<AcademicSessions[]>(rawJson);

            var jRes = await GetAcademicSessionsDT(jsonResponse);
            

            return 0;
        }
        catch (Exception ex) {
            WriteToDatabase(1, "ProcessAcademicSessions", ex.Message);
            return 0;
        }

    }



    private async Task<dynamic> GetAcademicSessionsDT(AcademicSessions[] dt)
    {
        try
        {
            
            int numrows = 0;

            foreach(AcademicSessions item in dt)
            {
                Output0Buffer.AddRow();
                Output0Buffer.ClientID = Variables.ClientOneRosterID;

                Output0Buffer.SourcedId = item.SourcedId;
                Output0Buffer.Status = item.Status;
                Output0Buffer.DateLastModified = item.DateLastModified;
                Output0Buffer.Title = item.Title;
                Output0Buffer.Type = item.Type;
                Output0Buffer.StartDate = item.StartDate;
                Output0Buffer.EndDate = item.EndDate;
                Output0Buffer.ParentSourcedId = item.Parent.SourcedId;
                Output0Buffer.SchoolYear = item.SchoolYear;


                numrows += 1;

            }
            WriteToDatabase(0, "Get Academic Sessions - Rows Added: " + numrows.ToString(),  numrows.ToString());

            return null;
        }
        catch (Exception ex)
        {
            WriteToDatabase(1, "GetAcademicSessions", ex.Message);
            throw;
        }
    }



    private async Task<string> GetFileSize(string baseURL, string accessToken)
    {
        try
        {
            using (var client = new HttpClient())
            {
                string uri = baseURL + pLocation + "/count";
                client.BaseAddress = new Uri(uri);
                //MessageBox.Show(uri, "teachers uri");

                client.DefaultRequestHeaders.Accept.Clear();
                client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));
                client.DefaultRequestHeaders.Add("Authorization", "Bearer " + accessToken);

                var stringContent = new StringContent("", Encoding.UTF8, "application/json");

                //Get file size
                HttpResponseMessage response = await client.PostAsync(new Uri(uri), stringContent);

                response.EnsureSuccessStatusCode();
                string jsonString = await response.Content.ReadAsStringAsync();

                //string jsonString = response.Content.ToString();//.ReadAsStringAsync();
                //MessageBox.Show(jsonString, "jsonstring");

                //Deserialize our JSON
                var FileSizeObject = JsonHelper.JsonDeserialize<FileSize>(jsonString);

                // return the Access Token.
                var FileSize = FileSizeObject.count;
                //MessageBox.Show(FileSize, "File Size");
                WriteToDatabase(0, "RecordCount", FileSize);
                return FileSize;
            }
        }
        catch (Exception ex)
        {
            //MessageBox.Show(ex.Message);
            //MessageBox.Show(ex.StackTrace);
            WriteToDatabase(1, "GetFileSize", ex.Message);
            //return null;
            throw;
        }

    }

    /// <summary>
    /// This method uses the OAuth Client Credentials Flow to get an Access Token to provide
    /// Authorization to the APIs.
    /// </summary>
    /// <returns></returns>
    private static async Task<string> GetAccessToken(string baseURL, string sendToken, string clientId, string clientSecret)
    {
        try
        {
            using (var client = new HttpClient())
            {

                string uri = baseURL + tokenURI;
                client.BaseAddress = new Uri(uri);

                //MessageBox.Show(uri, "access token uri");

                client.DefaultRequestHeaders.Accept.Clear();
                client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/x-www-form-urlencoded"));
                client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Basic", sendToken);


                List<KeyValuePair<string, string>> postData = new List<KeyValuePair<string, string>>();
                postData.Add(new KeyValuePair<string, string>("grant_type", "client_credentials"));
                postData.Add(new KeyValuePair<string, string>("scope", "scopename1%20scopename2%20scopenamex"));

                FormUrlEncodedContent content = new FormUrlEncodedContent(postData);
                //content.

                // Post to the Server and parse the response.
                HttpResponseMessage response = await client.PostAsync(new Uri(uri), content);
                //HttpResponseMessage response = await client.PostAsync(new Uri(uri));

                response.EnsureSuccessStatusCode();
                string jsonString = await response.Content.ReadAsStringAsync();

                //MessageBox.Show(jsonString, "jsonstring");

                //Deserialize our JSON
                var accessTokenObject = JsonHelper.JsonDeserialize<AccessToken>(jsonString);

                // return the Access Token.
                var token = accessTokenObject.access_token;
                //MessageBox.Show(token, "access token");
                return token;
            }
        }
        catch (Exception ex)
        {
            //WriteToDatabase(1, "GetAccessToken", ex.Message);
            //MessageBox.Show(ex.Message);
            //MessageBox.Show(ex.StackTrace);
            //return null;
            throw ex;
        }
    }


    private string GetJsonString(string url, string clientId, string clientSecret)
    {
        string output = string.Empty;
        try
        {
            PowerShell pshell = PowerShell.Create();
            
            //Load script with parameters
            string spt = PSScript(url, clientId, clientSecret);

            //Add script to pipeliine
            pshell.AddScript(spt);

            //Execute the powershell script
            var outp = pshell.Invoke();

            output = outp[0].ImmediateBaseObject.ToString();
        }
        catch (Exception ex)
        {
            output = ex.InnerException.ToString();
        }

        return output;
    }




    public string EncodeTo64(string toEncode)
    {
        byte[] toEncodeAsBytes = System.Text.ASCIIEncoding.ASCII.GetBytes(toEncode);
        string returnValue = System.Convert.ToBase64String(toEncodeAsBytes);
        return returnValue;

    }
    public class JsonHelper
    {
        /// <summary>
        /// JSON Serialization
        /// </summary>
        public static string JsonSerializer<T>(T t)
        {
            DataContractJsonSerializer ser = new DataContractJsonSerializer(typeof(T));
            MemoryStream ms = new MemoryStream();
            ser.WriteObject(ms, t);
            string jsonString = Encoding.UTF8.GetString(ms.ToArray());
            ms.Close();
            return jsonString;
        }
        /// <summary>
        /// JSON Deserialization
        /// </summary>
        public static T JsonDeserialize<T>(string jsonString)
        {
            DataContractJsonSerializer ser = new DataContractJsonSerializer(typeof(T));
            MemoryStream ms = new MemoryStream(Encoding.UTF8.GetBytes(jsonString));
            T obj = (T)ser.ReadObject(ms);
            return obj;
        }
    }

    public class AcademicSessions
    {
        public string ClientID { get; set; }
        public string SourcedId { get; set; }
        public string Status { get; set; }
        public string DateLastModified { get; set; }
        public string Title { get; set; }
        public string Type { get; set; }
        public string StartDate { get; set; }
        public string EndDate { get; set; }
        public AcademicParent Parent  { get; set; }
        public string SchoolYear { get; set; }

    }

    public class AcademicParent
    {
        public string Href { get; set; }
        public string SourcedId { get; set; }
        public string Type { get; set; }
    }

    public class AccessToken
    {
        public string access_token { get; set; }
        public string token_type { get; set; }
        public string expires_in { get; set; }
    }

    public class FileSize
    {
        public string count { get; set; }

    }



    public DataTable JsonStringToDataTable(string jsonString)
    {
        try
        {
            DataTable dt = new DataTable();
            string[] jsonStringArray = Regex.Split(jsonString.Replace("[", "").Replace("]", ""), "},{");
            List<string> ColumnsName = new List<string>();
            foreach (string jSA in jsonStringArray)
            {
                string[] jsonStringData = Regex.Split(jSA.Replace("{", "").Replace("}", ""), ",");
                foreach (string ColumnsNameData in jsonStringData)
                {
                    try
                    {
                        int idx = ColumnsNameData.IndexOf(":");
                        string ColumnsNameString = ColumnsNameData.Substring(0, idx - 1).Replace("\"", "");
                        if (!ColumnsName.Contains(ColumnsNameString))
                        {
                            ColumnsName.Add(ColumnsNameString);
                        }
                    }
                    catch //(Exception ex)
                    {
                        WriteToDatabase(1, "JsonStringToDataTable: Columns", (string.Format("Error Parsing Column Name : {0}", ColumnsNameData)));
                    }
                }
                break;
            }
            foreach (string AddColumnName in ColumnsName)
            {
                dt.Columns.Add(AddColumnName);
            }
            foreach (string jSA in jsonStringArray)
            {
                string[] RowData = Regex.Split(jSA.Replace("{", "").Replace("}", ""), ",");
                DataRow nr = dt.NewRow();
                foreach (string rowData in RowData)
                {
                    try
                    {
                        int idx = rowData.IndexOf(":");
                        string RowColumns = rowData.Substring(0, idx - 1).Replace("\"", "").Replace("\\", "");
                        string RowDataString = rowData.Substring(idx + 1).Replace("\"", "").Replace("\\", "");
                        nr[RowColumns] = RowDataString;
                    }
                    catch //(Exception ex)
                    {
                        WriteToDatabase(1, "JsonStringToDataTable: For each row", (string.Format("Error Parsing Row  Name : {0}", rowData)));
                        continue;
                    }
                }
                dt.Rows.Add(nr);
            }
            return dt;
        }
        catch (Exception ex)
        {
            WriteToDatabase(1, "JsonStringToDataTable", ex.Message);
            return null;
        }
    }



    public string cleanJsonString(string jsonString)
    {

        jsonString = jsonString.Replace("{\"name\":\"schoolstaff\",\"record\":[", "");
        jsonString = jsonString.Replace("\"_name\":\"schoolstaff\",", "");
        jsonString = jsonString.Replace("],\"@extensions\":\"s_ssf_ncea_x\"}", "");
        jsonString = jsonString.Replace(",\"@extensions\":\"u_schoolstaffuserfields,s_ssf_ncea_x\"", "");

        return jsonString;
    }


    public void WriteToDatabase(int Error, string Area, string LogInfo)
    {
        try
        {
            //MessageBox.Show("WriteToDatabase");
            var ConnString = Connections.PSDB.ConnectionString;

            using (SqlConnection conn = new SqlConnection(Connections.PSDB.ConnectionString))
            {
                if (conn.State != ConnectionState.Open) conn.Open();
                //string insertText = "Insert into OneRoster.LogFile (ClientUID, FileType, Area, LogInfo) Values (@ClientUID, @FileType, @Area, @LogInfo ) ";
                SqlCommand cmd = new SqlCommand("spLogInfo", conn);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("@ClientUID", SqlDbType.Int).Value = Variables.ClientOneRosterID;
                cmd.Parameters.Add("@Error", SqlDbType.Int).Value = Error;
                cmd.Parameters.Add("@FileType", SqlDbType.VarChar, 50).Value = processType;
                cmd.Parameters.Add("@Area", SqlDbType.VarChar, 100).Value = Area;
                cmd.Parameters.Add("@LogInfo", SqlDbType.VarChar, 1000).Value = LogInfo;
                cmd.ExecuteNonQuery();
            }
        }
        catch //(Exception ex)
        {
            throw;
        }
    }



    public string PSScript(string url, string key, string secret)
    {
        StringBuilder param = new StringBuilder();
        param.Append("param \n");
        param.Append("( \n");
        param.Append("  [Parameter(Position = 1)] \n");
        param.Append("  [uri]$Uri = '" + url + "/', \n");
        param.Append("  [Parameter(Position = 2)]");
        param.Append("  [string]$Secretkey = '" + key + "', \n");
        param.Append("  [Parameter(Position = 3)] \n");
        param.Append("  [string]$Passphrase = '" + secret + "' \n");
        param.Append(") \n");
        param.Append("\n");

        string token = PSAccessToken();
        string sessions = PSAcademicSessions();

        param.Append(token);
        param.Append(sessions);



        return param.ToString();
    }

    public string PSAccessToken()
    {
        StringBuilder scpt = new StringBuilder();
        scpt.Append("function Get-AccessToken \n");
        scpt.Append("{ \n");
        scpt.Append("   [uri]$requestUri = $uri.Scheme + '://' + $uri.Host + '/token' \n");
        scpt.Append("\n");
        scpt.Append("   $basicAuth = [System.Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes(\"${Secretkey}:${Passphrase}\")) \n");
        scpt.Append("\n");
        scpt.Append("   $headers = @{ \n");
        scpt.Append("       Authorization = \"Basic ${basicAuth}\" \n");
        scpt.Append("   }");
        scpt.Append("\n");
        scpt.Append("   $body = 'grant_type=client_credentials&scope=scopename1%20scopename2%20scopenamex' \n");
        scpt.Append("\n");
        scpt.Append("$paramInvokeRestMethod = @{ \n");
        scpt.Append("   Method		    = 'Post' \n");
        scpt.Append("   Uri			    = $requestUri \n");
        scpt.Append("   Headers		    = $headers \n");
        scpt.Append("   Body		    = $body \n");
        scpt.Append("   ContentType	    = 'application/x-www-form-urlencoded' \n");
        scpt.Append("   UseBasicParsing = $true \n");
        scpt.Append("} \n");
        scpt.Append("\n");
        scpt.Append("   $access = Invoke-RestMethod @paramInvokeRestMethod \n");
        scpt.Append("\n");
        scpt.Append("   if ($access.access_token) \n");
        scpt.Append("   { \n");
        scpt.Append("       return $access \n");
        scpt.Append("   } \n");
        scpt.Append("   else \n");
        scpt.Append("   { \n");
        scpt.Append("       throw \"No access token returned\" \n");
        scpt.Append("   } \n");
        scpt.Append("} \n");

        return scpt.ToString();
    }


    public string PSAcademicSessions()
    {
        StringBuilder scpt = new StringBuilder();
        scpt.Append("[uri]$requestUri = $uri.Scheme + '://' + $uri.Host + '/ims/oneroster/v1p1/academicSessions?limit=10000' \n");
        scpt.Append("\n");
        scpt.Append("$access = Get-AccessToken \n");
        scpt.Append("$bearerToken = $access.access_token \n");
        scpt.Append("\n");
        scpt.Append("$headers = @{ \n");
        scpt.Append("   Authorization		   = \"Bearer ${bearerToken}\" \n");
        scpt.Append("} \n");
        scpt.Append("\n");
        scpt.Append("$paramInvokeRestMethod = @{ \n");
        scpt.Append("   Method		    = 'Get' \n");
        scpt.Append("   Uri			    = $requestUri \n");
        scpt.Append("   Headers		    = $headers \n");
        scpt.Append("   UseBasicParsing = $true \n");
        scpt.Append("} \n");
        scpt.Append("\n");
        scpt.Append("$response = Invoke-RestMethod @paramInvokeRestMethod \n");
        scpt.Append("$response.academicSessions | ConvertTo-Json -Depth 16 \n");
        scpt.Append("\n");
        scpt.Append("\n");
        scpt.Append("application/x-www-form-urlencoded \n");

        return scpt.ToString();
    }





}




]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[app.config]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="RestSharp" publicKeyToken="598062e77f915f75" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-106.11.7.0" newVersion="106.11.7.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
</configuration>]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Stores the binary representation of the component"
                          isArray="true"
                          name="BinaryCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="2">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_9cc764db5dc84a06abd71b37420e3e86.dll]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[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
RQDALgAAAACGCHQUtQBFAMguAAAAAIYIfhQQAEUA1CwAAAAAhhiBEAYARgDULgAAAADhAf4UBgBG
AGwwAAAAAOEB7QUhAEYAfDAAAAAA4QH+FAYARwAgMgAAAADhAe0FIQBHADAyAAAAAOEB/hQGAEgA
oDQAAAAA4QHtBSEASACwNAAAAADhAf4UBgBJAAA3AAAAAOEB7QUhAEkAAAAAAAAAAAABAEsTAAAB
ADECAAACAG0MAAABADECAAACAEYMAAADAPACAAAEAGoTAAABABAMAAACAPACAAADAGoTAAABADUF
AAABAHMKAAABAHMKAAABAG0QAAACAFkCAAADAHoOAAABABAMAAACAIkVAAADAHcTAAABAFMPAAAC
AHwRAAADAJAOAAABALwJAAABALwJAAABALwJAAABALwJAAABALwJAAABALwJAAABALwJAAABALwJ
AAABALwJAAABALwJAAABALwJAAABALwJAAABALwJAAABALwJAAABALwJAAABALwJAAABALwJAAAB
ALwJAAABALwJAAABALwJAAABAMoSAAACAI4QAAADAJ0SAAAEAJAOAAABAP0TAAABAP0TAAABALwJ
AAABAFUVAAABAHMKAAABALwJAAABALwJAAABALwJAAABALwJAAABALwJAAABALwJAAABALwJAAAB
ALwJAAABALwJAAABALwJAAABALwJAAABALwJAAABALwJAAABALwJAAABALwJAAABALwJAAABALwJ
AAABAP0FAAABAP0FAAABAP0FAAABAP0FDgBxAA8AcQAQAHEAEQBxAAkAgRABABEAgRAGABkAgRAK
ACkAgRAQADEAgRAQADkAgRAQAEEAgRAQAEkAgRAQAFEAgRAQAFkAgRAQAGEAgRAQAGkAgRAGAHkA
gRAVAIkAgRAbANEAgRAGAOEA/hQGAOEA7QUhAPkAgRAGAEkBgRAGAGkBgRAnADkBYQkGADkBbAkG
AHkBjRMGAAwAPgc5AAwAwxRCAAwAsQpPABQAPgc5ABQAwxRCABQAsQpPABwAPgc5ABwAwxRCABwA
sQpPAIEBqhWHAIkBPgeKAIkBnBSQAIkBXgWXACQAIQyrAJkBJxOxAJEAfgq1AJkAGQ65AKEBHgK+
AKEBcxHEAKkBMQrKAKEAgRAGAIEBBQX1ALEBkhP7ACwAgRAGAIEB9AkIAYEBkQoNASwAyxETASwA
+QIZAYEBDBMfASwAcxAlATQALBQ0AaEA1BE5AbkB+QI/ATQA/hRGAckBAgcGAKEAZhVKAYEBkQpP
AbkAKgxUAaEA6BJaAdEB+QJgAZkAPgW1AEEBQAq1AMEAgRAQANkBRQdrAdkBmwwGAOkBgRBxAfEB
RwZ4AekBpRJ/AQEC+QKFASECeAmPAQEC+QKUAfEBmhWfASkCgRAGACkC/gSjAYEBBROqASEBgRCx
ASEBKgy9ASEB8wsBADECgRAQACEBXxUGACEBfhMGACEBgRNGATkBgRAGADkBEgLHATkBkBHPAZEA
gRAGADkBagLVATkCmw3bAUECvwXhAUkCbg/oATkBXRHuAVECIQz0ATkBQhX7AVkCExUBAnEAmQUI
AnEAjRUQAlEBgRAWAnEBgRAGAIECgRAVAMkAgRAGAIkCPxMmAqEBoAG+AMkAcxUuAqEBhwozApEC
/AYGAMkAgRA5AokCHBM/ApkCwgleApkC+wtjAqkCgRAGAKkCmwoBAKkC6AlqAkQADRB9AkwAUgNG
AQwAOwOMAkwApBM0AQwALA6hAgwArhMZAQwA7QUhABkCfgq1AIEBBRO4AhQALA6hAhQArhMZARQA
7QUhABEBgRAGALECgRAQABEBtBLaAhEBgxLhArkCiBTnAlQADw8GAMkCgRAQAFQA+QIZAdEC+QL7
AgEBgRABAxEBtgIKA1wADRB9AmQAUgNGARwAOwOMAmQApBM0AQkBHQU2AwkBOBQ8A9kCpAJCA2wA
DRB9AnQAUgNGAXQApBM0ARwALA6hAhwArhMZARwA7QUhAOECgRD7ArkCYg18A3wAgRAGAIQAgRCX
A3wA+QIZARkBgRCfAyQAcwByBi4ACwAHBS4AEwAQBS4AGwAvBS4AIwA4BS4AKwBhBS4AMwBhBS4A
OwBhBS4AQwA4BS4ASwBnBS4AUwBhBS4AWwB+BUMAYwBtBoAAawDMBaAAawD6BcAAawAmBuAAawBI
BuMAmwBtBmEBewBtBoEBewBtBqEBewBtBsEBewBtBsMBewBtBuEBewBtBuMBewBtBgECewBtBgMC
ewBtBiECewBtBiMCewBtBkECewBtBmECewBtBoECewBtBqECewBtBsECewBtBuECewBtBgEDewBt
BiEDewBtBkEDewBtBkkDowAvBWEDewBtBmkDowAvBYEDewBtBgAIewBtBiAIewBtBkAIewBtBmAI
ewBtBoAIewBtBqAIewBtBsAIewBtBuAIewBtBgAJewBtBiAJewBtBkAJewBtBmAJewBtBoAJewBt
BqAJewBtBsAJewBtBuAJewBtBgAKewBtBiAKewBtBkAKewBtBmAKewBtBqAKewBtBsAKewBtBuAK
ewBtBgALewBtBiALewBtBkALewBtBoALewBtBqALewBtBsALewBtBuALewBtBgAMewBtBiAMewBt
BmAMewBtBoAMewBtBuAMkwBtBiANkwBtBmANkwBtBqANkwBtBi4AWABoAHgAggDQAGYBwwEeAkYC
pwK+AmUDAwABAAUAFQAGABYABwAaAAgAHAAKAB0ACwAnAAwAKgANAC0AAAAJAt8EAAAmC+MEAADm
AucEAABVC+MEAADhEucEAADlC+MEAAAqA+cEAABqC+MEAAC5BecEAACGC+MEAAB9BucEAACXC+ME
AAA0B+cEAAC6C+MEAAAaB+cEAACnC+MEAADgAucEAABPC+MEAAAED+cEAADPC+MEAADdAesEAAB/
FecEAADmAd8EAABdE+cEAAAcEOcEAABeD/EEAADMBvcEAACcE/0EAAAJAucEAADmAucEAADhEucE
AAAqA+cEAAC5BecEAAB9BucEAAA0B+cEAAAaB+cEAAAlFAIFAAAED+cEAAAJCucEAADmAucEAAB9
BucEAACODOcEAACVBucEAACzDOcEAACCFOcEAQATAAMAAQAUAAUAAQAVAAcAAQAWAAkAAQAXAAsA
AQAYAA0AAQAZAA8AAQAaABEAAQAbABMAAQAcABUAAQAdABcAAQAeABkAAQAfABsAAQAgAB0AAQAh
AB8AAQAiACEAAQAjACMAAQAkACUAAQAlACcAAQAmACkAAgAwACsAAgAyAC0AAgAzAC8AAgA0ADEA
AgA1ADMAAgA3ADUAAgA4ADcAAQA5ADcAAgA6ADkAAgBAADsAAQBBADsAAgBCAD0AAQBDAD0AAgBE
AD8AAQBFAD8AAgBGAEEAAQBHAEEAAgBIAEMAAQBJAEMAAgBKAEUAAQBLAEUAAgBMAEcAAQBNAEcA
AgBOAEkAAQBPAEkAAgBQAEsAAQBRAEsAAgBSAE0AAQBTAE0AAgBVAE8AAQBWAE8AAgBXAFEAAQBY
AFEAAgBZAFMAAQBaAFMAAgBcAFUAAQBdAFUAAgBeAFcAAQBfAFcAAgBgAFkAAQBhAFkAAgBjAFsA
AQBkAFsADgDMACEADgDOACMADwDQACEADwDSACMAEADUACEAEADWACMAEQDYACEAEQDaACMAMwBd
AG0AogACAS4BIwJ3AoYC8gIaAyIDSgNQA4MDjwMEgAAAAQAAAAAAAAAAAAAAAABCAQAABAAAAAAA
AAAAAAAAygOAAgAAAAAMAAAAAAAAAAAAAADTA6YUAAAAAAQAAAAAAAAAAAAAAMoDoAYAAAAABAAA
AAAAAAAAAAAAygNeAgAAAAAEAAAAAAAAAAAAAADcA+EOAAAAAAwAAAAAAAAAAAAAANMD0RQAAAAA
DAAAAAAAAAAAAAAA0wOaDgAAAAAEAAAAAAAAAAAAAADKAzMMAAAAAAMAAAAAAAAAAAAAAOUD3gwA
AAAADAAAAAAAAAAAAAAA0wO9DgAAAAAEAAAAAAAAAAAAAADKAyUNAAAAAAQAAAAAAAAAAAAAAOUD
4BEAAAAAAAAAAAEAAADcEAAACQACAAoAAgALAAIADAACAA0AAgAOAAIADwACABAAAgARAAIAAAAA
AHsAVwIAAAAAfQBXAjMASgA5AGMAPwBzAD8AfQDnAHEC7QCXAhsBKgMbAVYDfABgAxsBrwMbAbsD
fADFAwAAAAAASURUU0NvbXBvbmVudE1ldGFEYXRhMTAwAElEVFNWYXJpYWJsZTEwMABJRFRTUnVu
dGltZUNvbm5lY3Rpb25Db2xsZWN0aW9uMTAwAElEVFNSdW50aW1lQ29ubmVjdGlvbjEwMABJRFRT
Q29ubmVjdGlvbk1hbmFnZXIxMDAASURUU1ZhcmlhYmxlczEwMABJRFRTRXZhbHVhdG9yQ29udGV4
dDEwMAA8PnVfXzEASUVudW1lcmFibGVgMQBUYXNrYDEASHR0cEhlYWRlclZhbHVlQ29sbGVjdGlv
bmAxAEFzeW5jVGFza01ldGhvZEJ1aWxkZXJgMQBUYXNrQXdhaXRlcmAxAExpc3RgMQBJbnQzMgA8
Y2xpZW50PjVfXzIAPD51X18yAEtleVZhbHVlUGFpcmAyAEVuY29kZVRvNjQAU0NfOWNjNzY0ZGI1
ZGM4NGEwNmFiZDcxYjM3NDIwZTNlODYAPFByb2Nlc3NBY2VkZW1pY1Nlc3Npb25zPmRfXzYAPEdl
dEFjYWRlbWljU2Vzc2lvbnNEVD5kX183AGdldF9VVEY4ADxHZXRGaWxlU2l6ZT5kX184ADxHZXRB
Y2Nlc3NUb2tlbj5kX185ADxNb2R1bGU+AGdldF9QU0RCAGdldF9DbGllbnRPbmVSb3N0ZXJJRABn
ZXRfQ2xpZW50SUQAc2V0X0NsaWVudElEAEdldE91dHB1dElEAGdldF9BU0NJSQB0b2tlblVSSQBi
YXNlVVJMAFN5c3RlbS5JTwBHZXRBY2FkZW1pY1Nlc3Npb25zRFQAQXJlYQBTeXN0ZW0uRGF0YQBn
ZXRfQ29tcG9uZW50TWV0YURhdGEAbXNjb3JsaWIAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMA
UmVhZEFzU3RyaW5nQXN5bmMAUG9zdEFzeW5jAGdldF9Tb3VyY2VkSWQAc2V0X1NvdXJjZWRJZABz
ZXRfUGFyZW50U291cmNlZElkAGNsaWVudElkAEFkZABNYXJrT3V0cHV0c0ZpbmlzaGVkAGdldF9E
YXRlTGFzdE1vZGlmaWVkAHNldF9EYXRlTGFzdE1vZGlmaWVkAEF3YWl0VW5zYWZlT25Db21wbGV0
ZWQAZ2V0X0lzQ29tcGxldGVkADxDbGllbnRJRD5rX19CYWNraW5nRmllbGQAPFNvdXJjZWRJZD5r
X19CYWNraW5nRmllbGQAPERhdGVMYXN0TW9kaWZpZWQ+a19fQmFja2luZ0ZpZWxkADxUaXRsZT5r
X19CYWNraW5nRmllbGQAPFR5cGU+a19fQmFja2luZ0ZpZWxkADx0b2tlbl90eXBlPmtfX0JhY2tp
bmdGaWVsZAA8RW5kRGF0ZT5rX19CYWNraW5nRmllbGQAPFN0YXJ0RGF0ZT5rX19CYWNraW5nRmll
bGQAPEhyZWY+a19fQmFja2luZ0ZpZWxkADxhY2Nlc3NfdG9rZW4+a19fQmFja2luZ0ZpZWxkADxl
eHBpcmVzX2luPmtfX0JhY2tpbmdGaWVsZAA8U2Nob29sWWVhcj5rX19CYWNraW5nRmllbGQAPFN0
YXR1cz5rX19CYWNraW5nRmllbGQAPFBhcmVudD5rX19CYWNraW5nRmllbGQAPGNvdW50PmtfX0Jh
Y2tpbmdGaWVsZABEYkNvbW1hbmQAU3FsQ29tbWFuZABBcHBlbmQAUmVwbGFjZQBkZWZhdWx0SW5z
dGFuY2UARW5zdXJlU3VjY2Vzc1N0YXR1c0NvZGUAdG9FbmNvZGUAZ2V0X01lc3NhZ2UASHR0cFJl
c3BvbnNlTWVzc2FnZQBJbnZva2UASnNvblN0cmluZ1RvRGF0YVRhYmxlAElEaXNwb3NhYmxlAFJ1
bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAGdldF9UaXRsZQBzZXRfVGl0bGUAR2V0
UnVudGltZUNvbm5lY3Rpb25CeU5hbWUASUFzeW5jU3RhdGVNYWNoaW5lAFNldFN0YXRlTWFjaGlu
ZQBzdGF0ZU1hY2hpbmUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAZ2V0X1R5cGUA
c2V0X1R5cGUAU3FsRGJUeXBlAHNldF9Db21tYW5kVHlwZQBWYWx1ZVR5cGUAU2VjdXJpdHlQcm90
b2NvbFR5cGUAcHJvY2Vzc1R5cGUAZ2V0X3Rva2VuX3R5cGUAc2V0X3Rva2VuX3R5cGUAU3lzdGVt
LkNvcmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAEFwcGxpY2F0aW9u
U2V0dGluZ3NCYXNlAFdyaXRlVG9EYXRhYmFzZQBDbG9zZQBEaXNwb3NlAGdldF9FbmREYXRlAHNl
dF9FbmREYXRlAGdldF9TdGFydERhdGUAc2V0X1N0YXJ0RGF0ZQBDcmVhdGUAZ2V0X1N0YXRlAEVk
aXRvckJyb3dzYWJsZVN0YXRlAENvbm5lY3Rpb25TdGF0ZQA8PjFfX3N0YXRlAER5bmFtaWNBdHRy
aWJ1dGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJp
YnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJs
eVRpdGxlQXR0cmlidXRlAEFzeW5jU3RhdGVNYWNoaW5lQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVt
YXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBEZWJ1Z2dlckhpZGRlbkF0dHJp
YnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0
dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0
dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50
cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGli
aWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQBzZXRfVmFsdWUAQXV0aGVudGlj
YXRpb25IZWFkZXJWYWx1ZQBNZWRpYVR5cGVXaXRoUXVhbGl0eUhlYWRlclZhbHVlAHZhbHVlAHNl
dF9FeHBlY3QxMDBDb250aW51ZQBHZXRGaWxlU2l6ZQBKc29uRGVzZXJpYWxpemUASW5kZXhPZgBn
ZXRfSHJlZgBzZXRfSHJlZgBFbmNvZGluZwBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvQmFz
ZTY0U3RyaW5nAGdldF9Db25uZWN0aW9uU3RyaW5nAGNsZWFuSnNvblN0cmluZwBHZXRKc29uU3Ry
aW5nAGpzb25TdHJpbmcAVG9TdHJpbmcAR2V0U3RyaW5nAFN1YnN0cmluZwBzZXRfTWF4SnNvbkxl
bmd0aABVcmkAZ2V0X1Rhc2sAU3lzdGVtLkNvbGxlY3Rpb25zLk9iamVjdE1vZGVsAFN5c3RlbS5D
b21wb25lbnRNb2RlbABTQ185Y2M3NjRkYjVkYzg0YTA2YWJkNzFiMzc0MjBlM2U4Ni5kbGwAUG93
ZXJTaGVsbABzZXRfQ2xpZW50SURfSXNOdWxsAHNldF9Tb3VyY2VkSWRfSXNOdWxsAHNldF9QYXJl
bnRTb3VyY2VkSWRfSXNOdWxsAHNldF9EYXRlTGFzdE1vZGlmaWVkX0lzTnVsbABzZXRfVGl0bGVf
SXNOdWxsAHNldF9UeXBlX0lzTnVsbABzZXRfRW5kRGF0ZV9Jc051bGwAc2V0X1N0YXJ0RGF0ZV9J
c051bGwAc2V0X1NjaG9vbFllYXJfSXNOdWxsAHNldF9TdGF0dXNfSXNOdWxsAFNldE51bGwAc2V0
X1NlY3VyaXR5UHJvdG9jb2wAdXJsAE1lbW9yeVN0cmVhbQBnZXRfSXRlbQBzZXRfSXRlbQBTeXN0
ZW0AcmVzb3VyY2VNYW4Ac2VuZFRva2VuAFBTQWNjZXNzVG9rZW4AR2V0QWNjZXNzVG9rZW4AYWNj
ZXNzVG9rZW4AZ2V0X2FjY2Vzc190b2tlbgBzZXRfYWNjZXNzX3Rva2VuAE9wZW4AZ2V0X2V4cGly
ZXNfaW4Ac2V0X2V4cGlyZXNfaW4AU2NyaXB0TWFpbgBEYXRhQ29sdW1uAHBMb2NhdGlvbgBTeXN0
ZW0uTWFuYWdlbWVudC5BdXRvbWF0aW9uAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9i
YWxpemF0aW9uAFN5c3RlbS5SdW50aW1lLlNlcmlhbGl6YXRpb24AU3lzdGVtLldlYi5TY3JpcHQu
U2VyaWFsaXphdGlvbgBzZXRfQXV0aG9yaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBEYXRhQ29s
dW1uQ29sbGVjdGlvbgBnZXRfUnVudGltZUNvbm5lY3Rpb25Db2xsZWN0aW9uAFNxbFBhcmFtZXRl
ckNvbGxlY3Rpb24ARGF0YVJvd0NvbGxlY3Rpb24ARGJDb25uZWN0aW9uAFNxbENvbm5lY3Rpb24A
SW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBnZXRfSW5uZXJFeGNlcHRpb24AU2V0RXhjZXB0aW9u
AFN5c3RlbS5EYXRhLkNvbW1vbgBTeXN0ZW0uUnVudGltZS5TZXJpYWxpemF0aW9uLkpzb24AQ3Vs
dHVyZUluZm8ATG9nSW5mbwBPdXRwdXROYW1lTWFwAE91dHB1dE1hcABNaWNyb3NvZnQuU3FsU2Vy
dmVyLkRUU1J1bnRpbWVXcmFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUGlwZWxpbmVXcmFwAFN5
c3RlbS5OZXQuSHR0cABnZXRfU2Nob29sWWVhcgBzZXRfU2Nob29sWWVhcgBDbGVhcgBTdHJpbmdC
dWlsZGVyADw+dF9fYnVpbGRlcgBPdXRwdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1
ZmZlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9Db25uZWN0aW9uTWFuYWdlcgBTZXJ2aWNlUG9p
bnRNYW5hZ2VyAEpzb25IZWxwZXIATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZS5XcmFw
cGVyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lLldyYXBwZXIARGJQYXJhbWV0ZXIA
U3FsUGFyYW1ldGVyAEdldEF3YWl0ZXIAZ2V0X0NsaWVudFNlcnZlcgBEYXRhQ29udHJhY3RKc29u
U2VyaWFsaXplcgBYbWxPYmplY3RTZXJpYWxpemVyAEphdmFTY3JpcHRTZXJpYWxpemVyAEVycm9y
AEdldEVudW1lcmF0b3IALmN0b3IALmNjdG9yAE91dHB1dElEcwBTeXN0ZW0uRGlhZ25vc3RpY3MA
U3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDXzljYzc2
NGRiNWRjODRhMDZhYmQ3MWIzNzQyMGUzZTg2LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNl
cwBEZWJ1Z2dpbmdNb2RlcwBTQ185Y2M3NjRkYjVkYzg0YTA2YWJkNzFiMzc0MjBlM2U4Ni5Qcm9w
ZXJ0aWVzAGdldF9SZWFkT25seVZhcmlhYmxlcwBHZXRCeXRlcwBCdWZmZXJDb2x1bW5JbmRleGVz
AEdldENvbHVtbkluZGV4ZXMAU2V0dGluZ3MAPD40X190aGlzAFN5c3RlbS5UaHJlYWRpbmcuVGFz
a3MAQ29udGFpbnMAZ2V0X0NvbHVtbnMAU3lzdGVtLldlYi5FeHRlbnNpb25zAFBTQWNhZGVtaWNT
ZXNzaW9ucwBQcm9jZXNzQWNlZGVtaWNTZXNzaW9ucwBTeXN0ZW0uVGV4dC5SZWd1bGFyRXhwcmVz
c2lvbnMAQ29ubmVjdGlvbnMAU3lzdGVtLk5ldC5IdHRwLkhlYWRlcnMASHR0cEhlYWRlcnMASHR0
cFJlcXVlc3RIZWFkZXJzAGdldF9EZWZhdWx0UmVxdWVzdEhlYWRlcnMAQnVmZmVycwBnZXRfUGFy
YW1ldGVycwBzZXRfQmFzZUFkZHJlc3MARmluaXNoT3V0cHV0cwBnZXRfU3RhdHVzAHNldF9TdGF0
dXMAZ2V0X1Jvd3MAQ3JlYXRlTmV3T3V0cHV0Um93cwBDb25jYXQARm9ybWF0AFBTT2JqZWN0AFJl
YWRPYmplY3QAZ2V0X0ltbWVkaWF0ZUJhc2VPYmplY3QAV3JpdGVPYmplY3QAZHQAU3lzdGVtLk5l
dABnZXRfQ2xpZW50U2VjcmV0AGNsaWVudFNlY3JldABzZWNyZXQAU2V0RW5kT2ZSb3dzZXQAV2Fp
dABTcGxpdABnZXRfRGVmYXVsdABHZXRSZXN1bHQAU2V0UmVzdWx0AFN5c3RlbS5EYXRhLlNxbENs
aWVudABIdHRwQ2xpZW50AFVzZXJDb21wb25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBv
bmVudABnZXRfUGFyZW50AHNldF9QYXJlbnQAQWNhZGVtaWNQYXJlbnQAZ2V0X0N1cnJlbnQAZ2V0
X0NvbnRlbnQARm9ybVVybEVuY29kZWRDb250ZW50AFN0cmluZ0NvbnRlbnQASHR0cENvbnRlbnQA
Z2V0X2NvdW50AHNldF9jb3VudABnZXRfQWNjZXB0AFBTU2NyaXB0AEFkZFNjcmlwdABNaWNyb3Nv
ZnQuU3FsU2VydmVyLlR4U2NyaXB0AFN0YXJ0AENvbnZlcnQATWljcm9zb2Z0LlNxbFNlcnZlci5Q
aXBlbGluZUhvc3QAUHJpbWVPdXRwdXQATW92ZU5leHQAU3lzdGVtLlRleHQAR2V0VmFsdWVXaXRo
Q29udGV4dABTY3JpcHRDb21wb25lbnRFdmFsQ29udGV4dABnZXRfRXZhbHVhdG9yQ29udGV4dABE
YXRhUm93AEFkZFJvdwBOZXdSb3cAUmVnZXgAVG9BcnJheQBnZXRfQ2xpZW50S2V5AGtleQBnZXRf
QXNzZW1ibHkARXhlY3V0ZU5vblF1ZXJ5AEVtcHR5AAADWwAAAQADXQAAB30ALAB7AAADewAAA30A
AAMsAAADOgAAAyIAAD1KAHMAbwBuAFMAdAByAGkAbgBnAFQAbwBEAGEAdABhAFQAYQBiAGwAZQA6
ACAAQwBvAGwAdQBtAG4AcwAAP0UAcgByAG8AcgAgAFAAYQByAHMAaQBuAGcAIABDAG8AbAB1AG0A
bgAgAE4AYQBtAGUAIAA6ACAAewAwAH0AAANcAABHSgBzAG8AbgBTAHQAcgBpAG4AZwBUAG8ARABh
AHQAYQBUAGEAYgBsAGUAOgAgAEYAbwByACAAZQBhAGMAaAAgAHIAbwB3AAA7RQByAHIAbwByACAA
UABhAHIAcwBpAG4AZwAgAFIAbwB3ACAAIABOAGEAbQBlACAAOgAgAHsAMAB9AAArSgBzAG8AbgBT
AHQAcgBpAG4AZwBUAG8ARABhAHQAYQBUAGEAYgBsAGUAAEF7ACIAbgBhAG0AZQAiADoAIgBzAGMA
aABvAG8AbABzAHQAYQBmAGYAIgAsACIAcgBlAGMAbwByAGQAIgA6AFsAAC0iAF8AbgBhAG0AZQAi
ADoAIgBzAGMAaABvAG8AbABzAHQAYQBmAGYAIgAsAAA/XQAsACIAQABlAHgAdABlAG4AcwBpAG8A
bgBzACIAOgAiAHMAXwBzAHMAZgBfAG4AYwBlAGEAXwB4ACIAfQAAaywAIgBAAGUAeAB0AGUAbgBz
AGkAbwBuAHMAIgA6ACIAdQBfAHMAYwBoAG8AbwBsAHMAdABhAGYAZgB1AHMAZQByAGYAaQBlAGwA
ZABzACwAcwBfAHMAcwBmAF8AbgBjAGUAYQBfAHgAIgAAE3MAcABMAG8AZwBJAG4AZgBvAAAVQABD
AGwAaQBlAG4AdABVAEkARAAADUAARQByAHIAbwByAAATQABGAGkAbABlAFQAeQBwAGUAAAtAAEEA
cgBlAGEAABFAAEwAbwBnAEkAbgBmAG8AAA9wAGEAcgBhAG0AIAAKAAAHKAAgAAoAADsgACAAWwBQ
AGEAcgBhAG0AZQB0AGUAcgAoAFAAbwBzAGkAdABpAG8AbgAgAD0AIAAxACkAXQAgAAoAAB8gACAA
WwB1AHIAaQBdACQAVQByAGkAIAA9ACAAJwABCy8AJwAsACAACgABNyAAIABbAFAAYQByAGEAbQBl
AHQAZQByACgAUABvAHMAaQB0AGkAbwBuACAAPQAgADIAKQBdAAAxIAAgAFsAcwB0AHIAaQBuAGcA
XQAkAFMAZQBjAHIAZQB0AGsAZQB5ACAAPQAgACcAAQknACwAIAAKAAE7IAAgAFsAUABhAHIAYQBt
AGUAdABlAHIAKABQAG8AcwBpAHQAaQBvAG4AIAA9ACAAMwApAF0AIAAKAAAzIAAgAFsAcwB0AHIA
aQBuAGcAXQAkAFAAYQBzAHMAcABoAHIAYQBzAGUAIAA9ACAAJwABBycAIAAKAAEHKQAgAAoAAAMK
AAA1ZgB1AG4AYwB0AGkAbwBuACAARwBlAHQALQBBAGMAYwBlAHMAcwBUAG8AawBlAG4AIAAKAAEH
ewAgAAoAAICFIAAgACAAWwB1AHIAaQBdACQAcgBlAHEAdQBlAHMAdABVAHIAaQAgAD0AIAAkAHUA
cgBpAC4AUwBjAGgAZQBtAGUAIAArACAAJwA6AC8ALwAnACAAKwAgACQAdQByAGkALgBIAG8AcwB0
ACAAKwAgACcALwB0AG8AawBlAG4AJwAgAAoAAYDvIAAgACAAJABiAGEAcwBpAGMAQQB1AHQAaAAg
AD0AIABbAFMAeQBzAHQAZQBtAC4AQwBvAG4AdgBlAHIAdABdADoAOgBUAG8AQgBhAHMAZQA2ADQA
UwB0AHIAaQBuAGcAKABbAFMAeQBzAHQAZQBtAC4AVABlAHgAdAAuAEUAbgBjAG8AZABpAG4AZwBd
ADoAOgBVAFQARgA4AC4ARwBlAHQAQgB5AHQAZQBzACgAIgAkAHsAUwBlAGMAcgBlAHQAawBlAHkA
fQA6ACQAewBQAGEAcwBzAHAAaAByAGEAcwBlAH0AIgApACkAIAAKAAAlIAAgACAAJABoAGUAYQBk
AGUAcgBzACAAPQAgAEAAewAgAAoAAFsgACAAIAAgACAAIAAgAEEAdQB0AGgAbwByAGkAegBhAHQA
aQBvAG4AIAA9ACAAIgBCAGEAcwBpAGMAIAAkAHsAYgBhAHMAaQBjAEEAdQB0AGgAfQAiACAACgAA
CSAAIAAgAH0AAICvIAAgACAAJABiAG8AZAB5ACAAPQAgACcAZwByAGEAbgB0AF8AdAB5AHAAZQA9
AGMAbABpAGUAbgB0AF8AYwByAGUAZABlAG4AdABpAGEAbABzACYAcwBjAG8AcABlAD0AcwBjAG8A
cABlAG4AYQBtAGUAMQAlADIAMABzAGMAbwBwAGUAbgBhAG0AZQAyACUAMgAwAHMAYwBvAHAAZQBu
AGEAbQBlAHgAJwAgAAoAATskAHAAYQByAGEAbQBJAG4AdgBvAGsAZQBSAGUAcwB0AE0AZQB0AGgA
bwBkACAAPQAgAEAAewAgAAoAADMgACAAIABNAGUAdABoAG8AZAAJAAkAIAAgACAAIAA9ACAAJwBQ
AG8AcwB0ACcAIAAKAAE5IAAgACAAVQByAGkACQAJAAkAIAAgACAAIAA9ACAAJAByAGUAcQB1AGUA
cwB0AFUAcgBpACAACgAAOSAAIAAgAEgAZQBhAGQAZQByAHMACQAJACAAIAAgACAAPQAgACQAaABl
AGEAZABlAHIAcwAgAAoAAC0gACAAIABCAG8AZAB5AAkACQAgACAAIAAgAD0AIAAkAGIAbwBkAHkA
IAAKAAB1IAAgACAAQwBvAG4AdABlAG4AdABUAHkAcABlAAkAIAAgACAAIAA9ACAAJwBhAHAAcABs
AGkAYwBhAHQAaQBvAG4ALwB4AC0AdwB3AHcALQBmAG8AcgBtAC0AdQByAGwAZQBuAGMAbwBkAGUA
ZAAnACAACgABOSAAIAAgAFUAcwBlAEIAYQBzAGkAYwBQAGEAcgBzAGkAbgBnACAAPQAgACQAdABy
AHUAZQAgAAoAAAd9ACAACgAAbyAAIAAgACQAYQBjAGMAZQBzAHMAIAA9ACAASQBuAHYAbwBrAGUA
LQBSAGUAcwB0AE0AZQB0AGgAbwBkACAAQABwAGEAcgBhAG0ASQBuAHYAbwBrAGUAUgBlAHMAdABN
AGUAdABoAG8AZAAgAAoAAT0gACAAIABpAGYAIAAoACQAYQBjAGMAZQBzAHMALgBhAGMAYwBlAHMA
cwBfAHQAbwBrAGUAbgApACAACgAADSAAIAAgAHsAIAAKAAAvIAAgACAAIAAgACAAIAByAGUAdAB1
AHIAbgAgACQAYQBjAGMAZQBzAHMAIAAKAAANIAAgACAAfQAgAAoAABMgACAAIABlAGwAcwBlACAA
CgAAUyAAIAAgACAAIAAgACAAdABoAHIAbwB3ACAAIgBOAG8AIABhAGMAYwBlAHMAcwAgAHQAbwBr
AGUAbgAgAHIAZQB0AHUAcgBuAGUAZAAiACAACgAAgNNbAHUAcgBpAF0AJAByAGUAcQB1AGUAcwB0
AFUAcgBpACAAPQAgACQAdQByAGkALgBTAGMAaABlAG0AZQAgACsAIAAnADoALwAvACcAIAArACAA
JAB1AHIAaQAuAEgAbwBzAHQAIAArACAAJwAvAGkAbQBzAC8AbwBuAGUAcgBvAHMAdABlAHIALwB2
ADEAcAAxAC8AYQBjAGEAZABlAG0AaQBjAFMAZQBzAHMAaQBvAG4AcwA/AGwAaQBtAGkAdAA9ADEA
MAAwADAAMAAnACAACgABNyQAYQBjAGMAZQBzAHMAIAA9ACAARwBlAHQALQBBAGMAYwBlAHMAcwBU
AG8AawBlAG4AIAAKAAFLJABiAGUAYQByAGUAcgBUAG8AawBlAG4AIAA9ACAAJABhAGMAYwBlAHMA
cwAuAGEAYwBjAGUAcwBzAF8AdABvAGsAZQBuACAACgAAHyQAaABlAGEAZABlAHIAcwAgAD0AIABA
AHsAIAAKAABhIAAgACAAQQB1AHQAaABvAHIAaQB6AGEAdABpAG8AbgAJAAkAIAAgACAAPQAgACIA
QgBlAGEAcgBlAHIAIAAkAHsAYgBlAGEAcgBlAHIAVABvAGsAZQBuAH0AIgAgAAoAADEgACAAIABN
AGUAdABoAG8AZAAJAAkAIAAgACAAIAA9ACAAJwBHAGUAdAAnACAACgABbSQAcgBlAHMAcABvAG4A
cwBlACAAPQAgAEkAbgB2AG8AawBlAC0AUgBlAHMAdABNAGUAdABoAG8AZAAgAEAAcABhAHIAYQBt
AEkAbgB2AG8AawBlAFIAZQBzAHQATQBlAHQAaABvAGQAIAAKAAFvJAByAGUAcwBwAG8AbgBzAGUA
LgBhAGMAYQBkAGUAbQBpAGMAUwBlAHMAcwBpAG8AbgBzACAAfAAgAEMAbwBuAHYAZQByAHQAVABv
AC0ASgBzAG8AbgAgAC0ARABlAHAAdABoACAAMQA2ACAACgABR2EAcABwAGwAaQBjAGEAdABpAG8A
bgAvAHgALQB3AHcAdwAtAGYAbwByAG0ALQB1AHIAbABlAG4AYwBvAGQAZQBkACAACgABR2kAbQBz
AC8AbwBuAGUAcgBvAHMAdABlAHIALwB2ADEAcAAxAC8AYQBjAGEAZABlAG0AaQBjAFMAZQBzAHMA
aQBvAG4AcwAAC3QAbwBrAGUAbgAAEVMAZQBzAHMAaQBvAG4AcwAAgJtJAHMATgB1AGwAbAAgAHAA
cgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABGAGEAbABz
AGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAAYwBvAGwA
dQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AABFPAHUAdABwAHUAdAAgADAAAAlQAFMARABCAAATQwBs
AGkAZQBuAHQASwBlAHkAACNDAGwAaQBlAG4AdABPAG4AZQBSAG8AcwB0AGUAcgBJAEQAABlDAGwA
aQBlAG4AdABTAGUAYwByAGUAdAAAGUMAbABpAGUAbgB0AFMAZQByAHYAZQByAABxUwBDAF8AOQBj
AGMANwA2ADQAZABiADUAZABjADgANABhADAANgBhAGIAZAA3ADEAYgAzADcANAAyADAAZQAzAGUA
OAA2AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAlUwBFAFMAUwBJ
AE8ATgBTAC0AcwBlAG4AZABUAG8AawBlAG4AAS9QAHIAbwBjAGUAcwBzAEEAYwBhAGQAZQBtAGkA
YwBTAGUAcwBzAGkAbwBuAHMAAElHAGUAdAAgAEEAYwBhAGQAZQBtAGkAYwAgAFMAZQBzAHMAaQBv
AG4AcwAgAC0AIABSAG8AdwBzACAAQQBkAGQAZQBkADoAIAABJ0cAZQB0AEEAYwBhAGQAZQBtAGkA
YwBTAGUAcwBzAGkAbwBuAHMAAA0vAGMAbwB1AG4AdAAAIWEAcABwAGwAaQBjAGEAdABpAG8AbgAv
AGoAcwBvAG4AABtBAHUAdABoAG8AcgBpAHoAYQB0AGkAbwBuAAAPQgBlAGEAcgBlAHIAIAAAF1IA
ZQBjAG8AcgBkAEMAbwB1AG4AdAAAF0cAZQB0AEYAaQBsAGUAUwBpAHoAZQAAQ2EAcABwAGwAaQBj
AGEAdABpAG8AbgAvAHgALQB3AHcAdwAtAGYAbwByAG0ALQB1AHIAbABlAG4AYwBvAGQAZQBkAAEL
QgBhAHMAaQBjAAAVZwByAGEAbgB0AF8AdAB5AHAAZQAAJWMAbABpAGUAbgB0AF8AYwByAGUAZABl
AG4AdABpAGEAbABzAAALcwBjAG8AcABlAABJcwBjAG8AcABlAG4AYQBtAGUAMQAlADIAMABzAGMA
bwBwAGUAbgBhAG0AZQAyACUAMgAwAHMAYwBvAHAAZQBuAGEAbQBlAHgAAHdPgZxXO2tPqSE3mZkU
dEcABCABAQgDIAABBSABARERBCABAQ4FIAEBEjkFIAEBHQIFIAEBEnEGIAEBEYCxBAcBETgFFRF5
AQgIAAAVEXkBEwAHMAEBARAeAAQKARE4CCAAFRJBARMABAcBETwFFRF5ARwECgERPAQHARFABRUR
eQEOBAoBEUAEBwERRAQKARFEBAcCDg4CBg4FAAASgMUGIAESgMUOCiAAFRKAyQESgM0IFRKAyQES
gM0FIAETAAgDIAAcAyAADgQgABJNBQAAEoDRBSABHQUOBQABDh0FJAcTElEdDhUSVQEOHQ4IHQ4I
DggOFRFZAQ4OEl0OCA4OElESTQUgAg4ODgYAAh0ODg4FFRJVAQ4EIAEIDgUgAg4ICAUgAQITAAUg
AQETAAUAAg4OHAggABURWQETAAUVEVkBDgQgABMABSAAEoDdBiABEoDhDgMgAAIEIAASXQQgAQ4I
BSACAQ4cBSAAEoDpBSABARJdBAcBEmEFIAARgPEGIAIBDhJhBiABARGA/QUgABKBAQkgAhKBBQ4R
gQkEIAEBHAogAxKBBQ4RgQkIAyAACAYgARKBFQ4GAAMODg4OCyADARKAlR0IEoCZBSACAQgcAwcB
CAcAAggSgJkOBSABHQgIBSAAEoEdBSAAEoEhBiABEoElDgUgABKAoQUgABKBKQYgARKBLRwFAAAS
gTEGIAEcEoE1BwABEjkRgTkFIAASgT0HIAIBDhKBPQQHARJlAh4AByACARKBSRwEIAAdBQUgAQ4d
BQUgAQEdBQYgARwSgUkXBwwIEggIDg4ODg4dEigVEXUBHBJNEk0EAAEBAgYAAQERgVEGMAEBHgAO
BQoBHRIoBRUSQQEcCCAAFRF1ARMABRURdQEcCjACAgEQHgAQHgEJCgIVEXUBHBE4BSABARJNEAcI
EggcCB0SKAgSKBJNEk0FAAIODg4bBwoIEggODhKAgQ4VEXUBEoCFFRF1AQ4STRJNBiABARKBWQUg
ABKBXQogABUSgWEBEoFlCBUSgWEBEoFlBSACAQ4OCCADAQ4SgNEODyACFRJBARKAhRKBWRKBbQcV
EkEBEoCFBxURdQESgIULCgIVEXUBEoCFEUAFIAASgIUFIAASgW0HIAAVEkEBDgUVEkEBDgUVEXUB
DgkKAhURdQEOEUAECgESNBYHBwgODhKAjRURdQESgIUVEXUBDhJNBiABARKBcQsVElUBFRGBdQIO
DgcVEYF1Ag4OByACARMAEwEPIAEBFRKBeQEVEYF1Ag4OCwoCFRF1ARKAhRFECQoCFRF1AQ4RRAQK
ARIwCLd6XFYZNOCJCImEXc2AgMyRCLA/X38R1Qo6CDG/OFatNk41AwYSFAMGEhgDBhIMBAYSgJ0E
BhKAqQQGEoCtAwYSIAMGEiwCBggGBhUReQEIAwYSCAYGFRF1ARwGBhUReQEcBAYdEigGBhUReQEO
BAYSgIkIBhURdQESgIUGBhURdQEOByAAFRJBAQgKIAEVEkEBHB0SKAkgAhUSQQEODg4LAAQVEkEB
Dg4ODg4GIAMODg4OBCABDg4FIAESUQ4GIAMBCA4OAwAAAQQgAQECDSAEAQgdCB0SgJUSgJkGIAEB
EoCdBQAAEoCpBQAAEoCtBgABARKArQQAABIgBhABAQ4eAAYQAQEeAA4EIAASLAUgAQESLAMoAAgD
KAACAygADgUoABKAoQUIABKAqQUIABKArQQIABIgBCgAEiwIAQAIAAAAAAAeAQABAFQCFldyYXBO
b25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NDXzljYzc2NGRiNWRjODRhMDZhYmQ3MWIz
NzQyMGUzZTg2AAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTgAAE0BABwuTkVURnJhbWV3b3Jr
LFZlcnNpb249djQuNS4yAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRQuTkVUIEZyYW1ld29yayA0
LjUuMi0BAChTY3JpcHRNYWluKzxQcm9jZXNzQWNlZGVtaWNTZXNzaW9ucz5kX182AAArAQAmU2Ny
aXB0TWFpbis8R2V0QWNhZGVtaWNTZXNzaW9uc0RUPmRfXzcAACEBABxTY3JpcHRNYWluKzxHZXRG
aWxlU2l6ZT5kX184AAAkAQAfU2NyaXB0TWFpbis8R2V0QWNjZXNzVG9rZW4+ZF9fOQAABAEAAAAK
AQACAAAAAAEAAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJl
YWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNL
ZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNl
U2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAAcfQAAAAAAAAAAAAA2fQAAACAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAKH0AAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQ
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACA
AAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWIAAAOwDAAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBS
AFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQA
AAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABU
AHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsARMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkA
bgBmAG8AAAAoAwAAAQAwADAAMAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAA
AAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUA
cwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAQwBfADkAYwBjADcANgA0AGQAYgA1AGQAYwA4ADQAYQAw
ADYAYQBiAGQANwAxAGIAMwA3ADQAMgAwAGUAMwBlADgANgAAADAACAABAEYAaQBsAGUAVgBlAHIA
cwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBl
AAAAUwBDAF8AOQBjAGMANwA2ADQAZABiADUAZABjADgANABhADAANgBhAGIAZAA3ADEAYgAzADcA
NAAyADAAZQAzAGUAOAA2AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBo
AHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADgAAAAqAAEAAQBMAGUAZwBhAGwA
VAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABl
AG4AYQBtAGUAAABTAEMAXwA5AGMAYwA3ADYANABkAGIANQBkAGMAOAA0AGEAMAA2AGEAYgBkADcA
MQBiADMANwA0ADIAMABlADMAZQA4ADYALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBh
AG0AZQAAAAAAUwBDAF8AOQBjAGMANwA2ADQAZABiADUAZABjADgANABhADAANgBhAGIAZAA3ADEA
YgAzADcANAAyADAAZQAzAGUAOAA2AAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBu
AAAAMQAuADAALgAwAC4AMAAAADgACAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4A
AAAxAC4AMAAuADAALgAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAHAAAAwAAABIPQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAA=]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                          name="VSTAProjectName"
                          typeConverter="NOTBROWSABLE">SC_9cc764db5dc84a06abd71b37420e3e86</property>
                        <property
                          dataType="System.String"
                          description="Specifies the programming language used by the script."
                          name="ScriptLanguage"
                          typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read-only variables."
                          name="ReadOnlyVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::ClientKey,User::ClientOneRosterID,User::ClientSecret,User::ClientServer</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read/write variables."
                          name="ReadWriteVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                        <property
                          dataType="System.String"
                          description="List of breakpoints present on the script."
                          isArray="true"
                          name="BreakpointCollection"
                          typeConverter="NOTBROWSABLE">
                          <arrayElements
                            arrayElementCount="0" />
                        </property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataChecksum140"
                          typeConverter="NOTBROWSABLE">A4</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataShaChecksum"
                          typeConverter="NOTBROWSABLE">fb487abccf088047c7eb961b8e10edc47e93f5b5</property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataChecksum"
                          typeConverter="NOTBROWSABLE">d1a572a6b261f00819320c7c19dca7b0</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Loop thru Clients\Sequence Container\Academic Sessions\Script Component.Connections[PSDB]"
                          connectionManagerID="Package.ConnectionManagers[OneRosterNET]"
                          connectionManagerRefId="Package.ConnectionManagers[OneRosterNET]"
                          description="Process Log"
                          name="PSDB" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Loop thru Clients\Sequence Container\Academic Sessions\Script Component.Outputs[Output 0]"
                          hasSideEffects="true"
                          name="Output 0">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Academic Sessions\Script Component.Outputs[Output 0].Columns[ClientID]"
                              dataType="i4"
                              lineageId="Package\Loop thru Clients\Sequence Container\Academic Sessions\Script Component.Outputs[Output 0].Columns[ClientID]"
                              name="ClientID" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Academic Sessions\Script Component.Outputs[Output 0].Columns[SourcedId]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Loop thru Clients\Sequence Container\Academic Sessions\Script Component.Outputs[Output 0].Columns[SourcedId]"
                              name="SourcedId" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Academic Sessions\Script Component.Outputs[Output 0].Columns[Status]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Loop thru Clients\Sequence Container\Academic Sessions\Script Component.Outputs[Output 0].Columns[Status]"
                              name="Status" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Academic Sessions\Script Component.Outputs[Output 0].Columns[DateLastModified]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Loop thru Clients\Sequence Container\Academic Sessions\Script Component.Outputs[Output 0].Columns[DateLastModified]"
                              name="DateLastModified" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Academic Sessions\Script Component.Outputs[Output 0].Columns[Title]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Loop thru Clients\Sequence Container\Academic Sessions\Script Component.Outputs[Output 0].Columns[Title]"
                              name="Title" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Academic Sessions\Script Component.Outputs[Output 0].Columns[Type]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Loop thru Clients\Sequence Container\Academic Sessions\Script Component.Outputs[Output 0].Columns[Type]"
                              name="Type" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Academic Sessions\Script Component.Outputs[Output 0].Columns[StartDate]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Loop thru Clients\Sequence Container\Academic Sessions\Script Component.Outputs[Output 0].Columns[StartDate]"
                              name="StartDate" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Academic Sessions\Script Component.Outputs[Output 0].Columns[EndDate]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Loop thru Clients\Sequence Container\Academic Sessions\Script Component.Outputs[Output 0].Columns[EndDate]"
                              name="EndDate" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Academic Sessions\Script Component.Outputs[Output 0].Columns[ParentSourcedId]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Loop thru Clients\Sequence Container\Academic Sessions\Script Component.Outputs[Output 0].Columns[ParentSourcedId]"
                              name="ParentSourcedId" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Academic Sessions\Script Component.Outputs[Output 0].Columns[SchoolYear]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Loop thru Clients\Sequence Container\Academic Sessions\Script Component.Outputs[Output 0].Columns[SchoolYear]"
                              name="SchoolYear" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Loop thru Clients\Sequence Container\Academic Sessions.Paths[Output 0]"
                      endId="Package\Loop thru Clients\Sequence Container\Academic Sessions\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      name="Output 0"
                      startId="Package\Loop thru Clients\Sequence Container\Academic Sessions\Script Component.Outputs[Output 0]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Loop thru Clients\Sequence Container\Classes"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Classes"
              DTS:DTSID="{20ac099c-d294-491f-a837-531d3a518918}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Classes"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server v10; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  BLOBTempStoragePath=""
                  bufferTempStoragePath=""
                  version="1">
                  <components>
                    <component
                      refId="Package\Loop thru Clients\Sequence Container\Classes\OLE DB Destination"
                      componentClassID="Microsoft.OLEDBDestination"
                      contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                      description="OLE DB Destination"
                      name="OLE DB Destination"
                      usesDispositions="true"
                      version="4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[OneRoster].[Classes]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepIdentity">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                          name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                          name="FastLoadMaxInsertCommitSize">2147483647</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Loop thru Clients\Sequence Container\Classes\OLE DB Destination.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[OneRoster]"
                          connectionManagerRefId="Package.ConnectionManagers[OneRoster]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Loop thru Clients\Sequence Container\Classes\OLE DB Destination.Inputs[OLE DB Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[SourcedId]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="SourcedId"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[sourcedId]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Classes\Script Component 1.Outputs[Output 0].Columns[SourcedId]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Status]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Status"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[status]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Classes\Script Component 1.Outputs[Output 0].Columns[Status]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DateLastModified]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="DateLastModified"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[dateLastModified]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Classes\Script Component 1.Outputs[Output 0].Columns[DateLastModified]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Title]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="Title"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[title]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Classes\Script Component 1.Outputs[Output 0].Columns[Title]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ClassCode]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="ClassCode"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[classCode]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Classes\Script Component 1.Outputs[Output 0].Columns[ClassCode]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ClassType]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="ClassType"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[classType]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Classes\Script Component 1.Outputs[Output 0].Columns[ClassType]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Location]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Location"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[location]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Classes\Script Component 1.Outputs[Output 0].Columns[Location]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ClientID]"
                              cachedDataType="i4"
                              cachedName="ClientID"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientUID]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Classes\Script Component 1.Outputs[Output 0].Columns[ClientID]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Grades]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Grades"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[grades]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Classes\Script Component 1.Outputs[Output 0].Columns[Grades]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[CourseSourcedId]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="CourseSourcedId"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[courseSourcedId]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Classes\Script Component 1.Outputs[Output 0].Columns[CourseSourcedId]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[SchoolSourcedId]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="SchoolSourcedId"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[schoolSourcedId]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Classes\Script Component 1.Outputs[Output 0].Columns[SchoolSourcedId]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[TermSourcedId]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="TermSourcedId"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[termSourcedIds]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Classes\Script Component 1.Outputs[Output 0].Columns[TermSourcedId]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Subjects]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Subjects"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[subjects]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Classes\Script Component 1.Outputs[Output 0].Columns[Subjects]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[SubjectCodes]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="SubjectCodes"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[subjectCodes]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Classes\Script Component 1.Outputs[Output 0].Columns[SubjectCodes]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Periods]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="Periods"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[periods]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Classes\Script Component 1.Outputs[Output 0].Columns[Periods]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[iKey]"
                              dataType="i4"
                              name="iKey" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientUID]"
                              dataType="i4"
                              name="ClientUID" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[sourcedId]"
                              codePage="1252"
                              dataType="str"
                              length="150"
                              name="sourcedId" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[status]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="status" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[dateLastModified]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="dateLastModified" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[title]"
                              codePage="1252"
                              dataType="str"
                              length="150"
                              name="title" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[grades]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="grades" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[courseSourcedId]"
                              codePage="1252"
                              dataType="str"
                              length="150"
                              name="courseSourcedId" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[classCode]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="classCode" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[classType]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="classType" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[location]"
                              codePage="1252"
                              dataType="str"
                              length="150"
                              name="location" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[schoolSourcedId]"
                              codePage="1252"
                              dataType="str"
                              length="150"
                              name="schoolSourcedId" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[termSourcedIds]"
                              codePage="1252"
                              dataType="str"
                              length="150"
                              name="termSourcedIds" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[subjects]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="subjects" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[subjectCodes]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="subjectCodes" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Classes\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[periods]"
                              codePage="1252"
                              dataType="str"
                              length="200"
                              name="periods" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Loop thru Clients\Sequence Container\Classes\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Destination Error Output"
                          synchronousInputId="Package\Loop thru Clients\Sequence Container\Classes\OLE DB Destination.Inputs[OLE DB Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Classes\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Loop thru Clients\Sequence Container\Classes\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Classes\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Loop thru Clients\Sequence Container\Classes\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Loop thru Clients\Sequence Container\Classes\Script Component 1"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;9"
                      description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                      name="Script Component 1"
                      version="9">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Stores the source code of the component"
                          isArray="true"
                          name="SourceCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="30">
                            <arrayElement
                              dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 PSDB
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"PSDB").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String ClientKey
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientKey"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Int32 ClientOneRosterID
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["ClientOneRosterID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientSecret
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientSecret"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientServer
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientServer"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.IO;
using System.Net;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Runtime.Serialization.Json;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading.Tasks;
using System.Collections.Specialized;
using System.Web;
using System.Management.Automation;
using System.Web.Script.Serialization;

#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    static string pLocation = "ims/oneroster/v1p1/classes";
    static string tokenURI = "token";
    static string processType = "Classes";


    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */
        ProcessClasses().Wait();
    }

    public async Task<int> ProcessClasses()
    {
        try
        {

            // The server base address
            string baseURL = Variables.ClientServer;

            /// The client information used to get the OAuth Access Token from the server.
            string clientId = Variables.ClientKey.ToString();
            string clientSecret = Variables.ClientSecret;



            string rawJson = GetJsonString(baseURL, clientId, clientSecret);

            JavaScriptSerializer sr = new JavaScriptSerializer();
            sr.MaxJsonLength = Int32.MaxValue;

            Class[] jsonResponse = sr.Deserialize<Class[]>(rawJson);

            var jRes = await GetRowsDT(jsonResponse);



            return 0;
        }
        catch (Exception ex)
        {
            WriteToDatabase(1, "ProcessClasses", ex.Message);
            return 0;
        }

    }



    private async Task<dynamic> GetRowsDT(Class[] dt)
    {
        try
        {

            int numrows = 0;

            foreach (Class item in dt)
            {



                Output0Buffer.AddRow();

                Output0Buffer.ClientID = Variables.ClientOneRosterID;
                Output0Buffer.SourcedId = item.SourcedId;
                Output0Buffer.Status = item.Status;
                Output0Buffer.DateLastModified = item.DateLastModified;
                Output0Buffer.Title = item.Title;
                Output0Buffer.ClassCode = item.ClassCode;
                Output0Buffer.ClassType = item.ClassType;
                Output0Buffer.Location = item.Location;

                Output0Buffer.Grades = string.Join(",", item.Grades);
                Output0Buffer.Subjects = string.Join(",", item.Subjects);
                Output0Buffer.SubjectCodes = string.Join(",", item.SubjectCodes);
                Output0Buffer.Periods = string.Join(",", item.Periods);

                Output0Buffer.CourseSourcedId = item.Course.SourcedId;
                Output0Buffer.TermSourcedId = item.Terms[0].SourcedId;
                Output0Buffer.SchoolSourcedId = item.School.SourcedId;



                numrows += 1;
            }

            WriteToDatabase(0, "Get Get Classes - Rows Added: " + numrows.ToString(), numrows.ToString());
            return null;
        }
        catch (Exception ex)
        {

            WriteToDatabase(1, "GetClasses", ex.Message);
            throw;
        }
    }








    private string GetJsonString(string url, string clientId, string clientSecret)
    {
        string output = string.Empty;
        try
        {
            PowerShell pshell = PowerShell.Create();

            //Load script with parameters
            string spt = PSScript(url, clientId, clientSecret);

            //Add script to pipeliine
            pshell.AddScript(spt);

            //Execute the powershell script
            var outp = pshell.Invoke();

            output = outp[0].ImmediateBaseObject.ToString();
        }
        catch (Exception ex)
        {
            output = ex.InnerException.ToString();
        }

        return output;
    }





    public string EncodeTo64(string toEncode)
    {
        byte[] toEncodeAsBytes = System.Text.ASCIIEncoding.ASCII.GetBytes(toEncode);
        string returnValue = System.Convert.ToBase64String(toEncodeAsBytes);
        return returnValue;

    }
    public class JsonHelper
    {
        /// <summary>
        /// JSON Serialization
        /// </summary>
        public static string JsonSerializer<T>(T t)
        {
            DataContractJsonSerializer ser = new DataContractJsonSerializer(typeof(T));
            MemoryStream ms = new MemoryStream();
            ser.WriteObject(ms, t);
            string jsonString = Encoding.UTF8.GetString(ms.ToArray());
            ms.Close();
            return jsonString;
        }
        /// <summary>
        /// JSON Deserialization
        /// </summary>
        public static T JsonDeserialize<T>(string jsonString)
        {
            DataContractJsonSerializer ser = new DataContractJsonSerializer(typeof(T));
            MemoryStream ms = new MemoryStream(Encoding.UTF8.GetBytes(jsonString));
            T obj = (T)ser.ReadObject(ms);
            return obj;
        }
    }

    public class Class
    {
        public string SourcedId { get; set; }
        public string Status { get; set; }
        public string DateLastModified { get; set; }
        public string Title { get; set; }
        public string[] Grades { get; set; }
        public string ClassCode { get; set; }
        public string ClassType { get; set; }
        public string Location { get; set; }
        public SourcedIdSet Course { get; set; }
        public SourcedIdSet School { get; set; }
        public SourcedIdSet[] Terms { get; set; }
        public string[] Subjects { get; set; }
        public string[] SubjectCodes { get; set; }
        public string[] Periods { get; set; }

    }

    public class SourcedIdSet
    {
        public string Href { get; set; }
        public string SourcedId { get; set; }
        public string Type { get; set; }
    }

    public class AccessToken
    {
        public string access_token { get; set; }
        public string token_type { get; set; }
        public string expires_in { get; set; }
    }

    public class FileSize
    {
        public string count { get; set; }

    }






    public void WriteToDatabase(int Error, string Area, string LogInfo)
    {
        try
        {
            //MessageBox.Show("WriteToDatabase");
            var ConnString = Connections.PSDB.ConnectionString;

            using (SqlConnection conn = new SqlConnection(Connections.PSDB.ConnectionString))
            {
                if (conn.State != ConnectionState.Open) conn.Open();
                //string insertText = "Insert into OneRoster.LogFile (ClientUID, FileType, Area, LogInfo) Values (@ClientUID, @FileType, @Area, @LogInfo ) ";
                SqlCommand cmd = new SqlCommand("spLogInfo", conn);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("@ClientUID", SqlDbType.Int).Value = Variables.ClientOneRosterID;
                cmd.Parameters.Add("@Error", SqlDbType.Int).Value = Error;
                cmd.Parameters.Add("@FileType", SqlDbType.VarChar, 50).Value = processType;
                cmd.Parameters.Add("@Area", SqlDbType.VarChar, 100).Value = Area;
                cmd.Parameters.Add("@LogInfo", SqlDbType.VarChar, 1000).Value = LogInfo;
                cmd.ExecuteNonQuery();
            }
        }
        catch //(Exception ex)
        {
            throw;
        }
    }



    public string PSScript(string url, string key, string secret)
    {
        StringBuilder param = new StringBuilder();
        param.Append("param \n");
        param.Append("( \n");
        param.Append("  [Parameter(Position = 1)] \n");
        param.Append("  [uri]$Uri = '" + url + "/', \n");
        param.Append("  [Parameter(Position = 2)]");
        param.Append("  [string]$Secretkey = '" + key + "', \n");
        param.Append("  [Parameter(Position = 3)] \n");
        param.Append("  [string]$Passphrase = '" + secret + "' \n");
        param.Append(") \n");
        param.Append("\n");

        string token = PSAccessToken();
        string sessions = PSAcademicSessions();

        param.Append(token);
        param.Append(sessions);



        return param.ToString();
    }

    public string PSAccessToken()
    {
        StringBuilder scpt = new StringBuilder();
        scpt.Append("function Get-AccessToken \n");
        scpt.Append("{ \n");
        scpt.Append("   [uri]$requestUri = $uri.Scheme + '://' + $uri.Host + '/token' \n");
        scpt.Append("\n");
        scpt.Append("   $basicAuth = [System.Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes(\"${Secretkey}:${Passphrase}\")) \n");
        scpt.Append("\n");
        scpt.Append("   $headers = @{ \n");
        scpt.Append("       Authorization = \"Basic ${basicAuth}\" \n");
        scpt.Append("   }");
        scpt.Append("\n");
        scpt.Append("   $body = 'grant_type=client_credentials&scope=scopename1%20scopename2%20scopenamex' \n");
        scpt.Append("\n");
        scpt.Append("$paramInvokeRestMethod = @{ \n");
        scpt.Append("   Method		    = 'Post' \n");
        scpt.Append("   Uri			    = $requestUri \n");
        scpt.Append("   Headers		    = $headers \n");
        scpt.Append("   Body		    = $body \n");
        scpt.Append("   ContentType	    = 'application/x-www-form-urlencoded' \n");
        scpt.Append("   UseBasicParsing = $true \n");
        scpt.Append("} \n");
        scpt.Append("\n");
        scpt.Append("   $access = Invoke-RestMethod @paramInvokeRestMethod \n");
        scpt.Append("\n");
        scpt.Append("   if ($access.access_token) \n");
        scpt.Append("   { \n");
        scpt.Append("       return $access \n");
        scpt.Append("   } \n");
        scpt.Append("   else \n");
        scpt.Append("   { \n");
        scpt.Append("       throw \"No access token returned\" \n");
        scpt.Append("   } \n");
        scpt.Append("} \n");

        return scpt.ToString();
    }


    public string PSAcademicSessions()
    {
        StringBuilder scpt = new StringBuilder();
        scpt.Append("[uri]$requestUri = $uri.Scheme + '://' + $uri.Host + '/ims/oneroster/v1p1/classes?limit=10000' \n");
        scpt.Append("\n");
        scpt.Append("$access = Get-AccessToken \n");
        scpt.Append("$bearerToken = $access.access_token \n");
        scpt.Append("\n");
        scpt.Append("$headers = @{ \n");
        scpt.Append("   Authorization		   = \"Bearer ${bearerToken}\" \n");
        scpt.Append("} \n");
        scpt.Append("\n");
        scpt.Append("$paramInvokeRestMethod = @{ \n");
        scpt.Append("   Method		    = 'Get' \n");
        scpt.Append("   Uri			    = $requestUri \n");
        scpt.Append("   Headers		    = $headers \n");
        scpt.Append("   UseBasicParsing = $true \n");
        scpt.Append("} \n");
        scpt.Append("\n");
        scpt.Append("$response = Invoke-RestMethod @paramInvokeRestMethod \n");
        scpt.Append("$response.classes | ConvertTo-Json -Depth 16 \n");
        scpt.Append("\n");
        scpt.Append("\n");
        scpt.Append("application/x-www-form-urlencoded \n");

        return scpt.ToString();
    }


}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 ClientID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool ClientID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String SourcedId
    {
        set
        {
            this[1] = value;
        }
    }
    public bool SourcedId_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Status
    {
        set
        {
            this[2] = value;
        }
    }
    public bool Status_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String DateLastModified
    {
        set
        {
            this[3] = value;
        }
    }
    public bool DateLastModified_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Title
    {
        set
        {
            this[4] = value;
        }
    }
    public bool Title_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Grades
    {
        set
        {
            this[5] = value;
        }
    }
    public bool Grades_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CourseSourcedId
    {
        set
        {
            this[6] = value;
        }
    }
    public bool CourseSourcedId_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ClassCode
    {
        set
        {
            this[7] = value;
        }
    }
    public bool ClassCode_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ClassType
    {
        set
        {
            this[8] = value;
        }
    }
    public bool ClassType_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Location
    {
        set
        {
            this[9] = value;
        }
    }
    public bool Location_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String SchoolSourcedId
    {
        set
        {
            this[10] = value;
        }
    }
    public bool SchoolSourcedId_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String TermSourcedId
    {
        set
        {
            this[11] = value;
        }
    }
    public bool TermSourcedId_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Subjects
    {
        set
        {
            this[12] = value;
        }
    }
    public bool Subjects_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String SubjectCodes
    {
        set
        {
            this[13] = value;
        }
    }
    public bool SubjectCodes_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(13);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Periods
    {
        set
        {
            this[14] = value;
        }
    }
    public bool Periods_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(14);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_e84934fe98a74322b50f6341f2053211.csproj]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{F30CE8C2-7849-4320-A569-9B224D7AC3D6}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_e84934fe98a74322b50f6341f2053211</RootNamespace>
    <AssemblyName>SC_e84934fe98a74322b50f6341f2053211</AssemblyName>
    <TargetFrameworkVersion>v4.5.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System" />
    <Reference Include="System.ComponentModel.Composition" />
    <Reference Include="System.Data" />
    <Reference Include="System.Management.Automation, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Windows\Microsoft.NET\assembly\GAC_MSIL\System.Management.Automation\v4.0_3.0.0.0__31bf3856ad364e35\System.Management.Automation.dll</HintPath>
    </Reference>
    <Reference Include="System.Memory, Version=4.0.1.1, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\Common7\IDE\PublicAssemblies\System.Memory.dll</HintPath>
    </Reference>
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Numerics" />
    <Reference Include="System.Runtime.Serialization" />
    <Reference Include="System.Security" />
    <Reference Include="System.Web" />
    <Reference Include="System.Web.Extensions" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
      <DesignTime>True</DesignTime>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_e84934fe98a74322b50f6341f2053211.Properties.Settings.get_Default():SC_e84934fe98a74322b50f6341f2053211.Properties.Sett" +
    "ings")]

namespace SC_e84934fe98a74322b50f6341f2053211.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Project]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_e84934fe98a74322b50f6341f2053211</msb:CodeName>
		<msb:DisplayName>SC_e84934fe98a74322b50f6341f2053211</msb:DisplayName>
		<msb:ProjectId>{A91E24BA-85E3-4A45-9042-4EC6162F292E}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_e84934fe98a74322b50f6341f2053211.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_e84934fe98a74322b50f6341f2053211")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_e84934fe98a74322b50f6341f2053211")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_e84934fe98a74322b50f6341f2053211.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_e84934fe98a74322b50f6341f2053211.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_e84934fe98a74322b50f6341f2053211.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_e84934fe98a74322b50f6341f2053211.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_e84934fe98a74322b50f6341f2053211.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Stores the binary representation of the component"
                          isArray="true"
                          name="BinaryCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="2">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_e84934fe98a74322b50f6341f2053211.dll]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDABny9F8AAAAAAAAAAOAAIiALATAAAE4AAAAIAAAAAAAANmwA
AAAgAAAAgAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAADAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAORrAABPAAAAAIAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAKAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAPEwAAAAgAAAATgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAgAAAAAYAAABQAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAKAAAAACAAAAVgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAY
bAAAAAAAAEgAAAACAAUAlC8AAJg7AAABAAAAAAAAACxrAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBUAAAoqHgIoFgAACioyAigEAAAGbxcAAAoqAAAAEzAC
ADcAAAABAAAREgACfSMAAAQSACgYAAAKfSIAAAQSABV9IQAABBIAfCIAAAQSACgBAAArEgB8IgAA
BCgaAAAKKgATMAIAPwAAAAIAABESAAJ9KAAABBIAA30nAAAEEgAoGwAACn0mAAAEEgAVfSUAAAQS
AHwmAAAEEgAoAgAAKxIAfCYAAAQoHQAACioAGzAFAEQAAAADAAARfh4AAAoKKB8AAAoCAwQFKAkA
AAYLJQdvIAAACiZvIQAAChZvIgAACm8jAAAKbyQAAAoK3g1vJQAACm8kAAAKCt4ABioBEAAAAAAG
AC81AA0TAAABRigmAAAKA28nAAAKKCgAAAoqAAAbMAUA9wAAAAQAABECewQAAARvNgAABm8pAAAK
JgJ7BAAABG82AAAGbykAAApzKgAACgoGbysAAAoXLgYGbywAAApyAQAAcAZzLQAACiUaby4AAAol
by8AAApyFQAAcB5vMAAACgJ7BQAABG85AAAGjDYAAAFvMQAACiVvLwAACnIrAABwHm8wAAAKA4w2
AAABbzEAAAolby8AAApyOQAAcB8WHzJvMgAACn4DAAAEbzEAAAolby8AAApyTQAAcB8WH2RvMgAA
CgRvMQAACiVvLwAACnJZAABwHxYg6AMAAG8yAAAKBW8xAAAKbzMAAAom3goGLAYGbzQAAArc3gMm
/hoqAAEcAAACACcAwOcACgAAAAAAAAAA8/MAAxIAAAETMAUAwgAAAAMAABFzNQAACiVyawAAcG82
AAAKJiVyewAAcG82AAAKJiVygwAAcG82AAAKJiVyvwAAcANy3wAAcCg3AAAKbzYAAAomJXLrAABw
bzYAAAomJXIjAQBwBHJVAQBwKDcAAApvNgAACiYlcl8BAHBvNgAACiYlcpsBAHAFcs8BAHAoNwAA
Cm82AAAKJiVy1wEAcG82AAAKJiVy3wEAcG82AAAKJgIoCgAABgoCKAsAAAYLJQZvNgAACiYlB282
AAAKJm8kAAAKKgAAEzADAIsBAAAAAAAAczUAAAolcuMBAHBvNgAACiYlchkCAHBvNgAACiYlciEC
AHBvNgAACiYlct8BAHBvNgAACiYlcqgCAHBvNgAACiYlct8BAHBvNgAACiYlcpkDAHBvNgAACiYl
cr8DAHBvNgAACiYlchsEAHBvNgAACiYlct8BAHBvNgAACiYlciUEAHBvNgAACiYlct8BAHBvNgAA
CiYlctYEAHBvNgAACiYlchIFAHBvNgAACiYlckYFAHBvNgAACiYlcoAFAHBvNgAACiYlcroFAHBv
NgAACiYlcugFAHBvNgAACiYlcl4GAHBvNgAACiYlcpgGAHBvNgAACiYlct8BAHBvNgAACiYlcqAG
AHBvNgAACiYlct8BAHBvNgAACiYlchAHAHBvNgAACiYlck4HAHBvNgAACiYlclwHAHBvNgAACiYl
cowHAHBvNgAACiYlcpoHAHBvNgAACiYlck4HAHBvNgAACiYlcq4HAHBvNgAACiYlcowHAHBvNgAA
CiYlcpgGAHBvNgAACiZvJAAACioAEzADAAcBAAAAAAAAczUAAAolcgIIAHBvNgAACiYlct8BAHBv
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
AAAAAMQpAABwDQAAI1VTADQ3AAAQAAAAI0dVSUQAAABENwAAVAQAACNCbG9iAAAAAAAAAAIAAAFX
F6ILCQ8AAAD6ATMAFgAAAQAAAEcAAAAPAAAAKAAAAHcAAABNAAAAAgAAAGgAAABWAAAACAAAAAkA
AAA7AAAAUQAAAAQAAAAGAAAAAQAAAAsAAAABAAAABwAAAAIAAAAEAAAAAAD6CQEAAAAAAAYAMwik
DwYAxwikDwYATAd5Dw8AUBAAAAYAeQfSDAYAFgjSDAYA9wfSDAYArgjSDAYAUwjSDAYAbAjSDAYA
qwfSDAYAxgdACQoAhwilBQYAHwa0CwYAkAekDwYA0wD0EA4AAwekDwYA+xG0CwYAZg20CxIAKA1r
EgYAlQuhAQYAFAekDwYA8gW0CwYAdQWkDwYAAAGkDwYA5wCkDwYA3wd5DwoAUA6lBRYAQQ6lBQoA
uQ2lBQoAnxKlBRoAZgCSDgYALwd5DwYAYQ7EDwYApQ2ADB4A0wbkCR4AYAfkCR4AdgZrDAYAwAn0
EAYAowm0CyIAIgpODAYA2gDFCSIAyhFODAYANwk3EwYA+RK0CxIAGw1wDRIA6Aa6ARIAvARrEhIA
sgRwDRIA5gW6ARIABA1rEhIA7w5rEhIA2AW6AQYADgG0CxIA4w5wDQYAFgW0CwYAGA43EwYANg20
CyYAAQC6DiYAKgC6DiYATQC6DhoAfwCSDhoAGgCSDn8AVxMAABoAkACSDgYAIgW0CwYArBPSDCoA
GA+DDSoAMw+VDAYAmwuhAS4ARw+yDAAAAABNAQAAAAABAAEAAQAQABoMAAAQAAEAAQABABAAMw4A
AHEABAAOAAEAEACBEgAAfQAEADAAAQAQAEgRAABJAAcANQABABAAmhAAAEkACAA3AAAAEADLD18Q
SQAJADwAAAEQAOEQXxCZAAsAQAACABAAhw4AAEkADABDAAIAEABrEQAASQAMAEYAAgAQAAUSAABJ
ABoAYwACABAAyQsAAEkAHQBqAAIAEAAMCQAASQAgAHEAAwEQAB8BAABdACEAdAADARAANAEAAF0A
JQB2ABEARAxtABEAmAFtABEAGAZtAAYASBEvAgYAmhAzAgYAMw43AgEAjxI7AgEAjxI7AhEAuws/
AhEAZgZEAhEAzgRJAgEArQJtAAEAgwRtAAEAyAJtAAEABQNtAAEAHARNAgEA6gJtAAEAMgNtAAEA
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
IxIAAAEA+gQAAAEAXA8AAAIAtQEAAAMAsQ0AAAEAkQsAAAIApBMAAAMAMBIAAAEAVg4AAAIAvBAA
AAMAxw0AAAEABgkAAAEABgkAAAEABgkAAAEABgkAAAEABgkAAAEABgkAAAEABgkAAAEABgkAAAEA
BgkAAAEABgkAAAEABgkAAAEABgkAAAEABgkAAAEABgkAAAEABgkAAAEABgkAAAEABgkAAAEABgkA
AAEABgkAAAEABgkAAAEABgkAAAEABgkAAAEABgkAAAEABgkAAAEABgkAAAEABgkAAAEABgkAAAEA
BgkAAAEABgkAAAEABgkAAAEAkREAAAIAbw8AAAMAVBEAAAQAxw0AAAEApRIAAAEApRIAAAEABgkA
AAEAhRMAAAEAjAkAAAEABgkAAAEABgkAAAEABgkAAAEABgkAAAEABgkAAAEABgkAAAEABgkAAAEA
BgkAAAEABgkAAAEABgkAAAEABgkAAAEABgkAAAEABgkAAAEABgkAAAEABgkAAAEABgkAAAEABgkA
AAEABgkAAAEABgkAAAEABgkAAAEABgkAAAEAmAUAAAEAmAUOAGEADwBhAAkAYg8BABEAYg8GABkA
Yg8KACkAYg8QADEAYg8QADkAYg8QAEEAYg8QAEkAYg8QAFEAYg8QAFkAYg8QAGEAYg8QAGkAYg8G
AHkAYg8VAIkAYg8bALEAYg8GAMEALhMGAMEAiAUhANkAYg8GAAkBYg8GACkBYg8nAPkA5QgGAPkA
8AgGADkBRhIGAAwAwgY5AAwA8xJCAAwAvAlPABQAwgY5ABQA8xJCABQAvAlPAEEBxRNtAEkBwgZw
AEkBzBJ2AEkBDwV9ABwAoguRAFkB3hGXAJEAlwmbAJkAUA2fAGEBjgGkAGEBsxCqAGkBWgmwAAEB
aQmbAKEAYg8QAHEByQa7AHEB9wsGAIEBYg/BAIkB4gXIAIEBXBHPAJkBRALVALkB/AjfAJkBRALk
AIkBtRPvAMEBpAYGAMkBYg8GAMkBxwTzAEEBwxH6AOEAYg8BAeEAqwsLAeEAcwsBANEBYg8QAOEA
hxMGAOEANxIGAOEAOhIRAfkAYg8GAPkAggEZAfkA0BAgAZEAYg8GAPkAxgEmAdkB5AwsAeEBWgUy
AekBcQ45AfkAjhA/AfEBogtFAfkAchNMAfkBQxNSAXEANAVZAXEAqBNhAREBYg9nATEBYg8GACEC
Yg8VAKkAYg8GACkC9hF3AWEBRAGkAKkAjhN/AWEBoAmEATECngYGAKkAYg+KASkC0xGQATkCYg8G
ADkCqgkBADkCGQmuASwA/A7BATQAnQIRAQwAhgLQATQAVxLlAZkAAwWbAAwAYw3qAQwAYRLwAQwA
iAUhAEEBJQwHArEBlwmbAEEBwxEOAhQAYw3qARQAYRLwARQAiAUhACQAcwBHBC4ACwA4Ay4AEwBB
Ay4AGwBgAy4AIwBpAy4AKwCSAy4AMwCSAy4AOwCSAy4AQwBpAy4ASwCYAy4AUwCSAy4AWwCvA0MA
YwBCBIAAawD9A6AAawAiBOMAmwBCBGEBewBCBIEBewBCBKEBewBCBMEBewBCBMMBewBCBOEBewBC
BOMBewBCBAECewBCBCECewBCBEECewBCBGECewBCBIECewBCBKECewBCBMECewBCBOECewBCBAED
ewBCBCEDewBCBEEDewBCBGEDewBCBIEDewBCBKEDewBCBMEDewBCBOEDewBCBAEEewBCBIkEowBg
A6kEowBgA8AIewBCBOAIewBCBAAJewBCBCAJewBCBEAJewBCBGAJewBCBIAJewBCBKAJewBCBMAJ
ewBCBOAJewBCBAAKewBCBCAKewBCBEAKewBCBGAKewBCBIAKewBCBKAKewBCBMAKewBCBOAKewBC
BAALewBCBCALewBCBEALewBCBGALewBCBIALewBCBKALewBCBMALewBCBOALewBCBAAMewBCBCAM
ewBCBGAMewBCBIAMewBCBKAMewBCBMAMewBCBOAMewBCBAANewBCBEANewBCBGANewBCBIANewBC
BKANewBCBMANewBCBOANewBCBCAOewBCBEAOewBCBKAOkwBCBOAOkwBCBC4AWABoALYAFQFvAZcB
9gEDAAEABQAfAAYAIAAHACQACAAmAAoAJwALADUADAA4AA0AOwAAAHkBBQMAADEKCQMAADECDQMA
AJQKCQMAAKgRDQMAAGULCQMAAHUCDQMAAKkKCQMAAFQFDQMAANoKCQMAACcQDQMAACcLCQMAAAUC
DQMAAFoKCQMAAPAEDQMAAMUKCQMAAA4GDQMAAOsKCQMAAEUMDQMAAAALCQMAABkCDQMAAHUKCQMA
AC0CDQMAAJAKCQMAAIIRDQMAAFELCQMAAEMQDQMAADkLCQMAAJwPDQMAABQLCQMAAFoBEQMAAJoT
DQMAAGMBBQMAABYSDQMAAAsPDQMAAGEOFwMAAG4GHQMAAE8SIwMAADECDQMAAKgRDQMAAHUCDQMA
AFQFDQMAACcQKAMAAPAEDQMAAA4GDQMAAEUMDQMAALsGLQMAAIoLLQMAABkRMgMAAIIRKAMAAEMQ
KAMAAJwPKAMAADIJDQMAADECDQMAAB8GDQMAAOoLDQMAADcGDQMAAA8MDQMAAL0SDQMBAA8AAwAB
ABAABQABABEABwABABIACQABABMACwABABQADQABABUADwABABYAEQABABcAEwABABgAFQABABkA
FwABABoAGQABABsAGwABABwAHQABAB0AHwABAB4AIQABAB8AIwABACAAJQABACEAJwABACIAKQAB
ACMAKwABACQALQABACUALwABACYAMQABACcAMwABACgANQABACkANwABACoAOQABACsAOwABACwA
PQACADYAPwACADgAQQACADkAQwACADoARQACADsARwACAD0ASQACAD4ASwABAD8ASwACAEAATQAC
AEYATwABAEcATwACAEgAUQABAEkAUQACAEoAUwABAEsAUwACAEwAVQABAE0AVQACAE4AVwABAE8A
VwACAFAAWQABAFEAWQACAFIAWwABAFMAWwACAFQAXQABAFUAXQACAFYAXwABAFcAXwACAFgAYQAB
AFkAYQACAFoAYwABAFsAYwACAFwAZQABAF0AZQACAF4AZwABAF8AZwACAGAAaQABAGEAaQACAGMA
awABAGQAawACAGUAbQABAGYAbQACAGcAbwABAGgAbwACAGoAcQABAGsAcQACAGwAcwABAG0AcwAC
AG4AdQABAG8AdQACAHEAdwABAHIAdwAOAOgAIQAOAOoAIwAPAOwAIQAPAO4AIwAzAF0AiAB0AbsB
ygEEgAAAAQAAAPsd3HgAAAAAAACoAAAABAAAAAAAAAAAAAAAFALcAQAAAAAMAAAAAAAAAAAAAAAd
AtYSAAAAAAQAAAAAAAAAAAAAABQCQgYAAAAABAAAAAAAAAAAAAAAFAK6AQAAAAAMAAAAAAAAAAAA
AAAdAgETAAAAAAwAAAAAAAAAAAAAAB0C0Q0AAAAABAAAAAAAAAAAAAAAFAK0CwAAAAADAAAAAAAA
AAAAAAAmAk4MAAAAAAwAAAAAAAAAAAAAAB0C9A0AAAAABAAAAAAAAAAAAAAAFAKVDAAAAAAEAAAA
AAAAAAAAAAAmAh8RAAAAAAAAAAABAAAA1Q8AAAkAAgAKAAIACwACAAwAAgANAAIADgACAA8AAgAA
AAAAhwCzAQAAAACJALMBMwBKADkAYwC1ALUBuwDbAQAAAAAASURUU0NvbXBvbmVudE1ldGFEYXRh
MTAwAElEVFNWYXJpYWJsZTEwMABJRFRTUnVudGltZUNvbm5lY3Rpb25Db2xsZWN0aW9uMTAwAElE
VFNSdW50aW1lQ29ubmVjdGlvbjEwMABJRFRTQ29ubmVjdGlvbk1hbmFnZXIxMDAASURUU1Zhcmlh
YmxlczEwMABJRFRTRXZhbHVhdG9yQ29udGV4dDEwMABTQ19lODQ5MzRmZTk4YTc0MzIyYjUwZjYz
NDFmMjA1MzIxMQA8PnVfXzEAVGFza2AxAENvbGxlY3Rpb25gMQBBc3luY1Rhc2tNZXRob2RCdWls
ZGVyYDEAVGFza0F3YWl0ZXJgMQBJbnQzMgBFbmNvZGVUbzY0ADxQcm9jZXNzQ2xhc3Nlcz5kX182
ADxHZXRSb3dzRFQ+ZF9fNwBnZXRfVVRGOAA8TW9kdWxlPgBnZXRfUFNEQgBnZXRfQ2xpZW50T25l
Um9zdGVySUQAc2V0X0NsaWVudElEAEdldE91dHB1dElEAGdldF9BU0NJSQB0b2tlblVSSQBTeXN0
ZW0uSU8AR2V0Um93c0RUAEFyZWEAU3lzdGVtLkRhdGEAZ2V0X0NvbXBvbmVudE1ldGFEYXRhAG1z
Y29ybGliAGdldF9Tb3VyY2VkSWQAc2V0X1NvdXJjZWRJZABzZXRfQ291cnNlU291cmNlZElkAHNl
dF9TY2hvb2xTb3VyY2VkSWQAc2V0X1Rlcm1Tb3VyY2VkSWQAY2xpZW50SWQAQWRkAE1hcmtPdXRw
dXRzRmluaXNoZWQAZ2V0X0RhdGVMYXN0TW9kaWZpZWQAc2V0X0RhdGVMYXN0TW9kaWZpZWQAQXdh
aXRVbnNhZmVPbkNvbXBsZXRlZABnZXRfSXNDb21wbGV0ZWQAPFNvdXJjZWRJZD5rX19CYWNraW5n
RmllbGQAPERhdGVMYXN0TW9kaWZpZWQ+a19fQmFja2luZ0ZpZWxkADxDbGFzc0NvZGU+a19fQmFj
a2luZ0ZpZWxkADxUaXRsZT5rX19CYWNraW5nRmllbGQAPFR5cGU+a19fQmFja2luZ0ZpZWxkADxD
bGFzc1R5cGU+a19fQmFja2luZ0ZpZWxkADx0b2tlbl90eXBlPmtfX0JhY2tpbmdGaWVsZAA8Q291
cnNlPmtfX0JhY2tpbmdGaWVsZAA8SHJlZj5rX19CYWNraW5nRmllbGQAPFNjaG9vbD5rX19CYWNr
aW5nRmllbGQAPGFjY2Vzc190b2tlbj5rX19CYWNraW5nRmllbGQAPGV4cGlyZXNfaW4+a19fQmFj
a2luZ0ZpZWxkADxMb2NhdGlvbj5rX19CYWNraW5nRmllbGQAPFBlcmlvZHM+a19fQmFja2luZ0Zp
ZWxkADxHcmFkZXM+a19fQmFja2luZ0ZpZWxkADxTdWJqZWN0Q29kZXM+a19fQmFja2luZ0ZpZWxk
ADxUZXJtcz5rX19CYWNraW5nRmllbGQAPFN1YmplY3RzPmtfX0JhY2tpbmdGaWVsZAA8U3RhdHVz
PmtfX0JhY2tpbmdGaWVsZAA8Y291bnQ+a19fQmFja2luZ0ZpZWxkAERiQ29tbWFuZABTcWxDb21t
YW5kAEFwcGVuZABkZWZhdWx0SW5zdGFuY2UAZ2V0X0NsYXNzQ29kZQBzZXRfQ2xhc3NDb2RlAHRv
RW5jb2RlAGdldF9NZXNzYWdlAEludm9rZQBJRGlzcG9zYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBH
ZXRUeXBlRnJvbUhhbmRsZQBnZXRfVGl0bGUAc2V0X1RpdGxlAEdldFJ1bnRpbWVDb25uZWN0aW9u
QnlOYW1lAElBc3luY1N0YXRlTWFjaGluZQBTZXRTdGF0ZU1hY2hpbmUAc3RhdGVNYWNoaW5lAE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAGdldF9UeXBlAHNldF9UeXBlAFNxbERiVHlw
ZQBzZXRfQ29tbWFuZFR5cGUAVmFsdWVUeXBlAGdldF9DbGFzc1R5cGUAc2V0X0NsYXNzVHlwZQBw
cm9jZXNzVHlwZQBnZXRfdG9rZW5fdHlwZQBzZXRfdG9rZW5fdHlwZQBTeXN0ZW0uQ29yZQBnZXRf
Q3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAQXBwbGljYXRpb25TZXR0aW5nc0Jh
c2UAV3JpdGVUb0RhdGFiYXNlAENsb3NlAERpc3Bvc2UAZ2V0X0NvdXJzZQBzZXRfQ291cnNlAENy
ZWF0ZQBnZXRfU3RhdGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29ubmVjdGlvblN0YXRlADw+MV9f
c3RhdGUARHluYW1pY0F0dHJpYnV0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dl
ck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxl
QXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXN5bmNTdGF0ZU1hY2hpbmVBdHRyaWJ1
dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAERl
YnVnZ2VySGlkZGVuQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3Nl
bWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUA
QXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNT
Y3JpcHRDb21wb25lbnRFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0
ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAHNl
dF9WYWx1ZQB2YWx1ZQBGaWxlU2l6ZQBKc29uRGVzZXJpYWxpemUAZ2V0X0hyZWYAc2V0X0hyZWYA
RW5jb2RpbmcAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb0Jhc2U2NFN0cmluZwBnZXRfQ29u
bmVjdGlvblN0cmluZwBHZXRKc29uU3RyaW5nAGpzb25TdHJpbmcAVG9TdHJpbmcAR2V0U3RyaW5n
AHNldF9NYXhKc29uTGVuZ3RoAGdldF9UYXNrAFN5c3RlbS5Db2xsZWN0aW9ucy5PYmplY3RNb2Rl
bABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0NfZTg0OTM0ZmU5OGE3NDMyMmI1MGY2MzQxZjIwNTMy
MTEuZGxsAFBvd2VyU2hlbGwAc2V0X0NsaWVudElEX0lzTnVsbABzZXRfU291cmNlZElkX0lzTnVs
bABzZXRfQ291cnNlU291cmNlZElkX0lzTnVsbABzZXRfU2Nob29sU291cmNlZElkX0lzTnVsbABz
ZXRfVGVybVNvdXJjZWRJZF9Jc051bGwAc2V0X0RhdGVMYXN0TW9kaWZpZWRfSXNOdWxsAHNldF9D
bGFzc0NvZGVfSXNOdWxsAHNldF9UaXRsZV9Jc051bGwAc2V0X0NsYXNzVHlwZV9Jc051bGwAc2V0
X0xvY2F0aW9uX0lzTnVsbABzZXRfUGVyaW9kc19Jc051bGwAc2V0X0dyYWRlc19Jc051bGwAc2V0
X1N1YmplY3RDb2Rlc19Jc051bGwAc2V0X1N1YmplY3RzX0lzTnVsbABzZXRfU3RhdHVzX0lzTnVs
bABTZXROdWxsAGdldF9TY2hvb2wAc2V0X1NjaG9vbAB1cmwATWVtb3J5U3RyZWFtAGdldF9JdGVt
AHNldF9JdGVtAFN5c3RlbQByZXNvdXJjZU1hbgBQU0FjY2Vzc1Rva2VuAGdldF9hY2Nlc3NfdG9r
ZW4Ac2V0X2FjY2Vzc190b2tlbgBPcGVuAGdldF9leHBpcmVzX2luAHNldF9leHBpcmVzX2luAFNj
cmlwdE1haW4ASm9pbgBnZXRfTG9jYXRpb24Ac2V0X0xvY2F0aW9uAHBMb2NhdGlvbgBTeXN0ZW0u
TWFuYWdlbWVudC5BdXRvbWF0aW9uAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxp
emF0aW9uAFN5c3RlbS5SdW50aW1lLlNlcmlhbGl6YXRpb24AU3lzdGVtLldlYi5TY3JpcHQuU2Vy
aWFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBnZXRfUnVudGltZUNvbm5lY3Rpb25Db2xsZWN0
aW9uAFNxbFBhcmFtZXRlckNvbGxlY3Rpb24ARGJDb25uZWN0aW9uAFNxbENvbm5lY3Rpb24ASW52
YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBnZXRfSW5uZXJFeGNlcHRpb24AU2V0RXhjZXB0aW9uAFN5
c3RlbS5EYXRhLkNvbW1vbgBTeXN0ZW0uUnVudGltZS5TZXJpYWxpemF0aW9uLkpzb24AQ3VsdHVy
ZUluZm8ATG9nSW5mbwBPdXRwdXROYW1lTWFwAE91dHB1dE1hcABNaWNyb3NvZnQuU3FsU2VydmVy
LkRUU1J1bnRpbWVXcmFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUGlwZWxpbmVXcmFwAFN0cmlu
Z0J1aWxkZXIAPD50X19idWlsZGVyAE91dHB1dDBCdWZmZXIAUGlwZWxpbmVCdWZmZXIAU2NyaXB0
QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0Nvbm5lY3Rpb25NYW5hZ2VyAEpzb25IZWxw
ZXIATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZS5XcmFwcGVyAE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuRHRzLlBpcGVsaW5lLldyYXBwZXIARGJQYXJhbWV0ZXIAU3FsUGFyYW1ldGVyAEdldEF3
YWl0ZXIAZ2V0X0NsaWVudFNlcnZlcgBEYXRhQ29udHJhY3RKc29uU2VyaWFsaXplcgBYbWxPYmpl
Y3RTZXJpYWxpemVyAEphdmFTY3JpcHRTZXJpYWxpemVyAEVycm9yAC5jdG9yAC5jY3RvcgBPdXRw
dXRJRHMAU3lzdGVtLkRpYWdub3N0aWNzAGdldF9QZXJpb2RzAHNldF9QZXJpb2RzAFN5c3RlbS5S
dW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTQ19lODQ5MzRmZTk4YTc0
MzIyYjUwZjYzNDFmMjA1MzIxMS5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMAZ2V0X0dy
YWRlcwBzZXRfR3JhZGVzAGdldF9TdWJqZWN0Q29kZXMAc2V0X1N1YmplY3RDb2RlcwBEZWJ1Z2dp
bmdNb2RlcwBTQ19lODQ5MzRmZTk4YTc0MzIyYjUwZjYzNDFmMjA1MzIxMS5Qcm9wZXJ0aWVzAGdl
dF9SZWFkT25seVZhcmlhYmxlcwBQcm9jZXNzQ2xhc3NlcwBHZXRCeXRlcwBCdWZmZXJDb2x1bW5J
bmRleGVzAEdldENvbHVtbkluZGV4ZXMAU2V0dGluZ3MAPD40X190aGlzAFN5c3RlbS5UaHJlYWRp
bmcuVGFza3MAZ2V0X1Rlcm1zAHNldF9UZXJtcwBTeXN0ZW0uV2ViLkV4dGVuc2lvbnMAUFNBY2Fk
ZW1pY1Nlc3Npb25zAENvbm5lY3Rpb25zAEJ1ZmZlcnMAZ2V0X1BhcmFtZXRlcnMAQ2xhc3MAZ2V0
X1N1YmplY3RzAHNldF9TdWJqZWN0cwBGaW5pc2hPdXRwdXRzAGdldF9TdGF0dXMAc2V0X1N0YXR1
cwBDcmVhdGVOZXdPdXRwdXRSb3dzAENvbmNhdABQU09iamVjdABSZWFkT2JqZWN0AGdldF9JbW1l
ZGlhdGVCYXNlT2JqZWN0AFdyaXRlT2JqZWN0AGR0AFNvdXJjZWRJZFNldABnZXRfQ2xpZW50U2Vj
cmV0AGNsaWVudFNlY3JldABzZWNyZXQAU2V0RW5kT2ZSb3dzZXQAV2FpdABnZXRfRGVmYXVsdABH
ZXRSZXN1bHQAU2V0UmVzdWx0AFN5c3RlbS5EYXRhLlNxbENsaWVudABVc2VyQ29tcG9uZW50AFBh
cmVudENvbXBvbmVudABTY3JpcHRDb21wb25lbnQAZ2V0X2NvdW50AHNldF9jb3VudABQU1Njcmlw
dABBZGRTY3JpcHQATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABTdGFydABDb252ZXJ0AE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AFByaW1lT3V0cHV0AE1vdmVOZXh0AFN5c3Rl
bS5UZXh0AEdldFZhbHVlV2l0aENvbnRleHQAU2NyaXB0Q29tcG9uZW50RXZhbENvbnRleHQAZ2V0
X0V2YWx1YXRvckNvbnRleHQAQWRkUm93AFRvQXJyYXkAZ2V0X0NsaWVudEtleQBrZXkAZ2V0X0Fz
c2VtYmx5AEV4ZWN1dGVOb25RdWVyeQBFbXB0eQAAABNzAHAATABvAGcASQBuAGYAbwAAFUAAQwBs
AGkAZQBuAHQAVQBJAEQAAA1AAEUAcgByAG8AcgAAE0AARgBpAGwAZQBUAHkAcABlAAALQABBAHIA
ZQBhAAARQABMAG8AZwBJAG4AZgBvAAAPcABhAHIAYQBtACAACgAABygAIAAKAAA7IAAgAFsAUABh
AHIAYQBtAGUAdABlAHIAKABQAG8AcwBpAHQAaQBvAG4AIAA9ACAAMQApAF0AIAAKAAAfIAAgAFsA
dQByAGkAXQAkAFUAcgBpACAAPQAgACcAAQsvACcALAAgAAoAATcgACAAWwBQAGEAcgBhAG0AZQB0
AGUAcgAoAFAAbwBzAGkAdABpAG8AbgAgAD0AIAAyACkAXQAAMSAAIABbAHMAdAByAGkAbgBnAF0A
JABTAGUAYwByAGUAdABrAGUAeQAgAD0AIAAnAAEJJwAsACAACgABOyAAIABbAFAAYQByAGEAbQBl
AHQAZQByACgAUABvAHMAaQB0AGkAbwBuACAAPQAgADMAKQBdACAACgAAMyAAIABbAHMAdAByAGkA
bgBnAF0AJABQAGEAcwBzAHAAaAByAGEAcwBlACAAPQAgACcAAQcnACAACgABBykAIAAKAAADCgAA
NWYAdQBuAGMAdABpAG8AbgAgAEcAZQB0AC0AQQBjAGMAZQBzAHMAVABvAGsAZQBuACAACgABB3sA
IAAKAACAhSAAIAAgAFsAdQByAGkAXQAkAHIAZQBxAHUAZQBzAHQAVQByAGkAIAA9ACAAJAB1AHIA
aQAuAFMAYwBoAGUAbQBlACAAKwAgACcAOgAvAC8AJwAgACsAIAAkAHUAcgBpAC4ASABvAHMAdAAg
ACsAIAAnAC8AdABvAGsAZQBuACcAIAAKAAGA7yAAIAAgACQAYgBhAHMAaQBjAEEAdQB0AGgAIAA9
ACAAWwBTAHkAcwB0AGUAbQAuAEMAbwBuAHYAZQByAHQAXQA6ADoAVABvAEIAYQBzAGUANgA0AFMA
dAByAGkAbgBnACgAWwBTAHkAcwB0AGUAbQAuAFQAZQB4AHQALgBFAG4AYwBvAGQAaQBuAGcAXQA6
ADoAVQBUAEYAOAAuAEcAZQB0AEIAeQB0AGUAcwAoACIAJAB7AFMAZQBjAHIAZQB0AGsAZQB5AH0A
OgAkAHsAUABhAHMAcwBwAGgAcgBhAHMAZQB9ACIAKQApACAACgAAJSAAIAAgACQAaABlAGEAZABl
AHIAcwAgAD0AIABAAHsAIAAKAABbIAAgACAAIAAgACAAIABBAHUAdABoAG8AcgBpAHoAYQB0AGkA
bwBuACAAPQAgACIAQgBhAHMAaQBjACAAJAB7AGIAYQBzAGkAYwBBAHUAdABoAH0AIgAgAAoAAAkg
ACAAIAB9AACAryAAIAAgACQAYgBvAGQAeQAgAD0AIAAnAGcAcgBhAG4AdABfAHQAeQBwAGUAPQBj
AGwAaQBlAG4AdABfAGMAcgBlAGQAZQBuAHQAaQBhAGwAcwAmAHMAYwBvAHAAZQA9AHMAYwBvAHAA
ZQBuAGEAbQBlADEAJQAyADAAcwBjAG8AcABlAG4AYQBtAGUAMgAlADIAMABzAGMAbwBwAGUAbgBh
AG0AZQB4ACcAIAAKAAE7JABwAGEAcgBhAG0ASQBuAHYAbwBrAGUAUgBlAHMAdABNAGUAdABoAG8A
ZAAgAD0AIABAAHsAIAAKAAAzIAAgACAATQBlAHQAaABvAGQACQAJACAAIAAgACAAPQAgACcAUABv
AHMAdAAnACAACgABOSAAIAAgAFUAcgBpAAkACQAJACAAIAAgACAAPQAgACQAcgBlAHEAdQBlAHMA
dABVAHIAaQAgAAoAADkgACAAIABIAGUAYQBkAGUAcgBzAAkACQAgACAAIAAgAD0AIAAkAGgAZQBh
AGQAZQByAHMAIAAKAAAtIAAgACAAQgBvAGQAeQAJAAkAIAAgACAAIAA9ACAAJABiAG8AZAB5ACAA
CgAAdSAAIAAgAEMAbwBuAHQAZQBuAHQAVAB5AHAAZQAJACAAIAAgACAAPQAgACcAYQBwAHAAbABp
AGMAYQB0AGkAbwBuAC8AeAAtAHcAdwB3AC0AZgBvAHIAbQAtAHUAcgBsAGUAbgBjAG8AZABlAGQA
JwAgAAoAATkgACAAIABVAHMAZQBCAGEAcwBpAGMAUABhAHIAcwBpAG4AZwAgAD0AIAAkAHQAcgB1
AGUAIAAKAAAHfQAgAAoAAG8gACAAIAAkAGEAYwBjAGUAcwBzACAAPQAgAEkAbgB2AG8AawBlAC0A
UgBlAHMAdABNAGUAdABoAG8AZAAgAEAAcABhAHIAYQBtAEkAbgB2AG8AawBlAFIAZQBzAHQATQBl
AHQAaABvAGQAIAAKAAE9IAAgACAAaQBmACAAKAAkAGEAYwBjAGUAcwBzAC4AYQBjAGMAZQBzAHMA
XwB0AG8AawBlAG4AKQAgAAoAAA0gACAAIAB7ACAACgAALyAAIAAgACAAIAAgACAAcgBlAHQAdQBy
AG4AIAAkAGEAYwBjAGUAcwBzACAACgAADSAAIAAgAH0AIAAKAAATIAAgACAAZQBsAHMAZQAgAAoA
AFMgACAAIAAgACAAIAAgAHQAaAByAG8AdwAgACIATgBvACAAYQBjAGMAZQBzAHMAIAB0AG8AawBl
AG4AIAByAGUAdAB1AHIAbgBlAGQAIgAgAAoAAIDBWwB1AHIAaQBdACQAcgBlAHEAdQBlAHMAdABV
AHIAaQAgAD0AIAAkAHUAcgBpAC4AUwBjAGgAZQBtAGUAIAArACAAJwA6AC8ALwAnACAAKwAgACQA
dQByAGkALgBIAG8AcwB0ACAAKwAgACcALwBpAG0AcwAvAG8AbgBlAHIAbwBzAHQAZQByAC8AdgAx
AHAAMQAvAGMAbABhAHMAcwBlAHMAPwBsAGkAbQBpAHQAPQAxADAAMAAwADAAJwAgAAoAATckAGEA
YwBjAGUAcwBzACAAPQAgAEcAZQB0AC0AQQBjAGMAZQBzAHMAVABvAGsAZQBuACAACgABSyQAYgBl
AGEAcgBlAHIAVABvAGsAZQBuACAAPQAgACQAYQBjAGMAZQBzAHMALgBhAGMAYwBlAHMAcwBfAHQA
bwBrAGUAbgAgAAoAAB8kAGgAZQBhAGQAZQByAHMAIAA9ACAAQAB7ACAACgAAYSAAIAAgAEEAdQB0
AGgAbwByAGkAegBhAHQAaQBvAG4ACQAJACAAIAAgAD0AIAAiAEIAZQBhAHIAZQByACAAJAB7AGIA
ZQBhAHIAZQByAFQAbwBrAGUAbgB9ACIAIAAKAAAxIAAgACAATQBlAHQAaABvAGQACQAJACAAIAAg
ACAAPQAgACcARwBlAHQAJwAgAAoAAW0kAHIAZQBzAHAAbwBuAHMAZQAgAD0AIABJAG4AdgBvAGsA
ZQAtAFIAZQBzAHQATQBlAHQAaABvAGQAIABAAHAAYQByAGEAbQBJAG4AdgBvAGsAZQBSAGUAcwB0
AE0AZQB0AGgAbwBkACAACgABXSQAcgBlAHMAcABvAG4AcwBlAC4AYwBsAGEAcwBzAGUAcwAgAHwA
IABDAG8AbgB2AGUAcgB0AFQAbwAtAEoAcwBvAG4AIAAtAEQAZQBwAHQAaAAgADEANgAgAAoAAUdh
AHAAcABsAGkAYwBhAHQAaQBvAG4ALwB4AC0AdwB3AHcALQBmAG8AcgBtAC0AdQByAGwAZQBuAGMA
bwBkAGUAZAAgAAoAATVpAG0AcwAvAG8AbgBlAHIAbwBzAHQAZQByAC8AdgAxAHAAMQAvAGMAbABh
AHMAcwBlAHMAAAt0AG8AawBlAG4AAA9DAGwAYQBzAHMAZQBzAACAm0kAcwBOAHUAbABsACAAcABy
AG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMA
ZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1
AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAEU8AdQB0AHAAdQB0ACAAMAAACVAAUwBEAEIAABNDAGwA
aQBlAG4AdABLAGUAeQAAI0MAbABpAGUAbgB0AE8AbgBlAFIAbwBzAHQAZQByAEkARAAAGUMAbABp
AGUAbgB0AFMAZQBjAHIAZQB0AAAZQwBsAGkAZQBuAHQAUwBlAHIAdgBlAHIAAHFTAEMAXwBlADgA
NAA5ADMANABmAGUAOQA4AGEANwA0ADMAMgAyAGIANQAwAGYANgAzADQAMQBmADIAMAA1ADMAMgAx
ADEALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAB1QAHIAbwBjAGUA
cwBzAEMAbABhAHMAcwBlAHMAAAMsAAA9RwBlAHQAIABHAGUAdAAgAEMAbABhAHMAcwBlAHMAIAAt
ACAAUgBvAHcAcwAgAEEAZABkAGUAZAA6ACAAARVHAGUAdABDAGwAYQBzAHMAZQBzAACL10+CG+kH
QaJO5D7RBkopAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARI5BSABAR0CBSABARJhBiABARGAkQQH
ARE4BRURaQEICAAAFRFpARMABzABAQEQHgAECgEROAggABUSQQETAAQHARE8BRURaQEcBAoBETwE
BwIODgIGDgUAABKApQYgARKApQ4KIAAVEoCpARKArQgVEoCpARKArQUgARMACAMgABwDIAAOBCAA
Ek0FAAASgLEFIAEdBQ4FAAEOHQUEBwESUQUgABGAvQYgAgEOElEGIAEBEYDJBSAAEoDNCSACEoDR
DhGA1QQgAQEcCiADEoDRDhGA1QgDIAAIBiABEoDlDgYAAw4ODg4JIAMBEnUdCBJ5BSACAQgcAyAA
AgMHAQgGAAIIEnkOBSABHQgIBSAAEoDtBSAAEoDxBiABEoD1DgUgABKAgQUgABKA+QYgARKA/RwF
AAASgQEGIAEcEoEFBwABEjkRgQkFIAASgQ0HIAIBDhKBDQQHARJVAh4AByACARKBGRwEIAAdBQUg
AQ4dBQUgAQEdBQYgARwSgRkWBwsIEggIDg4ODh0SKBURZQEcEk0STQYwAQEeAA4FCgEdEigFFRJB
ARwIIAAVEWUBEwAFFRFlARwKMAICARAeABAeAQkKAhURZQEcETgEIAATAAUgAQESTQUgAQETABAH
CBIIHAgdEigIEigSTRJNBgACDg4dDgUAAg4ODgi3elxWGTTgiQiJhF3NgIDMkQgxvzhWrTZONQMG
EhQDBhIYAwYSDAMGEn0EBhKAiQQGEoCNAwYSIAMGHQ4DBhIsBAYdEiwCBggGBhURaQEIAwYSCAYG
FRFlARwGBhURaQEcBAYdEigHIAAVEkEBCAogARUSQQEcHRIoBiADDg4ODgQgAQ4OBiADAQgODgMA
AAEEIAEBAgsgBAEIHQgdEnUSeQUgAQESfQUAABKAiQUAABKAjQYAAQESgI0EAAASIAYQAQEOHgAG
EAEBHgAOBCAAHQ4FIAEBHQ4EIAASLAUgAQESLAUgAB0SLAYgAQEdEiwDKAAIAygAAgMoAA4FKAAS
gIEFCAASgIkFCAASgI0ECAASIAQoAB0OBCgAEiwFKAAdEiwIAQAIAAAAAAAeAQABAFQCFldyYXBO
b25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NDX2U4NDkzNGZlOThhNzQzMjJiNTBmNjM0
MWYyMDUzMjExAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjEAAE0BABwuTkVURnJhbWV3b3Jr
LFZlcnNpb249djQuNS4yAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRQuTkVUIEZyYW1ld29yayA0
LjUuMiQBAB9TY3JpcHRNYWluKzxQcm9jZXNzQ2xhc3Nlcz5kX182AAAfAQAaU2NyaXB0TWFpbis8
R2V0Um93c0RUPmRfXzcAAAQBAAAACgEAAgAAAAABAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVt
LlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3Vs
dHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNv
dXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAAMbAAAAAAAAAAA
AAAmbAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGGwAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBt
c2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEA
AQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYgAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBT
AF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEAAAABANx4+x0AAAEA3Hj7HT8A
AAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAA
ACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBHoDAAABAFMAdAByAGkAbgBnAEYA
aQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAwADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBu
AHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkA
bABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8AZQA4ADQAOQAzADQAZgBlADkAOABh
ADcANAAzADIAMgBiADUAMABmADYAMwA0ADEAZgAyADAANQAzADIAMQAxAAAAPgAPAAEARgBpAGwA
ZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADcANgA3ADUALgAzADAAOQA0ADAAAAAAAHAAKAAB
AEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AZQA4ADQAOQAzADQAZgBlADkAOABhADcA
NAAzADIAMgBiADUAMABmADYAMwA0ADEAZgAyADAANQAzADIAMQAxAC4AZABsAGwAAABIABIAAQBM
AGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIA
MAAyADEAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAAB
AE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwBlADgANAA5ADMANABmAGUA
OQA4AGEANwA0ADMAMgAyAGIANQAwAGYANgAzADQAMQBmADIAMAA1ADMAMgAxADEALgBkAGwAbAAA
AGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AZQA4ADQAOQAzADQAZgBlADkA
OABhADcANAAzADIAMgBiADUAMABmADYAMwA0ADEAZgAyADAANQAzADIAMQAxAAAAQgAPAAEAUABy
AG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA3ADYANwA1AC4AMwAwADkANAAwAAAA
AABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA3ADYANwA1
AC4AMwAwADkANAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAYAAADAAAADg8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAA==]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                          name="VSTAProjectName"
                          typeConverter="NOTBROWSABLE">SC_e84934fe98a74322b50f6341f2053211</property>
                        <property
                          dataType="System.String"
                          description="Specifies the programming language used by the script."
                          name="ScriptLanguage"
                          typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read-only variables."
                          name="ReadOnlyVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::ClientKey,User::ClientOneRosterID,User::ClientSecret,User::ClientServer</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read/write variables."
                          name="ReadWriteVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                        <property
                          dataType="System.String"
                          description="List of breakpoints present on the script."
                          isArray="true"
                          name="BreakpointCollection"
                          typeConverter="NOTBROWSABLE">
                          <arrayElements
                            arrayElementCount="0" />
                        </property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataChecksum"
                          typeConverter="NOTBROWSABLE">0e5adbff8c40ee5d968ed41098b8110b</property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataShaChecksum"
                          typeConverter="NOTBROWSABLE">22cd9ea3b0b078e38d012ba2074a256313dbfd2f</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Loop thru Clients\Sequence Container\Classes\Script Component 1.Connections[PSDB]"
                          connectionManagerID="Package.ConnectionManagers[OneRosterNET]"
                          connectionManagerRefId="Package.ConnectionManagers[OneRosterNET]"
                          description="Process Log"
                          name="PSDB" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Loop thru Clients\Sequence Container\Classes\Script Component 1.Outputs[Output 0]"
                          hasSideEffects="true"
                          name="Output 0">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Classes\Script Component 1.Outputs[Output 0].Columns[ClientID]"
                              dataType="i4"
                              lineageId="Package\Loop thru Clients\Sequence Container\Classes\Script Component 1.Outputs[Output 0].Columns[ClientID]"
                              name="ClientID" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Classes\Script Component 1.Outputs[Output 0].Columns[SourcedId]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Loop thru Clients\Sequence Container\Classes\Script Component 1.Outputs[Output 0].Columns[SourcedId]"
                              name="SourcedId" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Classes\Script Component 1.Outputs[Output 0].Columns[Status]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Loop thru Clients\Sequence Container\Classes\Script Component 1.Outputs[Output 0].Columns[Status]"
                              name="Status" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Classes\Script Component 1.Outputs[Output 0].Columns[DateLastModified]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Loop thru Clients\Sequence Container\Classes\Script Component 1.Outputs[Output 0].Columns[DateLastModified]"
                              name="DateLastModified" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Classes\Script Component 1.Outputs[Output 0].Columns[Title]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Loop thru Clients\Sequence Container\Classes\Script Component 1.Outputs[Output 0].Columns[Title]"
                              name="Title" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Classes\Script Component 1.Outputs[Output 0].Columns[Grades]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Loop thru Clients\Sequence Container\Classes\Script Component 1.Outputs[Output 0].Columns[Grades]"
                              name="Grades" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Classes\Script Component 1.Outputs[Output 0].Columns[CourseSourcedId]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Loop thru Clients\Sequence Container\Classes\Script Component 1.Outputs[Output 0].Columns[CourseSourcedId]"
                              name="CourseSourcedId" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Classes\Script Component 1.Outputs[Output 0].Columns[ClassCode]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Loop thru Clients\Sequence Container\Classes\Script Component 1.Outputs[Output 0].Columns[ClassCode]"
                              name="ClassCode" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Classes\Script Component 1.Outputs[Output 0].Columns[ClassType]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Loop thru Clients\Sequence Container\Classes\Script Component 1.Outputs[Output 0].Columns[ClassType]"
                              name="ClassType" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Classes\Script Component 1.Outputs[Output 0].Columns[Location]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Loop thru Clients\Sequence Container\Classes\Script Component 1.Outputs[Output 0].Columns[Location]"
                              name="Location" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Classes\Script Component 1.Outputs[Output 0].Columns[SchoolSourcedId]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Loop thru Clients\Sequence Container\Classes\Script Component 1.Outputs[Output 0].Columns[SchoolSourcedId]"
                              name="SchoolSourcedId" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Classes\Script Component 1.Outputs[Output 0].Columns[TermSourcedId]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Loop thru Clients\Sequence Container\Classes\Script Component 1.Outputs[Output 0].Columns[TermSourcedId]"
                              name="TermSourcedId" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Classes\Script Component 1.Outputs[Output 0].Columns[Subjects]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Loop thru Clients\Sequence Container\Classes\Script Component 1.Outputs[Output 0].Columns[Subjects]"
                              name="Subjects" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Classes\Script Component 1.Outputs[Output 0].Columns[SubjectCodes]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Loop thru Clients\Sequence Container\Classes\Script Component 1.Outputs[Output 0].Columns[SubjectCodes]"
                              name="SubjectCodes" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Classes\Script Component 1.Outputs[Output 0].Columns[Periods]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Loop thru Clients\Sequence Container\Classes\Script Component 1.Outputs[Output 0].Columns[Periods]"
                              name="Periods" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Loop thru Clients\Sequence Container\Classes.Paths[Output 0]"
                      endId="Package\Loop thru Clients\Sequence Container\Classes\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      name="Output 0"
                      startId="Package\Loop thru Clients\Sequence Container\Classes\Script Component 1.Outputs[Output 0]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Loop thru Clients\Sequence Container\Courses"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Courses"
              DTS:DTSID="{8db3b0f6-1c70-4239-974d-f88922ad3dd6}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Courses"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server v10; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  BLOBTempStoragePath=""
                  bufferTempStoragePath=""
                  version="1">
                  <components>
                    <component
                      refId="Package\Loop thru Clients\Sequence Container\Courses\OLE DB Destination"
                      componentClassID="Microsoft.OLEDBDestination"
                      contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                      description="OLE DB Destination"
                      name="OLE DB Destination"
                      usesDispositions="true"
                      version="4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[OneRoster].[Courses]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepIdentity">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                          name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                          name="FastLoadMaxInsertCommitSize">2147483647</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Loop thru Clients\Sequence Container\Courses\OLE DB Destination.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[OneRoster]"
                          connectionManagerRefId="Package.ConnectionManagers[OneRoster]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Loop thru Clients\Sequence Container\Courses\OLE DB Destination.Inputs[OLE DB Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Courses\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[SourcedId]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="SourcedId"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Courses\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[sourcedId]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Courses\Script Component 1.Outputs[Output 0].Columns[SourcedId]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Courses\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Status]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Status"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Courses\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[status]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Courses\Script Component 1.Outputs[Output 0].Columns[Status]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Courses\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DateLastModified]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="DateLastModified"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Courses\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[dateLastModified]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Courses\Script Component 1.Outputs[Output 0].Columns[DateLastModified]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Courses\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[SchoolYearSourcedId]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="SchoolYearSourcedId"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Courses\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[schoolYearSourcedId]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Courses\Script Component 1.Outputs[Output 0].Columns[SchoolYearSourcedId]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Courses\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[CourseCode]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="CourseCode"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Courses\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[courseCode]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Courses\Script Component 1.Outputs[Output 0].Columns[CourseCode]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Courses\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Title]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Title"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Courses\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[title]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Courses\Script Component 1.Outputs[Output 0].Columns[Title]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Courses\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Grades]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Grades"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Courses\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[grades]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Courses\Script Component 1.Outputs[Output 0].Columns[Grades]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Courses\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[OrgSourcedId]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="OrgSourcedId"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Courses\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[orgSourcedId]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Courses\Script Component 1.Outputs[Output 0].Columns[OrgSourcedId]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Courses\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Subjects]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Subjects"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Courses\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[subjects]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Courses\Script Component 1.Outputs[Output 0].Columns[Subjects]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Courses\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[SubjectCodes]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="SubjectCodes"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Courses\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[subjectCodes]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Courses\Script Component 1.Outputs[Output 0].Columns[SubjectCodes]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Courses\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ClientID]"
                              cachedDataType="i4"
                              cachedName="ClientID"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Courses\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientUID]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Courses\Script Component 1.Outputs[Output 0].Columns[ClientID]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Courses\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[iKey]"
                              dataType="i4"
                              name="iKey" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Courses\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientUID]"
                              dataType="i4"
                              name="ClientUID" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Courses\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[sourcedId]"
                              codePage="1252"
                              dataType="str"
                              length="150"
                              name="sourcedId" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Courses\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[status]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="status" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Courses\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[dateLastModified]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="dateLastModified" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Courses\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[schoolYearSourcedId]"
                              codePage="1252"
                              dataType="str"
                              length="150"
                              name="schoolYearSourcedId" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Courses\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[title]"
                              codePage="1252"
                              dataType="str"
                              length="200"
                              name="title" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Courses\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[courseCode]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="courseCode" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Courses\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[grades]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="grades" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Courses\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[orgSourcedId]"
                              codePage="1252"
                              dataType="str"
                              length="150"
                              name="orgSourcedId" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Courses\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[subjects]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="subjects" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Courses\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[subjectCodes]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="subjectCodes" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Loop thru Clients\Sequence Container\Courses\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Destination Error Output"
                          synchronousInputId="Package\Loop thru Clients\Sequence Container\Courses\OLE DB Destination.Inputs[OLE DB Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Courses\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Loop thru Clients\Sequence Container\Courses\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Courses\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Loop thru Clients\Sequence Container\Courses\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Loop thru Clients\Sequence Container\Courses\Script Component 1"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;9"
                      description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                      name="Script Component 1"
                      version="9">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Stores the source code of the component"
                          isArray="true"
                          name="SourceCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="30">
                            <arrayElement
                              dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 PSDB
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"PSDB").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String ClientKey
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientKey"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Int32 ClientOneRosterID
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["ClientOneRosterID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientSecret
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientSecret"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientServer
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientServer"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces

using System.Runtime;
using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.IO;
using System.Net;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Runtime.Serialization.Json;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading.Tasks;
using System.Collections.Specialized;
using System.Web;
using System.Management.Automation;
using System.Web.Script.Serialization;


#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    static string pLocation = "ims/oneroster/v1p1/courses";
    static string tokenURI = "token";
    static string processType = "Courses";

    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */
        ProcessCourses().Wait();
    }

    public async Task<int> ProcessCourses()
    {
        try
        {

            // The server base address
            string baseURL = Variables.ClientServer;

            //MessageBox.Show(uri);

            ServicePointManager.Expect100Continue = true;
            ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;


            /// The client information used to get the OAuth Access Token from the server.
            string clientId = Variables.ClientKey.ToString();
            string clientSecret = Variables.ClientSecret;
            //string sendAuth = EncodeTo64(Variables.ClientKey + ":" + Variables.ClientSecret);
            //WriteToDatabase(0, "SESSIONS-sendToken", sendAuth);
            // this will hold the Access Token returned from the server.
            //MessageBox.Show(sendToken, "sendToken");


            string rawJson = GetJsonString(baseURL, clientId, clientSecret);

            JavaScriptSerializer sr = new JavaScriptSerializer();
            sr.MaxJsonLength = Int32.MaxValue;

            Courses[] jsonResponse = sr.Deserialize<Courses[]>(rawJson);

            var jRes = await GetRowsDT(jsonResponse);


            return 0;
        }
        catch (Exception ex)
        {
            WriteToDatabase(1, "ProcessCourses", ex.Message);
            return 0;
        }

    }



    private async Task<dynamic> GetRowsDT(Courses[] dt)
    {
        try
        {


            int numrows = 0;

            foreach (Courses item in dt)
            {
                Output0Buffer.AddRow();
                Output0Buffer.ClientID = Variables.ClientOneRosterID;
                Output0Buffer.SourcedId = item.SourcedId;
                Output0Buffer.Status = item.Status;
                Output0Buffer.DateLastModified = item.DateLastModified;
                Output0Buffer.Title = item.Title;
                Output0Buffer.CourseCode = item.CourseCode;
                Output0Buffer.SchoolYearSourcedId = item.SchoolYear.SourcedId;
                Output0Buffer.Grades = string.Join(",", item.Grades);
                Output0Buffer.Subjects = string.Join(",", item.Subjects);
                Output0Buffer.OrgSourcedId = item.Org.SourcedId;
                Output0Buffer.SubjectCodes = string.Join(",", item.SubjectCodes);

                numrows += 1;
            }

            WriteToDatabase(0, "Get Courses - Rows Added: " + numrows.ToString(), numrows.ToString());
            return null;
        }
        catch (Exception ex)
        {
            WriteToDatabase(1, "GetCourses", ex.Message);
            throw;
        }
    }



    private string GetJsonString(string url, string clientId, string clientSecret)
    {
        string output = string.Empty;
        try
        {
            PowerShell pshell = PowerShell.Create();

            //Load script with parameters
            string spt = PSScript(url, clientId, clientSecret);

            //Add script to pipeliine
            pshell.AddScript(spt);

            //Execute the powershell script
            var outp = pshell.Invoke();

            output = outp[0].ImmediateBaseObject.ToString();
        }
        catch (Exception ex)
        {
            output = ex.InnerException.ToString();
        }

        return output;
    }





    public string EncodeTo64(string toEncode)
    {
        byte[] toEncodeAsBytes = System.Text.ASCIIEncoding.ASCII.GetBytes(toEncode);
        string returnValue = System.Convert.ToBase64String(toEncodeAsBytes);
        return returnValue;

    }
    public class JsonHelper
    {
        /// <summary>
        /// JSON Serialization
        /// </summary>
        public static string JsonSerializer<T>(T t)
        {
            DataContractJsonSerializer ser = new DataContractJsonSerializer(typeof(T));
            MemoryStream ms = new MemoryStream();
            ser.WriteObject(ms, t);
            string jsonString = Encoding.UTF8.GetString(ms.ToArray());
            ms.Close();
            return jsonString;
        }
        /// <summary>
        /// JSON Deserialization
        /// </summary>
        public static T JsonDeserialize<T>(string jsonString)
        {
            DataContractJsonSerializer ser = new DataContractJsonSerializer(typeof(T));
            MemoryStream ms = new MemoryStream(Encoding.UTF8.GetBytes(jsonString));
            T obj = (T)ser.ReadObject(ms);
            return obj;
        }
    }

    public class Courses
    {
        public string SourcedId { get; set; }
        public string Status { get; set; }
        public string DateLastModified { get; set; }
        public string Title { get; set; }
        public SourcedIdSet SchoolYear { get; set; }
        public string CourseCode { get; set; }
        public string[] Grades { get; set; }
        public string[] Subjects { get; set; }
        public SourcedIdSet Org { get; set; }
        public string[] SubjectCodes { get; set; }
        public string[] Resources { get; set; }

    }

    public class SourcedIdSet
    {
        public string Href { get; set; }
        public string SourcedId { get; set; }
        public string Type { get; set; }
    }

    public class AccessToken
    {
        public string access_token { get; set; }
        public string token_type { get; set; }
        public string expires_in { get; set; }
    }

    public class FileSize
    {
        public string count { get; set; }

    }






    public void WriteToDatabase(int Error, string Area, string LogInfo)
    {
        try
        {
            //MessageBox.Show("WriteToDatabase");
            var ConnString = Connections.PSDB.ConnectionString;

            using (SqlConnection conn = new SqlConnection(Connections.PSDB.ConnectionString))
            {
                if (conn.State != ConnectionState.Open) conn.Open();
                //string insertText = "Insert into OneRoster.LogFile (ClientUID, FileType, Area, LogInfo) Values (@ClientUID, @FileType, @Area, @LogInfo ) ";
                SqlCommand cmd = new SqlCommand("spLogInfo", conn);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("@ClientUID", SqlDbType.Int).Value = Variables.ClientOneRosterID;
                cmd.Parameters.Add("@Error", SqlDbType.Int).Value = Error;
                cmd.Parameters.Add("@FileType", SqlDbType.VarChar, 50).Value = processType;
                cmd.Parameters.Add("@Area", SqlDbType.VarChar, 100).Value = Area;
                cmd.Parameters.Add("@LogInfo", SqlDbType.VarChar, 1000).Value = LogInfo;
                cmd.ExecuteNonQuery();
            }
        }
        catch //(Exception ex)
        {
            throw;
        }
    }



    public string PSScript(string url, string key, string secret)
    {
        StringBuilder param = new StringBuilder();
        param.Append("param \n");
        param.Append("( \n");
        param.Append("  [Parameter(Position = 1)] \n");
        param.Append("  [uri]$Uri = '" + url + "/', \n");
        param.Append("  [Parameter(Position = 2)]");
        param.Append("  [string]$Secretkey = '" + key + "', \n");
        param.Append("  [Parameter(Position = 3)] \n");
        param.Append("  [string]$Passphrase = '" + secret + "' \n");
        param.Append(") \n");
        param.Append("\n");

        string token = PSAccessToken();
        string sessions = PSAcademicSessions();

        param.Append(token);
        param.Append(sessions);



        return param.ToString();
    }

    public string PSAccessToken()
    {
        StringBuilder scpt = new StringBuilder();
        scpt.Append("function Get-AccessToken \n");
        scpt.Append("{ \n");
        scpt.Append("   [uri]$requestUri = $uri.Scheme + '://' + $uri.Host + '/token' \n");
        scpt.Append("\n");
        scpt.Append("   $basicAuth = [System.Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes(\"${Secretkey}:${Passphrase}\")) \n");
        scpt.Append("\n");
        scpt.Append("   $headers = @{ \n");
        scpt.Append("       Authorization = \"Basic ${basicAuth}\" \n");
        scpt.Append("   }");
        scpt.Append("\n");
        scpt.Append("   $body = 'grant_type=client_credentials&scope=scopename1%20scopename2%20scopenamex' \n");
        scpt.Append("\n");
        scpt.Append("$paramInvokeRestMethod = @{ \n");
        scpt.Append("   Method		    = 'Post' \n");
        scpt.Append("   Uri			    = $requestUri \n");
        scpt.Append("   Headers		    = $headers \n");
        scpt.Append("   Body		    = $body \n");
        scpt.Append("   ContentType	    = 'application/x-www-form-urlencoded' \n");
        scpt.Append("   UseBasicParsing = $true \n");
        scpt.Append("} \n");
        scpt.Append("\n");
        scpt.Append("   $access = Invoke-RestMethod @paramInvokeRestMethod \n");
        scpt.Append("\n");
        scpt.Append("   if ($access.access_token) \n");
        scpt.Append("   { \n");
        scpt.Append("       return $access \n");
        scpt.Append("   } \n");
        scpt.Append("   else \n");
        scpt.Append("   { \n");
        scpt.Append("       throw \"No access token returned\" \n");
        scpt.Append("   } \n");
        scpt.Append("} \n");

        return scpt.ToString();
    }


    public string PSAcademicSessions()
    {
        StringBuilder scpt = new StringBuilder();
        scpt.Append("[uri]$requestUri = $uri.Scheme + '://' + $uri.Host + '/ims/oneroster/v1p1/courses?limit=10000' \n");
        scpt.Append("\n");
        scpt.Append("$access = Get-AccessToken \n");
        scpt.Append("$bearerToken = $access.access_token \n");
        scpt.Append("\n");
        scpt.Append("$headers = @{ \n");
        scpt.Append("   Authorization		   = \"Bearer ${bearerToken}\" \n");
        scpt.Append("} \n");
        scpt.Append("\n");
        scpt.Append("$paramInvokeRestMethod = @{ \n");
        scpt.Append("   Method		    = 'Get' \n");
        scpt.Append("   Uri			    = $requestUri \n");
        scpt.Append("   Headers		    = $headers \n");
        scpt.Append("   UseBasicParsing = $true \n");
        scpt.Append("} \n");
        scpt.Append("\n");
        scpt.Append("$response = Invoke-RestMethod @paramInvokeRestMethod \n");
        scpt.Append("$response.courses | ConvertTo-Json -Depth 16 \n");
        scpt.Append("\n");
        scpt.Append("\n");
        scpt.Append("application/x-www-form-urlencoded \n");

        return scpt.ToString();
    }


}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 ClientID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool ClientID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String SourcedId
    {
        set
        {
            this[1] = value;
        }
    }
    public bool SourcedId_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Status
    {
        set
        {
            this[2] = value;
        }
    }
    public bool Status_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String DateLastModified
    {
        set
        {
            this[3] = value;
        }
    }
    public bool DateLastModified_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String SchoolYearSourcedId
    {
        set
        {
            this[4] = value;
        }
    }
    public bool SchoolYearSourcedId_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CourseCode
    {
        set
        {
            this[5] = value;
        }
    }
    public bool CourseCode_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Title
    {
        set
        {
            this[6] = value;
        }
    }
    public bool Title_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Grades
    {
        set
        {
            this[7] = value;
        }
    }
    public bool Grades_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String OrgSourcedId
    {
        set
        {
            this[8] = value;
        }
    }
    public bool OrgSourcedId_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Subjects
    {
        set
        {
            this[9] = value;
        }
    }
    public bool Subjects_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String SubjectCodes
    {
        set
        {
            this[10] = value;
        }
    }
    public bool SubjectCodes_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_cb5c2f609a034dce9eb5fb0d9931e7ac.Properties.Settings.get_Default():SC_cb5c2f609a034dce9eb5fb0d9931e7ac.Properties.Sett" +
    "ings")]

namespace SC_cb5c2f609a034dce9eb5fb0d9931e7ac.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_cb5c2f609a034dce9eb5fb0d9931e7ac.csproj]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{7F468268-94E1-4992-8079-7FE69388BACE}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_cb5c2f609a034dce9eb5fb0d9931e7ac</RootNamespace>
    <AssemblyName>SC_cb5c2f609a034dce9eb5fb0d9931e7ac</AssemblyName>
    <TargetFrameworkVersion>v4.5.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System" />
    <Reference Include="System.ComponentModel.Composition" />
    <Reference Include="System.Data" />
    <Reference Include="System.Management.Automation, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Windows\Microsoft.NET\assembly\GAC_MSIL\System.Management.Automation\v4.0_3.0.0.0__31bf3856ad364e35\System.Management.Automation.dll</HintPath>
    </Reference>
    <Reference Include="System.Memory, Version=4.0.1.1, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\Common7\IDE\PublicAssemblies\System.Memory.dll</HintPath>
    </Reference>
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Numerics" />
    <Reference Include="System.Runtime.Serialization" />
    <Reference Include="System.Security" />
    <Reference Include="System.Web" />
    <Reference Include="System.Web.Extensions" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
      <DesignTime>True</DesignTime>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Project]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_cb5c2f609a034dce9eb5fb0d9931e7ac</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_cb5c2f609a034dce9eb5fb0d9931e7ac</msb:DisplayName>
		<msb:ProjectId>{E759A908-E5F1-4329-8FC9-711FD384870F}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_cb5c2f609a034dce9eb5fb0d9931e7ac.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_cb5c2f609a034dce9eb5fb0d9931e7ac")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_cb5c2f609a034dce9eb5fb0d9931e7ac")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_cb5c2f609a034dce9eb5fb0d9931e7ac.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_cb5c2f609a034dce9eb5fb0d9931e7ac.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_cb5c2f609a034dce9eb5fb0d9931e7ac.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_cb5c2f609a034dce9eb5fb0d9931e7ac.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_cb5c2f609a034dce9eb5fb0d9931e7ac.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Stores the binary representation of the component"
                          isArray="true"
                          name="BinaryCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="2">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_cb5c2f609a034dce9eb5fb0d9931e7ac.dll]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDANLx9F8AAAAAAAAAAOAAIiALATAAAEoAAAAIAAAAAAAAumgA
AAAgAAAAgAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAADAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAGhoAABPAAAAAIAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAKAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAwEgAAAAgAAAASgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAgAAAAAYAAABMAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAKAAAAACAAAAUgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACc
aAAAAAAAAEgAAAACAAUAjC4AACQ5AAABAAAAAAAAALBnAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBUAAAoqHgIoFgAACioyAigEAAAGbxcAAAoqAAAAEzAC
ADcAAAABAAAREgACfSAAAAQSACgYAAAKfR8AAAQSABV9HgAABBIAfB8AAAQSACgBAAArEgB8HwAA
BCgaAAAKKgATMAIAPwAAAAIAABESAAJ9JQAABBIAA30kAAAEEgAoGwAACn0jAAAEEgAVfSIAAAQS
AHwjAAAEEgAoAgAAKxIAfCMAAAQoHQAACioAGzAFAEQAAAADAAARfh4AAAoKKB8AAAoCAwQFKAkA
AAYLJQdvIAAACiZvIQAAChZvIgAACm8jAAAKbyQAAAoK3g1vJQAACm8kAAAKCt4ABioBEAAAAAAG
AC81AA0TAAABRigmAAAKA28nAAAKKCgAAAoqAAAbMAUA9wAAAAQAABECewQAAARvLgAABm8pAAAK
JgJ7BAAABG8uAAAGbykAAApzKgAACgoGbysAAAoXLgYGbywAAApyAQAAcAZzLQAACiUaby4AAAol
by8AAApyFQAAcB5vMAAACgJ7BQAABG8xAAAGjDYAAAFvMQAACiVvLwAACnIrAABwHm8wAAAKA4w2
AAABbzEAAAolby8AAApyOQAAcB8WHzJvMgAACn4DAAAEbzEAAAolby8AAApyTQAAcB8WH2RvMgAA
CgRvMQAACiVvLwAACnJZAABwHxYg6AMAAG8yAAAKBW8xAAAKbzMAAAom3goGLAYGbzQAAArc3gMm
/hoqAAEcAAACACcAwOcACgAAAAAAAAAA8/MAAxIAAAETMAUAwgAAAAMAABFzNQAACiVyawAAcG82
AAAKJiVyewAAcG82AAAKJiVygwAAcG82AAAKJiVyvwAAcANy3wAAcCg3AAAKbzYAAAomJXLrAABw
bzYAAAomJXIjAQBwBHJVAQBwKDcAAApvNgAACiYlcl8BAHBvNgAACiYlcpsBAHAFcs8BAHAoNwAA
Cm82AAAKJiVy1wEAcG82AAAKJiVy3wEAcG82AAAKJgIoCgAABgoCKAsAAAYLJQZvNgAACiYlB282
AAAKJm8kAAAKKgAAEzADAIsBAAAAAAAAczUAAAolcuMBAHBvNgAACiYlchkCAHBvNgAACiYlciEC
AHBvNgAACiYlct8BAHBvNgAACiYlcqgCAHBvNgAACiYlct8BAHBvNgAACiYlcpkDAHBvNgAACiYl
cr8DAHBvNgAACiYlchsEAHBvNgAACiYlct8BAHBvNgAACiYlciUEAHBvNgAACiYlct8BAHBvNgAA
CiYlctYEAHBvNgAACiYlchIFAHBvNgAACiYlckYFAHBvNgAACiYlcoAFAHBvNgAACiYlcroFAHBv
NgAACiYlcugFAHBvNgAACiYlcl4GAHBvNgAACiYlcpgGAHBvNgAACiYlct8BAHBvNgAACiYlcqAG
AHBvNgAACiYlct8BAHBvNgAACiYlchAHAHBvNgAACiYlck4HAHBvNgAACiYlclwHAHBvNgAACiYl
cowHAHBvNgAACiYlcpoHAHBvNgAACiYlck4HAHBvNgAACiYlcq4HAHBvNgAACiYlcowHAHBvNgAA
CiYlcpgGAHBvNgAACiZvJAAACioAEzADAAcBAAAAAAAAczUAAAolcgIIAHBvNgAACiYlct8BAHBv
NgAACiYlcsUIAHBvNgAACiYlcv0IAHBvNgAACiYlct8BAHBvNgAACiYlckkJAHBvNgAACiYlcmkJ
AHBvNgAACiYlcpgGAHBvNgAACiYlct8BAHBvNgAACiYlctYEAHBvNgAACiYlcssJAHBvNgAACiYl
ckYFAHBvNgAACiYlcoAFAHBvNgAACiYlcl4GAHBvNgAACiYlcpgGAHBvNgAACiYlct8BAHBvNgAA
CiYlcv0JAHBvNgAACiYlcmsKAHBvNgAACiYlct8BAHBvNgAACiYlct8BAHBvNgAACiYlcskKAHBv
NgAACiZvJAAACioeAigoAAAGKn5yEQsAcIABAAAEckcLAHCAAgAABHJTCwBwgAMAAAQqKgIDBAUo
OAAACio6AhYDjDYAAAEoOQAACipaAywIAhYoOgAACipyYwsAcHM7AAAKeiYCFwMoOQAACipaAywI
AhcoOgAACipyYwsAcHM7AAAKeiYCGAMoOQAACipaAywIAhgoOgAACipyYwsAcHM7AAAKeiYCGQMo
OQAACipaAywIAhkoOgAACipyYwsAcHM7AAAKeiYCGgMoOQAACipaAywIAhooOgAACipyYwsAcHM7
AAAKeiYCGwMoOQAACipaAywIAhsoOgAACipyYwsAcHM7AAAKeiYCHAMoOQAACipaAywIAhwoOgAA
CipyYwsAcHM7AAAKeiYCHQMoOQAACipaAywIAh0oOgAACipyYwsAcHM7AAAKeiYCHgMoOQAACipa
AywIAh4oOgAACipyYwsAcHM7AAAKeioCHwkDKDkAAAoqXgMsCQIfCSg6AAAKKnJjCwBwczsAAAp6
KgIfCgMoOQAACipeAywJAh8KKDoAAAoqcmMLAHBzOwAACnoeAig8AAAKKh4CKD0AAAoqHgIoPgAA
Cip+Aig/AAAKAgJzLQAABn0EAAAEAgJzLwAABn0FAAAEKgYqbgJ7BgAABCwSAnsGAAAEbyYAAAYC
FH0GAAAEKhMwBQBJAAAABQAAERYKKy4EBpQOBHIADABwKEAAAAozGQIFBpoCBAaUKEEAAAoOBHMO
AAAGfQYAAAQGF1gKBgMyzgJvLAAABgJvKQAABgIoKgAABio6AihCAAAKAgN9BwAABCqCAnsHAAAE
b0MAAApvRAAACnISDABwb0UAAApvRgAACio6AihCAAAKAgN9CAAABCqWAnsIAAAEb0cAAApyHAwA
cG9IAAAKKEkAAApvSgAACnQoAAABKpYCewgAAARvRwAACnIwDABwb0gAAAooSQAACm9KAAAKpTYA
AAEqlgJ7CAAABG9HAAAKclQMAHBvSAAACihJAAAKb0oAAAp0KAAAASqWAnsIAAAEb0cAAApybgwA
cG9IAAAKKEkAAApvSgAACnQoAAABKh4CKEIAAAoqrn4JAAAELR5yiAwAcNAHAAACKEsAAApvTAAA
CnNNAAAKgAkAAAR+CQAABCoafgoAAAQqHgKACgAABCoafgsAAAQqHgIoTgAACiouczkAAAaACwAA
BCoAABMwAwA4AAAABgAAEdAEAAAbKEsAAApzTwAACnNQAAAKCgYCjAQAABtvUQAACihSAAAKBm9T
AAAKb1QAAAoGb1UAAAoqEzADACwAAAAGAAAR0AQAABsoSwAACnNPAAAKKFIAAAoCbycAAApzVgAA
CgoGb1cAAAqlBAAAGyoeAnsMAAAEKiICA30MAAAEKh4Cew0AAAQqIgIDfQ0AAAQqHgJ7DgAABCoi
AgN9DgAABCoeAnsPAAAEKiICA30PAAAEKh4CexAAAAQqIgIDfRAAAAQqHgJ7EQAABCoiAgN9EQAA
BCoeAnsSAAAEKiICA30SAAAEKh4CexMAAAQqIgIDfRMAAAQqHgJ7FAAABCoiAgN9FAAABCoeAnsV
AAAEKiICA30VAAAEKh4CexYAAAQqIgIDfRYAAAQqHgJ7FwAABCoiAgN9FwAABCoeAnsYAAAEKiIC
A30YAAAEKh4CexkAAAQqIgIDfRkAAAQqHgJ7GgAABCoiAgN9GgAABCoeAnsbAAAEKiICA30bAAAE
Kh4CexwAAAQqIgIDfRwAAAQqHgJ7HQAABCoiAgN9HQAABCoAABswBAAhAQAABwAAEQJ7HgAABAoC
eyAAAAQLBiYABjmaAAAAB3sFAAAEbzMAAAYNFyhYAAAKIAAMAAAoWQAACgd7BQAABG8wAAAGbyQA
AAoTBAd7BQAABG8yAAAGEwUHCREEEQUoBgAABhMGc1oAAAolIP///39vWwAAChEGbwMAACsTBwcR
BygFAAAGb10AAAoTCBIIKF4AAAotPgIWJQp9HgAABAIRCH0hAAAEAnwfAAAEEggCKAQAACvebwJ7
IQAABBMIAnwhAAAE/hUGAAAbAhUlCn0eAAAEEggoYAAACiYWDN4yEwkHF3L6DABwEQlvYQAACigI
AAAGFgzeGRMKAh/+fR4AAAQCfB8AAAQRCihiAAAK3hQCH/59HgAABAJ8HwAABAgoYwAACioAAAAB
HAAAAAARAMnaABkTAAABAAAOAOXzABkTAAABNgJ8HwAABAMoZAAACioAABswBACXAQAACAAAEQJ7
JQAABAoWDAJ7JAAABA0WEwQ4DQEAAAkRBJoTBQZ7BgAABG8lAAAGBnsGAAAEBnsFAAAEbzEAAAZv
DwAABgZ7BgAABBEFbz4AAAZvEQAABgZ7BgAABBEFb0AAAAZvEwAABgZ7BgAABBEFb0IAAAZvFQAA
BgZ7BgAABBEFb0QAAAZvGwAABgZ7BgAABBEFb0gAAAZvGQAABgZ7BgAABBEFb0YAAAZvVwAABm8X
AAAGBnsGAAAEchgNAHARBW9KAAAGKGUAAApvHQAABgZ7BgAABHIYDQBwEQVvTAAABihlAAAKbyEA
AAYGewYAAAQRBW9OAAAGb1cAAAZvHwAABgZ7BgAABHIYDQBwEQVvUAAABihlAAAKbyMAAAYIF1gM
EQQXWBMEEQQJjmk/6f7//wYWchwNAHASAihmAAAKKGcAAAoSAihmAAAKKAgAAAYUC94wEwYGF3JS
DQBwEQZvYQAACigIAAAG/hoTBwIf/n0iAAAEAnwjAAAEEQcoaAAACt4UAh/+fSIAAAQCfCMAAAQH
KGkAAAoqAEE0AAAAAAAABwAAAEsBAABSAQAAFwAAABMAAAEAAAAABwAAAGIBAABpAQAAGQAAABMA
AAE2AnwjAAAEAyhqAAAKKgAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAwBMA
ACN+AAAsFAAAOBMAACNTdHJpbmdzAAAAAGQnAABoDQAAI1VTAMw0AAAQAAAAI0dVSUQAAADcNAAA
SAQAACNCbG9iAAAAAAAAAAIAAAFXF6ILCQ8AAAD6ATMAFgAAAQAAAEkAAAAPAAAAJQAAAGkAAABC
AAAAAgAAAGoAAABNAAAACAAAAAkAAAAwAAAAQwAAAAQAAAAGAAAAAQAAAAsAAAABAAAABwAAAAIA
AAAEAAAAAACsCQEAAAAAAAYAvwcCDwYAUwgCDwYA2AbvDg8Ayg8AAAYABQcWDAYAogcWDAYAgwcW
DAYAOggWDAYA3wcWDAYA+AcWDAYANwcWDAYAUgfiCAoAEwhOBQYAwQUSCwYAHAcCDwYArwBuEA4A
jwYCDwYAWxESCwYAqgwSCxIAbAzWEQYA8wp9AQYAoAYCDwYAmwUSCwYAHgUCDwYA3AACDwYAwwAC
DwYAawfvDgoAsg1OBRYAow1OBQoA/QxOBQoAChJOBRoAZgAIDgYAuwbvDgYAww0iDwYA6QzECx4A
XwaWCR4A7AaWCR4AGAavCwYAcgluEAYARQkSCyIA1AmSCwYAtgB3CSIAKhGSCwYA2QiiEgYAZBIS
CxIAXwy0DBIAdAaWARIAYwTWERIAWQS0DBIAjwWWARIASAzWERIAZQ7WERIAgQWWAQYA6gASCxIA
WQ60DAYAvwQSCwYAeg2iEgYAegwSCyYAAQAwDiYAKgAwDiYATQAwDhoAfwAIDhoAGgAIDn8AwhIA
ABoAkAAIDgYAywQSCwYAFxMWDCoAjg7HDCoAqQ7ZCwYA+Qp9AR4A6Q1lER4ApQVlES4AvQ72CwAA
AAApAQAAAAABAAEAAQAQAHgLAAAQAAEAAQABABAAlQ0AAHEABAAOAAEAEADsEQAAfQAEACgAAQAQ
AK4QAABJAAcALQABABAAFBAAAEkACAAvAAAAEABFD9kPSQAJADQAAAEQAFsQ2Q+ZAAsAOAACABAA
/Q0AAEkADAA7AAIAEAAlEAAASQAMAD4AAgAQAHARAABJABcAVQACABAAJwsAAEkAGgBcAAIAEACu
CAAASQAdAGMAAwEQAPsAAABdAB4AZgADARAAEAEAAF0AIgBoABEAiAttABEAdAFtABEAugVtAAYA
rhA7AgYAFBA/AgYAlQ1DAgEA+hFHAgEA+hFHAhEAGQtLAhEACAZQAhEAdQRVAgEAnAJtAAEAKgRt
AAEAtwJtAAEA9QJtAAEAowNZAgEA2QJtAAEA2gNdAgEAEARdAgEAVANZAgEA8gNdAgEAvwNdAgEA
PgNtAAEAnAJtAAEADANtAAEAaQNtAAEAIgNtAAEAhwNtAAEAQgRtAAYAhAZhAgYAiA1kAgYAZBBr
AgEAqABvAgYAhAZhAgYAiA12AgYAYhF9AgYAZBBrAlAgAAAAAMYAcQgGAAEAWCAAAAAAxgB8CAYA
AQBgIAAAAADGAA8RBgABAHAgAAAAAIYAHhCCAgEAtCAAAAAAgQCHAYoCAQAAIQAAAACBACAJlQID
AGAhAAAAAIYA8ACcAgYAdCEAAAAAhgAwBqECBwCUIgAAAACGAC4SlQIKAGQjAAAAAIYAJQubAA0A
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
wQCZEgYAwQAxBSEA2QDYDgYACQHYDgYAKQHYDicA+QBxCAYA+QB8CAYAOQGxEQYADABOBjkADABe
EkIADABuCU8AFABOBjkAFABeEkIAFABuCU8AQQEwE20ASQFOBnAASQE3EnYASQG4BH0AHAAAC5EA
WQE+EZcAkQA5CZsAmQCUDJ8AYQFqAaQAYQEtEKoAaQH8CLAAAQELCZsAoQDYDhAAcQFVBrsAcQFV
CwYAgQHYDsEAiQGLBcgAgQHCEM8AmQEzAtUAuQGICN8AmQEzAuQAiQEgE+8AwQFGBgYAyQHYDgYA
yQFuBPMAQQEjEfoA4QDYDgEB4QAJCwsB4QDSCgEA0QHYDhAA4QDyEgYA4QCiEQYA4QClEREB+QDY
DgYA+QBeARkB+QBKECABkQDYDgYA+QCiASYB2QEoDCwB4QEDBTIB6QHTDTkB+QAIED8B8QEAC0UB
+QDdEkwB+QGuElIBcQDdBFkBcQATE2EBEQHYDmcBMQHYDgYAIQLYDhUAqQDYDgYAKQJWEXcBYQEg
AaQAqQD5En8BYQFCCYQBMQJABgYAqQDYDooBKQIzEZABOQKYCK4BOQLaCrMBSQLYDgYASQJcCQEA
SQK7CLoBLAByDs0BNACMAhEBDAB1AtwBNADCEfEBmQCsBJsADACnDPYBDADMEfwBDAAxBSEAQQGD
CxMCsQE5CZsAQQEjERoCFACnDPYBFADMEfwBFAAxBSEAJABzADsELgALACwDLgATADUDLgAbAFQD
LgAjAF0DLgArAIYDLgAzAIYDLgA7AIYDLgBDAF0DLgBLAIwDLgBTAIYDLgBbAKMDQwBjADYEgABr
APEDoABrABYE4wCbADYEYQF7ADYEgQF7ADYEoQF7ADYEwQF7ADYEwwF7ADYE4QF7ADYE4wF7ADYE
AQJ7ADYEIQJ7ADYEQQJ7ADYEYQJ7ADYEgQJ7ADYEoQJ7ADYEwQJ7ADYE4QJ7ADYEAQN7ADYEIQN7
ADYEQQN7ADYEYQN7ADYEgQN7ADYEiQOjAFQDoQN7ADYEqQOjAFQDwAd7ADYE4Ad7ADYEAAh7ADYE
IAh7ADYEQAh7ADYEYAh7ADYEgAh7ADYEoAh7ADYEwAh7ADYE4Ah7ADYEAAl7ADYEIAl7ADYEQAl7
ADYEYAl7ADYEgAl7ADYEoAl7ADYEwAl7ADYE4Al7ADYEAAp7ADYEIAp7ADYEQAp7ADYEYAp7ADYE
oAp7ADYEwAp7ADYE4Ap7ADYEAAt7ADYEIAt7ADYEQAt7ADYEgAt7ADYEoAt7ADYEwAt7ADYE4At7
ADYEAAx7ADYEIAx7ADYEYAx7ADYEgAx7ADYE4AyTADYEIA2TADYELgBYAGgAtgAVAW8BlwECAgMA
AQAFABcABgAYAAcAHAAIAB4ACgAfAAsAKgAMAC0ADQAwAAAAVQH/AgAA4wkDAwAAIAIHAwAALgoD
AwAACBEHAwAAxAoDAwAAZAIHAwAAQwoDAwAAFgIHAwAAJAoDAwAAmAQHAwAAXwoDAwAA/QQHAwAA
dQoDAwAAoQ8HAwAAhgoDAwAABQIHAwAADAoDAwAA4hAHAwAAsAoDAwAAvQ8HAwAAmAoDAwAANgEL
AwAABRMHAwAAPwH/AgAAgREHAwAAgQ4HAwAAww0RAwAAEAYXAwAAuhEdAwAAIAIHAwAACBEHAwAA
ZAIHAwAA/QQHAwAAbw0iAwAAmAQHAwAAoQ8nAwAA4hAnAwAAWAkiAwAAvQ8nAwAARQ8nAwAA1AgH
AwAAIAIHAwAAwQUHAwAASAsHAwAA2QUHAwAAbQsHAwAAKBIHAwEADwADAAEAEAAFAAEAEQAHAAEA
EgAJAAEAEwALAAEAFAANAAEAFQAPAAEAFgARAAEAFwATAAEAGAAVAAEAGQAXAAEAGgAZAAEAGwAb
AAEAHAAdAAEAHQAfAAEAHgAhAAEAHwAjAAEAIAAlAAEAIQAnAAEAIgApAAEAIwArAAEAJAAtAAIA
LgAvAAIAMAAxAAIAMQAzAAIAMgA1AAIAMwA3AAIANQA5AAIANgA7AAEANwA7AAIAOAA9AAIAPgA/
AAEAPwA/AAIAQABBAAEAQQBBAAIAQgBDAAEAQwBDAAIARABFAAEARQBFAAIARgBHAAEARwBHAAIA
SABJAAEASQBJAAIASgBLAAEASwBLAAIATABNAAEATQBNAAIATgBPAAEATwBPAAIAUABRAAEAUQBR
AAIAUgBTAAEAUwBTAAIAVQBVAAEAVgBVAAIAVwBXAAEAWABXAAIAWQBZAAEAWgBZAAIAXABbAAEA
XQBbAAIAXgBdAAEAXwBdAAIAYABfAAEAYQBfAAIAYwBhAAEAZABhAA4AzAAhAA4AzgAjAA8A0AAh
AA8A0gAjADMAXQCIAHQBxwHWAQSAAAABAAAA+x25eAAAAAAAAMEBAAAEAAAAAAAAAAAAAAAgArgB
AAAAAAwAAAAAAAAAAAAAACkCQRIAAAAABAAAAAAAAAAAAAAAIALkBQAAAAAEAAAAAAAAAAAAAAAg
ApYBAAAAAAwAAAAAAAAAAAAAACkCbBIAAAAADAAAAAAAAAAAAAAAKQIVDQAAAAAEAAAAAAAAAAAA
AAAgAhILAAAAAAMAAAAAAAAAAAAAADICkgsAAAAADAAAAAAAAAAAAAAAKQI4DQAAAAAEAAAAAAAA
AAAAAAAgAtkLAAAAAAQAAAAAAAAAAAAAADIChRAAAAAAAAAAAAEAAABPDwAACQACAAoAAgALAAIA
DAACAA0AAgAOAAIADwACAAAAAAB3AI8BAAAAAHkAjwEzAEoAOQBjALkAwQG/AOcBAAAAAABJRFRT
Q29tcG9uZW50TWV0YURhdGExMDAASURUU1ZhcmlhYmxlMTAwAElEVFNSdW50aW1lQ29ubmVjdGlv
bkNvbGxlY3Rpb24xMDAASURUU1J1bnRpbWVDb25uZWN0aW9uMTAwAElEVFNDb25uZWN0aW9uTWFu
YWdlcjEwMABJRFRTVmFyaWFibGVzMTAwAElEVFNFdmFsdWF0b3JDb250ZXh0MTAwADw+dV9fMQBU
YXNrYDEAQ29sbGVjdGlvbmAxAEFzeW5jVGFza01ldGhvZEJ1aWxkZXJgMQBUYXNrQXdhaXRlcmAx
AEludDMyAEVuY29kZVRvNjQAPFByb2Nlc3NDb3Vyc2VzPmRfXzYAPEdldFJvd3NEVD5kX183AGdl
dF9VVEY4ADxNb2R1bGU+AGdldF9QU0RCAGdldF9DbGllbnRPbmVSb3N0ZXJJRABzZXRfQ2xpZW50
SUQAR2V0T3V0cHV0SUQAZ2V0X0FTQ0lJAHRva2VuVVJJAFN5c3RlbS5JTwBHZXRSb3dzRFQAQXJl
YQBTeXN0ZW0uRGF0YQBnZXRfQ29tcG9uZW50TWV0YURhdGEAbXNjb3JsaWIAU0NfY2I1YzJmNjA5
YTAzNGRjZTllYjVmYjBkOTkzMWU3YWMAZ2V0X1NvdXJjZWRJZABzZXRfU291cmNlZElkAHNldF9P
cmdTb3VyY2VkSWQAc2V0X1NjaG9vbFllYXJTb3VyY2VkSWQAY2xpZW50SWQAQWRkAE1hcmtPdXRw
dXRzRmluaXNoZWQAZ2V0X0RhdGVMYXN0TW9kaWZpZWQAc2V0X0RhdGVMYXN0TW9kaWZpZWQAQXdh
aXRVbnNhZmVPbkNvbXBsZXRlZABnZXRfSXNDb21wbGV0ZWQAPFNvdXJjZWRJZD5rX19CYWNraW5n
RmllbGQAPERhdGVMYXN0TW9kaWZpZWQ+a19fQmFja2luZ0ZpZWxkADxDb3Vyc2VDb2RlPmtfX0Jh
Y2tpbmdGaWVsZAA8VGl0bGU+a19fQmFja2luZ0ZpZWxkADxUeXBlPmtfX0JhY2tpbmdGaWVsZAA8
dG9rZW5fdHlwZT5rX19CYWNraW5nRmllbGQAPEhyZWY+a19fQmFja2luZ0ZpZWxkADxPcmc+a19f
QmFja2luZ0ZpZWxkADxhY2Nlc3NfdG9rZW4+a19fQmFja2luZ0ZpZWxkADxleHBpcmVzX2luPmtf
X0JhY2tpbmdGaWVsZAA8U2Nob29sWWVhcj5rX19CYWNraW5nRmllbGQAPFJlc291cmNlcz5rX19C
YWNraW5nRmllbGQAPEdyYWRlcz5rX19CYWNraW5nRmllbGQAPFN1YmplY3RDb2Rlcz5rX19CYWNr
aW5nRmllbGQAPFN1YmplY3RzPmtfX0JhY2tpbmdGaWVsZAA8U3RhdHVzPmtfX0JhY2tpbmdGaWVs
ZAA8Y291bnQ+a19fQmFja2luZ0ZpZWxkAERiQ29tbWFuZABTcWxDb21tYW5kAEFwcGVuZABkZWZh
dWx0SW5zdGFuY2UAZ2V0X0NvdXJzZUNvZGUAc2V0X0NvdXJzZUNvZGUAdG9FbmNvZGUAZ2V0X01l
c3NhZ2UASW52b2tlAElEaXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFu
ZGxlAGdldF9UaXRsZQBzZXRfVGl0bGUAR2V0UnVudGltZUNvbm5lY3Rpb25CeU5hbWUASUFzeW5j
U3RhdGVNYWNoaW5lAFNldFN0YXRlTWFjaGluZQBzdGF0ZU1hY2hpbmUATWljcm9zb2Z0LlNxbFNl
cnZlci5EdHMuUGlwZWxpbmUAZ2V0X1R5cGUAc2V0X1R5cGUAU3FsRGJUeXBlAHNldF9Db21tYW5k
VHlwZQBWYWx1ZVR5cGUAU2VjdXJpdHlQcm90b2NvbFR5cGUAcHJvY2Vzc1R5cGUAZ2V0X3Rva2Vu
X3R5cGUAc2V0X3Rva2VuX3R5cGUAU3lzdGVtLkNvcmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUA
cmVzb3VyY2VDdWx0dXJlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAFdyaXRlVG9EYXRhYmFzZQBD
bG9zZQBEaXNwb3NlAENyZWF0ZQBnZXRfU3RhdGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29ubmVj
dGlvblN0YXRlADw+MV9fc3RhdGUARHluYW1pY0F0dHJpYnV0ZQBDb21waWxlckdlbmVyYXRlZEF0
dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUA
RWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXN5bmNTdGF0
ZU1hY2hpbmVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3
b3JrQXR0cmlidXRlAERlYnVnZ2VySGlkZGVuQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlv
bkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhh
dGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0
QXR0cmlidXRlAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5
Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBQcmVFeGVjdXRl
AFBvc3RFeGVjdXRlAHNldF9WYWx1ZQB2YWx1ZQBzZXRfRXhwZWN0MTAwQ29udGludWUARmlsZVNp
emUASnNvbkRlc2VyaWFsaXplAGdldF9IcmVmAHNldF9IcmVmAEVuY29kaW5nAFN5c3RlbS5SdW50
aW1lLlZlcnNpb25pbmcAVG9CYXNlNjRTdHJpbmcAZ2V0X0Nvbm5lY3Rpb25TdHJpbmcAR2V0SnNv
blN0cmluZwBqc29uU3RyaW5nAFRvU3RyaW5nAEdldFN0cmluZwBnZXRfT3JnAHNldF9PcmcAc2V0
X01heEpzb25MZW5ndGgAZ2V0X1Rhc2sAU3lzdGVtLkNvbGxlY3Rpb25zLk9iamVjdE1vZGVsAFN5
c3RlbS5Db21wb25lbnRNb2RlbABTQ19jYjVjMmY2MDlhMDM0ZGNlOWViNWZiMGQ5OTMxZTdhYy5k
bGwAUG93ZXJTaGVsbABzZXRfQ2xpZW50SURfSXNOdWxsAHNldF9Tb3VyY2VkSWRfSXNOdWxsAHNl
dF9PcmdTb3VyY2VkSWRfSXNOdWxsAHNldF9TY2hvb2xZZWFyU291cmNlZElkX0lzTnVsbABzZXRf
RGF0ZUxhc3RNb2RpZmllZF9Jc051bGwAc2V0X0NvdXJzZUNvZGVfSXNOdWxsAHNldF9UaXRsZV9J
c051bGwAc2V0X0dyYWRlc19Jc051bGwAc2V0X1N1YmplY3RDb2Rlc19Jc051bGwAc2V0X1N1Ympl
Y3RzX0lzTnVsbABzZXRfU3RhdHVzX0lzTnVsbABTZXROdWxsAHNldF9TZWN1cml0eVByb3RvY29s
AHVybABNZW1vcnlTdHJlYW0AZ2V0X0l0ZW0Ac2V0X0l0ZW0AU3lzdGVtAHJlc291cmNlTWFuAFBT
QWNjZXNzVG9rZW4AZ2V0X2FjY2Vzc190b2tlbgBzZXRfYWNjZXNzX3Rva2VuAE9wZW4AZ2V0X2V4
cGlyZXNfaW4Ac2V0X2V4cGlyZXNfaW4AU2NyaXB0TWFpbgBKb2luAHBMb2NhdGlvbgBTeXN0ZW0u
TWFuYWdlbWVudC5BdXRvbWF0aW9uAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxp
emF0aW9uAFN5c3RlbS5SdW50aW1lLlNlcmlhbGl6YXRpb24AU3lzdGVtLldlYi5TY3JpcHQuU2Vy
aWFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBnZXRfUnVudGltZUNvbm5lY3Rpb25Db2xsZWN0
aW9uAFNxbFBhcmFtZXRlckNvbGxlY3Rpb24ARGJDb25uZWN0aW9uAFNxbENvbm5lY3Rpb24ASW52
YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBnZXRfSW5uZXJFeGNlcHRpb24AU2V0RXhjZXB0aW9uAFN5
c3RlbS5EYXRhLkNvbW1vbgBTeXN0ZW0uUnVudGltZS5TZXJpYWxpemF0aW9uLkpzb24AQ3VsdHVy
ZUluZm8ATG9nSW5mbwBPdXRwdXROYW1lTWFwAE91dHB1dE1hcABNaWNyb3NvZnQuU3FsU2VydmVy
LkRUU1J1bnRpbWVXcmFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUGlwZWxpbmVXcmFwAGdldF9T
Y2hvb2xZZWFyAHNldF9TY2hvb2xZZWFyAFN0cmluZ0J1aWxkZXIAPD50X19idWlsZGVyAE91dHB1
dDBCdWZmZXIAUGlwZWxpbmVCdWZmZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIA
Z2V0X0Nvbm5lY3Rpb25NYW5hZ2VyAFNlcnZpY2VQb2ludE1hbmFnZXIASnNvbkhlbHBlcgBNaWNy
b3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lLldyYXBwZXIATWljcm9zb2Z0LlNxbFNlcnZlci5E
dHMuUGlwZWxpbmUuV3JhcHBlcgBEYlBhcmFtZXRlcgBTcWxQYXJhbWV0ZXIAR2V0QXdhaXRlcgBn
ZXRfQ2xpZW50U2VydmVyAERhdGFDb250cmFjdEpzb25TZXJpYWxpemVyAFhtbE9iamVjdFNlcmlh
bGl6ZXIASmF2YVNjcmlwdFNlcmlhbGl6ZXIARXJyb3IALmN0b3IALmNjdG9yAE91dHB1dElEcwBT
eXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0u
UmVzb3VyY2VzAGdldF9SZXNvdXJjZXMAc2V0X1Jlc291cmNlcwBTQ19jYjVjMmY2MDlhMDM0ZGNl
OWViNWZiMGQ5OTMxZTdhYy5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMAZ2V0X0dyYWRl
cwBzZXRfR3JhZGVzAGdldF9TdWJqZWN0Q29kZXMAc2V0X1N1YmplY3RDb2RlcwBEZWJ1Z2dpbmdN
b2RlcwBTQ19jYjVjMmY2MDlhMDM0ZGNlOWViNWZiMGQ5OTMxZTdhYy5Qcm9wZXJ0aWVzAGdldF9S
ZWFkT25seVZhcmlhYmxlcwBQcm9jZXNzQ291cnNlcwBHZXRCeXRlcwBCdWZmZXJDb2x1bW5JbmRl
eGVzAEdldENvbHVtbkluZGV4ZXMAU2V0dGluZ3MAPD40X190aGlzAFN5c3RlbS5UaHJlYWRpbmcu
VGFza3MAU3lzdGVtLldlYi5FeHRlbnNpb25zAFBTQWNhZGVtaWNTZXNzaW9ucwBDb25uZWN0aW9u
cwBCdWZmZXJzAGdldF9QYXJhbWV0ZXJzAGdldF9TdWJqZWN0cwBzZXRfU3ViamVjdHMARmluaXNo
T3V0cHV0cwBnZXRfU3RhdHVzAHNldF9TdGF0dXMAQ3JlYXRlTmV3T3V0cHV0Um93cwBDb25jYXQA
UFNPYmplY3QAUmVhZE9iamVjdABnZXRfSW1tZWRpYXRlQmFzZU9iamVjdABXcml0ZU9iamVjdABk
dABTeXN0ZW0uTmV0AFNvdXJjZWRJZFNldABnZXRfQ2xpZW50U2VjcmV0AGNsaWVudFNlY3JldABz
ZWNyZXQAU2V0RW5kT2ZSb3dzZXQAV2FpdABnZXRfRGVmYXVsdABHZXRSZXN1bHQAU2V0UmVzdWx0
AFN5c3RlbS5EYXRhLlNxbENsaWVudABVc2VyQ29tcG9uZW50AFBhcmVudENvbXBvbmVudABTY3Jp
cHRDb21wb25lbnQAZ2V0X2NvdW50AHNldF9jb3VudABQU1NjcmlwdABBZGRTY3JpcHQATWljcm9z
b2Z0LlNxbFNlcnZlci5UeFNjcmlwdABTdGFydABDb252ZXJ0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
UGlwZWxpbmVIb3N0AFByaW1lT3V0cHV0AE1vdmVOZXh0AFN5c3RlbS5UZXh0AEdldFZhbHVlV2l0
aENvbnRleHQAU2NyaXB0Q29tcG9uZW50RXZhbENvbnRleHQAZ2V0X0V2YWx1YXRvckNvbnRleHQA
QWRkUm93AFRvQXJyYXkAZ2V0X0NsaWVudEtleQBrZXkAZ2V0X0Fzc2VtYmx5AEV4ZWN1dGVOb25R
dWVyeQBFbXB0eQAAAAATcwBwAEwAbwBnAEkAbgBmAG8AABVAAEMAbABpAGUAbgB0AFUASQBEAAAN
QABFAHIAcgBvAHIAABNAAEYAaQBsAGUAVAB5AHAAZQAAC0AAQQByAGUAYQAAEUAATABvAGcASQBu
AGYAbwAAD3AAYQByAGEAbQAgAAoAAAcoACAACgAAOyAAIABbAFAAYQByAGEAbQBlAHQAZQByACgA
UABvAHMAaQB0AGkAbwBuACAAPQAgADEAKQBdACAACgAAHyAAIABbAHUAcgBpAF0AJABVAHIAaQAg
AD0AIAAnAAELLwAnACwAIAAKAAE3IAAgAFsAUABhAHIAYQBtAGUAdABlAHIAKABQAG8AcwBpAHQA
aQBvAG4AIAA9ACAAMgApAF0AADEgACAAWwBzAHQAcgBpAG4AZwBdACQAUwBlAGMAcgBlAHQAawBl
AHkAIAA9ACAAJwABCScALAAgAAoAATsgACAAWwBQAGEAcgBhAG0AZQB0AGUAcgAoAFAAbwBzAGkA
dABpAG8AbgAgAD0AIAAzACkAXQAgAAoAADMgACAAWwBzAHQAcgBpAG4AZwBdACQAUABhAHMAcwBw
AGgAcgBhAHMAZQAgAD0AIAAnAAEHJwAgAAoAAQcpACAACgAAAwoAADVmAHUAbgBjAHQAaQBvAG4A
IABHAGUAdAAtAEEAYwBjAGUAcwBzAFQAbwBrAGUAbgAgAAoAAQd7ACAACgAAgIUgACAAIABbAHUA
cgBpAF0AJAByAGUAcQB1AGUAcwB0AFUAcgBpACAAPQAgACQAdQByAGkALgBTAGMAaABlAG0AZQAg
ACsAIAAnADoALwAvACcAIAArACAAJAB1AHIAaQAuAEgAbwBzAHQAIAArACAAJwAvAHQAbwBrAGUA
bgAnACAACgABgO8gACAAIAAkAGIAYQBzAGkAYwBBAHUAdABoACAAPQAgAFsAUwB5AHMAdABlAG0A
LgBDAG8AbgB2AGUAcgB0AF0AOgA6AFQAbwBCAGEAcwBlADYANABTAHQAcgBpAG4AZwAoAFsAUwB5
AHMAdABlAG0ALgBUAGUAeAB0AC4ARQBuAGMAbwBkAGkAbgBnAF0AOgA6AFUAVABGADgALgBHAGUA
dABCAHkAdABlAHMAKAAiACQAewBTAGUAYwByAGUAdABrAGUAeQB9ADoAJAB7AFAAYQBzAHMAcABo
AHIAYQBzAGUAfQAiACkAKQAgAAoAACUgACAAIAAkAGgAZQBhAGQAZQByAHMAIAA9ACAAQAB7ACAA
CgAAWyAAIAAgACAAIAAgACAAQQB1AHQAaABvAHIAaQB6AGEAdABpAG8AbgAgAD0AIAAiAEIAYQBz
AGkAYwAgACQAewBiAGEAcwBpAGMAQQB1AHQAaAB9ACIAIAAKAAAJIAAgACAAfQAAgK8gACAAIAAk
AGIAbwBkAHkAIAA9ACAAJwBnAHIAYQBuAHQAXwB0AHkAcABlAD0AYwBsAGkAZQBuAHQAXwBjAHIA
ZQBkAGUAbgB0AGkAYQBsAHMAJgBzAGMAbwBwAGUAPQBzAGMAbwBwAGUAbgBhAG0AZQAxACUAMgAw
AHMAYwBvAHAAZQBuAGEAbQBlADIAJQAyADAAcwBjAG8AcABlAG4AYQBtAGUAeAAnACAACgABOyQA
cABhAHIAYQBtAEkAbgB2AG8AawBlAFIAZQBzAHQATQBlAHQAaABvAGQAIAA9ACAAQAB7ACAACgAA
MyAAIAAgAE0AZQB0AGgAbwBkAAkACQAgACAAIAAgAD0AIAAnAFAAbwBzAHQAJwAgAAoAATkgACAA
IABVAHIAaQAJAAkACQAgACAAIAAgAD0AIAAkAHIAZQBxAHUAZQBzAHQAVQByAGkAIAAKAAA5IAAg
ACAASABlAGEAZABlAHIAcwAJAAkAIAAgACAAIAA9ACAAJABoAGUAYQBkAGUAcgBzACAACgAALSAA
IAAgAEIAbwBkAHkACQAJACAAIAAgACAAPQAgACQAYgBvAGQAeQAgAAoAAHUgACAAIABDAG8AbgB0
AGUAbgB0AFQAeQBwAGUACQAgACAAIAAgAD0AIAAnAGEAcABwAGwAaQBjAGEAdABpAG8AbgAvAHgA
LQB3AHcAdwAtAGYAbwByAG0ALQB1AHIAbABlAG4AYwBvAGQAZQBkACcAIAAKAAE5IAAgACAAVQBz
AGUAQgBhAHMAaQBjAFAAYQByAHMAaQBuAGcAIAA9ACAAJAB0AHIAdQBlACAACgAAB30AIAAKAABv
IAAgACAAJABhAGMAYwBlAHMAcwAgAD0AIABJAG4AdgBvAGsAZQAtAFIAZQBzAHQATQBlAHQAaABv
AGQAIABAAHAAYQByAGEAbQBJAG4AdgBvAGsAZQBSAGUAcwB0AE0AZQB0AGgAbwBkACAACgABPSAA
IAAgAGkAZgAgACgAJABhAGMAYwBlAHMAcwAuAGEAYwBjAGUAcwBzAF8AdABvAGsAZQBuACkAIAAK
AAANIAAgACAAewAgAAoAAC8gACAAIAAgACAAIAAgAHIAZQB0AHUAcgBuACAAJABhAGMAYwBlAHMA
cwAgAAoAAA0gACAAIAB9ACAACgAAEyAAIAAgAGUAbABzAGUAIAAKAABTIAAgACAAIAAgACAAIAB0
AGgAcgBvAHcAIAAiAE4AbwAgAGEAYwBjAGUAcwBzACAAdABvAGsAZQBuACAAcgBlAHQAdQByAG4A
ZQBkACIAIAAKAACAwVsAdQByAGkAXQAkAHIAZQBxAHUAZQBzAHQAVQByAGkAIAA9ACAAJAB1AHIA
aQAuAFMAYwBoAGUAbQBlACAAKwAgACcAOgAvAC8AJwAgACsAIAAkAHUAcgBpAC4ASABvAHMAdAAg
ACsAIAAnAC8AaQBtAHMALwBvAG4AZQByAG8AcwB0AGUAcgAvAHYAMQBwADEALwBjAG8AdQByAHMA
ZQBzAD8AbABpAG0AaQB0AD0AMQAwADAAMAAwACcAIAAKAAE3JABhAGMAYwBlAHMAcwAgAD0AIABH
AGUAdAAtAEEAYwBjAGUAcwBzAFQAbwBrAGUAbgAgAAoAAUskAGIAZQBhAHIAZQByAFQAbwBrAGUA
bgAgAD0AIAAkAGEAYwBjAGUAcwBzAC4AYQBjAGMAZQBzAHMAXwB0AG8AawBlAG4AIAAKAAAfJABo
AGUAYQBkAGUAcgBzACAAPQAgAEAAewAgAAoAAGEgACAAIABBAHUAdABoAG8AcgBpAHoAYQB0AGkA
bwBuAAkACQAgACAAIAA9ACAAIgBCAGUAYQByAGUAcgAgACQAewBiAGUAYQByAGUAcgBUAG8AawBl
AG4AfQAiACAACgAAMSAAIAAgAE0AZQB0AGgAbwBkAAkACQAgACAAIAAgAD0AIAAnAEcAZQB0ACcA
IAAKAAFtJAByAGUAcwBwAG8AbgBzAGUAIAA9ACAASQBuAHYAbwBrAGUALQBSAGUAcwB0AE0AZQB0
AGgAbwBkACAAQABwAGEAcgBhAG0ASQBuAHYAbwBrAGUAUgBlAHMAdABNAGUAdABoAG8AZAAgAAoA
AV0kAHIAZQBzAHAAbwBuAHMAZQAuAGMAbwB1AHIAcwBlAHMAIAB8ACAAQwBvAG4AdgBlAHIAdABU
AG8ALQBKAHMAbwBuACAALQBEAGUAcAB0AGgAIAAxADYAIAAKAAFHYQBwAHAAbABpAGMAYQB0AGkA
bwBuAC8AeAAtAHcAdwB3AC0AZgBvAHIAbQAtAHUAcgBsAGUAbgBjAG8AZABlAGQAIAAKAAE1aQBt
AHMALwBvAG4AZQByAG8AcwB0AGUAcgAvAHYAMQBwADEALwBjAG8AdQByAHMAZQBzAAALdABvAGsA
ZQBuAAAPQwBvAHUAcgBzAGUAcwAAgJtJAHMATgB1AGwAbAAgAHAAcgBvAHAAZQByAHQAeQAgAGMA
YQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABGAGEAbABzAGUALgAgAEEAcwBzAGkAZwBu
ACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAAYwBvAGwAdQBtAG4AIABpAG4AcwB0AGUA
YQBkAC4AABFPAHUAdABwAHUAdAAgADAAAAlQAFMARABCAAATQwBsAGkAZQBuAHQASwBlAHkAACND
AGwAaQBlAG4AdABPAG4AZQBSAG8AcwB0AGUAcgBJAEQAABlDAGwAaQBlAG4AdABTAGUAYwByAGUA
dAAAGUMAbABpAGUAbgB0AFMAZQByAHYAZQByAABxUwBDAF8AYwBiADUAYwAyAGYANgAwADkAYQAw
ADMANABkAGMAZQA5AGUAYgA1AGYAYgAwAGQAOQA5ADMAMQBlADcAYQBjAC4AUAByAG8AcABlAHIA
dABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAdUAByAG8AYwBlAHMAcwBDAG8AdQByAHMAZQBz
AAADLAAANUcAZQB0ACAAQwBvAHUAcgBzAGUAcwAgAC0AIABSAG8AdwBzACAAQQBkAGQAZQBkADoA
IAABFUcAZQB0AEMAbwB1AHIAcwBlAHMAAAQWRcyMuK1EgTTTr6OVqRUABCABAQgDIAABBSABARER
BCABAQ4FIAEBEjkFIAEBHQIFIAEBEmEGIAEBEYCRBAcBETgFFRFpAQgIAAAVEWkBEwAHMAEBARAe
AAQKARE4CCAAFRJBARMABAcBETwFFRFpARwECgERPAQHAg4OAgYOBQAAEoClBiABEoClDgogABUS
gKkBEoCtCBUSgKkBEoCtBSABEwAIAyAAHAMgAA4EIAASTQUAABKAsQUgAR0FDgUAAQ4dBQQHARJR
BSAAEYC9BiACAQ4SUQYgAQERgMkFIAASgM0JIAISgNEOEYDVBCABARwKIAMSgNEOEYDVCAMgAAgG
IAESgOUOBgADDg4ODgkgAwESdR0IEnkFIAIBCBwDIAACAwcBCAYAAggSeQ4FIAEdCAgFIAASgO0F
IAASgPEGIAESgPUOBSAAEoCBBSAAEoD5BiABEoD9HAUAABKBAQYgARwSgQUHAAESORGBCQUgABKB
DQcgAgEOEoENBAcBElUCHgAHIAIBEoEZHAQgAB0FBSABDh0FBSABAR0FBiABHBKBGRYHCwgSCAgO
Dg4OHRIoFRFlARwSTRJNBAABAQIGAAEBEYEhBjABAR4ADgUKAR0SKAUVEkEBHAggABURZQETAAUV
EWUBHAowAgIBEB4AEB4BCQoCFRFlARwROAQgABMABSABARJNBSABARMAEAcIEggcCB0SKAgSKBJN
Ek0GAAIODh0OBQACDg4OCLd6XFYZNOCJCImEXc2AgMyRCDG/OFatNk41AwYSFAMGEhgDBhIMAwYS
fQQGEoCJBAYSgI0DBhIgAwYSLAMGHQ4CBggGBhURaQEIAwYSCAYGFRFlARwGBhURaQEcBAYdEigH
IAAVEkEBCAogARUSQQEcHRIoBiADDg4ODgQgAQ4OBiADAQgODgMAAAEEIAEBAgsgBAEIHQgdEnUS
eQUgAQESfQUAABKAiQUAABKAjQYAAQESgI0EAAASIAYQAQEOHgAGEAEBHgAOBCAAEiwFIAEBEiwE
IAAdDgUgAQEdDgMoAAgDKAACAygADgUoABKAgQUIABKAiQUIABKAjQQIABIgBCgAEiwEKAAdDggB
AAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU0NfY2I1
YzJmNjA5YTAzNGRjZTllYjVmYjBkOTkzMWU3YWMAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAy
MQAATQEAHC5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC41LjIBAFQOFEZyYW1ld29ya0Rpc3BsYXlO
YW1lFC5ORVQgRnJhbWV3b3JrIDQuNS4yJAEAH1NjcmlwdE1haW4rPFByb2Nlc3NDb3Vyc2VzPmRf
XzYAAB8BABpTY3JpcHRNYWluKzxHZXRSb3dzRFQ+ZF9fNwAABAEAAAAKAQACAAAAAAEAAAAAtAAA
AM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwg
VmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2
MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQ
QURQQURQtAAAAJBoAAAAAAAAAAAAAKpoAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAACcaAAAAAAA
AAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAA
AQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFiAAAAaBAAAAAAAAAAAAAAaBDQAAABW
AFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAAAAEAuXj7HQAAAQC5ePsd
PwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAA
AAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAEegMAAAEAUwB0AHIAaQBuAGcA
RgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAAMAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBl
AG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYA
aQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwBjAGIANQBjADIAZgA2ADAAOQBh
ADAAMwA0AGQAYwBlADkAZQBiADUAZgBiADAAZAA5ADkAMwAxAGUANwBhAGMAAAA+AA8AAQBGAGkA
bABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANwA2ADcANQAuADMAMAA5ADAANQAAAAAAcAAo
AAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwBjAGIANQBjADIAZgA2ADAAOQBhADAA
MwA0AGQAYwBlADkAZQBiADUAZgBiADAAZAA5ADkAMwAxAGUANwBhAGMALgBkAGwAbAAAAEgAEgAB
AEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAA
MgAwADIAMQAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAo
AAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfAGMAYgA1AGMAMgBmADYA
MAA5AGEAMAAzADQAZABjAGUAOQBlAGIANQBmAGIAMABkADkAOQAzADEAZQA3AGEAYwAuAGQAbABs
AAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwBjAGIANQBjADIAZgA2ADAA
OQBhADAAMwA0AGQAYwBlADkAZQBiADUAZgBiADAAZAA5ADkAMwAxAGUANwBhAGMAAABCAA8AAQBQ
AHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADcANgA3ADUALgAzADAAOQAwADUA
AAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADcANgA3
ADUALgAzADAAOQAwADUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAABgAAAMAAAAvDgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                          name="VSTAProjectName"
                          typeConverter="NOTBROWSABLE">SC_cb5c2f609a034dce9eb5fb0d9931e7ac</property>
                        <property
                          dataType="System.String"
                          description="Specifies the programming language used by the script."
                          name="ScriptLanguage"
                          typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read-only variables."
                          name="ReadOnlyVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::ClientKey,User::ClientOneRosterID,User::ClientSecret,User::ClientServer</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read/write variables."
                          name="ReadWriteVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                        <property
                          dataType="System.String"
                          description="List of breakpoints present on the script."
                          isArray="true"
                          name="BreakpointCollection"
                          typeConverter="NOTBROWSABLE">
                          <arrayElements
                            arrayElementCount="0" />
                        </property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataChecksum"
                          typeConverter="NOTBROWSABLE">29747acf5c910b31f6ddec772bc7afec</property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataShaChecksum"
                          typeConverter="NOTBROWSABLE">8f1f774a7622245b16d561869c4ebb41eff4be53</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Loop thru Clients\Sequence Container\Courses\Script Component 1.Connections[PSDB]"
                          connectionManagerID="Package.ConnectionManagers[OneRosterNET]"
                          connectionManagerRefId="Package.ConnectionManagers[OneRosterNET]"
                          description="Process Log"
                          name="PSDB" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Loop thru Clients\Sequence Container\Courses\Script Component 1.Outputs[Output 0]"
                          hasSideEffects="true"
                          name="Output 0">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Courses\Script Component 1.Outputs[Output 0].Columns[ClientID]"
                              dataType="i4"
                              lineageId="Package\Loop thru Clients\Sequence Container\Courses\Script Component 1.Outputs[Output 0].Columns[ClientID]"
                              name="ClientID" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Courses\Script Component 1.Outputs[Output 0].Columns[SourcedId]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Loop thru Clients\Sequence Container\Courses\Script Component 1.Outputs[Output 0].Columns[SourcedId]"
                              name="SourcedId" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Courses\Script Component 1.Outputs[Output 0].Columns[Status]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Loop thru Clients\Sequence Container\Courses\Script Component 1.Outputs[Output 0].Columns[Status]"
                              name="Status" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Courses\Script Component 1.Outputs[Output 0].Columns[DateLastModified]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Loop thru Clients\Sequence Container\Courses\Script Component 1.Outputs[Output 0].Columns[DateLastModified]"
                              name="DateLastModified" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Courses\Script Component 1.Outputs[Output 0].Columns[SchoolYearSourcedId]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Loop thru Clients\Sequence Container\Courses\Script Component 1.Outputs[Output 0].Columns[SchoolYearSourcedId]"
                              name="SchoolYearSourcedId" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Courses\Script Component 1.Outputs[Output 0].Columns[CourseCode]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Loop thru Clients\Sequence Container\Courses\Script Component 1.Outputs[Output 0].Columns[CourseCode]"
                              name="CourseCode" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Courses\Script Component 1.Outputs[Output 0].Columns[Title]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Loop thru Clients\Sequence Container\Courses\Script Component 1.Outputs[Output 0].Columns[Title]"
                              name="Title" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Courses\Script Component 1.Outputs[Output 0].Columns[Grades]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Loop thru Clients\Sequence Container\Courses\Script Component 1.Outputs[Output 0].Columns[Grades]"
                              name="Grades" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Courses\Script Component 1.Outputs[Output 0].Columns[OrgSourcedId]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Loop thru Clients\Sequence Container\Courses\Script Component 1.Outputs[Output 0].Columns[OrgSourcedId]"
                              name="OrgSourcedId" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Courses\Script Component 1.Outputs[Output 0].Columns[Subjects]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Loop thru Clients\Sequence Container\Courses\Script Component 1.Outputs[Output 0].Columns[Subjects]"
                              name="Subjects" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Courses\Script Component 1.Outputs[Output 0].Columns[SubjectCodes]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Loop thru Clients\Sequence Container\Courses\Script Component 1.Outputs[Output 0].Columns[SubjectCodes]"
                              name="SubjectCodes" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Loop thru Clients\Sequence Container\Courses.Paths[Output 0]"
                      endId="Package\Loop thru Clients\Sequence Container\Courses\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      name="Output 0"
                      startId="Package\Loop thru Clients\Sequence Container\Courses\Script Component 1.Outputs[Output 0]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Loop thru Clients\Sequence Container\Enrollments"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Enrollments"
              DTS:DTSID="{41a75c56-4167-4554-8e87-e13bef8fd031}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Enrollments"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server v10; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  BLOBTempStoragePath=""
                  bufferTempStoragePath=""
                  version="1">
                  <components>
                    <component
                      refId="Package\Loop thru Clients\Sequence Container\Enrollments\OLE DB Destination"
                      componentClassID="Microsoft.OLEDBDestination"
                      contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                      description="OLE DB Destination"
                      name="OLE DB Destination"
                      usesDispositions="true"
                      version="4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[OneRoster].[Enrollments]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepIdentity">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                          name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                          name="FastLoadMaxInsertCommitSize">2147483647</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Loop thru Clients\Sequence Container\Enrollments\OLE DB Destination.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[OneRoster]"
                          connectionManagerRefId="Package.ConnectionManagers[OneRoster]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Loop thru Clients\Sequence Container\Enrollments\OLE DB Destination.Inputs[OLE DB Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Enrollments\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[SourcedId]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="SourcedId"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Enrollments\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[sourcedId]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Enrollments\Script Component 1.Outputs[Output 0].Columns[SourcedId]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Enrollments\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Status]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Status"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Enrollments\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[status]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Enrollments\Script Component 1.Outputs[Output 0].Columns[Status]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Enrollments\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DateLastModified]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="DateLastModified"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Enrollments\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[dateLastModified]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Enrollments\Script Component 1.Outputs[Output 0].Columns[DateLastModified]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Enrollments\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ClassSourcedId]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="ClassSourcedId"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Enrollments\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[classSourcedId]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Enrollments\Script Component 1.Outputs[Output 0].Columns[ClassSourcedId]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Enrollments\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[SchoolSourcedId]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="SchoolSourcedId"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Enrollments\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[schoolSourcedId]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Enrollments\Script Component 1.Outputs[Output 0].Columns[SchoolSourcedId]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Enrollments\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[UserSourcedId]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="UserSourcedId"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Enrollments\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[userSourcedId]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Enrollments\Script Component 1.Outputs[Output 0].Columns[UserSourcedId]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Enrollments\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Role]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Role"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Enrollments\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[role]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Enrollments\Script Component 1.Outputs[Output 0].Columns[Role]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Enrollments\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Primary]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Primary"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Enrollments\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[primary]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Enrollments\Script Component 1.Outputs[Output 0].Columns[Primary]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Enrollments\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[BeginDate]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="BeginDate"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Enrollments\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[beginDate]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Enrollments\Script Component 1.Outputs[Output 0].Columns[BeginDate]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Enrollments\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[EndDate]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="EndDate"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Enrollments\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[endDate]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Enrollments\Script Component 1.Outputs[Output 0].Columns[EndDate]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Enrollments\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ClientID]"
                              cachedDataType="i4"
                              cachedName="ClientID"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Enrollments\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientUID]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Enrollments\Script Component 1.Outputs[Output 0].Columns[ClientID]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Enrollments\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ikey]"
                              dataType="i4"
                              name="ikey" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Enrollments\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientUID]"
                              dataType="i4"
                              name="ClientUID" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Enrollments\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[sourcedId]"
                              codePage="1252"
                              dataType="str"
                              length="150"
                              name="sourcedId" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Enrollments\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[status]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="status" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Enrollments\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[dateLastModified]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="dateLastModified" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Enrollments\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[classSourcedId]"
                              codePage="1252"
                              dataType="str"
                              length="150"
                              name="classSourcedId" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Enrollments\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[schoolSourcedId]"
                              codePage="1252"
                              dataType="str"
                              length="150"
                              name="schoolSourcedId" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Enrollments\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[userSourcedId]"
                              codePage="1252"
                              dataType="str"
                              length="150"
                              name="userSourcedId" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Enrollments\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[role]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="role" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Enrollments\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[primary]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="primary" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Enrollments\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[beginDate]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="beginDate" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Enrollments\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[endDate]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="endDate" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Loop thru Clients\Sequence Container\Enrollments\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Destination Error Output"
                          synchronousInputId="Package\Loop thru Clients\Sequence Container\Enrollments\OLE DB Destination.Inputs[OLE DB Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Enrollments\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Loop thru Clients\Sequence Container\Enrollments\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Enrollments\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Loop thru Clients\Sequence Container\Enrollments\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Loop thru Clients\Sequence Container\Enrollments\Script Component 1"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;9"
                      description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                      name="Script Component 1"
                      version="9">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Stores the source code of the component"
                          isArray="true"
                          name="SourceCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="30">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_1dd90df97d6f4936bc9e84fdfb232ca5.csproj]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{7E11FFE5-B83E-4C76-BA64-714155CD0FB0}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_1dd90df97d6f4936bc9e84fdfb232ca5</RootNamespace>
    <AssemblyName>SC_1dd90df97d6f4936bc9e84fdfb232ca5</AssemblyName>
    <TargetFrameworkVersion>v4.5.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System" />
    <Reference Include="System.ComponentModel.Composition" />
    <Reference Include="System.Data" />
    <Reference Include="System.Management.Automation, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Windows\Microsoft.NET\assembly\GAC_MSIL\System.Management.Automation\v4.0_3.0.0.0__31bf3856ad364e35\System.Management.Automation.dll</HintPath>
    </Reference>
    <Reference Include="System.Memory, Version=4.0.1.1, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\Common7\IDE\PublicAssemblies\System.Memory.dll</HintPath>
    </Reference>
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Runtime.Serialization" />
    <Reference Include="System.Security" />
    <Reference Include="System.Web" />
    <Reference Include="System.Web.Extensions" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
      <DesignTime>True</DesignTime>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.IO;
using System.Net;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Runtime.Serialization.Json;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading.Tasks;
using System.Collections.Specialized;
using System.Web;
using System.Management.Automation;
using System.Web.Script.Serialization;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    static string pLocation = "ims/oneroster/v1p1/Enrollments";
    static string tokenURI = "token";
    static string processType = "Enrollments";
    int currClient = 0;


    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */
        ProcessEnrolmments().Wait();
    }

    public async Task<int> ProcessEnrolmments()
    {
        try
        {

            // The server base address
            string baseURL = Variables.ClientServer;

            //MessageBox.Show(uri);

            ServicePointManager.Expect100Continue = true;
            ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;


            /// The client information used to get the OAuth Access Token from the server.
            string clientId = Variables.ClientKey.ToString();
            string clientSecret = Variables.ClientSecret;
            //string sendAuth = EncodeTo64(Variables.ClientKey + ":" + Variables.ClientSecret);
            //WriteToDatabase(0, "SESSIONS-sendToken", sendAuth);
            // this will hold the Access Token returned from the server.
            //MessageBox.Show(sendToken, "sendToken");
            currClient = Variables.ClientOneRosterID;

            string rawJson = GetJsonString(baseURL, clientId, clientSecret);

            JavaScriptSerializer sr = new JavaScriptSerializer();
            sr.MaxJsonLength = Int32.MaxValue;

            Enrollments[] jsonResponse = sr.Deserialize<Enrollments[]>(rawJson);

            var jRes = await GetRowsDT(jsonResponse);



            return 0;
        }
        catch (Exception ex)
        {
            WriteToDatabase(1, "ProcessEnrollments", ex.Message);
            return 0;
        }

    }



    private async Task<dynamic> GetRowsDT(Enrollments[] dt)
    {
        int numrows = 0;

        try
        {
            foreach (Enrollments item in dt)
            {

                Output0Buffer.AddRow();
                Output0Buffer.ClientID = Variables.ClientOneRosterID;

                if (item.SourcedId.Length >= 36)
                    Output0Buffer.SourcedId = item.SourcedId.Substring(0, 36);
                else
                    Output0Buffer.SourcedId = item.SourcedId;

                Output0Buffer.Status = item.Status;
                Output0Buffer.DateLastModified = item.DateLastModified;
                Output0Buffer.ClassSourcedId = item.Class.SourcedId;
                Output0Buffer.SchoolSourcedId = item.School.SourcedId;
                Output0Buffer.UserSourcedId = item.User.SourcedId;
                Output0Buffer.Role = item.Role;
                Output0Buffer.Primary = item.Primary;
                Output0Buffer.BeginDate = item.BeginDate;
                Output0Buffer.EndDate = item.EndDate;



                numrows += 1;
            }

            WriteToDatabase(0, "Get Enrollments - Rows Added: " + numrows.ToString(), numrows.ToString());
            return null;
        }
        catch (Exception ex)
        {
            WriteToDatabase(1, "GetEnrollments", ex.Message);
            int rc = numrows;
            throw;
        }
    }



    private string GetJsonString(string url, string clientId, string clientSecret)
    {
        string output = string.Empty;
        try
        {
            PowerShell pshell = PowerShell.Create();

            //Load script with parameters
            string spt = PSScript(url, clientId, clientSecret);

            //Add script to pipeliine
            pshell.AddScript(spt);

            //Execute the powershell script
            var outp = pshell.Invoke();

            output = outp[0].ImmediateBaseObject.ToString();
        }
        catch (Exception ex)
        {
            output = ex.InnerException.ToString();
        }

        return output;
    }





    public string EncodeTo64(string toEncode)
    {
        byte[] toEncodeAsBytes = System.Text.ASCIIEncoding.ASCII.GetBytes(toEncode);
        string returnValue = System.Convert.ToBase64String(toEncodeAsBytes);
        return returnValue;

    }
    public class JsonHelper
    {
        /// <summary>
        /// JSON Serialization
        /// </summary>
        public static string JsonSerializer<T>(T t)
        {
            DataContractJsonSerializer ser = new DataContractJsonSerializer(typeof(T));
            MemoryStream ms = new MemoryStream();
            ser.WriteObject(ms, t);
            string jsonString = Encoding.UTF8.GetString(ms.ToArray());
            ms.Close();
            return jsonString;
        }
        /// <summary>
        /// JSON Deserialization
        /// </summary>
        public static T JsonDeserialize<T>(string jsonString)
        {
            DataContractJsonSerializer ser = new DataContractJsonSerializer(typeof(T));
            MemoryStream ms = new MemoryStream(Encoding.UTF8.GetBytes(jsonString));
            T obj = (T)ser.ReadObject(ms);
            return obj;
        }
    }

    public class Enrollments
    {
        public string SourcedId { get; set; }
        public string Status { get; set; }
        public string DateLastModified { get; set; }
        public string Role { get; set; }
        public string Primary { get; set; }
        public SourcedIdSet User { get; set; }
        public SourcedIdSet Class { get; set; }
        public SourcedIdSet School { get; set; }
        public string BeginDate { get; set; }
        public string EndDate { get; set; }


    }

    public class SourcedIdSet
    {
        public string Href { get; set; }
        public string SourcedId { get; set; }
        public string Type { get; set; }
    }

    public class AccessToken
    {
        public string access_token { get; set; }
        public string token_type { get; set; }
        public string expires_in { get; set; }
    }

    public class FileSize
    {
        public string count { get; set; }

    }






    public void WriteToDatabase(int Error, string Area, string LogInfo)
    {
        try
        {
            //MessageBox.Show("WriteToDatabase");
            var ConnString = Connections.PSDB.ConnectionString;

            using (SqlConnection conn = new SqlConnection(Connections.PSDB.ConnectionString))
            {
                if (conn.State != ConnectionState.Open) conn.Open();
                //string insertText = "Insert into OneRoster.LogFile (ClientUID, FileType, Area, LogInfo) Values (@ClientUID, @FileType, @Area, @LogInfo ) ";
                SqlCommand cmd = new SqlCommand("spLogInfo", conn);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("@ClientUID", SqlDbType.Int).Value = Variables.ClientOneRosterID;
                cmd.Parameters.Add("@Error", SqlDbType.Int).Value = Error;
                cmd.Parameters.Add("@FileType", SqlDbType.VarChar, 50).Value = processType;
                cmd.Parameters.Add("@Area", SqlDbType.VarChar, 100).Value = Area;
                cmd.Parameters.Add("@LogInfo", SqlDbType.VarChar, 1000).Value = LogInfo;
                cmd.ExecuteNonQuery();
            }
        }
        catch //(Exception ex)
        {
            throw;
        }
    }



    public string PSScript(string url, string key, string secret)
    {
        StringBuilder param = new StringBuilder();
        param.Append("param \n");
        param.Append("( \n");
        param.Append("  [Parameter(Position = 1)] \n");
        param.Append("  [uri]$Uri = '" + url + "/', \n");
        param.Append("  [Parameter(Position = 2)]");
        param.Append("  [string]$Secretkey = '" + key + "', \n");
        param.Append("  [Parameter(Position = 3)] \n");
        param.Append("  [string]$Passphrase = '" + secret + "' \n");
        param.Append(") \n");
        param.Append("\n");

        string token = PSAccessToken();
        string sessions = PSAcademicSessions();

        param.Append(token);
        param.Append(sessions);



        return param.ToString();
    }

    public string PSAccessToken()
    {
        StringBuilder scpt = new StringBuilder();
        scpt.Append("function Get-AccessToken \n");
        scpt.Append("{ \n");
        scpt.Append("   [uri]$requestUri = $uri.Scheme + '://' + $uri.Host + '/token' \n");
        scpt.Append("\n");
        scpt.Append("   $basicAuth = [System.Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes(\"${Secretkey}:${Passphrase}\")) \n");
        scpt.Append("\n");
        scpt.Append("   $headers = @{ \n");
        scpt.Append("       Authorization = \"Basic ${basicAuth}\" \n");
        scpt.Append("   }");
        scpt.Append("\n");
        scpt.Append("   $body = 'grant_type=client_credentials&scope=scopename1%20scopename2%20scopenamex' \n");
        scpt.Append("\n");
        scpt.Append("$paramInvokeRestMethod = @{ \n");
        scpt.Append("   Method		    = 'Post' \n");
        scpt.Append("   Uri			    = $requestUri \n");
        scpt.Append("   Headers		    = $headers \n");
        scpt.Append("   Body		    = $body \n");
        scpt.Append("   ContentType	    = 'application/x-www-form-urlencoded' \n");
        scpt.Append("   UseBasicParsing = $true \n");
        scpt.Append("} \n");
        scpt.Append("\n");
        scpt.Append("   $access = Invoke-RestMethod @paramInvokeRestMethod \n");
        scpt.Append("\n");
        scpt.Append("   if ($access.access_token) \n");
        scpt.Append("   { \n");
        scpt.Append("       return $access \n");
        scpt.Append("   } \n");
        scpt.Append("   else \n");
        scpt.Append("   { \n");
        scpt.Append("       throw \"No access token returned\" \n");
        scpt.Append("   } \n");
        scpt.Append("} \n");

        return scpt.ToString();
    }


    public string PSAcademicSessions()
    {
        StringBuilder scpt = new StringBuilder();
        scpt.Append("[uri]$requestUri = $uri.Scheme + '://' + $uri.Host + '/ims/oneroster/v1p1/enrollments?limit=10000' \n");
        scpt.Append("\n");
        scpt.Append("$access = Get-AccessToken \n");
        scpt.Append("$bearerToken = $access.access_token \n");
        scpt.Append("\n");
        scpt.Append("$headers = @{ \n");
        scpt.Append("   Authorization		   = \"Bearer ${bearerToken}\" \n");
        scpt.Append("} \n");
        scpt.Append("\n");
        scpt.Append("$paramInvokeRestMethod = @{ \n");
        scpt.Append("   Method		    = 'Get' \n");
        scpt.Append("   Uri			    = $requestUri \n");
        scpt.Append("   Headers		    = $headers \n");
        scpt.Append("   UseBasicParsing = $true \n");
        scpt.Append("} \n");
        scpt.Append("\n");
        scpt.Append("$response = Invoke-RestMethod @paramInvokeRestMethod \n");
        scpt.Append("$response.enrollments | ConvertTo-Json -Depth 16 \n");
        scpt.Append("\n");
        scpt.Append("\n");
        scpt.Append("application/x-www-form-urlencoded \n");

        return scpt.ToString();
    }




}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 ClientID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool ClientID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String SourcedId
    {
        set
        {
            this[1] = value;
        }
    }
    public bool SourcedId_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Status
    {
        set
        {
            this[2] = value;
        }
    }
    public bool Status_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String DateLastModified
    {
        set
        {
            this[3] = value;
        }
    }
    public bool DateLastModified_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ClassSourcedId
    {
        set
        {
            this[4] = value;
        }
    }
    public bool ClassSourcedId_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String SchoolSourcedId
    {
        set
        {
            this[5] = value;
        }
    }
    public bool SchoolSourcedId_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String UserSourcedId
    {
        set
        {
            this[6] = value;
        }
    }
    public bool UserSourcedId_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Role
    {
        set
        {
            this[7] = value;
        }
    }
    public bool Role_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Primary
    {
        set
        {
            this[8] = value;
        }
    }
    public bool Primary_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String BeginDate
    {
        set
        {
            this[9] = value;
        }
    }
    public bool BeginDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String EndDate
    {
        set
        {
            this[10] = value;
        }
    }
    public bool EndDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_1dd90df97d6f4936bc9e84fdfb232ca5.Properties.Settings.get_Default():SC_1dd90df97d6f4936bc9e84fdfb232ca5.Properties.Sett" +
    "ings")]

namespace SC_1dd90df97d6f4936bc9e84fdfb232ca5.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 PSDB
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"PSDB").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String ClientKey
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientKey"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Int32 ClientOneRosterID
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["ClientOneRosterID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientSecret
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientSecret"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientServer
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientServer"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Project]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_1dd90df97d6f4936bc9e84fdfb232ca5</msb:CodeName>
		<msb:DisplayName>SC_1dd90df97d6f4936bc9e84fdfb232ca5</msb:DisplayName>
		<msb:ProjectId>{92DBE8FA-E3AA-42B5-8BAA-29BF7D0D1F9D}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_1dd90df97d6f4936bc9e84fdfb232ca5.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_1dd90df97d6f4936bc9e84fdfb232ca5")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_1dd90df97d6f4936bc9e84fdfb232ca5")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_1dd90df97d6f4936bc9e84fdfb232ca5.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_1dd90df97d6f4936bc9e84fdfb232ca5.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_1dd90df97d6f4936bc9e84fdfb232ca5.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_1dd90df97d6f4936bc9e84fdfb232ca5.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_1dd90df97d6f4936bc9e84fdfb232ca5.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Stores the binary representation of the component"
                          isArray="true"
                          name="BinaryCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="2">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_1dd90df97d6f4936bc9e84fdfb232ca5.dll]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAFzy9F8AAAAAAAAAAOAAIiALATAAAEoAAAAIAAAAAAAAkmgA
AAAgAAAAgAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAADAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAEBoAABPAAAAAIAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAKAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAmEgAAAAgAAAASgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAgAAAAAYAAABMAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAKAAAAACAAAAUgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAB0
aAAAAAAAAEgAAAACAAUAoC4AAOg4AAABAAAAAAAAAIhnAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBUAAAoqHgIoFgAACioyAigEAAAGbxcAAAoqAAAAEzAC
ADcAAAABAAAREgACfSAAAAQSACgYAAAKfR8AAAQSABV9HgAABBIAfB8AAAQSACgBAAArEgB8HwAA
BCgaAAAKKgATMAIAPwAAAAIAABESAAJ9JQAABBIAA30kAAAEEgAoGwAACn0jAAAEEgAVfSIAAAQS
AHwjAAAEEgAoAgAAKxIAfCMAAAQoHQAACioAGzAFAEQAAAADAAARfh4AAAoKKB8AAAoCAwQFKAkA
AAYLJQdvIAAACiZvIQAAChZvIgAACm8jAAAKbyQAAAoK3g1vJQAACm8kAAAKCt4ABioBEAAAAAAG
AC81AA0TAAABRigmAAAKA28nAAAKKCgAAAoqAAAbMAUA9wAAAAQAABECewUAAARvLgAABm8pAAAK
JgJ7BQAABG8uAAAGbykAAApzKgAACgoGbysAAAoXLgYGbywAAApyAQAAcAZzLQAACiUaby4AAAol
by8AAApyFQAAcB5vMAAACgJ7BgAABG8xAAAGjDYAAAFvMQAACiVvLwAACnIrAABwHm8wAAAKA4w2
AAABbzEAAAolby8AAApyOQAAcB8WHzJvMgAACn4DAAAEbzEAAAolby8AAApyTQAAcB8WH2RvMgAA
CgRvMQAACiVvLwAACnJZAABwHxYg6AMAAG8yAAAKBW8xAAAKbzMAAAom3goGLAYGbzQAAArc3gMm
/hoqAAEcAAACACcAwOcACgAAAAAAAAAA8/MAAxIAAAETMAUAwgAAAAMAABFzNQAACiVyawAAcG82
AAAKJiVyewAAcG82AAAKJiVygwAAcG82AAAKJiVyvwAAcANy3wAAcCg3AAAKbzYAAAomJXLrAABw
bzYAAAomJXIjAQBwBHJVAQBwKDcAAApvNgAACiYlcl8BAHBvNgAACiYlcpsBAHAFcs8BAHAoNwAA
Cm82AAAKJiVy1wEAcG82AAAKJiVy3wEAcG82AAAKJgIoCgAABgoCKAsAAAYLJQZvNgAACiYlB282
AAAKJm8kAAAKKgAAEzADAIsBAAAAAAAAczUAAAolcuMBAHBvNgAACiYlchkCAHBvNgAACiYlciEC
AHBvNgAACiYlct8BAHBvNgAACiYlcqgCAHBvNgAACiYlct8BAHBvNgAACiYlcpkDAHBvNgAACiYl
cr8DAHBvNgAACiYlchsEAHBvNgAACiYlct8BAHBvNgAACiYlciUEAHBvNgAACiYlct8BAHBvNgAA
CiYlctYEAHBvNgAACiYlchIFAHBvNgAACiYlckYFAHBvNgAACiYlcoAFAHBvNgAACiYlcroFAHBv
NgAACiYlcugFAHBvNgAACiYlcl4GAHBvNgAACiYlcpgGAHBvNgAACiYlct8BAHBvNgAACiYlcqAG
AHBvNgAACiYlct8BAHBvNgAACiYlchAHAHBvNgAACiYlck4HAHBvNgAACiYlclwHAHBvNgAACiYl
cowHAHBvNgAACiYlcpoHAHBvNgAACiYlck4HAHBvNgAACiYlcq4HAHBvNgAACiYlcowHAHBvNgAA
CiYlcpgGAHBvNgAACiZvJAAACioAEzADAAcBAAAAAAAAczUAAAolcgIIAHBvNgAACiYlct8BAHBv
NgAACiYlcs0IAHBvNgAACiYlcgUJAHBvNgAACiYlct8BAHBvNgAACiYlclEJAHBvNgAACiYlcnEJ
AHBvNgAACiYlcpgGAHBvNgAACiYlct8BAHBvNgAACiYlctYEAHBvNgAACiYlctMJAHBvNgAACiYl
ckYFAHBvNgAACiYlcoAFAHBvNgAACiYlcl4GAHBvNgAACiYlcpgGAHBvNgAACiYlct8BAHBvNgAA
CiYlcgUKAHBvNgAACiYlcnMKAHBvNgAACiYlct8BAHBvNgAACiYlct8BAHBvNgAACiYlctkKAHBv
NgAACiZvJAAACioeAigoAAAGKn5yIQsAcIABAAAEcl8LAHCAAgAABHJrCwBwgAMAAAQqKgIDBAUo
OAAACio6AhYDjDYAAAEoOQAACipaAywIAhYoOgAACipygwsAcHM7AAAKeiYCFwMoOQAACipaAywI
AhcoOgAACipygwsAcHM7AAAKeiYCGAMoOQAACipaAywIAhgoOgAACipygwsAcHM7AAAKeiYCGQMo
OQAACipaAywIAhkoOgAACipygwsAcHM7AAAKeiYCGgMoOQAACipaAywIAhooOgAACipygwsAcHM7
AAAKeiYCGwMoOQAACipaAywIAhsoOgAACipygwsAcHM7AAAKeiYCHAMoOQAACipaAywIAhwoOgAA
CipygwsAcHM7AAAKeiYCHQMoOQAACipaAywIAh0oOgAACipygwsAcHM7AAAKeiYCHgMoOQAACipa
AywIAh4oOgAACipygwsAcHM7AAAKeioCHwkDKDkAAAoqXgMsCQIfCSg6AAAKKnKDCwBwczsAAAp6
KgIfCgMoOQAACipeAywJAh8KKDoAAAoqcoMLAHBzOwAACnoeAig8AAAKKh4CKD0AAAoqHgIoPgAA
Cip+Aig/AAAKAgJzLQAABn0FAAAEAgJzLwAABn0GAAAEKgYqbgJ7BwAABCwSAnsHAAAEbyYAAAYC
FH0HAAAEKhMwBQBJAAAABQAAERYKKy4EBpQOBHIgDABwKEAAAAozGQIFBpoCBAaUKEEAAAoOBHMO
AAAGfQcAAAQGF1gKBgMyzgJvLAAABgJvKQAABgIoKgAABio6AihCAAAKAgN9CAAABCqCAnsIAAAE
b0MAAApvRAAACnIyDABwb0UAAApvRgAACio6AihCAAAKAgN9CQAABCqWAnsJAAAEb0cAAApyPAwA
cG9IAAAKKEkAAApvSgAACnQoAAABKpYCewkAAARvRwAACnJQDABwb0gAAAooSQAACm9KAAAKpTYA
AAEqlgJ7CQAABG9HAAAKcnQMAHBvSAAACihJAAAKb0oAAAp0KAAAASqWAnsJAAAEb0cAAApyjgwA
cG9IAAAKKEkAAApvSgAACnQoAAABKh4CKEIAAAoqrn4KAAAELR5yqAwAcNAHAAACKEsAAApvTAAA
CnNNAAAKgAoAAAR+CgAABCoafgsAAAQqHgKACwAABCoafgwAAAQqHgIoTgAACiouczkAAAaADAAA
BCoAABMwAwA4AAAABgAAEdAEAAAbKEsAAApzTwAACnNQAAAKCgYCjAQAABtvUQAACihSAAAKBm9T
AAAKb1QAAAoGb1UAAAoqEzADACwAAAAGAAAR0AQAABsoSwAACnNPAAAKKFIAAAoCbycAAApzVgAA
CgoGb1cAAAqlBAAAGyoeAnsNAAAEKiICA30NAAAEKh4Cew4AAAQqIgIDfQ4AAAQqHgJ7DwAABCoi
AgN9DwAABCoeAnsQAAAEKiICA30QAAAEKh4CexEAAAQqIgIDfREAAAQqHgJ7EgAABCoiAgN9EgAA
BCoeAnsTAAAEKiICA30TAAAEKh4CexQAAAQqIgIDfRQAAAQqHgJ7FQAABCoiAgN9FQAABCoeAnsW
AAAEKiICA30WAAAEKh4CexcAAAQqIgIDfRcAAAQqHgJ7GAAABCoiAgN9GAAABCoeAnsZAAAEKiIC
A30ZAAAEKh4CexoAAAQqIgIDfRoAAAQqHgJ7GwAABCoiAgN9GwAABCoeAnscAAAEKiICA30cAAAE
Kh4Cex0AAAQqIgIDfR0AAAQqAAAAGzAEADIBAAAHAAARAnseAAAECgJ7IAAABAsGJgAGOasAAAAH
ewYAAARvMwAABg0XKFgAAAogAAwAAChZAAAKB3sGAAAEbzAAAAZvJAAAChMEB3sGAAAEbzIAAAYT
BQcHewYAAARvMQAABn0EAAAEBwkRBBEFKAYAAAYTBnNaAAAKJSD///9/b1sAAAoRBm8DAAArEwcH
EQcoBQAABm9dAAAKEwgSCCheAAAKLT4CFiUKfR4AAAQCEQh9IQAABAJ8HwAABBIIAigEAAAr3m8C
eyEAAAQTCAJ8IQAABP4VBgAAGwIVJQp9HgAABBIIKGAAAAomFgzeMhMJBxdyGg0AcBEJb2EAAAoo
CAAABhYM3hkTCgIf/n0eAAAEAnwfAAAEEQooYgAACt4UAh/+fR4AAAQCfB8AAAQIKGMAAAoqAAAB
HAAAAAARANrrABkTAAABAAAOAPYEARkTAAABNgJ8HwAABAMoZAAACioAABswBACqAQAACAAAEQJ7
JQAABAoWDAJ7JAAABA0WEwQ4IAEAAAkRBJoTBQZ7BwAABG8lAAAGBnsHAAAEBnsGAAAEbzEAAAZv
DwAABhEFbz4AAAZvZQAACh8kMhwGewcAAAQRBW8+AAAGFh8kb2YAAApvEQAABisSBnsHAAAEEQVv
PgAABm8RAAAGBnsHAAAEEQVvQAAABm8TAAAGBnsHAAAEEQVvQgAABm8VAAAGBnsHAAAEEQVvSgAA
Bm9VAAAGbxcAAAYGewcAAAQRBW9MAAAGb1UAAAZvGQAABgZ7BwAABBEFb0gAAAZvVQAABm8bAAAG
BnsHAAAEEQVvRAAABm8dAAAGBnsHAAAEEQVvRgAABm8fAAAGBnsHAAAEEQVvTgAABm8hAAAGBnsH
AAAEEQVvUAAABm8jAAAGCBdYDBEEF1gTBBEECY5pP9b+//8GFnJADQBwEgIoZwAACihoAAAKEgIo
ZwAACigIAAAGFAveMBMGBhdyfg0AcBEGb2EAAAooCAAABv4aEwcCH/59IgAABAJ8IwAABBEHKGkA
AAreFAIf/n0iAAAEAnwjAAAEByhqAAAKKgAAQTQAAAAAAAAJAAAAXAEAAGUBAAAXAAAAEwAAAQAA
AAAHAAAAdQEAAHwBAAAZAAAAEwAAATYCfCMAAAQDKGsAAAoqAABCU0pCAQABAAAAAAAMAAAAdjQu
MC4zMDMxOQAAAAAFAGwAAACAEwAAI34AAOwTAAAYEwAAI1N0cmluZ3MAAAAABCcAAJwNAAAjVVMA
oDQAABAAAAAjR1VJRAAAALA0AAA4BAAAI0Jsb2IAAAAAAAAAAgAAAVcXogsJDwAAAPoBMwAWAAAB
AAAASQAAAA8AAAAlAAAAZwAAAEEAAAACAAAAawAAAEoAAAAIAAAACQAAAC8AAABBAAAABAAAAAYA
AAABAAAACwAAAAEAAAAHAAAAAgAAAAQAAAAAALIJAQAAAAAABgDABwoPBgBUCAoPBgDZBvcODwB+
DwAABgAGByoMBgCjByoMBgCEByoMBgA7CCoMBgDgByoMBgD5ByoMBgA4ByoMBgBTB+MICgAUCBsF
BgCOBSsLBgAdBwoPBgCvABMQDgCQBgoPBgAZESsLBgC+DCsLEgCADJQRBgAMC6UBBgChBgoPBgBo
BSsLBgDrBAoPBgDcAAoPBgDDAAoPBgBsB/cOCgCoDRsFFgCZDRsFCgARDRsFCgDTERsFGgBmAP4N
BgC8BvcOBgC5DSoPBgD9DNgLHgBgBpwJHgDtBpwJHgDlBcMLBgB4CRMQBgBGCSsLIgDaCaYLBgC2
AH0JIgDoEKYLBgDaCGsSBgAtEisLEgBzDMgMEgB1Br4BEgBQBJQREgBGBMgMEgBcBb4BEgBcDJQR
EgBtDpQREgBOBb4BBgDqACsLEgBhDsgMBgCOBCsLBgBwDWsSBgCODCsLJgABACYOJgAqACYOJgBN
ACYOGgB/AP4NGgAaAP4NfwCLEgAAGgCQAP4NBgCaBCsLBgDgEioMKgCWDtsMKgCxDu0LBgASC6UB
HgDfDSMRHgByBSMRLgDFDgoMAAAAAFEBAAAAAAEAAQABABAAkQsAABAAAQABAAEAEACLDQAAcQAF
AA4AAQAQALURAAB9AAUAKAABABAAUxAAAEkACAAtAAEAEADIDwAASQAJAC8AAAAQADEPjQ9JAAoA
NAAAARAAABCND5kADAA4AAIAEADzDQAASQANADsAAgAQAIoQAABJAA0APgACABAALhEAAEkAFwBT
AAIAEABACwAASQAaAFoAAgAQAK8IAABJAB0AYQADARAAHwEAAF0AHgBkAAMBEABBAQAAXQAiAGYA
EQCcC20AEQCcAW0AEQCHBW0AAQCqEToCBgBTED0CBgDID0ECBgCLDUUCAQDDEUkCAQDDEUkCEQAy
C00CEQDVBVICEQBiBFcCAQCwAm0AAQD+A20AAQDLAm0AAQDtAm0AAQAtBG0AAQDRA1sCAQDnA1sC
AQB/A1sCAQBOA20AAQA1A20AAQBpA20AAQCwAm0AAQADA20AAQCXA20AAQAZA20AAQC1A20AAQAW
BG0ABgCFBjoCBgB+DV8CBgAJEGYCAQCoAGoCBgCFBjoCBgB+DXECBgAgEXgCBgAJEGYCUCAAAAAA
xgByCAYAAQBYIAAAAADGAH0IBgABAGAgAAAAAMYAzRAGAAEAcCAAAAAAhgCWEH0CAQC0IAAAAACB
AK8BhQIBAAAhAAAAAIEAIQmQAgMAYCEAAAAAhgDwAJcCBgB0IQAAAACGAP0FnAIHAJQiAAAAAIYA
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
4A4GAAkB4A4GACkB4A4nAPkAcggGAPkAfQgGADkBbxEGAAwATwY5AAwAJxJCAAwAdAlPABQATwY5
ABQAJxJCABQAdAlPAEEBERNtAEkBTwZwAEkBABJ2AEkBhwR9ABwAGQuRAFkB/BCXAJEAOgmbAJkA
qAyfAGEBkgGkAGEB0g+qAGkB/QiwAAEBDAmbAKEA4A4QAHEBVga7AHEBbgsGAIEB4A7BAIkBWAXI
AIEBZxDPAJkBRwLVALkBiQjfAJkBRwLkAIkBARPvAMEBEwYGAMkB4A4GAMkBWwTzAEEB4RD6AOEA
4A4BAeEAIgsLAeEA1QoBANEB4A4QAOEAuxIGAOEAYBEGAOEAYxERAfkA4A4GAPkAhgEZAfkA7w8g
AZEA4A4GAPkAygEmAdkBPAwsAeEB0AQyAekByQ05AfkAvA8/AfEBGQtFAfkAphJMAfkBdxJSAXEA
rARZAXEA3BJhAREB4A5nATEB4A4GACEC4A4VAKkA4A4GACkCFBF3AWEBOAGkAKkAwhJ/AWEBQwmE
ATECDQYGAKkA4A6KASkC8RCQATkCmQiuATkC3QqzAUkC4A4GAEkCYgkBAEkCvAi6ASwAeg7NATQA
oAIRAQwAiQLcATQAgBHxAZkAewSbAAwAuwz2AQwAihH8AQwA/gQhAEEBVwnvAEEBTQkTArEBOgmb
AEEB4RAZAhQAuwz2ARQAihH8ARQA/gQhACQAcwAqBC4ACwAXAy4AEwAgAy4AGwA/Ay4AIwBIAy4A
KwBxAy4AMwBxAy4AOwBxAy4AQwBIAy4ASwB3Ay4AUwBxAy4AWwCOA0MAYwAlBIAAawDcA6AAawAF
BOMAmwAlBIEBewAlBKEBewAlBMEBewAlBMMBewAlBOEBewAlBOMBewAlBAECewAlBCECewAlBEEC
ewAlBGECewAlBIECewAlBKECewAlBMECewAlBOECewAlBAEDewAlBCEDewAlBEEDewAlBGEDewAl
BIEDewAlBIkDowA/A6EDewAlBKkDowA/A8AHewAlBOAHewAlBAAIewAlBCAIewAlBEAIewAlBGAI
ewAlBIAIewAlBKAIewAlBMAIewAlBOAIewAlBAAJewAlBCAJewAlBEAJewAlBGAJewAlBIAJewAl
BKAJewAlBMAJewAlBOAJewAlBAAKewAlBCAKewAlBGAKewAlBIAKewAlBKAKewAlBMAKewAlBOAK
ewAlBAALewAlBEALewAlBGALewAlBIALewAlBKALewAlBMALewAlBOALewAlBCAMewAlBEAMewAl
BKAMkwAlBOAMkwAlBC4AWABoALYAFQFvAZcBAgIDAAEABQAXAAYAGAAHABwACAAeAAoAHwALACkA
DAAsAA0ALwAAAH0B7wIAAOkJ8wIAADQC9wIAAEsK8wIAAMYQ9wIAALQK8wIAAHgC9wIAAGAK8wIA
AC8C9wIAAEYK8wIAAAkC9wIAABIK8wIAAB0C9wIAAC0K8wIAAMsE9wIAAHwK8wIAAPkS9wIAAMYK
8wIAAEUG9wIAAJ8K8wIAACsG9wIAAIwK8wIAAF4B+wIAAM4S9wIAAGcB7wIAAD8R9wIAAIkO9wIA
ALkNAQMAAN0FBwMAAHgRDQMAADQC9wIAAMYQ9wIAAHgC9wIAAMsE9wIAAPkS9wIAAFwOEgMAAIQQ
EgMAAAELEgMAAEUG9wIAACsG9wIAANUI9wIAADQC9wIAAI4F9wIAAGEL9wIAAKYF9wIAAIYL9wIA
APER9wIBAA8AAwABABAABQABABEABwABABIACQABABMACwABABQADQABABUADwABABYAEQABABcA
EwABABgAFQABABkAFwABABoAGQABABsAGwABABwAHQABAB0AHwABAB4AIQABAB8AIwABACAAJQAB
ACEAJwABACIAKQABACMAKwABACQALQACAC4ALwACADAAMQACADEAMwACADIANQACADMANwACADUA
OQACADYAOwABADcAOwACADgAPQACAD4APwABAD8APwACAEAAQQABAEEAQQACAEIAQwABAEMAQwAC
AEQARQABAEUARQACAEYARwABAEcARwACAEgASQABAEkASQACAEoASwABAEsASwACAEwATQABAE0A
TQACAE4ATwABAE8ATwACAFAAUQABAFEAUQACAFMAUwABAFQAUwACAFUAVQABAFYAVQACAFcAVwAB
AFgAVwACAFoAWQABAFsAWQACAFwAWwABAF0AWwACAF4AXQABAF8AXQACAGEAXwABAGIAXwAOAMgA
IQAOAMoAIwAPAMwAIQAPAM4AIwAzAF0AiAB0AccB1gEEgAAAAQAAAPsd/ngAAAAAAAD7AAAABAAA
AAAAAAAAAAAAHwLgAQAAAAAMAAAAAAAAAAAAAAAoAgoSAAAAAAQAAAAAAAAAAAAAAB8CsQUAAAAA
BAAAAAAAAAAAAAAAHwK+AQAAAAAMAAAAAAAAAAAAAAAoAjUSAAAAAAwAAAAAAAAAAAAAACgCKQ0A
AAAABAAAAAAAAAAAAAAAHwIrCwAAAAADAAAAAAAAAAAAAAAxAqYLAAAAAAwAAAAAAAAAAAAAACgC
TA0AAAAABAAAAAAAAAAAAAAAHwLtCwAAAAAEAAAAAAAAAAAAAAAxAioQAAAAAAAAAAABAAAAOw8A
AAkAAgAKAAIACwACAAwAAgANAAIADgACAA8AAgAAAAAAdwC3AQAAAAB5ALcBMwBKADkAYwC5AMEB
vwDnAQAAAAAASURUU0NvbXBvbmVudE1ldGFEYXRhMTAwAElEVFNWYXJpYWJsZTEwMABJRFRTUnVu
dGltZUNvbm5lY3Rpb25Db2xsZWN0aW9uMTAwAElEVFNSdW50aW1lQ29ubmVjdGlvbjEwMABJRFRT
Q29ubmVjdGlvbk1hbmFnZXIxMDAASURUU1ZhcmlhYmxlczEwMABJRFRTRXZhbHVhdG9yQ29udGV4
dDEwMAA8PnVfXzEAVGFza2AxAENvbGxlY3Rpb25gMQBBc3luY1Rhc2tNZXRob2RCdWlsZGVyYDEA
VGFza0F3YWl0ZXJgMQBJbnQzMgBFbmNvZGVUbzY0AFNDXzFkZDkwZGY5N2Q2ZjQ5MzZiYzllODRm
ZGZiMjMyY2E1ADxQcm9jZXNzRW5yb2xtbWVudHM+ZF9fNwBnZXRfVVRGOAA8R2V0Um93c0RUPmRf
XzgAPE1vZHVsZT4AZ2V0X1BTREIAZ2V0X0NsaWVudE9uZVJvc3RlcklEAHNldF9DbGllbnRJRABH
ZXRPdXRwdXRJRABnZXRfQVNDSUkAdG9rZW5VUkkAU3lzdGVtLklPAEdldFJvd3NEVABBcmVhAFN5
c3RlbS5EYXRhAGdldF9Db21wb25lbnRNZXRhRGF0YQBtc2NvcmxpYgBnZXRfU291cmNlZElkAHNl
dF9Tb3VyY2VkSWQAc2V0X1NjaG9vbFNvdXJjZWRJZABzZXRfVXNlclNvdXJjZWRJZABzZXRfQ2xh
c3NTb3VyY2VkSWQAY2xpZW50SWQAQWRkAE1hcmtPdXRwdXRzRmluaXNoZWQAZ2V0X0RhdGVMYXN0
TW9kaWZpZWQAc2V0X0RhdGVMYXN0TW9kaWZpZWQAQXdhaXRVbnNhZmVPbkNvbXBsZXRlZABnZXRf
SXNDb21wbGV0ZWQAPFNvdXJjZWRJZD5rX19CYWNraW5nRmllbGQAPERhdGVMYXN0TW9kaWZpZWQ+
a19fQmFja2luZ0ZpZWxkADxSb2xlPmtfX0JhY2tpbmdGaWVsZAA8VHlwZT5rX19CYWNraW5nRmll
bGQAPHRva2VuX3R5cGU+a19fQmFja2luZ0ZpZWxkADxFbmREYXRlPmtfX0JhY2tpbmdGaWVsZAA8
QmVnaW5EYXRlPmtfX0JhY2tpbmdGaWVsZAA8SHJlZj5rX19CYWNraW5nRmllbGQAPFNjaG9vbD5r
X19CYWNraW5nRmllbGQAPGFjY2Vzc190b2tlbj5rX19CYWNraW5nRmllbGQAPGV4cGlyZXNfaW4+
a19fQmFja2luZ0ZpZWxkADxVc2VyPmtfX0JhY2tpbmdGaWVsZAA8Q2xhc3M+a19fQmFja2luZ0Zp
ZWxkADxTdGF0dXM+a19fQmFja2luZ0ZpZWxkADxjb3VudD5rX19CYWNraW5nRmllbGQAPFByaW1h
cnk+a19fQmFja2luZ0ZpZWxkAERiQ29tbWFuZABTcWxDb21tYW5kAEFwcGVuZABkZWZhdWx0SW5z
dGFuY2UAdG9FbmNvZGUAZ2V0X01lc3NhZ2UASW52b2tlAElEaXNwb3NhYmxlAFJ1bnRpbWVUeXBl
SGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAGdldF9Sb2xlAHNldF9Sb2xlAEdldFJ1bnRpbWVDb25u
ZWN0aW9uQnlOYW1lAElBc3luY1N0YXRlTWFjaGluZQBTZXRTdGF0ZU1hY2hpbmUAc3RhdGVNYWNo
aW5lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAGdldF9UeXBlAHNldF9UeXBlAFNx
bERiVHlwZQBzZXRfQ29tbWFuZFR5cGUAVmFsdWVUeXBlAFNlY3VyaXR5UHJvdG9jb2xUeXBlAHBy
b2Nlc3NUeXBlAGdldF90b2tlbl90eXBlAHNldF90b2tlbl90eXBlAFN5c3RlbS5Db3JlAGdldF9D
dWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBBcHBsaWNhdGlvblNldHRpbmdzQmFz
ZQBXcml0ZVRvRGF0YWJhc2UAQ2xvc2UARGlzcG9zZQBnZXRfRW5kRGF0ZQBzZXRfRW5kRGF0ZQBn
ZXRfQmVnaW5EYXRlAHNldF9CZWdpbkRhdGUAQ3JlYXRlAGdldF9TdGF0ZQBFZGl0b3JCcm93c2Fi
bGVTdGF0ZQBDb25uZWN0aW9uU3RhdGUAPD4xX19zdGF0ZQBEeW5hbWljQXR0cmlidXRlAENvbXBp
bGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdn
YWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJp
YnV0ZQBBc3luY1N0YXRlTWFjaGluZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0
ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUARGVidWdnZXJIaWRkZW5BdHRyaWJ1dGUAQXNzZW1i
bHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29t
cGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNz
ZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRy
aWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmli
dXRlAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAc2V0X1ZhbHVlAHZhbHVlAHNldF9FeHBlY3QxMDBD
b250aW51ZQBGaWxlU2l6ZQBKc29uRGVzZXJpYWxpemUAZ2V0X0hyZWYAc2V0X0hyZWYARW5jb2Rp
bmcAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb0Jhc2U2NFN0cmluZwBnZXRfQ29ubmVjdGlv
blN0cmluZwBHZXRKc29uU3RyaW5nAGpzb25TdHJpbmcAVG9TdHJpbmcAR2V0U3RyaW5nAFN1YnN0
cmluZwBnZXRfTGVuZ3RoAHNldF9NYXhKc29uTGVuZ3RoAGdldF9UYXNrAFN5c3RlbS5Db2xsZWN0
aW9ucy5PYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0NfMWRkOTBkZjk3ZDZmNDkz
NmJjOWU4NGZkZmIyMzJjYTUuZGxsAFBvd2VyU2hlbGwAc2V0X0NsaWVudElEX0lzTnVsbABzZXRf
U291cmNlZElkX0lzTnVsbABzZXRfU2Nob29sU291cmNlZElkX0lzTnVsbABzZXRfVXNlclNvdXJj
ZWRJZF9Jc051bGwAc2V0X0NsYXNzU291cmNlZElkX0lzTnVsbABzZXRfRGF0ZUxhc3RNb2RpZmll
ZF9Jc051bGwAc2V0X1JvbGVfSXNOdWxsAHNldF9FbmREYXRlX0lzTnVsbABzZXRfQmVnaW5EYXRl
X0lzTnVsbABzZXRfU3RhdHVzX0lzTnVsbABzZXRfUHJpbWFyeV9Jc051bGwAU2V0TnVsbABzZXRf
U2VjdXJpdHlQcm90b2NvbABnZXRfU2Nob29sAHNldF9TY2hvb2wAdXJsAE1lbW9yeVN0cmVhbQBn
ZXRfSXRlbQBzZXRfSXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4AUFNBY2Nlc3NUb2tlbgBnZXRfYWNj
ZXNzX3Rva2VuAHNldF9hY2Nlc3NfdG9rZW4AT3BlbgBnZXRfZXhwaXJlc19pbgBzZXRfZXhwaXJl
c19pbgBTY3JpcHRNYWluAHBMb2NhdGlvbgBTeXN0ZW0uTWFuYWdlbWVudC5BdXRvbWF0aW9uAFN5
c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SdW50aW1lLlNl
cmlhbGl6YXRpb24AU3lzdGVtLldlYi5TY3JpcHQuU2VyaWFsaXphdGlvbgBTeXN0ZW0uUmVmbGVj
dGlvbgBnZXRfUnVudGltZUNvbm5lY3Rpb25Db2xsZWN0aW9uAFNxbFBhcmFtZXRlckNvbGxlY3Rp
b24ARGJDb25uZWN0aW9uAFNxbENvbm5lY3Rpb24ASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBn
ZXRfSW5uZXJFeGNlcHRpb24AU2V0RXhjZXB0aW9uAFN5c3RlbS5EYXRhLkNvbW1vbgBTeXN0ZW0u
UnVudGltZS5TZXJpYWxpemF0aW9uLkpzb24AQ3VsdHVyZUluZm8ATG9nSW5mbwBPdXRwdXROYW1l
TWFwAE91dHB1dE1hcABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1J1bnRpbWVXcmFwAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuRFRTUGlwZWxpbmVXcmFwAFN0cmluZ0J1aWxkZXIAPD50X19idWlsZGVyAE91
dHB1dDBCdWZmZXIAUGlwZWxpbmVCdWZmZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFn
ZXIAZ2V0X0Nvbm5lY3Rpb25NYW5hZ2VyAFNlcnZpY2VQb2ludE1hbmFnZXIASnNvbkhlbHBlcgBN
aWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lLldyYXBwZXIATWljcm9zb2Z0LlNxbFNlcnZl
ci5EdHMuUGlwZWxpbmUuV3JhcHBlcgBnZXRfVXNlcgBzZXRfVXNlcgBEYlBhcmFtZXRlcgBTcWxQ
YXJhbWV0ZXIAR2V0QXdhaXRlcgBnZXRfQ2xpZW50U2VydmVyAERhdGFDb250cmFjdEpzb25TZXJp
YWxpemVyAFhtbE9iamVjdFNlcmlhbGl6ZXIASmF2YVNjcmlwdFNlcmlhbGl6ZXIARXJyb3IALmN0
b3IALmNjdG9yAE91dHB1dElEcwBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29t
cGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDXzFkZDkwZGY5N2Q2ZjQ5MzZiYzllODRm
ZGZiMjMyY2E1LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBT
Q18xZGQ5MGRmOTdkNmY0OTM2YmM5ZTg0ZmRmYjIzMmNhNS5Qcm9wZXJ0aWVzAGdldF9SZWFkT25s
eVZhcmlhYmxlcwBHZXRCeXRlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbkluZGV4ZXMA
U2V0dGluZ3MAPD40X190aGlzAFN5c3RlbS5UaHJlYWRpbmcuVGFza3MAU3lzdGVtLldlYi5FeHRl
bnNpb25zAFBTQWNhZGVtaWNTZXNzaW9ucwBDb25uZWN0aW9ucwBCdWZmZXJzAGdldF9QYXJhbWV0
ZXJzAGdldF9DbGFzcwBzZXRfQ2xhc3MARW5yb2xsbWVudHMAUHJvY2Vzc0Vucm9sbW1lbnRzAEZp
bmlzaE91dHB1dHMAZ2V0X1N0YXR1cwBzZXRfU3RhdHVzAENyZWF0ZU5ld091dHB1dFJvd3MAQ29u
Y2F0AFBTT2JqZWN0AFJlYWRPYmplY3QAZ2V0X0ltbWVkaWF0ZUJhc2VPYmplY3QAV3JpdGVPYmpl
Y3QAZHQAU3lzdGVtLk5ldABTb3VyY2VkSWRTZXQAZ2V0X0NsaWVudFNlY3JldABjbGllbnRTZWNy
ZXQAc2VjcmV0AFNldEVuZE9mUm93c2V0AFdhaXQAZ2V0X0RlZmF1bHQAR2V0UmVzdWx0AFNldFJl
c3VsdABTeXN0ZW0uRGF0YS5TcWxDbGllbnQAY3VyckNsaWVudABVc2VyQ29tcG9uZW50AFBhcmVu
dENvbXBvbmVudABTY3JpcHRDb21wb25lbnQAZ2V0X2NvdW50AHNldF9jb3VudABQU1NjcmlwdABB
ZGRTY3JpcHQATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABTdGFydABDb252ZXJ0AE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AFByaW1lT3V0cHV0AE1vdmVOZXh0AFN5c3RlbS5U
ZXh0AEdldFZhbHVlV2l0aENvbnRleHQAU2NyaXB0Q29tcG9uZW50RXZhbENvbnRleHQAZ2V0X0V2
YWx1YXRvckNvbnRleHQAQWRkUm93AFRvQXJyYXkAZ2V0X0NsaWVudEtleQBrZXkAZ2V0X0Fzc2Vt
Ymx5AGdldF9QcmltYXJ5AHNldF9QcmltYXJ5AEV4ZWN1dGVOb25RdWVyeQBFbXB0eQAAABNzAHAA
TABvAGcASQBuAGYAbwAAFUAAQwBsAGkAZQBuAHQAVQBJAEQAAA1AAEUAcgByAG8AcgAAE0AARgBp
AGwAZQBUAHkAcABlAAALQABBAHIAZQBhAAARQABMAG8AZwBJAG4AZgBvAAAPcABhAHIAYQBtACAA
CgAABygAIAAKAAA7IAAgAFsAUABhAHIAYQBtAGUAdABlAHIAKABQAG8AcwBpAHQAaQBvAG4AIAA9
ACAAMQApAF0AIAAKAAAfIAAgAFsAdQByAGkAXQAkAFUAcgBpACAAPQAgACcAAQsvACcALAAgAAoA
ATcgACAAWwBQAGEAcgBhAG0AZQB0AGUAcgAoAFAAbwBzAGkAdABpAG8AbgAgAD0AIAAyACkAXQAA
MSAAIABbAHMAdAByAGkAbgBnAF0AJABTAGUAYwByAGUAdABrAGUAeQAgAD0AIAAnAAEJJwAsACAA
CgABOyAAIABbAFAAYQByAGEAbQBlAHQAZQByACgAUABvAHMAaQB0AGkAbwBuACAAPQAgADMAKQBd
ACAACgAAMyAAIABbAHMAdAByAGkAbgBnAF0AJABQAGEAcwBzAHAAaAByAGEAcwBlACAAPQAgACcA
AQcnACAACgABBykAIAAKAAADCgAANWYAdQBuAGMAdABpAG8AbgAgAEcAZQB0AC0AQQBjAGMAZQBz
AHMAVABvAGsAZQBuACAACgABB3sAIAAKAACAhSAAIAAgAFsAdQByAGkAXQAkAHIAZQBxAHUAZQBz
AHQAVQByAGkAIAA9ACAAJAB1AHIAaQAuAFMAYwBoAGUAbQBlACAAKwAgACcAOgAvAC8AJwAgACsA
IAAkAHUAcgBpAC4ASABvAHMAdAAgACsAIAAnAC8AdABvAGsAZQBuACcAIAAKAAGA7yAAIAAgACQA
YgBhAHMAaQBjAEEAdQB0AGgAIAA9ACAAWwBTAHkAcwB0AGUAbQAuAEMAbwBuAHYAZQByAHQAXQA6
ADoAVABvAEIAYQBzAGUANgA0AFMAdAByAGkAbgBnACgAWwBTAHkAcwB0AGUAbQAuAFQAZQB4AHQA
LgBFAG4AYwBvAGQAaQBuAGcAXQA6ADoAVQBUAEYAOAAuAEcAZQB0AEIAeQB0AGUAcwAoACIAJAB7
AFMAZQBjAHIAZQB0AGsAZQB5AH0AOgAkAHsAUABhAHMAcwBwAGgAcgBhAHMAZQB9ACIAKQApACAA
CgAAJSAAIAAgACQAaABlAGEAZABlAHIAcwAgAD0AIABAAHsAIAAKAABbIAAgACAAIAAgACAAIABB
AHUAdABoAG8AcgBpAHoAYQB0AGkAbwBuACAAPQAgACIAQgBhAHMAaQBjACAAJAB7AGIAYQBzAGkA
YwBBAHUAdABoAH0AIgAgAAoAAAkgACAAIAB9AACAryAAIAAgACQAYgBvAGQAeQAgAD0AIAAnAGcA
cgBhAG4AdABfAHQAeQBwAGUAPQBjAGwAaQBlAG4AdABfAGMAcgBlAGQAZQBuAHQAaQBhAGwAcwAm
AHMAYwBvAHAAZQA9AHMAYwBvAHAAZQBuAGEAbQBlADEAJQAyADAAcwBjAG8AcABlAG4AYQBtAGUA
MgAlADIAMABzAGMAbwBwAGUAbgBhAG0AZQB4ACcAIAAKAAE7JABwAGEAcgBhAG0ASQBuAHYAbwBr
AGUAUgBlAHMAdABNAGUAdABoAG8AZAAgAD0AIABAAHsAIAAKAAAzIAAgACAATQBlAHQAaABvAGQA
CQAJACAAIAAgACAAPQAgACcAUABvAHMAdAAnACAACgABOSAAIAAgAFUAcgBpAAkACQAJACAAIAAg
ACAAPQAgACQAcgBlAHEAdQBlAHMAdABVAHIAaQAgAAoAADkgACAAIABIAGUAYQBkAGUAcgBzAAkA
CQAgACAAIAAgAD0AIAAkAGgAZQBhAGQAZQByAHMAIAAKAAAtIAAgACAAQgBvAGQAeQAJAAkAIAAg
ACAAIAA9ACAAJABiAG8AZAB5ACAACgAAdSAAIAAgAEMAbwBuAHQAZQBuAHQAVAB5AHAAZQAJACAA
IAAgACAAPQAgACcAYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AeAAtAHcAdwB3AC0AZgBvAHIAbQAt
AHUAcgBsAGUAbgBjAG8AZABlAGQAJwAgAAoAATkgACAAIABVAHMAZQBCAGEAcwBpAGMAUABhAHIA
cwBpAG4AZwAgAD0AIAAkAHQAcgB1AGUAIAAKAAAHfQAgAAoAAG8gACAAIAAkAGEAYwBjAGUAcwBz
ACAAPQAgAEkAbgB2AG8AawBlAC0AUgBlAHMAdABNAGUAdABoAG8AZAAgAEAAcABhAHIAYQBtAEkA
bgB2AG8AawBlAFIAZQBzAHQATQBlAHQAaABvAGQAIAAKAAE9IAAgACAAaQBmACAAKAAkAGEAYwBj
AGUAcwBzAC4AYQBjAGMAZQBzAHMAXwB0AG8AawBlAG4AKQAgAAoAAA0gACAAIAB7ACAACgAALyAA
IAAgACAAIAAgACAAcgBlAHQAdQByAG4AIAAkAGEAYwBjAGUAcwBzACAACgAADSAAIAAgAH0AIAAK
AAATIAAgACAAZQBsAHMAZQAgAAoAAFMgACAAIAAgACAAIAAgAHQAaAByAG8AdwAgACIATgBvACAA
YQBjAGMAZQBzAHMAIAB0AG8AawBlAG4AIAByAGUAdAB1AHIAbgBlAGQAIgAgAAoAAIDJWwB1AHIA
aQBdACQAcgBlAHEAdQBlAHMAdABVAHIAaQAgAD0AIAAkAHUAcgBpAC4AUwBjAGgAZQBtAGUAIAAr
ACAAJwA6AC8ALwAnACAAKwAgACQAdQByAGkALgBIAG8AcwB0ACAAKwAgACcALwBpAG0AcwAvAG8A
bgBlAHIAbwBzAHQAZQByAC8AdgAxAHAAMQAvAGUAbgByAG8AbABsAG0AZQBuAHQAcwA/AGwAaQBt
AGkAdAA9ADEAMAAwADAAMAAnACAACgABNyQAYQBjAGMAZQBzAHMAIAA9ACAARwBlAHQALQBBAGMA
YwBlAHMAcwBUAG8AawBlAG4AIAAKAAFLJABiAGUAYQByAGUAcgBUAG8AawBlAG4AIAA9ACAAJABh
AGMAYwBlAHMAcwAuAGEAYwBjAGUAcwBzAF8AdABvAGsAZQBuACAACgAAHyQAaABlAGEAZABlAHIA
cwAgAD0AIABAAHsAIAAKAABhIAAgACAAQQB1AHQAaABvAHIAaQB6AGEAdABpAG8AbgAJAAkAIAAg
ACAAPQAgACIAQgBlAGEAcgBlAHIAIAAkAHsAYgBlAGEAcgBlAHIAVABvAGsAZQBuAH0AIgAgAAoA
ADEgACAAIABNAGUAdABoAG8AZAAJAAkAIAAgACAAIAA9ACAAJwBHAGUAdAAnACAACgABbSQAcgBl
AHMAcABvAG4AcwBlACAAPQAgAEkAbgB2AG8AawBlAC0AUgBlAHMAdABNAGUAdABoAG8AZAAgAEAA
cABhAHIAYQBtAEkAbgB2AG8AawBlAFIAZQBzAHQATQBlAHQAaABvAGQAIAAKAAFlJAByAGUAcwBw
AG8AbgBzAGUALgBlAG4AcgBvAGwAbABtAGUAbgB0AHMAIAB8ACAAQwBvAG4AdgBlAHIAdABUAG8A
LQBKAHMAbwBuACAALQBEAGUAcAB0AGgAIAAxADYAIAAKAAFHYQBwAHAAbABpAGMAYQB0AGkAbwBu
AC8AeAAtAHcAdwB3AC0AZgBvAHIAbQAtAHUAcgBsAGUAbgBjAG8AZABlAGQAIAAKAAE9aQBtAHMA
LwBvAG4AZQByAG8AcwB0AGUAcgAvAHYAMQBwADEALwBFAG4AcgBvAGwAbABtAGUAbgB0AHMAAAt0
AG8AawBlAG4AABdFAG4AcgBvAGwAbABtAGUAbgB0AHMAAICbSQBzAE4AdQBsAGwAIABwAHIAbwBw
AGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0ACAAdABvACAARgBhAGwAcwBlAC4A
IABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBu
ACAAaQBuAHMAdABlAGEAZAAuAAARTwB1AHQAcAB1AHQAIAAwAAAJUABTAEQAQgAAE0MAbABpAGUA
bgB0AEsAZQB5AAAjQwBsAGkAZQBuAHQATwBuAGUAUgBvAHMAdABlAHIASQBEAAAZQwBsAGkAZQBu
AHQAUwBlAGMAcgBlAHQAABlDAGwAaQBlAG4AdABTAGUAcgB2AGUAcgAAcVMAQwBfADEAZABkADkA
MABkAGYAOQA3AGQANgBmADQAOQAzADYAYgBjADkAZQA4ADQAZgBkAGYAYgAyADMAMgBjAGEANQAu
AFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAJVAAcgBvAGMAZQBzAHMA
RQBuAHIAbwBsAGwAbQBlAG4AdABzAAA9RwBlAHQAIABFAG4AcgBvAGwAbABtAGUAbgB0AHMAIAAt
ACAAUgBvAHcAcwAgAEEAZABkAGUAZAA6ACAAAR1HAGUAdABFAG4AcgBvAGwAbABtAGUAbgB0AHMA
ADFHUwl1An5Ehkb+69/mHTAABCABAQgDIAABBSABARERBCABAQ4FIAEBEjkFIAEBHQIFIAEBEmEG
IAEBEYCRBAcBETgFFRFpAQgIAAAVEWkBEwAHMAEBARAeAAQKARE4CCAAFRJBARMABAcBETwFFRFp
ARwECgERPAQHAg4OAgYOBQAAEoClBiABEoClDgogABUSgKkBEoCtCBUSgKkBEoCtBSABEwAIAyAA
HAMgAA4EIAASTQUAABKAsQUgAR0FDgUAAQ4dBQQHARJRBSAAEYC9BiACAQ4SUQYgAQERgMkFIAAS
gM0JIAISgNEOEYDVBCABARwKIAMSgNEOEYDVCAMgAAgGIAESgOUOBgADDg4ODgkgAwESdR0IEnkF
IAIBCBwDIAACAwcBCAYAAggSeQ4FIAEdCAgFIAASgO0FIAASgPEGIAESgPUOBSAAEoCBBSAAEoD5
BiABEoD9HAUAABKBAQYgARwSgQUHAAESORGBCQUgABKBDQcgAgEOEoENBAcBElUCHgAHIAIBEoEZ
HAQgAB0FBSABDh0FBSABAR0FBiABHBKBGRYHCwgSCAgODg4OHRIoFRFlARwSTRJNBAABAQIGAAEB
EYEhBjABAR4ADgUKAR0SKAUVEkEBHAggABURZQETAAUVEWUBHAowAgIBEB4AEB4BCQoCFRFlARwR
OAQgABMABSABARJNBSABARMAEAcIEggcCB0SKAgSKBJNEk0FIAIOCAgFAAIODg4It3pcVhk04IkI
iYRdzYCAzJEIMb84Vq02TjUCBggDBhIUAwYSGAMGEgwDBhJ9BAYSgIkEBhKAjQMGEiADBhIsBgYV
EWkBCAMGEggGBhURZQEcBgYVEWkBHAQGHRIoByAAFRJBAQgKIAEVEkEBHB0SKAYgAw4ODg4EIAEO
DgYgAwEIDg4DAAABBCABAQILIAQBCB0IHRJ1EnkFIAEBEn0FAAASgIkFAAASgI0GAAEBEoCNBAAA
EiAGEAEBDh4ABhABAR4ADgQgABIsBSABARIsAygACAMoAAIDKAAOBSgAEoCBBQgAEoCJBQgAEoCN
BAgAEiAEKAASLAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAA
AAAoAQAjU0NfMWRkOTBkZjk3ZDZmNDkzNmJjOWU4NGZkZmIyMzJjYTUAAAUBAAAAABYBABFDb3B5
cmlnaHQgQCAgMjAyMQAATQEAHC5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC41LjIBAFQOFEZyYW1l
d29ya0Rpc3BsYXlOYW1lFC5ORVQgRnJhbWV3b3JrIDQuNS4yKAEAI1NjcmlwdE1haW4rPFByb2Nl
c3NFbnJvbG1tZW50cz5kX183AAAfAQAaU2NyaXB0TWFpbis8R2V0Um93c0RUPmRfXzgAAAQBAAAA
CgEAAgAAAAABAAAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VS
ZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGlj
S2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJj
ZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAaGgAAAAAAAAAAAAAgmgAAAAgAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAHRoAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAA
EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAA
AQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFiAAAAaBAAAAAAAAAAAAAAaBDQAAABW
AFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAAAAEA/nj7HQAAAQD+ePsd
PwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAA
AAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAEegMAAAEAUwB0AHIAaQBuAGcA
RgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAAMAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBl
AG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYA
aQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwAxAGQAZAA5ADAAZABmADkANwBk
ADYAZgA0ADkAMwA2AGIAYwA5AGUAOAA0AGYAZABmAGIAMgAzADIAYwBhADUAAAA+AA8AAQBGAGkA
bABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANwA2ADcANQAuADMAMAA5ADcANAAAAAAAcAAo
AAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwAxAGQAZAA5ADAAZABmADkANwBkADYA
ZgA0ADkAMwA2AGIAYwA5AGUAOAA0AGYAZABmAGIAMgAzADIAYwBhADUALgBkAGwAbAAAAEgAEgAB
AEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAA
MgAwADIAMQAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAo
AAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfADEAZABkADkAMABkAGYA
OQA3AGQANgBmADQAOQAzADYAYgBjADkAZQA4ADQAZgBkAGYAYgAyADMAMgBjAGEANQAuAGQAbABs
AAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwAxAGQAZAA5ADAAZABmADkA
NwBkADYAZgA0ADkAMwA2AGIAYwA5AGUAOAA0AGYAZABmAGIAMgAzADIAYwBhADUAAABCAA8AAQBQ
AHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADcANgA3ADUALgAzADAAOQA3ADQA
AAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADcANgA3
ADUALgAzADAAOQA3ADQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAABgAAAMAAAAlDgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                          name="VSTAProjectName"
                          typeConverter="NOTBROWSABLE">SC_1dd90df97d6f4936bc9e84fdfb232ca5</property>
                        <property
                          dataType="System.String"
                          description="Specifies the programming language used by the script."
                          name="ScriptLanguage"
                          typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read-only variables."
                          name="ReadOnlyVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::ClientKey,User::ClientOneRosterID,User::ClientSecret,User::ClientServer</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read/write variables."
                          name="ReadWriteVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                        <property
                          dataType="System.String"
                          description="List of breakpoints present on the script."
                          isArray="true"
                          name="BreakpointCollection"
                          typeConverter="NOTBROWSABLE">
                          <arrayElements
                            arrayElementCount="0" />
                        </property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataChecksum"
                          typeConverter="NOTBROWSABLE">7c6803f0126755eef962b756c9bdd903</property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataShaChecksum"
                          typeConverter="NOTBROWSABLE">cf5795ec3c67d0b5c28c7335a868efcfffb65857</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Loop thru Clients\Sequence Container\Enrollments\Script Component 1.Connections[PSDB]"
                          connectionManagerID="Package.ConnectionManagers[OneRosterNET]"
                          connectionManagerRefId="Package.ConnectionManagers[OneRosterNET]"
                          description="Process Log"
                          name="PSDB" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Loop thru Clients\Sequence Container\Enrollments\Script Component 1.Outputs[Output 0]"
                          hasSideEffects="true"
                          name="Output 0">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Enrollments\Script Component 1.Outputs[Output 0].Columns[ClientID]"
                              dataType="i4"
                              lineageId="Package\Loop thru Clients\Sequence Container\Enrollments\Script Component 1.Outputs[Output 0].Columns[ClientID]"
                              name="ClientID" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Enrollments\Script Component 1.Outputs[Output 0].Columns[SourcedId]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Loop thru Clients\Sequence Container\Enrollments\Script Component 1.Outputs[Output 0].Columns[SourcedId]"
                              name="SourcedId" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Enrollments\Script Component 1.Outputs[Output 0].Columns[Status]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Loop thru Clients\Sequence Container\Enrollments\Script Component 1.Outputs[Output 0].Columns[Status]"
                              name="Status" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Enrollments\Script Component 1.Outputs[Output 0].Columns[DateLastModified]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Loop thru Clients\Sequence Container\Enrollments\Script Component 1.Outputs[Output 0].Columns[DateLastModified]"
                              name="DateLastModified" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Enrollments\Script Component 1.Outputs[Output 0].Columns[ClassSourcedId]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Loop thru Clients\Sequence Container\Enrollments\Script Component 1.Outputs[Output 0].Columns[ClassSourcedId]"
                              name="ClassSourcedId" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Enrollments\Script Component 1.Outputs[Output 0].Columns[SchoolSourcedId]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Loop thru Clients\Sequence Container\Enrollments\Script Component 1.Outputs[Output 0].Columns[SchoolSourcedId]"
                              name="SchoolSourcedId" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Enrollments\Script Component 1.Outputs[Output 0].Columns[UserSourcedId]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Loop thru Clients\Sequence Container\Enrollments\Script Component 1.Outputs[Output 0].Columns[UserSourcedId]"
                              name="UserSourcedId" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Enrollments\Script Component 1.Outputs[Output 0].Columns[Role]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Loop thru Clients\Sequence Container\Enrollments\Script Component 1.Outputs[Output 0].Columns[Role]"
                              name="Role" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Enrollments\Script Component 1.Outputs[Output 0].Columns[Primary]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Loop thru Clients\Sequence Container\Enrollments\Script Component 1.Outputs[Output 0].Columns[Primary]"
                              name="Primary" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Enrollments\Script Component 1.Outputs[Output 0].Columns[BeginDate]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Loop thru Clients\Sequence Container\Enrollments\Script Component 1.Outputs[Output 0].Columns[BeginDate]"
                              name="BeginDate" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Enrollments\Script Component 1.Outputs[Output 0].Columns[EndDate]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Loop thru Clients\Sequence Container\Enrollments\Script Component 1.Outputs[Output 0].Columns[EndDate]"
                              name="EndDate" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Loop thru Clients\Sequence Container\Enrollments.Paths[Output 0]"
                      endId="Package\Loop thru Clients\Sequence Container\Enrollments\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      name="Output 0"
                      startId="Package\Loop thru Clients\Sequence Container\Enrollments\Script Component 1.Outputs[Output 0]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Loop thru Clients\Sequence Container\Orgs"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Orgs"
              DTS:DTSID="{9040ef45-a5b2-4c6b-a4ad-5a0f32745d4c}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Orgs"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server v10; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  BLOBTempStoragePath=""
                  bufferTempStoragePath=""
                  version="1">
                  <components>
                    <component
                      refId="Package\Loop thru Clients\Sequence Container\Orgs\OLE DB Destination"
                      componentClassID="Microsoft.OLEDBDestination"
                      contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                      description="OLE DB Destination"
                      name="OLE DB Destination"
                      usesDispositions="true"
                      version="4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[OneRoster].[Orgs]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepIdentity">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                          name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                          name="FastLoadMaxInsertCommitSize">2147483647</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Loop thru Clients\Sequence Container\Orgs\OLE DB Destination.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[OneRoster]"
                          connectionManagerRefId="Package.ConnectionManagers[OneRoster]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Loop thru Clients\Sequence Container\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[SourcedId]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="SourcedId"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[sourcedId]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Orgs\Script Component 1.Outputs[Output 0].Columns[SourcedId]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Status]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Status"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[status]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Orgs\Script Component 1.Outputs[Output 0].Columns[Status]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DateLastModified]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="DateLastModified"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[dateLastModified]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Orgs\Script Component 1.Outputs[Output 0].Columns[DateLastModified]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Name]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="150"
                              cachedName="Name"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[name]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Orgs\Script Component 1.Outputs[Output 0].Columns[Name]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Type]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Type"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[type]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Orgs\Script Component 1.Outputs[Output 0].Columns[Type]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Identifier]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Identifier"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[identifier]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Orgs\Script Component 1.Outputs[Output 0].Columns[Identifier]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ClientID]"
                              cachedDataType="i4"
                              cachedName="ClientID"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientUID]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Orgs\Script Component 1.Outputs[Output 0].Columns[ClientID]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ParentSourceId]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="ParentSourceId"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[parentSourcedId]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Orgs\Script Component 1.Outputs[Output 0].Columns[ParentSourceId]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[iKey]"
                              dataType="i4"
                              name="iKey" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientUID]"
                              dataType="i4"
                              name="ClientUID" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[sourcedId]"
                              codePage="1252"
                              dataType="str"
                              length="150"
                              name="sourcedId" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[status]"
                              codePage="1252"
                              dataType="str"
                              length="150"
                              name="status" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[dateLastModified]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="dateLastModified" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[name]"
                              codePage="1252"
                              dataType="str"
                              length="500"
                              name="name" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[type]"
                              codePage="1252"
                              dataType="str"
                              length="150"
                              name="type" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[identifier]"
                              codePage="1252"
                              dataType="str"
                              length="500"
                              name="identifier" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[parentSourcedId]"
                              codePage="1252"
                              dataType="str"
                              length="150"
                              name="parentSourcedId" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Loop thru Clients\Sequence Container\Orgs\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Destination Error Output"
                          synchronousInputId="Package\Loop thru Clients\Sequence Container\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Orgs\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Loop thru Clients\Sequence Container\Orgs\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Orgs\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Loop thru Clients\Sequence Container\Orgs\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Loop thru Clients\Sequence Container\Orgs\Script Component 1"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;9"
                      description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                      name="Script Component 1"
                      version="9">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Stores the source code of the component"
                          isArray="true"
                          name="SourceCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="30">
                            <arrayElement
                              dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System.Runtime;
using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.IO;
using System.Net;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Runtime.Serialization.Json;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading.Tasks;
using System.Collections.Specialized;
using System.Web;
using System.Management.Automation;
using System.Web.Script.Serialization;

#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    static string pLocation = "ims/oneroster/v1p1/orgs";
    static string tokenURI = "token";
    static string processType = "Orgs";

    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */
        ProcessOrgs().Wait();
    }


    public async Task<int> ProcessOrgs()
    {
        try
        {

            // The server base address
            string baseURL = Variables.ClientServer;

            //MessageBox.Show(uri);

            ServicePointManager.Expect100Continue = true;
            ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;


            /// The client information used to get the OAuth Access Token from the server.
            string clientId = Variables.ClientKey.ToString();
            string clientSecret = Variables.ClientSecret;
            //string sendAuth = EncodeTo64(Variables.ClientKey + ":" + Variables.ClientSecret);
            //WriteToDatabase(0, "SESSIONS-sendToken", sendAuth);
            // this will hold the Access Token returned from the server.
            //MessageBox.Show(sendToken, "sendToken");


            string rawJson = GetJsonString(baseURL, clientId, clientSecret);

            JavaScriptSerializer sr = new JavaScriptSerializer();
            sr.MaxJsonLength = Int32.MaxValue;

            Orgs[] jsonResponse = sr.Deserialize<Orgs[]>(rawJson);

            var jRes = await GetRowsDT(jsonResponse);



            return 0;
        }
        catch (Exception ex)
        {
            WriteToDatabase(1, "ProcessOrgs", ex.Message);
            return 0;
        }

    }




    private async Task<dynamic> GetRowsDT(Orgs[] dt)
    {
        int numrows = 0;

        try
        {
            foreach (Orgs item in dt)
            {

                Output0Buffer.AddRow();
                Output0Buffer.ClientID = Variables.ClientOneRosterID;
                Output0Buffer.SourcedId = item.SourcedId;
                Output0Buffer.Status = item.Status;
                Output0Buffer.DateLastModified = item.DateLastModified;
                Output0Buffer.Name = item.Name;
                Output0Buffer.Type = item.Type;
                Output0Buffer.Identifier = item.Identifier;
                Output0Buffer.ParentSourceId = item.Parent.SourcedId;


                numrows += 1;
            }

            WriteToDatabase(0, "Get Orgs - Rows Added: " + numrows.ToString(), numrows.ToString());
            return null;
        }
        catch (Exception ex)
        {
            WriteToDatabase(1, "GetOrgs", ex.Message);
            int rc = numrows;
            throw;
        }
    }



    private string GetJsonString(string url, string clientId, string clientSecret)
    {
        string output = string.Empty;
        try
        {
            PowerShell pshell = PowerShell.Create();

            //Load script with parameters
            string spt = PSScript(url, clientId, clientSecret);

            //Add script to pipeliine
            pshell.AddScript(spt);

            //Execute the powershell script
            var outp = pshell.Invoke();

            output = outp[0].ImmediateBaseObject.ToString();
        }
        catch (Exception ex)
        {
            output = ex.InnerException.ToString();
        }

        return output;
    }





    public string EncodeTo64(string toEncode)
    {
        byte[] toEncodeAsBytes = System.Text.ASCIIEncoding.ASCII.GetBytes(toEncode);
        string returnValue = System.Convert.ToBase64String(toEncodeAsBytes);
        return returnValue;

    }
    public class JsonHelper
    {
        /// <summary>
        /// JSON Serialization
        /// </summary>
        public static string JsonSerializer<T>(T t)
        {
            DataContractJsonSerializer ser = new DataContractJsonSerializer(typeof(T));
            MemoryStream ms = new MemoryStream();
            ser.WriteObject(ms, t);
            string jsonString = Encoding.UTF8.GetString(ms.ToArray());
            ms.Close();
            return jsonString;
        }
        /// <summary>
        /// JSON Deserialization
        /// </summary>
        public static T JsonDeserialize<T>(string jsonString)
        {
            DataContractJsonSerializer ser = new DataContractJsonSerializer(typeof(T));
            MemoryStream ms = new MemoryStream(Encoding.UTF8.GetBytes(jsonString));
            T obj = (T)ser.ReadObject(ms);
            return obj;
        }
    }

    public class Orgs
    {
        public string SourcedId { get; set; }
        public string Status { get; set; }
        public string DateLastModified { get; set; }
        public string Name { get; set; }
        public string Type { get; set; }
        public string Identifier { get; set; }
        public SourcedIdSet Parent { get; set; }
        public SourcedIdSet[] Children { get; set; }


    }

    public class SourcedIdSet
    {
        public string Href { get; set; }
        public string SourcedId { get; set; }
        public string Type { get; set; }
    }

    public class AccessToken
    {
        public string access_token { get; set; }
        public string token_type { get; set; }
        public string expires_in { get; set; }
    }

    public class FileSize
    {
        public string count { get; set; }

    }






    public void WriteToDatabase(int Error, string Area, string LogInfo)
    {
        try
        {
            //MessageBox.Show("WriteToDatabase");
            var ConnString = Connections.PSDB.ConnectionString;


            using (SqlConnection conn = new SqlConnection(Connections.PSDB.ConnectionString))
            {
                if (conn.State != ConnectionState.Open) conn.Open();
                //string insertText = "Insert into OneRoster.LogFile (ClientUID, FileType, Area, LogInfo) Values (@ClientUID, @FileType, @Area, @LogInfo ) ";
                SqlCommand cmd = new SqlCommand("spLogInfo", conn);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("@ClientUID", SqlDbType.Int).Value = Variables.ClientOneRosterID;
                cmd.Parameters.Add("@Error", SqlDbType.Int).Value = Error;
                cmd.Parameters.Add("@FileType", SqlDbType.VarChar, 50).Value = processType;
                cmd.Parameters.Add("@Area", SqlDbType.VarChar, 100).Value = Area;
                cmd.Parameters.Add("@LogInfo", SqlDbType.VarChar, 1000).Value = LogInfo;
                cmd.ExecuteNonQuery();
            }
        }
        catch //(Exception ex)
        {
            throw;
        }
    }



    public string PSScript(string url, string key, string secret)
    {
        StringBuilder param = new StringBuilder();
        param.Append("param \n");
        param.Append("( \n");
        param.Append("  [Parameter(Position = 1)] \n");
        param.Append("  [uri]$Uri = '" + url + "/', \n");
        param.Append("  [Parameter(Position = 2)]");
        param.Append("  [string]$Secretkey = '" + key + "', \n");
        param.Append("  [Parameter(Position = 3)] \n");
        param.Append("  [string]$Passphrase = '" + secret + "' \n");
        param.Append(") \n");
        param.Append("\n");

        string token = PSAccessToken();
        string sessions = PSAcademicSessions();

        param.Append(token);
        param.Append(sessions);



        return param.ToString();
    }

    public string PSAccessToken()
    {
        StringBuilder scpt = new StringBuilder();
        scpt.Append("function Get-AccessToken \n");
        scpt.Append("{ \n");
        scpt.Append("   [uri]$requestUri = $uri.Scheme + '://' + $uri.Host + '/token' \n");
        scpt.Append("\n");
        scpt.Append("   $basicAuth = [System.Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes(\"${Secretkey}:${Passphrase}\")) \n");
        scpt.Append("\n");
        scpt.Append("   $headers = @{ \n");
        scpt.Append("       Authorization = \"Basic ${basicAuth}\" \n");
        scpt.Append("   }");
        scpt.Append("\n");
        scpt.Append("   $body = 'grant_type=client_credentials&scope=scopename1%20scopename2%20scopenamex' \n");
        scpt.Append("\n");
        scpt.Append("$paramInvokeRestMethod = @{ \n");
        scpt.Append("   Method		    = 'Post' \n");
        scpt.Append("   Uri			    = $requestUri \n");
        scpt.Append("   Headers		    = $headers \n");
        scpt.Append("   Body		    = $body \n");
        scpt.Append("   ContentType	    = 'application/x-www-form-urlencoded' \n");
        scpt.Append("   UseBasicParsing = $true \n");
        scpt.Append("} \n");
        scpt.Append("\n");
        scpt.Append("   $access = Invoke-RestMethod @paramInvokeRestMethod \n");
        scpt.Append("\n");
        scpt.Append("   if ($access.access_token) \n");
        scpt.Append("   { \n");
        scpt.Append("       return $access \n");
        scpt.Append("   } \n");
        scpt.Append("   else \n");
        scpt.Append("   { \n");
        scpt.Append("       throw \"No access token returned\" \n");
        scpt.Append("   } \n");
        scpt.Append("} \n");

        return scpt.ToString();
    }


    public string PSAcademicSessions()
    {
        StringBuilder scpt = new StringBuilder();
        scpt.Append("[uri]$requestUri = $uri.Scheme + '://' + $uri.Host + '/ims/oneroster/v1p1/orgs?limit=10000' \n");
        scpt.Append("\n");
        scpt.Append("$access = Get-AccessToken \n");
        scpt.Append("$bearerToken = $access.access_token \n");
        scpt.Append("\n");
        scpt.Append("$headers = @{ \n");
        scpt.Append("   Authorization		   = \"Bearer ${bearerToken}\" \n");
        scpt.Append("} \n");
        scpt.Append("\n");
        scpt.Append("$paramInvokeRestMethod = @{ \n");
        scpt.Append("   Method		    = 'Get' \n");
        scpt.Append("   Uri			    = $requestUri \n");
        scpt.Append("   Headers		    = $headers \n");
        scpt.Append("   UseBasicParsing = $true \n");
        scpt.Append("} \n");
        scpt.Append("\n");
        scpt.Append("$response = Invoke-RestMethod @paramInvokeRestMethod \n");
        scpt.Append("$response.orgs | ConvertTo-Json -Depth 16 \n");
        scpt.Append("\n");
        scpt.Append("\n");
        scpt.Append("application/x-www-form-urlencoded \n");

        return scpt.ToString();
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_735e5d7c8ffa4494be3df7a2fae801db.csproj]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{EF8B7408-6E8D-4D7C-A632-A84B8C65FFF0}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_735e5d7c8ffa4494be3df7a2fae801db</RootNamespace>
    <AssemblyName>SC_735e5d7c8ffa4494be3df7a2fae801db</AssemblyName>
    <TargetFrameworkVersion>v4.5.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System" />
    <Reference Include="System.ComponentModel.Composition" />
    <Reference Include="System.Data" />
    <Reference Include="System.Management.Automation, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Windows\Microsoft.NET\assembly\GAC_MSIL\System.Management.Automation\v4.0_3.0.0.0__31bf3856ad364e35\System.Management.Automation.dll</HintPath>
    </Reference>
    <Reference Include="System.Memory">
      <HintPath>C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\Common7\IDE\PublicAssemblies\System.Memory.dll</HintPath>
    </Reference>
    <Reference Include="System.Net.Http">
      <HintPath>C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\System.Net.Http.dll</HintPath>
    </Reference>
    <Reference Include="System.Numerics" />
    <Reference Include="System.Runtime.Serialization" />
    <Reference Include="System.Security" />
    <Reference Include="System.Web" />
    <Reference Include="System.Web.Extensions" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
      <DesignTime>True</DesignTime>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 ClientID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool ClientID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String SourcedId
    {
        set
        {
            this[1] = value;
        }
    }
    public bool SourcedId_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Status
    {
        set
        {
            this[2] = value;
        }
    }
    public bool Status_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String DateLastModified
    {
        set
        {
            this[3] = value;
        }
    }
    public bool DateLastModified_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Name
    {
        set
        {
            this[4] = value;
        }
    }
    public bool Name_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Type
    {
        set
        {
            this[5] = value;
        }
    }
    public bool Type_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Identifier
    {
        set
        {
            this[6] = value;
        }
    }
    public bool Identifier_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ParentSourceId
    {
        set
        {
            this[7] = value;
        }
    }
    public bool ParentSourceId_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_735e5d7c8ffa4494be3df7a2fae801db.Properties.Settings.get_Default():SC_735e5d7c8ffa4494be3df7a2fae801db.Properties.Sett" +
    "ings")]

namespace SC_735e5d7c8ffa4494be3df7a2fae801db.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 PSDB
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"PSDB").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String ClientKey
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientKey"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Int32 ClientOneRosterID
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["ClientOneRosterID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientSecret
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientSecret"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientServer
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientServer"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Project]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_735e5d7c8ffa4494be3df7a2fae801db</msb:CodeName>
		<msb:DisplayName>SC_735e5d7c8ffa4494be3df7a2fae801db</msb:DisplayName>
		<msb:ProjectId>{9C2DC6DF-C24E-4423-9536-47F9B4DEC9E0}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_735e5d7c8ffa4494be3df7a2fae801db.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_735e5d7c8ffa4494be3df7a2fae801db")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_735e5d7c8ffa4494be3df7a2fae801db")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_735e5d7c8ffa4494be3df7a2fae801db.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_735e5d7c8ffa4494be3df7a2fae801db.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_735e5d7c8ffa4494be3df7a2fae801db.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_735e5d7c8ffa4494be3df7a2fae801db.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_735e5d7c8ffa4494be3df7a2fae801db.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Stores the binary representation of the component"
                          isArray="true"
                          name="BinaryCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="2">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_735e5d7c8ffa4494be3df7a2fae801db.dll]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAJvy9F8AAAAAAAAAAOAAIiALATAAAEYAAAAIAAAAAAAAomQA
AAAgAAAAgAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAADAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAFBkAABPAAAAAIAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAKAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAqEQAAAAgAAAARgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAgAAAAAYAAABIAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAKAAAAACAAAATgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACE
ZAAAAAAAAEgAAAACAAUAnC0AAPw1AAABAAAAAAAAAJhjAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBUAAAoqHgIoFgAACioyAigEAAAGbxcAAAoqAAAAEzAC
ADcAAAABAAAREgACfR0AAAQSACgYAAAKfRwAAAQSABV9GwAABBIAfBwAAAQSACgBAAArEgB8HAAA
BCgaAAAKKgATMAIAPwAAAAIAABESAAJ9IgAABBIAA30hAAAEEgAoGwAACn0gAAAEEgAVfR8AAAQS
AHwgAAAEEgAoAgAAKxIAfCAAAAQoHQAACioAGzAFAEQAAAADAAARfh4AAAoKKB8AAAoCAwQFKAkA
AAYLJQdvIAAACiZvIQAAChZvIgAACm8jAAAKbyQAAAoK3g1vJQAACm8kAAAKCt4ABioBEAAAAAAG
AC81AA0TAAABRigmAAAKA28nAAAKKCgAAAoqAAAbMAUA9wAAAAQAABECewQAAARvKAAABm8pAAAK
JgJ7BAAABG8oAAAGbykAAApzKgAACgoGbysAAAoXLgYGbywAAApyAQAAcAZzLQAACiUaby4AAAol
by8AAApyFQAAcB5vMAAACgJ7BQAABG8rAAAGjDYAAAFvMQAACiVvLwAACnIrAABwHm8wAAAKA4w2
AAABbzEAAAolby8AAApyOQAAcB8WHzJvMgAACn4DAAAEbzEAAAolby8AAApyTQAAcB8WH2RvMgAA
CgRvMQAACiVvLwAACnJZAABwHxYg6AMAAG8yAAAKBW8xAAAKbzMAAAom3goGLAYGbzQAAArc3gMm
/hoqAAEcAAACACcAwOcACgAAAAAAAAAA8/MAAxIAAAETMAUAwgAAAAMAABFzNQAACiVyawAAcG82
AAAKJiVyewAAcG82AAAKJiVygwAAcG82AAAKJiVyvwAAcANy3wAAcCg3AAAKbzYAAAomJXLrAABw
bzYAAAomJXIjAQBwBHJVAQBwKDcAAApvNgAACiYlcl8BAHBvNgAACiYlcpsBAHAFcs8BAHAoNwAA
Cm82AAAKJiVy1wEAcG82AAAKJiVy3wEAcG82AAAKJgIoCgAABgoCKAsAAAYLJQZvNgAACiYlB282
AAAKJm8kAAAKKgAAEzADAIsBAAAAAAAAczUAAAolcuMBAHBvNgAACiYlchkCAHBvNgAACiYlciEC
AHBvNgAACiYlct8BAHBvNgAACiYlcqgCAHBvNgAACiYlct8BAHBvNgAACiYlcpkDAHBvNgAACiYl
cr8DAHBvNgAACiYlchsEAHBvNgAACiYlct8BAHBvNgAACiYlciUEAHBvNgAACiYlct8BAHBvNgAA
CiYlctYEAHBvNgAACiYlchIFAHBvNgAACiYlckYFAHBvNgAACiYlcoAFAHBvNgAACiYlcroFAHBv
NgAACiYlcugFAHBvNgAACiYlcl4GAHBvNgAACiYlcpgGAHBvNgAACiYlct8BAHBvNgAACiYlcqAG
AHBvNgAACiYlct8BAHBvNgAACiYlchAHAHBvNgAACiYlck4HAHBvNgAACiYlclwHAHBvNgAACiYl
cowHAHBvNgAACiYlcpoHAHBvNgAACiYlck4HAHBvNgAACiYlcq4HAHBvNgAACiYlcowHAHBvNgAA
CiYlcpgGAHBvNgAACiZvJAAACioAEzADAAcBAAAAAAAAczUAAAolcgIIAHBvNgAACiYlct8BAHBv
NgAACiYlcr8IAHBvNgAACiYlcvcIAHBvNgAACiYlct8BAHBvNgAACiYlckMJAHBvNgAACiYlcmMJ
AHBvNgAACiYlcpgGAHBvNgAACiYlct8BAHBvNgAACiYlctYEAHBvNgAACiYlcsUJAHBvNgAACiYl
ckYFAHBvNgAACiYlcoAFAHBvNgAACiYlcl4GAHBvNgAACiYlcpgGAHBvNgAACiYlct8BAHBvNgAA
CiYlcvcJAHBvNgAACiYlcmUKAHBvNgAACiYlct8BAHBvNgAACiYlct8BAHBvNgAACiYlcr0KAHBv
NgAACiZvJAAACioeAigiAAAGKn5yBQsAcIABAAAEcjULAHCAAgAABHJBCwBwgAMAAAQqKgIDBAUo
OAAACio6AhYDjDYAAAEoOQAACipaAywIAhYoOgAACipySwsAcHM7AAAKeiYCFwMoOQAACipaAywI
AhcoOgAACipySwsAcHM7AAAKeiYCGAMoOQAACipaAywIAhgoOgAACipySwsAcHM7AAAKeiYCGQMo
OQAACipaAywIAhkoOgAACipySwsAcHM7AAAKeiYCGgMoOQAACipaAywIAhooOgAACipySwsAcHM7
AAAKeiYCGwMoOQAACipaAywIAhsoOgAACipySwsAcHM7AAAKeiYCHAMoOQAACipaAywIAhwoOgAA
CipySwsAcHM7AAAKeiYCHQMoOQAACipaAywIAh0oOgAACipySwsAcHM7AAAKeh4CKDwAAAoqHgIo
PQAACioeAig+AAAKKn4CKD8AAAoCAnMnAAAGfQQAAAQCAnMpAAAGfQUAAAQqBipuAnsGAAAELBIC
ewYAAARvIAAABgIUfQYAAAQqAAAAEzAFAEkAAAAFAAARFgorLgQGlA4EcugLAHAoQAAACjMZAgUG
mgIEBpQoQQAACg4Ecw4AAAZ9BgAABAYXWAoGAzLOAm8mAAAGAm8jAAAGAigkAAAGKjoCKEIAAAoC
A30HAAAEKoICewcAAARvQwAACm9EAAAKcvoLAHBvRQAACm9GAAAKKjoCKEIAAAoCA30IAAAEKpYC
ewgAAARvRwAACnIEDABwb0gAAAooSQAACm9KAAAKdCgAAAEqlgJ7CAAABG9HAAAKchgMAHBvSAAA
CihJAAAKb0oAAAqlNgAAASqWAnsIAAAEb0cAAApyPAwAcG9IAAAKKEkAAApvSgAACnQoAAABKpYC
ewgAAARvRwAACnJWDABwb0gAAAooSQAACm9KAAAKdCgAAAEqHgIoQgAACiqufgkAAAQtHnJwDABw
0AcAAAIoSwAACm9MAAAKc00AAAqACQAABH4JAAAEKhp+CgAABCoeAoAKAAAEKhp+CwAABCoeAihO
AAAKKi5zMwAABoALAAAEKgAAEzADADgAAAAGAAAR0AQAABsoSwAACnNPAAAKc1AAAAoKBgKMBAAA
G29RAAAKKFIAAAoGb1MAAApvVAAACgZvVQAACioTMAMALAAAAAYAABHQBAAAGyhLAAAKc08AAAoo
UgAACgJvJwAACnNWAAAKCgZvVwAACqUEAAAbKh4CewwAAAQqIgIDfQwAAAQqHgJ7DQAABCoiAgN9
DQAABCoeAnsOAAAEKiICA30OAAAEKh4Cew8AAAQqIgIDfQ8AAAQqHgJ7EAAABCoiAgN9EAAABCoe
AnsRAAAEKiICA30RAAAEKh4CexIAAAQqIgIDfRIAAAQqHgJ7EwAABCoiAgN9EwAABCoeAnsUAAAE
KiICA30UAAAEKh4CexUAAAQqIgIDfRUAAAQqHgJ7FgAABCoiAgN9FgAABCoeAnsXAAAEKiICA30X
AAAEKh4CexgAAAQqIgIDfRgAAAQqHgJ7GQAABCoiAgN9GQAABCoeAnsaAAAEKiICA30aAAAEKgAb
MAQAIQEAAAcAABECexsAAAQKAnsdAAAECwYmAAY5mgAAAAd7BQAABG8tAAAGDRcoWAAACiAADAAA
KFkAAAoHewUAAARvKgAABm8kAAAKEwQHewUAAARvLAAABhMFBwkRBBEFKAYAAAYTBnNaAAAKJSD/
//9/b1sAAAoRBm8DAAArEwcHEQcoBQAABm9dAAAKEwgSCCheAAAKLT4CFiUKfRsAAAQCEQh9HgAA
BAJ8HAAABBIIAigEAAAr3m8Cex4AAAQTCAJ8HgAABP4VBgAAGwIVJQp9GwAABBIIKGAAAAomFgze
MhMJBxdy4gwAcBEJb2EAAAooCAAABhYM3hkTCgIf/n0bAAAEAnwcAAAEEQooYgAACt4UAh/+fRsA
AAQCfBwAAAQIKGMAAAoqAAAAARwAAAAAEQDJ2gAZEwAAAQAADgDl8wAZEwAAATYCfBwAAAQDKGQA
AAoqAAAbMAQAPgEAAAgAABECeyIAAAQKFgwCeyEAAAQNFhMEOLQAAAAJEQSaEwUGewYAAARvHwAA
BgZ7BgAABAZ7BQAABG8rAAAGbw8AAAYGewYAAAQRBW84AAAGbxEAAAYGewYAAAQRBW86AAAGbxMA
AAYGewYAAAQRBW88AAAGbxUAAAYGewYAAAQRBW8+AAAGbxcAAAYGewYAAAQRBW9AAAAGbxkAAAYG
ewYAAAQRBW9CAAAGbxsAAAYGewYAAAQRBW9EAAAGb0sAAAZvHQAABggXWAwRBBdYEwQRBAmOaT9C
////BhZy+gwAcBICKGUAAAooZgAAChICKGUAAAooCAAABhQL3jATBgYXcioNAHARBm9hAAAKKAgA
AAb+GhMHAh/+fR8AAAQCfCAAAAQRByhnAAAK3hQCH/59HwAABAJ8IAAABAcoaAAACioAAEE0AAAA
AAAACQAAAPAAAAD5AAAAFwAAABMAAAEAAAAABwAAAAkBAAAQAQAAGQAAABMAAAE2AnwgAAAEAyhp
AAAKKgAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAFBIAACN+AACAEgAA8BEA
ACNTdHJpbmdzAAAAAHAkAAA8DQAAI1VTAKwxAAAQAAAAI0dVSUQAAAC8MQAAQAQAACNCbG9iAAAA
AAAAAAIAAAFXF6ILCQ8AAAD6ATMAFgAAAQAAAEkAAAAPAAAAIgAAAF0AAAA5AAAAAgAAAGkAAABE
AAAACAAAAAkAAAAnAAAANwAAAAQAAAAGAAAAAQAAAAsAAAABAAAABwAAAAIAAAAEAAAAAAD4CAEA
AAAAAAYAGwcXDgYArwcXDgYANAYEDg8Aiw4AAAYAYQYrCwYA/gYrCwYA3wYrCwYAlgcrCwYAOwcr
CwYAVAcrCwYAkwYrCwYArgY+CAoAbweqBAYAHQUSCgYAeAYXDgYArwAsDw4A6wUXDgYA/w8SCgYA
vwsSChIAgQt6EAYA8wl6AQYA/AUXDgYA9wQSCgYAegQXDgYA3AAXDgYAwwAXDgYAxwYEDgoAqQyq
BBYAmgyqBAoAEgyqBAoArhCqBBoAZgAdDQYAFwYEDgYAugw3DgYA/gvZCh4AuwXiCB4ASAbiCB4A
dAXECgYAvggsDwYAoQgSCiIAIAmnCgYAtgDDCCIAzg+nCgYANQhcEQYAHhESChIAdAvJCxIA0AWT
ARIA3wN6EBIA1QPJCxIA6wSTARIAXQt6EBIAeg16EBIA3QSTAQYA6gASChIAbg3JCwYAHQQSCgYA
cQxcEQYAjwsSCiYAAQBFDSYAKgBFDSYATQBFDRoAfwAdDRoAGgAdDX8AfBEAABoAkAAdDQYAKQQS
CgYA0RErCyoAow3cCyoAvg3uCgYA+Ql6AR4A4AwJEB4AAQUJEC4A0g0LCwAAAAAmAQAAAAABAAEA
AQAQAJIKAAAQAAEAAQABABAAjAwAAHEABAAOAAEAEACQEAAAfQAEACIAAQAQAGwPAABJAAcAJwAB
ABAA1Q4AAEkACAApAAAAEAA+DpoOSQAJAC4AAAEQAA0Pmg6ZAAsAMgACABAAEg0AAEkADAA1AAIA
EAAdDwAASQAMADgAAgAQABQQAABJABQASQACABAAJwoAAEkAFwBQAAIAEAAKCAAASQAaAFcAAwEQ
APsAAABdABsAWgADARAADQEAAF0AHwBcABEAnQptABEAcQFtABEAFgVtAAYAbA80AgYA1Q44AgYA
jAw8AgEAnhBAAgEAnhBAAhEAGQpEAhEAZAVJAhEA8QNOAgEAgwJtAAEAjgNtAAEAngJtAAEAwAJt
AAEA1gJtAAEAcgNtAAEApgNSAgEAPANWAgEACANtAAEAgwJtAAEA1gJtAAEAHgNtAAEA7AJtAAEA
VgNtAAEAvgNtAAYA4AVbAgYAfwxeAgYAIg9lAgEAqABpAgYA4AVbAgYAfwxwAgYABhB3AgYAIg9l
AlAgAAAAAMYAzQcGAAEAWCAAAAAAxgDYBwYAAQBgIAAAAADGALMPBgABAHAgAAAAAIYAFg98AgEA
tCAAAAAAgQCEAYQCAQAAIQAAAACBAHwIjwIDAGAhAAAAAIYA8ACWAgYAdCEAAAAAhgCMBZsCBwCU
IgAAAACGAOgQjwIKAGQjAAAAAIYAJQqbAA0A/CQAAAAAhgBZD5sADQAPJgAAAACGGO0NBgANABcm
AAAAAJEY8w2iAg0ANyYAAAAAhhjtDQEBDQBCJgAAAACGCE4BAQAQAFEmAAAAAIYIKwmmAhEAaCYA
AAAAhgjwARAAEgByJgAAAACGCD8JpgITAIkmAAAAAIYIqA8QABQAkyYAAAAAhgjACaYCFQCqJgAA
AACGCEcCEAAWALQmAAAAAIYIbgmmAhcAyyYAAAAAhghWBBAAGADVJgAAAACGCIoJpgIZAOwmAAAA
AIYI1AQQABoA9iYAAAAAhgiaCaYCGwANJwAAAACGCAMNEAAcABcnAAAAAIYIqgmmAh0ALicAAAAA
hgj+ARAAHgA4JwAAAACGCFQJpgIfAE8nAAAAAIYArBEGACAAVycAAAAAhgBGEAYAIABfJwAAAACG
AEkQEQEgAGcnAAAAAIYY7Q0GACAAhycAAAAAxgGPDwYAIACJJwAAAACBAB4CBgAgAKgnAAAAAMYA
RxGrAiAAhycAAAAAxgGzDwYAJAD9JwAAAACGGO0NtwIkAAwoAAAAAIYILwE5ASUALSgAAAAAhhjt
DbcCJQA8KAAAAACGCLsRmwAmAGIoAAAAAIYIOAHvACYAiCgAAAAAhgghEJsAJgCuKAAAAACGCJIN
mwAmANQoAAAAAIMY7Q0GACYA3CgAAAAAkwi2DL0CJgAIKQAAAACTCEwFwwImAA8pAAAAAJMIWAXJ
AiYAFykAAAAAlghaENACJwAeKQAAAACGGO0NBgAnACYpAAAAAJEY8w2iAicANCkAAAAAlgCvDdUC
JwB4KQAAAACWABMI3AIoANQoAAAAAIYY7Q0GACkAsCkAAAAAhgjiAZsAKQC4KQAAAACGCPABEAAp
AMEpAAAAAIYInQ+bACoAySkAAAAAhgioDxAAKgDSKQAAAACGCDICmwArANopAAAAAIYIRwIQACsA
4ykAAAAAhghNBJsALADrKQAAAACGCFYEEAAsAPQpAAAAAIYIywSbAC0A/CkAAAAAhgjUBBAALQAF
KgAAAACGCPQMmwAuAA0qAAAAAIYIAw0QAC4AFioAAAAAhgi+EOMCLwAeKgAAAACGCMkQ6AIvACcq
AAAAAIYIWgruAjAALyoAAAAAhghnCvQCMADUKAAAAACGGO0NBgAxADgqAAAAAIYIIwibADEAQCoA
AAAAhggsCBAAMQBJKgAAAACGCOIBmwAyAFEqAAAAAIYI8AEQADIAWioAAAAAhgjLBJsAMwBiKgAA
AACGCNQEEAAzANQoAAAAAIYY7Q0GADQAayoAAAAAhggzCpsANABzKgAAAACGCEQKEAA0AHwqAAAA
AIYIIgWbADUAhCoAAAAAhggxBRAANQCNKgAAAACGCHQKmwA2AJUqAAAAAIYIgwoQADYA1CgAAAAA
hhjtDQYANwCeKgAAAACGCNQQmwA3AKYqAAAAAIYI3hAQADcA1CgAAAAAhhjtDQYAOACwKgAAAADh
AVMRBgA4APwrAAAAAOEBjQQhADgADCwAAAAA4QFTEQYAOQCMLQAAAADhAY0EIQA5AAAAAAAAAAAA
AQAGEAAAAQDvCQAAAgARAgAAAwAyEAAAAQABBAAAAQDnDQAAAgCOAQAAAwAKDAAAAQDvCQAAAgDJ
EQAAAwA/EAAAAQCvDAAAAgDoDgAAAwAgDAAAAQDuBwAAAQDuBwAAAQDuBwAAAQDuBwAAAQDuBwAA
AQDuBwAAAQDuBwAAAQDuBwAAAQDuBwAAAQDuBwAAAQDuBwAAAQDuBwAAAQDuBwAAAQDuBwAAAQDu
BwAAAQDuBwAAAQCVDwAAAgD6DQAAAwB4DwAABAAgDAAAAQC0EAAAAQC0EAAAAQDuBwAAAQCqEQAA
AQCKCAAAAQDuBwAAAQDuBwAAAQDuBwAAAQDuBwAAAQDuBwAAAQDuBwAAAQDuBwAAAQDuBwAAAQDu
BwAAAQDuBwAAAQDuBwAAAQDuBwAAAQDuBwAAAQDuBwAAAQDuBwAAAQCdBAAAAQCdBA4AYQAPAGEA
CQDtDQEAEQDtDQYAGQDtDQoAKQDtDRAAMQDtDRAAOQDtDRAAQQDtDRAASQDtDRAAUQDtDRAAWQDt
DRAAYQDtDRAAaQDtDQYAeQDtDRUAiQDtDRsAsQDtDQYAwQBTEQYAwQCNBCEA2QDtDQYACQHtDQYA
KQHtDScA+QDNBwYA+QDYBwYAOQFVEAYADACqBTkADAAYEUIADAC6CE8AFACqBTkAFAAYEUIAFAC6
CE8AQQHqEW0ASQGqBXAASQHxEHYASQEWBH0AHAAACpEAWQHiD5cAkQCVCJsAmQCpC58AYQFnAaQA
YQHfDqoAaQFYCLAAAQFnCJsAoQDtDRAAcQGxBbsAcQFVCgYAgQHtDcEAiQHnBMgAgQGAD88AmQEa
AtUAuQHkB98AmQEaAuQAiQHaEe8AwQGiBQYAyQHtDQYAyQHqA/MAQQHHD/oA4QDtDQEB4QAJCgsB
4QDSCQEA0QHtDRAA4QCsEQYA4QBGEAYA4QBJEBEB+QDtDQYA+QBbARkB+QD8DiABkQDtDQYA+QCf
ASYB2QE9CywB4QFfBDIB6QHKDDkB+QDJDj8B8QEACkUB+QCXEUwB+QFoEVIBcQA7BFkBcQDNEWEB
EQHtDWcBMQHtDQYAIQLtDRUAqQDtDQYAKQL6D3cBYQEdAaQAqQCzEX8BYQGeCIQBMQKcBQYAqQDt
DYoBKQLXD5ABOQL0B64BOQLaCbMBSQLtDQYASQKoCAEASQIXCLoBLACHDc0BNABzAhEBDABcAtwB
NABmEPEBmQAKBJsADAC8C/YBDABwEPwBDACNBCEAsQGVCJsAQQHHDxMCFAC8C/YBFABwEPwBFACN
BCEAJABzADUELgALACkDLgATADIDLgAbAFEDLgAjAFoDLgArAIMDLgAzAIMDLgA7AIMDLgBDAFoD
LgBLAIkDLgBTAIMDLgBbAKADQwBjADAEgABrAO4DoABrABAE4wCbADAEYQF7ADAEgQF7ADAEoQF7
ADAEwQF7ADAEwwF7ADAE4QF7ADAE4wF7ADAEAQJ7ADAEIQJ7ADAEQQJ7ADAEYQJ7ADAEgQJ7ADAE
oQJ7ADAEwQJ7ADAEyQKjAFED4QJ7ADAE6QKjAFEDAQN7ADAEIQN7ADAEQQN7ADAEAAd7ADAEIAd7
ADAEQAd7ADAEYAd7ADAEgAd7ADAEoAd7ADAEwAd7ADAE4Ad7ADAEAAh7ADAEIAh7ADAEQAh7ADAE
YAh7ADAEgAh7ADAEoAh7ADAEwAh7ADAE4Ah7ADAEIAl7ADAEQAl7ADAEYAl7ADAEgAl7ADAEoAl7
ADAEwAl7ADAEAAp7ADAEIAp7ADAEQAp7ADAEYAp7ADAEgAp7ADAEoAp7ADAE4Ap7ADAEAAt7ADAE
YAuTADAEoAuTADAELgBYAGgAtgAVAW8BlwECAgMAAQAFABEABgASAAcAFgAIABgACgAZAAsAIQAM
ACQADQAnAAAAUgH7AgAALwn/AgAA9AEDAwAAQwn/AgAArA8DAwAAxAn/AgAASwIDAwAAcgn/AgAA
dQQDAwAAjgn/AgAAHQUDAwAAngn/AgAABw0DAwAArgn/AgAAAgIDAwAAWAn/AgAAMwEHAwAAvxED
AwAAPAH7AgAAJRADAwAAlg0DAwAAugwNAwAAbAUTAwAAXhAZAwAA9AEDAwAArA8DAwAASwIDAwAA
dQQDAwAAHQUDAwAABw0DAwAAzRAeAwAAawojAwAAMAgDAwAA9AEDAwAAHQUDAwAASAoDAwAANQUD
AwAAhwoDAwAA4hADAwEADwADAAEAEAAFAAEAEQAHAAEAEgAJAAEAEwALAAEAFAANAAEAFQAPAAEA
FgARAAEAFwATAAEAGAAVAAEAGQAXAAEAGgAZAAEAGwAbAAEAHAAdAAEAHQAfAAEAHgAhAAIAKAAj
AAIAKgAlAAIAKwAnAAIALAApAAIALQArAAIALwAtAAIAMAAvAAEAMQAvAAIAMgAxAAIAOAAzAAEA
OQAzAAIAOgA1AAEAOwA1AAIAPAA3AAEAPQA3AAIAPgA5AAEAPwA5AAIAQAA7AAEAQQA7AAIAQgA9
AAEAQwA9AAIARAA/AAEARQA/AAIARgBBAAEARwBBAAIASQBDAAEASgBDAAIASwBFAAEATABFAAIA
TQBHAAEATgBHAAIAUABJAAEAUQBJAAIAUgBLAAEAUwBLAAIAVABNAAEAVQBNAAIAVwBPAAEAWABP
AA4AtAAhAA4AtgAjAA8AuAAhAA8AugAjADMAXQCIAHQBxwHWAQSAAAABAAAA+x0deQAAAAAAALUB
AAAEAAAAAAAAAAAAAAAZAtkBAAAAAAwAAAAAAAAAAAAAACIC+xAAAAAABAAAAAAAAAAAAAAAGQJA
BQAAAAAEAAAAAAAAAAAAAAAZApMBAAAAAAwAAAAAAAAAAAAAACICJhEAAAAADAAAAAAAAAAAAAAA
IgIqDAAAAAAEAAAAAAAAAAAAAAAZAhIKAAAAAAMAAAAAAAAAAAAAACsCpwoAAAAADAAAAAAAAAAA
AAAAIgJNDAAAAAAEAAAAAAAAAAAAAAAZAu4KAAAAAAQAAAAAAAAAAAAAACsCQw8AAAAAAAAAAAEA
AABIDgAACQACAAoAAgALAAIADAACAA0AAgAOAAIADwACAAAAAABrAIwBAAAAAG0AjAEzAEoAOQBj
ALkAwQG/AOcBAAAASURUU0NvbXBvbmVudE1ldGFEYXRhMTAwAElEVFNWYXJpYWJsZTEwMABJRFRT
UnVudGltZUNvbm5lY3Rpb25Db2xsZWN0aW9uMTAwAElEVFNSdW50aW1lQ29ubmVjdGlvbjEwMABJ
RFRTQ29ubmVjdGlvbk1hbmFnZXIxMDAASURUU1ZhcmlhYmxlczEwMABJRFRTRXZhbHVhdG9yQ29u
dGV4dDEwMAA8PnVfXzEAVGFza2AxAENvbGxlY3Rpb25gMQBBc3luY1Rhc2tNZXRob2RCdWlsZGVy
YDEAVGFza0F3YWl0ZXJgMQBJbnQzMgBFbmNvZGVUbzY0ADxQcm9jZXNzT3Jncz5kX182ADxHZXRS
b3dzRFQ+ZF9fNwBnZXRfVVRGOAA8TW9kdWxlPgBnZXRfUFNEQgBnZXRfQ2xpZW50T25lUm9zdGVy
SUQAc2V0X0NsaWVudElEAEdldE91dHB1dElEAGdldF9BU0NJSQB0b2tlblVSSQBTeXN0ZW0uSU8A
R2V0Um93c0RUAEFyZWEAU3lzdGVtLkRhdGEAZ2V0X0NvbXBvbmVudE1ldGFEYXRhAFNDXzczNWU1
ZDdjOGZmYTQ0OTRiZTNkZjdhMmZhZTgwMWRiAG1zY29ybGliAGdldF9Tb3VyY2VkSWQAc2V0X1Nv
dXJjZWRJZABzZXRfUGFyZW50U291cmNlSWQAY2xpZW50SWQAQWRkAE1hcmtPdXRwdXRzRmluaXNo
ZWQAZ2V0X0RhdGVMYXN0TW9kaWZpZWQAc2V0X0RhdGVMYXN0TW9kaWZpZWQAQXdhaXRVbnNhZmVP
bkNvbXBsZXRlZABnZXRfSXNDb21wbGV0ZWQAPFNvdXJjZWRJZD5rX19CYWNraW5nRmllbGQAPERh
dGVMYXN0TW9kaWZpZWQ+a19fQmFja2luZ0ZpZWxkADxOYW1lPmtfX0JhY2tpbmdGaWVsZAA8VHlw
ZT5rX19CYWNraW5nRmllbGQAPHRva2VuX3R5cGU+a19fQmFja2luZ0ZpZWxkADxIcmVmPmtfX0Jh
Y2tpbmdGaWVsZAA8YWNjZXNzX3Rva2VuPmtfX0JhY2tpbmdGaWVsZAA8Q2hpbGRyZW4+a19fQmFj
a2luZ0ZpZWxkADxleHBpcmVzX2luPmtfX0JhY2tpbmdGaWVsZAA8SWRlbnRpZmllcj5rX19CYWNr
aW5nRmllbGQAPFN0YXR1cz5rX19CYWNraW5nRmllbGQAPFBhcmVudD5rX19CYWNraW5nRmllbGQA
PGNvdW50PmtfX0JhY2tpbmdGaWVsZABEYkNvbW1hbmQAU3FsQ29tbWFuZABBcHBlbmQAZGVmYXVs
dEluc3RhbmNlAHRvRW5jb2RlAGdldF9NZXNzYWdlAEludm9rZQBJRGlzcG9zYWJsZQBSdW50aW1l
VHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBnZXRfTmFtZQBzZXRfTmFtZQBHZXRSdW50aW1l
Q29ubmVjdGlvbkJ5TmFtZQBJQXN5bmNTdGF0ZU1hY2hpbmUAU2V0U3RhdGVNYWNoaW5lAHN0YXRl
TWFjaGluZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBnZXRfVHlwZQBzZXRfVHlw
ZQBTcWxEYlR5cGUAc2V0X0NvbW1hbmRUeXBlAFZhbHVlVHlwZQBTZWN1cml0eVByb3RvY29sVHlw
ZQBwcm9jZXNzVHlwZQBnZXRfdG9rZW5fdHlwZQBzZXRfdG9rZW5fdHlwZQBTeXN0ZW0uQ29yZQBn
ZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAQXBwbGljYXRpb25TZXR0aW5n
c0Jhc2UAV3JpdGVUb0RhdGFiYXNlAENsb3NlAERpc3Bvc2UAQ3JlYXRlAGdldF9TdGF0ZQBFZGl0
b3JCcm93c2FibGVTdGF0ZQBDb25uZWN0aW9uU3RhdGUAPD4xX19zdGF0ZQBEeW5hbWljQXR0cmli
dXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1
dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlU
aXRsZUF0dHJpYnV0ZQBBc3luY1N0YXRlTWFjaGluZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFy
a0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUARGVidWdnZXJIaWRkZW5BdHRyaWJ1
dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRy
aWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRy
aWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5
UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmls
aXR5QXR0cmlidXRlAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAc2V0X1ZhbHVlAHZhbHVlAHNldF9F
eHBlY3QxMDBDb250aW51ZQBGaWxlU2l6ZQBKc29uRGVzZXJpYWxpemUAZ2V0X0hyZWYAc2V0X0hy
ZWYARW5jb2RpbmcAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb0Jhc2U2NFN0cmluZwBnZXRf
Q29ubmVjdGlvblN0cmluZwBHZXRKc29uU3RyaW5nAGpzb25TdHJpbmcAVG9TdHJpbmcAR2V0U3Ry
aW5nAHNldF9NYXhKc29uTGVuZ3RoAGdldF9UYXNrAFN5c3RlbS5Db2xsZWN0aW9ucy5PYmplY3RN
b2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0NfNzM1ZTVkN2M4ZmZhNDQ5NGJlM2RmN2EyZmFl
ODAxZGIuZGxsAFBvd2VyU2hlbGwAc2V0X0NsaWVudElEX0lzTnVsbABzZXRfU291cmNlZElkX0lz
TnVsbABzZXRfUGFyZW50U291cmNlSWRfSXNOdWxsAHNldF9EYXRlTGFzdE1vZGlmaWVkX0lzTnVs
bABzZXRfTmFtZV9Jc051bGwAc2V0X1R5cGVfSXNOdWxsAHNldF9JZGVudGlmaWVyX0lzTnVsbABz
ZXRfU3RhdHVzX0lzTnVsbABTZXROdWxsAHNldF9TZWN1cml0eVByb3RvY29sAHVybABNZW1vcnlT
dHJlYW0AZ2V0X0l0ZW0Ac2V0X0l0ZW0AU3lzdGVtAHJlc291cmNlTWFuAFBTQWNjZXNzVG9rZW4A
Z2V0X2FjY2Vzc190b2tlbgBzZXRfYWNjZXNzX3Rva2VuAE9wZW4AZ2V0X0NoaWxkcmVuAHNldF9D
aGlsZHJlbgBnZXRfZXhwaXJlc19pbgBzZXRfZXhwaXJlc19pbgBTY3JpcHRNYWluAHBMb2NhdGlv
bgBTeXN0ZW0uTWFuYWdlbWVudC5BdXRvbWF0aW9uAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3Rl
bS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SdW50aW1lLlNlcmlhbGl6YXRpb24AU3lzdGVtLldlYi5T
Y3JpcHQuU2VyaWFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBnZXRfUnVudGltZUNvbm5lY3Rp
b25Db2xsZWN0aW9uAFNxbFBhcmFtZXRlckNvbGxlY3Rpb24ARGJDb25uZWN0aW9uAFNxbENvbm5l
Y3Rpb24ASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBnZXRfSW5uZXJFeGNlcHRpb24AU2V0RXhj
ZXB0aW9uAFN5c3RlbS5EYXRhLkNvbW1vbgBTeXN0ZW0uUnVudGltZS5TZXJpYWxpemF0aW9uLkpz
b24AQ3VsdHVyZUluZm8ATG9nSW5mbwBPdXRwdXROYW1lTWFwAE91dHB1dE1hcABNaWNyb3NvZnQu
U3FsU2VydmVyLkRUU1J1bnRpbWVXcmFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUGlwZWxpbmVX
cmFwAFN0cmluZ0J1aWxkZXIAPD50X19idWlsZGVyAE91dHB1dDBCdWZmZXIAUGlwZWxpbmVCdWZm
ZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0Nvbm5lY3Rpb25NYW5hZ2Vy
AFNlcnZpY2VQb2ludE1hbmFnZXIAZ2V0X0lkZW50aWZpZXIAc2V0X0lkZW50aWZpZXIASnNvbkhl
bHBlcgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lLldyYXBwZXIATWljcm9zb2Z0LlNx
bFNlcnZlci5EdHMuUGlwZWxpbmUuV3JhcHBlcgBEYlBhcmFtZXRlcgBTcWxQYXJhbWV0ZXIAR2V0
QXdhaXRlcgBnZXRfQ2xpZW50U2VydmVyAERhdGFDb250cmFjdEpzb25TZXJpYWxpemVyAFhtbE9i
amVjdFNlcmlhbGl6ZXIASmF2YVNjcmlwdFNlcmlhbGl6ZXIARXJyb3IALmN0b3IALmNjdG9yAE91
dHB1dElEcwBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNl
cwBTeXN0ZW0uUmVzb3VyY2VzAFNDXzczNWU1ZDdjOGZmYTQ0OTRiZTNkZjdhMmZhZTgwMWRiLlBy
b3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTQ183MzVlNWQ3Yzhm
ZmE0NDk0YmUzZGY3YTJmYWU4MDFkYi5Qcm9wZXJ0aWVzAGdldF9SZWFkT25seVZhcmlhYmxlcwBH
ZXRCeXRlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbkluZGV4ZXMAU2V0dGluZ3MAUHJv
Y2Vzc09yZ3MAPD40X190aGlzAFN5c3RlbS5UaHJlYWRpbmcuVGFza3MAU3lzdGVtLldlYi5FeHRl
bnNpb25zAFBTQWNhZGVtaWNTZXNzaW9ucwBDb25uZWN0aW9ucwBCdWZmZXJzAGdldF9QYXJhbWV0
ZXJzAEZpbmlzaE91dHB1dHMAZ2V0X1N0YXR1cwBzZXRfU3RhdHVzAENyZWF0ZU5ld091dHB1dFJv
d3MAQ29uY2F0AFBTT2JqZWN0AFJlYWRPYmplY3QAZ2V0X0ltbWVkaWF0ZUJhc2VPYmplY3QAV3Jp
dGVPYmplY3QAZHQAU3lzdGVtLk5ldABTb3VyY2VkSWRTZXQAZ2V0X0NsaWVudFNlY3JldABjbGll
bnRTZWNyZXQAc2VjcmV0AFNldEVuZE9mUm93c2V0AFdhaXQAZ2V0X0RlZmF1bHQAR2V0UmVzdWx0
AFNldFJlc3VsdABTeXN0ZW0uRGF0YS5TcWxDbGllbnQAVXNlckNvbXBvbmVudABQYXJlbnRDb21w
b25lbnQAU2NyaXB0Q29tcG9uZW50AGdldF9QYXJlbnQAc2V0X1BhcmVudABnZXRfY291bnQAc2V0
X2NvdW50AFBTU2NyaXB0AEFkZFNjcmlwdABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AFN0
YXJ0AENvbnZlcnQATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QAUHJpbWVPdXRwdXQA
TW92ZU5leHQAU3lzdGVtLlRleHQAR2V0VmFsdWVXaXRoQ29udGV4dABTY3JpcHRDb21wb25lbnRF
dmFsQ29udGV4dABnZXRfRXZhbHVhdG9yQ29udGV4dABBZGRSb3cAVG9BcnJheQBnZXRfQ2xpZW50
S2V5AGtleQBnZXRfQXNzZW1ibHkARXhlY3V0ZU5vblF1ZXJ5AEVtcHR5AAATcwBwAEwAbwBnAEkA
bgBmAG8AABVAAEMAbABpAGUAbgB0AFUASQBEAAANQABFAHIAcgBvAHIAABNAAEYAaQBsAGUAVAB5
AHAAZQAAC0AAQQByAGUAYQAAEUAATABvAGcASQBuAGYAbwAAD3AAYQByAGEAbQAgAAoAAAcoACAA
CgAAOyAAIABbAFAAYQByAGEAbQBlAHQAZQByACgAUABvAHMAaQB0AGkAbwBuACAAPQAgADEAKQBd
ACAACgAAHyAAIABbAHUAcgBpAF0AJABVAHIAaQAgAD0AIAAnAAELLwAnACwAIAAKAAE3IAAgAFsA
UABhAHIAYQBtAGUAdABlAHIAKABQAG8AcwBpAHQAaQBvAG4AIAA9ACAAMgApAF0AADEgACAAWwBz
AHQAcgBpAG4AZwBdACQAUwBlAGMAcgBlAHQAawBlAHkAIAA9ACAAJwABCScALAAgAAoAATsgACAA
WwBQAGEAcgBhAG0AZQB0AGUAcgAoAFAAbwBzAGkAdABpAG8AbgAgAD0AIAAzACkAXQAgAAoAADMg
ACAAWwBzAHQAcgBpAG4AZwBdACQAUABhAHMAcwBwAGgAcgBhAHMAZQAgAD0AIAAnAAEHJwAgAAoA
AQcpACAACgAAAwoAADVmAHUAbgBjAHQAaQBvAG4AIABHAGUAdAAtAEEAYwBjAGUAcwBzAFQAbwBr
AGUAbgAgAAoAAQd7ACAACgAAgIUgACAAIABbAHUAcgBpAF0AJAByAGUAcQB1AGUAcwB0AFUAcgBp
ACAAPQAgACQAdQByAGkALgBTAGMAaABlAG0AZQAgACsAIAAnADoALwAvACcAIAArACAAJAB1AHIA
aQAuAEgAbwBzAHQAIAArACAAJwAvAHQAbwBrAGUAbgAnACAACgABgO8gACAAIAAkAGIAYQBzAGkA
YwBBAHUAdABoACAAPQAgAFsAUwB5AHMAdABlAG0ALgBDAG8AbgB2AGUAcgB0AF0AOgA6AFQAbwBC
AGEAcwBlADYANABTAHQAcgBpAG4AZwAoAFsAUwB5AHMAdABlAG0ALgBUAGUAeAB0AC4ARQBuAGMA
bwBkAGkAbgBnAF0AOgA6AFUAVABGADgALgBHAGUAdABCAHkAdABlAHMAKAAiACQAewBTAGUAYwBy
AGUAdABrAGUAeQB9ADoAJAB7AFAAYQBzAHMAcABoAHIAYQBzAGUAfQAiACkAKQAgAAoAACUgACAA
IAAkAGgAZQBhAGQAZQByAHMAIAA9ACAAQAB7ACAACgAAWyAAIAAgACAAIAAgACAAQQB1AHQAaABv
AHIAaQB6AGEAdABpAG8AbgAgAD0AIAAiAEIAYQBzAGkAYwAgACQAewBiAGEAcwBpAGMAQQB1AHQA
aAB9ACIAIAAKAAAJIAAgACAAfQAAgK8gACAAIAAkAGIAbwBkAHkAIAA9ACAAJwBnAHIAYQBuAHQA
XwB0AHkAcABlAD0AYwBsAGkAZQBuAHQAXwBjAHIAZQBkAGUAbgB0AGkAYQBsAHMAJgBzAGMAbwBw
AGUAPQBzAGMAbwBwAGUAbgBhAG0AZQAxACUAMgAwAHMAYwBvAHAAZQBuAGEAbQBlADIAJQAyADAA
cwBjAG8AcABlAG4AYQBtAGUAeAAnACAACgABOyQAcABhAHIAYQBtAEkAbgB2AG8AawBlAFIAZQBz
AHQATQBlAHQAaABvAGQAIAA9ACAAQAB7ACAACgAAMyAAIAAgAE0AZQB0AGgAbwBkAAkACQAgACAA
IAAgAD0AIAAnAFAAbwBzAHQAJwAgAAoAATkgACAAIABVAHIAaQAJAAkACQAgACAAIAAgAD0AIAAk
AHIAZQBxAHUAZQBzAHQAVQByAGkAIAAKAAA5IAAgACAASABlAGEAZABlAHIAcwAJAAkAIAAgACAA
IAA9ACAAJABoAGUAYQBkAGUAcgBzACAACgAALSAAIAAgAEIAbwBkAHkACQAJACAAIAAgACAAPQAg
ACQAYgBvAGQAeQAgAAoAAHUgACAAIABDAG8AbgB0AGUAbgB0AFQAeQBwAGUACQAgACAAIAAgAD0A
IAAnAGEAcABwAGwAaQBjAGEAdABpAG8AbgAvAHgALQB3AHcAdwAtAGYAbwByAG0ALQB1AHIAbABl
AG4AYwBvAGQAZQBkACcAIAAKAAE5IAAgACAAVQBzAGUAQgBhAHMAaQBjAFAAYQByAHMAaQBuAGcA
IAA9ACAAJAB0AHIAdQBlACAACgAAB30AIAAKAABvIAAgACAAJABhAGMAYwBlAHMAcwAgAD0AIABJ
AG4AdgBvAGsAZQAtAFIAZQBzAHQATQBlAHQAaABvAGQAIABAAHAAYQByAGEAbQBJAG4AdgBvAGsA
ZQBSAGUAcwB0AE0AZQB0AGgAbwBkACAACgABPSAAIAAgAGkAZgAgACgAJABhAGMAYwBlAHMAcwAu
AGEAYwBjAGUAcwBzAF8AdABvAGsAZQBuACkAIAAKAAANIAAgACAAewAgAAoAAC8gACAAIAAgACAA
IAAgAHIAZQB0AHUAcgBuACAAJABhAGMAYwBlAHMAcwAgAAoAAA0gACAAIAB9ACAACgAAEyAAIAAg
AGUAbABzAGUAIAAKAABTIAAgACAAIAAgACAAIAB0AGgAcgBvAHcAIAAiAE4AbwAgAGEAYwBjAGUA
cwBzACAAdABvAGsAZQBuACAAcgBlAHQAdQByAG4AZQBkACIAIAAKAACAu1sAdQByAGkAXQAkAHIA
ZQBxAHUAZQBzAHQAVQByAGkAIAA9ACAAJAB1AHIAaQAuAFMAYwBoAGUAbQBlACAAKwAgACcAOgAv
AC8AJwAgACsAIAAkAHUAcgBpAC4ASABvAHMAdAAgACsAIAAnAC8AaQBtAHMALwBvAG4AZQByAG8A
cwB0AGUAcgAvAHYAMQBwADEALwBvAHIAZwBzAD8AbABpAG0AaQB0AD0AMQAwADAAMAAwACcAIAAK
AAE3JABhAGMAYwBlAHMAcwAgAD0AIABHAGUAdAAtAEEAYwBjAGUAcwBzAFQAbwBrAGUAbgAgAAoA
AUskAGIAZQBhAHIAZQByAFQAbwBrAGUAbgAgAD0AIAAkAGEAYwBjAGUAcwBzAC4AYQBjAGMAZQBz
AHMAXwB0AG8AawBlAG4AIAAKAAAfJABoAGUAYQBkAGUAcgBzACAAPQAgAEAAewAgAAoAAGEgACAA
IABBAHUAdABoAG8AcgBpAHoAYQB0AGkAbwBuAAkACQAgACAAIAA9ACAAIgBCAGUAYQByAGUAcgAg
ACQAewBiAGUAYQByAGUAcgBUAG8AawBlAG4AfQAiACAACgAAMSAAIAAgAE0AZQB0AGgAbwBkAAkA
CQAgACAAIAAgAD0AIAAnAEcAZQB0ACcAIAAKAAFtJAByAGUAcwBwAG8AbgBzAGUAIAA9ACAASQBu
AHYAbwBrAGUALQBSAGUAcwB0AE0AZQB0AGgAbwBkACAAQABwAGEAcgBhAG0ASQBuAHYAbwBrAGUA
UgBlAHMAdABNAGUAdABoAG8AZAAgAAoAAVckAHIAZQBzAHAAbwBuAHMAZQAuAG8AcgBnAHMAIAB8
ACAAQwBvAG4AdgBlAHIAdABUAG8ALQBKAHMAbwBuACAALQBEAGUAcAB0AGgAIAAxADYAIAAKAAFH
YQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AeAAtAHcAdwB3AC0AZgBvAHIAbQAtAHUAcgBsAGUAbgBj
AG8AZABlAGQAIAAKAAEvaQBtAHMALwBvAG4AZQByAG8AcwB0AGUAcgAvAHYAMQBwADEALwBvAHIA
ZwBzAAALdABvAGsAZQBuAAAJTwByAGcAcwAAgJtJAHMATgB1AGwAbAAgAHAAcgBvAHAAZQByAHQA
eQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABGAGEAbABzAGUALgAgAEEAcwBz
AGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAAYwBvAGwAdQBtAG4AIABpAG4A
cwB0AGUAYQBkAC4AABFPAHUAdABwAHUAdAAgADAAAAlQAFMARABCAAATQwBsAGkAZQBuAHQASwBl
AHkAACNDAGwAaQBlAG4AdABPAG4AZQBSAG8AcwB0AGUAcgBJAEQAABlDAGwAaQBlAG4AdABTAGUA
YwByAGUAdAAAGUMAbABpAGUAbgB0AFMAZQByAHYAZQByAABxUwBDAF8ANwAzADUAZQA1AGQANwBj
ADgAZgBmAGEANAA0ADkANABiAGUAMwBkAGYANwBhADIAZgBhAGUAOAAwADEAZABiAC4AUAByAG8A
cABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAXUAByAG8AYwBlAHMAcwBPAHIAZwBz
AAAvRwBlAHQAIABPAHIAZwBzACAALQAgAFIAbwB3AHMAIABBAGQAZABlAGQAOgAgAAEPRwBlAHQA
TwByAGcAcwAAAABXzuTQpa8uTYgRmu63fWVGAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARI5BSAB
AR0CBSABARJhBiABARGAkQQHARE4BRURaQEICAAAFRFpARMABzABAQEQHgAECgEROAggABUSQQET
AAQHARE8BRURaQEcBAoBETwEBwIODgIGDgUAABKApQYgARKApQ4KIAAVEoCpARKArQgVEoCpARKA
rQUgARMACAMgABwDIAAOBCAAEk0FAAASgLEFIAEdBQ4FAAEOHQUEBwESUQUgABGAvQYgAgEOElEG
IAEBEYDJBSAAEoDNCSACEoDRDhGA1QQgAQEcCiADEoDRDhGA1QgDIAAIBiABEoDlDgYAAw4ODg4J
IAMBEnUdCBJ5BSACAQgcAyAAAgMHAQgGAAIIEnkOBSABHQgIBSAAEoDtBSAAEoDxBiABEoD1DgUg
ABKAgQUgABKA+QYgARKA/RwFAAASgQEGIAEcEoEFBwABEjkRgQkFIAASgQ0HIAIBDhKBDQQHARJV
Ah4AByACARKBGRwEIAAdBQUgAQ4dBQUgAQEdBQYgARwSgRkWBwsIEggIDg4ODh0SKBURZQEcEk0S
TQQAAQECBgABARGBIQYwAQEeAA4FCgEdEigFFRJBARwIIAAVEWUBEwAFFRFlARwKMAICARAeABAe
AQkKAhURZQEcETgEIAATAAUgAQESTQUgAQETABAHCBIIHAgdEigIEigSTRJNBQACDg4OCLd6XFYZ
NOCJCImEXc2AgMyRCDG/OFatNk41AwYSFAMGEhgDBhIMAwYSfQQGEoCJBAYSgI0DBhIgAwYSLAQG
HRIsAgYIBgYVEWkBCAMGEggGBhURZQEcBgYVEWkBHAQGHRIoByAAFRJBAQgKIAEVEkEBHB0SKAYg
Aw4ODg4EIAEODgYgAwEIDg4DAAABBCABAQILIAQBCB0IHRJ1EnkFIAEBEn0FAAASgIkFAAASgI0G
AAEBEoCNBAAAEiAGEAEBDh4ABhABAR4ADgQgABIsBSABARIsBSAAHRIsBiABAR0SLAMoAAgDKAAC
AygADgUoABKAgQUIABKAiQUIABKAjQQIABIgBCgAEiwFKAAdEiwIAQAIAAAAAAAeAQABAFQCFldy
YXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NDXzczNWU1ZDdjOGZmYTQ0OTRiZTNk
ZjdhMmZhZTgwMWRiAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjEAAE0BABwuTkVURnJhbWV3
b3JrLFZlcnNpb249djQuNS4yAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRQuTkVUIEZyYW1ld29y
ayA0LjUuMiEBABxTY3JpcHRNYWluKzxQcm9jZXNzT3Jncz5kX182AAAfAQAaU2NyaXB0TWFpbis8
R2V0Um93c0RUPmRfXzcAAAQBAAAACgEAAgAAAAABAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5S
ZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1
cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3Vy
Y2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAeGQAAAAAAAAAAAAA
kmQAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIRkAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNj
b3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAA
AAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWIAAABoEAAAAAAAAAAAAABoENAAA
AFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAABAAAAAQAdefsdAAABAB15
+x0/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBv
AAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4A
ZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBt
AGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEA
RgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAQwBfADcAMwA1AGUANQBkADcAYwA4
AGYAZgBhADQANAA5ADQAYgBlADMAZABmADcAYQAyAGYAYQBlADgAMAAxAGQAYgAAAD4ADwABAEYA
aQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA3ADYANwA1AC4AMwAxADAAMAA1AAAAAABw
ACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADcAMwA1AGUANQBkADcAYwA4AGYA
ZgBhADQANAA5ADQAYgBlADMAZABmADcAYQAyAGYAYQBlADgAMAAxAGQAYgAuAGQAbABsAAAASAAS
AAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAA
IAAyADAAMgAxAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4
ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8ANwAzADUAZQA1AGQA
NwBjADgAZgBmAGEANAA0ADkANABiAGUAMwBkAGYANwBhADIAZgBhAGUAOAAwADEAZABiAC4AZABs
AGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADcAMwA1AGUANQBkADcA
YwA4AGYAZgBhADQANAA5ADQAYgBlADMAZABmADcAYQAyAGYAYQBlADgAMAAxAGQAYgAAAEIADwAB
AFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANwA2ADcANQAuADMAMQAwADAA
NQAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANwA2
ADcANQAuADMAMQAwADAANQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAGAAAAwAAACkNAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                          name="VSTAProjectName"
                          typeConverter="NOTBROWSABLE">SC_735e5d7c8ffa4494be3df7a2fae801db</property>
                        <property
                          dataType="System.String"
                          description="Specifies the programming language used by the script."
                          name="ScriptLanguage"
                          typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read-only variables."
                          name="ReadOnlyVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::ClientKey,User::ClientOneRosterID,User::ClientSecret,User::ClientServer</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read/write variables."
                          name="ReadWriteVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                        <property
                          dataType="System.String"
                          description="List of breakpoints present on the script."
                          isArray="true"
                          name="BreakpointCollection"
                          typeConverter="NOTBROWSABLE">
                          <arrayElements
                            arrayElementCount="0" />
                        </property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataChecksum"
                          typeConverter="NOTBROWSABLE">3047f62f81807544736c857ad78ec817</property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataShaChecksum"
                          typeConverter="NOTBROWSABLE">0f38836e3c42b6aee2b1988d45c153ebff54450b</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Loop thru Clients\Sequence Container\Orgs\Script Component 1.Connections[PSDB]"
                          connectionManagerID="Package.ConnectionManagers[OneRosterNET]"
                          connectionManagerRefId="Package.ConnectionManagers[OneRosterNET]"
                          description="Process Log"
                          name="PSDB" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Loop thru Clients\Sequence Container\Orgs\Script Component 1.Outputs[Output 0]"
                          hasSideEffects="true"
                          name="Output 0">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Orgs\Script Component 1.Outputs[Output 0].Columns[ClientID]"
                              dataType="i4"
                              lineageId="Package\Loop thru Clients\Sequence Container\Orgs\Script Component 1.Outputs[Output 0].Columns[ClientID]"
                              name="ClientID" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Orgs\Script Component 1.Outputs[Output 0].Columns[SourcedId]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Loop thru Clients\Sequence Container\Orgs\Script Component 1.Outputs[Output 0].Columns[SourcedId]"
                              name="SourcedId" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Orgs\Script Component 1.Outputs[Output 0].Columns[Status]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Loop thru Clients\Sequence Container\Orgs\Script Component 1.Outputs[Output 0].Columns[Status]"
                              name="Status" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Orgs\Script Component 1.Outputs[Output 0].Columns[DateLastModified]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Loop thru Clients\Sequence Container\Orgs\Script Component 1.Outputs[Output 0].Columns[DateLastModified]"
                              name="DateLastModified" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Orgs\Script Component 1.Outputs[Output 0].Columns[Name]"
                              codePage="1252"
                              dataType="str"
                              length="150"
                              lineageId="Package\Loop thru Clients\Sequence Container\Orgs\Script Component 1.Outputs[Output 0].Columns[Name]"
                              name="Name" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Orgs\Script Component 1.Outputs[Output 0].Columns[Type]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Loop thru Clients\Sequence Container\Orgs\Script Component 1.Outputs[Output 0].Columns[Type]"
                              name="Type" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Orgs\Script Component 1.Outputs[Output 0].Columns[Identifier]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Loop thru Clients\Sequence Container\Orgs\Script Component 1.Outputs[Output 0].Columns[Identifier]"
                              name="Identifier" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Orgs\Script Component 1.Outputs[Output 0].Columns[ParentSourceId]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Loop thru Clients\Sequence Container\Orgs\Script Component 1.Outputs[Output 0].Columns[ParentSourceId]"
                              name="ParentSourceId" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Loop thru Clients\Sequence Container\Orgs.Paths[Output 0]"
                      endId="Package\Loop thru Clients\Sequence Container\Orgs\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      name="Output 0"
                      startId="Package\Loop thru Clients\Sequence Container\Orgs\Script Component 1.Outputs[Output 0]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Loop thru Clients\Sequence Container\Users"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Users"
              DTS:DTSID="{fc666033-c118-432e-8baa-9caffd10d322}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Users"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server v10; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  BLOBTempStoragePath=""
                  bufferTempStoragePath=""
                  version="1">
                  <components>
                    <component
                      refId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination"
                      componentClassID="Microsoft.OLEDBDestination"
                      contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                      description="OLE DB Destination"
                      name="OLE DB Destination"
                      usesDispositions="true"
                      version="4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[OneRoster].[Users]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepIdentity">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                          name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                          name="FastLoadMaxInsertCommitSize">2147483647</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[OneRoster]"
                          connectionManagerRefId="Package.ConnectionManagers[OneRoster]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Inputs[OLE DB Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[SourcedId]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="SourcedId"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[sourcedId]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Users\Script Component 1.Outputs[Output 0].Columns[SourcedId]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Status]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Status"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[status]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Users\Script Component 1.Outputs[Output 0].Columns[Status]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DateLastModified]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="DateLastModified"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[dateLastModified]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Users\Script Component 1.Outputs[Output 0].Columns[DateLastModified]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[EnabledUser]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="EnabledUser"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[enabledUser]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Users\Script Component 1.Outputs[Output 0].Columns[EnabledUser]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Role]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Role"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[role]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Users\Script Component 1.Outputs[Output 0].Columns[Role]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[UserName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="UserName"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[username]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Users\Script Component 1.Outputs[Output 0].Columns[UserName]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[UserIds]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="UserIds"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[userIds]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Users\Script Component 1.Outputs[Output 0].Columns[UserIds]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[GivenName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="GivenName"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[givenName]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Users\Script Component 1.Outputs[Output 0].Columns[GivenName]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[FamilyName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="FamilyName"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[familyName]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Users\Script Component 1.Outputs[Output 0].Columns[FamilyName]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[MiddleName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="MiddleName"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[middleName]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Users\Script Component 1.Outputs[Output 0].Columns[MiddleName]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Identifier]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Identifier"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[identifier]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Users\Script Component 1.Outputs[Output 0].Columns[Identifier]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Email]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Email"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[email]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Users\Script Component 1.Outputs[Output 0].Columns[Email]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Sms]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Sms"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[sms]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Users\Script Component 1.Outputs[Output 0].Columns[Sms]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Phone]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Phone"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[phone]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Users\Script Component 1.Outputs[Output 0].Columns[Phone]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Grades]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Grades"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[grades]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Users\Script Component 1.Outputs[Output 0].Columns[Grades]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Password]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Password"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[password]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Users\Script Component 1.Outputs[Output 0].Columns[Password]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[AgentSourcedId]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="AgentSourcedId"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[agentSourcedIds]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Users\Script Component 1.Outputs[Output 0].Columns[AgentSourcedId]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[OrgSourcedId]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="OrgSourcedId"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[orgSourcedIds]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Users\Script Component 1.Outputs[Output 0].Columns[OrgSourcedId]" />
                            <inputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ClientID]"
                              cachedDataType="i4"
                              cachedName="ClientID"
                              externalMetadataColumnId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientUID]"
                              lineageId="Package\Loop thru Clients\Sequence Container\Users\Script Component 1.Outputs[Output 0].Columns[ClientID]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[iKey]"
                              dataType="i4"
                              name="iKey" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientUID]"
                              dataType="i4"
                              name="ClientUID" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[sourcedId]"
                              codePage="1252"
                              dataType="str"
                              length="150"
                              name="sourcedId" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[status]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="status" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[dateLastModified]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="dateLastModified" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[enabledUser]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="enabledUser" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[orgSourcedIds]"
                              codePage="1252"
                              dataType="str"
                              length="500"
                              name="orgSourcedIds" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[role]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="role" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[username]"
                              codePage="1252"
                              dataType="str"
                              length="150"
                              name="username" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[userIds]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="userIds" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[givenName]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="givenName" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[familyName]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="familyName" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[middleName]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="middleName" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[identifier]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="identifier" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[email]"
                              codePage="1252"
                              dataType="str"
                              length="150"
                              name="email" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[sms]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="sms" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[phone]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="phone" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[agentSourcedIds]"
                              codePage="1252"
                              dataType="str"
                              length="150"
                              name="agentSourcedIds" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[grades]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="grades" />
                            <externalMetadataColumn
                              refId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[password]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="password" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Destination Error Output"
                          synchronousInputId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Inputs[OLE DB Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Loop thru Clients\Sequence Container\Users\Script Component 1"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;9"
                      description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                      name="Script Component 1"
                      version="9">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Stores the source code of the component"
                          isArray="true"
                          name="SourceCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="30">
                            <arrayElement
                              dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 PSDB
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"PSDB").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String ClientKey
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientKey"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Int32 ClientOneRosterID
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["ClientOneRosterID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientSecret
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientSecret"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientServer
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientServer"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System.Runtime;
using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.IO;
using System.Net;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Runtime.Serialization.Json;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading.Tasks;
using System.Collections.Specialized;
using System.Web;
using System.Management.Automation;
using System.Web.Script.Serialization;

#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    static string pLocation = "ims/oneroster/v1p1/users";
    static string tokenURI = "token";
    static string processType = "Users";
    int currClient = 0;

    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */
        ProcessUsers().Wait();
    }

    public async Task<int> ProcessUsers()
    {
        try
        {

            // The server base address
            string baseURL = Variables.ClientServer;

            //MessageBox.Show(uri);

            ServicePointManager.Expect100Continue = true;
            ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;


            /// The client information used to get the OAuth Access Token from the server.
            string clientId = Variables.ClientKey.ToString();
            string clientSecret = Variables.ClientSecret;
            //string sendAuth = EncodeTo64(Variables.ClientKey + ":" + Variables.ClientSecret);
            //WriteToDatabase(0, "SESSIONS-sendToken", sendAuth);
            // this will hold the Access Token returned from the server.
            //MessageBox.Show(sendToken, "sendToken");
            currClient = Variables.ClientOneRosterID;

            string rawJson = GetJsonString(baseURL, clientId, clientSecret);

            JavaScriptSerializer sr = new JavaScriptSerializer();
            sr.MaxJsonLength = Int32.MaxValue;

            Users[] jsonResponse = sr.Deserialize<Users[]>(rawJson);

            var jRes = await GetRowsDT(jsonResponse);



            return 0;
        }
        catch (Exception ex)
        {
            WriteToDatabase(1, "ProcessUsers", ex.Message);
            return 0;
        }

    }



    private async Task<dynamic> GetRowsDT(Users[] dt)
    {
        int numrows = 0;

        try
        {



            foreach (Users item in dt)
            {


                Output0Buffer.AddRow();
                Output0Buffer.ClientID = Variables.ClientOneRosterID;
                Output0Buffer.SourcedId = item.SourcedId;
                Output0Buffer.Status = item.Status;
                Output0Buffer.DateLastModified = item.DateLastModified;
                Output0Buffer.EnabledUser = item.EnabledUser;
                Output0Buffer.OrgSourcedId = (item.Orgs.Length > 0) ? item.Orgs[0].SourcedId : string.Empty;
                Output0Buffer.Role = item.Role;
                Output0Buffer.UserName = item.UserName;
                Output0Buffer.UserIds = (item.UserIds.Length > 0) ? item.UserIds[0].Identifier : string.Empty;
                Output0Buffer.GivenName = item.GivenName;
                Output0Buffer.FamilyName = item.FamilyName;
                Output0Buffer.MiddleName = item.MiddleName;

                if (item.Identifier != "")
                {
                    if (item.Identifier.Length >= 9)
                    {
                        string rmInit = item.Identifier.Remove(0, 7);
                        string fnlIdentifier = rmInit.Remove(rmInit.Length - 1, 1);
                        Output0Buffer.Identifier = fnlIdentifier;
                    }
                    else
                    {
                        Output0Buffer.Identifier = item.Identifier;
                    }

                }
                else
                {
                    Output0Buffer.Identifier = "";
                }

                Output0Buffer.Email = item.Email;
                Output0Buffer.Sms = item.Sms;
                Output0Buffer.Phone = item.Phone;
                Output0Buffer.AgentSourcedId = string.Join(",", item.Agents);
                Output0Buffer.Grades = string.Join(",", item.Grades);
                Output0Buffer.Password = item.Password;



                numrows += 1;
            }

            WriteToDatabase(0, "Get Users - Rows Added: " + numrows.ToString(), numrows.ToString());
            return null;
        }
        catch (Exception ex)
        {
            WriteToDatabase(1, "GetUsers", ex.Message);
            int rc = numrows;
            throw;
        }
    }



    private string GetJsonString(string url, string clientId, string clientSecret)
    {
        string output = string.Empty;
        try
        {
            PowerShell pshell = PowerShell.Create();

            //Load script with parameters
            string spt = PSScript(url, clientId, clientSecret);

            //Add script to pipeliine
            pshell.AddScript(spt);

            //Execute the powershell script
            var outp = pshell.Invoke();

            output = outp[0].ImmediateBaseObject.ToString();
        }
        catch (Exception ex)
        {
            output = ex.InnerException.ToString();
        }

        return output;
    }





    public string EncodeTo64(string toEncode)
    {
        byte[] toEncodeAsBytes = System.Text.ASCIIEncoding.ASCII.GetBytes(toEncode);
        string returnValue = System.Convert.ToBase64String(toEncodeAsBytes);
        return returnValue;

    }
    public class JsonHelper
    {
        /// <summary>
        /// JSON Serialization
        /// </summary>
        public static string JsonSerializer<T>(T t)
        {
            DataContractJsonSerializer ser = new DataContractJsonSerializer(typeof(T));
            MemoryStream ms = new MemoryStream();
            ser.WriteObject(ms, t);
            string jsonString = Encoding.UTF8.GetString(ms.ToArray());
            ms.Close();
            return jsonString;
        }
        /// <summary>
        /// JSON Deserialization
        /// </summary>
        public static T JsonDeserialize<T>(string jsonString)
        {
            DataContractJsonSerializer ser = new DataContractJsonSerializer(typeof(T));
            MemoryStream ms = new MemoryStream(Encoding.UTF8.GetBytes(jsonString));
            T obj = (T)ser.ReadObject(ms);
            return obj;
        }
    }

    public class Users
    {
        public string SourcedId { get; set; }
        public string Status { get; set; }
        public string DateLastModified { get; set; }
        public string UserName { get; set; }
        public SetIds[] UserIds { get; set; }
        public string EnabledUser { get; set; }
        public string GivenName { get; set; }
        public string FamilyName { get; set; }
        public string MiddleName { get; set; }
        public string Role { get; set; }
        public string Identifier { get; set; }
        public string Email { get; set; }
        public string Sms { get; set; }
        public string Phone { get; set; }
        public string[] Agents { get; set; }
        public SourcedIdSet[] Orgs { get; set; }
        public string[] Grades { get; set; }
        public string Password { get; set; }

    }

    public class SourcedIdSet
    {
        public string Href { get; set; }
        public string SourcedId { get; set; }
        public string Type { get; set; }
    }

    public class SetIds
    {
        public string Type { get; set; }
        public string Identifier { get; set; }
    }

    public class AccessToken
    {
        public string access_token { get; set; }
        public string token_type { get; set; }
        public string expires_in { get; set; }
    }

    public class FileSize
    {
        public string count { get; set; }

    }






    public void WriteToDatabase(int Error, string Area, string LogInfo)
    {
        try
        {
            //MessageBox.Show("WriteToDatabase");
            var ConnString = Connections.PSDB.ConnectionString;

            using (SqlConnection conn = new SqlConnection(Connections.PSDB.ConnectionString))
            {
                if (conn.State != ConnectionState.Open) conn.Open();
                //string insertText = "Insert into OneRoster.LogFile (ClientUID, FileType, Area, LogInfo) Values (@ClientUID, @FileType, @Area, @LogInfo ) ";
                SqlCommand cmd = new SqlCommand("spLogInfo", conn);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("@ClientUID", SqlDbType.Int).Value = Variables.ClientOneRosterID;
                cmd.Parameters.Add("@Error", SqlDbType.Int).Value = Error;
                cmd.Parameters.Add("@FileType", SqlDbType.VarChar, 50).Value = processType;
                cmd.Parameters.Add("@Area", SqlDbType.VarChar, 100).Value = Area;
                cmd.Parameters.Add("@LogInfo", SqlDbType.VarChar, 1000).Value = LogInfo;
                cmd.ExecuteNonQuery();
            }
        }
        catch //(Exception ex)
        {
            throw;
        }
    }



    public string PSScript(string url, string key, string secret)
    {
        StringBuilder param = new StringBuilder();
        param.Append("param \n");
        param.Append("( \n");
        param.Append("  [Parameter(Position = 1)] \n");
        param.Append("  [uri]$Uri = '" + url + "/', \n");
        param.Append("  [Parameter(Position = 2)]");
        param.Append("  [string]$Secretkey = '" + key + "', \n");
        param.Append("  [Parameter(Position = 3)] \n");
        param.Append("  [string]$Passphrase = '" + secret + "' \n");
        param.Append(") \n");
        param.Append("\n");

        string token = PSAccessToken();
        string sessions = PSAcademicSessions();

        param.Append(token);
        param.Append(sessions);



        return param.ToString();
    }

    public string PSAccessToken()
    {
        StringBuilder scpt = new StringBuilder();
        scpt.Append("function Get-AccessToken \n");
        scpt.Append("{ \n");
        scpt.Append("   [uri]$requestUri = $uri.Scheme + '://' + $uri.Host + '/token' \n");
        scpt.Append("\n");
        scpt.Append("   $basicAuth = [System.Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes(\"${Secretkey}:${Passphrase}\")) \n");
        scpt.Append("\n");
        scpt.Append("   $headers = @{ \n");
        scpt.Append("       Authorization = \"Basic ${basicAuth}\" \n");
        scpt.Append("   }");
        scpt.Append("\n");
        scpt.Append("   $body = 'grant_type=client_credentials&scope=scopename1%20scopename2%20scopenamex' \n");
        scpt.Append("\n");
        scpt.Append("$paramInvokeRestMethod = @{ \n");
        scpt.Append("   Method		    = 'Post' \n");
        scpt.Append("   Uri			    = $requestUri \n");
        scpt.Append("   Headers		    = $headers \n");
        scpt.Append("   Body		    = $body \n");
        scpt.Append("   ContentType	    = 'application/x-www-form-urlencoded' \n");
        scpt.Append("   UseBasicParsing = $true \n");
        scpt.Append("} \n");
        scpt.Append("\n");
        scpt.Append("   $access = Invoke-RestMethod @paramInvokeRestMethod \n");
        scpt.Append("\n");
        scpt.Append("   if ($access.access_token) \n");
        scpt.Append("   { \n");
        scpt.Append("       return $access \n");
        scpt.Append("   } \n");
        scpt.Append("   else \n");
        scpt.Append("   { \n");
        scpt.Append("       throw \"No access token returned\" \n");
        scpt.Append("   } \n");
        scpt.Append("} \n");

        return scpt.ToString();
    }


    public string PSAcademicSessions()
    {
        StringBuilder scpt = new StringBuilder();
        scpt.Append("[uri]$requestUri = $uri.Scheme + '://' + $uri.Host + '/ims/oneroster/v1p1/users?limit=10000' \n");
        scpt.Append("\n");
        scpt.Append("$access = Get-AccessToken \n");
        scpt.Append("$bearerToken = $access.access_token \n");
        scpt.Append("\n");
        scpt.Append("$headers = @{ \n");
        scpt.Append("   Authorization		   = \"Bearer ${bearerToken}\" \n");
        scpt.Append("} \n");
        scpt.Append("\n");
        scpt.Append("$paramInvokeRestMethod = @{ \n");
        scpt.Append("   Method		    = 'Get' \n");
        scpt.Append("   Uri			    = $requestUri \n");
        scpt.Append("   Headers		    = $headers \n");
        scpt.Append("   UseBasicParsing = $true \n");
        scpt.Append("} \n");
        scpt.Append("\n");
        scpt.Append("$response = Invoke-RestMethod @paramInvokeRestMethod \n");
        scpt.Append("$response.users | ConvertTo-Json -Depth 16 \n");
        scpt.Append("\n");
        scpt.Append("\n");
        scpt.Append("application/x-www-form-urlencoded \n");

        return scpt.ToString();
    }


}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 ClientID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool ClientID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String SourcedId
    {
        set
        {
            this[1] = value;
        }
    }
    public bool SourcedId_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Status
    {
        set
        {
            this[2] = value;
        }
    }
    public bool Status_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String DateLastModified
    {
        set
        {
            this[3] = value;
        }
    }
    public bool DateLastModified_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String EnabledUser
    {
        set
        {
            this[4] = value;
        }
    }
    public bool EnabledUser_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String OrgSourcedId
    {
        set
        {
            this[5] = value;
        }
    }
    public bool OrgSourcedId_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Role
    {
        set
        {
            this[6] = value;
        }
    }
    public bool Role_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String UserName
    {
        set
        {
            this[7] = value;
        }
    }
    public bool UserName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String UserIds
    {
        set
        {
            this[8] = value;
        }
    }
    public bool UserIds_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String GivenName
    {
        set
        {
            this[9] = value;
        }
    }
    public bool GivenName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String FamilyName
    {
        set
        {
            this[10] = value;
        }
    }
    public bool FamilyName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String MiddleName
    {
        set
        {
            this[11] = value;
        }
    }
    public bool MiddleName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Identifier
    {
        set
        {
            this[12] = value;
        }
    }
    public bool Identifier_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Email
    {
        set
        {
            this[13] = value;
        }
    }
    public bool Email_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(13);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Sms
    {
        set
        {
            this[14] = value;
        }
    }
    public bool Sms_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(14);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Phone
    {
        set
        {
            this[15] = value;
        }
    }
    public bool Phone_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(15);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String AgentSourcedId
    {
        set
        {
            this[16] = value;
        }
    }
    public bool AgentSourcedId_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(16);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Grades
    {
        set
        {
            this[17] = value;
        }
    }
    public bool Grades_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(17);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Password
    {
        set
        {
            this[18] = value;
        }
    }
    public bool Password_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(18);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_176f54a865904212b28b3760b10afb52.Properties.Settings.get_Default():SC_176f54a865904212b28b3760b10afb52.Properties.Sett" +
    "ings")]

namespace SC_176f54a865904212b28b3760b10afb52.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_176f54a865904212b28b3760b10afb52.csproj]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{6AB36CF8-4B13-4C51-A679-D549C6839580}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_176f54a865904212b28b3760b10afb52</RootNamespace>
    <AssemblyName>SC_176f54a865904212b28b3760b10afb52</AssemblyName>
    <TargetFrameworkVersion>v4.5.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System" />
    <Reference Include="System.ComponentModel.Composition" />
    <Reference Include="System.Data" />
    <Reference Include="System.Management.Automation, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Windows\Microsoft.NET\assembly\GAC_MSIL\System.Management.Automation\v4.0_3.0.0.0__31bf3856ad364e35\System.Management.Automation.dll</HintPath>
    </Reference>
    <Reference Include="System.Memory, Version=4.0.1.1, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\Common7\IDE\PublicAssemblies\System.Memory.dll</HintPath>
    </Reference>
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Numerics" />
    <Reference Include="System.Runtime.Serialization" />
    <Reference Include="System.Security" />
    <Reference Include="System.Web" />
    <Reference Include="System.Web.Extensions" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
      <DesignTime>True</DesignTime>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Project]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_176f54a865904212b28b3760b10afb52</msb:CodeName>
		<msb:DisplayName>SC_176f54a865904212b28b3760b10afb52</msb:DisplayName>
		<msb:ProjectId>{6DCFB845-2847-4ED8-9187-4E58831D28FC}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_176f54a865904212b28b3760b10afb52.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_176f54a865904212b28b3760b10afb52")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_176f54a865904212b28b3760b10afb52")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_176f54a865904212b28b3760b10afb52.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_176f54a865904212b28b3760b10afb52.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_176f54a865904212b28b3760b10afb52.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_176f54a865904212b28b3760b10afb52.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_176f54a865904212b28b3760b10afb52.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Stores the binary representation of the component"
                          isArray="true"
                          name="BinaryCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="2">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_176f54a865904212b28b3760b10afb52.dll]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAO3y9F8AAAAAAAAAAOAAIiALATAAAFQAAAAIAAAAAAAAgnIA
AAAgAAAAgAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAADAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAADByAABPAAAAAIAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAKAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAiFIAAAAgAAAAVAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAgAAAAAYAAABWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAKAAAAACAAAAXAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABk
cgAAAAAAAEgAAAACAAUAXDEAABxAAAABAAAAAAAAAHhxAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBUAAAoqHgIoFgAACioyAigEAAAGbxcAAAoqAAAAEzAC
ADcAAAABAAAREgACfSoAAAQSACgYAAAKfSkAAAQSABV9KAAABBIAfCkAAAQSACgBAAArEgB8KQAA
BCgaAAAKKgATMAIAPwAAAAIAABESAAJ9LwAABBIAA30uAAAEEgAoGwAACn0tAAAEEgAVfSwAAAQS
AHwtAAAEEgAoAgAAKxIAfC0AAAQoHQAACioAGzAFAEQAAAADAAARfh4AAAoKKB8AAAoCAwQFKAkA
AAYLJQdvIAAACiZvIQAAChZvIgAACm8jAAAKbyQAAAoK3g1vJQAACm8kAAAKCt4ABioBEAAAAAAG
AC81AA0TAAABRigmAAAKA28nAAAKKCgAAAoqAAAbMAUA9wAAAAQAABECewUAAARvPgAABm8pAAAK
JgJ7BQAABG8+AAAGbykAAApzKgAACgoGbysAAAoXLgYGbywAAApyAQAAcAZzLQAACiUaby4AAAol
by8AAApyFQAAcB5vMAAACgJ7BgAABG9BAAAGjDYAAAFvMQAACiVvLwAACnIrAABwHm8wAAAKA4w2
AAABbzEAAAolby8AAApyOQAAcB8WHzJvMgAACn4DAAAEbzEAAAolby8AAApyTQAAcB8WH2RvMgAA
CgRvMQAACiVvLwAACnJZAABwHxYg6AMAAG8yAAAKBW8xAAAKbzMAAAom3goGLAYGbzQAAArc3gMm
/hoqAAEcAAACACcAwOcACgAAAAAAAAAA8/MAAxIAAAETMAUAwgAAAAMAABFzNQAACiVyawAAcG82
AAAKJiVyewAAcG82AAAKJiVygwAAcG82AAAKJiVyvwAAcANy3wAAcCg3AAAKbzYAAAomJXLrAABw
bzYAAAomJXIjAQBwBHJVAQBwKDcAAApvNgAACiYlcl8BAHBvNgAACiYlcpsBAHAFcs8BAHAoNwAA
Cm82AAAKJiVy1wEAcG82AAAKJiVy3wEAcG82AAAKJgIoCgAABgoCKAsAAAYLJQZvNgAACiYlB282
AAAKJm8kAAAKKgAAEzADAIsBAAAAAAAAczUAAAolcuMBAHBvNgAACiYlchkCAHBvNgAACiYlciEC
AHBvNgAACiYlct8BAHBvNgAACiYlcqgCAHBvNgAACiYlct8BAHBvNgAACiYlcpkDAHBvNgAACiYl
cr8DAHBvNgAACiYlchsEAHBvNgAACiYlct8BAHBvNgAACiYlciUEAHBvNgAACiYlct8BAHBvNgAA
CiYlctYEAHBvNgAACiYlchIFAHBvNgAACiYlckYFAHBvNgAACiYlcoAFAHBvNgAACiYlcroFAHBv
NgAACiYlcugFAHBvNgAACiYlcl4GAHBvNgAACiYlcpgGAHBvNgAACiYlct8BAHBvNgAACiYlcqAG
AHBvNgAACiYlct8BAHBvNgAACiYlchAHAHBvNgAACiYlck4HAHBvNgAACiYlclwHAHBvNgAACiYl
cowHAHBvNgAACiYlcpoHAHBvNgAACiYlck4HAHBvNgAACiYlcq4HAHBvNgAACiYlcowHAHBvNgAA
CiYlcpgGAHBvNgAACiZvJAAACioAEzADAAcBAAAAAAAAczUAAAolcgIIAHBvNgAACiYlct8BAHBv
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
AQC0CQAAAQC0CQAAAQC0CQAAAQC0CQAAAQC0CQAAAQC0CQAAAQC0CQAAAQC0CQAAAQC0CQAAAQC0
CQAAAQC0CQAAAQC0CQAAAQC0CQAAAQC0CQAAAQC0CQAAAQC0CQAAAQC0CQAAAQC0CQAAAQC0CQAA
AQC0CQAAAQC0CQAAAQC0CQAAAQC0CQAAAQC0CQAAAQC0CQAAAQC0CQAAAQC0CQAAAQC0CQAAAQC0
CQAAAQC0CQAAAQC0CQAAAQC0CQAAAQC0CQAAAQDYEgAAAgDPEAAAAwCYEgAABADVDgAAAQACFAAA
AQACFAAAAQC0CQAAAQDiFAAAAQBXCgAAAQC0CQAAAQC0CQAAAQC0CQAAAQC0CQAAAQC0CQAAAQC0
CQAAAQC0CQAAAQC0CQAAAQC0CQAAAQC0CQAAAQC0CQAAAQC0CQAAAQC0CQAAAQC0CQAAAQC0CQAA
AQC0CQAAAQC0CQAAAQC0CQAAAQC0CQAAAQC0CQAAAQC0CQAAAQC0CQAAAQC0CQAAAQC0CQAAAQC0
CQAAAQC0CQAAAQC0CQAAAQBPBgAAAQBPBg8AYQAQAGEACQDCEAEAEQDCEAYAGQDCEAoAKQDCEBAA
MQDCEBAAOQDCEBAAQQDCEBAASQDCEBAAUQDCEBAAWQDCEBAAYQDCEBAAaQDCEAYAeQDCEBUAiQDC
EBsAsQDCEAYAwQCLFAYAwQA/BiEA2QDCEAYACQHCEAYAKQHCECcA+QCTCQYA+QCeCQYAOQGYEwYA
DABwBzkADABQFEIADACSCk8AFABwBzkAFABQFEIAFACSCk8AQQEwFW0ASQFwB3AASQEpFHYASQFW
BX0AHADKDJEAWQElE5cAkQBiCpsAmQBeDp8AYQGMAaQAYQHpEaoAaQElCrAAAQE0CpsAoQDCEBAA
cQF3B7sAcQEfDQYAgQHCEMEAiQGtBsgAgQGtEs8AmQEsAtUAuQGqCd8AmQEsAuQAiQESFe8AwQFo
BwYAyQHCEAYAyQEQBfMAQQEKE/oA4QDCEAEB4QDTDAsB4QCcDAEA0QHCEBAA4QDkFAYA4QCJEwYA
4QCMExEB+QDCEAYA+QCAARkB+QAGEiABkQDCEAYA+QDEASYB2QHyDSwB4QHzBTIB6QF/DzkB+QDT
ET8B8QHKDEUB+QDPFEwB+QGgFFIBcQB7BVkBcQAFFWEBEQHCEGcBMQHCEAYAIQLCEBUAqQDCEAYA
KQI9E3cBYQEyAaQAqQDrFH8BYQFrCoQBMQJiBwYAqQDCEIoBKQIaE5ABOQK6Ca4BOQKkDLMBSQLC
EAYASQKACgEASQLkCboBLABcEM0BNACFAhEBDABuAtwBNACpE/EBmQBKBZsADABxDvYBDACzE/wB
DAA/BiEAQQEiFRQCQQF1Cu8AQQHQCRoCQQFNDSACsQFiCpsAQQEKEycCFABxDvYBFACzE/wBFAA/
BiEAJABzAGIELgALAFUDLgATAF4DLgAbAH0DLgAjAIYDLgArAK8DLgAzAK8DLgA7AK8DLgBDAIYD
LgBLALUDLgBTAK8DLgBbAMwDQwBjAF0EgABrABoEoABrAD0E4wCbAF0EgQF7AF0EoQF7AF0EwQF7
AF0E4QF7AF0E4wF7AF0EAQJ7AF0EAwJ7AF0EIQJ7AF0EQQJ7AF0EYQJ7AF0EgQJ7AF0EoQJ7AF0E
wQJ7AF0E4QJ7AF0EAQN7AF0EIQN7AF0EQQN7AF0EYQN7AF0EgQN7AF0EoQN7AF0EwQN7AF0E4QN7
AF0EAQR7AF0EIQR7AF0EQQR7AF0EYQR7AF0EgQR7AF0EoQR7AF0EwQR7AF0E4QR7AF0EiQWjAH0D
qQWjAH0DwAl7AF0E4Al7AF0EAAp7AF0EIAp7AF0EQAp7AF0EYAp7AF0EgAp7AF0EoAp7AF0EwAp7
AF0E4Ap7AF0EAAt7AF0EIAt7AF0EQAt7AF0EYAt7AF0EgAt7AF0EoAt7AF0EwAt7AF0E4At7AF0E
AAx7AF0EIAx7AF0EQAx7AF0EYAx7AF0EgAx7AF0EoAx7AF0EwAx7AF0E4Ax7AF0EAA17AF0EIA17
AF0EQA17AF0EYA17AF0EgA17AF0EoA17AF0EwA17AF0E4A17AF0EAA57AF0EIA57AF0EYA57AF0E
gA57AF0EoA57AF0EwA57AF0E4A57AF0EAA97AF0EQA97AF0EYA97AF0EgA97AF0EoA97AF0E4A97
AF0EABB7AF0EIBB7AF0EQBB7AF0EYBB7AF0EgBB7AF0EwBB7AF0E4BB7AF0EQBGTAF0EgBGTAF0E
LgBYAGgAtgAVAW8BlwECAgMAAQAFACcABgAoAAcALAAIAC4ACgAvAAsAQQAMAEQADQBGAA4ASQAA
AHcBIQMAABsLJQMAABkCKQMAAGELJQMAAO8SKQMAAI4MJQMAAF0CKQMAAHYLJQMAADcQKQMAAEMM
JQMAAAMCKQMAAEQLJQMAAJoFKQMAAKYLJQMAAOoFKQMAAOELJQMAAPwQKQMAAFoMJQMAAM8FKQMA
AMwLJQMAACEGKQMAAPULJQMAALIFKQMAALYLJQMAALwPKQMAAC0MJQMAAN4KKQMAABwMJQMAAF8S
KQMAAH8MJQMAAIsGKQMAAAsMJQMAABQCKQMAAFwLJQMAAI4RKQMAAG0MJQMAACgFKQMAAJILJQMA
AFgBLQMAAPcUKQMAAGEBIQMAAGgTKQMAAGsQKQMAAG8PMwMAADIHOQMAAKETPwMAABkCKQMAAO8S
KQMAAF0CKQMAAOoFKQMAAPwQRAMAADcQKQMAAM8FKQMAACEGKQMAALIFKQMAAJoFKQMAALwPKQMA
AN4KKQMAAF8SKQMAAIsGKQMAAMsSSgMAAC0STwMAAI4RSgMAACgFKQMAAP0JKQMAABkCKQMAAOMG
KQMAAOMGKQMAALwPKQMAABINKQMAAPsGKQMAADcNKQMAABoUKQMBAA8AAwABABAABQABABEABwAB
ABIACQABABMACwABABQADQABABUADwABABYAEQABABcAEwABABgAFQABABkAFwABABoAGQABABsA
GwABABwAHQABAB0AHwABAB4AIQABAB8AIwABACAAJQABACEAJwABACIAKQABACMAKwABACQALQAB
ACUALwABACYAMQABACcAMwABACgANQABACkANwABACoAOQABACsAOwABACwAPQABAC0APwABAC4A
QQABAC8AQwABADAARQABADEARwABADIASQABADMASwABADQATQACAD4ATwACAEAAUQACAEEAUwAC
AEIAVQACAEMAVwACAEUAWQACAEYAWwABAEcAWwACAEgAXQACAE4AXwABAE8AXwACAFAAYQABAFEA
YQACAFIAYwABAFMAYwACAFQAZQABAFUAZQACAFYAZwABAFcAZwACAFgAaQABAFkAaQACAFoAawAB
AFsAawACAFwAbQABAF0AbQACAF4AbwABAF8AbwACAGAAcQABAGEAcQACAGIAcwABAGMAcwACAGQA
dQABAGUAdQACAGYAdwABAGcAdwACAGgAeQABAGkAeQACAGoAewABAGsAewACAGwAfQABAG0AfQAC
AG4AfwABAG8AfwACAHAAgQABAHEAgQACAHMAgwABAHQAgwACAHUAhQABAHYAhQACAHcAhwABAHgA
hwACAHoAiQABAHsAiQACAHwAiwABAH0AiwACAH8AjQABAIAAjQACAIEAjwABAIIAjwACAIMAkQAB
AIQAkQACAIYAkwABAIcAkwAPABIBIQAPABQBIwAQABYBIQAQABgBIwAzAF0AiAB0AccB1gEEgAAA
AQAAAPsdRnkAAAAAAADwAAAABAAAAAAAAAAAAAAALQLaAQAAAAAMAAAAAAAAAAAAAAA2AjMUAAAA
AAQAAAAAAAAAAAAAAC0CBgcAAAAABAAAAAAAAAAAAAAALQK4AQAAAAAMAAAAAAAAAAAAAAA2Al4U
AAAAAAwAAAAAAAAAAAAAADYC3w4AAAAABAAAAAAAAAAAAAAALQLcDAAAAAADAAAAAAAAAAAAAAA/
AlwNAAAAAAwAAAAAAAAAAAAAADYCAg8AAAAABAAAAAAAAAAAAAAALQKjDQAAAAAEAAAAAAAAAAAA
AAA/AmMSAAAAAAAAAAABAAAAPBEAAAkAAgAKAAIACwACAAwAAgANAAIADgACAA8AAgAQAAIAAAAA
AJcAsQEAAAAAmQCxATMASgA5AGMAuQDBAb8A5wEAAAAAAElEVFNDb21wb25lbnRNZXRhRGF0YTEw
MABJRFRTVmFyaWFibGUxMDAASURUU1J1bnRpbWVDb25uZWN0aW9uQ29sbGVjdGlvbjEwMABJRFRT
UnVudGltZUNvbm5lY3Rpb24xMDAASURUU0Nvbm5lY3Rpb25NYW5hZ2VyMTAwAElEVFNWYXJpYWJs
ZXMxMDAASURUU0V2YWx1YXRvckNvbnRleHQxMDAAPD51X18xAFRhc2tgMQBDb2xsZWN0aW9uYDEA
QXN5bmNUYXNrTWV0aG9kQnVpbGRlcmAxAFRhc2tBd2FpdGVyYDEASW50MzIAU0NfMTc2ZjU0YTg2
NTkwNDIxMmIyOGIzNzYwYjEwYWZiNTIARW5jb2RlVG82NAA8UHJvY2Vzc1VzZXJzPmRfXzcAZ2V0
X1VURjgAPEdldFJvd3NEVD5kX184ADxNb2R1bGU+AGdldF9QU0RCAGdldF9DbGllbnRPbmVSb3N0
ZXJJRABzZXRfQ2xpZW50SUQAR2V0T3V0cHV0SUQAZ2V0X0FTQ0lJAHRva2VuVVJJAFN5c3RlbS5J
TwBHZXRSb3dzRFQAQXJlYQBTeXN0ZW0uRGF0YQBnZXRfQ29tcG9uZW50TWV0YURhdGEAbXNjb3Js
aWIAZ2V0X1NvdXJjZWRJZABzZXRfU291cmNlZElkAHNldF9PcmdTb3VyY2VkSWQAc2V0X0FnZW50
U291cmNlZElkAGNsaWVudElkAEFkZABNYXJrT3V0cHV0c0ZpbmlzaGVkAGdldF9EYXRlTGFzdE1v
ZGlmaWVkAHNldF9EYXRlTGFzdE1vZGlmaWVkAEF3YWl0VW5zYWZlT25Db21wbGV0ZWQAZ2V0X0lz
Q29tcGxldGVkADxTb3VyY2VkSWQ+a19fQmFja2luZ0ZpZWxkADxEYXRlTGFzdE1vZGlmaWVkPmtf
X0JhY2tpbmdGaWVsZAA8UGFzc3dvcmQ+a19fQmFja2luZ0ZpZWxkADxSb2xlPmtfX0JhY2tpbmdG
aWVsZAA8TWlkZGxlTmFtZT5rX19CYWNraW5nRmllbGQAPEdpdmVuTmFtZT5rX19CYWNraW5nRmll
bGQAPFVzZXJOYW1lPmtfX0JhY2tpbmdGaWVsZAA8RmFtaWx5TmFtZT5rX19CYWNraW5nRmllbGQA
PFBob25lPmtfX0JhY2tpbmdGaWVsZAA8VHlwZT5rX19CYWNraW5nRmllbGQAPHRva2VuX3R5cGU+
a19fQmFja2luZ0ZpZWxkADxIcmVmPmtfX0JhY2tpbmdGaWVsZAA8RW1haWw+a19fQmFja2luZ0Zp
ZWxkADxhY2Nlc3NfdG9rZW4+a19fQmFja2luZ0ZpZWxkADxleHBpcmVzX2luPmtfX0JhY2tpbmdG
aWVsZAA8SWRlbnRpZmllcj5rX19CYWNraW5nRmllbGQAPEVuYWJsZWRVc2VyPmtfX0JhY2tpbmdG
aWVsZAA8VXNlcklkcz5rX19CYWNraW5nRmllbGQAPEdyYWRlcz5rX19CYWNraW5nRmllbGQAPE9y
Z3M+a19fQmFja2luZ0ZpZWxkADxTbXM+a19fQmFja2luZ0ZpZWxkADxBZ2VudHM+a19fQmFja2lu
Z0ZpZWxkADxTdGF0dXM+a19fQmFja2luZ0ZpZWxkADxjb3VudD5rX19CYWNraW5nRmllbGQARGJD
b21tYW5kAFNxbENvbW1hbmQAQXBwZW5kAGdldF9QYXNzd29yZABzZXRfUGFzc3dvcmQAZGVmYXVs
dEluc3RhbmNlAHRvRW5jb2RlAGdldF9NZXNzYWdlAEludm9rZQBJRGlzcG9zYWJsZQBSdW50aW1l
VHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBnZXRfUm9sZQBzZXRfUm9sZQBnZXRfTWlkZGxl
TmFtZQBzZXRfTWlkZGxlTmFtZQBnZXRfR2l2ZW5OYW1lAHNldF9HaXZlbk5hbWUAZ2V0X1VzZXJO
YW1lAHNldF9Vc2VyTmFtZQBHZXRSdW50aW1lQ29ubmVjdGlvbkJ5TmFtZQBnZXRfRmFtaWx5TmFt
ZQBzZXRfRmFtaWx5TmFtZQBJQXN5bmNTdGF0ZU1hY2hpbmUAU2V0U3RhdGVNYWNoaW5lAHN0YXRl
TWFjaGluZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBnZXRfUGhvbmUAc2V0X1Bo
b25lAGdldF9UeXBlAHNldF9UeXBlAFNxbERiVHlwZQBzZXRfQ29tbWFuZFR5cGUAVmFsdWVUeXBl
AFNlY3VyaXR5UHJvdG9jb2xUeXBlAHByb2Nlc3NUeXBlAGdldF90b2tlbl90eXBlAHNldF90b2tl
bl90eXBlAFN5c3RlbS5Db3JlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVy
ZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBXcml0ZVRvRGF0YWJhc2UAQ2xvc2UARGlzcG9zZQBD
cmVhdGUAZ2V0X1N0YXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbm5lY3Rpb25TdGF0ZQA8PjFf
X3N0YXRlAER5bmFtaWNBdHRyaWJ1dGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdn
ZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJs
ZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzeW5jU3RhdGVNYWNoaW5lQXR0cmli
dXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBE
ZWJ1Z2dlckhpZGRlbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNz
ZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRl
AEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lT
U2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1
dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQBz
ZXRfVmFsdWUAdmFsdWUAc2V0X0V4cGVjdDEwMENvbnRpbnVlAFJlbW92ZQBGaWxlU2l6ZQBKc29u
RGVzZXJpYWxpemUAZ2V0X0hyZWYAc2V0X0hyZWYARW5jb2RpbmcAU3lzdGVtLlJ1bnRpbWUuVmVy
c2lvbmluZwBUb0Jhc2U2NFN0cmluZwBnZXRfQ29ubmVjdGlvblN0cmluZwBHZXRKc29uU3RyaW5n
AGpzb25TdHJpbmcAVG9TdHJpbmcAR2V0U3RyaW5nAGdldF9MZW5ndGgAc2V0X01heEpzb25MZW5n
dGgAZ2V0X1Rhc2sAU3lzdGVtLkNvbGxlY3Rpb25zLk9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25l
bnRNb2RlbABnZXRfRW1haWwAc2V0X0VtYWlsAFNDXzE3NmY1NGE4NjU5MDQyMTJiMjhiMzc2MGIx
MGFmYjUyLmRsbABQb3dlclNoZWxsAHNldF9DbGllbnRJRF9Jc051bGwAc2V0X1NvdXJjZWRJZF9J
c051bGwAc2V0X09yZ1NvdXJjZWRJZF9Jc051bGwAc2V0X0FnZW50U291cmNlZElkX0lzTnVsbABz
ZXRfRGF0ZUxhc3RNb2RpZmllZF9Jc051bGwAc2V0X1Bhc3N3b3JkX0lzTnVsbABzZXRfUm9sZV9J
c051bGwAc2V0X01pZGRsZU5hbWVfSXNOdWxsAHNldF9HaXZlbk5hbWVfSXNOdWxsAHNldF9Vc2Vy
TmFtZV9Jc051bGwAc2V0X0ZhbWlseU5hbWVfSXNOdWxsAHNldF9QaG9uZV9Jc051bGwAc2V0X0Vt
YWlsX0lzTnVsbABzZXRfSWRlbnRpZmllcl9Jc051bGwAc2V0X0VuYWJsZWRVc2VyX0lzTnVsbABz
ZXRfVXNlcklkc19Jc051bGwAc2V0X0dyYWRlc19Jc051bGwAc2V0X1Ntc19Jc051bGwAc2V0X1N0
YXR1c19Jc051bGwAU2V0TnVsbABzZXRfU2VjdXJpdHlQcm90b2NvbAB1cmwATWVtb3J5U3RyZWFt
AGdldF9JdGVtAHNldF9JdGVtAFN5c3RlbQByZXNvdXJjZU1hbgBQU0FjY2Vzc1Rva2VuAGdldF9h
Y2Nlc3NfdG9rZW4Ac2V0X2FjY2Vzc190b2tlbgBPcGVuAGdldF9leHBpcmVzX2luAHNldF9leHBp
cmVzX2luAFNjcmlwdE1haW4ASm9pbgBwTG9jYXRpb24AU3lzdGVtLk1hbmFnZW1lbnQuQXV0b21h
dGlvbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUnVu
dGltZS5TZXJpYWxpemF0aW9uAFN5c3RlbS5XZWIuU2NyaXB0LlNlcmlhbGl6YXRpb24AU3lzdGVt
LlJlZmxlY3Rpb24AZ2V0X1J1bnRpbWVDb25uZWN0aW9uQ29sbGVjdGlvbgBTcWxQYXJhbWV0ZXJD
b2xsZWN0aW9uAERiQ29ubmVjdGlvbgBTcWxDb25uZWN0aW9uAEludmFsaWRPcGVyYXRpb25FeGNl
cHRpb24AZ2V0X0lubmVyRXhjZXB0aW9uAFNldEV4Y2VwdGlvbgBTeXN0ZW0uRGF0YS5Db21tb24A
U3lzdGVtLlJ1bnRpbWUuU2VyaWFsaXphdGlvbi5Kc29uAEN1bHR1cmVJbmZvAExvZ0luZm8AT3V0
cHV0TmFtZU1hcABPdXRwdXRNYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNSdW50aW1lV3JhcABN
aWNyb3NvZnQuU3FsU2VydmVyLkRUU1BpcGVsaW5lV3JhcABTdHJpbmdCdWlsZGVyADw+dF9fYnVp
bGRlcgBPdXRwdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1ZmZlcgBnZXRfUmVzb3Vy
Y2VNYW5hZ2VyAGdldF9Db25uZWN0aW9uTWFuYWdlcgBTZXJ2aWNlUG9pbnRNYW5hZ2VyAGdldF9J
ZGVudGlmaWVyAHNldF9JZGVudGlmaWVyAEpzb25IZWxwZXIATWljcm9zb2Z0LlNxbFNlcnZlci5E
dHMuUnVudGltZS5XcmFwcGVyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lLldyYXBw
ZXIAZ2V0X0VuYWJsZWRVc2VyAHNldF9FbmFibGVkVXNlcgBEYlBhcmFtZXRlcgBTcWxQYXJhbWV0
ZXIAR2V0QXdhaXRlcgBnZXRfQ2xpZW50U2VydmVyAERhdGFDb250cmFjdEpzb25TZXJpYWxpemVy
AFhtbE9iamVjdFNlcmlhbGl6ZXIASmF2YVNjcmlwdFNlcmlhbGl6ZXIARXJyb3IALmN0b3IALmNj
dG9yAE91dHB1dElEcwBTeXN0ZW0uRGlhZ25vc3RpY3MAZ2V0X1VzZXJJZHMAc2V0X1VzZXJJZHMA
U2V0SWRzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBT
Q18xNzZmNTRhODY1OTA0MjEyYjI4YjM3NjBiMTBhZmI1Mi5Qcm9wZXJ0aWVzLlJlc291cmNlcy5y
ZXNvdXJjZXMAZ2V0X0dyYWRlcwBzZXRfR3JhZGVzAERlYnVnZ2luZ01vZGVzAFNDXzE3NmY1NGE4
NjU5MDQyMTJiMjhiMzc2MGIxMGFmYjUyLlByb3BlcnRpZXMAZ2V0X1JlYWRPbmx5VmFyaWFibGVz
AEdldEJ5dGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBn
ZXRfT3JncwBzZXRfT3JncwA8PjRfX3RoaXMAU3lzdGVtLlRocmVhZGluZy5UYXNrcwBnZXRfU21z
AHNldF9TbXMAU3lzdGVtLldlYi5FeHRlbnNpb25zAFBTQWNhZGVtaWNTZXNzaW9ucwBDb25uZWN0
aW9ucwBCdWZmZXJzAFByb2Nlc3NVc2VycwBnZXRfUGFyYW1ldGVycwBnZXRfQWdlbnRzAHNldF9B
Z2VudHMARmluaXNoT3V0cHV0cwBnZXRfU3RhdHVzAHNldF9TdGF0dXMAQ3JlYXRlTmV3T3V0cHV0
Um93cwBDb25jYXQAUFNPYmplY3QAUmVhZE9iamVjdABnZXRfSW1tZWRpYXRlQmFzZU9iamVjdABX
cml0ZU9iamVjdABkdABTeXN0ZW0uTmV0AFNvdXJjZWRJZFNldABnZXRfQ2xpZW50U2VjcmV0AGNs
aWVudFNlY3JldABzZWNyZXQAU2V0RW5kT2ZSb3dzZXQAV2FpdABnZXRfRGVmYXVsdABHZXRSZXN1
bHQAU2V0UmVzdWx0AFN5c3RlbS5EYXRhLlNxbENsaWVudABjdXJyQ2xpZW50AFVzZXJDb21wb25l
bnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVudABnZXRfY291bnQAc2V0X2NvdW50AFBT
U2NyaXB0AEFkZFNjcmlwdABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AFN0YXJ0AENvbnZl
cnQATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QAUHJpbWVPdXRwdXQATW92ZU5leHQA
U3lzdGVtLlRleHQAR2V0VmFsdWVXaXRoQ29udGV4dABTY3JpcHRDb21wb25lbnRFdmFsQ29udGV4
dABnZXRfRXZhbHVhdG9yQ29udGV4dABBZGRSb3cAVG9BcnJheQBnZXRfQ2xpZW50S2V5AGtleQBn
ZXRfQXNzZW1ibHkARXhlY3V0ZU5vblF1ZXJ5AG9wX0luZXF1YWxpdHkARW1wdHkAAAAAE3MAcABM
AG8AZwBJAG4AZgBvAAAVQABDAGwAaQBlAG4AdABVAEkARAAADUAARQByAHIAbwByAAATQABGAGkA
bABlAFQAeQBwAGUAAAtAAEEAcgBlAGEAABFAAEwAbwBnAEkAbgBmAG8AAA9wAGEAcgBhAG0AIAAK
AAAHKAAgAAoAADsgACAAWwBQAGEAcgBhAG0AZQB0AGUAcgAoAFAAbwBzAGkAdABpAG8AbgAgAD0A
IAAxACkAXQAgAAoAAB8gACAAWwB1AHIAaQBdACQAVQByAGkAIAA9ACAAJwABCy8AJwAsACAACgAB
NyAAIABbAFAAYQByAGEAbQBlAHQAZQByACgAUABvAHMAaQB0AGkAbwBuACAAPQAgADIAKQBdAAAx
IAAgAFsAcwB0AHIAaQBuAGcAXQAkAFMAZQBjAHIAZQB0AGsAZQB5ACAAPQAgACcAAQknACwAIAAK
AAE7IAAgAFsAUABhAHIAYQBtAGUAdABlAHIAKABQAG8AcwBpAHQAaQBvAG4AIAA9ACAAMwApAF0A
IAAKAAAzIAAgAFsAcwB0AHIAaQBuAGcAXQAkAFAAYQBzAHMAcABoAHIAYQBzAGUAIAA9ACAAJwAB
BycAIAAKAAEHKQAgAAoAAAMKAAA1ZgB1AG4AYwB0AGkAbwBuACAARwBlAHQALQBBAGMAYwBlAHMA
cwBUAG8AawBlAG4AIAAKAAEHewAgAAoAAICFIAAgACAAWwB1AHIAaQBdACQAcgBlAHEAdQBlAHMA
dABVAHIAaQAgAD0AIAAkAHUAcgBpAC4AUwBjAGgAZQBtAGUAIAArACAAJwA6AC8ALwAnACAAKwAg
ACQAdQByAGkALgBIAG8AcwB0ACAAKwAgACcALwB0AG8AawBlAG4AJwAgAAoAAYDvIAAgACAAJABi
AGEAcwBpAGMAQQB1AHQAaAAgAD0AIABbAFMAeQBzAHQAZQBtAC4AQwBvAG4AdgBlAHIAdABdADoA
OgBUAG8AQgBhAHMAZQA2ADQAUwB0AHIAaQBuAGcAKABbAFMAeQBzAHQAZQBtAC4AVABlAHgAdAAu
AEUAbgBjAG8AZABpAG4AZwBdADoAOgBVAFQARgA4AC4ARwBlAHQAQgB5AHQAZQBzACgAIgAkAHsA
UwBlAGMAcgBlAHQAawBlAHkAfQA6ACQAewBQAGEAcwBzAHAAaAByAGEAcwBlAH0AIgApACkAIAAK
AAAlIAAgACAAJABoAGUAYQBkAGUAcgBzACAAPQAgAEAAewAgAAoAAFsgACAAIAAgACAAIAAgAEEA
dQB0AGgAbwByAGkAegBhAHQAaQBvAG4AIAA9ACAAIgBCAGEAcwBpAGMAIAAkAHsAYgBhAHMAaQBj
AEEAdQB0AGgAfQAiACAACgAACSAAIAAgAH0AAICvIAAgACAAJABiAG8AZAB5ACAAPQAgACcAZwBy
AGEAbgB0AF8AdAB5AHAAZQA9AGMAbABpAGUAbgB0AF8AYwByAGUAZABlAG4AdABpAGEAbABzACYA
cwBjAG8AcABlAD0AcwBjAG8AcABlAG4AYQBtAGUAMQAlADIAMABzAGMAbwBwAGUAbgBhAG0AZQAy
ACUAMgAwAHMAYwBvAHAAZQBuAGEAbQBlAHgAJwAgAAoAATskAHAAYQByAGEAbQBJAG4AdgBvAGsA
ZQBSAGUAcwB0AE0AZQB0AGgAbwBkACAAPQAgAEAAewAgAAoAADMgACAAIABNAGUAdABoAG8AZAAJ
AAkAIAAgACAAIAA9ACAAJwBQAG8AcwB0ACcAIAAKAAE5IAAgACAAVQByAGkACQAJAAkAIAAgACAA
IAA9ACAAJAByAGUAcQB1AGUAcwB0AFUAcgBpACAACgAAOSAAIAAgAEgAZQBhAGQAZQByAHMACQAJ
ACAAIAAgACAAPQAgACQAaABlAGEAZABlAHIAcwAgAAoAAC0gACAAIABCAG8AZAB5AAkACQAgACAA
IAAgAD0AIAAkAGIAbwBkAHkAIAAKAAB1IAAgACAAQwBvAG4AdABlAG4AdABUAHkAcABlAAkAIAAg
ACAAIAA9ACAAJwBhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB4AC0AdwB3AHcALQBmAG8AcgBtAC0A
dQByAGwAZQBuAGMAbwBkAGUAZAAnACAACgABOSAAIAAgAFUAcwBlAEIAYQBzAGkAYwBQAGEAcgBz
AGkAbgBnACAAPQAgACQAdAByAHUAZQAgAAoAAAd9ACAACgAAbyAAIAAgACQAYQBjAGMAZQBzAHMA
IAA9ACAASQBuAHYAbwBrAGUALQBSAGUAcwB0AE0AZQB0AGgAbwBkACAAQABwAGEAcgBhAG0ASQBu
AHYAbwBrAGUAUgBlAHMAdABNAGUAdABoAG8AZAAgAAoAAT0gACAAIABpAGYAIAAoACQAYQBjAGMA
ZQBzAHMALgBhAGMAYwBlAHMAcwBfAHQAbwBrAGUAbgApACAACgAADSAAIAAgAHsAIAAKAAAvIAAg
ACAAIAAgACAAIAByAGUAdAB1AHIAbgAgACQAYQBjAGMAZQBzAHMAIAAKAAANIAAgACAAfQAgAAoA
ABMgACAAIABlAGwAcwBlACAACgAAUyAAIAAgACAAIAAgACAAdABoAHIAbwB3ACAAIgBOAG8AIABh
AGMAYwBlAHMAcwAgAHQAbwBrAGUAbgAgAHIAZQB0AHUAcgBuAGUAZAAiACAACgAAgL1bAHUAcgBp
AF0AJAByAGUAcQB1AGUAcwB0AFUAcgBpACAAPQAgACQAdQByAGkALgBTAGMAaABlAG0AZQAgACsA
IAAnADoALwAvACcAIAArACAAJAB1AHIAaQAuAEgAbwBzAHQAIAArACAAJwAvAGkAbQBzAC8AbwBu
AGUAcgBvAHMAdABlAHIALwB2ADEAcAAxAC8AdQBzAGUAcgBzAD8AbABpAG0AaQB0AD0AMQAwADAA
MAAwACcAIAAKAAE3JABhAGMAYwBlAHMAcwAgAD0AIABHAGUAdAAtAEEAYwBjAGUAcwBzAFQAbwBr
AGUAbgAgAAoAAUskAGIAZQBhAHIAZQByAFQAbwBrAGUAbgAgAD0AIAAkAGEAYwBjAGUAcwBzAC4A
YQBjAGMAZQBzAHMAXwB0AG8AawBlAG4AIAAKAAAfJABoAGUAYQBkAGUAcgBzACAAPQAgAEAAewAg
AAoAAGEgACAAIABBAHUAdABoAG8AcgBpAHoAYQB0AGkAbwBuAAkACQAgACAAIAA9ACAAIgBCAGUA
YQByAGUAcgAgACQAewBiAGUAYQByAGUAcgBUAG8AawBlAG4AfQAiACAACgAAMSAAIAAgAE0AZQB0
AGgAbwBkAAkACQAgACAAIAAgAD0AIAAnAEcAZQB0ACcAIAAKAAFtJAByAGUAcwBwAG8AbgBzAGUA
IAA9ACAASQBuAHYAbwBrAGUALQBSAGUAcwB0AE0AZQB0AGgAbwBkACAAQABwAGEAcgBhAG0ASQBu
AHYAbwBrAGUAUgBlAHMAdABNAGUAdABoAG8AZAAgAAoAAVkkAHIAZQBzAHAAbwBuAHMAZQAuAHUA
cwBlAHIAcwAgAHwAIABDAG8AbgB2AGUAcgB0AFQAbwAtAEoAcwBvAG4AIAAtAEQAZQBwAHQAaAAg
ADEANgAgAAoAAUdhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB4AC0AdwB3AHcALQBmAG8AcgBtAC0A
dQByAGwAZQBuAGMAbwBkAGUAZAAgAAoAATFpAG0AcwAvAG8AbgBlAHIAbwBzAHQAZQByAC8AdgAx
AHAAMQAvAHUAcwBlAHIAcwAAC3QAbwBrAGUAbgAAC1UAcwBlAHIAcwAAgJtJAHMATgB1AGwAbAAg
AHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABGAGEA
bABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAAYwBv
AGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AABFPAHUAdABwAHUAdAAgADAAAAlQAFMARABCAAAT
QwBsAGkAZQBuAHQASwBlAHkAACNDAGwAaQBlAG4AdABPAG4AZQBSAG8AcwB0AGUAcgBJAEQAABlD
AGwAaQBlAG4AdABTAGUAYwByAGUAdAAAGUMAbABpAGUAbgB0AFMAZQByAHYAZQByAABxUwBDAF8A
MQA3ADYAZgA1ADQAYQA4ADYANQA5ADAANAAyADEAMgBiADIAOABiADMANwA2ADAAYgAxADAAYQBm
AGIANQAyAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAZUAByAG8A
YwBlAHMAcwBVAHMAZQByAHMAAAEAAywAADFHAGUAdAAgAFUAcwBlAHIAcwAgAC0AIABSAG8AdwBz
ACAAQQBkAGQAZQBkADoAIAABEUcAZQB0AFUAcwBlAHIAcwAAAABsLswhtHCESYyU3625+YhMAAQg
AQEIAyAAAQUgAQEREQQgAQEOBSABARI5BSABAR0CBSABARJhBiABARGAkQQHARE8BRURaQEICAAA
FRFpARMABzABAQEQHgAECgERPAggABUSQQETAAQHARFABRURaQEcBAoBEUAEBwIODgIGDgUAABKA
pQYgARKApQ4KIAAVEoCpARKArQgVEoCpARKArQUgARMACAMgABwDIAAOBCAAEk0FAAASgLEFIAEd
BQ4FAAEOHQUEBwESUQUgABGAvQYgAgEOElEGIAEBEYDJBSAAEoDNCSACEoDRDhGA1QQgAQEcCiAD
EoDRDhGA1QgDIAAIBiABEoDlDgYAAw4ODg4JIAMBEnUdCBJ5BSACAQgcAyAAAgMHAQgGAAIIEnkO
BSABHQgIBSAAEoDtBSAAEoDxBiABEoD1DgUgABKAgQUgABKA+QYgARKA/RwFAAASgQEGIAEcEoEF
BwABEjkRgQkFIAASgQ0HIAIBDhKBDQQHARJVAh4AByACARKBGRwEIAAdBQUgAQ4dBQUgAQEdBQYg
ARwSgRkWBwsIEggIDg4ODh0SKBURZQEcEk0STQQAAQECBgABARGBIQYwAQEeAA4FCgEdEigFFRJB
ARwIIAAVEWUBEwAFFRFlARwKMAICARAeABAeAQkKAhURZQEcETwEIAATAAUgAQESTQUgAQETABEH
CRIIHAgdEigIEigOEk0STQUAAgIODgUgAg4ICAYAAg4OHQ4FAAIODg4It3pcVhk04IkIiYRdzYCA
zJEIMb84Vq02TjUCBggDBhIUAwYSGAMGEgwDBhJ9BAYSgIkEBhKAjQMGEiAEBh0SMAMGHQ4EBh0S
LAYGFRFpAQgDBhIIBgYVEWUBHAYGFRFpARwEBh0SKAcgABUSQQEICiABFRJBARwdEigGIAMODg4O
BCABDg4GIAMBCA4OAwAAAQQgAQECCyAEAQgdCB0SdRJ5BSABARJ9BQAAEoCJBQAAEoCNBgABARKA
jQQAABIgBhABAQ4eAAYQAQEeAA4FIAAdEjAGIAEBHRIwBCAAHQ4FIAEBHQ4FIAAdEiwGIAEBHRIs
AygACAMoAAIDKAAOBSgAEoCBBQgAEoCJBQgAEoCNBAgAEiAFKAAdEjAEKAAdDgUoAB0SLAgBAAgA
AAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU0NfMTc2ZjU0
YTg2NTkwNDIxMmIyOGIzNzYwYjEwYWZiNTIAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMQAA
TQEAHC5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC41LjIBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1l
FC5ORVQgRnJhbWV3b3JrIDQuNS4yIgEAHVNjcmlwdE1haW4rPFByb2Nlc3NVc2Vycz5kX183AAAf
AQAaU2NyaXB0TWFpbis8R2V0Um93c0RUPmRfXzgAAAQBAAAACgEAAgAAAAABAAAAAAC0AAAAzsrv
vgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJz
aW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0
ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBB
RFC0AAAAWHIAAAAAAAAAAAAAcnIAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGRyAAAAAAAAAAAA
AAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAA
ADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYgAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8A
VgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEAAAABAEZ5+x0AAAEARnn7HT8AAAAA
AAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQA
BAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBs
AGUASQBuAGYAbwAAAFYDAAABADAAMAAwADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQA
cwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABl
AEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8AMQA3ADYAZgA1ADQAYQA4ADYANQA5ADAA
NAAyADEAMgBiADIAOABiADMANwA2ADAAYgAxADAAYQBmAGIANQAyAAAAPgAPAAEARgBpAGwAZQBW
AGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADcANgA3ADUALgAzADEAMAA0ADYAAAAAAHAAKAABAEkA
bgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AMQA3ADYAZgA1ADQAYQA4ADYANQA5ADAANAAy
ADEAMgBiADIAOABiADMANwA2ADAAYgAxADAAYQBmAGIANQAyAC4AZABsAGwAAABIABIAAQBMAGUA
ZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAy
ADEAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8A
cgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwAxADcANgBmADUANABhADgANgA1
ADkAMAA0ADIAMQAyAGIAMgA4AGIAMwA3ADYAMABiADEAMABhAGYAYgA1ADIALgBkAGwAbAAAAGgA
JAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AMQA3ADYAZgA1ADQAYQA4ADYANQA5
ADAANAAyADEAMgBiADIAOABiADMANwA2ADAAYgAxADAAYQBmAGIANQAyAAAAQgAPAAEAUAByAG8A
ZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA3ADYANwA1AC4AMwAxADAANAA2AAAAAABG
AA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA3ADYANwA1AC4A
MwAxADAANAA2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAcAAADAAAAIQyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAA==]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                          name="VSTAProjectName"
                          typeConverter="NOTBROWSABLE">SC_176f54a865904212b28b3760b10afb52</property>
                        <property
                          dataType="System.String"
                          description="Specifies the programming language used by the script."
                          name="ScriptLanguage"
                          typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read-only variables."
                          name="ReadOnlyVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::ClientKey,User::ClientOneRosterID,User::ClientSecret,User::ClientServer</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read/write variables."
                          name="ReadWriteVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                        <property
                          dataType="System.String"
                          description="List of breakpoints present on the script."
                          isArray="true"
                          name="BreakpointCollection"
                          typeConverter="NOTBROWSABLE">
                          <arrayElements
                            arrayElementCount="0" />
                        </property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataChecksum"
                          typeConverter="NOTBROWSABLE">ef87f083d5bd44ca0dd21377ffd5ebea</property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataShaChecksum"
                          typeConverter="NOTBROWSABLE">57a624b19ba62a5fe7cc5ceb478c4733a9253844</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Loop thru Clients\Sequence Container\Users\Script Component 1.Connections[PSDB]"
                          connectionManagerID="Package.ConnectionManagers[OneRosterNET]"
                          connectionManagerRefId="Package.ConnectionManagers[OneRosterNET]"
                          description="Process Log"
                          name="PSDB" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Loop thru Clients\Sequence Container\Users\Script Component 1.Outputs[Output 0]"
                          hasSideEffects="true"
                          name="Output 0">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Users\Script Component 1.Outputs[Output 0].Columns[ClientID]"
                              dataType="i4"
                              lineageId="Package\Loop thru Clients\Sequence Container\Users\Script Component 1.Outputs[Output 0].Columns[ClientID]"
                              name="ClientID" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Users\Script Component 1.Outputs[Output 0].Columns[SourcedId]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Loop thru Clients\Sequence Container\Users\Script Component 1.Outputs[Output 0].Columns[SourcedId]"
                              name="SourcedId" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Users\Script Component 1.Outputs[Output 0].Columns[Status]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Loop thru Clients\Sequence Container\Users\Script Component 1.Outputs[Output 0].Columns[Status]"
                              name="Status" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Users\Script Component 1.Outputs[Output 0].Columns[DateLastModified]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Loop thru Clients\Sequence Container\Users\Script Component 1.Outputs[Output 0].Columns[DateLastModified]"
                              name="DateLastModified" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Users\Script Component 1.Outputs[Output 0].Columns[EnabledUser]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Loop thru Clients\Sequence Container\Users\Script Component 1.Outputs[Output 0].Columns[EnabledUser]"
                              name="EnabledUser" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Users\Script Component 1.Outputs[Output 0].Columns[OrgSourcedId]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Loop thru Clients\Sequence Container\Users\Script Component 1.Outputs[Output 0].Columns[OrgSourcedId]"
                              name="OrgSourcedId" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Users\Script Component 1.Outputs[Output 0].Columns[Role]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Loop thru Clients\Sequence Container\Users\Script Component 1.Outputs[Output 0].Columns[Role]"
                              name="Role" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Users\Script Component 1.Outputs[Output 0].Columns[UserName]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Loop thru Clients\Sequence Container\Users\Script Component 1.Outputs[Output 0].Columns[UserName]"
                              name="UserName" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Users\Script Component 1.Outputs[Output 0].Columns[UserIds]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Loop thru Clients\Sequence Container\Users\Script Component 1.Outputs[Output 0].Columns[UserIds]"
                              name="UserIds" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Users\Script Component 1.Outputs[Output 0].Columns[GivenName]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Loop thru Clients\Sequence Container\Users\Script Component 1.Outputs[Output 0].Columns[GivenName]"
                              name="GivenName" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Users\Script Component 1.Outputs[Output 0].Columns[FamilyName]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Loop thru Clients\Sequence Container\Users\Script Component 1.Outputs[Output 0].Columns[FamilyName]"
                              name="FamilyName" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Users\Script Component 1.Outputs[Output 0].Columns[MiddleName]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Loop thru Clients\Sequence Container\Users\Script Component 1.Outputs[Output 0].Columns[MiddleName]"
                              name="MiddleName" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Users\Script Component 1.Outputs[Output 0].Columns[Identifier]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Loop thru Clients\Sequence Container\Users\Script Component 1.Outputs[Output 0].Columns[Identifier]"
                              name="Identifier" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Users\Script Component 1.Outputs[Output 0].Columns[Email]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Loop thru Clients\Sequence Container\Users\Script Component 1.Outputs[Output 0].Columns[Email]"
                              name="Email" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Users\Script Component 1.Outputs[Output 0].Columns[Sms]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Loop thru Clients\Sequence Container\Users\Script Component 1.Outputs[Output 0].Columns[Sms]"
                              name="Sms" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Users\Script Component 1.Outputs[Output 0].Columns[Phone]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Loop thru Clients\Sequence Container\Users\Script Component 1.Outputs[Output 0].Columns[Phone]"
                              name="Phone" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Users\Script Component 1.Outputs[Output 0].Columns[AgentSourcedId]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Loop thru Clients\Sequence Container\Users\Script Component 1.Outputs[Output 0].Columns[AgentSourcedId]"
                              name="AgentSourcedId" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Users\Script Component 1.Outputs[Output 0].Columns[Grades]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Loop thru Clients\Sequence Container\Users\Script Component 1.Outputs[Output 0].Columns[Grades]"
                              name="Grades" />
                            <outputColumn
                              refId="Package\Loop thru Clients\Sequence Container\Users\Script Component 1.Outputs[Output 0].Columns[Password]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Loop thru Clients\Sequence Container\Users\Script Component 1.Outputs[Output 0].Columns[Password]"
                              name="Password" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Loop thru Clients\Sequence Container\Users.Paths[Output 0]"
                      endId="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      name="Output 0"
                      startId="Package\Loop thru Clients\Sequence Container\Users\Script Component 1.Outputs[Output 0]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Loop thru Clients\Sequence Container.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{F8139B56-7C57-4D9A-BF84-35188DA83AE9}"
              DTS:From="Package\Loop thru Clients\Sequence Container\Academic Sessions"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\Loop thru Clients\Sequence Container\Courses" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Loop thru Clients\Sequence Container.PrecedenceConstraints[Constraint 2]"
              DTS:CreationName=""
              DTS:DTSID="{7E698C82-32C1-40D5-9E1A-2FD87D7310BA}"
              DTS:From="Package\Loop thru Clients\Sequence Container\Courses"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 2"
              DTS:To="Package\Loop thru Clients\Sequence Container\Classes" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Loop thru Clients\Sequence Container.PrecedenceConstraints[Constraint 3]"
              DTS:CreationName=""
              DTS:DTSID="{6930332C-617F-4770-ABF0-AE003A1A0EB4}"
              DTS:From="Package\Loop thru Clients\Sequence Container\Classes"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 3"
              DTS:To="Package\Loop thru Clients\Sequence Container\Enrollments" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Loop thru Clients\Sequence Container.PrecedenceConstraints[Constraint 4]"
              DTS:CreationName=""
              DTS:DTSID="{DA2096F5-A053-4D76-8509-7C70C393C44D}"
              DTS:From="Package\Loop thru Clients\Sequence Container\Enrollments"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 4"
              DTS:To="Package\Loop thru Clients\Sequence Container\Orgs" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Loop thru Clients\Sequence Container.PrecedenceConstraints[Constraint 5]"
              DTS:CreationName=""
              DTS:DTSID="{68F0286F-414C-4D9D-89D4-6F611907B01D}"
              DTS:From="Package\Loop thru Clients\Sequence Container\Orgs"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 5"
              DTS:To="Package\Loop thru Clients\Sequence Container\Users" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Loop thru Clients\Truncate Tables"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{26D04F81-F15A-49D9-B1B5-573B669E4501}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Truncate Tables"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{9238981A-2F3C-4FFA-86C4-45A523C0CAF5}"
              SQLTask:SqlStatementSource="declare @ClientUID int&#xA;&#xA;set @ClientUID = ?&#xA;&#xA;delete OneRoster.Classes where ClientUID = @ClientUID&#xA;delete OneRoster.Courses where ClientUID = @ClientUID&#xA;delete OneRoster.Demographics where ClientUID = @ClientUID&#xA;delete OneRoster.Enrollments where ClientUID = @ClientUID&#xA;delete OneRoster.Orgs where ClientUID = @ClientUID&#xA;delete OneRoster.Users where ClientUID = @ClientUID&#xA;delete OneRoster.AcademicSessions  where ClientUID = @ClientUID" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@ClientUID"
                SQLTask:DtsVariableName="User::ClientOneRosterID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Loop thru Clients.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{C21D55AB-E401-4E07-8264-1FF80BAB840A}"
          DTS:From="Package\Loop thru Clients\Truncate Tables"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Loop thru Clients\Sequence Container" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{DDD91E54-E0C0-430F-973F-4092653B0F6F}"
          DTS:ObjectName="{DDD91E54-E0C0-430F-973F-4092653B0F6F}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::ClientOneRosterID" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{8C36AFA2-6A63-4E1F-9F19-D29E42B76990}"
          DTS:ObjectName="{8C36AFA2-6A63-4E1F-9F19-D29E42B76990}"
          DTS:ValueIndex="1"
          DTS:VariableName="User::ClientSecret" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{43FC67DB-941A-4508-A4E7-706C71001F22}"
          DTS:ObjectName="{43FC67DB-941A-4508-A4E7-706C71001F22}"
          DTS:ValueIndex="2"
          DTS:VariableName="User::ClientServer" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{122049B8-EC1E-4C4E-BF61-5ABD83C038AF}"
          DTS:ObjectName="{122049B8-EC1E-4C4E-BF61-5ABD83C038AF}"
          DTS:ValueIndex="3"
          DTS:VariableName="User::ClientKey" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{0D614750-D5C5-40B1-956D-A8BC1AC59D9E}"
          DTS:ObjectName="{0D614750-D5C5-40B1-956D-A8BC1AC59D9E}"
          DTS:ValueIndex="4"
          DTS:VariableName="User::AcademicSessions" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{AD943B02-5382-4DDF-BC04-D33544414C48}"
          DTS:ObjectName="{AD943B02-5382-4DDF-BC04-D33544414C48}"
          DTS:ValueIndex="5"
          DTS:VariableName="User::Classes" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{16ED2D05-FBAA-4E80-9153-5811F54F67F3}"
          DTS:ObjectName="{16ED2D05-FBAA-4E80-9153-5811F54F67F3}"
          DTS:ValueIndex="6"
          DTS:VariableName="User::Courses" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Truncate Log"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{6760A9FB-254E-4E3F-8D5C-F7543511201F}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Truncate Log"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{9238981A-2F3C-4FFA-86C4-45A523C0CAF5}"
          SQLTask:SqlStatementSource="declare @ClientUID int&#xA;&#xA;&#xA;--Select * &#xA;delete&#xA;from OneRoster.LogFile&#xA;where  getdate() &gt; dateadd(d, 14, logdate) " xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{CB727747-45F3-4019-95F6-BFEC0977D70E}"
      DTS:From="Package\Data Flow Task - Get Customers"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Truncate Log" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{F7FD3291-C6FE-48EF-9508-148814A980D1}"
      DTS:From="Package\Truncate Log"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Loop thru Clients" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql12">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="231,42"
          Id="Package\Data Flow Task - Get Customers"
          TopLeft="328.971698113208,58.518867924528" />
        <NodeLayout
          Size="155,46"
          Id="Package\Loop thru Clients\Truncate Tables"
          TopLeft="64.858490566038,102" />
        <NodeLayout
          Size="167,42"
          Id="Package\Loop thru Clients\Sequence Container\Academic Sessions"
          TopLeft="21.5,11.5" />
        <EdgeLayout
          Id="Package\Loop thru Clients\Sequence Container.PrecedenceConstraints[Constraint 1]"
          TopLeft="188.5,29.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="35,0"
              Start="0,0"
              End="27.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="27.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="113,42"
          Id="Package\Loop thru Clients\Sequence Container\Classes"
          TopLeft="377.5,10.5" />
        <EdgeLayout
          Id="Package\Loop thru Clients\Sequence Container.PrecedenceConstraints[Constraint 2]"
          TopLeft="339.5,29">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="38,0"
              Start="0,0"
              End="30.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="30.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Loop thru Clients\Sequence Container.PrecedenceConstraints[Constraint 3]"
          TopLeft="435.75,52.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,28"
              Start="0,0"
              End="0,20.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="116,42"
          Id="Package\Loop thru Clients\Sequence Container\Courses"
          TopLeft="223.5,5.5" />
        <NodeLayout
          Size="134,42"
          Id="Package\Loop thru Clients\Sequence Container\Enrollments"
          TopLeft="370.5,80.5" />
        <EdgeLayout
          Id="Package\Loop thru Clients\Sequence Container.PrecedenceConstraints[Constraint 4]"
          TopLeft="370.5,102">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-24,0"
              Start="0,0"
              End="-16.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-16.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="101,42"
          Id="Package\Loop thru Clients\Sequence Container\Orgs"
          TopLeft="245.5,81.5" />
        <EdgeLayout
          Id="Package\Loop thru Clients\Sequence Container.PrecedenceConstraints[Constraint 5]"
          TopLeft="245.5,103.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-30,0"
              Start="0,0"
              End="-22.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-22.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="105,42"
          Id="Package\Loop thru Clients\Sequence Container\Users"
          TopLeft="110.5,83.5" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="529,180"
          Size="529,224"
          Id="Package\Loop thru Clients\Sequence Container"
          TopLeft="361,16" />
        <EdgeLayout
          Id="Package\Loop thru Clients.PrecedenceConstraints[Constraint]"
          TopLeft="219.858490566038,126.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="141.141509433962,0"
              Start="0,0"
              End="133.641509433962,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="133.641509433962,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43.924528301886795"
          IsExpanded="True"
          PanelSize="1012,294"
          Size="1012,338"
          Id="Package\Loop thru Clients"
          TopLeft="256.5,131.990566037736" />
        <NodeLayout
          Size="141,42"
          Id="Package\Truncate Log"
          TopLeft="687,51" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="559.971698113208,75.759433962264">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="127.028301886792,0"
              Start="0,0"
              End="119.528301886792,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="119.528301886792,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="760,93">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38.990566037736"
              Start="0,0"
              End="0,31.490566037736">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.490566037736" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="DATA NEEDED:&#xA;Orgs&#xA;Users&#xA;courses&#xA;Classes&#xA;Enrollment&#xA;Academic Sessions"
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="128,136"
          Id="88452310-04f5-4630-9e61-a905b633ca86"
          TopLeft="1925,127" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Data Flow Task - Get Customers">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="187,42"
          Id="Package\Data Flow Task - Get Customers\Recordset Destination"
          TopLeft="93,164" />
        <NodeLayout
          Size="152,42"
          Id="Package\Data Flow Task - Get Customers\OLE DB Source"
          TopLeft="112,64" />
        <EdgeLayout
          Id="Package\Data Flow Task - Get Customers.Paths[OLE DB Source Output]"
          TopLeft="187.25,106">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,58"
              Start="0,0"
              End="0,50.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,50.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Data Flow Task - Get Customers\OLE DB Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Loop thru Clients\Sequence Container\Academic Sessions">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="163,42"
          Id="Package\Loop thru Clients\Sequence Container\Academic Sessions\Script Component"
          TopLeft="304,94" />
        <NodeLayout
          Size="171,42"
          Id="Package\Loop thru Clients\Sequence Container\Academic Sessions\OLE DB Destination"
          TopLeft="304,232" />
        <EdgeLayout
          Id="Package\Loop thru Clients\Sequence Container\Academic Sessions.Paths[Output 0]"
          TopLeft="387.5,136">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,96"
              Start="0,0"
              End="0,88.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,88.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Loop thru Clients\Sequence Container\Academic Sessions\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Loop thru Clients\Sequence Container\Classes">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="171,42"
          Id="Package\Loop thru Clients\Sequence Container\Classes\OLE DB Destination"
          TopLeft="306.5,236.5" />
        <NodeLayout
          Size="172,42"
          Id="Package\Loop thru Clients\Sequence Container\Classes\Script Component 1"
          TopLeft="313,105" />
        <EdgeLayout
          Id="Package\Loop thru Clients\Sequence Container\Classes.Paths[Output 0]"
          TopLeft="395.5,147">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,89.5"
              Start="0,0"
              End="0,82">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,82" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Loop thru Clients\Sequence Container\Classes\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Loop thru Clients\Sequence Container\Courses">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="171,42"
          Id="Package\Loop thru Clients\Sequence Container\Courses\OLE DB Destination"
          TopLeft="307,256" />
        <NodeLayout
          Size="172,42"
          Id="Package\Loop thru Clients\Sequence Container\Courses\Script Component 1"
          TopLeft="312,107" />
        <EdgeLayout
          Id="Package\Loop thru Clients\Sequence Container\Courses.Paths[Output 0]"
          TopLeft="395.25,149">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,107"
              Start="0,0"
              End="0,99.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,99.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Loop thru Clients\Sequence Container\Courses\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Loop thru Clients\Sequence Container\Enrollments">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="171,42"
          Id="Package\Loop thru Clients\Sequence Container\Enrollments\OLE DB Destination"
          TopLeft="315,214" />
        <NodeLayout
          Size="172,50"
          Id="Package\Loop thru Clients\Sequence Container\Enrollments\Script Component 1"
          TopLeft="307,80" />
        <EdgeLayout
          Id="Package\Loop thru Clients\Sequence Container\Enrollments.Paths[Output 0]"
          TopLeft="396.75,130">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,84"
              Start="0,0"
              End="0,76.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,76.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Loop thru Clients\Sequence Container\Enrollments\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Loop thru Clients\Sequence Container\Orgs">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="171,42"
          Id="Package\Loop thru Clients\Sequence Container\Orgs\OLE DB Destination"
          TopLeft="313,212" />
        <NodeLayout
          Size="172,42"
          Id="Package\Loop thru Clients\Sequence Container\Orgs\Script Component 1"
          TopLeft="349,66" />
        <EdgeLayout
          Id="Package\Loop thru Clients\Sequence Container\Orgs.Paths[Output 0]"
          TopLeft="435,108">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-36.5,104"
              Start="0,0"
              End="-36.5,96.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,48" />
                  <mssgle:CubicBezierSegment
                    Point1="0,48"
                    Point2="0,52"
                    Point3="-4,52" />
                  <mssgle:LineSegment
                    End="-32.5,52" />
                  <mssgle:CubicBezierSegment
                    Point1="-32.5,52"
                    Point2="-36.5,52"
                    Point3="-36.5,56" />
                  <mssgle:LineSegment
                    End="-36.5,96.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Loop thru Clients\Sequence Container\Orgs\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Loop thru Clients\Sequence Container\Users">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="171,42"
          Id="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination"
          TopLeft="367,246" />
        <NodeLayout
          Size="179,47"
          Id="Package\Loop thru Clients\Sequence Container\Users\Script Component 1"
          TopLeft="379,94" />
        <EdgeLayout
          Id="Package\Loop thru Clients\Sequence Container\Users.Paths[Output 0]"
          TopLeft="468.5,141">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-16,105"
              Start="0,0"
              End="-16,97.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,48.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,48.5"
                    Point2="0,52.5"
                    Point3="-4,52.5" />
                  <mssgle:LineSegment
                    End="-12,52.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-12,52.5"
                    Point2="-16,52.5"
                    Point3="-16,56.5" />
                  <mssgle:LineSegment
                    End="-16,97.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Loop thru Clients\Sequence Container\Users\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>