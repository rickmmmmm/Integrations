<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="10/30/2014 10:52:01 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="WLAFRANCE-PC"
  DTS:CreatorName="HAYESSOFT\Warrenla"
  DTS:DTSID="{D7A77F44-45A0-4C73-A2C4-BEEDEF872366}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.132"
  DTS:LocaleID="1033"
  DTS:ObjectName="OneRoster"
  DTS:PackageType="5"
  DTS:VersionBuild="652"
  DTS:VersionGUID="{6A1E1C9A-8730-43D4-B884-937034F505C6}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Flat File Connection Manager]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{693BA06D-28D0-4437-B903-AF9438D1B9FE}"
      DTS:ObjectName="Flat File Connection Manager">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\bkpDB\sampleSSISFile.txt">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="ClientID"
              DTS:DTSID="{C8206270-6578-4A54-96EA-81FCF270704D}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="SourcedId"
              DTS:DTSID="{234D327F-620E-4C06-9684-132AFB66D366}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="Status"
              DTS:DTSID="{0D117A63-B32C-470C-8878-4E94E5917643}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="DateLastModified"
              DTS:DTSID="{41BED812-2F03-4115-90BC-9E9F3B47C822}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="Title"
              DTS:DTSID="{8C95FD26-438E-409C-BC93-365AFBD46F70}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="Type"
              DTS:DTSID="{5C9822FB-DEB6-4126-B295-711AF1BF50AC}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="StartDate"
              DTS:DTSID="{D38A788C-B058-41B9-AA16-65C63E42ABC1}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="EndDate"
              DTS:DTSID="{C972E909-2607-4BCD-A04E-A7962602AAD9}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="ParentSourcedId"
              DTS:DTSID="{A79158AB-E5F2-460A-AEA4-42045DDAFBA6}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="SchoolYear"
              DTS:DTSID="{9B17FB85-00D5-4015-911B-967334D554B8}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[OneRoster]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{9238981A-2F3C-4FFA-86C4-45A523C0CAF5}"
      DTS:ObjectName="OneRoster">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[$Project::OneRosterDB]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[$Project::Server]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=.;Initial Catalog=ImportManagementSystem;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[OneRosterNET]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{25CAA67B-38B5-4F5D-8EC9-109E21C521F5}"
      DTS:ObjectName="OneRosterNET">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[$Project::OneRosterDB]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[$Project::Server]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=.;Initial Catalog=ImportManagementSystem;Integrated Security=True;Application Name=SSIS-PowerSchool-{25CAA67B-38B5-4F5D-8EC9-109E21C521F5}CSS-NBLAKELY\MSSQLSERVER2014.PowerSchoolAPIPlugIn;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4CC2F85C-2F64-440F-AB55-D6605179C6FF}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ClientKey">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{84791237-9068-48B0-84ED-C07D6C38ED92}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ClientName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C5681D49-D1EE-4CE4-ACDE-10DCE6BA5F73}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ClientOneRosterID">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{601DAA9A-D7B8-4F54-93D5-EE33204EFD96}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ClientSecret">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A44D1E2C-4C71-4AFF-8355-F54B2AA526CC}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ClientServer">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{AEBC77A0-3B0B-4BA6-9D00-34316FF48896}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ClientTipWebDatabase">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E91C2158-FCAE-4D20-94EE-A08537BB103B}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="CustomerList">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{27BECB58-365C-4729-BBEF-AF32B9F73B7C}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Error">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{20F1C2CF-576D-4FC6-9EA3-C9298167B0E4}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ErrorMessage">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{266782F4-B06A-4F00-A4C7-5026AA13F3B2}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PageSize">
      <DTS:VariableValue
        DTS:DataType="8">500</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Data Flow Task - Get Customers"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{89CC7015-45BC-4D9A-9883-2658BE7A3076}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Data Flow Task - Get Customers"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server v10; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          BLOBTempStoragePath=""
          bufferTempStoragePath=""
          version="1">
          <components>
            <component
              refId="Package\Data Flow Task - Get Customers\OLE DB Source"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="OLE DB Source"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT ClientUID, ClientUrl, ClientKey, ClientSecret, 
SessionsFile, ClassesFile, CoursesFile, EnrollmentsFile
  FROM [ImportManagementSystem].[OneRoster].[Client]
  Where FileBased = 0
  order by ProcessOrder</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task - Get Customers\OLE DB Source.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OneRoster]"
                  connectionManagerRefId="Package.ConnectionManagers[OneRoster]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientUID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClientUID]"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientUID]"
                      name="ClientUID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientSecret]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClientSecret]"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientSecret]"
                      name="ClientSecret"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientUrl]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClientUrl]"
                      length="50"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientUrl]"
                      name="ClientUrl"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientKey]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClientKey]"
                      length="50"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientKey]"
                      name="ClientKey"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[SessionsFile]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[SessionsFile]"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[SessionsFile]"
                      name="SessionsFile"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClassesFile]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClassesFile]"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClassesFile]"
                      name="ClassesFile"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[CoursesFile]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[CoursesFile]"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[CoursesFile]"
                      name="CoursesFile"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[EnrollmentsFile]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[EnrollmentsFile]"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[EnrollmentsFile]"
                      name="EnrollmentsFile"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClientUID]"
                      dataType="i4"
                      name="ClientUID" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClientSecret]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="ClientSecret" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClientUrl]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="ClientUrl" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClientKey]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="ClientKey" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[SessionsFile]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      name="SessionsFile" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClassesFile]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      name="ClassesFile" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[CoursesFile]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      name="CoursesFile" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[EnrollmentsFile]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      name="EnrollmentsFile" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClientUID]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClientUID]"
                      name="ClientUID" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClientUrl]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClientUrl]"
                      name="ClientUrl" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClientKey]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClientKey]"
                      name="ClientKey" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClientSecret]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClientSecret]"
                      name="ClientSecret" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[SessionsFile]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[SessionsFile]"
                      name="SessionsFile" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClassesFile]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClassesFile]"
                      name="ClassesFile" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[CoursesFile]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[CoursesFile]"
                      name="CoursesFile" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[EnrollmentsFile]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[EnrollmentsFile]"
                      name="EnrollmentsFile" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task - Get Customers\Recordset Destination"
              componentClassID="Microsoft.RecordsetDestination"
              contactInfo="Recordset Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates and populates an in-memory ADO recordset that is available outside of the data flow. Scripts and other package elements can use the recordset. For example, use a recordset to store the names of files that will be loaded into the data warehouse."
              name="Recordset Destination">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the recordset."
                  name="VariableName">User::CustomerList</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input]"
                  hasSideEffects="true"
                  name="Recordset Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[ClientUID]"
                      cachedDataType="i4"
                      cachedName="ClientUID"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientUID]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[ClientSecret]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="150"
                      cachedName="ClientSecret"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientSecret]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[ClientUrl]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="ClientUrl"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientUrl]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[ClientKey]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="ClientKey"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientKey]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[SessionsFile]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="150"
                      cachedName="SessionsFile"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[SessionsFile]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[ClassesFile]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="150"
                      cachedName="ClassesFile"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClassesFile]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[CoursesFile]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="150"
                      cachedName="CoursesFile"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[CoursesFile]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[EnrollmentsFile]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="150"
                      cachedName="EnrollmentsFile"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[EnrollmentsFile]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Data Flow Task - Get Customers.Paths[OLE DB Source Output]"
              endId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input]"
              name="OLE DB Source Output"
              startId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Loop thru Clients"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{EF076D26-2122-4091-9820-02B258557495}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Loop thru Clients">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachADOEnumerator"
        DTS:DTSID="{85CE8E18-46E0-4A0D-965B-8E6296303D09}"
        DTS:ObjectName="{85CE8E18-46E0-4A0D-965B-8E6296303D09}">
        <DTS:ObjectData>
          <FEEADO
            EnumType="EnumerateRowsInFirstTable"
            VarName="User::CustomerList" />
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Loop thru Clients\Academic Sessions"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Academic Sessions"
          DTS:DTSID="{FE3BBE6F-A6B3-4904-88F0-9BD6A78DC5FE}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Academic Sessions"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server v10; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              BLOBTempStoragePath=""
              bufferTempStoragePath=""
              version="1">
              <components>
                <component
                  refId="Package\Loop thru Clients\Academic Sessions\Flat File Destination"
                  componentClassID="Microsoft.FlatFileDestination"
                  contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Flat File Destination"
                  localeId="1033"
                  name="Flat File Destination"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether the data will overwrite or append to the destination file."
                      name="Overwrite">true</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the text to write to the destination file before any data is written."
                      expressionType="Notify"
                      name="Header" />
                    <property
                      dataType="System.Boolean"
                      description="When text qualifier is enabled, specifies whether the text qualifier in the data written to the destination file will be escaped or not."
                      name="EscapeQualifier">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Loop thru Clients\Academic Sessions\Flat File Destination.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[Flat File Connection Manager]"
                      connectionManagerRefId="Package.ConnectionManagers[Flat File Connection Manager]"
                      name="FlatFileConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Loop thru Clients\Academic Sessions\Flat File Destination.Inputs[Flat File Destination Input]"
                      hasSideEffects="true"
                      name="Flat File Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Flat File Destination.Inputs[Flat File Destination Input].Columns[ClientID]"
                          cachedDataType="i4"
                          cachedName="ClientID"
                          externalMetadataColumnId="Package\Loop thru Clients\Academic Sessions\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[ClientID]"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[ClientID]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Flat File Destination.Inputs[Flat File Destination Input].Columns[SourcedId]"
                          cachedDataType="i4"
                          cachedName="SourcedId"
                          externalMetadataColumnId="Package\Loop thru Clients\Academic Sessions\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[SourcedId]"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[SourcedId]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Flat File Destination.Inputs[Flat File Destination Input].Columns[Status]"
                          cachedDataType="i4"
                          cachedName="Status"
                          externalMetadataColumnId="Package\Loop thru Clients\Academic Sessions\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[Status]"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[Status]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Flat File Destination.Inputs[Flat File Destination Input].Columns[DateLastModified]"
                          cachedDataType="i4"
                          cachedName="DateLastModified"
                          externalMetadataColumnId="Package\Loop thru Clients\Academic Sessions\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[DateLastModified]"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[DateLastModified]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Flat File Destination.Inputs[Flat File Destination Input].Columns[Title]"
                          cachedDataType="i4"
                          cachedName="Title"
                          externalMetadataColumnId="Package\Loop thru Clients\Academic Sessions\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[Title]"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[Title]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Flat File Destination.Inputs[Flat File Destination Input].Columns[Type]"
                          cachedDataType="i4"
                          cachedName="Type"
                          externalMetadataColumnId="Package\Loop thru Clients\Academic Sessions\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[Type]"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[Type]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Flat File Destination.Inputs[Flat File Destination Input].Columns[StartDate]"
                          cachedDataType="i4"
                          cachedName="StartDate"
                          externalMetadataColumnId="Package\Loop thru Clients\Academic Sessions\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[StartDate]"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[StartDate]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Flat File Destination.Inputs[Flat File Destination Input].Columns[EndDate]"
                          cachedDataType="i4"
                          cachedName="EndDate"
                          externalMetadataColumnId="Package\Loop thru Clients\Academic Sessions\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[EndDate]"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[EndDate]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Flat File Destination.Inputs[Flat File Destination Input].Columns[ParentSourcedId]"
                          cachedDataType="i4"
                          cachedName="ParentSourcedId"
                          externalMetadataColumnId="Package\Loop thru Clients\Academic Sessions\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[ParentSourcedId]"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[ParentSourcedId]" />
                        <inputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Flat File Destination.Inputs[Flat File Destination Input].Columns[SchoolYear]"
                          cachedDataType="i4"
                          cachedName="SchoolYear"
                          externalMetadataColumnId="Package\Loop thru Clients\Academic Sessions\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[SchoolYear]"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[SchoolYear]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[ClientID]"
                          dataType="i4"
                          name="ClientID" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[SourcedId]"
                          dataType="i4"
                          name="SourcedId" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[Status]"
                          dataType="i4"
                          name="Status" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[DateLastModified]"
                          dataType="i4"
                          name="DateLastModified" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[Title]"
                          dataType="i4"
                          name="Title" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[Type]"
                          dataType="i4"
                          name="Type" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[StartDate]"
                          dataType="i4"
                          name="StartDate" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[EndDate]"
                          dataType="i4"
                          name="EndDate" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[ParentSourcedId]"
                          dataType="i4"
                          name="ParentSourcedId" />
                        <externalMetadataColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[SchoolYear]"
                          dataType="i4"
                          name="SchoolYear" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Loop thru Clients\Academic Sessions\Script Component"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;11"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Script Component"
                  version="12">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="33">
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces

 using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.IO;
using System.Net;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Runtime.Serialization;
using System.Runtime.Serialization.Json;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading.Tasks;
using System.Web.Script.Serialization;
using System.Windows.Forms;



#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    static string pLocation = "ims/oneroster/v1p1/academicSessions";
    static string tokenURI = "token";
    static string processType = "Sessions";

    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();

    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */
        ProcessAcedemicSessions().Wait();
    }


    public async Task<int> ProcessAcedemicSessions()
    {
        try
        {

            // The server base address
            string baseURL = Variables.ClientServer;

            //MessageBox.Show(uri);

            ServicePointManager.Expect100Continue = true;
            ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;


            /// The client information used to get the OAuth Access Token from the server.
            string clientId = Variables.ClientKey.ToString();
            string clientSecret = Variables.ClientSecret;
            string sendToken = EncodeTo64(Variables.ClientKey + ":" + Variables.ClientSecret);
            WriteToDatabase(0, "SESSIONS-sendToken", sendToken);
            // this will hold the Access Token returned from the server.
            //MessageBox.Show(sendToken, "sendToken");

            string accessToken = await GetAccessToken(baseURL, sendToken, clientId, clientSecret);
            //-->>>>>>>>>>>>>> Add : if returns null, stop
            if (accessToken == null)
            {
                WriteToDatabase(1, "Access Token", "GetAccessToken returned null");
                return 0;
            }
            //MessageBox.Show(accessToken, "access token");
           

            string FileSize = await GetFileSize(baseURL, accessToken);
            if (FileSize == null)
            {
                WriteToDatabase(1, "File Size", "GetFileSize returned null");
                return 0;
            }

            var jsonResponse = await GetAcademicSessions(baseURL, accessToken, FileSize);

            return 0;
        }
        catch (Exception ex) { 
            WriteToDatabase(1, "ProcessTeachers", ex.Message);
            return 0;
        }

        }


    /// <summary>
    /// Gets the list of teachers.
    /// </summary>
    /// <param name="baseUrl">The url for the teacher list</param>
    /// <param name="accessToken">Acquired in the previous method</param>
    /// <returns>The page of articles.</returns>
    private async Task<dynamic> GetAcademicSessions(string baseUrl, string accessToken, string FileSize)
    {
        try
        {
            int TotalRecords;
            string pageSize = "500";
            int intPageSize = Convert.ToInt32(pageSize);
            if (Int32.TryParse(FileSize, out TotalRecords))
            {
                int pages = ((TotalRecords - 1) / intPageSize) + 1;
                //MessageBox.Show(pages.ToString(), "pages");

                for (int i = 1; i <= pages; i++)
                {
                    string pagenum = i.ToString();
                    //MessageBox.Show(pagenum, "page number");

                    string uri = baseUrl + pLocation + "?pagesize="+ pageSize + "&page=" + pagenum;
                    var client = new HttpClient();

                    client.BaseAddress = new Uri(uri);

                    client.DefaultRequestHeaders.Accept.Clear();
                    client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));
                    client.DefaultRequestHeaders.Add("Authorization", "Bearer " + accessToken);

                    //MessageBox.Show(uri, "teachers uri");

                    StringContent stringContent = new StringContent("", Encoding.UTF8, "application/json");
                    //StringContent stringContent = new StringContent("page=" + pagenum, Encoding.UTF8, "application/json");
                    //string content;

                    HttpResponseMessage response = await client.PostAsync(new Uri(uri), stringContent);

                    response.EnsureSuccessStatusCode();
                    string jsonString = await response.Content.ReadAsStringAsync();
                    //MessageBox.Show(jsonString, "jsonstring");

                    jsonString = cleanJsonString(jsonString);

                    //Deserialize our JSON
                    DataTable dt = JsonStringToDataTable(jsonString);
                    int numRows = 0;


                    foreach (DataRow row in dt.Rows)
                    {
                        Output0Buffer.AddRow();

                        //Output0Buffer.ClientID = Convert.ToInt32(row["ClientUID"].ToString().Replace("\\", ""));

                        //Output0Buffer.TeacherID = row["TeacherID"].ToString().Replace("\\", "");
                        //Output0Buffer.CampusID = row["CampusID"].ToString().Replace("\\", "");
                        //Output0Buffer.FirstName = row["FirstName"].ToString().Replace("\\", "");
                        //Output0Buffer.LastName = row["LastName"].ToString().Replace("\\", "");
                        //Output0Buffer.MiddleName = row["MiddleName"].ToString().Replace("\\", "");
                        //Output0Buffer.Grade = row["Grade"].ToString().Replace("\\", "");
                        //Output0Buffer.HomeRoom = row["HomeRoom"].ToString().Replace("\\", "");
                        //Output0Buffer.Department = row["Department"].ToString().Replace("\\", "");
                        //Output0Buffer.Phone = row["Phone"].ToString().Replace("\\", "");
                        //Output0Buffer.Email = row["Email"].ToString().Replace("\\", "");
                        //Output0Buffer.Address = row["Address"].ToString().Replace("\\", "");
                        //Output0Buffer.Address2 = row["Address2"].ToString().Replace("\\", "");
                        //Output0Buffer.City = row["City"].ToString().Replace("\\", "");
                        //Output0Buffer.State = row["State"].ToString().Replace("\\", "");
                        //Output0Buffer.Zip = row["zip"].ToString().Replace("\"", "");
                        //Output0Buffer.Deactivate = row["Deactivate"].ToString().Replace("\\", "");

                        numRows += 1;
                    }
                    WriteToDatabase(0, "Get Academic Sessions - Row Count Page Num: " + pagenum, numRows.ToString());
                }
                return null;
            }
            return null;

        }
        catch (Exception ex)
        {
            WriteToDatabase(1, "GetTeachers", ex.Message);
            throw;
        }

    }


    private async Task<string> GetFileSize(string baseURL, string accessToken)
    {
        try
        {
            using (var client = new HttpClient())
            {
                string uri = baseURL + pLocation + "/count";
                client.BaseAddress = new Uri(uri);
                //MessageBox.Show(uri, "teachers uri");

                client.DefaultRequestHeaders.Accept.Clear();
                client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));
                client.DefaultRequestHeaders.Add("Authorization", "Bearer " + accessToken);

                var stringContent = new StringContent("", Encoding.UTF8, "application/json");

                //Get file size
                HttpResponseMessage response = await client.PostAsync(new Uri(uri), stringContent);

                response.EnsureSuccessStatusCode();
                string jsonString = await response.Content.ReadAsStringAsync();

                //string jsonString = response.Content.ToString();//.ReadAsStringAsync();
                //MessageBox.Show(jsonString, "jsonstring");

                //Deserialize our JSON
                var FileSizeObject = JsonHelper.JsonDeserialize<FileSize>(jsonString);

                // return the Access Token.
                var FileSize = FileSizeObject.count;
                //MessageBox.Show(FileSize, "File Size");
                WriteToDatabase(0, "RecordCount", FileSize);
                return FileSize;
            }
        }
        catch (Exception ex)
        {
            //MessageBox.Show(ex.Message);
            //MessageBox.Show(ex.StackTrace);
            WriteToDatabase(1, "GetFileSize", ex.Message);
            //return null;
            throw;
        }

    }

    /// <summary>
    /// This method uses the OAuth Client Credentials Flow to get an Access Token to provide
    /// Authorization to the APIs.
    /// </summary>
    /// <returns></returns>
    private static async Task<string> GetAccessToken(string baseURL, string sendToken, string clientId, string clientSecret)
    {
        try
        {
            using (var client = new HttpClient())
            {

                string uri = baseURL + tokenURI;
                client.BaseAddress = new Uri(uri);

                //MessageBox.Show(uri, "access token uri");

                client.DefaultRequestHeaders.Accept.Clear();
                client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/x-www-form-urlencoded"));
                client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Basic", sendToken);

                List<KeyValuePair<string, string>> postData = new List<KeyValuePair<string, string>>();
                postData.Add(new KeyValuePair<string, string>("grant_type", "client_credentials"));
                FormUrlEncodedContent content = new FormUrlEncodedContent(postData);

                // Post to the Server and parse the response.
                HttpResponseMessage response = await client.PostAsync(new Uri(uri), content);

                response.EnsureSuccessStatusCode();
                string jsonString = await response.Content.ReadAsStringAsync();

                //MessageBox.Show(jsonString, "jsonstring");

                //Deserialize our JSON
                 var accessTokenObject = JsonHelper.JsonDeserialize<AccessToken>(jsonString);

                // return the Access Token.
                var token = accessTokenObject.access_token;
                //MessageBox.Show(token, "access token");
                return token;
            }
        }
        catch (Exception ex)
        {
            //WriteToDatabase(1, "GetAccessToken", ex.Message);
            //MessageBox.Show(ex.Message);
            //MessageBox.Show(ex.StackTrace);
            //return null;
            throw ex;
        }
    }

    public string EncodeTo64(string toEncode)
    {
        byte[] toEncodeAsBytes = System.Text.ASCIIEncoding.ASCII.GetBytes(toEncode);
        string returnValue = System.Convert.ToBase64String(toEncodeAsBytes);
        return returnValue;

    }
    public class JsonHelper
    {
        /// <summary>
        /// JSON Serialization
        /// </summary>
        public static string JsonSerializer<T>(T t)
        {
            DataContractJsonSerializer ser = new DataContractJsonSerializer(typeof(T));
            MemoryStream ms = new MemoryStream();
            ser.WriteObject(ms, t);
            string jsonString = Encoding.UTF8.GetString(ms.ToArray());
            ms.Close();
            return jsonString;
        }
        /// <summary>
        /// JSON Deserialization
        /// </summary>
        public static T JsonDeserialize<T>(string jsonString)
        {
            DataContractJsonSerializer ser = new DataContractJsonSerializer(typeof(T));
            MemoryStream ms = new MemoryStream(Encoding.UTF8.GetBytes(jsonString));
            T obj = (T)ser.ReadObject(ms);
            return obj;
        }
    }

    public class AcademicSessions
    {
        public string ClientID { get; set; }
        public string SourcedId { get; set; }
        public string Status { get; set; }
        public string DateLastModified { get; set; }
        public string Title { get; set; }
        public string Type { get; set; }
        public string StartDate { get; set; }
        public string EndDate { get; set; }
        public string ParentSourcedId { get; set; }
        public string SchoolYear { get; set; }

    }


    public class AccessToken
    {
        public string access_token { get; set; }
        public string token_type { get; set; }
        public string expires_in { get; set; }
    }

    public class FileSize
    {
        public string count { get; set; }

    }



    public DataTable JsonStringToDataTable(string jsonString)
    {
        try
        {
            DataTable dt = new DataTable();
            string[] jsonStringArray = Regex.Split(jsonString.Replace("[", "").Replace("]", ""), "},{");
            List<string> ColumnsName = new List<string>();
            foreach (string jSA in jsonStringArray)
            {
                string[] jsonStringData = Regex.Split(jSA.Replace("{", "").Replace("}", ""), ",");
                foreach (string ColumnsNameData in jsonStringData)
                {
                    try
                    {
                        int idx = ColumnsNameData.IndexOf(":");
                        string ColumnsNameString = ColumnsNameData.Substring(0, idx - 1).Replace("\"", "");
                        if (!ColumnsName.Contains(ColumnsNameString))
                        {
                            ColumnsName.Add(ColumnsNameString);
                        }
                    }
                    catch //(Exception ex)
                    {
                        WriteToDatabase(1, "JsonStringToDataTable: Columns",(string.Format("Error Parsing Column Name : {0}", ColumnsNameData)));
                    }
                }
                break;
            }
            foreach (string AddColumnName in ColumnsName)
            {
                dt.Columns.Add(AddColumnName);
            }
            foreach (string jSA in jsonStringArray)
            {
                string[] RowData = Regex.Split(jSA.Replace("{", "").Replace("}", ""), ",");
                DataRow nr = dt.NewRow();
                foreach (string rowData in RowData)
                {
                    try
                    {
                        int idx = rowData.IndexOf(":");
                        string RowColumns = rowData.Substring(0, idx - 1).Replace("\"", "").Replace("\\", "");
                        string RowDataString = rowData.Substring(idx + 1).Replace("\"", "").Replace("\\", "");
                        nr[RowColumns] = RowDataString;
                    }
                    catch //(Exception ex)
                    {
                        WriteToDatabase(1, "JsonStringToDataTable: For each row", (string.Format("Error Parsing Row  Name : {0}", rowData)));
                        continue;
                    }
                }
                dt.Rows.Add(nr);
            }
            return dt;
        }
        catch (Exception ex)
        {
            WriteToDatabase(1, "JsonStringToDataTable", ex.Message);
            return null;
        }
    }

    public string cleanJsonString(string jsonString)
    {

        jsonString = jsonString.Replace("{\"name\":\"schoolstaff\",\"record\":[", "");
        jsonString = jsonString.Replace("\"_name\":\"schoolstaff\",", "");
        jsonString = jsonString.Replace("],\"@extensions\":\"s_ssf_ncea_x\"}", "");
        jsonString = jsonString.Replace(",\"@extensions\":\"u_schoolstaffuserfields,s_ssf_ncea_x\"", "");

        return jsonString;
    }


    public void WriteToDatabase(int Error, string Area, string LogInfo)
    {
        try
        {
            //MessageBox.Show("WriteToDatabase");
            var ConnString = Connections.PSDB.ConnectionString;

            using (SqlConnection conn = new SqlConnection(Connections.PSDB.ConnectionString))
            {
                if (conn.State != ConnectionState.Open) conn.Open();
                //string insertText = "Insert into OneRoster.LogFile (ClientUID, FileType, Area, LogInfo) Values (@ClientUID, @FileType, @Area, @LogInfo ) ";
                SqlCommand cmd = new SqlCommand("spLogInfo", conn);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("@ClientUID", SqlDbType.Int).Value = Variables.ClientOneRosterID;
                cmd.Parameters.Add("@Error", SqlDbType.Int).Value = Error;
                cmd.Parameters.Add("@FileType", SqlDbType.VarChar,50).Value = processType;
                cmd.Parameters.Add("@Area", SqlDbType.VarChar, 100).Value = Area;
                cmd.Parameters.Add("@LogInfo", SqlDbType.VarChar, 1000).Value = LogInfo;
                cmd.ExecuteNonQuery();
            }
        }
        catch //(Exception ex)
        {
            throw;
        }
    }
}




]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[packages.config]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="Newtonsoft.Json" version="12.0.1" targetFramework="net45" />
</packages>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 PSDB
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"PSDB").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String ClientKey
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientKey"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Int32 ClientOneRosterID
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["ClientOneRosterID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientSecret
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientSecret"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientServer
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientServer"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_9cc764db5dc84a06abd71b37420e3e86.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{FF2D54D4-CBFE-43F2-A697-E0F017938BC8}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_9cc764db5dc84a06abd71b37420e3e86</RootNamespace>
    <AssemblyName>SC_9cc764db5dc84a06abd71b37420e3e86</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Runtime.Serialization" />
    <Reference Include="System.Security" />
    <Reference Include="System.Web" />
    <Reference Include="System.Web.Extensions" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="packages.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_9cc764db5dc84a06abd71b37420e3e86.Properties.Settings.get_Default():SC_9cc764db5dc84a06abd71b37420e3e86.Properties.Sett" +
    "ings")]

namespace SC_9cc764db5dc84a06abd71b37420e3e86.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 ClientID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool ClientID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 SourcedId
    {
        set
        {
            this[1] = value;
        }
    }
    public bool SourcedId_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Status
    {
        set
        {
            this[2] = value;
        }
    }
    public bool Status_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 DateLastModified
    {
        set
        {
            this[3] = value;
        }
    }
    public bool DateLastModified_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Title
    {
        set
        {
            this[4] = value;
        }
    }
    public bool Title_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Type
    {
        set
        {
            this[5] = value;
        }
    }
    public bool Type_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 StartDate
    {
        set
        {
            this[6] = value;
        }
    }
    public bool StartDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 EndDate
    {
        set
        {
            this[7] = value;
        }
    }
    public bool EndDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 ParentSourcedId
    {
        set
        {
            this[8] = value;
        }
    }
    public bool ParentSourcedId_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 SchoolYear
    {
        set
        {
            this[9] = value;
        }
    }
    public bool SchoolYear_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_9cc764db5dc84a06abd71b37420e3e86</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_9cc764db5dc84a06abd71b37420e3e86</msb:DisplayName>
    <msb:ProjectId>{CD42397D-771E-4C53-BF37-5A00E8489B5A}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_9cc764db5dc84a06abd71b37420e3e86.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="packages.config" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:Breakpoint Include="cfba015fcc4c4b219e81a456efcad7fc">
      <msb:FileName>main.cs</msb:FileName>
      <msb:ColumnNumber>17</msb:ColumnNumber>
      <msb:Enabled>True</msb:Enabled>
      <msb:LineNumber>347</msb:LineNumber>
      <msb:Condition>
      </msb:Condition>
      <msb:ConditionType>1</msb:ConditionType>
      <msb:Language>C#</msb:Language>
      <msb:HitCountType>1</msb:HitCountType>
      <msb:HitCountTarget>1</msb:HitCountTarget>
    </msb:Breakpoint>
    <msb:Breakpoint Include="5b4a4e518357424893335607e4d75271">
      <msb:FileName>main.cs</msb:FileName>
      <msb:LineNumber>331</msb:LineNumber>
      <msb:ColumnNumber>13</msb:ColumnNumber>
      <msb:Enabled>True</msb:Enabled>
      <msb:ConditionType>1</msb:ConditionType>
      <msb:Condition>
      </msb:Condition>
      <msb:Language>C#</msb:Language>
      <msb:HitCountType>1</msb:HitCountType>
      <msb:HitCountTarget>1</msb:HitCountTarget>
    </msb:Breakpoint>
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_9cc764db5dc84a06abd71b37420e3e86")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_9cc764db5dc84a06abd71b37420e3e86")]
[assembly: AssemblyCopyright("Copyright @  2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_9cc764db5dc84a06abd71b37420e3e86.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_9cc764db5dc84a06abd71b37420e3e86.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_9cc764db5dc84a06abd71b37420e3e86.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_9cc764db5dc84a06abd71b37420e3e86.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_9cc764db5dc84a06abd71b37420e3e86.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_9cc764db5dc84a06abd71b37420e3e86.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[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
BgCECSsNBgApCSsNBgBCCSsNBgCBCCsNBgCcCF8KCgBdCUAGBgCzBjUMBgBmCDgQBgC9AEERDgDZ
BzgQBgCuEjUMEgCnBZsCBgAHAcYCUwADEAAAEgB/FJsCBgDTDTUMEgCoDRgTBgAWDIoCBgDqBzgQ
BgCNBjUMBgAQBjgQBgD5ADgQBgDgADgQBgC1CCUQFgCVE4UOFgCHBYUOBgD0D7gRBgCxBTUMFgAu
E4UOFgB/E4UOCgDjDkAGGgDUDkAGCgAmDkAGCgBXE0AGHgBmADkPBgAFCCUQBgD0DlgQBgASDucM
IgCpB+IKIgA2COIKIgAlB9IMBgDdCkERBgBWCi8UBgDxEzUMBgDECjUMIgCVFJkREgA9DZsCEgC9
DJsCEgCJDZsCEgCbDd0NEgC+B5sCEgA3BRgTEgAtBd0NEgCBBpsCEgByDRgTEgCWDxgTEgBzBpsC
BgAQATUMEgCKD90NBgC2DTUMJgABAGEPJgAqAGEPJgBNAGEPHgB/ADkPHgAaADkPpwBPFAAAHgCQ
ADkPBgC9BTUMBgC1FCsNKgC/D/ANKgDaD/wMBgAcDIoCIgAaD7USIgCXBrUSIgDVCjUMFgD7EdcR
FgDEANcRFgD2CdcRFgDvEdcRFgCjE4UOEgAKB5sCFgDcCdcRBgBHAcYCBgCvAMYCAAAAACECAAAA
AAEAAQABABAAsgwAABAAAQABAAEAEADGDgAAmQAEAA4AAQAQADkTAAClAAQAJgABABAAyxEAAEkA
BwArAAEAEAD2EAAASQAIAC0AAAAQAF8QuxBJAAkAMgAAARAALhG7EMEACwA2AAIAEAAuDwAASQAM
ADkAAgAQAHARAABJAAwAPAACABAAVQwAAEkAFgBRAAIAEAA1CgAASQAZAFgAAwEQALkBAABtABoA
WwADARAA1wEAAG0AIQBdAAMBEAD6AQAAbQAtAF8AAwEQAAwCAABtADUAYQARAMgM7AMRAHkC7AMR
AKwG7AMGAMsR7wMGAPYQ8wMGAMYO9wMBAEcT+wMBAEcT+wMRADwMAAQRAPoGBQQRAEoFCgQBALMD
7AMBAM0D7AMBAP4E7AMBAAkE7AMBACsE7AMBAEIE7AMBAI0E7AMBAHQE7AMBAOgD7AMBAOIE7AMB
AKgE7AMBAFgE7AMBAMYE7AMBABYF7AMGAM4HDgQGALkOEQQGADcRGAQBABYB7AMBAFYB7AMBAKgA
HAQBAEABIwQGAM4HDgQGALkOKgQGADUK7AMGAA4M7AMGAGEM7AMGADcRGAQBACQB7AMBAGgBDgQB
AH8BDgQBAIcB7AMBAKgAMQQBAEABHAQGAM4HDgQGALkOOgQGAIIC7AMGAGEM7AMGADcRGAQBADMB
QQQBAKgAMQQBAEABHAQGAM4HDgQGALkOOgQGAIIC7AMGAEgM7AMBADMBQQQBAKgAMQQBAEABHARQ
IAAAAADGALsJBgABAFggAAAAAMYAxgkGAAEAYCAAAAAAxgB8EgYAAQBwIAAAAACGAIERRgQBALQg
AAAAAIEAbRFOBAEAECEAAAAAgQAyClkEBQBkIQAAAACRAFIMYwQHAK8hAAAAAIYAdAFvBAsAxCEA
AAAAhgCbBXQEDACIJAAAAACGAJ0KbwQNAOAkAAAAAIYAPQd6BA4AACYAAAAAhhgOEAYAEQAIJgAA
AACRGBQQgQQRACgmAAAAAIYYDhBrAREAMyYAAAAAhghWAgEAFABCJgAAAACGCCALhQQVAFkmAAAA
AIYICwMBABYAaCYAAAAAhgg0C4UEFwB/JgAAAACGCGgSAQAYAI4mAAAAAIYI3wuFBBkApSYAAAAA
hgh3AwEAGgC0JgAAAACGCGQLhQQbAMsmAAAAAIYI6wUBABwA2iYAAAAAhgiAC4UEHQDxJgAAAACG
CGoGAQAeAAAnAAAAAIYIkQuFBB8AFycAAAAAhgiKBwEAIAAmJwAAAACGCLQLhQQhAD0nAAAAAIYI
cAcBACIATCcAAAAAhgihC4UEIwBjJwAAAACGCC0DAQAkAHInAAAAAIYISQuFBCUAiScAAAAAhgik
DgEAJgCZJwAAAACGCMkLhQQnALEnAAAAAIYAhxQGACgAuScAAAAAhgDeEgYAKADBJwAAAACGAOES
CgEoAMknAAAAAIYYDhAGACgA6ScAAAAAxgFPEgYAKADrJwAAAACBAE4DBgAoAAgoAAAAAMYAGhSK
BCgA6ScAAAAAxgF8EgYALABdKAAAAACGGA4QmAQsAGwoAAAAAIYIKgKiAS0AjSgAAAAAhhgOEJgE
LQCcKAAAAACGCKMUKgEuAMIoAAAAAIYIMwJnAS4A6CgAAAAAhgjAEioBLgAOKQAAAACGCK4PKgEu
ADQpAAAAAIMYDhAGAC4APCkAAAAAkwjwDp8ELgBoKQAAAACTCOIGpQQuAG8pAAAAAJMI7garBC4A
dykAAAAAlgj4ErIELwB+KQAAAACGGA4QBgAvAIYpAAAAAJEYFBCBBC8AlCkAAAAAlgDLD7cELwDY
KQAAAACWAD4KvgQwADQpAAAAAIYYDhAGADEAECoAAAAAhghJAioBMQAYKgAAAACGCFYCEAAxACEq
AAAAAIYI/QIqATIAKSoAAAAAhggLAxAAMgAyKgAAAACGCF0SKgEzADoqAAAAAIYIaBIQADMAQyoA
AAAAhghiAyoBNABLKgAAAACGCHcDEAA0AFQqAAAAAIYI4QUqATUAXCoAAAAAhgjrBRAANQBlKgAA
AACGCGEGKgE2AG0qAAAAAIYIagYQADYAdioAAAAAhgh8ByoBNwB+KgAAAACGCIoHEAA3AIcqAAAA
AIYIZAcqATgAjyoAAAAAhghwBxAAOACYKgAAAACGCBkDKgE5AKAqAAAAAIYILQMQADkAqSoAAAAA
hgiVDioBOgCxKgAAAACGCKQOEAA6ADQpAAAAAIYYDhAGADsAuioAAAAAhghtDCoBOwDCKgAAAACG
CH4MEAA7AMsqAAAAAIYIuAYqATwA0yoAAAAAhgjHBhAAPADcKgAAAACGCJQMKgE9AOQqAAAAAIYI
owwQAD0ANCkAAAAAhhgOEAYAPgDtKgAAAACGCK8TKgE+APUqAAAAAIYIuRMQAD4ANCkAAAAAhhgO
EAYAPwAAKwAAAADhASYUBgA/AKwtAAAAAOEBIwYhAD8AvC0AAAAA4QEmFAYAQAAIMQAAAADhASMG
IQBAABgxAAAAAOEBJhQGAEEAiDMAAAAA4QEjBiEAQQCYMwAAAADhASYUBgBCANQ1AAAAAOEBIwYh
AEIAAAAAAAAAAAABAA4MAAACAGEMAAADADUKAAABAIICAAACAGEMAAABAIICAAACAEgMAAADAEED
AAAEANESAAABAHIFAAABAK0KAAABAK0KAAABAO4PAAACAJYCAAADAB4OAAABAOkOAAACAAkRAAAD
ADQOAAABABYKAAABABYKAAABABYKAAABABYKAAABABYKAAABABYKAAABABYKAAABABYKAAABABYK
AAABABYKAAABABYKAAABABYKAAABABYKAAABABYKAAABABYKAAABABYKAAABABYKAAABABYKAAAB
ABYKAAABABYKAAABAFUSAAACABsQAAADACgSAAAEADQOAAABAF0TAAABAF0TAAABABYKAAABAH0U
AAABAK0KAAABABYKAAABABYKAAABABYKAAABABYKAAABABYKAAABABYKAAABABYKAAABABYKAAAB
ABYKAAABABYKAAABABYKAAABABYKAAABABYKAAABABYKAAABADMGAAABADMGAAABADMGAAABADMG
DQBxAA4AcQAPAHEAEABxAAkADhABABEADhAGABkADhAKACkADhAQADEADhAQADkADhAQAEEADhAQ
AEkADhAQAFEADhAQAFkADhAQAGEADhAQAGkADhAGAHkADhAVAIkADhAbANEADhAGAOEAJhQGAOEA
IwYhAPkADhAGAFkBDhAGAHkBDhAnAEkBuwkGAEkBxgkGAIkB7RIGAAwAmAc5AAwA6xNCAAwA2QpP
ABQAmAc5ABQA6xNCABQA2QpPABwAmAc5ABwA6xNCABwA2QpPAJEBbwKCAJEBABGIAJkBeQqOAJkA
DhAGAKEBQgW5AKkB8hK/ACQADhAGAKEBTgrMAKEBywrRACQAWBHXACQASgPdAKEBlxLjACQAABDp
ACwAZxP4AJkAYRH9ALEBSgMDASwAJhQKARkBUwcGAJkAjhQOAaEBywoTAbEALAwYAZkAcxIeAcEB
SgMkAbkAewUqAVEBiAoqAcEADhAQAMkBnwczAckBjwwGANkBDhA5AeEBfQZAAdkBMBJHAfEBSgNN
AREC0glXAfEBSgNcAeEBvhRnATEBDhBrATEBLAx3ATEB8QsBABkCDhAQADEBhxQGADEB3hIGADEB
4RIKAUkBDhAGAEkBYwKBAUkBHRGJAZEADhAGAEkBpwKPASECUg2VASkC9QWbATECBA+iAUkB6hCo
ATkCIwyuAUkBahS1AUECOxS7AXEAzwXCAXEAsRTKAWEBDhDQAYEBDhAGAGkCDhAVAMkADhAGAHEC
qRLgAZEB8QGCAMkAmxToAZEBwQrtAXkCTQcGAMkADhDzAXECnhL5AYECHAoaAoEC+QsfApEAuAoq
AaEBkBImAjwAow8zAkQAowMKAQwAjANCAkQABBP4AEwAow8zAlQAowMKAVQABBP4AAwA0A1tAgwA
DhPdAAwAIwYhAJkBDgGZAgkCWweeAgkCuAoqAaEBkBKlAiEBDhAGAJECDhAQACEBPxKrAiEBDhKy
ApkCwxO4AlwAsw4GAKkCDhAQAFwASgPdAKEBkBLMArECSgPSAgEBDhDYAiEB8wLhAmQAow8zAmwA
owMKARQAjANCAmwABBP4AAkBWgUNAwkBcxMTA7kC4QIZA8ECABArAxEBZxMxAxEBJhQKARQA0A1t
AhQADhPdABQAIwYhABwAjANCAhwA0A1tAhwADhPdABwAIwYhAMkCDhDSApkCGQ2DA3QADhAGAHwA
DhCeA3QASgPdACkBDhCmAyQAcwBNBi4ACwDoBC4AEwDxBC4AGwAQBS4AIwAZBS4AKwBCBS4AMwBC
BS4AOwBCBS4AQwAZBS4ASwBIBS4AUwBCBS4AWwBfBUMAYwBIBoAAawCpBaAAawDXBcAAawABBuAA
awAjBuMAmwBIBmEBewBIBoEBewBIBqEBewBIBqMBewBIBsEBewBIBsMBewBIBuEBewBIBuMBewBI
BgECewBIBgMCewBIBiECewBIBkECewBIBmECewBIBoECewBIBqECewBIBsECewBIBuECewBIBgED
ewBIBiEDewBIBkkDowAQBWkDowAQBYAHewBIBqAHewBIBsAHewBIBuAHewBIBgAIewBIBiAIewBI
BkAIewBIBmAIewBIBoAIewBIBqAIewBIBsAIewBIBuAIewBIBgAJewBIBiAJewBIBkAJewBIBmAJ
ewBIBoAJewBIBqAJewBIBsAJewBIBuAJewBIBiAKewBIBkAKewBIBmAKewBIBoAKewBIBqAKewBI
BsAKewBIBgALewBIBiALewBIBoALkwBIBsALkwBIBgAMkwBIBkAMkwBIBi4AWABoAHgAlAAuAX0B
2AEAAnMCNQNsAwMAAQAFABUABgAWAAcAGgAIABwACgAdAAsAJwAMACoAAABaAsUEAAAkC8kEAAA3
A8UEAABTC8kEAABsEsUEAADjC8kEAAB7A8UEAABoC8kEAADvBcUEAACEC8kEAACzBsUEAACVC8kE
AACOB8UEAAC4C8kEAAB0B8UEAAClC8kEAAAxA8UEAABNC8kEAACoDsUEAADNC8kEAAAuAs0EAACn
FNMEAAA3AsUEAADEEtMEAACyD9MEAAD0DtcEAAACB90EAAD8EuMEAABaAtMEAAA3A9MEAABsEtME
AAB7A9MEAADvBdMEAACzBtMEAACOB9MEAAB0B9MEAAAxA9MEAACoDtMEAACCDNMEAADLBtMEAACn
DNMEAAC9E9MEAQAPAAMAAQAQAAUAAQARAAcAAQASAAkAAQATAAsAAQAUAA0AAQAVAA8AAQAWABEA
AQAXABMAAQAYABUAAQAZABcAAQAaABkAAQAbABsAAQAcAB0AAQAdAB8AAQAeACEAAQAfACMAAQAg
ACUAAQAhACcAAQAiACkAAgAsACsAAgAuAC0AAgAvAC8AAgAwADEAAgAxADMAAgAzADUAAgA0ADcA
AQA1ADcAAgA2ADkAAgA8ADsAAQA9ADsAAgA+AD0AAQA/AD0AAgBAAD8AAQBBAD8AAgBCAEEAAQBD
AEEAAgBEAEMAAQBFAEMAAgBGAEUAAQBHAEUAAgBIAEcAAQBJAEcAAgBKAEkAAQBLAEkAAgBMAEsA
AQBNAEsAAgBOAE0AAQBPAE0AAgBRAE8AAQBSAE8AAgBTAFEAAQBUAFEAAgBVAFMAAQBWAFMAAgBY
AFUAAQBZAFUADQC2ACEADQC4ACMADgC6ACEADgC8ACMADwC+ACEADwDAACMAEADCACEAEADEACMA
MwBdAG0AxgDyAN0BLQI8AlcCXQLDAvEC+QKKA5YDBIAAAAEAAAAAAAAAAAAAAAAAlQEAAAQAAAAA
AAAAAAAAANEDvQIAAAAADwAAAAAAAAAAAAAA2gPOEwAAAAAEAAAAAAAAAAAAAADRA9YGAAAAAAQA
AAAAAAAAAAAAANEDmwIAAAAABAAAAAAAAAAAAAAA4wOFDgAAAAAPAAAAAAAAAAAAAADaA/kTAAAA
AA8AAAAAAAAAAAAAANoDPg4AAAAABAAAAAAAAAAAAAAA0QM1DAAAAAAPAAAAAAAAAAAAAADaA2EO
AAAAAAQAAAAAAAAAAAAAANED/AwAAAAAAAAAAAEAAABpEAAACQACAAoAAgALAAIADAACAA0AAgAO
AAIADwACABAAAgAAAAAAcwCUAgAAAAB1AJQCMwBKADkAYwA/AHMAPwB9ANUATQLVAGMCCQEBAwkB
IQMfAVEDHwFdA3QAZwMfAbYDHwHCA3QAzAMAAABJRFRTQ29tcG9uZW50TWV0YURhdGExMDAASURU
U1ZhcmlhYmxlMTAwAElEVFNSdW50aW1lQ29ubmVjdGlvbkNvbGxlY3Rpb24xMDAASURUU1J1bnRp
bWVDb25uZWN0aW9uMTAwAElEVFNDb25uZWN0aW9uTWFuYWdlcjEwMABJRFRTVmFyaWFibGVzMTAw
AElEVFNFdmFsdWF0b3JDb250ZXh0MTAwADw+dV9fMQBJRW51bWVyYWJsZWAxAFRhc2tgMQBIdHRw
SGVhZGVyVmFsdWVDb2xsZWN0aW9uYDEAQXN5bmNUYXNrTWV0aG9kQnVpbGRlcmAxAFRhc2tBd2Fp
dGVyYDEATGlzdGAxAFRvSW50MzIAPGJhc2VVUkw+NV9fMgA8cGFnZVNpemU+NV9fMgA8Y2xpZW50
PjVfXzIAPD51X18yAEtleVZhbHVlUGFpcmAyADxhY2Nlc3NUb2tlbj41X18zADxwYWdlcz41X18z
AEVuY29kZVRvNjQAPGk+NV9fNAA8cGFnZW51bT41X181AFNDXzljYzc2NGRiNWRjODRhMDZhYmQ3
MWIzNzQyMGUzZTg2ADxQcm9jZXNzQWNlZGVtaWNTZXNzaW9ucz5kX182ADxHZXRBY2FkZW1pY1Nl
c3Npb25zPmRfXzcAZ2V0X1VURjgAPEdldEZpbGVTaXplPmRfXzgAPEdldEFjY2Vzc1Rva2VuPmRf
XzkAPE1vZHVsZT4AZ2V0X1BTREIAZ2V0X0NsaWVudE9uZVJvc3RlcklEAGdldF9DbGllbnRJRABz
ZXRfQ2xpZW50SUQAR2V0T3V0cHV0SUQAZ2V0X0FTQ0lJAHRva2VuVVJJAGJhc2VVUkwAU3lzdGVt
LklPAFQAQXJlYQBTeXN0ZW0uRGF0YQBnZXRfQ29tcG9uZW50TWV0YURhdGEAbXNjb3JsaWIAU3lz
dGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMAUmVhZEFzU3RyaW5nQXN5bmMAUG9zdEFzeW5jAGdldF9T
b3VyY2VkSWQAc2V0X1NvdXJjZWRJZABnZXRfUGFyZW50U291cmNlZElkAHNldF9QYXJlbnRTb3Vy
Y2VkSWQAY2xpZW50SWQAQWRkAE1hcmtPdXRwdXRzRmluaXNoZWQAZ2V0X0RhdGVMYXN0TW9kaWZp
ZWQAc2V0X0RhdGVMYXN0TW9kaWZpZWQAQXdhaXRVbnNhZmVPbkNvbXBsZXRlZABnZXRfSXNDb21w
bGV0ZWQAPENsaWVudElEPmtfX0JhY2tpbmdGaWVsZAA8U291cmNlZElkPmtfX0JhY2tpbmdGaWVs
ZAA8UGFyZW50U291cmNlZElkPmtfX0JhY2tpbmdGaWVsZAA8RGF0ZUxhc3RNb2RpZmllZD5rX19C
YWNraW5nRmllbGQAPFRpdGxlPmtfX0JhY2tpbmdGaWVsZAA8VHlwZT5rX19CYWNraW5nRmllbGQA
PHRva2VuX3R5cGU+a19fQmFja2luZ0ZpZWxkADxFbmREYXRlPmtfX0JhY2tpbmdGaWVsZAA8U3Rh
cnREYXRlPmtfX0JhY2tpbmdGaWVsZAA8YWNjZXNzX3Rva2VuPmtfX0JhY2tpbmdGaWVsZAA8ZXhw
aXJlc19pbj5rX19CYWNraW5nRmllbGQAPFNjaG9vbFllYXI+a19fQmFja2luZ0ZpZWxkADxTdGF0
dXM+a19fQmFja2luZ0ZpZWxkADxjb3VudD5rX19CYWNraW5nRmllbGQARGJDb21tYW5kAFNxbENv
bW1hbmQAUmVwbGFjZQBkZWZhdWx0SW5zdGFuY2UARW5zdXJlU3VjY2Vzc1N0YXR1c0NvZGUAdG9F
bmNvZGUAZ2V0X01lc3NhZ2UASHR0cFJlc3BvbnNlTWVzc2FnZQBKc29uU3RyaW5nVG9EYXRhVGFi
bGUASURpc3Bvc2FibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAZ2V0X1Rp
dGxlAHNldF9UaXRsZQBHZXRSdW50aW1lQ29ubmVjdGlvbkJ5TmFtZQBJQXN5bmNTdGF0ZU1hY2hp
bmUAU2V0U3RhdGVNYWNoaW5lAHN0YXRlTWFjaGluZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5Q
aXBlbGluZQBnZXRfVHlwZQBzZXRfVHlwZQBTcWxEYlR5cGUAc2V0X0NvbW1hbmRUeXBlAFZhbHVl
VHlwZQBTZWN1cml0eVByb3RvY29sVHlwZQBwcm9jZXNzVHlwZQBnZXRfdG9rZW5fdHlwZQBzZXRf
dG9rZW5fdHlwZQBTeXN0ZW0uQ29yZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1
bHR1cmUASW50ZXJuYWxEYXRhQ29sbGVjdGlvbkJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UA
V3JpdGVUb0RhdGFiYXNlAENsb3NlAERpc3Bvc2UAVHJ5UGFyc2UAZ2V0X0VuZERhdGUAc2V0X0Vu
ZERhdGUAZ2V0X1N0YXJ0RGF0ZQBzZXRfU3RhcnREYXRlAENyZWF0ZQBnZXRfU3RhdGUARWRpdG9y
QnJvd3NhYmxlU3RhdGUAQ29ubmVjdGlvblN0YXRlADw+MV9fc3RhdGUARHluYW1pY0F0dHJpYnV0
ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRl
AERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0
bGVBdHRyaWJ1dGUAQXN5bmNTdGF0ZU1hY2hpbmVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtB
dHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAERlYnVnZ2VySGlkZGVuQXR0cmlidXRl
AEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmli
dXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmli
dXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBv
aW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0
eUF0dHJpYnV0ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAHNldF9WYWx1ZQBBdXRoZW50aWNhdGlv
bkhlYWRlclZhbHVlAE1lZGlhVHlwZVdpdGhRdWFsaXR5SGVhZGVyVmFsdWUAdmFsdWUAc2V0X0V4
cGVjdDEwMENvbnRpbnVlAEdldEZpbGVTaXplAEpzb25EZXNlcmlhbGl6ZQBJbmRleE9mAEVuY29k
aW5nAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVG9CYXNlNjRTdHJpbmcAZ2V0X0Nvbm5lY3Rp
b25TdHJpbmcAY2xlYW5Kc29uU3RyaW5nAGpzb25TdHJpbmcAVG9TdHJpbmcAR2V0U3RyaW5nAFN1
YnN0cmluZwBVcmkAZ2V0X1Rhc2sAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNDXzljYzc2NGRiNWRj
ODRhMDZhYmQ3MWIzNzQyMGUzZTg2LmRsbABzZXRfQ2xpZW50SURfSXNOdWxsAHNldF9Tb3VyY2Vk
SWRfSXNOdWxsAHNldF9QYXJlbnRTb3VyY2VkSWRfSXNOdWxsAHNldF9EYXRlTGFzdE1vZGlmaWVk
X0lzTnVsbABzZXRfVGl0bGVfSXNOdWxsAHNldF9UeXBlX0lzTnVsbABzZXRfRW5kRGF0ZV9Jc051
bGwAc2V0X1N0YXJ0RGF0ZV9Jc051bGwAc2V0X1NjaG9vbFllYXJfSXNOdWxsAHNldF9TdGF0dXNf
SXNOdWxsAFNldE51bGwAc2V0X1NlY3VyaXR5UHJvdG9jb2wAYmFzZVVybABNZW1vcnlTdHJlYW0A
Z2V0X0l0ZW0Ac2V0X0l0ZW0AU3lzdGVtAHJlc291cmNlTWFuAHNlbmRUb2tlbgBHZXRBY2Nlc3NU
b2tlbgBhY2Nlc3NUb2tlbgBnZXRfYWNjZXNzX3Rva2VuAHNldF9hY2Nlc3NfdG9rZW4AT3BlbgBn
ZXRfZXhwaXJlc19pbgBzZXRfZXhwaXJlc19pbgBTY3JpcHRNYWluAERhdGFDb2x1bW4AcExvY2F0
aW9uAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SdW50
aW1lLlNlcmlhbGl6YXRpb24Ac2V0X0F1dGhvcml6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24ARGF0
YUNvbHVtbkNvbGxlY3Rpb24AZ2V0X1J1bnRpbWVDb25uZWN0aW9uQ29sbGVjdGlvbgBTcWxQYXJh
bWV0ZXJDb2xsZWN0aW9uAERhdGFSb3dDb2xsZWN0aW9uAERiQ29ubmVjdGlvbgBTcWxDb25uZWN0
aW9uAEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24AU2V0RXhjZXB0aW9uAFN5c3RlbS5EYXRhLkNv
bW1vbgBTeXN0ZW0uUnVudGltZS5TZXJpYWxpemF0aW9uLkpzb24AQ3VsdHVyZUluZm8ATG9nSW5m
bwBPdXRwdXROYW1lTWFwAE91dHB1dE1hcABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1J1bnRpbWVX
cmFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUGlwZWxpbmVXcmFwAFN5c3RlbS5OZXQuSHR0cABn
ZXRfU2Nob29sWWVhcgBzZXRfU2Nob29sWWVhcgBDbGVhcgA8PnRfX2J1aWxkZXIAT3V0cHV0MEJ1
ZmZlcgBQaXBlbGluZUJ1ZmZlcgBTY3JpcHRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRf
Q29ubmVjdGlvbk1hbmFnZXIAU2VydmljZVBvaW50TWFuYWdlcgBKc29uSGVscGVyAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUuV3JhcHBlcgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5Q
aXBlbGluZS5XcmFwcGVyAERiUGFyYW1ldGVyAFNxbFBhcmFtZXRlcgBHZXRBd2FpdGVyAGdldF9D
bGllbnRTZXJ2ZXIARGF0YUNvbnRyYWN0SnNvblNlcmlhbGl6ZXIAWG1sT2JqZWN0U2VyaWFsaXpl
cgBFcnJvcgBJRW51bWVyYXRvcgBHZXRFbnVtZXJhdG9yAC5jdG9yAC5jY3RvcgBPdXRwdXRJRHMA
U3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVt
LlJlc291cmNlcwBTQ185Y2M3NjRkYjVkYzg0YTA2YWJkNzFiMzc0MjBlM2U4Ni5Qcm9wZXJ0aWVz
LlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU0NfOWNjNzY0ZGI1ZGM4NGEwNmFi
ZDcxYjM3NDIwZTNlODYuUHJvcGVydGllcwBnZXRfUmVhZE9ubHlWYXJpYWJsZXMAR2V0Qnl0ZXMA
QnVmZmVyQ29sdW1uSW5kZXhlcwBHZXRDb2x1bW5JbmRleGVzAFNldHRpbmdzADw+NF9fdGhpcwBT
eXN0ZW0uVGhyZWFkaW5nLlRhc2tzAENvbnRhaW5zAGdldF9Db2x1bW5zAEdldEFjYWRlbWljU2Vz
c2lvbnMAUHJvY2Vzc0FjZWRlbWljU2Vzc2lvbnMAU3lzdGVtLlRleHQuUmVndWxhckV4cHJlc3Np
b25zAFN5c3RlbS5Db2xsZWN0aW9ucwBDb25uZWN0aW9ucwBTeXN0ZW0uTmV0Lkh0dHAuSGVhZGVy
cwBIdHRwSGVhZGVycwBIdHRwUmVxdWVzdEhlYWRlcnMAZ2V0X0RlZmF1bHRSZXF1ZXN0SGVhZGVy
cwBCdWZmZXJzAGdldF9QYXJhbWV0ZXJzAHNldF9CYXNlQWRkcmVzcwBGaW5pc2hPdXRwdXRzAGdl
dF9TdGF0dXMAc2V0X1N0YXR1cwBnZXRfUm93cwBDcmVhdGVOZXdPdXRwdXRSb3dzAENvbmNhdABG
b3JtYXQAUmVhZE9iamVjdABXcml0ZU9iamVjdABTeXN0ZW0uTmV0AGdldF9DbGllbnRTZWNyZXQA
Y2xpZW50U2VjcmV0AFNldEVuZE9mUm93c2V0AFdhaXQAU3BsaXQAZ2V0X0RlZmF1bHQAR2V0UmVz
dWx0AFNldFJlc3VsdABTeXN0ZW0uRGF0YS5TcWxDbGllbnQASHR0cENsaWVudABVc2VyQ29tcG9u
ZW50AFBhcmVudENvbXBvbmVudABTY3JpcHRDb21wb25lbnQAZ2V0X0N1cnJlbnQAZ2V0X0NvbnRl
bnQARm9ybVVybEVuY29kZWRDb250ZW50AFN0cmluZ0NvbnRlbnQASHR0cENvbnRlbnQAZ2V0X2Nv
dW50AHNldF9jb3VudABnZXRfQWNjZXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQAU3Rh
cnQAQ29udmVydABNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABQcmltZU91dHB1dABN
b3ZlTmV4dABTeXN0ZW0uVGV4dABHZXRWYWx1ZVdpdGhDb250ZXh0AFNjcmlwdENvbXBvbmVudEV2
YWxDb250ZXh0AGdldF9FdmFsdWF0b3JDb250ZXh0AERhdGFSb3cAQWRkUm93AE5ld1JvdwBSZWdl
eABUb0FycmF5AGdldF9DbGllbnRLZXkAZ2V0X0Fzc2VtYmx5AEV4ZWN1dGVOb25RdWVyeQAAAAAD
WwAAAQADXQAAB30ALAB7AAADewAAA30AAAMsAAADOgAAAyIAAD1KAHMAbwBuAFMAdAByAGkAbgBn
AFQAbwBEAGEAdABhAFQAYQBiAGwAZQA6ACAAQwBvAGwAdQBtAG4AcwAAP0UAcgByAG8AcgAgAFAA
YQByAHMAaQBuAGcAIABDAG8AbAB1AG0AbgAgAE4AYQBtAGUAIAA6ACAAewAwAH0AAANcAABHSgBz
AG8AbgBTAHQAcgBpAG4AZwBUAG8ARABhAHQAYQBUAGEAYgBsAGUAOgAgAEYAbwByACAAZQBhAGMA
aAAgAHIAbwB3AAA7RQByAHIAbwByACAAUABhAHIAcwBpAG4AZwAgAFIAbwB3ACAAIABOAGEAbQBl
ACAAOgAgAHsAMAB9AAArSgBzAG8AbgBTAHQAcgBpAG4AZwBUAG8ARABhAHQAYQBUAGEAYgBsAGUA
AEF7ACIAbgBhAG0AZQAiADoAIgBzAGMAaABvAG8AbABzAHQAYQBmAGYAIgAsACIAcgBlAGMAbwBy
AGQAIgA6AFsAAC0iAF8AbgBhAG0AZQAiADoAIgBzAGMAaABvAG8AbABzAHQAYQBmAGYAIgAsAAA/
XQAsACIAQABlAHgAdABlAG4AcwBpAG8AbgBzACIAOgAiAHMAXwBzAHMAZgBfAG4AYwBlAGEAXwB4
ACIAfQAAaywAIgBAAGUAeAB0AGUAbgBzAGkAbwBuAHMAIgA6ACIAdQBfAHMAYwBoAG8AbwBsAHMA
dABhAGYAZgB1AHMAZQByAGYAaQBlAGwAZABzACwAcwBfAHMAcwBmAF8AbgBjAGUAYQBfAHgAIgAA
E3MAcABMAG8AZwBJAG4AZgBvAAAVQABDAGwAaQBlAG4AdABVAEkARAAADUAARQByAHIAbwByAAAT
QABGAGkAbABlAFQAeQBwAGUAAAtAAEEAcgBlAGEAABFAAEwAbwBnAEkAbgBmAG8AAEdpAG0AcwAv
AG8AbgBlAHIAbwBzAHQAZQByAC8AdgAxAHAAMQAvAGEAYwBhAGQAZQBtAGkAYwBTAGUAcwBzAGkA
bwBuAHMAAAt0AG8AawBlAG4AABFTAGUAcwBzAGkAbwBuAHMAAICbSQBzAE4AdQBsAGwAIABwAHIA
bwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0ACAAdABvACAARgBhAGwAcwBl
AC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUA
bQBuACAAaQBuAHMAdABlAGEAZAAuAAARTwB1AHQAcAB1AHQAIAAwAAAJUABTAEQAQgAAE0MAbABp
AGUAbgB0AEsAZQB5AAAjQwBsAGkAZQBuAHQATwBuAGUAUgBvAHMAdABlAHIASQBEAAAZQwBsAGkA
ZQBuAHQAUwBlAGMAcgBlAHQAABlDAGwAaQBlAG4AdABTAGUAcgB2AGUAcgAAcVMAQwBfADkAYwBj
ADcANgA0AGQAYgA1AGQAYwA4ADQAYQAwADYAYQBiAGQANwAxAGIAMwA3ADQAMgAwAGUAMwBlADgA
NgAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAJVMARQBTAFMASQBP
AE4AUwAtAHMAZQBuAGQAVABvAGsAZQBuAAEZQQBjAGMAZQBzAHMAIABUAG8AawBlAG4AADlHAGUA
dABBAGMAYwBlAHMAcwBUAG8AawBlAG4AIAByAGUAdAB1AHIAbgBlAGQAIABuAHUAbABsAAATRgBp
AGwAZQAgAFMAaQB6AGUAADNHAGUAdABGAGkAbABlAFMAaQB6AGUAIAByAGUAdAB1AHIAbgBlAGQA
IABuAHUAbABsAAAfUAByAG8AYwBlAHMAcwBUAGUAYQBjAGgAZQByAHMAAAc1ADAAMAAAFT8AcABh
AGcAZQBzAGkAegBlAD0AAA0mAHAAYQBnAGUAPQAAIWEAcABwAGwAaQBjAGEAdABpAG8AbgAvAGoA
cwBvAG4AABtBAHUAdABoAG8AcgBpAHoAYQB0AGkAbwBuAAAPQgBlAGEAcgBlAHIAIAAAWUcAZQB0
ACAAQQBjAGEAZABlAG0AaQBjACAAUwBlAHMAcwBpAG8AbgBzACAALQAgAFIAbwB3ACAAQwBvAHUA
bgB0ACAAUABhAGcAZQAgAE4AdQBtADoAIAABF0cAZQB0AFQAZQBhAGMAaABlAHIAcwAADS8AYwBv
AHUAbgB0AAAXUgBlAGMAbwByAGQAQwBvAHUAbgB0AAAXRwBlAHQARgBpAGwAZQBTAGkAegBlAABD
YQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AeAAtAHcAdwB3AC0AZgBvAHIAbQAtAHUAcgBsAGUAbgBj
AG8AZABlAGQAAQtCAGEAcwBpAGMAABVnAHIAYQBuAHQAXwB0AHkAcABlAAAlYwBsAGkAZQBuAHQA
XwBjAHIAZQBkAGUAbgB0AGkAYQBsAHMAAKEwt8eUBEBJiWNKVVGFwD8ABCABAQgDIAABBSABARER
BCABAQ4FIAEBEjkFIAEBHQIFIAEBEnEGIAEBEYC5BAcBETQFFRF5AQgIAAAVEXkBEwAHMAEBARAe
AAQKARE0CCAAFRJBARMABAcBETgFFRF5ARwECgEROAQHARE8BRUReQEOBAoBETwEBwERQAQKARFA
BQAAEoDJBSABHQUOBQABDh0FJAcTEk0dDhUSUQEOHQ4IHQ4IDggOFRFVAQ4OElkOCA4OEk0SXQUg
Ag4ODgYAAh0ODg4FFRJRAQ4EIAEIDgUgAg4ICAUgAQITAAUgAQETAAUAAg4OHAggABURVQETAAUV
EVUBDgQgABMABSAAEoDZBiABEoDdDgMgAAIEIAASWQQgAQ4IBSACAQ4cBSAAEoDhBSABARJZAyAA
DgQHARJhBSAAEYDpBiACAQ4SYQYgAQERgPUFIAASgPkJIAISgP0OEYEBBCABARwKIAMSgP0OEYEB
CAMgAAgLIAMBEoCdHQgSgKEFIAIBCBwDBwEIBwACCBKAoQ4FIAEdCAgFIAASgREFIAASgRUGIAES
gRkOBSAAEoCpBSAAEoEdBiABEoEhHAUAABKBJQYgARwSgSkHAAESORGBLQUgABKBMQcgAgEOEoEx
BAcBEmUCHgAHIAIBEoE9HAQgAB0FBSABDh0FBSABAR0FBiABHBKBPRkHDAgSCAgODg4ODhURdQEO
FRF1ARwSXRJdBAABAQIGAAEBEYFFBgADDg4ODgUVEkEBDgggABURdQETAAUVEXUBDgowAgIBEB4A
EB4BCQoCFRF1AQ4RNAUVEkEBHAUVEXUBHAkKAhURdQEcETQFIAEBEl0lBxAIEggcCAgOEoCBDggV
EXUBEoCFFRF1AQ4SgIkSgI0IEl0SXQQAAQgOBgACAg4QCAUAAQ4dDgYgAQESgUkFIAASgU0KIAAV
EoFRARKBVQgVEoFRARKBVQUAAg4ODgUgAgEODgggAwEOEoDJDg8gAhUSQQESgIUSgUkSgV0HFRJB
ARKAhQcVEXUBEoCFCwoCFRF1ARKAhRE4BSAAEoCFBSAAEoFdByAAFRJBAQ4JCgIVEXUBDhE4BSAA
EoCJAyAAHBsHCggSCA4OEoCBDhURdQESgIUVEXUBDhJdEl0LCgIVEXUBEoCFETwJCgIVEXUBDhE8
BAoBEjAWBwcIDg4SgJUVEXUBEoCFFRF1AQ4SXQYgAQESgWULFRJRARURgWkCDg4HFRGBaQIODgcg
AgETABMBDyABARUSgW0BFRGBaQIODgsKAhURdQESgIURQAkKAhURdQEOEUAECgESLAi3elxWGTTg
iQiJhF3NgIDMkQiwP19/EdUKOgIGDgMGEhQDBhIYAwYSDAQGEoClBAYSgLEEBhKAtQMGEiACBggG
BhUReQEIAwYSCAYGFRF1AQ4GBhURdQEcBgYVEXkBHAgGFRF1ARKAhQYGFRF5AQ4EBhKAkQcgABUS
QQEICiADFRJBARwODg4JIAIVEkEBDg4OCwAEFRJBAQ4ODg4OBCABDg4FIAESTQ4GIAMBCA4OAwAA
AQQgAQECDSAEAQgdCB0SgJ0SgKEGIAEBEoClBQAAEoCxBQAAEoC1BgABARKAtQQAABIgBhABAQ4e
AAYQAQEeAA4DKAAIAygAAgUoABKAqQMoAA4FCAASgLEFCAASgLUECAASIAgBAAgAAAAAAB4BAAEA
VAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU0NfOWNjNzY0ZGI1ZGM4NGEw
NmFiZDcxYjM3NDIwZTNlODYAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxOAAASQEAGi5ORVRG
cmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1l
d29yayA0LjctAQAoU2NyaXB0TWFpbis8UHJvY2Vzc0FjZWRlbWljU2Vzc2lvbnM+ZF9fNgAAKQEA
JFNjcmlwdE1haW4rPEdldEFjYWRlbWljU2Vzc2lvbnM+ZF9fNwAAIQEAHFNjcmlwdE1haW4rPEdl
dEZpbGVTaXplPmRfXzgAACQBAB9TY3JpcHRNYWluKzxHZXRBY2Nlc3NUb2tlbj5kX185AAAEAQAA
AAoBAAIAAAAAAQAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVh
ZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tl
eVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VT
ZXQCAAAAAAAAAAAAAABQQURQQURQtAAAABRvAAAAAAAAAAAAAC5vAAAAIAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAgbwAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQAB
AAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFiAAADsAwAAAAAAAAAAAADsAzQAAABWAFMA
XwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAA
AAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAA
JAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAETAMAAAEAUwB0AHIAaQBuAGcARgBp
AGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4A
dABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBs
AGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwA5AGMAYwA3ADYANABkAGIANQBkAGMA
OAA0AGEAMAA2AGEAYgBkADcAMQBiADMANwA0ADIAMABlADMAZQA4ADYAAAAwAAgAAQBGAGkAbABl
AFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwA
TgBhAG0AZQAAAFMAQwBfADkAYwBjADcANgA0AGQAYgA1AGQAYwA4ADQAYQAwADYAYQBiAGQANwAx
AGIAMwA3ADQAMgAwAGUAMwBlADgANgAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkA
cgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA4AAAAKgABAAEATABl
AGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwA
RgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AOQBjAGMANwA2ADQAZABiADUAZABjADgANABhADAANgBh
AGIAZAA3ADEAYgAzADcANAAyADAAZQAzAGUAOAA2AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUA
YwB0AE4AYQBtAGUAAAAAAFMAQwBfADkAYwBjADcANgA0AGQAYgA1AGQAYwA4ADQAYQAwADYAYQBi
AGQANwAxAGIAMwA3ADQAMgAwAGUAMwBlADgANgAAADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIA
cwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgAAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBz
AGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAABgAAAMAAAAQD8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAA]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_9cc764db5dc84a06abd71b37420e3e86</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::ClientKey,User::ClientOneRosterID,User::ClientSecret,User::ClientServer</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String">&lt;SOAP-ENV:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"&gt;
&lt;SOAP-ENV:Body&gt;
&lt;a1:ScriptBreakpointInfo id="ref-1" xmlns:a1="http://schemas.microsoft.com/clr/nsassem/Microsoft.SqlServer.VSTAHosting/Microsoft.SqlServer.VSTAScriptingLib%2C%20Version%3D15.0.0.0%2C%20Culture%3Dneutral%2C%20PublicKeyToken%3D89845dcd8080cc91"&gt;
&lt;Enabled&gt;true&lt;/Enabled&gt;
&lt;File id="ref-3"&gt;main.cs&lt;/File&gt;
&lt;FileLine&gt;347&lt;/FileLine&gt;
&lt;FileColumn&gt;17&lt;/FileColumn&gt;
&lt;/a1:ScriptBreakpointInfo&gt;
&lt;/SOAP-ENV:Body&gt;
&lt;/SOAP-ENV:Envelope&gt;
</arrayElement>
                        <arrayElement
                          dataType="System.String">&lt;SOAP-ENV:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"&gt;
&lt;SOAP-ENV:Body&gt;
&lt;a1:ScriptBreakpointInfo id="ref-1" xmlns:a1="http://schemas.microsoft.com/clr/nsassem/Microsoft.SqlServer.VSTAHosting/Microsoft.SqlServer.VSTAScriptingLib%2C%20Version%3D15.0.0.0%2C%20Culture%3Dneutral%2C%20PublicKeyToken%3D89845dcd8080cc91"&gt;
&lt;Enabled&gt;true&lt;/Enabled&gt;
&lt;File id="ref-3"&gt;main.cs&lt;/File&gt;
&lt;FileLine&gt;331&lt;/FileLine&gt;
&lt;FileColumn&gt;13&lt;/FileColumn&gt;
&lt;/a1:ScriptBreakpointInfo&gt;
&lt;/SOAP-ENV:Body&gt;
&lt;/SOAP-ENV:Envelope&gt;
</arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">A4</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">338550b5789e62119da99eaa83870fbeb037e669</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">c70361c448dc120b23e5510d6ca6f6ae</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Loop thru Clients\Academic Sessions\Script Component.Connections[PSDB]"
                      connectionManagerID="Package.ConnectionManagers[OneRosterNET]"
                      connectionManagerRefId="Package.ConnectionManagers[OneRosterNET]"
                      description="Process Log"
                      name="PSDB" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0]"
                      hasSideEffects="true"
                      name="Output 0">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[ClientID]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[ClientID]"
                          name="ClientID" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[SourcedId]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[SourcedId]"
                          name="SourcedId" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[Status]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[Status]"
                          name="Status" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[DateLastModified]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[DateLastModified]"
                          name="DateLastModified" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[Title]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[Title]"
                          name="Title" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[Type]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[Type]"
                          name="Type" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[StartDate]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[StartDate]"
                          name="StartDate" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[EndDate]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[EndDate]"
                          name="EndDate" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[ParentSourcedId]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[ParentSourcedId]"
                          name="ParentSourcedId" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[SchoolYear]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[SchoolYear]"
                          name="SchoolYear" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Loop thru Clients\Academic Sessions.Paths[Output 0]"
                  endId="Package\Loop thru Clients\Academic Sessions\Flat File Destination.Inputs[Flat File Destination Input]"
                  name="Output 0"
                  startId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Loop thru Clients\Truncate Tables"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{26D04F81-F15A-49D9-B1B5-573B669E4501}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Truncate Tables"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{9238981A-2F3C-4FFA-86C4-45A523C0CAF5}"
              SQLTask:SqlStatementSource="declare @ClientUID int&#xA;&#xA;set @ClientUID = ?&#xA;&#xA;delete OneRoster.Classes where ClientUID = @ClientUID&#xA;delete OneRoster.Courses where ClientUID = @ClientUID&#xA;delete OneRoster.Demographics where ClientUID = @ClientUID&#xA;delete OneRoster.Enrollments where ClientUID = @ClientUID&#xA;delete OneRoster.Orgs where ClientUID = @ClientUID&#xA;delete OneRoster.Users where ClientUID = @ClientUID&#xA;delete OneRoster.AcademicSessions  where ClientUID = @ClientUID" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@ClientUID"
                SQLTask:DtsVariableName="User::ClientOneRosterID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Loop thru Clients.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{B85F13EF-0CBC-4F14-8465-EFA31610B823}"
          DTS:From="Package\Loop thru Clients\Truncate Tables"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Loop thru Clients\Academic Sessions" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{FF319617-B020-4392-8A84-34224818A73C}"
          DTS:ObjectName="{FF319617-B020-4392-8A84-34224818A73C}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::ClientOneRosterID" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{706F691B-E794-4AC3-B19B-9437C4F0F6A5}"
          DTS:ObjectName="{706F691B-E794-4AC3-B19B-9437C4F0F6A5}"
          DTS:ValueIndex="2"
          DTS:VariableName="User::ClientServer" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{3EF064E6-7CA9-4EEE-815B-D594F113BBF9}"
          DTS:ObjectName="{3EF064E6-7CA9-4EEE-815B-D594F113BBF9}"
          DTS:ValueIndex="3"
          DTS:VariableName="User::ClientKey" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{934079D3-3C4F-42D0-A9CD-D9B3BFBA9A8B}"
          DTS:ObjectName="{934079D3-3C4F-42D0-A9CD-D9B3BFBA9A8B}"
          DTS:ValueIndex="1"
          DTS:VariableName="User::ClientSecret" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Truncate Log"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{6760A9FB-254E-4E3F-8D5C-F7543511201F}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Truncate Log"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{9238981A-2F3C-4FFA-86C4-45A523C0CAF5}"
          SQLTask:SqlStatementSource="--Select * &#xA;delete&#xA;from OneRoster.LogFile&#xA;where getdate() &gt; dateadd(d, 14, logdate) " xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{786123FF-F135-400B-9BE0-9F31769713E1}"
      DTS:From="Package\Data Flow Task - Get Customers"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Truncate Log" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{74B64602-56FE-4743-B7D4-FDCB41434934}"
      DTS:From="Package\Truncate Log"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Loop thru Clients" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="231,42"
          Id="Package\Data Flow Task - Get Customers"
          TopLeft="153.971698113208,29.518867924528" />
        <NodeLayout
          Size="167,42"
          Id="Package\Loop thru Clients\Academic Sessions"
          TopLeft="42,130" />
        <NodeLayout
          Size="146,42"
          Id="Package\Loop thru Clients\Truncate Tables"
          TopLeft="56.858490566038,22.5" />
        <EdgeLayout
          Id="Package\Loop thru Clients.PrecedenceConstraints[Constraint]"
          TopLeft="127.679245283019,64.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,65.5"
              Start="0,0"
              End="0,58">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,58" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43.924528301886795"
          IsExpanded="True"
          PanelSize="1072,245"
          Size="1072,289"
          Id="Package\Loop thru Clients"
          TopLeft="80.5,243.990566037736" />
        <NodeLayout
          Size="143,42"
          Id="Package\Truncate Log"
          TopLeft="379,136" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="269.471698113208,71.518867924528">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="181.028301886792,64.481132075472"
              Start="0,0"
              End="181.028301886792,56.981132075472">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.240566037736" />
                  <mssgle:CubicBezierSegment
                    Point1="0,28.240566037736"
                    Point2="0,32.240566037736"
                    Point3="4,32.240566037736" />
                  <mssgle:LineSegment
                    End="177.028301886792,32.240566037736" />
                  <mssgle:CubicBezierSegment
                    Point1="177.028301886792,32.240566037736"
                    Point2="181.028301886792,32.240566037736"
                    Point3="181.028301886792,36.240566037736" />
                  <mssgle:LineSegment
                    End="181.028301886792,56.981132075472" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="450.5,178">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="166,65.990566037736"
              Start="0,0"
              End="166,58.490566037736">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.995283018868" />
                  <mssgle:CubicBezierSegment
                    Point1="0,28.995283018868"
                    Point2="0,32.995283018868"
                    Point3="4,32.995283018868" />
                  <mssgle:LineSegment
                    End="162,32.995283018868" />
                  <mssgle:CubicBezierSegment
                    Point1="162,32.995283018868"
                    Point2="166,32.995283018868"
                    Point3="166,36.995283018868" />
                  <mssgle:LineSegment
                    End="166,58.490566037736" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="DATA NEEDED:&#xA;Orgs&#xA;Users&#xA;courses&#xA;Classes&#xA;Enrollment&#xA;Academic Sessions"
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="128,136"
          Id="88452310-04f5-4630-9e61-a905b633ca86"
          TopLeft="1146,44" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Data Flow Task - Get Customers">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="187,42"
          Id="Package\Data Flow Task - Get Customers\Recordset Destination"
          TopLeft="93,164" />
        <NodeLayout
          Size="152,42"
          Id="Package\Data Flow Task - Get Customers\OLE DB Source"
          TopLeft="112,65" />
        <EdgeLayout
          Id="Package\Data Flow Task - Get Customers.Paths[OLE DB Source Output]"
          TopLeft="187.25,107">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,57"
              Start="0,0"
              End="0,49.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,49.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Data Flow Task - Get Customers\OLE DB Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Loop thru Clients\Academic Sessions">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="172,42"
          Id="Package\Loop thru Clients\Academic Sessions\Flat File Destination"
          TopLeft="365,201" />
        <NodeLayout
          Size="163,42"
          Id="Package\Loop thru Clients\Academic Sessions\Script Component"
          TopLeft="304,94" />
        <EdgeLayout
          Id="Package\Loop thru Clients\Academic Sessions.Paths[Output 0]"
          TopLeft="385.5,136">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="65.5,65"
              Start="0,0"
              End="65.5,57.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,28.5"
                    Point2="0,32.5"
                    Point3="4,32.5" />
                  <mssgle:LineSegment
                    End="61.5,32.5" />
                  <mssgle:CubicBezierSegment
                    Point1="61.5,32.5"
                    Point2="65.5,32.5"
                    Point3="65.5,36.5" />
                  <mssgle:LineSegment
                    End="65.5,57.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>