<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="10/30/2014 10:52:01 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="WLAFRANCE-PC"
  DTS:CreatorName="HAYESSOFT\Warrenla"
  DTS:DTSID="{D7A77F44-45A0-4C73-A2C4-BEEDEF872366}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.121"
  DTS:LocaleID="1033"
  DTS:ObjectName="OneRoster"
  DTS:PackageType="5"
  DTS:VersionBuild="619"
  DTS:VersionGUID="{6B9D933C-A78F-4FCC-8C8A-65C386A172BD}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[OneRoster]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{9238981A-2F3C-4FFA-86C4-45A523C0CAF5}"
      DTS:ObjectName="OneRoster">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[$Project::OneRosterDB]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[$Project::Server]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=.;Initial Catalog=ImportManagementSystem;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[OneRosterNET]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{25CAA67B-38B5-4F5D-8EC9-109E21C521F5}"
      DTS:ObjectName="OneRosterNET">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[$Project::OneRosterDB]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[$Project::Server]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=.;Initial Catalog=ImportManagementSystem;Integrated Security=True;Application Name=SSIS-PowerSchool-{25CAA67B-38B5-4F5D-8EC9-109E21C521F5}CSS-NBLAKELY\MSSQLSERVER2014.PowerSchoolAPIPlugIn;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4CC2F85C-2F64-440F-AB55-D6605179C6FF}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ClientKey">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{84791237-9068-48B0-84ED-C07D6C38ED92}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ClientName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C5681D49-D1EE-4CE4-ACDE-10DCE6BA5F73}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ClientOneRosterID">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{601DAA9A-D7B8-4F54-93D5-EE33204EFD96}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ClientSecret">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A44D1E2C-4C71-4AFF-8355-F54B2AA526CC}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ClientServer">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{AEBC77A0-3B0B-4BA6-9D00-34316FF48896}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ClientTipWebDatabase">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E91C2158-FCAE-4D20-94EE-A08537BB103B}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="CustomerList">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{27BECB58-365C-4729-BBEF-AF32B9F73B7C}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Error">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{20F1C2CF-576D-4FC6-9EA3-C9298167B0E4}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ErrorMessage">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{266782F4-B06A-4F00-A4C7-5026AA13F3B2}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PageSize">
      <DTS:VariableValue
        DTS:DataType="8">500</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F92A84B0-A676-4037-BACD-DC355B602775}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ProcessClasses">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B01E4251-64DD-4A19-96B4-9504F15614CF}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ProcessCourses">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{836DDAA8-273A-471F-9B6C-540F93B85E29}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ProcessEnrollments">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D6A54DB5-7822-4A2C-9E5C-B1F432A141DB}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ProcessSessions">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Data Flow Task - Get Customers"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{89CC7015-45BC-4D9A-9883-2658BE7A3076}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Data Flow Task - Get Customers"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server v10; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          BLOBTempStoragePath=""
          bufferTempStoragePath=""
          version="1">
          <components>
            <component
              refId="Package\Data Flow Task - Get Customers\OLE DB Source"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="OLE DB Source"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT ClientUID, ClientUrl, ClientKey, ClientSecret, 
SessionsFile, ClassesFile, CoursesFile, EnrollmentsFile
  FROM [ImportManagementSystem].[OneRoster].[Client]
  Where FileBased = 0
  order by ProcessOrder</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task - Get Customers\OLE DB Source.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OneRoster]"
                  connectionManagerRefId="Package.ConnectionManagers[OneRoster]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientUID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClientUID]"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientUID]"
                      name="ClientUID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientSecret]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClientSecret]"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientSecret]"
                      name="ClientSecret"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientUrl]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClientUrl]"
                      length="50"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientUrl]"
                      name="ClientUrl"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientKey]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClientKey]"
                      length="50"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientKey]"
                      name="ClientKey"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[SessionsFile]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[SessionsFile]"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[SessionsFile]"
                      name="SessionsFile"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClassesFile]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClassesFile]"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClassesFile]"
                      name="ClassesFile"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[CoursesFile]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[CoursesFile]"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[CoursesFile]"
                      name="CoursesFile"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[EnrollmentsFile]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[EnrollmentsFile]"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[EnrollmentsFile]"
                      name="EnrollmentsFile"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClientUID]"
                      dataType="i4"
                      name="ClientUID" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClientSecret]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="ClientSecret" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClientUrl]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="ClientUrl" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClientKey]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="ClientKey" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[SessionsFile]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      name="SessionsFile" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClassesFile]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      name="ClassesFile" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[CoursesFile]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      name="CoursesFile" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[EnrollmentsFile]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      name="EnrollmentsFile" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClientUID]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClientUID]"
                      name="ClientUID" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClientUrl]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClientUrl]"
                      name="ClientUrl" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClientKey]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClientKey]"
                      name="ClientKey" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClientSecret]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClientSecret]"
                      name="ClientSecret" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[SessionsFile]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[SessionsFile]"
                      name="SessionsFile" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClassesFile]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClassesFile]"
                      name="ClassesFile" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[CoursesFile]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[CoursesFile]"
                      name="CoursesFile" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[EnrollmentsFile]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[EnrollmentsFile]"
                      name="EnrollmentsFile" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task - Get Customers\Recordset Destination"
              componentClassID="Microsoft.RecordsetDestination"
              contactInfo="Recordset Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates and populates an in-memory ADO recordset that is available outside of the data flow. Scripts and other package elements can use the recordset. For example, use a recordset to store the names of files that will be loaded into the data warehouse."
              name="Recordset Destination">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the recordset."
                  name="VariableName">User::CustomerList</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input]"
                  hasSideEffects="true"
                  name="Recordset Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[ClientUID]"
                      cachedDataType="i4"
                      cachedName="ClientUID"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientUID]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[ClientSecret]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="150"
                      cachedName="ClientSecret"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientSecret]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[ClientUrl]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="ClientUrl"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientUrl]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[ClientKey]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="ClientKey"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientKey]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[SessionsFile]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="150"
                      cachedName="SessionsFile"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[SessionsFile]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[ClassesFile]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="150"
                      cachedName="ClassesFile"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClassesFile]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[CoursesFile]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="150"
                      cachedName="CoursesFile"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[CoursesFile]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input].Columns[EnrollmentsFile]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="150"
                      cachedName="EnrollmentsFile"
                      lineageId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[EnrollmentsFile]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Data Flow Task - Get Customers.Paths[OLE DB Source Output]"
              endId="Package\Data Flow Task - Get Customers\Recordset Destination.Inputs[Recordset Destination Input]"
              name="OLE DB Source Output"
              startId="Package\Data Flow Task - Get Customers\OLE DB Source.Outputs[OLE DB Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Loop thru Clients"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{EF076D26-2122-4091-9820-02B258557495}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Loop thru Clients">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachADOEnumerator"
        DTS:DTSID="{85CE8E18-46E0-4A0D-965B-8E6296303D09}"
        DTS:ObjectName="{85CE8E18-46E0-4A0D-965B-8E6296303D09}">
        <DTS:ObjectData>
          <FEEADO
            EnumType="EnumerateRowsInFirstTable"
            VarName="User::CustomerList" />
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Loop thru Clients\Academic Sessions"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Academic Sessions"
          DTS:Disabled="True"
          DTS:DTSID="{FE3BBE6F-A6B3-4904-88F0-9BD6A78DC5FE}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Academic Sessions"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server v10; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              BLOBTempStoragePath=""
              bufferTempStoragePath=""
              version="1">
              <components>
                <component
                  refId="Package\Loop thru Clients\Academic Sessions\Recordset Destination"
                  componentClassID="Microsoft.RecordsetDestination"
                  contactInfo="Recordset Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates and populates an in-memory ADO recordset that is available outside of the data flow. Scripts and other package elements can use the recordset. For example, use a recordset to store the names of files that will be loaded into the data warehouse."
                  name="Recordset Destination">
                  <properties>
                    <property
                      dataType="System.Null"
                      description="Specifies the variable that contains the recordset."
                      name="VariableName" />
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Loop thru Clients\Academic Sessions\Recordset Destination.Inputs[Recordset Destination Input]"
                      hasSideEffects="true"
                      name="Recordset Destination Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Loop thru Clients\Academic Sessions\Script Component"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;11"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Script Component"
                  version="12">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="33">
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces

 using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.IO;
using System.Net;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Runtime.Serialization;
using System.Runtime.Serialization.Json;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading.Tasks;
using System.Web.Script.Serialization;
using System.Windows.Forms;



#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    static string pLocation = "ims/oneroster/v1p1/academicSessions";
    static string tokenURI = "token/";
    static string processType = "Sessions";

    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();

    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */
        ProcessAcedemicSessions().Wait();
    }


    public async Task<int> ProcessAcedemicSessions()
    {
        try
        {

            // The server base address
            string baseURL = Variables.ClientServer;

            //MessageBox.Show(uri);

            ServicePointManager.Expect100Continue = true;
            ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;


            /// The client information used to get the OAuth Access Token from the server.
            string clientId = Variables.ClientKey.ToString();
            string clientSecret = Variables.ClientSecret;
            string sendToken = EncodeTo64(Variables.ClientKey + ":" + Variables.ClientSecret);
            WriteToDatabase(0, "SESSIONS-sendToken", sendToken);
            // this will hold the Access Token returned from the server.
            //MessageBox.Show(sendToken, "sendToken");

            string accessToken = await GetAccessToken(baseURL, sendToken, clientId, clientSecret);
            //-->>>>>>>>>>>>>> Add : if returns null, stop
            if (accessToken == null)
            {
                WriteToDatabase(1, "Access Token", "GetAccessToken returned null");
                return 0;
            }
            //MessageBox.Show(accessToken, "access token");
           

            string FileSize = await GetFileSize(baseURL, accessToken);
            if (FileSize == null)
            {
                WriteToDatabase(1, "File Size", "GetFileSize returned null");
                return 0;
            }

            var jsonResponse = await GetAcademicSessions(baseURL, accessToken, FileSize);

            return 0;
        }
        catch (Exception ex) { 
            WriteToDatabase(1, "ProcessTeachers", ex.Message);
            return 0;
        }

        }


    /// <summary>
    /// Gets the list of teachers.
    /// </summary>
    /// <param name="baseUrl">The url for the teacher list</param>
    /// <param name="accessToken">Acquired in the previous method</param>
    /// <returns>The page of articles.</returns>
    private async Task<dynamic> GetAcademicSessions(string baseUrl, string accessToken, string FileSize)
    {
        try
        {
            int TotalRecords;
            string pageSize = "500";
            int intPageSize = Convert.ToInt32(pageSize);
            if (Int32.TryParse(FileSize, out TotalRecords))
            {
                int pages = ((TotalRecords - 1) / intPageSize) + 1;
                //MessageBox.Show(pages.ToString(), "pages");

                for (int i = 1; i <= pages; i++)
                {
                    string pagenum = i.ToString();
                    //MessageBox.Show(pagenum, "page number");

                    string uri = baseUrl + pLocation + "?pagesize="+ pageSize + "&page=" + pagenum;
                    var client = new HttpClient();

                    client.BaseAddress = new Uri(uri);

                    client.DefaultRequestHeaders.Accept.Clear();
                    client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));
                    client.DefaultRequestHeaders.Add("Authorization", "Bearer " + accessToken);

                    //MessageBox.Show(uri, "teachers uri");

                    StringContent stringContent = new StringContent("", Encoding.UTF8, "application/json");
                    //StringContent stringContent = new StringContent("page=" + pagenum, Encoding.UTF8, "application/json");
                    //string content;

                    HttpResponseMessage response = await client.PostAsync(new Uri(uri), stringContent);

                    response.EnsureSuccessStatusCode();
                    string jsonString = await response.Content.ReadAsStringAsync();
                    //MessageBox.Show(jsonString, "jsonstring");

                    jsonString = cleanJsonString(jsonString);

                    //Deserialize our JSON
                    DataTable dt = JsonStringToDataTable(jsonString);
                    int numRows = 0;


                    foreach (DataRow row in dt.Rows)
                    {
                        Output0Buffer.AddRow();


                        //Output0Buffer.TeacherID = row["TeacherID"].ToString().Replace("\\", "");
                        //Output0Buffer.CampusID = row["CampusID"].ToString().Replace("\\", "");
                        //Output0Buffer.FirstName = row["FirstName"].ToString().Replace("\\", "");
                        //Output0Buffer.LastName = row["LastName"].ToString().Replace("\\", "");
                        //Output0Buffer.MiddleName = row["MiddleName"].ToString().Replace("\\", "");
                        //Output0Buffer.Grade = row["Grade"].ToString().Replace("\\", "");
                        //Output0Buffer.HomeRoom = row["HomeRoom"].ToString().Replace("\\", "");
                        //Output0Buffer.Department = row["Department"].ToString().Replace("\\", "");
                        //Output0Buffer.Phone = row["Phone"].ToString().Replace("\\", "");
                        //Output0Buffer.Email = row["Email"].ToString().Replace("\\", "");
                        //Output0Buffer.Address = row["Address"].ToString().Replace("\\", "");
                        //Output0Buffer.Address2 = row["Address2"].ToString().Replace("\\", "");
                        //Output0Buffer.City = row["City"].ToString().Replace("\\", "");
                        //Output0Buffer.State = row["State"].ToString().Replace("\\", "");
                        //Output0Buffer.Zip = row["zip"].ToString().Replace("\"", "");
                        //Output0Buffer.Deactivate = row["Deactivate"].ToString().Replace("\\", "");

                        numRows += 1;
                    }
                    WriteToDatabase(0, "GetTeachers - Row Count Page Num: " + pagenum, numRows.ToString());
                }
                return null;
            }
            return null;

        }
        catch (Exception ex)
        {
            WriteToDatabase(1, "GetTeachers", ex.Message);
            throw;
        }

    }


    private async Task<string> GetFileSize(string baseURL, string accessToken)
    {
        try
        {
            using (var client = new HttpClient())
            {
                string uri = baseURL + pLocation + "/count";
                client.BaseAddress = new Uri(uri);
                //MessageBox.Show(uri, "teachers uri");

                client.DefaultRequestHeaders.Accept.Clear();
                client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));
                client.DefaultRequestHeaders.Add("Authorization", "Bearer " + accessToken);

                var stringContent = new StringContent("", Encoding.UTF8, "application/json");

                //Get file size
                HttpResponseMessage response = await client.PostAsync(new Uri(uri), stringContent);

                response.EnsureSuccessStatusCode();
                string jsonString = await response.Content.ReadAsStringAsync();

                //string jsonString = response.Content.ToString();//.ReadAsStringAsync();
                //MessageBox.Show(jsonString, "jsonstring");

                //Deserialize our JSON
                var FileSizeObject = JsonHelper.JsonDeserialize<FileSize>(jsonString);

                // return the Access Token.
                var FileSize = FileSizeObject.count;
                //MessageBox.Show(FileSize, "File Size");
                WriteToDatabase(0, "RecordCount", FileSize);
                return FileSize;
            }
        }
        catch (Exception ex)
        {
            //MessageBox.Show(ex.Message);
            //MessageBox.Show(ex.StackTrace);
            WriteToDatabase(1, "GetFileSize", ex.Message);
            //return null;
            throw;
        }

    }

    /// <summary>
    /// This method uses the OAuth Client Credentials Flow to get an Access Token to provide
    /// Authorization to the APIs.
    /// </summary>
    /// <returns></returns>
    private static async Task<string> GetAccessToken(string baseURL, string sendToken, string clientId, string clientSecret)
    {
        try
        {
            using (var client = new HttpClient())
            {

                string uri = baseURL + tokenURI;
                client.BaseAddress = new Uri(uri);

                //MessageBox.Show(uri, "access token uri");

                client.DefaultRequestHeaders.Accept.Clear();
                client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/x-www-form-urlencoded"));
                client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Basic", sendToken);

                List<KeyValuePair<string, string>> postData = new List<KeyValuePair<string, string>>();
                postData.Add(new KeyValuePair<string, string>("grant_type", "client_credentials"));
                FormUrlEncodedContent content = new FormUrlEncodedContent(postData);

                // Post to the Server and parse the response.
                HttpResponseMessage response = await client.PostAsync(new Uri(uri), content);

                response.EnsureSuccessStatusCode();
                string jsonString = await response.Content.ReadAsStringAsync();

                //MessageBox.Show(jsonString, "jsonstring");

                //Deserialize our JSON
                 var accessTokenObject = JsonHelper.JsonDeserialize<AccessToken>(jsonString);

                // return the Access Token.
                var token = accessTokenObject.access_token;
                //MessageBox.Show(token, "access token");
                return token;
            }
        }
        catch (Exception ex)
        {
            //WriteToDatabase(1, "GetAccessToken", ex.Message);
            //MessageBox.Show(ex.Message);
            //MessageBox.Show(ex.StackTrace);
            //return null;
            throw ex;
        }
    }

    public string EncodeTo64(string toEncode)
    {
        byte[] toEncodeAsBytes = System.Text.ASCIIEncoding.ASCII.GetBytes(toEncode);
        string returnValue = System.Convert.ToBase64String(toEncodeAsBytes);
        return returnValue;

    }
    public class JsonHelper
    {
        /// <summary>
        /// JSON Serialization
        /// </summary>
        public static string JsonSerializer<T>(T t)
        {
            DataContractJsonSerializer ser = new DataContractJsonSerializer(typeof(T));
            MemoryStream ms = new MemoryStream();
            ser.WriteObject(ms, t);
            string jsonString = Encoding.UTF8.GetString(ms.ToArray());
            ms.Close();
            return jsonString;
        }
        /// <summary>
        /// JSON Deserialization
        /// </summary>
        public static T JsonDeserialize<T>(string jsonString)
        {
            DataContractJsonSerializer ser = new DataContractJsonSerializer(typeof(T));
            MemoryStream ms = new MemoryStream(Encoding.UTF8.GetBytes(jsonString));
            T obj = (T)ser.ReadObject(ms);
            return obj;
        }
    }

    //public class Teacher
    //{
    //    public string TeacherID { get; set; }
    //    public string CampusID { get; set; }
    //    public string FirstName { get; set; }
    //    public string LastName { get; set; }
    //    public string MiddleName { get; set; }
    //    public string Grade { get; set; }
    //    public string HomeRoom { get; set; }
    //    public string Department { get; set; }
    //    public string Phone { get; set; }
    //    public string Email { get; set; }
    //    public string Address { get; set; }
    //    public string Address2 { get; set; }
    //    public string City { get; set; }
    //    public string State { get; set; }
    //    public string Zip { get; set; }
    //    public string Deactivate { get; set; }
    //}

    public class AccessToken
    {
        public string access_token { get; set; }
        public string token_type { get; set; }
        public string expires_in { get; set; }
    }

    public class FileSize
    {
        public string count { get; set; }

    }



    public DataTable JsonStringToDataTable(string jsonString)
    {
        try
        {
            DataTable dt = new DataTable();
            string[] jsonStringArray = Regex.Split(jsonString.Replace("[", "").Replace("]", ""), "},{");
            List<string> ColumnsName = new List<string>();
            foreach (string jSA in jsonStringArray)
            {
                string[] jsonStringData = Regex.Split(jSA.Replace("{", "").Replace("}", ""), ",");
                foreach (string ColumnsNameData in jsonStringData)
                {
                    try
                    {
                        int idx = ColumnsNameData.IndexOf(":");
                        string ColumnsNameString = ColumnsNameData.Substring(0, idx - 1).Replace("\"", "");
                        if (!ColumnsName.Contains(ColumnsNameString))
                        {
                            ColumnsName.Add(ColumnsNameString);
                        }
                    }
                    catch //(Exception ex)
                    {
                        WriteToDatabase(1, "JsonStringToDataTable: Columns",(string.Format("Error Parsing Column Name : {0}", ColumnsNameData)));
                    }
                }
                break;
            }
            foreach (string AddColumnName in ColumnsName)
            {
                dt.Columns.Add(AddColumnName);
            }
            foreach (string jSA in jsonStringArray)
            {
                string[] RowData = Regex.Split(jSA.Replace("{", "").Replace("}", ""), ",");
                DataRow nr = dt.NewRow();
                foreach (string rowData in RowData)
                {
                    try
                    {
                        int idx = rowData.IndexOf(":");
                        string RowColumns = rowData.Substring(0, idx - 1).Replace("\"", "").Replace("\\", "");
                        string RowDataString = rowData.Substring(idx + 1).Replace("\"", "").Replace("\\", "");
                        nr[RowColumns] = RowDataString;
                    }
                    catch //(Exception ex)
                    {
                        WriteToDatabase(1, "JsonStringToDataTable: For each row", (string.Format("Error Parsing Row  Name : {0}", rowData)));
                        continue;
                    }
                }
                dt.Rows.Add(nr);
            }
            return dt;
        }
        catch (Exception ex)
        {
            WriteToDatabase(1, "JsonStringToDataTable", ex.Message);
            return null;
        }
    }

    public string cleanJsonString(string jsonString)
    {

        jsonString = jsonString.Replace("{\"name\":\"schoolstaff\",\"record\":[", "");
        jsonString = jsonString.Replace("\"_name\":\"schoolstaff\",", "");
        jsonString = jsonString.Replace("],\"@extensions\":\"s_ssf_ncea_x\"}", "");
        jsonString = jsonString.Replace(",\"@extensions\":\"u_schoolstaffuserfields,s_ssf_ncea_x\"", "");

        return jsonString;
    }


    public void WriteToDatabase(int Error, string Area, string LogInfo)
    {
        try
        {
            //MessageBox.Show("WriteToDatabase");
            var ConnString = Connections.PSDB.ConnectionString;

            using (SqlConnection conn = new SqlConnection(Connections.PSDB.ConnectionString))
            {
                if (conn.State != ConnectionState.Open) conn.Open();
                //string insertText = "Insert into OneRoster.LogFile (ClientUID, FileType, Area, LogInfo) Values (@ClientUID, @FileType, @Area, @LogInfo ) ";
                SqlCommand cmd = new SqlCommand("spLogInfo", conn);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("@ClientUID", SqlDbType.Int).Value = Variables.ClientKey;
                cmd.Parameters.Add("@Error", SqlDbType.Int).Value = Error;
                cmd.Parameters.Add("@FileType", SqlDbType.VarChar,50).Value = processType;
                cmd.Parameters.Add("@Area", SqlDbType.VarChar, 100).Value = Area;
                cmd.Parameters.Add("@LogInfo", SqlDbType.VarChar, 1000).Value = LogInfo;
                cmd.ExecuteNonQuery();
            }
        }
        catch //(Exception ex)
        {
            throw;
        }
    }
}




]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[packages.config]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="Newtonsoft.Json" version="12.0.1" targetFramework="net45" />
</packages>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 PSDB
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"PSDB").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public Int32 ClientKey
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["ClientKey"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Int32 ClientOneRosterID
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["ClientOneRosterID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientSecret
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientSecret"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ClientServer
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientServer"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_9cc764db5dc84a06abd71b37420e3e86.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{FF2D54D4-CBFE-43F2-A697-E0F017938BC8}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_9cc764db5dc84a06abd71b37420e3e86</RootNamespace>
    <AssemblyName>SC_9cc764db5dc84a06abd71b37420e3e86</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Runtime.Serialization" />
    <Reference Include="System.Security" />
    <Reference Include="System.Web" />
    <Reference Include="System.Web.Extensions" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="packages.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_9cc764db5dc84a06abd71b37420e3e86.Properties.Settings.get_Default():SC_9cc764db5dc84a06abd71b37420e3e86.Properties.Sett" +
    "ings")]

namespace SC_9cc764db5dc84a06abd71b37420e3e86.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 ClientID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool ClientID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 SourcedId
    {
        set
        {
            this[1] = value;
        }
    }
    public bool SourcedId_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Status
    {
        set
        {
            this[2] = value;
        }
    }
    public bool Status_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 DateLastModified
    {
        set
        {
            this[3] = value;
        }
    }
    public bool DateLastModified_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Title
    {
        set
        {
            this[4] = value;
        }
    }
    public bool Title_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Type
    {
        set
        {
            this[5] = value;
        }
    }
    public bool Type_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 StartDate
    {
        set
        {
            this[6] = value;
        }
    }
    public bool StartDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 EndDate
    {
        set
        {
            this[7] = value;
        }
    }
    public bool EndDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 ParentSourcedId
    {
        set
        {
            this[8] = value;
        }
    }
    public bool ParentSourcedId_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 SchoolYear
    {
        set
        {
            this[9] = value;
        }
    }
    public bool SchoolYear_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_9cc764db5dc84a06abd71b37420e3e86</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_9cc764db5dc84a06abd71b37420e3e86</msb:DisplayName>
    <msb:ProjectId>{F1B21B33-3ABC-47A8-A345-8796265D1A5E}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_9cc764db5dc84a06abd71b37420e3e86.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="packages.config" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:Breakpoint Include="ef57775db09148899b920547e57d297c">
      <msb:FileName>main.cs</msb:FileName>
      <msb:ColumnNumber>9</msb:ColumnNumber>
      <msb:Enabled>True</msb:Enabled>
      <msb:LineNumber>135</msb:LineNumber>
      <msb:Condition>
      </msb:Condition>
      <msb:ConditionType>1</msb:ConditionType>
      <msb:Language>C#</msb:Language>
      <msb:HitCountType>1</msb:HitCountType>
      <msb:HitCountTarget>1</msb:HitCountTarget>
    </msb:Breakpoint>
    <msb:Breakpoint Include="2067a49e263b4a8c9f71789548fb2305">
      <msb:FileName>main.cs</msb:FileName>
      <msb:LineNumber>192</msb:LineNumber>
      <msb:ColumnNumber>9</msb:ColumnNumber>
      <msb:Enabled>True</msb:Enabled>
      <msb:ConditionType>1</msb:ConditionType>
      <msb:Condition>
      </msb:Condition>
      <msb:Language>C#</msb:Language>
      <msb:HitCountType>1</msb:HitCountType>
      <msb:HitCountTarget>1</msb:HitCountTarget>
    </msb:Breakpoint>
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_9cc764db5dc84a06abd71b37420e3e86")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_9cc764db5dc84a06abd71b37420e3e86")]
[assembly: AssemblyCopyright("Copyright @  2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_9cc764db5dc84a06abd71b37420e3e86.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_9cc764db5dc84a06abd71b37420e3e86.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_9cc764db5dc84a06abd71b37420e3e86.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_9cc764db5dc84a06abd71b37420e3e86.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_9cc764db5dc84a06abd71b37420e3e86.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_9cc764db5dc84a06abd71b37420e3e86.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[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
KxAGAGAEtwoWAJYRBw0WAOcRBw0KAFYN5QQaAEcN5QQKAKgM5QQKAL8R5QQeAGYArA0GAIcGmA4G
AGcNyw4GAJQMaQsiACsGZAkiALgGZAkiAMEFVAsGAF8JtA8GANgIlxIGAFkStwoGAEYJtwoiAP0S
DBASAL8LjgISAD8LjgISAAsMjgISAB0MXwwSAEAGjgISAOYDgBESANwDXwwSAB0FjgISAPQLgBES
AAkOgBESAA8FjgIGABABtwoSAP0NXwwGADgMtwomAAEA1A0mACoA1A0mAE0A1A0eAH8ArA0eABoA
rA2nALcSAAAeAJAArA0GAGwEtwoGAB0TrQsqADIOcgwqAE0OfgsGAJ4KfQIiAI0NHREiADMFHREi
AFcJtwoWAG4QShAWAMQAShAWAHgIShAWAGIQShAWAAsSBw0SAKYFjgIWAF4IShAGAEcBuQIGAK8A
uQIAAAAAIQIAAAAAAQABAAEAEAA0CwAAEAABAAEAAQAQADkNAACZAAQADgABABAAoREAAKUABAAm
AAEAEAA+EAAASQAHACsAAQAQAGkPAABJAAgALQAAABAA0g4uD0kACQAyAAABEAChDy4PwQALADYA
AgAQAKENAABJAAwAOQACABAA1woAAEkADAA8AAIAEAC3CAAASQAPAEMAAwEQALkBAABtABAARgAD
ARAA1wEAAG0AFwBIAAMBEAD6AQAAbQAjAEoAAwEQAAwCAABtACsATAARAEoL7QMRAGwC7QMRAEgF
7QMGAD4Q8AMGAGkP9AMGADkN+AMBAK8R/AMBAK8R/AMRAL4KAQQRAJYFBgQRAPkDCwQBAIsD7QMB
AG8D7QMBAKkD7QMBAMUD7QMGAFAGDwQGACwNEgQGAKoPGQQBABYB7QMBAFYB7QMBAKgAHQQBAEAB
JAQGAFAGDwQGACwNKwQGALcI7QMGAJAK7QMGAOMK7QMGAKoPGQQBACQB7QMBAGgBDwQBAH8BDwQB
AIcB7QMBAKgAMgQBAEABHQQGAFAGDwQGACwNOwQGAHUC7QMGAOMK7QMGAKoPGQQBADMBQgQBAKgA
MgQBAEABHQQGAFAGDwQGACwNOwQGAHUC7QMGAMoK7QMBADMBQgQBAKgAMgQBAEABHQRQIAAAAADG
AD0IBgABAFggAAAAAMYASAgGAAEAYCAAAAAAxgDkEAYAAQBwIAAAAACGAPQPRwQBALQgAAAAAIEA
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
kA+JAZEAgQ4GAEkBmgKPASEC1AuVASkCmgSbATECdw2iAUkBXQ+oATkCpQquAUkB0hK1AUECoxK7
AXEAfgTCAXEAGRPKAWEBgQ7QAYEBgQ4GAGkCgQ4VAMkAgQ4GAHECERHgAZEB8QGCAMkAAxPoAZEB
QwntAXkC6QUGAMkAgQ7zAXECBhH5AYECnggbAoECewogAgkCOgkqAaEB+BAnAjwAFg40AkQAXwMK
AQwASANDAkQAbBH4AEwAFg40AlQAXwMKAVQAbBH4AAwAUgxuAgwAdhHdAAwAyAQhAJkBDgGaAgkC
9wWfAqEB+BCmAiEBgQ4GAJECgQ4QACEBshCsAiEBgRCzApkCKxK5AlwAJg0GAKkCgQ4QAFwAGwPd
AKEB+BDNArECGwPTAgEBgQ7ZAiEB5gLiAmQAFg40AmwAXwMKARQASANDAmwAbBH4AAkBCQQOAwkB
2xEUA7kC1AIaA8ECcw4sAxEBzxEyAxEBjhIKARQAUgxuAhQAdhHdABQAyAQhABwASANDAhwAUgxu
AhwAdhHdABwAyAQhAMkCgQ7TApkCmwuEA3QAgQ4GAHwAgQ6fA3QAGwPdACkBgQ6nAyQAcwBOBi4A
CwDpBC4AEwDyBC4AGwARBS4AIwAaBS4AKwBDBS4AMwBDBS4AOwBDBS4AQwAaBS4ASwBJBS4AUwBD
BS4AWwBgBUMAYwBJBoAAawCqBaAAawDYBcAAawACBuAAawAkBuMAmwBJBmEBewBJBoEBewBJBoMB
ewBJBqEBewBJBqMBewBJBsEBewBJBsMBewBJBuEBewBJBuMBewBJBkkDowARBWkDowARBYAHewBJ
BqAHewBJBsAHewBJBuAHewBJBgAIewBJBiAIewBJBmAIewBJBoAIewBJBuAIkwBJBiAJkwBJBmAJ
kwBJBqAJkwBJBi4AWABoAHgAlAAuAX0B2AEAAnQCNgNtAwMAAQAFABUABgAWAAcAGgAIABwACgAd
AAsAIAAAAE0CxgQAAKYJygQAAAgDxgQAANUJygQAANQQxgQAAGUKygQAADcDxgQAAOoJygQAAJQE
xgQAAAYKygQAAE8FxgQAABcKygQAABAGxgQAADoKygQAAAQGxgQAACcKygQAAAIDxgQAAM8JygQA
ABsNxgQAAE8KygQAAC4CzgQAAA8TxgQAADcCxgQAACwR1AQAACUO1AQAAGcN2AQAAJ4F3gQAAGQR
5AQAAAQL1AQAAGcF1AQAACkL1AQAACUS1AQBAA8AAwABABAABQABABEABwABABIACQABABMACwAB
ABQADQABABUADwABABYAEQABABcAEwABABgAFQABABkAFwABABoAGQABABsAGwABABwAHQABAB0A
HwABAB4AIQABAB8AIwABACAAJQABACEAJwABACIAKQACACwAKwACAC4ALQACAC8ALwACADAAMQAC
ADEAMwACADMANQACADQANwABADUANwACADYAOQACADwAOwABAD0AOwACAD4APQABAD8APQACAEAA
PwABAEEAPwACAEMAQQABAEQAQQAMAIwAIQAMAI4AIwANAJAAIQANAJIAIwAOAJQAIQAOAJYAIwAP
AJgAIQAPAJoAIwAzAF0AbQDGAPIA3QEuAj0CWAJeAsQC8gL6AosDlwMEgAAAAQAAAAAAAAAAAAAA
AACVAQAABAAAAAAAAAAAAAAA0gOwAgAAAAAPAAAAAAAAAAAAAADbAzYSAAAAAAQAAAAAAAAAAAAA
ANIDcgUAAAAABAAAAAAAAAAAAAAA0gOOAgAAAAAEAAAAAAAAAAAAAADkAwcNAAAAAA8AAAAAAAAA
AAAAANsDYRIAAAAADwAAAAAAAAAAAAAA2wPADAAAAAAEAAAAAAAAAAAAAADSA7cKAAAAAA8AAAAA
AAAAAAAAANsD4wwAAAAABAAAAAAAAAAAAAAA0gN+CwAAAAAAAAAAAQAAANwOAAAJAAIACgACAAsA
AgAMAAIADQACAA4AAgAPAAIAAAAAAHMAhwIAAAAAdQCHAjMASgA5AGMAPwBzAD8AfQDVAE4C1QBk
AgcBAgMHASIDHQFSAx0BXgN0AGgDHQG3Ax0BwwN0AM0DAAAAAABJRFRTQ29tcG9uZW50TWV0YURh
dGExMDAASURUU1ZhcmlhYmxlMTAwAElEVFNSdW50aW1lQ29ubmVjdGlvbkNvbGxlY3Rpb24xMDAA
SURUU1J1bnRpbWVDb25uZWN0aW9uMTAwAElEVFNDb25uZWN0aW9uTWFuYWdlcjEwMABJRFRTVmFy
aWFibGVzMTAwAElEVFNFdmFsdWF0b3JDb250ZXh0MTAwADw+dV9fMQBJRW51bWVyYWJsZWAxAFRh
c2tgMQBIdHRwSGVhZGVyVmFsdWVDb2xsZWN0aW9uYDEAQXN5bmNUYXNrTWV0aG9kQnVpbGRlcmAx
AFRhc2tBd2FpdGVyYDEATGlzdGAxAFRvSW50MzIAPGJhc2VVUkw+NV9fMgA8cGFnZVNpemU+NV9f
MgA8Y2xpZW50PjVfXzIAPD51X18yAEtleVZhbHVlUGFpcmAyADxhY2Nlc3NUb2tlbj41X18zADxw
YWdlcz41X18zAEVuY29kZVRvNjQAPGk+NV9fNAA8cGFnZW51bT41X181AFNDXzljYzc2NGRiNWRj
ODRhMDZhYmQ3MWIzNzQyMGUzZTg2ADxQcm9jZXNzQWNlZGVtaWNTZXNzaW9ucz5kX182ADxHZXRB
Y2FkZW1pY1Nlc3Npb25zPmRfXzcAZ2V0X1VURjgAPEdldEZpbGVTaXplPmRfXzgAPEdldEFjY2Vz
c1Rva2VuPmRfXzkAPE1vZHVsZT4AZ2V0X1BTREIAZ2V0X0NsaWVudE9uZVJvc3RlcklEAHNldF9D
bGllbnRJRABHZXRPdXRwdXRJRABnZXRfQVNDSUkAdG9rZW5VUkkAYmFzZVVSTABTeXN0ZW0uSU8A
VABBcmVhAFN5c3RlbS5EYXRhAGdldF9Db21wb25lbnRNZXRhRGF0YQBtc2NvcmxpYgBTeXN0ZW0u
Q29sbGVjdGlvbnMuR2VuZXJpYwBSZWFkQXNTdHJpbmdBc3luYwBQb3N0QXN5bmMAc2V0X1NvdXJj
ZWRJZABzZXRfUGFyZW50U291cmNlZElkAGNsaWVudElkAEFkZABNYXJrT3V0cHV0c0ZpbmlzaGVk
AHNldF9EYXRlTGFzdE1vZGlmaWVkAEF3YWl0VW5zYWZlT25Db21wbGV0ZWQAZ2V0X0lzQ29tcGxl
dGVkADx0b2tlbl90eXBlPmtfX0JhY2tpbmdGaWVsZAA8YWNjZXNzX3Rva2VuPmtfX0JhY2tpbmdG
aWVsZAA8ZXhwaXJlc19pbj5rX19CYWNraW5nRmllbGQAPGNvdW50PmtfX0JhY2tpbmdGaWVsZABE
YkNvbW1hbmQAU3FsQ29tbWFuZABSZXBsYWNlAGRlZmF1bHRJbnN0YW5jZQBFbnN1cmVTdWNjZXNz
U3RhdHVzQ29kZQB0b0VuY29kZQBnZXRfTWVzc2FnZQBIdHRwUmVzcG9uc2VNZXNzYWdlAEpzb25T
dHJpbmdUb0RhdGFUYWJsZQBJRGlzcG9zYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJv
bUhhbmRsZQBzZXRfVGl0bGUAR2V0UnVudGltZUNvbm5lY3Rpb25CeU5hbWUASUFzeW5jU3RhdGVN
YWNoaW5lAFNldFN0YXRlTWFjaGluZQBzdGF0ZU1hY2hpbmUATWljcm9zb2Z0LlNxbFNlcnZlci5E
dHMuUGlwZWxpbmUAc2V0X1R5cGUAU3FsRGJUeXBlAHNldF9Db21tYW5kVHlwZQBWYWx1ZVR5cGUA
U2VjdXJpdHlQcm90b2NvbFR5cGUAcHJvY2Vzc1R5cGUAZ2V0X3Rva2VuX3R5cGUAc2V0X3Rva2Vu
X3R5cGUAU3lzdGVtLkNvcmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJl
AEludGVybmFsRGF0YUNvbGxlY3Rpb25CYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAFdyaXRl
VG9EYXRhYmFzZQBDbG9zZQBEaXNwb3NlAFRyeVBhcnNlAHNldF9FbmREYXRlAHNldF9TdGFydERh
dGUAQ3JlYXRlAGdldF9TdGF0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb25uZWN0aW9uU3RhdGUA
PD4xX19zdGF0ZQBEeW5hbWljQXR0cmlidXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERl
YnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93
c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3luY1N0YXRlTWFjaGluZUF0
dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1
dGUARGVidWdnZXJIaWRkZW5BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRl
AEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJp
YnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUA
U1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0
cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFByZUV4ZWN1dGUAUG9zdEV4ZWN1
dGUAc2V0X1ZhbHVlAEF1dGhlbnRpY2F0aW9uSGVhZGVyVmFsdWUATWVkaWFUeXBlV2l0aFF1YWxp
dHlIZWFkZXJWYWx1ZQB2YWx1ZQBzZXRfRXhwZWN0MTAwQ29udGludWUAR2V0RmlsZVNpemUASnNv
bkRlc2VyaWFsaXplAEluZGV4T2YARW5jb2RpbmcAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBU
b0Jhc2U2NFN0cmluZwBnZXRfQ29ubmVjdGlvblN0cmluZwBjbGVhbkpzb25TdHJpbmcAanNvblN0
cmluZwBUb1N0cmluZwBHZXRTdHJpbmcAU3Vic3RyaW5nAFVyaQBnZXRfVGFzawBTeXN0ZW0uQ29t
cG9uZW50TW9kZWwAU0NfOWNjNzY0ZGI1ZGM4NGEwNmFiZDcxYjM3NDIwZTNlODYuZGxsAHNldF9D
bGllbnRJRF9Jc051bGwAc2V0X1NvdXJjZWRJZF9Jc051bGwAc2V0X1BhcmVudFNvdXJjZWRJZF9J
c051bGwAc2V0X0RhdGVMYXN0TW9kaWZpZWRfSXNOdWxsAHNldF9UaXRsZV9Jc051bGwAc2V0X1R5
cGVfSXNOdWxsAHNldF9FbmREYXRlX0lzTnVsbABzZXRfU3RhcnREYXRlX0lzTnVsbABzZXRfU2No
b29sWWVhcl9Jc051bGwAc2V0X1N0YXR1c19Jc051bGwAU2V0TnVsbABzZXRfU2VjdXJpdHlQcm90
b2NvbABiYXNlVXJsAE1lbW9yeVN0cmVhbQBnZXRfSXRlbQBzZXRfSXRlbQBTeXN0ZW0AcmVzb3Vy
Y2VNYW4Ac2VuZFRva2VuAEdldEFjY2Vzc1Rva2VuAGFjY2Vzc1Rva2VuAGdldF9hY2Nlc3NfdG9r
ZW4Ac2V0X2FjY2Vzc190b2tlbgBPcGVuAGdldF9leHBpcmVzX2luAHNldF9leHBpcmVzX2luAFNj
cmlwdE1haW4ARGF0YUNvbHVtbgBwTG9jYXRpb24AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVt
Lkdsb2JhbGl6YXRpb24AU3lzdGVtLlJ1bnRpbWUuU2VyaWFsaXphdGlvbgBzZXRfQXV0aG9yaXph
dGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBEYXRhQ29sdW1uQ29sbGVjdGlvbgBnZXRfUnVudGltZUNv
bm5lY3Rpb25Db2xsZWN0aW9uAFNxbFBhcmFtZXRlckNvbGxlY3Rpb24ARGF0YVJvd0NvbGxlY3Rp
b24ARGJDb25uZWN0aW9uAFNxbENvbm5lY3Rpb24ASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBT
ZXRFeGNlcHRpb24AU3lzdGVtLkRhdGEuQ29tbW9uAFN5c3RlbS5SdW50aW1lLlNlcmlhbGl6YXRp
b24uSnNvbgBDdWx0dXJlSW5mbwBMb2dJbmZvAE91dHB1dE5hbWVNYXAAT3V0cHV0TWFwAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuRFRTUnVudGltZVdyYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNQaXBl
bGluZVdyYXAAU3lzdGVtLk5ldC5IdHRwAHNldF9TY2hvb2xZZWFyAENsZWFyADw+dF9fYnVpbGRl
cgBPdXRwdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1ZmZlcgBnZXRfUmVzb3VyY2VN
YW5hZ2VyAGdldF9Db25uZWN0aW9uTWFuYWdlcgBTZXJ2aWNlUG9pbnRNYW5hZ2VyAEpzb25IZWxw
ZXIATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZS5XcmFwcGVyAE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuRHRzLlBpcGVsaW5lLldyYXBwZXIARGJQYXJhbWV0ZXIAU3FsUGFyYW1ldGVyAEdldEF3
YWl0ZXIAZ2V0X0NsaWVudFNlcnZlcgBEYXRhQ29udHJhY3RKc29uU2VyaWFsaXplcgBYbWxPYmpl
Y3RTZXJpYWxpemVyAEVycm9yAElFbnVtZXJhdG9yAEdldEVudW1lcmF0b3IALmN0b3IALmNjdG9y
AE91dHB1dElEcwBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2
aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDXzljYzc2NGRiNWRjODRhMDZhYmQ3MWIzNzQyMGUzZTg2
LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTQ185Y2M3NjRk
YjVkYzg0YTA2YWJkNzFiMzc0MjBlM2U4Ni5Qcm9wZXJ0aWVzAGdldF9SZWFkT25seVZhcmlhYmxl
cwBHZXRCeXRlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbkluZGV4ZXMAU2V0dGluZ3MA
PD40X190aGlzAFN5c3RlbS5UaHJlYWRpbmcuVGFza3MAQ29udGFpbnMAZ2V0X0NvbHVtbnMAR2V0
QWNhZGVtaWNTZXNzaW9ucwBQcm9jZXNzQWNlZGVtaWNTZXNzaW9ucwBTeXN0ZW0uVGV4dC5SZWd1
bGFyRXhwcmVzc2lvbnMAU3lzdGVtLkNvbGxlY3Rpb25zAENvbm5lY3Rpb25zAFN5c3RlbS5OZXQu
SHR0cC5IZWFkZXJzAEh0dHBIZWFkZXJzAEh0dHBSZXF1ZXN0SGVhZGVycwBnZXRfRGVmYXVsdFJl
cXVlc3RIZWFkZXJzAEJ1ZmZlcnMAZ2V0X1BhcmFtZXRlcnMAc2V0X0Jhc2VBZGRyZXNzAEZpbmlz
aE91dHB1dHMAc2V0X1N0YXR1cwBnZXRfUm93cwBDcmVhdGVOZXdPdXRwdXRSb3dzAENvbmNhdABG
b3JtYXQAUmVhZE9iamVjdABXcml0ZU9iamVjdABTeXN0ZW0uTmV0AGdldF9DbGllbnRTZWNyZXQA
Y2xpZW50U2VjcmV0AFNldEVuZE9mUm93c2V0AFdhaXQAU3BsaXQAZ2V0X0RlZmF1bHQAR2V0UmVz
dWx0AFNldFJlc3VsdABTeXN0ZW0uRGF0YS5TcWxDbGllbnQASHR0cENsaWVudABVc2VyQ29tcG9u
ZW50AFBhcmVudENvbXBvbmVudABTY3JpcHRDb21wb25lbnQAZ2V0X0N1cnJlbnQAZ2V0X0NvbnRl
bnQARm9ybVVybEVuY29kZWRDb250ZW50AFN0cmluZ0NvbnRlbnQASHR0cENvbnRlbnQAZ2V0X2Nv
dW50AHNldF9jb3VudABnZXRfQWNjZXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQAU3Rh
cnQAQ29udmVydABNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABQcmltZU91dHB1dABN
b3ZlTmV4dABTeXN0ZW0uVGV4dABHZXRWYWx1ZVdpdGhDb250ZXh0AFNjcmlwdENvbXBvbmVudEV2
YWxDb250ZXh0AGdldF9FdmFsdWF0b3JDb250ZXh0AERhdGFSb3cAQWRkUm93AE5ld1JvdwBSZWdl
eABUb0FycmF5AGdldF9DbGllbnRLZXkAZ2V0X0Fzc2VtYmx5AEV4ZWN1dGVOb25RdWVyeQAAAAAD
WwAAAQADXQAAB30ALAB7AAADewAAA30AAAMsAAADOgAAAyIAAD1KAHMAbwBuAFMAdAByAGkAbgBn
AFQAbwBEAGEAdABhAFQAYQBiAGwAZQA6ACAAQwBvAGwAdQBtAG4AcwAAP0UAcgByAG8AcgAgAFAA
YQByAHMAaQBuAGcAIABDAG8AbAB1AG0AbgAgAE4AYQBtAGUAIAA6ACAAewAwAH0AAANcAABHSgBz
AG8AbgBTAHQAcgBpAG4AZwBUAG8ARABhAHQAYQBUAGEAYgBsAGUAOgAgAEYAbwByACAAZQBhAGMA
aAAgAHIAbwB3AAA7RQByAHIAbwByACAAUABhAHIAcwBpAG4AZwAgAFIAbwB3ACAAIABOAGEAbQBl
ACAAOgAgAHsAMAB9AAArSgBzAG8AbgBTAHQAcgBpAG4AZwBUAG8ARABhAHQAYQBUAGEAYgBsAGUA
AEF7ACIAbgBhAG0AZQAiADoAIgBzAGMAaABvAG8AbABzAHQAYQBmAGYAIgAsACIAcgBlAGMAbwBy
AGQAIgA6AFsAAC0iAF8AbgBhAG0AZQAiADoAIgBzAGMAaABvAG8AbABzAHQAYQBmAGYAIgAsAAA/
XQAsACIAQABlAHgAdABlAG4AcwBpAG8AbgBzACIAOgAiAHMAXwBzAHMAZgBfAG4AYwBlAGEAXwB4
ACIAfQAAaywAIgBAAGUAeAB0AGUAbgBzAGkAbwBuAHMAIgA6ACIAdQBfAHMAYwBoAG8AbwBsAHMA
dABhAGYAZgB1AHMAZQByAGYAaQBlAGwAZABzACwAcwBfAHMAcwBmAF8AbgBjAGUAYQBfAHgAIgAA
E3MAcABMAG8AZwBJAG4AZgBvAAAVQABDAGwAaQBlAG4AdABVAEkARAAADUAARQByAHIAbwByAAAT
QABGAGkAbABlAFQAeQBwAGUAAAtAAEEAcgBlAGEAABFAAEwAbwBnAEkAbgBmAG8AAEdpAG0AcwAv
AG8AbgBlAHIAbwBzAHQAZQByAC8AdgAxAHAAMQAvAGEAYwBhAGQAZQBtAGkAYwBTAGUAcwBzAGkA
bwBuAHMAAA10AG8AawBlAG4ALwAAEVMAZQBzAHMAaQBvAG4AcwAAgJtJAHMATgB1AGwAbAAgAHAA
cgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABGAGEAbABz
AGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAAYwBvAGwA
dQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AABFPAHUAdABwAHUAdAAgADAAAAlQAFMARABCAAATQwBs
AGkAZQBuAHQASwBlAHkAACNDAGwAaQBlAG4AdABPAG4AZQBSAG8AcwB0AGUAcgBJAEQAABlDAGwA
aQBlAG4AdABTAGUAYwByAGUAdAAAGUMAbABpAGUAbgB0AFMAZQByAHYAZQByAABxUwBDAF8AOQBj
AGMANwA2ADQAZABiADUAZABjADgANABhADAANgBhAGIAZAA3ADEAYgAzADcANAAyADAAZQAzAGUA
OAA2AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAlUwBFAFMAUwBJ
AE8ATgBTAC0AcwBlAG4AZABUAG8AawBlAG4AARlBAGMAYwBlAHMAcwAgAFQAbwBrAGUAbgAAOUcA
ZQB0AEEAYwBjAGUAcwBzAFQAbwBrAGUAbgAgAHIAZQB0AHUAcgBuAGUAZAAgAG4AdQBsAGwAABNG
AGkAbABlACAAUwBpAHoAZQAAM0cAZQB0AEYAaQBsAGUAUwBpAHoAZQAgAHIAZQB0AHUAcgBuAGUA
ZAAgAG4AdQBsAGwAAB9QAHIAbwBjAGUAcwBzAFQAZQBhAGMAaABlAHIAcwAABzUAMAAwAAAVPwBw
AGEAZwBlAHMAaQB6AGUAPQAADSYAcABhAGcAZQA9AAAhYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8A
agBzAG8AbgAAG0EAdQB0AGgAbwByAGkAegBhAHQAaQBvAG4AAA9CAGUAYQByAGUAcgAgAABFRwBl
AHQAVABlAGEAYwBoAGUAcgBzACAALQAgAFIAbwB3ACAAQwBvAHUAbgB0ACAAUABhAGcAZQAgAE4A
dQBtADoAIAABF0cAZQB0AFQAZQBhAGMAaABlAHIAcwAADS8AYwBvAHUAbgB0AAAXUgBlAGMAbwBy
AGQAQwBvAHUAbgB0AAAXRwBlAHQARgBpAGwAZQBTAGkAegBlAABDYQBwAHAAbABpAGMAYQB0AGkA
bwBuAC8AeAAtAHcAdwB3AC0AZgBvAHIAbQAtAHUAcgBsAGUAbgBjAG8AZABlAGQAAQtCAGEAcwBp
AGMAABVnAHIAYQBuAHQAXwB0AHkAcABlAAAlYwBsAGkAZQBuAHQAXwBjAHIAZQBkAGUAbgB0AGkA
YQBsAHMAAAAAHKxvQTFrv0i9TQeg5xRK2wAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQESOQUgAQEd
AgUgAQEScQYgAQERgLkEBwERMAUVEXkBCAgAABUReQETAAcwAQEBEB4ABAoBETAIIAAVEkEBEwAE
BwERNAUVEXkBHAQKARE0BAcBETgFFRF5AQ4ECgEROAQHARE8BAoBETwFAAASgMkFIAEdBQ4FAAEO
HQUkBxMSTR0OFRJRAQ4dDggdDggOCA4VEVUBDg4SWQ4IDg4STRJdBSACDg4OBgACHQ4ODgUVElEB
DgQgAQgOBSACDggIBSABAhMABSABARMABQACDg4cCCAAFRFVARMABRURVQEOBCAAEwAFIAASgNkG
IAESgN0OAyAAAgQgABJZBCABDggFIAIBDhwFIAASgOEFIAEBElkDIAAOBAcBEmEFIAARgOkGIAIB
DhJhBiABARGA9QUgABKA+QkgAhKA/Q4RgQEEIAEBHAogAxKA/Q4RgQEIAyAACAsgAwESgJ0dCBKA
oQUgAgEIHAMHAQgHAAIIEoChDgUgAR0ICAUgABKBEQUgABKBFQYgARKBGQ4FIAASgKkFIAASgR0G
IAESgSEcBQAAEoElBiABHBKBKQcAARI5EYEtBSAAEoExByACAQ4SgTEEBwESZQIeAAcgAgESgT0c
BCAAHQUFIAEOHQUFIAEBHQUGIAEcEoE9GgcNCBIICA4ODg4IDhURdQEOFRF1ARwSXRJdBAABAQIG
AAEBEYFFBgADDg4ODgUVEkEBDgggABURdQETAAUVEXUBDgowAgIBEB4AEB4BCQoCFRF1AQ4RMAUV
EkEBHAUVEXUBHAkKAhURdQEcETAFIAEBEl0lBxAIEggcCAgOEoCBDggVEXUBEoCFFRF1AQ4SgIkS
gI0IEl0SXQQAAQgOBgACAg4QCAUAAQ4dDgYgAQESgUkFIAASgU0KIAAVEoFRARKBVQgVEoFRARKB
VQUAAg4ODgUgAgEODgggAwEOEoDJDg8gAhUSQQESgIUSgUkSgV0HFRJBARKAhQcVEXUBEoCFCwoC
FRF1ARKAhRE0BSAAEoCFBSAAEoFdByAAFRJBAQ4JCgIVEXUBDhE0BSAAEoCJAyAAHBsHCggSCA4O
EoCBDhURdQESgIUVEXUBDhJdEl0LCgIVEXUBEoCFETgJCgIVEXUBDhE4BAoBEiwWBwcIDg4SgJUV
EXUBEoCFFRF1AQ4SXQYgAQESgWULFRJRARURgWkCDg4HFRGBaQIODgcgAgETABMBDyABARUSgW0B
FRGBaQIODgsKAhURdQESgIURPAkKAhURdQEOETwECgESKAi3elxWGTTgiQiJhF3NgIDMkQiwP19/
EdUKOgIGDgMGEhQDBhIYAwYSDAQGEoClBAYSgLEEBhKAtQMGEiACBggGBhUReQEIAwYSCAYGFRF1
AQ4GBhURdQEcBgYVEXkBHAgGFRF1ARKAhQYGFRF5AQ4EBhKAkQcgABUSQQEICiADFRJBARwODg4J
IAIVEkEBDg4OCwAEFRJBAQ4ODg4OBCABDg4FIAESTQ4GIAMBCA4OAwAAAQQgAQECDSAEAQgdCB0S
gJ0SgKEGIAEBEoClBQAAEoCxBQAAEoC1BgABARKAtQQAABIgBhABAQ4eAAYQAQEeAA4DKAAIAygA
AgUoABKAqQMoAA4FCAASgLEFCAASgLUECAASIAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2Vw
dGlvblRocm93cwEIAQACAAAAAAAoAQAjU0NfOWNjNzY0ZGI1ZGM4NGEwNmFiZDcxYjM3NDIwZTNl
ODYAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxOAAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lv
bj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjctAQAoU2Ny
aXB0TWFpbis8UHJvY2Vzc0FjZWRlbWljU2Vzc2lvbnM+ZF9fNgAAKQEAJFNjcmlwdE1haW4rPEdl
dEFjYWRlbWljU2Vzc2lvbnM+ZF9fNwAAIQEAHFNjcmlwdE1haW4rPEdldEZpbGVTaXplPmRfXzgA
ACQBAB9TY3JpcHRNYWluKzxHZXRBY2Nlc3NUb2tlbj5kX185AAAEAQAAAAoBAAIAAAAAAQAAAAAA
tAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2Nvcmxp
YiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1
YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAA
AABQQURQQURQtAAAALBpAAAAAAAAAAAAAMppAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC8aQAA
AAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAA
AQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFiAAADsAwAAAAAAAAAAAADsAzQAAABW
AFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAA
PwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAA
AAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAETAMAAAEAUwB0AHIAaQBuAGcA
RgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBl
AG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYA
aQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwA5AGMAYwA3ADYANABkAGIANQBk
AGMAOAA0AGEAMAA2AGEAYgBkADcAMQBiADMANwA0ADIAMABlADMAZQA4ADYAAAAwAAgAAQBGAGkA
bABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAAAABwACgAAQBJAG4AdABlAHIAbgBh
AGwATgBhAG0AZQAAAFMAQwBfADkAYwBjADcANgA0AGQAYgA1AGQAYwA4ADQAYQAwADYAYQBiAGQA
NwAxAGIAMwA3ADQAMgAwAGUAMwBlADgANgAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBw
AHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA4AAAAKgABAAEA
TABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBh
AGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AOQBjAGMANwA2ADQAZABiADUAZABjADgANABhADAA
NgBhAGIAZAA3ADEAYgAzADcANAAyADAAZQAzAGUAOAA2AC4AZABsAGwAAABoACQAAQBQAHIAbwBk
AHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADkAYwBjADcANgA0AGQAYgA1AGQAYwA4ADQAYQAwADYA
YQBiAGQANwAxAGIAMwA3ADQAMgAwAGUAMwBlADgANgAAADQACAABAFAAcgBvAGQAdQBjAHQAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgAAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUA
cgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAABgAAAMAAAA3DkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_9cc764db5dc84a06abd71b37420e3e86</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::ClientKey,User::ClientOneRosterID,User::ClientSecret,User::ClientServer</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String">&lt;SOAP-ENV:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"&gt;
&lt;SOAP-ENV:Body&gt;
&lt;a1:ScriptBreakpointInfo id="ref-1" xmlns:a1="http://schemas.microsoft.com/clr/nsassem/Microsoft.SqlServer.VSTAHosting/Microsoft.SqlServer.VSTAScriptingLib%2C%20Version%3D15.0.0.0%2C%20Culture%3Dneutral%2C%20PublicKeyToken%3D89845dcd8080cc91"&gt;
&lt;Enabled&gt;true&lt;/Enabled&gt;
&lt;File id="ref-3"&gt;main.cs&lt;/File&gt;
&lt;FileLine&gt;135&lt;/FileLine&gt;
&lt;FileColumn&gt;9&lt;/FileColumn&gt;
&lt;/a1:ScriptBreakpointInfo&gt;
&lt;/SOAP-ENV:Body&gt;
&lt;/SOAP-ENV:Envelope&gt;
</arrayElement>
                        <arrayElement
                          dataType="System.String">&lt;SOAP-ENV:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"&gt;
&lt;SOAP-ENV:Body&gt;
&lt;a1:ScriptBreakpointInfo id="ref-1" xmlns:a1="http://schemas.microsoft.com/clr/nsassem/Microsoft.SqlServer.VSTAHosting/Microsoft.SqlServer.VSTAScriptingLib%2C%20Version%3D15.0.0.0%2C%20Culture%3Dneutral%2C%20PublicKeyToken%3D89845dcd8080cc91"&gt;
&lt;Enabled&gt;true&lt;/Enabled&gt;
&lt;File id="ref-3"&gt;main.cs&lt;/File&gt;
&lt;FileLine&gt;192&lt;/FileLine&gt;
&lt;FileColumn&gt;9&lt;/FileColumn&gt;
&lt;/a1:ScriptBreakpointInfo&gt;
&lt;/SOAP-ENV:Body&gt;
&lt;/SOAP-ENV:Envelope&gt;
</arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">A4</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">338550b5789e62119da99eaa83870fbeb037e669</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">c70361c448dc120b23e5510d6ca6f6ae</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Loop thru Clients\Academic Sessions\Script Component.Connections[PSDB]"
                      connectionManagerID="Package.ConnectionManagers[OneRosterNET]"
                      connectionManagerRefId="Package.ConnectionManagers[OneRosterNET]"
                      description="Process Log"
                      name="PSDB" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0]"
                      hasSideEffects="true"
                      name="Output 0">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[ClientID]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[ClientID]"
                          name="ClientID" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[SourcedId]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[SourcedId]"
                          name="SourcedId" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[Status]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[Status]"
                          name="Status" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[DateLastModified]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[DateLastModified]"
                          name="DateLastModified" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[Title]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[Title]"
                          name="Title" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[Type]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[Type]"
                          name="Type" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[StartDate]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[StartDate]"
                          name="StartDate" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[EndDate]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[EndDate]"
                          name="EndDate" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[ParentSourcedId]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[ParentSourcedId]"
                          name="ParentSourcedId" />
                        <outputColumn
                          refId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[SchoolYear]"
                          dataType="i4"
                          lineageId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0].Columns[SchoolYear]"
                          name="SchoolYear" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Loop thru Clients\Academic Sessions.Paths[Output 0]"
                  endId="Package\Loop thru Clients\Academic Sessions\Recordset Destination.Inputs[Recordset Destination Input]"
                  name="Output 0"
                  startId="Package\Loop thru Clients\Academic Sessions\Script Component.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Loop thru Clients\Truncate Tables"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{26D04F81-F15A-49D9-B1B5-573B669E4501}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Truncate Tables"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{9238981A-2F3C-4FFA-86C4-45A523C0CAF5}"
              SQLTask:SqlStatementSource="declare @ClientUID int&#xA;&#xA;set @ClientUID = ?&#xA;&#xA;delete OneRoster.Classes where ClientUID = @ClientUID&#xA;delete OneRoster.Courses where ClientUID = @ClientUID&#xA;delete OneRoster.Demographics where ClientUID = @ClientUID&#xA;delete OneRoster.Enrollments where ClientUID = @ClientUID&#xA;delete OneRoster.Orgs where ClientUID = @ClientUID&#xA;delete OneRoster.Users where ClientUID = @ClientUID&#xA;delete OneRoster.AcademicSessions  where ClientUID = @ClientUID" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@ClientUID"
                SQLTask:DtsVariableName="User::ClientOneRosterID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Loop thru Clients.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{B85F13EF-0CBC-4F14-8465-EFA31610B823}"
          DTS:From="Package\Loop thru Clients\Truncate Tables"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Loop thru Clients\Academic Sessions" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{8E9B7B5A-2EB2-43FF-9550-749FC3DD3FC8}"
          DTS:ObjectName="{8E9B7B5A-2EB2-43FF-9550-749FC3DD3FC8}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::ClientOneRosterID" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{E526F9ED-81B9-4B9C-83F5-92894E9FC658}"
          DTS:ObjectName="{E526F9ED-81B9-4B9C-83F5-92894E9FC658}"
          DTS:ValueIndex="1"
          DTS:VariableName="User::ClientServer" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{58E41E9F-44ED-4B22-97E9-0A111A0C3177}"
          DTS:ObjectName="{58E41E9F-44ED-4B22-97E9-0A111A0C3177}"
          DTS:ValueIndex="2"
          DTS:VariableName="User::ClientKey" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{BCB75151-779B-4AAD-892C-5B39CD81B298}"
          DTS:ObjectName="{BCB75151-779B-4AAD-892C-5B39CD81B298}"
          DTS:ValueIndex="3"
          DTS:VariableName="User::ClientSecret" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{97DC2C8F-29B9-4E4A-B051-E1ED57148EAB}"
          DTS:ObjectName="{97DC2C8F-29B9-4E4A-B051-E1ED57148EAB}"
          DTS:ValueIndex="4"
          DTS:VariableName="User::ProcessSessions" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{52D7D18D-F531-4743-9404-171150191C65}"
          DTS:ObjectName="{52D7D18D-F531-4743-9404-171150191C65}"
          DTS:ValueIndex="5"
          DTS:VariableName="User::ProcessClasses" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{503C214E-0050-4B5A-B4D2-585EFBC1A153}"
          DTS:ObjectName="{503C214E-0050-4B5A-B4D2-585EFBC1A153}"
          DTS:ValueIndex="6"
          DTS:VariableName="User::ProcessCourses" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{C59167B8-9684-4C6F-BC40-34308C5E7317}"
          DTS:ObjectName="{C59167B8-9684-4C6F-BC40-34308C5E7317}"
          DTS:ValueIndex="7"
          DTS:VariableName="User::ProcessEnrollments" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Truncate Log"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{6760A9FB-254E-4E3F-8D5C-F7543511201F}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Truncate Log"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{9238981A-2F3C-4FFA-86C4-45A523C0CAF5}"
          SQLTask:SqlStatementSource="--Select * &#xA;delete&#xA;from OneRoster.LogFile&#xA;where getdate() &gt; dateadd(d, 14, logdate) " xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{786123FF-F135-400B-9BE0-9F31769713E1}"
      DTS:From="Package\Data Flow Task - Get Customers"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Truncate Log" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{74B64602-56FE-4743-B7D4-FDCB41434934}"
      DTS:From="Package\Truncate Log"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Loop thru Clients" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="231,42"
          Id="Package\Data Flow Task - Get Customers"
          TopLeft="153.971698113208,29.518867924528" />
        <NodeLayout
          Size="167,42"
          Id="Package\Loop thru Clients\Academic Sessions"
          TopLeft="43,130" />
        <NodeLayout
          Size="146,42"
          Id="Package\Loop thru Clients\Truncate Tables"
          TopLeft="56.858490566038,22.5" />
        <EdgeLayout
          Id="Package\Loop thru Clients.PrecedenceConstraints[Constraint]"
          TopLeft="128.179245283019,64.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,65.5"
              Start="0,0"
              End="0,58">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,58" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43.924528301886795"
          IsExpanded="True"
          PanelSize="1072,245"
          Size="1072,289"
          Id="Package\Loop thru Clients"
          TopLeft="82.5,245.990566037736" />
        <NodeLayout
          Size="143,42"
          Id="Package\Truncate Log"
          TopLeft="379,136" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="269.471698113208,71.518867924528">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="181.028301886792,64.481132075472"
              Start="0,0"
              End="181.028301886792,56.981132075472">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.240566037736" />
                  <mssgle:CubicBezierSegment
                    Point1="0,28.240566037736"
                    Point2="0,32.240566037736"
                    Point3="4,32.240566037736" />
                  <mssgle:LineSegment
                    End="177.028301886792,32.240566037736" />
                  <mssgle:CubicBezierSegment
                    Point1="177.028301886792,32.240566037736"
                    Point2="181.028301886792,32.240566037736"
                    Point3="181.028301886792,36.240566037736" />
                  <mssgle:LineSegment
                    End="181.028301886792,56.981132075472" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="450.5,178">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="168,67.990566037736"
              Start="0,0"
              End="168,60.490566037736">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.995283018868" />
                  <mssgle:CubicBezierSegment
                    Point1="0,29.995283018868"
                    Point2="0,33.995283018868"
                    Point3="4,33.995283018868" />
                  <mssgle:LineSegment
                    End="164,33.995283018868" />
                  <mssgle:CubicBezierSegment
                    Point1="164,33.995283018868"
                    Point2="168,33.995283018868"
                    Point3="168,37.995283018868" />
                  <mssgle:LineSegment
                    End="168,60.490566037736" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="DATA NEEDED:&#xD;&#xA;Orgs&#xD;&#xA;Users&#xD;&#xA;courses&#xD;&#xA;Classes&#xD;&#xA;Enrollment&#xD;&#xA;Academic Sessions"
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="128,136"
          Id="88452310-04f5-4630-9e61-a905b633ca86"
          TopLeft="1146,44" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Data Flow Task - Get Customers">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="187,42"
          Id="Package\Data Flow Task - Get Customers\Recordset Destination"
          TopLeft="93,165" />
        <NodeLayout
          Size="152,42"
          Id="Package\Data Flow Task - Get Customers\OLE DB Source"
          TopLeft="112,65" />
        <EdgeLayout
          Id="Package\Data Flow Task - Get Customers.Paths[OLE DB Source Output]"
          TopLeft="187.25,107">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,58"
              Start="0,0"
              End="0,50.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,50.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Data Flow Task - Get Customers\OLE DB Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Loop thru Clients\Academic Sessions">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="163,42"
          Id="Package\Loop thru Clients\Academic Sessions\Script Component"
          TopLeft="304,94" />
        <NodeLayout
          Size="182,42"
          Id="Package\Loop thru Clients\Academic Sessions\Recordset Destination"
          TopLeft="301,205" />
        <EdgeLayout
          Id="Package\Loop thru Clients\Academic Sessions.Paths[Output 0]"
          TopLeft="388.75,136">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,69"
              Start="0,0"
              End="0,61.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,61.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>