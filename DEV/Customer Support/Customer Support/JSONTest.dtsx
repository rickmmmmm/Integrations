<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="1/12/2018 4:56:19 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="CS-NBLAKELY"
  DTS:CreatorName="HAYESSOFT\nblakely"
  DTS:DTSID="{76B0CF39-7D24-4F8C-A089-EA7732573832}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="14.0.0800.90"
  DTS:LocaleID="1033"
  DTS:ObjectName="JSONTest"
  DTS:PackageType="5"
  DTS:VersionBuild="21"
  DTS:VersionGUID="{B59DF84E-EF7C-4E47-BC1A-D04ACE5309CF}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[CS-NBLAKELY\MSSQLSERVER2014.TipWebHostedCrosbyISD]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{A8321ED9-C1A2-4F6E-B7D4-A5592D9AF20E}"
      DTS:ObjectName="CS-NBLAKELY\MSSQLSERVER2014.TipWebHostedCrosbyISD">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=CS-NBLAKELY\MSSQLSERVER2014;Initial Catalog=TipWebHostedCrosbyISD;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Flat File Connection Manager]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{D4239310-4DEF-413E-BAF0-28E11A0DEBF7}"
      DTS:ObjectName="Flat File Connection Manager">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:Unicode="True"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="E:\EZImportFiles\CrosbyISD_SFTP_User\Staff.json">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="303"
              DTS:TextQualified="True"
              DTS:ObjectName="Column 0"
              DTS:DTSID="{9DFBAA40-819E-46F7-A5E8-076BDF4259E2}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3022BC0E-95D3-4C39-9AAC-8529BF2B5913}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileName">
      <DTS:VariableValue
        DTS:DataType="8">E:\EZImportFiles\CrosbyISD_SFTP_User\Staff.json</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Data Flow Task"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:Disabled="True"
      DTS:DTSID="{56F8EFB7-A682-4EEA-9BB4-B3659F9F26DE}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Data Flow Task"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Data Flow Task\Flat File Source"
              componentClassID="Microsoft.FlatFileSource"
              contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Flat File Source"
              localeId="1033"
              name="Flat File Source"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether zero-length columns are treated as null."
                  name="RetainNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                  name="FileNameColumnName"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\Flat File Source.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[Flat File Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Flat File Connection Manager]"
                  name="FlatFileConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output]"
                  name="Flat File Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Column 0]"
                      dataType="nText"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Column 0]"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Column 0]"
                      name="Column 0"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Column 0]"
                      dataType="nText"
                      name="Column 0" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Error Output]"
                  isErrorOut="true"
                  name="Flat File Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      dataType="nText"
                      description="Flat File Source Error Output Column"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      name="Flat File Source Error Output Column" />
                    <outputColumn
                      refId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Multicast"
              componentClassID="Microsoft.Multicast"
              contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
              name="Multicast">
              <inputs>
                <input
                  refId="Package\Data Flow Task\Multicast.Inputs[Multicast Input 1]"
                  name="Multicast Input 1">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Multicast.Outputs[Multicast Output 1]"
                  dangling="true"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 1"
                  synchronousInputId="Package\Data Flow Task\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Script Component"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;11"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Script Component"
              version="11">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="33">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Web.Script.Serialization;
using Microsoft.SqlServer.Dts.Pipeline;
using SC_4b4fe509e957447ca5f237c3a3f999bf.Models;
using System.Collections.Generic;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */
        JavaScriptSerializer js = new JavaScriptSerializer();

        BlobColumn combColumn = Row.Column0;

        string reviewConverted = System.Text.Encoding.UTF8.GetString(combColumn.GetBlobData(0, Convert.ToInt32(combColumn.Length)));

        List<StaffImport> staffimports = js.Deserialize<List<StaffImport>>(reviewConverted);

        foreach (var imp in staffimports)
        {
            Row.StaffID = imp.StaffID;
            Row.CampusID = imp.CampusID;
            Row.FirstName = imp.FirstName;
            Row.LastName = imp.LastName;
            Row.MiddleName = imp.MiddleName;
            Row.StaffType = imp.StaffType;
            Row.Location = imp.Location;
            Row.Department = imp.Department;
            Row.Phone = imp.Phone;
            Row.Email = imp.Email;
            Row.Address = imp.Address;
            Row.Address2 = imp.Address2;
            Row.City = imp.City;
            Row.State = imp.State;
            Row.Zip = imp.Zip;
            Row.Deactivate = imp.Deactivate;
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_4b4fe509e957447ca5f237c3a3f999bf.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{B6A4DFBA-38D2-43A8-9BC7-1E6027831737}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_4b4fe509e957447ca5f237c3a3f999bf</RootNamespace>
    <AssemblyName>SC_4b4fe509e957447ca5f237c3a3f999bf</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Web.Extensions" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Models\StaffImport.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_4b4fe509e957447ca5f237c3a3f999bf.Properties.Settings.get_Default():SC_4b4fe509e957447ca5f237c3a3f999bf.Properties.Sett" +
    "ings")]

namespace SC_4b4fe509e957447ca5f237c3a3f999bf.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public BlobColumn Column0
    {
        get
        {
            return (BlobColumn)Buffer[BufferColumnIndexes[0]];
        }
    }
    public bool Column0_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String StaffID
    {
        set
        {
            this[1] = value;
        }
    }
    public bool StaffID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CampusID
    {
        set
        {
            this[2] = value;
        }
    }
    public bool CampusID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String FirstName
    {
        set
        {
            this[3] = value;
        }
    }
    public bool FirstName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String LastName
    {
        set
        {
            this[4] = value;
        }
    }
    public bool LastName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String MiddleName
    {
        set
        {
            this[5] = value;
        }
    }
    public bool MiddleName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String StaffType
    {
        set
        {
            this[6] = value;
        }
    }
    public bool StaffType_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Location
    {
        set
        {
            this[7] = value;
        }
    }
    public bool Location_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Department
    {
        set
        {
            this[8] = value;
        }
    }
    public bool Department_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Phone
    {
        set
        {
            this[9] = value;
        }
    }
    public bool Phone_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Email
    {
        set
        {
            this[10] = value;
        }
    }
    public bool Email_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Address
    {
        set
        {
            this[11] = value;
        }
    }
    public bool Address_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Address2
    {
        set
        {
            this[12] = value;
        }
    }
    public bool Address2_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String City
    {
        set
        {
            this[13] = value;
        }
    }
    public bool City_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(13);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String State
    {
        set
        {
            this[14] = value;
        }
    }
    public bool State_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(14);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Zip
    {
        set
        {
            this[15] = value;
        }
    }
    public bool Zip_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(15);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Deactivate
    {
        set
        {
            this[16] = value;
        }
    }
    public bool Deactivate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(16);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_4b4fe509e957447ca5f237c3a3f999bf</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_4b4fe509e957447ca5f237c3a3f999bf</msb:DisplayName>
		<msb:ProjectId>{BC04F427-1F4D-44C5-A009-88C4EEDC6301}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_4b4fe509e957447ca5f237c3a3f999bf.csproj"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="Models\StaffImport.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_4b4fe509e957447ca5f237c3a3f999bf")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_4b4fe509e957447ca5f237c3a3f999bf")]
[assembly: AssemblyCopyright("Copyright @  2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Models\StaffImport.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SC_4b4fe509e957447ca5f237c3a3f999bf.Models
{
    public class StaffImport
    {
        public string StaffID { get; set; }
        public string CampusID { get; set; }
        public string FirstName { get; set; }
        public String LastName { get; set; }
        public string MiddleName { get; set; }
        public string StaffType { get; set; }
        public string Location { get; set; }
        public string Department { get; set; }
        public string Phone { get; set; }
        public string Email { get; set; }
        public string Address { get; set; }
        public string Address2 { get; set; }
        public string City { get; set; }
        public string State { get; set; }
        public string Zip { get; set; }
        public string Deactivate { get; set; }

    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_4b4fe509e957447ca5f237c3a3f999bf.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_4b4fe509e957447ca5f237c3a3f999bf.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_4b4fe509e957447ca5f237c3a3f999bf.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_4b4fe509e957447ca5f237c3a3f999bf.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_4b4fe509e957447ca5f237c3a3f999bf.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_4b4fe509e957447ca5f237c3a3f999bf.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAGobZloAAAAAAAAAAOAAIiALATAAACYAAAAIAAAAAAAA2kQA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAIhEAABPAAAAAGAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA4CQAAAAgAAAAJgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAYAAAAAYAAAAoAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAALgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAC8
RAAAAAAAAEgAAAACAAUA6CUAAOgdAAABAAAAAAAAANBDAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACiobMAUAHwEAAAEAABFzEgAACgNv
BgAABgooEwAACgYWBm8UAAAKKBUAAApvFgAACm8XAAAKCwdvAQAAK28ZAAAKDDjIAAAAEgIoGgAA
Cg0DCW83AAAGbwgAAAYDCW85AAAGbwoAAAYDCW87AAAGbwwAAAYDCW89AAAGbw4AAAYDCW8/AAAG
bxAAAAYDCW9BAAAGbxIAAAYDCW9DAAAGbxQAAAYDCW9FAAAGbxYAAAYDCW9HAAAGbxgAAAYDCW9J
AAAGbxoAAAYDCW9LAAAGbxwAAAYDCW9NAAAGbx4AAAYDCW9PAAAGbyAAAAYDCW9RAAAGbyIAAAYD
CW9TAAAGbyQAAAYDCW9VAAAGbyYAAAYSAigbAAAKOiz////eDhIC/hYCAAAbbxwAAArcKgABEAAA
AgA1ANsQAQ4AAAAAHgIoKgAABioqAgMEBSgdAAAKKmYCex4AAAoCex8AAAoWlG8gAAAKdA4AAAEq
IgIWKCEAAAoqJgIXAygiAAAKKloDLAgCFygjAAAKKnIBAABwcyQAAAp6JgIYAygiAAAKKloDLAgC
GCgjAAAKKnIBAABwcyQAAAp6JgIZAygiAAAKKloDLAgCGSgjAAAKKnIBAABwcyQAAAp6JgIaAygi
AAAKKloDLAgCGigjAAAKKnIBAABwcyQAAAp6JgIbAygiAAAKKloDLAgCGygjAAAKKnIBAABwcyQA
AAp6JgIcAygiAAAKKloDLAgCHCgjAAAKKnIBAABwcyQAAAp6JgIdAygiAAAKKloDLAgCHSgjAAAK
KnIBAABwcyQAAAp6JgIeAygiAAAKKloDLAgCHigjAAAKKnIBAABwcyQAAAp6KgIfCQMoIgAACipe
AywJAh8JKCMAAAoqcgEAAHBzJAAACnoqAh8KAygiAAAKKl4DLAkCHwooIwAACipyAQAAcHMkAAAK
eioCHwsDKCIAAAoqXgMsCQIfCygjAAAKKnIBAABwcyQAAAp6KgIfDAMoIgAACipeAywJAh8MKCMA
AAoqcgEAAHBzJAAACnoqAh8NAygiAAAKKl4DLAkCHw0oIwAACipyAQAAcHMkAAAKeioCHw4DKCIA
AAoqXgMsCQIfDigjAAAKKnIBAABwcyQAAAp6KgIfDwMoIgAACipeAywJAh8PKCMAAAoqcgEAAHBz
JAAACnoqAh8QAygiAAAKKl4DLAkCHxAoIwAACipyAQAAcHMkAAAKeh4CKCUAAAoqHgIoJgAACip+
AignAAAKAgJzLgAABn0BAAAEAgJzLwAABn0CAAAEKpIEcp4AAHAabygAAAosFQIFAgMoKQAACg4E
cwUAAAZvLAAABipKKwcCA28tAAAGA28oAAAGLfEqBio6AigqAAAKAgN9AwAABCo6AigqAAAKAgN9
BAAABCoeAigqAAAKKq5+BQAABC0ecq4AAHDQBwAAAigrAAAKbywAAApzLQAACoAFAAAEfgUAAAQq
Gn4GAAAEKh4CgAYAAAQqGn4HAAAEKh4CKC4AAAoqLnM1AAAGgAcAAAQqHgJ7CAAABCoiAgN9CAAA
BCoeAnsJAAAEKiICA30JAAAEKh4CewoAAAQqIgIDfQoAAAQqHgJ7CwAABCoiAgN9CwAABCoeAnsM
AAAEKiICA30MAAAEKh4Cew0AAAQqIgIDfQ0AAAQqHgJ7DgAABCoiAgN9DgAABCoeAnsPAAAEKiIC
A30PAAAEKh4CexAAAAQqIgIDfRAAAAQqHgJ7EQAABCoiAgN9EQAABCoeAnsSAAAEKiICA30SAAAE
Kh4CexMAAAQqIgIDfRMAAAQqHgJ7FAAABCoiAgN9FAAABCoeAnsVAAAEKiICA30VAAAEKh4CexYA
AAQqIgIDfRYAAAQqHgJ7FwAABCoiAgN9FwAABCpCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAA
AAAFAGwAAACcDgAAI34AAAgPAACgCwAAI1N0cmluZ3MAAAAAqBoAACABAAAjVVMAyBsAABAAAAAj
R1VJRAAAANgbAAAQAgAAI0Jsb2IAAAAAAAAAAgAAAVcVogkJCQAAAPoBMwAWAAABAAAAJgAAAAkA
AAAXAAAAVwAAAD0AAAAuAAAAQAAAAAEAAAAEAAAANQAAAEYAAAACAAAAAQAAAAUAAAABAAAAAQAA
AAAAEQYBAAAAAAAGALAEGAkGAEQFGAkGAPwDBQkPAIwJAAAGACkEJwgGAJMEJwgGAHQEJwgGACsF
JwgGANAEJwgGAOkEJwgGAEAEJwgGAFsEuAUKAAQF5AIOALgH5AIGAA0AlwA/AO0IAAAKALQI5AIO
AKUI5AIKAHAI5AIKAMkK5AIGAG4KmgcGAN8DBQkGAMUIOAkGAGQI8gcSAJED5wUSABAE5wUSAF0D
3QcGAMQDGAkWANUIBwgGAK8FVAsGAAILmgcGAFYCmgcGADkImgcGANUFmgcGAFMImgcGADADmgcG
AGICmgcGAIMLJwgAAAAAPwAAAAAAAQABAAEAEACtBwAAEAABAAEAAQAQAJgIAABFAAEABQABABAA
qwoAAFEAAQAqAAEAEABKCgAAVQADAC4AAQAQAMoJAABVAAQALwAAABAAPwmbCVUABQAwAAABEAD5
CZsJbQAHADQAAQAQAAoLCQpVAAgANwAGAEoK1gAGAMoJ2gABALkK3gABALkK3gARAKEH4gARAE0D
5gARAEYC6gABAMwA7gABAOUA7gABADUB7gABABsB7gABAP8A7gABAGcB7gABAMwB7gABABQC7gAB
AFAB7gABALUB7gABAPsB7gABALIA7gABADAC7gABAIIB7gABAOYB7gABAJkB7gBQIAAAAADGAGIF
BgABAFggAAAAAMYAbQUGAAEAYCAAAAAAxgBgC/EAAQCcIQAAAACGGPgIBgACAKQhAAAAAIYY+Ah0
AAIAryEAAAAAhggBAPcABQDJIQAAAACGCDkGcAAFANIhAAAAAIYIVAAQAAUA3CEAAAAAhghgBvwA
BgDzIQAAAACGCG0AEAAHAP0hAAAAAIYIcwb8AAgAFCIAAAAAhgjMAhAACQAeIgAAAACGCLEG/AAK
ADUiAAAAAIYIsQIQAAsAPyIAAAAAhgidBvwADABWIgAAAACGCJUCEAANAGAiAAAAAIYIhwb8AA4A
dyIAAAAAhggnAxAADwCBIgAAAACGCNcG/AAQAJgiAAAAAIYI0AcQABEAoiIAAAAAhggkB/wAEgC5
IgAAAACGCJwKEAATAMMiAAAAAIYIWgf8ABQA2iIAAAAAhggPAxAAFQDlIgAAAACGCMYG/AAWAP0i
AAAAAIYIBwYQABcACCMAAAAAhggTB/wAGAAgIwAAAACGCGIKEAAZACsjAAAAAIYIRwf8ABoAQyMA
AAAAhggpABAAGwBOIwAAAACGCEwG/AAcAGYjAAAAAIYIlQsQAB0AcSMAAAAAhghwB/wAHgCJIwAA
AACGCIcDEAAfAJQjAAAAAIYI7Ab8ACAArCMAAAAAhgiQCBAAIQC3IwAAAACGCDgH/AAiAM8jAAAA
AIYItQMQACMA2iMAAAAAhgj9BvwAJADyIwAAAACGAHcLcAAlAPojAAAAAIYAdQpwACUAAiQAAAAA
hhj4CAYAJQAiJAAAAADGAD4LAQElAEckAAAAAMYBNwvxACkAWiQAAAAAxgFgC/EAKgBcJAAAAACG
GPgICwErAGskAAAAAIYY+AgLASwAeiQAAAAAgxj4CAYALQCCJAAAAACTCMEIEQEtAK4kAAAAAJMI
NQMWAS0AtSQAAAAAkwhBAxsBLQC9JAAAAACWCIEKIQEuAMQkAAAAAIYY+AgGAC4AzCQAAAAAkRj+
CCYBLgDYJAAAAACGCEgAKgEuAOAkAAAAAIYIVAAQAC4A6SQAAAAAhghgACoBLwDxJAAAAACGCG0A
EAAvAPokAAAAAIYIvgIqATAAAiUAAAAAhgjMAhAAMAALJQAAAACGCKQCKgExABMlAAAAAIYIsQIQ
ADEAHCUAAAAAhgiGAioBMgAkJQAAAACGCJUCEAAyAC0lAAAAAIYIGQMqATMANSUAAAAAhggnAxAA
MwA+JQAAAACGCMMHKgE0AEYlAAAAAIYI0AcQADQATyUAAAAAhgiNCioBNQBXJQAAAACGCJwKEAA1
AGAlAAAAAIYIBQMqATYAaCUAAAAAhggPAxAANgBxJQAAAACGCP0FKgE3AHklAAAAAIYIBwYQADcA
giUAAAAAhghWCioBOACKJQAAAACGCGIKEAA4AJMlAAAAAIYIHAAqATkAmyUAAAAAhggpABAAOQCk
JQAAAACGCIwLKgE6AKwlAAAAAIYIlQsQADoAtSUAAAAAhgh9AyoBOwC9JQAAAACGCIcDEAA7AMYl
AAAAAIYIiAgqATwAziUAAAAAhgiQCBAAPADXJQAAAACGCKYDKgE9AN8lAAAAAIYItQMQAD0AeiQA
AAAAhhj4CAYAPgAAAAEAewsAAAEAuggAAAIA1AkAAAMAfggAAAEAeQUAAAEAeQUAAAEAeQUAAAEA
eQUAAAEAeQUAAAEAeQUAAAEAeQUAAAEAeQUAAAEAeQUAAAEAeQUAAAEAeQUAAAEAeQUAAAEAeQUA
AAEAeQUAAAEAeQUAAAEAeQUAAAEAeQUAAAEAeQUAAAEAeQUAAAEAeQUAAAEAeQUAAAEAeQUAAAEA
eQUAAAEAeQUAAAEAeQUAAAEAeQUAAAEAeQUAAAEAeQUAAAEAeQUAAAEAeQUAAAEAeQUAAAEAeQUA
AAEAegAAAAIA2gIAAAMAuggAAAQAfggAAAEAuggAAAEAewsAAAEAzwoAAAEAzwoAAAEAeQUAAAEA
eQUAAAEAeQUAAAEAeQUAAAEAeQUAAAEAeQUAAAEAeQUAAAEAeQUAAAEAeQUAAAEAeQUAAAEAeQUA
AAEAeQUAAAEAeQUAAAEAeQUAAAEAeQUAAAEAeQUAAAEAeQUJAPgIAQARAPgIBgAZAPgICgApAPgI
EAAxAPgIEAA5APgIEABBAPgIEABJAPgIEABRAPgIEABZAPgIEABhAPgIEABpAPgIBgCxAPgIBgDR
APgIFQDhAPgIBgChAGIFBgChAG0FBgDpAPgIBgDxADYAKQBxANwFLgD5ABQAMgBxAIIANwDxANIF
PgDpAH8FRAAMAOoIWwAUANkKawAUAEsLcAABAXUDBgCJAPgIdACJALoIfgCJANQJggCRAIgHhgCJ
AHkHiwCJAJEHkACJAIAHAQAJAfgIEACJAHcLcACJAHUKcAChAPgIBgARAQIKlgChAOgJngCpAPgI
BgAhAXQCpAAhAX8LrQC5APgIswDZAPgIBgAuAAsASgEuABMAUwEuABsAcgEuACMAewEuACsApAEu
ADMApAEuADsApAEuAEMAewEuAEsAqgEuAFMApAEuAFsAwQFDAGMACwLhAHsACwLjAGsACwIBAXsA
CwIhAXsACwJBAXsACwJhAXsACwKBAXsACwKhAXsACwLBAXsACwLhAXsACwIBAnsACwIhAnsACwJB
AnsACwJhAnsACwKBAnsACwKhAnsACwLBAnsACwLhAnsACwJpBHMAcgGJBHMAcgHgBnsACwIAB3sA
CwIgB3sACwJAB3sACwJgB3sACwKAB3sACwKgB3sACwLAB3sACwLgB3sACwIACHsACwIgCHsACwJA
CHsACwJgCHsACwKACHsACwKgCHsACwLACHsACwLgCHsACwIACXsACwIgCXsACwJACXsACwJgCXsA
CwKACXsACwKgCXsACwLACXsACwLgCXsACwIACnsACwIgCnsACwJACnsACwJgCnsACwKACnsACwKg
CnsACwLACnsACwIbAAMAAQAHACMACAAlAAkAJgAAAAUALgEAAD0GMwEAAFgANwEAAGQGMwEAAHEA
NwEAAHcGMwEAANACNwEAALUGMwEAALUCNwEAAKEGMwEAAJkCNwEAAIsGMwEAACsDNwEAANsGMwEA
ANQHNwEAACgHMwEAAKAKNwEAAF4HMwEAABMDNwEAAMoGMwEAAAsGNwEAABcHMwEAAGYKNwEAAEsH
MwEAAC0ANwEAAFAGMwEAAJkLNwEAAHQHMwEAAKADNwEAAPAGMwEAAJQINwEAADwHMwEAALkDNwEA
AAEHMwEAAMUIOwEAAFUDQAEAAIUKRQEAAFgANwEAAHEANwEAANACNwEAALUCNwEAAJkCNwEAACsD
NwEAANQHNwEAAKAKNwEAABMDNwEAAAsGNwEAAGYKNwEAAC0ANwEAAJkLNwEAAKADNwEAAJQINwEA
ALkDNwECAAYAAwACAAcABQABAAgABwABAAkACQABAAoACwABAAsADQABAAwADwABAA0AEQABAA4A
EwABAA8AFQABABAAFwABABEAGQABABIAGwABABMAHQABABQAHwABABUAIQABABYAIwABABcAJQAB
ABgAJwABABkAKQABABoAKwABABsALQABABwALwABAB0AMQABAB4AMwABAB8ANQABACAANwABACEA
OQABACIAOwABACMAPQABACQAPwABACUAQQABACYAQwABACcARQACADEARwACADIASQABADMASQAC
ADQASwACADcATQABADgATQACADkATwABADoATwACADsAUQABADwAUQACAD0AUwABAD4AUwACAD8A
VQABAEAAVQACAEEAVwABAEIAVwACAEMAWQABAEQAWQACAEUAWwABAEYAWwACAEcAXQABAEgAXQAC
AEkAXwABAEoAXwACAEsAYQABAEwAYQACAE0AYwABAE4AYwACAE8AZQABAFAAZQACAFEAZwABAFIA
ZwACAFMAaQABAFQAaQACAFUAawABAFYAawBUAGQABIAAAAEAAAAAAAAAAAAAAAAAiwUAAAQAAAAA
AAAAAAAAALsAjgAAAAAADgAAAAAAAAAAAAAAxADlCgAAAAAOAAAAAAAAAAAAAADEABYLAAAAAAQA
AAAAAAAAAAAAALsAmgcAAAAABAAAAAAAAAAAAAAAzQA0CgAAAAAAAAAAAQAAAEkJAAAxAEsAAAAA
AABnZXRfQ29sdW1uMABMaXN0YDEAVG9JbnQzMgBnZXRfQWRkcmVzczIAc2V0X0FkZHJlc3MyAGdl
dF9VVEY4ADxNb2R1bGU+AGdldF9TdGFmZklEAHNldF9TdGFmZklEAGdldF9DYW1wdXNJRABzZXRf
Q2FtcHVzSUQASW5wdXRJRABHZXRCbG9iRGF0YQBtc2NvcmxpYgBTeXN0ZW0uQ29sbGVjdGlvbnMu
R2VuZXJpYwA8QWRkcmVzczI+a19fQmFja2luZ0ZpZWxkADxTdGFmZklEPmtfX0JhY2tpbmdGaWVs
ZAA8Q2FtcHVzSUQ+a19fQmFja2luZ0ZpZWxkADxNaWRkbGVOYW1lPmtfX0JhY2tpbmdGaWVsZAA8
TGFzdE5hbWU+a19fQmFja2luZ0ZpZWxkADxGaXJzdE5hbWU+a19fQmFja2luZ0ZpZWxkADxQaG9u
ZT5rX19CYWNraW5nRmllbGQAPFN0YWZmVHlwZT5rX19CYWNraW5nRmllbGQAPFN0YXRlPmtfX0Jh
Y2tpbmdGaWVsZAA8RGVhY3RpdmF0ZT5rX19CYWNraW5nRmllbGQAPEVtYWlsPmtfX0JhY2tpbmdG
aWVsZAA8TG9jYXRpb24+a19fQmFja2luZ0ZpZWxkADxaaXA+a19fQmFja2luZ0ZpZWxkADxBZGRy
ZXNzPmtfX0JhY2tpbmdGaWVsZAA8RGVwYXJ0bWVudD5rX19CYWNraW5nRmllbGQAPENpdHk+a19f
QmFja2luZ0ZpZWxkAGRlZmF1bHRJbnN0YW5jZQBJRGlzcG9zYWJsZQBSdW50aW1lVHlwZUhhbmRs
ZQBHZXRUeXBlRnJvbUhhbmRsZQBnZXRfTWlkZGxlTmFtZQBzZXRfTWlkZGxlTmFtZQBnZXRfTGFz
dE5hbWUAc2V0X0xhc3ROYW1lAGdldF9GaXJzdE5hbWUAc2V0X0ZpcnN0TmFtZQBJbnB1dE5hbWUA
TWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAZ2V0X1Bob25lAHNldF9QaG9uZQBnZXRf
U3RhZmZUeXBlAHNldF9TdGFmZlR5cGUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VD
dWx0dXJlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAERpc3Bvc2UAZ2V0X1N0YXRlAHNldF9TdGF0
ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBnZXRfRGVhY3RpdmF0ZQBzZXRfRGVhY3RpdmF0ZQBDb21w
aWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVn
Z2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRy
aWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRl
AEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmli
dXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmli
dXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBv
aW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0
eUF0dHJpYnV0ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAHZhbHVlAERlc2VyaWFsaXplAFNDXzRi
NGZlNTA5ZTk1NzQ0N2NhNWYyMzdjM2EzZjk5OWJmAEVuY29kaW5nAFN5c3RlbS5SdW50aW1lLlZl
cnNpb25pbmcAR2V0U3RyaW5nAGdldF9MZW5ndGgAU3lzdGVtLkNvbXBvbmVudE1vZGVsAGdldF9F
bWFpbABzZXRfRW1haWwAU0NfNGI0ZmU1MDllOTU3NDQ3Y2E1ZjIzN2MzYTNmOTk5YmYuZGxsAGdl
dF9Db2x1bW4wX0lzTnVsbABzZXRfQWRkcmVzczJfSXNOdWxsAHNldF9TdGFmZklEX0lzTnVsbABz
ZXRfQ2FtcHVzSURfSXNOdWxsAHNldF9NaWRkbGVOYW1lX0lzTnVsbABzZXRfTGFzdE5hbWVfSXNO
dWxsAHNldF9GaXJzdE5hbWVfSXNOdWxsAHNldF9QaG9uZV9Jc051bGwAc2V0X1N0YWZmVHlwZV9J
c051bGwAc2V0X1N0YXRlX0lzTnVsbABzZXRfRGVhY3RpdmF0ZV9Jc051bGwAc2V0X0VtYWlsX0lz
TnVsbABzZXRfTG9jYXRpb25fSXNOdWxsAHNldF9aaXBfSXNOdWxsAHNldF9BZGRyZXNzX0lzTnVs
bABzZXRfRGVwYXJ0bWVudF9Jc051bGwAc2V0X0NpdHlfSXNOdWxsAFNldE51bGwAZ2V0X0l0ZW0A
c2V0X0l0ZW0AU3lzdGVtAHJlc291cmNlTWFuAFNjcmlwdE1haW4AQmxvYkNvbHVtbgBnZXRfTG9j
YXRpb24Ac2V0X0xvY2F0aW9uAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0
aW9uAFN5c3RlbS5XZWIuU2NyaXB0LlNlcmlhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24ASW52
YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBTdHJpbmdDb21wYXJpc29uAEN1bHR1cmVJbmZvAE91dHB1
dE5hbWVNYXAAT3V0cHV0TWFwAGdldF9aaXAAc2V0X1ppcABJbnB1dDBCdWZmZXIAUGlwZWxpbmVC
dWZmZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIASmF2YVNjcmlwdFNlcmlhbGl6
ZXIAR2V0RW51bWVyYXRvcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5S
dW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTQ180YjRmZTUwOWU5NTc0
NDdjYTVmMjM3YzNhM2Y5OTliZi5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdn
aW5nTW9kZXMAU0NfNGI0ZmU1MDllOTU3NDQ3Y2E1ZjIzN2MzYTNmOTk5YmYuUHJvcGVydGllcwBW
YXJpYWJsZXMAQnVmZmVyQ29sdW1uSW5kZXhlcwBHZXRDb2x1bW5JbmRleGVzAFNldHRpbmdzAEVx
dWFscwBTQ180YjRmZTUwOWU5NTc0NDdjYTVmMjM3YzNhM2Y5OTliZi5Nb2RlbHMAU3lzdGVtLldl
Yi5FeHRlbnNpb25zAENvbm5lY3Rpb25zAGdldF9BZGRyZXNzAHNldF9BZGRyZXNzAE9iamVjdABF
bmRPZlJvd3NldABnZXRfRGVmYXVsdABnZXRfRGVwYXJ0bWVudABzZXRfRGVwYXJ0bWVudABVc2Vy
Q29tcG9uZW50AFBhcmVudENvbXBvbmVudABTY3JpcHRDb21wb25lbnQAZ2V0X0N1cnJlbnQATWlj
cm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABDb252ZXJ0AFN0YWZmSW1wb3J0AE1pY3Jvc29mdC5T
cWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AElucHV0MF9Qcm9jZXNzSW5wdXQATW92ZU5leHQAU3lzdGVt
LlRleHQASW5wdXQwX1Byb2Nlc3NJbnB1dFJvdwBOZXh0Um93AGdldF9Bc3NlbWJseQBnZXRfQ2l0
eQBzZXRfQ2l0eQAAAACAm0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBv
AHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAA
dgBhAGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAA
D0kAbgBwAHUAdAAgADAAAHFTAEMAXwA0AGIANABmAGUANQAwADkAZQA5ADUANwA0ADQANwBjAGEA
NQBmADIAMwA3AGMAMwBhADMAZgA5ADkAOQBiAGYALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBl
AHMAbwB1AHIAYwBlAHMAAJ5eAETrmR1Erpsr9bFTgbcABCABAQgDIAABBSABARERBCABAQ4FIAEB
EWUNBwQSOQ4VEUEBEiQSJAQAABJ5AyAACQQAAQgJBiACHQUICAUgAQ4dBQYwAQEeAA4ICgEVEj0B
EiQGFRI9ARIkCCAAFRFBARMABhURQQESJAQgABMAAyAAAgkgAwESSR0IEk0DBhJJAwYdCAQgARwI
BCABAggFIAIBCBwHIAICDhGAjQUgAR0ICAgAARKAkRGAlQUgABKAmQcgAgEOEoCZCLd6XFYZNOCJ
CImEXc2AgMyRCDG/OFatNk41AwYSFAMGEhgDBhJRAwYSXQMGEmEDBhIgAgYOBSABARIMBCAAEjkE
IAEBAgkgBAEIDhJJEk0FIAEBElEEAAASXQQAABJhBQABARJhBAAAEiADAAABAyAADgQoABI5AygA
AgMoAA4ECAASXQQIABJhBAgAEiAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJv
d3MBCAEAAgAAAAAAKAEAI1NDXzRiNGZlNTA5ZTk1NzQ0N2NhNWYyMzdjM2EzZjk5OWJmAAAFAQAA
AAAWAQARQ29weXJpZ2h0IEAgIDIwMTgAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNQEA
VA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41BAEAAAC0AAAAzsrvvgEA
AACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9u
PTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4
OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0
AAAAsEQAAAAAAAAAAAAAykQAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAALxEAAAAAAAAAAAAAAAA
X0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAA
GAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAADs
AwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAA
AQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQBy
AEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAE
TAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAwADQAYgAw
AAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0A
ZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwA0
AGIANABmAGUANQAwADkAZQA5ADUANwA0ADQANwBjAGEANQBmADIAMwA3AGMAMwBhADMAZgA5ADkA
OQBiAGYAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAAAABw
ACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADQAYgA0AGYAZQA1ADAAOQBlADkA
NQA3ADQANAA3AGMAYQA1AGYAMgAzADcAYwAzAGEAMwBmADkAOQA5AGIAZgAuAGQAbABsAAAASAAS
AAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAA
IAAyADAAMQA4AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4
ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8ANABiADQAZgBlADUA
MAA5AGUAOQA1ADcANAA0ADcAYwBhADUAZgAyADMANwBjADMAYQAzAGYAOQA5ADkAYgBmAC4AZABs
AGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADQAYgA0AGYAZQA1ADAA
OQBlADkANQA3ADQANAA3AGMAYQA1AGYAMgAzADcAYwAzAGEAMwBmADkAOQA5AGIAZgAAADQACAAB
AFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgAAQBBAHMA
cwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAA3DQAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_4b4fe509e957447ca5f237c3a3f999bf</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">55</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Script Component.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Script Component.Inputs[Input 0].Columns[Column 0]"
                      cachedDataType="nText"
                      cachedName="Column 0"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Column 0]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Script Component.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Data Flow Task\Script Component.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Script Component.Outputs[Output 0].Columns[StaffID]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Data Flow Task\Script Component.Outputs[Output 0].Columns[StaffID]"
                      name="StaffID" />
                    <outputColumn
                      refId="Package\Data Flow Task\Script Component.Outputs[Output 0].Columns[CampusID]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Data Flow Task\Script Component.Outputs[Output 0].Columns[CampusID]"
                      name="CampusID" />
                    <outputColumn
                      refId="Package\Data Flow Task\Script Component.Outputs[Output 0].Columns[FirstName]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Data Flow Task\Script Component.Outputs[Output 0].Columns[FirstName]"
                      name="FirstName" />
                    <outputColumn
                      refId="Package\Data Flow Task\Script Component.Outputs[Output 0].Columns[LastName]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Data Flow Task\Script Component.Outputs[Output 0].Columns[LastName]"
                      name="LastName" />
                    <outputColumn
                      refId="Package\Data Flow Task\Script Component.Outputs[Output 0].Columns[MiddleName]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Data Flow Task\Script Component.Outputs[Output 0].Columns[MiddleName]"
                      name="MiddleName" />
                    <outputColumn
                      refId="Package\Data Flow Task\Script Component.Outputs[Output 0].Columns[StaffType]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Data Flow Task\Script Component.Outputs[Output 0].Columns[StaffType]"
                      name="StaffType" />
                    <outputColumn
                      refId="Package\Data Flow Task\Script Component.Outputs[Output 0].Columns[Location]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Data Flow Task\Script Component.Outputs[Output 0].Columns[Location]"
                      name="Location" />
                    <outputColumn
                      refId="Package\Data Flow Task\Script Component.Outputs[Output 0].Columns[Department]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Data Flow Task\Script Component.Outputs[Output 0].Columns[Department]"
                      name="Department" />
                    <outputColumn
                      refId="Package\Data Flow Task\Script Component.Outputs[Output 0].Columns[Phone]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Data Flow Task\Script Component.Outputs[Output 0].Columns[Phone]"
                      name="Phone" />
                    <outputColumn
                      refId="Package\Data Flow Task\Script Component.Outputs[Output 0].Columns[Email]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Data Flow Task\Script Component.Outputs[Output 0].Columns[Email]"
                      name="Email" />
                    <outputColumn
                      refId="Package\Data Flow Task\Script Component.Outputs[Output 0].Columns[Address]"
                      dataType="wstr"
                      length="500"
                      lineageId="Package\Data Flow Task\Script Component.Outputs[Output 0].Columns[Address]"
                      name="Address" />
                    <outputColumn
                      refId="Package\Data Flow Task\Script Component.Outputs[Output 0].Columns[Address2]"
                      dataType="wstr"
                      length="500"
                      lineageId="Package\Data Flow Task\Script Component.Outputs[Output 0].Columns[Address2]"
                      name="Address2" />
                    <outputColumn
                      refId="Package\Data Flow Task\Script Component.Outputs[Output 0].Columns[City]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Data Flow Task\Script Component.Outputs[Output 0].Columns[City]"
                      name="City" />
                    <outputColumn
                      refId="Package\Data Flow Task\Script Component.Outputs[Output 0].Columns[State]"
                      dataType="wstr"
                      length="2"
                      lineageId="Package\Data Flow Task\Script Component.Outputs[Output 0].Columns[State]"
                      name="State" />
                    <outputColumn
                      refId="Package\Data Flow Task\Script Component.Outputs[Output 0].Columns[Zip]"
                      dataType="wstr"
                      length="10"
                      lineageId="Package\Data Flow Task\Script Component.Outputs[Output 0].Columns[Zip]"
                      name="Zip" />
                    <outputColumn
                      refId="Package\Data Flow Task\Script Component.Outputs[Output 0].Columns[Deactivate]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Data Flow Task\Script Component.Outputs[Output 0].Columns[Deactivate]"
                      name="Deactivate" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Data Flow Task.Paths[Flat File Source Output]"
              endId="Package\Data Flow Task\Script Component.Inputs[Input 0]"
              name="Flat File Source Output"
              startId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output]" />
            <path
              refId="Package\Data Flow Task.Paths[Output 0]"
              endId="Package\Data Flow Task\Multicast.Inputs[Multicast Input 1]"
              name="Output 0"
              startId="Package\Data Flow Task\Script Component.Outputs[Output 0]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Data Flow Task 1"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{675F9748-6CDE-4295-AE23-241B782ADD63}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Data Flow Task 1"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Data Flow Task 1\Multicast"
              componentClassID="Microsoft.Multicast"
              contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
              name="Multicast">
              <inputs>
                <input
                  refId="Package\Data Flow Task 1\Multicast.Inputs[Multicast Input 1]"
                  name="Multicast Input 1">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task 1\Multicast.Outputs[Multicast Output 1]"
                  dangling="true"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 1"
                  synchronousInputId="Package\Data Flow Task 1\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task 1\Script Component"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;11"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Script Component"
              version="11">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="33">
                    <arrayElement
                      dataType="System.String"><![CDATA[Models\StaffImport.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SC_bcc59df40b8c4088961ac7cdcce2f622.Models
{
    public class StaffImport
    {
        public string StaffID { get; set; }
        public string CampusID { get; set; }
        public string FirstName { get; set; }
        public String LastName { get; set; }
        public string MiddleName { get; set; }
        public string StaffType { get; set; }
        public string Location { get; set; }
        public string Department { get; set; }
        public string Phone { get; set; }
        public string Email { get; set; }
        public string Address { get; set; }
        public string Address2 { get; set; }
        public string City { get; set; }
        public string State { get; set; }
        public string Zip { get; set; }
        public string Deactivate { get; set; }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.IO;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Web.Script.Serialization;
using System.Collections.Generic;
using SC_bcc59df40b8c4088961ac7cdcce2f622.Models;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */
        string fileName = Variables.FileName;
        string fileData = File.ReadAllText(fileName, System.Text.Encoding.UTF8);

        JavaScriptSerializer js = new JavaScriptSerializer();

        List<StaffImport> staffImports = js.Deserialize<List<StaffImport>>(fileData);

        foreach (var si in staffImports)
        {
            Output0Buffer.AddRow();
            Output0Buffer.StaffID = si.StaffID;
            Output0Buffer.CampusID = si.CampusID;
            Output0Buffer.FirstName = si.FirstName;
            Output0Buffer.MiddleName = si.MiddleName;
            Output0Buffer.LastName = si.LastName;
            Output0Buffer.StaffType = si.StaffType;
            Output0Buffer.Location = si.Location;
            Output0Buffer.Department = si.Department;
            Output0Buffer.Phone = si.Phone;
            Output0Buffer.Email = si.Email;
            Output0Buffer.Address = si.Address;
            Output0Buffer.Address2 = si.Address2;
            Output0Buffer.City = si.City;
            Output0Buffer.State = si.State;
            Output0Buffer.Zip = si.Zip;
            Output0Buffer.Deactivate = si.Deactivate;
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String StaffID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool StaffID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CampusID
    {
        set
        {
            this[1] = value;
        }
    }
    public bool CampusID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String FirstName
    {
        set
        {
            this[2] = value;
        }
    }
    public bool FirstName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String LastName
    {
        set
        {
            this[3] = value;
        }
    }
    public bool LastName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String MiddleName
    {
        set
        {
            this[4] = value;
        }
    }
    public bool MiddleName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String StaffType
    {
        set
        {
            this[5] = value;
        }
    }
    public bool StaffType_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Location
    {
        set
        {
            this[6] = value;
        }
    }
    public bool Location_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Department
    {
        set
        {
            this[7] = value;
        }
    }
    public bool Department_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Phone
    {
        set
        {
            this[8] = value;
        }
    }
    public bool Phone_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Email
    {
        set
        {
            this[9] = value;
        }
    }
    public bool Email_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Address
    {
        set
        {
            this[10] = value;
        }
    }
    public bool Address_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Address2
    {
        set
        {
            this[11] = value;
        }
    }
    public bool Address2_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String City
    {
        set
        {
            this[12] = value;
        }
    }
    public bool City_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String State
    {
        set
        {
            this[13] = value;
        }
    }
    public bool State_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(13);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Zip
    {
        set
        {
            this[14] = value;
        }
    }
    public bool Zip_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(14);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Deactivate
    {
        set
        {
            this[15] = value;
        }
    }
    public bool Deactivate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(15);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_bcc59df40b8c4088961ac7cdcce2f622.Properties.Settings.get_Default():SC_bcc59df40b8c4088961ac7cdcce2f622.Properties.Sett" +
    "ings")]

namespace SC_bcc59df40b8c4088961ac7cdcce2f622.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_bcc59df40b8c4088961ac7cdcce2f622.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{BCFC8D75-8450-49AC-BABA-18922D778047}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_bcc59df40b8c4088961ac7cdcce2f622</RootNamespace>
    <AssemblyName>SC_bcc59df40b8c4088961ac7cdcce2f622</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile>
    </TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Web.Extensions" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Models\StaffImport.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String FileName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["FileName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_bcc59df40b8c4088961ac7cdcce2f622</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_bcc59df40b8c4088961ac7cdcce2f622</msb:DisplayName>
		<msb:ProjectId>{E3470A8B-C103-4CAD-A177-05979A44A0A4}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_bcc59df40b8c4088961ac7cdcce2f622.csproj"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="Models\StaffImport.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_bcc59df40b8c4088961ac7cdcce2f622")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_bcc59df40b8c4088961ac7cdcce2f622")]
[assembly: AssemblyCopyright("Copyright @  2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_bcc59df40b8c4088961ac7cdcce2f622.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_bcc59df40b8c4088961ac7cdcce2f622.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_bcc59df40b8c4088961ac7cdcce2f622.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_bcc59df40b8c4088961ac7cdcce2f622.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_bcc59df40b8c4088961ac7cdcce2f622.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_bcc59df40b8c4088961ac7cdcce2f622.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAEcmZloAAAAAAAAAAOAAIiALATAAACgAAAAIAAAAAAAAPkYA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAOxFAABPAAAAAGAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAARCYAAAAgAAAAKAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAYAAAAAYAAAAqAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAMAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAg
RgAAAAAAAEgAAAACAAUAhCYAALAeAAABAAAAAAAAADRFAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACiobMAIAbAEAAAEAABECewIAAARv
MAAABigSAAAKKBMAAAoKcxQAAAoGbwEAACtvFgAACgs4IwEAABIBKBcAAAoMAnsDAAAEbyYAAAYC
ewMAAAQIbzgAAAZvBgAABgJ7AwAABAhvOgAABm8IAAAGAnsDAAAECG88AAAGbwoAAAYCewMAAAQI
b0AAAAZvDgAABgJ7AwAABAhvPgAABm8MAAAGAnsDAAAECG9CAAAGbxAAAAYCewMAAAQIb0QAAAZv
EgAABgJ7AwAABAhvRgAABm8UAAAGAnsDAAAECG9IAAAGbxYAAAYCewMAAAQIb0oAAAZvGAAABgJ7
AwAABAhvTAAABm8aAAAGAnsDAAAECG9OAAAGbxwAAAYCewMAAAQIb1AAAAZvHgAABgJ7AwAABAhv
UgAABm8gAAAGAnsDAAAECG9UAAAGbyIAAAYCewMAAAQIb1YAAAZvJAAABhIBKBgAAAo60f7//94O
EgH+FgIAABtvGQAACtwqQRwAAAIAAAAnAAAANgEAAF0BAAAOAAAAAAAAAB4CKCkAAAYqKgIDBAUo
GgAACiomAhYDKBsAAAoqWgMsCAIWKBwAAAoqcgEAAHBzHQAACnomAhcDKBsAAAoqWgMsCAIXKBwA
AAoqcgEAAHBzHQAACnomAhgDKBsAAAoqWgMsCAIYKBwAAAoqcgEAAHBzHQAACnomAhkDKBsAAAoq
WgMsCAIZKBwAAAoqcgEAAHBzHQAACnomAhoDKBsAAAoqWgMsCAIaKBwAAAoqcgEAAHBzHQAACnom
AhsDKBsAAAoqWgMsCAIbKBwAAAoqcgEAAHBzHQAACnomAhwDKBsAAAoqWgMsCAIcKBwAAAoqcgEA
AHBzHQAACnomAh0DKBsAAAoqWgMsCAIdKBwAAAoqcgEAAHBzHQAACnomAh4DKBsAAAoqWgMsCAIe
KBwAAAoqcgEAAHBzHQAACnoqAh8JAygbAAAKKl4DLAkCHwkoHAAACipyAQAAcHMdAAAKeioCHwoD
KBsAAAoqXgMsCQIfCigcAAAKKnIBAABwcx0AAAp6KgIfCwMoGwAACipeAywJAh8LKBwAAAoqcgEA
AHBzHQAACnoqAh8MAygbAAAKKl4DLAkCHwwoHAAACipyAQAAcHMdAAAKeioCHw0DKBsAAAoqXgMs
CQIfDSgcAAAKKnIBAABwcx0AAAp6KgIfDgMoGwAACipeAywJAh8OKBwAAAoqcgEAAHBzHQAACnoq
Ah8PAygbAAAKKl4DLAkCHw8oHAAACipyAQAAcHMdAAAKeh4CKB4AAAoqHgIoHwAACioeAiggAAAK
Kn4CKCEAAAoCAnMuAAAGfQEAAAQCAnMvAAAGfQIAAAQqBipuAnsDAAAELBICewMAAARvJwAABgIU
fQMAAAQqABMwBQBJAAAAAgAAERYKKy4EBpQOBHKeAABwKCIAAAozGQIFBpoCBAaUKCMAAAoOBHMF
AAAGfQMAAAQGF1gKBgMyzgJvLQAABgJvKgAABgIoKwAABio6AigkAAAKAgN9BAAABCo6AigkAAAK
AgN9BQAABCqWAnsFAAAEbyUAAApysAAAcG8mAAAKKCcAAApvKAAACnQlAAABKh4CKCQAAAoqrn4G
AAAELR5ywgAAcNAHAAACKCkAAApvKgAACnMrAAAKgAYAAAR+BgAABCoafgcAAAQqHgKABwAABCoa
fggAAAQqHgIoLAAACiouczYAAAaACAAABCoeAnsJAAAEKiICA30JAAAEKh4CewoAAAQqIgIDfQoA
AAQqHgJ7CwAABCoiAgN9CwAABCoeAnsMAAAEKiICA30MAAAEKh4Cew0AAAQqIgIDfQ0AAAQqHgJ7
DgAABCoiAgN9DgAABCoeAnsPAAAEKiICA30PAAAEKh4CexAAAAQqIgIDfRAAAAQqHgJ7EQAABCoi
AgN9EQAABCoeAnsSAAAEKiICA30SAAAEKh4CexMAAAQqIgIDfRMAAAQqHgJ7FAAABCoiAgN9FAAA
BCoeAnsVAAAEKiICA30VAAAEKh4CexYAAAQqIgIDfRYAAAQqHgJ7FwAABCoiAgN9FwAABCoeAnsY
AAAEKiICA30YAAAEKgBCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAACsDgAAI34A
ABgPAABUDAAAI1N0cmluZ3MAAAAAbBsAADQBAAAjVVMAoBwAABAAAAAjR1VJRAAAALAcAAAAAgAA
I0Jsb2IAAAAAAAAAAgAAAVcVogkJCQAAAPoBMwAWAAABAAAAKAAAAAkAAAAYAAAAWAAAADoAAAAs
AAAAQAAAAAIAAAAFAAAANAAAAEUAAAACAAAAAQAAAAYAAAABAAAAAQAAAAAARgYBAAAAAAAGABcF
dAkGAKsFdAkGAGMEYQkPAOgJAAAGAJAEPggGAPoEPggGANsEPggGAJIFPggGADcFPggGAFAFPggG
AKcEPggGAMIE+wUKAGsFSwMGADoA4gA7AD8JAAAKAN4ISwMOAM8ISwMKAHYISwMKAFcLSwMGAPkK
vAcGAEYEYQkGAO8IlAkGAGoICQgSAPgDHAYSAHcEHAYSAMQD9AcGACsEdAkGAPIF0gsGAOUCzwAW
ACcJHggGALUCvAcGAFAIvAcaABEA/wgaAAEA/whPAP4LAAAaACIA/wgGABUGvAcGAJcDvAcGAMEC
vAcGADkMPggAAAAAiAAAAAAAAQABAAEAEADPBwAAEAABAAEAAQAQAMEIAABBAAEABQABABAAOQsA
AE0AAQApAAEAEACrCgAAUQAEAC4AAQAQADIKAABRAAUALwAAABAAmwn3CVEABgAxAAABEABhCvcJ
aQAIADUAAQAQAJALagpRAAkAOAAGAKsK0AAGADIK1AAGAMEI2AABAEcL3AABAEcL3AARAMMH4AAR
ALQD5AARAKUC6AABACsB7AABAEQB7AABAJQB7AABAHoB7AABAF4B7AABAMYB7AABACsC7AABAHMC
7AABAK8B7AABABQC7AABAFoC7AABABEB7AABAI8C7AABAOEB7AABAEUC7AABAPgB7ABQIAAAAADG
AMkFBgABAFggAAAAAMYA1AUGAAEAYCAAAAAAxgDlCgYAAQD0IQAAAACGGEoJBgABAPwhAAAAAIYY
SgljAAEAByIAAAAAhgidABAABAARIgAAAACGCIIG7wAFACgiAAAAAIYItgAQAAYAMiIAAAAAhgiV
Bu8ABwBJIgAAAACGCD0DEAAIAFMiAAAAAIYI0wbvAAkAaiIAAAAAhggiAxAACgB0IgAAAACGCL8G
7wALAIsiAAAAAIYI+QIQAAwAlSIAAAAAhgipBu8ADQCsIgAAAACGCI4DEAAOALYiAAAAAIYI+Qbv
AA8AzSIAAAAAhgjnBxAAEADXIgAAAACGCEYH7wARAO4iAAAAAIYIKgsQABIA+CIAAAAAhgh8B+8A
EwAPIwAAAACGCHYDEAAUABkjAAAAAIYI6AbvABUAMCMAAAAAhgg8BhAAFgA7IwAAAACGCDUH7wAX
AFMjAAAAAIYIywoQABgAXiMAAAAAhghpB+8AGQB2IwAAAACGCHIAEAAaAIEjAAAAAIYIbgbvABsA
mSMAAAAAhghLDBAAHACkIwAAAACGCJIH7wAdALwjAAAAAIYI7gMQAB4AxyMAAAAAhggOB+8AHwDf
IwAAAACGCLkIEAAgAOojAAAAAIYIWgfvACEAAiQAAAAAhggcBBAAIgANJAAAAACGCB8H7wAjACUk
AAAAAIYALgwGACQALSQAAAAAhgAACwYAJAA1JAAAAACGAAMLXwAkAD0kAAAAAIYYSgkGACQAXSQA
AAAAxgHXCgYAJABfJAAAAACBAP0ABgAkAHwkAAAAAMYAvQv0ACQAXSQAAAAAxgHlCgYAKADRJAAA
AACGGEoJAAEoAOAkAAAAAIYYSgkAASkA7yQAAAAAhggIAwYBKgAVJQAAAACDGEoJBgAqAB0lAAAA
AJMI6wgKASoASSUAAAAAkwicAw8BKgBQJQAAAACTCKgDFAEqAFglAAAAAJYIDwsaASsAXyUAAAAA
hhhKCQYAKwBnJQAAAACRGFAJHwErAHMlAAAAAIYIkQAGASsAeyUAAAAAhgidABAAKwCEJQAAAACG
CKkABgEsAIwlAAAAAIYItgAQACwAlSUAAAAAhggvAwYBLQCdJQAAAACGCD0DEAAtAKYlAAAAAIYI
FQMGAS4AriUAAAAAhggiAxAALgC3JQAAAACGCOoCBgEvAL8lAAAAAIYI+QIQAC8AyCUAAAAAhgiA
AwYBMADQJQAAAACGCI4DEAAwANklAAAAAIYI2gcGATEA4SUAAAAAhgjnBxAAMQDqJQAAAACGCBsL
BgEyAPIlAAAAAIYIKgsQADIA+yUAAAAAhghsAwYBMwADJgAAAACGCHYDEAAzAAwmAAAAAIYIMgYG
ATQAFCYAAAAAhgg8BhAANAAdJgAAAACGCL8KBgE1ACUmAAAAAIYIywoQADUALiYAAAAAhghlAAYB
NgA2JgAAAACGCHIAEAA2AD8mAAAAAIYIQgwGATcARyYAAAAAhghLDBAANwBQJgAAAACGCOQDBgE4
AFgmAAAAAIYI7gMQADgAYSYAAAAAhgixCAYBOQBpJgAAAACGCLkIEAA5AHImAAAAAIYIDQQGAToA
eiYAAAAAhggcBBAAOgAVJQAAAACGGEoJBgA7AAAAAQDkCAAAAgA8CgAAAwCECAAAAQDgBQAAAQDg
BQAAAQDgBQAAAQDgBQAAAQDgBQAAAQDgBQAAAQDgBQAAAQDgBQAAAQDgBQAAAQDgBQAAAQDgBQAA
AQDgBQAAAQDgBQAAAQDgBQAAAQDgBQAAAQDgBQAAAQDgBQAAAQDgBQAAAQDgBQAAAQDgBQAAAQDg
BQAAAQDgBQAAAQDgBQAAAQDgBQAAAQDgBQAAAQDgBQAAAQDgBQAAAQDgBQAAAQDgBQAAAQDgBQAA
AQDgBQAAAQDgBQAAAQDdCgAAAgBXCQAAAwC3CgAABACECAAAAQBdCwAAAQBdCwAAAQDgBQAAAQDg
BQAAAQDgBQAAAQDgBQAAAQDgBQAAAQDgBQAAAQDgBQAAAQDgBQAAAQDgBQAAAQDgBQAAAQDgBQAA
AQDgBQAAAQDgBQAAAQDgBQAAAQDgBQAAAQDgBQAAAQDgBQkASgkBABEASgkGABkASgkKACkASgkQ
ADEASgkQADkASgkQAEEASgkQAEkASgkQAFEASgkQAFkASgkQAGEASgkQAGkASgkGAKkASgkGAMkA
SgkVANkASgkGAJkAyQUGAJkA1AUGAOEAfwAnAOkA3gssAPEASgkGAPEA5gUzAAwAPAlKABQAZwta
ABQAyQtfAPkA3AMGAIEASgljAIEAswdtAIEAogcBAAEBSgkQAIEALgwGAIEAAAsGAIEAAwtfAJkA
SgkGAJkAwwB3AJkAUAp+AKEASgkGAJkAJgqEAAkBqgeKAJkAGQyRABEB6guXADEB0wKeADEBNQyn
ALEASgmtANEASgkGAC4ACwA6AS4AEwBDAS4AGwBiAS4AIwBrAS4AKwCUAS4AMwCUAS4AOwCUAS4A
QwBrAS4ASwCaAS4AUwCUAS4AWwCxAUMAYwD7AeMAawD7AQEBewD7ASEBewD7AUEBewD7AWEBewD7
AYEBewD7AaEBewD7AcEBewD7AeEBewD7AQECewD7ASECewD7AUECewD7AWECewD7AYECewD7AaEC
ewD7AcECewD7AeECewD7AQEDewD7AUkEcwBiAWkEcwBiAQAHewD7ASAHewD7AUAHewD7AWAHewD7
AYAHewD7AaAHewD7AcAHewD7AeAHewD7AQAIewD7ASAIewD7AUAIewD7AWAIewD7AYAIewD7AaAI
ewD7AcAIewD7AeAIewD7AQAJewD7ASAJewD7AUAJewD7AWAJewD7AYAJewD7AaAJewD7AcAJewD7
AeAJewD7AQAKewD7ASAKewD7AUAKewD7AWAKewD7AYAKewD7AaAKewD7AcAKewD7AeAKewD7ARsA
cwADAAEABgAhAAcAIgAIACQACQAlAAAAoQAjAQAAhgYnAQAAugAjAQAAmQYnAQAAQQMjAQAA1wYn
AQAAJgMjAQAAwwYnAQAA/QIjAQAArQYnAQAAkgMjAQAA/QYnAQAA6wcjAQAASgcnAQAALgsjAQAA
gAcnAQAAegMjAQAA7AYnAQAAQAYjAQAAOQcnAQAAzwojAQAAbQcnAQAAdgAjAQAAcgYnAQAATwwj
AQAAlgcnAQAABwQjAQAAEgcnAQAAvQgjAQAAXgcnAQAAIAQjAQAAIwcnAQAADAMjAQAA7wgrAQAA
vAMwAQAAEws1AQAAoQAjAQAAugAjAQAAQQMjAQAAJgMjAQAA/QIjAQAAkgMjAQAA6wcjAQAALgsj
AQAAegMjAQAAQAYjAQAAzwojAQAAdgAjAQAATwwjAQAABwQjAQAAvQgjAQAAIAQjAQEABgADAAEA
BwAFAAEACAAHAAEACQAJAAEACgALAAEACwANAAEADAAPAAEADQARAAEADgATAAEADwAVAAEAEAAX
AAEAEQAZAAEAEgAbAAEAEwAdAAEAFAAfAAEAFQAhAAEAFgAjAAEAFwAlAAEAGAAnAAEAGQApAAEA
GgArAAEAGwAtAAEAHAAvAAEAHQAxAAEAHgAzAAEAHwA1AAEAIAA3AAEAIQA5AAEAIgA7AAEAIwA9
AAEAJAA/AAEAJQBBAAIAMABDAAIAMgBFAAIAMwBHAAEANABHAAIANQBJAAIAOABLAAEAOQBLAAIA
OgBNAAEAOwBNAAIAPABPAAEAPQBPAAIAPgBRAAEAPwBRAAIAQABTAAEAQQBTAAIAQgBVAAEAQwBV
AAIARABXAAEARQBXAAIARgBZAAEARwBZAAIASABbAAEASQBbAAIASgBdAAEASwBdAAIATABfAAEA
TQBfAAIATgBhAAEATwBhAAIAUABjAAEAUQBjAAIAUgBlAAEAUwBlAAIAVABnAAEAVQBnAAIAVgBp
AAEAVwBpAEMAUwAEgAAAAQAAAAAAAAAAAAAAAABBAAAABAAAAAAAAAAAAAAAtQDZAAAAAAAOAAAA
AAAAAAAAAAC+AHMLAAAAAA4AAAAAAAAAAAAAAL4AnAsAAAAABAAAAAAAAAAAAAAAtQC8BwAAAAAE
AAAAAAAAAAAAAADHAJUKAAAAAA4AAAAAAAAAAAAAAL4AjggAAAAAAAAAAAEAAAClCQAAKwA6AAAA
AAAASURUU1ZhcmlhYmxlMTAwAElEVFNWYXJpYWJsZXMxMDAASURUU0V2YWx1YXRvckNvbnRleHQx
MDAATGlzdGAxAFNDX2JjYzU5ZGY0MGI4YzQwODg5NjFhYzdjZGNjZTJmNjIyAGdldF9BZGRyZXNz
MgBzZXRfQWRkcmVzczIAZ2V0X1VURjgAPE1vZHVsZT4AZ2V0X1N0YWZmSUQAc2V0X1N0YWZmSUQA
Z2V0X0NhbXB1c0lEAHNldF9DYW1wdXNJRABHZXRPdXRwdXRJRABTeXN0ZW0uSU8AbXNjb3JsaWIA
U3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMATWFya091dHB1dHNGaW5pc2hlZAA8QWRkcmVzczI+
a19fQmFja2luZ0ZpZWxkADxTdGFmZklEPmtfX0JhY2tpbmdGaWVsZAA8Q2FtcHVzSUQ+a19fQmFj
a2luZ0ZpZWxkADxNaWRkbGVOYW1lPmtfX0JhY2tpbmdGaWVsZAA8TGFzdE5hbWU+a19fQmFja2lu
Z0ZpZWxkADxGaXJzdE5hbWU+a19fQmFja2luZ0ZpZWxkADxQaG9uZT5rX19CYWNraW5nRmllbGQA
PFN0YWZmVHlwZT5rX19CYWNraW5nRmllbGQAPFN0YXRlPmtfX0JhY2tpbmdGaWVsZAA8RGVhY3Rp
dmF0ZT5rX19CYWNraW5nRmllbGQAPEVtYWlsPmtfX0JhY2tpbmdGaWVsZAA8TG9jYXRpb24+a19f
QmFja2luZ0ZpZWxkADxaaXA+a19fQmFja2luZ0ZpZWxkADxBZGRyZXNzPmtfX0JhY2tpbmdGaWVs
ZAA8RGVwYXJ0bWVudD5rX19CYWNraW5nRmllbGQAPENpdHk+a19fQmFja2luZ0ZpZWxkAGRlZmF1
bHRJbnN0YW5jZQBJRGlzcG9zYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRs
ZQBGaWxlAGdldF9NaWRkbGVOYW1lAHNldF9NaWRkbGVOYW1lAGdldF9GaWxlTmFtZQBnZXRfTGFz
dE5hbWUAc2V0X0xhc3ROYW1lAGdldF9GaXJzdE5hbWUAc2V0X0ZpcnN0TmFtZQBNaWNyb3NvZnQu
U3FsU2VydmVyLkR0cy5QaXBlbGluZQBnZXRfUGhvbmUAc2V0X1Bob25lAGdldF9TdGFmZlR5cGUA
c2V0X1N0YWZmVHlwZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAQXBw
bGljYXRpb25TZXR0aW5nc0Jhc2UARGlzcG9zZQBnZXRfU3RhdGUAc2V0X1N0YXRlAEVkaXRvckJy
b3dzYWJsZVN0YXRlAGdldF9EZWFjdGl2YXRlAHNldF9EZWFjdGl2YXRlAENvbXBpbGVyR2VuZXJh
dGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJp
YnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3Nl
bWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlD
b25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGls
YXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1i
bHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1
dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRl
AFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAdmFsdWUARGVzZXJpYWxpemUARW5jb2RpbmcAU3lzdGVt
LlJ1bnRpbWUuVmVyc2lvbmluZwBTdHJpbmcAU3lzdGVtLkNvbXBvbmVudE1vZGVsAGdldF9FbWFp
bABzZXRfRW1haWwAU0NfYmNjNTlkZjQwYjhjNDA4ODk2MWFjN2NkY2NlMmY2MjIuZGxsAHNldF9B
ZGRyZXNzMl9Jc051bGwAc2V0X1N0YWZmSURfSXNOdWxsAHNldF9DYW1wdXNJRF9Jc051bGwAc2V0
X01pZGRsZU5hbWVfSXNOdWxsAHNldF9MYXN0TmFtZV9Jc051bGwAc2V0X0ZpcnN0TmFtZV9Jc051
bGwAc2V0X1Bob25lX0lzTnVsbABzZXRfU3RhZmZUeXBlX0lzTnVsbABzZXRfU3RhdGVfSXNOdWxs
AHNldF9EZWFjdGl2YXRlX0lzTnVsbABzZXRfRW1haWxfSXNOdWxsAHNldF9Mb2NhdGlvbl9Jc051
bGwAc2V0X1ppcF9Jc051bGwAc2V0X0FkZHJlc3NfSXNOdWxsAHNldF9EZXBhcnRtZW50X0lzTnVs
bABzZXRfQ2l0eV9Jc051bGwAU2V0TnVsbABnZXRfSXRlbQBzZXRfSXRlbQBTeXN0ZW0AcmVzb3Vy
Y2VNYW4AU2NyaXB0TWFpbgBnZXRfTG9jYXRpb24Ac2V0X0xvY2F0aW9uAFN5c3RlbS5Db25maWd1
cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5XZWIuU2NyaXB0LlNlcmlhbGl6YXRp
b24AU3lzdGVtLlJlZmxlY3Rpb24ASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBDdWx0dXJlSW5m
bwBPdXRwdXROYW1lTWFwAE91dHB1dE1hcABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1J1bnRpbWVX
cmFwAGdldF9aaXAAc2V0X1ppcABPdXRwdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1
ZmZlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUu
V3JhcHBlcgBKYXZhU2NyaXB0U2VyaWFsaXplcgBHZXRFbnVtZXJhdG9yAC5jdG9yAC5jY3RvcgBP
dXRwdXRJRHMAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2Vydmlj
ZXMAU3lzdGVtLlJlc291cmNlcwBTQ19iY2M1OWRmNDBiOGM0MDg4OTYxYWM3Y2RjY2UyZjYyMi5Q
cm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU0NfYmNjNTlkZjQw
YjhjNDA4ODk2MWFjN2NkY2NlMmY2MjIuUHJvcGVydGllcwBnZXRfUmVhZE9ubHlWYXJpYWJsZXMA
QnVmZmVyQ29sdW1uSW5kZXhlcwBHZXRDb2x1bW5JbmRleGVzAFNldHRpbmdzAFNDX2JjYzU5ZGY0
MGI4YzQwODg5NjFhYzdjZGNjZTJmNjIyLk1vZGVscwBTeXN0ZW0uV2ViLkV4dGVuc2lvbnMAQ29u
bmVjdGlvbnMAQnVmZmVycwBnZXRfQWRkcmVzcwBzZXRfQWRkcmVzcwBGaW5pc2hPdXRwdXRzAENy
ZWF0ZU5ld091dHB1dFJvd3MAT2JqZWN0AFNldEVuZE9mUm93c2V0AGdldF9EZWZhdWx0AGdldF9E
ZXBhcnRtZW50AHNldF9EZXBhcnRtZW50AFVzZXJDb21wb25lbnQAUGFyZW50Q29tcG9uZW50AFNj
cmlwdENvbXBvbmVudABnZXRfQ3VycmVudABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AFN0
YWZmSW1wb3J0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AFByaW1lT3V0cHV0AE1v
dmVOZXh0AFN5c3RlbS5UZXh0AFJlYWRBbGxUZXh0AEdldFZhbHVlV2l0aENvbnRleHQAU2NyaXB0
Q29tcG9uZW50RXZhbENvbnRleHQAZ2V0X0V2YWx1YXRvckNvbnRleHQAQWRkUm93AGdldF9Bc3Nl
bWJseQBnZXRfQ2l0eQBzZXRfQ2l0eQAAgJtJAHMATgB1AGwAbAAgAHAAcgBvAHAAZQByAHQAeQAg
AGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABGAGEAbABzAGUALgAgAEEAcwBzAGkA
ZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAAYwBvAGwAdQBtAG4AIABpAG4AcwB0
AGUAYQBkAC4AABFPAHUAdABwAHUAdAAgADAAABFGAGkAbABlAE4AYQBtAGUAAHFTAEMAXwBiAGMA
YwA1ADkAZABmADQAMABiADgAYwA0ADAAOAA4ADkANgAxAGEAYwA3AGMAZABjAGMAZQAyAGYANgAy
ADIALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAABJDlMGEWndFvdNx
+TPVaDwABCABAQgDIAABBSABARERBCABAQ4FIAEBEWELBwMOFRE9ARIkEiQEAAAScQYAAg4OEnEG
MAEBHgAOCAoBFRI5ARIkBhUSOQESJAggABURPQETAAYVET0BEiQEIAATAAMgAAIJIAMBEkUdCBJJ
BSACAQgcAwcBCAYAAggSSQ4FIAEdCAgFIAASgIUGIAESgIkcBQAAEoCNBiABHBKAkQgAARKAmRGA
nQUgABKAoQcgAgEOEoChCLd6XFYZNOCJCImEXc2AgMyRCDG/OFatNk41AwYSFAMGEhgDBhIMAwYS
TQMGElkDBhJdAwYSIAIGDgQgAQECCyAEAQgdCB0SRRJJBSABARJNAyAADgQAABJZBAAAEl0FAAEB
El0EAAASIAMAAAEDKAAOAygAAgQIABJZBAgAEl0ECAASIAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5v
bkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU0NfYmNjNTlkZjQwYjhjNDA4ODk2MWFjN2Nk
Y2NlMmY2MjIAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxOAAASQEAGi5ORVRGcmFtZXdvcmss
VmVyc2lvbj12NC41AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjUE
AQAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNj
b3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1i
NzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAA
AAAAAAAAUEFEUEFEULQAAAAURgAAAAAAAAAAAAAuRgAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
IEYAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAY
AACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAAAOwD
AAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAAB
AAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIA
RgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsARM
AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAwADAANABiADAA
AAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBl
AAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAQwBfAGIA
YwBjADUAOQBkAGYANAAwAGIAOABjADQAMAA4ADgAOQA2ADEAYQBjADcAYwBkAGMAYwBlADIAZgA2
ADIAMgAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAAAHAA
KAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AYgBjAGMANQA5AGQAZgA0ADAAYgA4
AGMANAAwADgAOAA5ADYAMQBhAGMANwBjAGQAYwBjAGUAMgBmADYAMgAyAC4AZABsAGwAAABIABIA
AQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAg
ADIAMAAxADgAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgA
KAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwBiAGMAYwA1ADkAZABm
ADQAMABiADgAYwA0ADAAOAA4ADkANgAxAGEAYwA3AGMAZABjAGMAZQAyAGYANgAyADIALgBkAGwA
bAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AYgBjAGMANQA5AGQAZgA0
ADAAYgA4AGMANAAwADgAOAA5ADYAMQBhAGMANwBjAGQAYwBjAGUAMgBmADYAMgAyAAAANAAIAAEA
UAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgACAABAEEAcwBz
AGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAABANgAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_bcc59df40b8c4088961ac7cdcce2f622</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::FileName</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">96</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <outputs>
                <output
                  refId="Package\Data Flow Task 1\Script Component.Outputs[Output 0]"
                  hasSideEffects="true"
                  name="Output 0">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task 1\Script Component.Outputs[Output 0].Columns[StaffID]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task 1\Script Component.Outputs[Output 0].Columns[StaffID]"
                      name="StaffID" />
                    <outputColumn
                      refId="Package\Data Flow Task 1\Script Component.Outputs[Output 0].Columns[CampusID]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task 1\Script Component.Outputs[Output 0].Columns[CampusID]"
                      name="CampusID" />
                    <outputColumn
                      refId="Package\Data Flow Task 1\Script Component.Outputs[Output 0].Columns[FirstName]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task 1\Script Component.Outputs[Output 0].Columns[FirstName]"
                      name="FirstName" />
                    <outputColumn
                      refId="Package\Data Flow Task 1\Script Component.Outputs[Output 0].Columns[LastName]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task 1\Script Component.Outputs[Output 0].Columns[LastName]"
                      name="LastName" />
                    <outputColumn
                      refId="Package\Data Flow Task 1\Script Component.Outputs[Output 0].Columns[MiddleName]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task 1\Script Component.Outputs[Output 0].Columns[MiddleName]"
                      name="MiddleName" />
                    <outputColumn
                      refId="Package\Data Flow Task 1\Script Component.Outputs[Output 0].Columns[StaffType]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task 1\Script Component.Outputs[Output 0].Columns[StaffType]"
                      name="StaffType" />
                    <outputColumn
                      refId="Package\Data Flow Task 1\Script Component.Outputs[Output 0].Columns[Location]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task 1\Script Component.Outputs[Output 0].Columns[Location]"
                      name="Location" />
                    <outputColumn
                      refId="Package\Data Flow Task 1\Script Component.Outputs[Output 0].Columns[Department]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      lineageId="Package\Data Flow Task 1\Script Component.Outputs[Output 0].Columns[Department]"
                      name="Department" />
                    <outputColumn
                      refId="Package\Data Flow Task 1\Script Component.Outputs[Output 0].Columns[Phone]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task 1\Script Component.Outputs[Output 0].Columns[Phone]"
                      name="Phone" />
                    <outputColumn
                      refId="Package\Data Flow Task 1\Script Component.Outputs[Output 0].Columns[Email]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      lineageId="Package\Data Flow Task 1\Script Component.Outputs[Output 0].Columns[Email]"
                      name="Email" />
                    <outputColumn
                      refId="Package\Data Flow Task 1\Script Component.Outputs[Output 0].Columns[Address]"
                      codePage="1252"
                      dataType="str"
                      length="500"
                      lineageId="Package\Data Flow Task 1\Script Component.Outputs[Output 0].Columns[Address]"
                      name="Address" />
                    <outputColumn
                      refId="Package\Data Flow Task 1\Script Component.Outputs[Output 0].Columns[Address2]"
                      codePage="1252"
                      dataType="str"
                      length="500"
                      lineageId="Package\Data Flow Task 1\Script Component.Outputs[Output 0].Columns[Address2]"
                      name="Address2" />
                    <outputColumn
                      refId="Package\Data Flow Task 1\Script Component.Outputs[Output 0].Columns[City]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task 1\Script Component.Outputs[Output 0].Columns[City]"
                      name="City" />
                    <outputColumn
                      refId="Package\Data Flow Task 1\Script Component.Outputs[Output 0].Columns[State]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task 1\Script Component.Outputs[Output 0].Columns[State]"
                      name="State" />
                    <outputColumn
                      refId="Package\Data Flow Task 1\Script Component.Outputs[Output 0].Columns[Zip]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task 1\Script Component.Outputs[Output 0].Columns[Zip]"
                      name="Zip" />
                    <outputColumn
                      refId="Package\Data Flow Task 1\Script Component.Outputs[Output 0].Columns[Deactivate]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task 1\Script Component.Outputs[Output 0].Columns[Deactivate]"
                      name="Deactivate" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Data Flow Task 1.Paths[Output 0]"
              endId="Package\Data Flow Task 1\Multicast.Inputs[Multicast Input 1]"
              name="Output 0"
              startId="Package\Data Flow Task 1\Script Component.Outputs[Output 0]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="153,42"
          Id="Package\Data Flow Task"
          TopLeft="462,99" />
        <NodeLayout
          Size="162,42"
          Id="Package\Data Flow Task 1"
          TopLeft="848,77" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Data Flow Task">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="153,42"
          Id="Package\Data Flow Task\Flat File Source"
          TopLeft="200,25" />
        <NodeLayout
          Size="165,42"
          Id="Package\Data Flow Task\Script Component"
          TopLeft="241,135" />
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Flat File Source Output]"
          TopLeft="276.5,67">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="47,68"
              Start="0,0"
              End="47,60.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30" />
                  <mssgle:CubicBezierSegment
                    Point1="0,30"
                    Point2="0,34"
                    Point3="4,34" />
                  <mssgle:LineSegment
                    End="43,34" />
                  <mssgle:CubicBezierSegment
                    Point1="43,34"
                    Point2="47,34"
                    Point3="47,38" />
                  <mssgle:LineSegment
                    End="47,60.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="122,42"
          Id="Package\Data Flow Task\Multicast"
          TopLeft="398,290" />
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Output 0]"
          TopLeft="323.5,177">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="135.5,113"
              Start="0,0"
              End="135.5,105.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,52.5"
                    Point2="0,56.5"
                    Point3="4,56.5" />
                  <mssgle:LineSegment
                    End="131.5,56.5" />
                  <mssgle:CubicBezierSegment
                    Point1="131.5,56.5"
                    Point2="135.5,56.5"
                    Point3="135.5,60.5" />
                  <mssgle:LineSegment
                    End="135.5,105.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="59.75,61.5,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <TaskHost
    design-time-name="Package\Data Flow Task 1">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="165,42"
          Id="Package\Data Flow Task 1\Script Component"
          TopLeft="437,45" />
        <NodeLayout
          Size="122,42"
          Id="Package\Data Flow Task 1\Multicast"
          TopLeft="481,179" />
        <EdgeLayout
          Id="Package\Data Flow Task 1.Paths[Output 0]"
          TopLeft="519.5,87">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="22.5,92"
              Start="0,0"
              End="22.5,84.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42" />
                  <mssgle:CubicBezierSegment
                    Point1="0,42"
                    Point2="0,46"
                    Point3="4,46" />
                  <mssgle:LineSegment
                    End="18.5,46" />
                  <mssgle:CubicBezierSegment
                    Point1="18.5,46"
                    Point2="22.5,46"
                    Point3="22.5,50" />
                  <mssgle:LineSegment
                    End="22.5,84.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="3.25,51,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>